query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191567.70..191567.91 rows=1 width=236) (actual time=2817.169..2817.169 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191567.70..191568.94 rows=6 width=236) (actual time=2817.168..2817.168 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191567.70..191567.76 rows=24 width=236) (actual time=2817.143..2817.144 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191564.58..191567.15 rows=24 width=236) (actual time=2816.261..2817.185 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190564.58..190564.75 rows=6 width=236) (actual time=2809.874..2809.881 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.38 rows=1481255 width=25) (actual time=0.071..617.153 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 13.058 ms
 Execution time: 2818.060 ms
(16 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191567.70..191567.91 rows=1 width=236) (actual time=2568.265..2568.266 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191567.70..191568.94 rows=6 width=236) (actual time=2568.263..2568.263 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191567.70..191567.76 rows=24 width=236) (actual time=2568.232..2568.232 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191564.58..191567.15 rows=24 width=236) (actual time=2567.378..2568.282 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190564.58..190564.75 rows=6 width=236) (actual time=2564.421..2564.428 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.38 rows=1481255 width=25) (actual time=0.027..362.353 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 0.435 ms
 Execution time: 2568.405 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69511.54..69511.54 rows=1 width=192) (actual time=619.255..619.277 rows=100 loops=1)
   ->  Sort  (cost=69511.54..69511.54 rows=1 width=192) (actual time=619.254..619.269 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=44372.64..69511.53 rows=1 width=192) (actual time=413.653..618.698 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=1039 width=30) (actual time=0.014..82.272 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44372.20..44772.20 rows=160000 width=172) (actual time=413.207..444.159 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..30542.03 rows=160000 width=172) (actual time=5.454..298.098 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..187.040 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=5.444..5.444 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.228..5.019 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..3.579 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.225..0.225 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.219..0.224 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.52..18.53 rows=1 width=32) (actual time=0.118..0.118 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.105..0.116 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.099..0.113 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.098..0.108 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.094..0.095 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 20.920 ms
 Execution time: 623.504 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69511.54..69511.54 rows=1 width=192) (actual time=384.657..384.672 rows=100 loops=1)
   ->  Sort  (cost=69511.54..69511.54 rows=1 width=192) (actual time=384.656..384.661 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=44372.64..69511.53 rows=1 width=192) (actual time=278.077..384.272 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=1039 width=30) (actual time=0.014..50.436 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44372.20..44772.20 rows=160000 width=172) (actual time=277.990..308.024 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..30542.03 rows=160000 width=172) (actual time=2.486..168.302 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..44.878 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=2.479..2.479 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.018..2.026 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.527 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.014..0.014 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.52..18.53 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.009..0.016 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.005..0.014 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.623 ms
 Execution time: 388.838 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=267457.41..267457.44 rows=10 width=44) (actual time=1494.543..1494.545 rows=10 loops=1)
   ->  Sort  (cost=267457.41..268246.02 rows=315444 width=44) (actual time=1494.542..1494.543 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=251177.46..260640.78 rows=315444 width=44) (actual time=1471.910..1492.350 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=251177.46..251966.07 rows=315444 width=24) (actual time=1471.890..1474.210 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Gather  (cost=6849.68..222366.35 rows=315444 width=24) (actual time=63.886..1462.425 rows=30533 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Nested Loop  (cost=5849.68..189821.95 rows=101756 width=24) (actual time=55.923..1454.484 rows=7633 loops=4)
                                 ->  Hash Join  (cost=5849.25..39364.98 rows=46663 width=12) (actual time=54.707..244.121 rows=36516 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231924 width=16) (actual time=0.316..139.053 rows=180569 loops=4)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 194431
                                       ->  Hash  (cost=5472.00..5472.00 rows=30180 width=4) (actual time=54.059..54.059 rows=30142 loops=4)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30180 width=4) (actual time=0.020..48.892 rows=30142 loops=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.033..0.033 rows=0 loops=146063)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 4
 Planning time: 18.343 ms
 Execution time: 1494.680 ms
(29 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=267457.41..267457.44 rows=10 width=44) (actual time=317.624..317.625 rows=10 loops=1)
   ->  Sort  (cost=267457.41..268246.02 rows=315444 width=44) (actual time=317.622..317.622 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=251177.46..260640.78 rows=315444 width=44) (actual time=294.843..315.331 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=251177.46..251966.07 rows=315444 width=24) (actual time=294.824..297.218 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Gather  (cost=6849.68..222366.35 rows=315444 width=24) (actual time=30.711..286.304 rows=30533 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Nested Loop  (cost=5849.68..189821.95 rows=101756 width=24) (actual time=32.751..283.678 rows=7633 loops=4)
                                 ->  Hash Join  (cost=5849.25..39364.98 rows=46663 width=12) (actual time=32.651..136.452 rows=36516 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231924 width=16) (actual time=0.010..63.873 rows=180569 loops=4)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 194431
                                       ->  Hash  (cost=5472.00..5472.00 rows=30180 width=4) (actual time=32.379..32.379 rows=30142 loops=4)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30180 width=4) (actual time=0.015..25.578 rows=30142 loops=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.004..0.004 rows=0 loops=146063)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 4
 Planning time: 0.916 ms
 Execution time: 317.758 ms
(29 rows)

query 4 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84227.78..84227.82 rows=1 width=24) (actual time=2108.356..2108.357 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=84227.78..84227.95 rows=5 width=24) (actual time=2108.355..2108.355 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=84227.78..84227.82 rows=15 width=24) (actual time=2108.352..2108.352 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=84225.94..84227.49 rows=15 width=24) (actual time=2107.433..2117.645 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=83225.94..83225.99 rows=5 width=24) (actual time=2098.451..2098.451 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.43..83137.97 rows=17595 width=16) (actual time=0.497..2088.759 rows=12850 loops=4)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=17595 width=20) (actual time=0.025..181.071 rows=13993 loops=4)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 361007
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.135..0.135 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 15.675 ms
 Execution time: 2118.602 ms
(21 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84227.78..84227.82 rows=1 width=24) (actual time=133.711..133.711 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=84227.78..84227.95 rows=5 width=24) (actual time=133.709..133.710 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=84227.78..84227.82 rows=15 width=24) (actual time=133.706..133.706 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=84225.94..84227.49 rows=15 width=24) (actual time=133.638..146.915 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=83225.94..83225.99 rows=5 width=24) (actual time=130.358..130.360 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.43..83137.97 rows=17595 width=16) (actual time=0.027..126.410 rows=12850 loops=4)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=17595 width=20) (actual time=0.011..67.403 rows=13993 loops=4)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 361007
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 0.605 ms
 Execution time: 147.003 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=89272.22..89272.22 rows=1 width=58) (actual time=2321.467..2321.467 rows=1 loops=1)
   ->  Sort  (cost=89272.22..89272.28 rows=25 width=58) (actual time=2321.466..2321.466 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=89271.03..89272.10 rows=25 width=58) (actual time=2321.442..2321.453 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=89271.03..89271.22 rows=75 width=58) (actual time=2321.437..2321.437 rows=20 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 27kB
                     ->  Gather  (cost=89231.83..89268.70 rows=75 width=58) (actual time=2320.482..2331.862 rows=20 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Partial GroupAggregate  (cost=88231.83..88261.20 rows=25 width=58) (actual time=2314.003..2314.900 rows=5 loops=4)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=88231.83..88237.64 rows=2324 width=38) (actual time=2313.767..2313.900 rows=1885 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 197kB
                                       ->  Hash Join  (cost=6810.46..88101.90 rows=2324 width=38) (actual time=71.391..2312.126 rows=1885 loops=4)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=6337.46..87169.87 rows=58105 width=50) (actual time=66.254..2294.511 rows=45609 loops=4)
                                                   ->  Hash Join  (cost=6337.03..40143.63 rows=14523 width=38) (actual time=65.715..246.616 rows=11324 loops=4)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=72614 width=8) (actual time=0.328..163.615 rows=56661 loops=4)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 318339
                                                         ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=65.349..65.349 rows=29952 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                               ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.104..59.403 rows=29952 loops=4)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.010..36.811 rows=150000 loops=4)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.032..0.032 rows=5 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.021..0.026 rows=5 loops=4)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=4)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.172..0.179 rows=4 loops=45297)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.043..4.043 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.018..2.220 rows=10000 loops=4)
 Planning time: 24.443 ms
 Execution time: 2332.002 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=89272.22..89272.22 rows=1 width=58) (actual time=196.892..196.892 rows=1 loops=1)
   ->  Sort  (cost=89272.22..89272.28 rows=25 width=58) (actual time=196.891..196.891 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=89271.03..89272.10 rows=25 width=58) (actual time=196.863..196.876 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=89271.03..89271.22 rows=75 width=58) (actual time=196.854..196.860 rows=20 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 27kB
                     ->  Gather  (cost=89231.83..89268.70 rows=75 width=58) (actual time=195.890..211.859 rows=20 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Partial GroupAggregate  (cost=88231.83..88261.20 rows=25 width=58) (actual time=192.338..193.216 rows=5 loops=4)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=88231.83..88237.64 rows=2324 width=38) (actual time=192.109..192.239 rows=1885 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 197kB
                                       ->  Hash Join  (cost=6810.46..88101.90 rows=2324 width=38) (actual time=39.541..191.348 rows=1885 loops=4)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=6337.46..87169.87 rows=58105 width=50) (actual time=36.365..179.946 rows=45609 loops=4)
                                                   ->  Hash Join  (cost=6337.03..40143.63 rows=14523 width=38) (actual time=36.345..121.493 rows=11324 loops=4)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=72614 width=8) (actual time=0.012..71.925 rows=56661 loops=4)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 318339
                                                         ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=36.301..36.301 rows=29952 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                               ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.051..30.956 rows=29952 loops=4)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.016..9.153 rows=150000 loops=4)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.029..0.029 rows=5 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.019..0.024 rows=5 loops=4)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.007 rows=25 loops=4)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=4)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=4)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.062..3.062 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.478 rows=10000 loops=4)
 Planning time: 3.139 ms
 Execution time: 211.996 ms
(47 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108560.33..108560.34 rows=1 width=32) (actual time=1391.693..1391.693 rows=1 loops=1)
   ->  Aggregate  (cost=108560.33..108560.34 rows=1 width=32) (actual time=1391.692..1391.692 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21177.18..107968.95 rows=118276 width=12) (actual time=142.135..1296.849 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21147.61 rows=118276 width=0) (actual time=130.812..130.812 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 11.770 ms
 Execution time: 1391.747 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108560.33..108560.34 rows=1 width=32) (actual time=232.946..232.946 rows=1 loops=1)
   ->  Aggregate  (cost=108560.33..108560.34 rows=1 width=32) (actual time=232.945..232.945 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21177.18..107968.95 rows=118276 width=12) (actual time=111.822..189.719 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21147.61 rows=118276 width=0) (actual time=101.304..101.304 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.387 ms
 Execution time: 232.984 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=166544.79..166544.83 rows=1 width=92) (actual time=1546.389..1546.389 rows=1 loops=1)
   ->  GroupAggregate  (cost=166544.79..166756.12 rows=6038 width=92) (actual time=1546.388..1546.388 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=166544.79..166559.89 rows=6038 width=72) (actual time=1545.433..1545.552 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Gather  (cost=7311.23..166165.61 rows=6038 width=72) (actual time=72.848..1554.814 rows=5729 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6311.23..164541.36 rows=1948 width=72) (actual time=66.407..1535.849 rows=1432 loops=4)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                           Rows Removed by Join Filter: 1457
                           ->  Nested Loop  (cost=5931.33..163901.33 rows=46803 width=46) (actual time=62.386..1522.053 rows=36276 loops=4)
                                 ->  Hash Join  (cost=5930.90..39102.23 rows=38710 width=30) (actual time=62.027..277.067 rows=29619 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.038..136.669 rows=375000 loops=4)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=61.963..61.963 rows=11896 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.020..59.257 rows=11896 loops=4)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..38.825 rows=150000 loops=4)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=4)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.041..0.042 rows=1 loops=118477)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=2.888..2.888 rows=794 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.032..2.767 rows=794 loops=4)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.515 rows=10000 loops=4)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=4)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=4)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 24.659 ms
 Execution time: 1559.211 ms
(43 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=166544.79..166544.83 rows=1 width=92) (actual time=279.743..279.744 rows=1 loops=1)
   ->  GroupAggregate  (cost=166544.79..166756.12 rows=6038 width=92) (actual time=279.741..279.741 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=166544.79..166559.89 rows=6038 width=72) (actual time=278.783..278.908 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Gather  (cost=7311.23..166165.61 rows=6038 width=72) (actual time=33.669..292.629 rows=5729 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6311.23..164541.36 rows=1948 width=72) (actual time=34.233..272.109 rows=1432 loops=4)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                           Rows Removed by Join Filter: 1457
                           ->  Nested Loop  (cost=5931.33..163901.33 rows=46803 width=46) (actual time=32.009..263.874 rows=36276 loops=4)
                                 ->  Hash Join  (cost=5930.90..39102.23 rows=38710 width=30) (actual time=31.981..132.362 rows=29619 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.006..31.038 rows=375000 loops=4)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=31.953..31.953 rows=11896 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.026..29.877 rows=11896 loops=4)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.012..8.822 rows=150000 loops=4)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=4)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.975..1.975 rows=794 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.032..1.889 rows=794 loops=4)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..0.631 rows=10000 loops=4)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.016..0.016 rows=2 loops=4)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.013..0.015 rows=2 loops=4)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 2.057 ms
 Execution time: 296.277 ms
(43 rows)

query 8 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81087.39..81087.44 rows=1 width=40) (actual time=2767.001..2767.001 rows=1 loops=1)
   ->  GroupAggregate  (cost=81087.39..81196.38 rows=2406 width=40) (actual time=2767.000..2767.000 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=81087.39..81093.49 rows=2438 width=46) (actual time=2766.072..2766.192 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Gather  (cost=51115.17..80950.24 rows=2438 width=46) (actual time=774.665..2775.612 rows=2485 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Hash Join  (cost=50115.17..79699.33 rows=1016 width=46) (actual time=769.063..2757.433 rows=828 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=50113.61..79678.71 rows=1016 width=20) (actual time=768.986..2756.057 rows=828 loops=3)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=49665.61..79216.74 rows=1016 width=20) (actual time=765.227..2751.852 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Nested Loop  (cost=0.43..29478.91 rows=16666 width=20) (actual time=1.043..1984.412 rows=13231 loops=3)
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.259..24.361 rows=440 loops=3)
                                                   Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                   Rows Removed by Filter: 66227
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.55 rows=30 width=24) (actual time=0.329..4.439 rows=30 loops=1320)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                       ->  Hash  (cost=48522.33..48522.33 rows=91428 width=8) (actual time=761.086..761.086 rows=91179 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                             ->  Hash Join  (cost=12905.65..48522.33 rows=91428 width=8) (actual time=128.068..739.969 rows=91179 loops=3)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Bitmap Heap Scan on orders  (cost=6568.62..39556.74 rows=457141 width=12) (actual time=65.504..570.255 rows=457263 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Heap Blocks: exact=26131
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6454.34 rows=457141 width=0) (actual time=61.533..61.533 rows=457263 loops=3)
                                                               Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=62.502..62.502 rows=29952 loops=3)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                         ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.036..57.879 rows=29952 loops=3)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.011..36.641 rows=150000 loops=3)
                                                               ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.021..0.021 rows=5 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.016..0.020 rows=5 loops=3)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=3)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=3)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.741..3.741 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..2.399 rows=10000 loops=3)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.015 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=3)
 Planning time: 27.847 ms
 Execution time: 2777.853 ms
(53 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81087.39..81087.44 rows=1 width=40) (actual time=287.928..287.928 rows=1 loops=1)
   ->  GroupAggregate  (cost=81087.39..81196.38 rows=2406 width=40) (actual time=287.926..287.926 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=81087.39..81093.49 rows=2438 width=46) (actual time=287.014..287.120 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Gather  (cost=51115.17..80950.24 rows=2438 width=46) (actual time=251.120..299.834 rows=2485 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Hash Join  (cost=50115.17..79699.33 rows=1016 width=46) (actual time=248.722..283.752 rows=828 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=50113.61..79678.71 rows=1016 width=20) (actual time=248.629..283.243 rows=828 loops=3)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=49665.61..79216.74 rows=1016 width=20) (actual time=245.672..280.000 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Nested Loop  (cost=0.43..29478.91 rows=16666 width=20) (actual time=0.054..31.801 rows=13231 loops=3)
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.034..9.215 rows=440 loops=3)
                                                   Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                   Rows Removed by Filter: 66227
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.55 rows=30 width=24) (actual time=0.004..0.046 rows=30 loops=1320)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                       ->  Hash  (cost=48522.33..48522.33 rows=91428 width=8) (actual time=245.439..245.439 rows=91179 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                             ->  Hash Join  (cost=12905.65..48522.33 rows=91428 width=8) (actual time=77.500..230.468 rows=91179 loops=3)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Bitmap Heap Scan on orders  (cost=6568.62..39556.74 rows=457141 width=12) (actual time=44.790..126.286 rows=457263 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Heap Blocks: exact=26131
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6454.34 rows=457141 width=0) (actual time=40.952..40.952 rows=457263 loops=3)
                                                               Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=32.687..32.687 rows=29952 loops=3)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                         ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.044..28.789 rows=29952 loops=3)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.019..8.822 rows=150000 loops=3)
                                                               ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.020..0.020 rows=5 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.015..0.019 rows=5 loops=3)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=3)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=3)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.935..2.935 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.580 rows=10000 loops=3)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.020 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.015 rows=25 loops=3)
 Planning time: 3.125 ms
 Execution time: 301.614 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=198629.61..198629.61 rows=1 width=66) (actual time=5363.578..5363.579 rows=1 loops=1)
   ->  Sort  (cost=198629.61..198779.98 rows=60150 width=66) (actual time=5363.577..5363.577 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=197276.23..198328.86 rows=60150 width=66) (actual time=5363.402..5363.502 rows=175 loops=1)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Gather  (cost=182990.61..196073.23 rows=120300 width=66) (actual time=5362.167..5391.628 rows=525 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial HashAggregate  (cost=181990.61..183043.23 rows=60150 width=66) (actual time=5357.127..5357.267 rows=175 loops=3)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=66328.92..178896.54 rows=176804 width=57) (actual time=654.018..5226.625 rows=108643 loops=3)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=587.92..100305.87 rows=176804 width=53) (actual time=6.529..4331.326 rows=108643 loops=3)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=587.49..25163.16 rows=23568 width=48) (actual time=5.454..218.508 rows=14507 loops=3)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.42..24252.04 rows=23568 width=18) (actual time=0.116..205.971 rows=14507 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5892 width=4) (actual time=0.074..30.695 rows=3627 loops=3)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 63040
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.044..0.047 rows=4 loops=10880)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Hash  (cost=462.06..462.06 rows=10000 width=30) (actual time=5.304..5.304 rows=10000 loops=3)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 734kB
                                                   ->  Hash Join  (cost=1.56..462.06 rows=10000 width=30) (actual time=0.030..3.858 rows=10000 loops=3)
                                                         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.613 rows=10000 loops=3)
                                                         ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.015 rows=25 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.009 rows=25 loops=3)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.045..0.280 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=644.347..644.348 rows=1500000 loops=3)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.025..418.913 rows=1500000 loops=3)
 Planning time: 30.240 ms
 Execution time: 5392.497 ms
(38 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=198629.61..198629.61 rows=1 width=66) (actual time=963.997..963.997 rows=1 loops=1)
   ->  Sort  (cost=198629.61..198779.98 rows=60150 width=66) (actual time=963.996..963.996 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=197276.23..198328.86 rows=60150 width=66) (actual time=963.828..963.932 rows=175 loops=1)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Gather  (cost=182990.61..196073.23 rows=120300 width=66) (actual time=963.281..989.933 rows=525 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial HashAggregate  (cost=181990.61..183043.23 rows=60150 width=66) (actual time=960.820..960.961 rows=175 loops=3)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=66328.92..178896.54 rows=176804 width=57) (actual time=427.157..850.956 rows=108643 loops=3)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=587.92..100305.87 rows=176804 width=53) (actual time=4.922..208.364 rows=108643 loops=3)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=587.49..25163.16 rows=23568 width=48) (actual time=4.895..43.786 rows=14507 loops=3)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.42..24252.04 rows=23568 width=18) (actual time=0.026..33.299 rows=14507 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5892 width=4) (actual time=0.015..16.409 rows=3627 loops=3)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 63040
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Hash  (cost=462.06..462.06 rows=10000 width=30) (actual time=4.834..4.834 rows=10000 loops=3)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 734kB
                                                   ->  Hash Join  (cost=1.56..462.06 rows=10000 width=30) (actual time=0.033..3.268 rows=10000 loops=3)
                                                         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..0.783 rows=10000 loops=3)
                                                         ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.014 rows=25 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.011 rows=25 loops=3)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.009 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=420.178..420.178 rows=1500000 loops=3)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.019..198.883 rows=1500000 loops=3)
 Planning time: 4.123 ms
 Execution time: 990.798 ms
(38 rows)

query 10 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=112509.28..112509.33 rows=20 width=202) (actual time=2159.605..2159.610 rows=20 loops=1)
   ->  Sort  (cost=112509.28..112655.39 rows=58445 width=202) (actual time=2159.603..2159.605 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=110223.52..110954.08 rows=58445 width=202) (actual time=2130.749..2148.934 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=7973.99..109492.96 rows=58445 width=182) (actual time=107.548..2014.731 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6973.99..102648.46 rows=18853 width=182) (actual time=99.048..2070.717 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=6972.43..102387.66 rows=18853 width=160) (actual time=98.580..2061.269 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=0.43..95156.44 rows=18853 width=16) (actual time=0.318..1949.109 rows=28587 loops=4)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=19116 width=8) (actual time=0.080..191.805 rows=14278 loops=4)
                                             Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Rows Removed by Filter: 360722
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.119..0.122 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=97.435..97.435 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.036..50.840 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.029..0.029 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.021..0.023 rows=25 loops=4)
 Planning time: 26.051 ms
 Execution time: 2159.882 ms
(29 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=112509.28..112509.33 rows=20 width=202) (actual time=300.668..300.672 rows=20 loops=1)
   ->  Sort  (cost=112509.28..112655.39 rows=58445 width=202) (actual time=300.667..300.671 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=110223.52..110954.08 rows=58445 width=202) (actual time=271.657..290.042 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=7973.99..109492.96 rows=58445 width=182) (actual time=73.654..182.443 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6973.99..102648.46 rows=18853 width=182) (actual time=72.983..227.376 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=6972.43..102387.66 rows=18853 width=160) (actual time=72.595..220.795 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=0.43..95156.44 rows=18853 width=16) (actual time=0.039..137.893 rows=28587 loops=4)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=19116 width=8) (actual time=0.012..64.558 rows=14278 loops=4)
                                             Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Rows Removed by Filter: 360722
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=72.099..72.099 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.020..28.530 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.031..0.031 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.024..0.027 rows=25 loops=4)
 Planning time: 1.219 ms
 Execution time: 300.932 ms
(29 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22743.58..22743.58 rows=1 width=36) (actual time=734.001..734.002 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.78..10891.80 rows=1 width=32) (actual time=32.209..32.209 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.78 rows=32000 width=10) (actual time=0.064..20.015 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.059..0.291 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.050..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.033..0.033 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11851.78..11931.78 rows=32000 width=36) (actual time=733.999..733.999 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.78..11691.78 rows=32000 width=36) (actual time=725.126..733.843 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.78 rows=32000 width=14) (actual time=0.953..660.254 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.751..2.920 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.741..2.826 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.674..0.674 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.095..1.581 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 13.180 ms
 Execution time: 734.282 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22743.58..22743.58 rows=1 width=36) (actual time=89.761..89.761 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.78..10891.80 rows=1 width=32) (actual time=32.174..32.174 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.78 rows=32000 width=10) (actual time=0.064..20.028 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.059..0.286 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.048..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.033..0.033 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11851.78..11931.78 rows=32000 width=36) (actual time=89.761..89.761 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.78..11691.78 rows=32000 width=36) (actual time=80.726..89.388 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.78 rows=32000 width=14) (actual time=0.070..29.184 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.065..0.419 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.056..0.359 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.038..0.038 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.059 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.873 ms
 Execution time: 89.846 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170700.00..170700.05 rows=1 width=27) (actual time=1149.514..1149.514 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170700.00..170700.35 rows=7 width=27) (actual time=1149.512..1149.512 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=170700.00..170700.07 rows=28 width=27) (actual time=1149.507..1149.507 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=170550.59..170699.32 rows=28 width=27) (actual time=1144.281..1151.956 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=169550.59..169696.52 rows=7 width=27) (actual time=1135.119..1136.422 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Sort  (cost=169550.59..169568.83 rows=7293 width=27) (actual time=1133.841..1134.234 rows=6191 loops=5)
                                 Sort Key: lineitem.l_shipmode
                                 Sort Method: quicksort  Memory: 689kB
                                 ->  Nested Loop  (cost=0.43..169082.67 rows=7293 width=27) (actual time=0.459..1129.888 rows=6191 loops=5)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.89 rows=7293 width=15) (actual time=0.365..763.259 rows=6191 loops=5)
                                             Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                             Rows Removed by Filter: 1194052
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.058..0.058 rows=1 loops=30953)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 15.797 ms
 Execution time: 1152.075 ms
(22 rows)

SET
SET
SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170700.00..170700.05 rows=1 width=27) (actual time=435.826..435.826 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170700.00..170700.35 rows=7 width=27) (actual time=435.826..435.826 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=170700.00..170700.07 rows=28 width=27) (actual time=435.820..435.821 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=170550.59..170699.32 rows=28 width=27) (actual time=431.912..437.896 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=169550.59..169696.52 rows=7 width=27) (actual time=429.300..430.608 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Sort  (cost=169550.59..169568.83 rows=7293 width=27) (actual time=427.685..428.410 rows=6191 loops=5)
                                 Sort Key: lineitem.l_shipmode
                                 Sort Method: quicksort  Memory: 739kB
                                 ->  Nested Loop  (cost=0.43..169082.67 rows=7293 width=27) (actual time=0.173..424.091 rows=6191 loops=5)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.89 rows=7293 width=15) (actual time=0.157..391.446 rows=6191 loops=5)
                                             Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                             Rows Removed by Filter: 1194052
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=30953)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 0.620 ms
 Execution time: 437.970 ms
(22 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81221.56..81221.57 rows=1 width=16) (actual time=1633.499..1633.499 rows=1 loops=1)
   ->  Sort  (cost=81221.56..81222.06 rows=200 width=16) (actual time=1633.498..1633.498 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81218.56..81220.56 rows=200 width=16) (actual time=1633.474..1633.479 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77468.56..78968.56 rows=150000 width=12) (actual time=1587.747..1613.601 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..70044.26 rows=1484861 width=8) (actual time=33.040..1125.117 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484861 width=8) (actual time=0.331..639.401 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.413..32.413 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.285..16.134 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 14.566 ms
 Execution time: 1634.730 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81221.56..81221.57 rows=1 width=16) (actual time=1417.125..1417.125 rows=1 loops=1)
   ->  Sort  (cost=81221.56..81222.06 rows=200 width=16) (actual time=1417.123..1417.123 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81218.56..81220.56 rows=200 width=16) (actual time=1417.099..1417.103 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77468.56..78968.56 rows=150000 width=12) (actual time=1370.922..1397.324 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..70044.26 rows=1484861 width=8) (actual time=28.477..945.664 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484861 width=8) (actual time=0.013..492.105 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.143..28.143 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.039..12.569 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.583 ms
 Execution time: 1417.775 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77973.12..77973.13 rows=1 width=32) (actual time=846.218..846.218 rows=1 loops=1)
   ->  Aggregate  (cost=77973.12..77973.13 rows=1 width=32) (actual time=846.217..846.217 rows=1 loops=1)
         ->  Hash Join  (cost=9808.08..76654.82 rows=75331 width=33) (actual time=107.316..770.844 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1209.08..67020.02 rows=75331 width=16) (actual time=20.017..637.289 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1190.24 rows=75331 width=0) (actual time=14.031..14.031 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=86.887..86.887 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.008..55.099 rows=200000 loops=1)
 Planning time: 13.876 ms
 Execution time: 846.287 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77973.12..77973.13 rows=1 width=32) (actual time=208.556..208.556 rows=1 loops=1)
   ->  Aggregate  (cost=77973.12..77973.13 rows=1 width=32) (actual time=208.555..208.555 rows=1 loops=1)
         ->  Hash Join  (cost=9808.08..76654.82 rows=75331 width=33) (actual time=72.784..159.757 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1209.08..67020.02 rows=75331 width=16) (actual time=15.721..69.489 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1190.24 rows=75331 width=0) (actual time=9.505..9.505 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=56.673..56.673 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..27.643 rows=200000 loops=1)
 Planning time: 0.677 ms
 Execution time: 208.676 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246782.11..246782.17 rows=1 width=103) (actual time=1508.967..1508.968 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122201.66..122201.67 rows=1 width=32) (actual time=232.308..232.308 rows=1 loops=1)
           ->  HashAggregate  (cost=121952.58..122077.12 rows=9963 width=36) (actual time=229.888..231.658 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3669.78..119663.46 rows=228912 width=16) (actual time=33.332..98.575 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3612.55 rows=228912 width=0) (actual time=23.509..23.509 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124580.44..125173.39 rows=9963 width=103) (actual time=1508.965..1508.965 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.364..4.376 rows=8449 loops=1)
         ->  Sort  (cost=124580.16..124605.06 rows=9963 width=36) (actual time=1504.126..1504.126 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123669.42..123918.50 rows=9963 width=36) (actual time=1502.478..1504.117 rows=1 loops=1)
                     ->  HashAggregate  (cost=123669.42..123818.87 rows=9963 width=36) (actual time=1502.477..1504.114 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3669.78..119663.46 rows=228912 width=16) (actual time=47.601..1040.509 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3612.55 rows=228912 width=0) (actual time=36.961..36.961 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 12.098 ms
 Execution time: 1510.032 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246782.11..246782.17 rows=1 width=103) (actual time=497.759..497.760 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122201.66..122201.67 rows=1 width=32) (actual time=231.139..231.139 rows=1 loops=1)
           ->  HashAggregate  (cost=121952.58..122077.12 rows=9963 width=36) (actual time=228.743..230.484 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3669.78..119663.46 rows=228912 width=16) (actual time=33.162..98.162 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3612.55 rows=228912 width=0) (actual time=23.658..23.658 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124580.44..125173.39 rows=9963 width=103) (actual time=497.757..497.757 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.005..1.235 rows=8449 loops=1)
         ->  Sort  (cost=124580.16..124605.06 rows=9963 width=36) (actual time=496.061..496.061 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123669.42..123918.50 rows=9963 width=36) (actual time=494.454..496.056 rows=1 loops=1)
                     ->  HashAggregate  (cost=123669.42..123818.87 rows=9963 width=36) (actual time=494.454..496.056 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3669.78..119663.46 rows=228912 width=16) (actual time=36.802..127.667 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3612.55 rows=228912 width=0) (actual time=25.957..25.957 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.618 ms
 Execution time: 497.870 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34736.13..34736.13 rows=1 width=44) (actual time=617.187..617.187 rows=1 loops=1)
   ->  Sort  (cost=34736.13..34775.70 rows=15826 width=44) (actual time=617.185..617.185 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33773.64..34657.00 rows=15826 width=44) (actual time=560.729..614.315 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33773.64..33918.66 rows=58008 width=40) (actual time=560.708..573.084 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9809.98..29184.06 rows=58008 width=40) (actual time=98.194..304.899 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.017..139.851 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.292..5.416 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29004 width=40) (actual time=92.137..92.137 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29004 width=40) (actual time=0.010..85.909 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 16.861 ms
 Execution time: 617.244 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34736.13..34736.13 rows=1 width=44) (actual time=564.099..564.099 rows=1 loops=1)
   ->  Sort  (cost=34736.13..34775.70 rows=15826 width=44) (actual time=564.099..564.099 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33773.64..34657.00 rows=15826 width=44) (actual time=507.879..561.177 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33773.64..33918.66 rows=58008 width=40) (actual time=507.857..520.005 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9809.98..29184.06 rows=58008 width=40) (actual time=64.456..252.371 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.234..119.911 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.091..2.208 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29004 width=40) (actual time=62.193..62.193 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29004 width=40) (actual time=0.008..57.206 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.752 ms
 Execution time: 564.370 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=507348.06..507348.07 rows=1 width=32) (actual time=2788.540..2788.541 rows=1 loops=1)
   ->  Aggregate  (cost=507348.06..507348.07 rows=1 width=32) (actual time=2788.539..2788.539 rows=1 loops=1)
         ->  Merge Join  (cost=493936.03..507342.94 rows=2049 width=8) (actual time=2209.523..2788.436 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=482520.65..493356.75 rows=197020 width=36) (actual time=2121.170..2689.138 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=482520.65..484490.85 rows=788080 width=36) (actual time=2121.152..2237.213 rows=993484 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 51632kB
                           ->  Gather  (cost=298959.53..391482.91 rows=788080 width=36) (actual time=1123.018..1824.956 rows=997097 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Partial GroupAggregate  (cost=297959.53..311674.91 rows=197020 width=36) (actual time=1090.246..1598.777 rows=199419 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Sort  (cost=297959.53..301710.41 rows=1500351 width=9) (actual time=1090.229..1257.908 rows=1200243 loops=5)
                                             Sort Key: lineitem_1.l_partkey
                                             Sort Method: external merge  Disk: 23720kB
                                             ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.51 rows=1500351 width=9) (actual time=0.069..612.522 rows=1200243 loops=5)
               ->  Sort  (cost=11415.38..11430.98 rows=6241 width=21) (actual time=86.432..86.854 rows=6233 loops=1)
                     Sort Key: lineitem.l_partkey
                     Sort Method: quicksort  Memory: 679kB
                     ->  Gather  (cost=1000.43..11021.96 rows=6241 width=21) (actual time=1.313..84.736 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.43..9397.86 rows=2600 width=21) (actual time=0.616..82.440 rows=2078 loops=3)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.354..28.988 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.24 rows=30 width=17) (actual time=0.467..0.761 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 14.027 ms
 Execution time: 2798.499 ms
(34 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=507348.06..507348.07 rows=1 width=32) (actual time=2398.851..2398.851 rows=1 loops=1)
   ->  Aggregate  (cost=507348.06..507348.07 rows=1 width=32) (actual time=2398.850..2398.850 rows=1 loops=1)
         ->  Merge Join  (cost=493936.03..507342.94 rows=2049 width=8) (actual time=1812.877..2398.742 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=482520.65..493356.75 rows=197020 width=36) (actual time=1795.256..2370.177 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=482520.65..484490.85 rows=788080 width=36) (actual time=1795.238..1911.874 rows=993565 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 51640kB
                           ->  Gather  (cost=298959.53..391482.91 rows=788080 width=36) (actual time=779.178..1498.922 rows=997176 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Partial GroupAggregate  (cost=297959.53..311674.91 rows=197020 width=36) (actual time=751.993..1234.381 rows=199435 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Sort  (cost=297959.53..301710.41 rows=1500351 width=9) (actual time=751.979..911.621 rows=1200243 loops=5)
                                             Sort Key: lineitem_1.l_partkey
                                             Sort Method: external merge  Disk: 23696kB
                                             ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.51 rows=1500351 width=9) (actual time=0.357..217.524 rows=1200243 loops=5)
               ->  Sort  (cost=11415.38..11430.98 rows=6241 width=21) (actual time=15.681..16.090 rows=6233 loops=1)
                     Sort Key: lineitem.l_partkey
                     Sort Method: quicksort  Memory: 679kB
                     ->  Gather  (cost=1000.43..11021.96 rows=6241 width=21) (actual time=0.391..14.563 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.43..9397.86 rows=2600 width=21) (actual time=0.131..12.326 rows=2078 loops=3)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.112..9.328 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.24 rows=30 width=17) (actual time=0.007..0.038 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.846 ms
 Execution time: 2408.753 ms
(34 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1258816.31..1258816.56 rows=100 width=71) (actual time=4299.840..4299.842 rows=9 loops=1)
   ->  Sort  (cost=1258816.31..1266318.07 rows=3000702 width=71) (actual time=4299.839..4299.840 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1076615.84..1144131.64 rows=3000702 width=71) (actual time=4299.806..4299.823 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1076615.84..1084117.60 rows=3000702 width=44) (actual time=4299.801..4299.809 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=7007.20..694445.79 rows=3000702 width=44) (actual time=1031.738..4299.767 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=35.20..646214.14 rows=3000702 width=25) (actual time=964.343..4232.340 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..372093.58 rows=750000 width=24) (actual time=752.585..3419.918 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..304.146 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..294783.27 rows=1500351 width=4) (actual time=650.678..3048.186 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..276028.88 rows=1500351 width=4) (actual time=650.675..3048.170 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227267.48 rows=6001403 width=9) (actual time=0.003..1615.189 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227267.48 rows=6001403 width=9) (actual time=0.007..553.257 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.046..67.046 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..42.612 rows=150000 loops=1)
 Planning time: 20.567 ms
 Execution time: 4299.924 ms
(28 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1258816.31..1258816.56 rows=100 width=71) (actual time=3240.791..3240.793 rows=9 loops=1)
   ->  Sort  (cost=1258816.31..1266318.07 rows=3000702 width=71) (actual time=3240.790..3240.790 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1076615.84..1144131.64 rows=3000702 width=71) (actual time=3240.758..3240.774 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1076615.84..1084117.60 rows=3000702 width=44) (actual time=3240.753..3240.761 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=7007.20..694445.79 rows=3000702 width=44) (actual time=768.967..3240.719 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=35.20..646214.14 rows=3000702 width=25) (actual time=728.230..3199.956 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..372093.58 rows=750000 width=24) (actual time=515.076..2383.075 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..149.665 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..294783.27 rows=1500351 width=4) (actual time=458.868..2167.794 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..276028.88 rows=1500351 width=4) (actual time=458.865..2167.780 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227267.48 rows=6001403 width=9) (actual time=0.003..799.324 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227267.48 rows=6001403 width=9) (actual time=0.006..556.554 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.432..40.432 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.007..18.488 rows=150000 loops=1)
 Planning time: 0.988 ms
 Execution time: 3240.869 ms
(28 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18067.53..18067.54 rows=1 width=32) (actual time=876.034..876.034 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18067.53..18067.54 rows=1 width=32) (actual time=876.033..876.033 rows=1 loops=1)
         ->  Gather  (cost=18067.31..18067.52 rows=2 width=32) (actual time=872.638..878.822 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17067.31..17067.32 rows=1 width=32) (actual time=869.071..869.071 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17066.96 rows=46 width=12) (actual time=18.306..868.932 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.543..32.156 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.65 rows=1 width=21) (actual time=4.416..4.950 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 15.936 ms
 Execution time: 879.273 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18067.53..18067.54 rows=1 width=32) (actual time=31.620..31.620 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18067.53..18067.54 rows=1 width=32) (actual time=31.618..31.618 rows=1 loops=1)
         ->  Gather  (cost=18067.31..18067.52 rows=2 width=32) (actual time=31.565..35.481 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17067.31..17067.32 rows=1 width=32) (actual time=29.351..29.352 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17066.96 rows=46 width=12) (actual time=0.767..29.301 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.210..20.001 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.65 rows=1 width=21) (actual time=0.048..0.055 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 0.812 ms
 Execution time: 35.534 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280685.60..280685.61 rows=1 width=51) (actual time=3822.739..3822.740 rows=1 loops=1)
   ->  Sort  (cost=280685.60..280686.10 rows=200 width=51) (actual time=3822.738..3822.738 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=256258.68..280684.60 rows=200 width=51) (actual time=3638.844..3822.550 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.298..3.730 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.286..2.844 rows=10000 loops=1)
               ->  Materialize  (cost=256258.68..280229.29 rows=1 width=8) (actual time=7.213..8.444 rows=4371 loops=438)
                     ->  Merge Join  (cost=256258.68..280229.29 rows=1 width=8) (actual time=3159.318..3636.013 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=243369.91..259959.46 rows=488029 width=40) (actual time=2672.761..3116.358 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243369.91..245687.19 rows=926911 width=13) (actual time=2672.743..2783.096 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14856.27..141319.94 rows=926911 width=13) (actual time=164.842..2274.141 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14624.54 rows=926911 width=0) (actual time=145.360..145.360 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=12888.76..12908.96 rows=8080 width=16) (actual time=486.216..486.912 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=1000.42..12364.37 rows=8080 width=16) (actual time=0.990..482.105 rows=8748 loops=1)
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.410..3.088 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.095..22.480 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.199..0.217 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 18.903 ms
 Execution time: 3825.554 ms
(43 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=280685.60..280685.61 rows=1 width=51) (actual time=1398.212..1398.213 rows=1 loops=1)
   ->  Sort  (cost=280685.60..280686.10 rows=200 width=51) (actual time=1398.211..1398.212 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=256258.68..280684.60 rows=200 width=51) (actual time=1215.555..1398.056 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.015..1.754 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.595 rows=10000 loops=1)
               ->  Materialize  (cost=256258.68..280229.29 rows=1 width=8) (actual time=1.683..2.911 rows=4371 loops=438)
                     ->  Merge Join  (cost=256258.68..280229.29 rows=1 width=8) (actual time=736.920..1213.144 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=243369.91..259959.46 rows=488029 width=40) (actual time=721.191..1164.138 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243369.91..245687.19 rows=926911 width=13) (actual time=721.174..830.298 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14856.27..141319.94 rows=926911 width=13) (actual time=123.741..359.350 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14624.54 rows=926911 width=0) (actual time=105.197..105.197 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=12888.76..12908.96 rows=8080 width=16) (actual time=15.389..16.112 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=1000.42..12364.37 rows=8080 width=16) (actual time=0.259..13.259 rows=8748 loops=1)
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.244..4.471 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.032..8.739 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.360 ms
 Execution time: 1400.982 ms
(43 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=203122.89..203122.89 rows=1 width=34) (actual time=1475.407..1475.420 rows=100 loops=1)
   ->  Sort  (cost=203122.89..203122.89 rows=1 width=34) (actual time=1475.407..1475.412 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=203122.86..203122.88 rows=1 width=34) (actual time=1474.178..1474.940 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=203122.86..203122.86 rows=1 width=26) (actual time=1474.171..1474.456 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..203122.85 rows=1 width=26) (actual time=7.679..1452.834 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..203116.48 rows=1 width=34) (actual time=5.977..1038.924 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..203113.16 rows=1 width=38) (actual time=5.970..406.713 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..202113.06 rows=1 width=38) (actual time=1.878..1208.334 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133625.45 rows=20005 width=34) (actual time=1.784..806.551 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.38 rows=500117 width=8) (actual time=0.098..733.537 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.463..1.463 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.323..1.397 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.306..1.324 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.286..0.286 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.012..0.012 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 18.639 ms
 Execution time: 1475.598 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=203122.89..203122.89 rows=1 width=34) (actual time=692.613..692.625 rows=100 loops=1)
   ->  Sort  (cost=203122.89..203122.89 rows=1 width=34) (actual time=692.611..692.617 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=203122.86..203122.88 rows=1 width=34) (actual time=691.413..692.177 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=203122.86..203122.86 rows=1 width=26) (actual time=691.404..691.661 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..203122.85 rows=1 width=26) (actual time=1.742..671.403 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..203116.48 rows=1 width=34) (actual time=0.963..426.683 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..203113.16 rows=1 width=38) (actual time=0.957..52.303 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..202113.06 rows=1 width=38) (actual time=1.243..458.918 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133625.45 rows=20005 width=34) (actual time=1.233..356.675 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.38 rows=500117 width=8) (actual time=0.023..294.141 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.121..1.121 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.074..1.061 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.058..0.991 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.038..0.038 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 1.901 ms
 Execution time: 693.019 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14817.18..14817.20 rows=1 width=72) (actual time=181.836..181.836 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=45.819..45.819 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=45.761..45.886 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=40.640..40.640 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.023..38.424 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8574.35..8594.97 rows=750 width=72) (actual time=181.835..181.835 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8574.35..8576.22 rows=750 width=38) (actual time=181.587..181.640 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8538.53 rows=750 width=38) (actual time=45.881..179.519 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=45.849..106.130 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 14.870 ms
 Execution time: 181.962 ms
(24 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14817.18..14817.20 rows=1 width=72) (actual time=123.905..123.906 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=32.243..32.243 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=32.194..32.305 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=30.256..30.256 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.017..28.262 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8574.35..8594.97 rows=750 width=72) (actual time=123.904..123.904 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8574.35..8576.22 rows=750 width=38) (actual time=123.661..123.715 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8538.53 rows=750 width=38) (actual time=32.285..121.880 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=32.271..86.877 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.627 ms
 Execution time: 124.027 ms
(24 rows)

