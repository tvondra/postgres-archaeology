query 1 run 1
SET
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=395197.65..395197.65 rows=1 width=236)
   ->  Sort  (cost=395197.65..395197.67 rows=6 width=236)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=395197.46..395197.62 rows=6 width=236)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.50 rows=5932113 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(7 rows)

query 2 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48472.03..48472.03 rows=1 width=192)
   ->  Sort  (cost=48472.03..48472.03 rows=1 width=192)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=32942.01..48472.02 rows=1 width=192)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=913 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172)
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166)
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
(36 rows)

query 3 run 1
SET
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285527.63..285527.66 rows=10 width=44)
   ->  Sort  (cost=285527.63..286319.57 rows=316776 width=44)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         ->  HashAggregate  (cost=271010.30..278682.22 rows=316776 width=44)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4
               ->  Hash Join  (cost=51355.82..254354.81 rows=316776 width=24)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187573.50 rows=3268880 width=16)
                           Filter: (l_shipdate > '1995-03-07'::date)
                     ->  Hash  (cost=49538.82..49538.82 rows=145360 width=12)
                           ->  Hash Join  (cost=12435.02..49538.82 rows=145360 width=12)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6587.33..41786.72 rows=725471 width=16)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6405.96 rows=725471 width=0)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30055 width=4)
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30055 width=4)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=188749.54..188749.55 rows=1 width=24)
   ->  Sort  (cost=188749.54..188749.56 rows=5 width=24)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=188749.47..188749.52 rows=5 width=24)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=663.02..188463.78 rows=57138 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=662.59..27650.66 rows=57138 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..648.31 rows=57138 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=188772.22..188772.22 rows=1 width=58)
   ->  Sort  (cost=188772.22..188772.28 rows=25 width=58)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         ->  GroupAggregate  (cost=188680.59..188772.09 rows=25 width=58)
               Group Key: nation.n_name
               ->  Sort  (cost=188680.59..188698.83 rows=7295 width=38)
                     Sort Key: nation.n_name
                     ->  Hash Join  (cost=9449.72..188212.52 rows=7295 width=38)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8976.72..186782.21 rows=182343 width=50)
                                 ->  Hash Join  (cost=8976.29..39835.97 rows=45578 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2639.28..32188.60 rows=227888 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2582.31 rows=227888 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38)
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(31 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107108.62..107108.63 rows=1 width=32)
   ->  Aggregate  (cost=107108.62..107108.63 rows=1 width=32)
         ->  Bitmap Heap Scan on lineitem  (cost=20601.46..106527.97 rows=116129 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20572.43 rows=116129 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
(6 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234660.50..234660.53 rows=1 width=116)
   ->  GroupAggregate  (cost=234660.50..234859.33 rows=6118 width=116)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234660.50..234675.79 rows=6118 width=96)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               ->  Hash Join  (cost=84990.91..234275.71 rows=6118 width=96)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     ->  Hash Join  (cost=84625.81..233108.86 rows=147001 width=46)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29460.91..169583.56 rows=1837510 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29001.53 rows=1837510 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30)
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30)
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30)
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
(32 rows)

query 8 run 1
SET
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114035.61..114035.66 rows=1 width=64)
   ->  GroupAggregate  (cost=114035.61..114138.34 rows=2406 width=64)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114035.61..114041.68 rows=2427 width=70)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               ->  Nested Loop  (cost=78918.59..113899.15 rows=2427 width=70)
                     ->  Hash Join  (cost=78918.45..113810.94 rows=2427 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78470.45..113356.57 rows=2427 width=20)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72133.44..106949.79 rows=12133 width=24)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5289.60..38271.84 rows=456749 width=12)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5175.42 rows=456749 width=0)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66345.75..66345.75 rows=39847 width=20)
                                             ->  Nested Loop  (cost=0.43..66345.75 rows=39847 width=20)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1328 width=4)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4)
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4)
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
(40 rows)

query 9 run 1
SET
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224901.01..224901.01 rows=1 width=90)
   ->  Sort  (cost=224901.01..225051.39 rows=60150 width=90)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         ->  HashAggregate  (cost=223698.01..224600.26 rows=60150 width=90)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               ->  Hash Join  (cost=166919.55..218394.02 rows=303085 width=81)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=166917.98..216704.28 rows=303085 width=31)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8)
                           ->  Hash  (cost=163129.42..163129.42 rows=303085 width=31)
                                 ->  Nested Loop  (cost=7173.69..163129.42 rows=303085 width=31)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=7173.26..34913.41 rows=40404 width=26)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=6725.26..34359.31 rows=40404 width=18)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14)
                                                   ->  Hash  (cost=6599.00..6599.00 rows=10101 width=4)
                                                         ->  Seq Scan on part  (cost=0.00..6599.00 rows=10101 width=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(27 rows)

query 10 run 1
SET
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=223126.59..223126.64 rows=20 width=202)
   ->  Sort  (cost=223126.59..223266.96 rows=56150 width=202)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         ->  HashAggregate  (cost=220930.58..221632.46 rows=56150 width=202)
               Group Key: customer.c_custkey, nation.n_name
               ->  Nested Loop  (cost=7635.73..220228.71 rows=56150 width=182)
                     ->  Hash Join  (cost=7635.58..218833.24 rows=56150 width=160)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=663.58..211713.85 rows=56150 width=16)
                                 ->  Bitmap Heap Scan on orders  (cost=663.15..27652.03 rows=57192 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..648.85 rows=57192 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
(23 rows)

query 11 run 1
SET
SET
SET
                                                      QUERY PLAN                                                       
-----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.61..15992.61 rows=1 width=36)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.63..7689.64 rows=1 width=32)
           ->  Nested Loop  (cost=5.31..7449.63 rows=32000 width=10)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.96..8329.63 rows=10667 width=36)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         ->  HashAggregate  (cost=7769.63..8249.63 rows=10667 width=36)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=5.31..7449.63 rows=32000 width=14)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
(28 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302825.90..302910.38 rows=1 width=27)
   ->  GroupAggregate  (cost=302825.90..303417.27 rows=7 width=27)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302825.90..302899.81 rows=29565 width=27)
               Sort Key: lineitem.l_shipmode
               ->  Hash Join  (cost=247953.86..300630.46 rows=29565 width=27)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20)
                     ->  Hash  (cost=247584.30..247584.30 rows=29565 width=15)
                           ->  Seq Scan on lineitem  (cost=0.00..247584.30 rows=29565 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64586.97..64586.97 rows=1 width=16)
   ->  Sort  (cost=64586.97..64587.47 rows=200 width=16)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         ->  HashAggregate  (cost=64583.97..64585.97 rows=200 width=16)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60833.97..62333.97 rows=150000 width=12)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53485.49 rows=1469697 width=8)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4)
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4)
(13 rows)

query 14 run 1
SET
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78708.98..78708.99 rows=1 width=32)
   ->  Aggregate  (cost=78708.98..78708.99 rows=1 width=32)
         ->  Hash Join  (cost=9850.50..77343.85 rows=78007 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1251.50..68540.08 rows=78007 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1232.00 rows=78007 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25)
(10 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244734.23..244743.11 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122415.80..122415.81 rows=1 width=32)
           ->  HashAggregate  (cost=122166.85..122291.33 rows=9958 width=36)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3754.43..119825.88 rows=234097 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3695.90 rows=234097 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122318.42..122762.67 rows=50 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71)
         ->  Sort  (cost=122318.13..122318.26 rows=50 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=122166.85..122316.72 rows=50 width=36)
                     ->  HashAggregate  (cost=122166.85..122316.22 rows=50 width=36)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3754.43..119825.88 rows=234097 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3695.90 rows=234097 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33899.93..33899.93 rows=1 width=44)
   ->  Sort  (cost=33899.93..33940.03 rows=16042 width=44)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=32911.55..33819.72 rows=16042 width=44)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32911.55..33061.10 rows=59820 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9821.30..28165.32 rows=59820 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=29910 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29910 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(17 rows)

query 17 run 1
SET
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=222984.19..222984.20 rows=1 width=32)
   ->  Aggregate  (cost=222984.19..222984.20 rows=1 width=32)
         ->  Nested Loop  (cost=209678.01..222979.56 rows=1849 width=8)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=209677.58..215052.72 rows=185 width=40)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202576.20..205494.83 rows=194575 width=36)
                           Group Key: lineitem_1.l_partkey
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.80 rows=6001080 width=9)
                     ->  Hash  (cost=7099.00..7099.00 rows=190 width=4)
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=190 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
(15 rows)

query 18 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799700.61..799700.86 rows=100 width=71)
   ->  Sort  (cost=799700.61..804702.41 rows=2000720 width=71)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         ->  HashAggregate  (cost=663056.62..723234.53 rows=2000720 width=71)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16
               ->  Hash Join  (cost=340205.01..555283.46 rows=2000720 width=44)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172570.80 rows=6001080 width=9)
                     ->  Hash  (cost=333953.89..333953.89 rows=500090 width=43)
                           ->  Hash Join  (cost=287572.61..333953.89 rows=500090 width=43)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280600.61..325669.12 rows=500090 width=24)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20)
                                       ->  Hash  (cost=274349.48..274349.48 rows=500090 width=4)
                                             ->  GroupAggregate  (cost=0.43..269348.58 rows=500090 width=4)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216839.13 rows=6001080 width=9)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23)
(22 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=35494.06..35494.07 rows=1 width=32)
   ->  Aggregate  (cost=35494.06..35494.07 rows=1 width=32)
         ->  Nested Loop  (cost=0.43..35493.23 rows=111 width=12)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=476 width=30)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.09 rows=1 width=21)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
(8 rows)

query 20 run 1
SET
SET
SET
                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216509.76..216509.76 rows=1 width=51)
   ->  Sort  (cost=216509.76..216509.76 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=186605.33..216509.75 rows=1 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59)
               ->  Materialize  (cost=186605.33..216054.44 rows=1 width=8)
                     ->  Nested Loop  (cost=186605.33..216054.43 rows=1 width=8)
                           ->  Hash Join  (cost=186604.91..209048.49 rows=4916 width=44)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179980.66..196278.86 rows=486761 width=40)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4
                                       ->  Bitmap Heap Scan on lineitem  (cost=14771.46..141150.53 rows=921271 width=13)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14541.14 rows=921271 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
(27 rows)

query 21 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=361483.21..361483.21 rows=1 width=34)
   ->  Sort  (cost=361483.21..361483.21 rows=1 width=34)
         Sort Key: (count(*)) DESC, supplier.s_name
         ->  GroupAggregate  (cost=361483.18..361483.20 rows=1 width=34)
               Group Key: supplier.s_name
               ->  Sort  (cost=361483.18..361483.18 rows=1 width=26)
                     Sort Key: supplier.s_name
                     ->  Nested Loop Semi Join  (cost=197110.11..361483.17 rows=1 width=26)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Nested Loop Anti Join  (cost=197109.67..361479.78 rows=1 width=38)
                                 ->  Hash Join  (cost=197109.24..245128.64 rows=39084 width=38)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=732700 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                       ->  Hash  (cost=196109.07..196109.07 rows=80014 width=34)
                                             ->  Hash Join  (cost=234.08..196109.07 rows=80014 width=34)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187573.50 rows=2000360 width=8)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30)
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
(32 rows)

query 22 run 1
SET
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16080.42..16080.45 rows=1 width=72)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.40..7546.41 rows=1 width=32)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4760 width=6)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=8534.01..8554.30 rows=738 width=72)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8534.01..8535.85 rows=738 width=38)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               ->  Nested Loop Anti Join  (cost=0.43..8498.85 rows=738 width=38)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4)
                           Index Cond: (o_custkey = customer.c_custkey)
(14 rows)

