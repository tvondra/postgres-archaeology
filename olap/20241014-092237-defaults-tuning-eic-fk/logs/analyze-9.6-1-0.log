query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424940.40..424940.40 rows=1 width=236) (actual time=9782.445..9782.445 rows=1 loops=1)
   ->  Sort  (cost=424940.40..424940.42 rows=6 width=236) (actual time=9782.443..9782.443 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424940.21..424940.37 rows=6 width=236) (actual time=9782.420..9782.426 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187564.12 rows=5934402 width=25) (actual time=0.320..1365.383 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 11.095 ms
 Execution time: 9782.526 ms
(11 rows)

SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424940.40..424940.40 rows=1 width=236) (actual time=9561.369..9561.369 rows=1 loops=1)
   ->  Sort  (cost=424940.40..424940.42 rows=6 width=236) (actual time=9561.368..9561.368 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424940.21..424940.37 rows=6 width=236) (actual time=9561.344..9561.349 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187564.12 rows=5934402 width=25) (actual time=0.033..1178.003 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 0.408 ms
 Execution time: 9561.417 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66914.91..66914.92 rows=1 width=192) (actual time=623.302..623.316 rows=100 loops=1)
   ->  Sort  (cost=66914.91..66914.92 rows=1 width=192) (actual time=623.301..623.310 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=44372.62..66914.90 rows=1 width=192) (actual time=415.356..622.761 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=887 width=30) (actual time=0.013..82.016 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44372.20..44772.20 rows=160000 width=172) (actual time=414.011..444.834 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..30542.03 rows=160000 width=172) (actual time=5.495..299.807 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..188.500 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=5.484..5.485 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.016..5.032 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..3.815 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.012..0.012 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.007..0.011 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.52..18.53 rows=1 width=32) (actual time=0.124..0.124 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.108..0.122 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.102..0.119 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.100..0.114 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.097..0.098 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 17.199 ms
 Execution time: 627.523 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66914.91..66914.92 rows=1 width=192) (actual time=383.496..383.513 rows=100 loops=1)
   ->  Sort  (cost=66914.91..66914.92 rows=1 width=192) (actual time=383.496..383.509 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=44372.62..66914.90 rows=1 width=192) (actual time=277.143..383.118 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=887 width=30) (actual time=0.015..50.504 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44372.20..44772.20 rows=160000 width=172) (actual time=277.058..306.818 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..30542.03 rows=160000 width=172) (actual time=2.415..167.678 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..44.411 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=2.408..2.408 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.016..2.010 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..0.533 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.013..0.013 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.52..18.53 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.009..0.016 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.005..0.014 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.952 ms
 Execution time: 387.594 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=303686.33..303686.36 rows=10 width=44) (actual time=2304.590..2304.591 rows=10 loops=1)
   ->  Sort  (cost=303686.33..304476.76 rows=316172 width=44) (actual time=2304.589..2304.589 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=287368.81..296853.97 rows=316172 width=44) (actual time=2283.976..2302.564 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=287368.81..288159.24 rows=316172 width=24) (actual time=2283.959..2285.994 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=55492.72..258485.95 rows=316172 width=24) (actual time=844.261..2277.034 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187564.12 rows=3271349 width=16) (actual time=0.009..1159.856 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=53680.56..53680.56 rows=144973 width=12) (actual time=842.962..842.962 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14396.81..53680.56 rows=144973 width=12) (actual time=129.549..803.569 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8547.37..43680.69 rows=720186 width=16) (actual time=74.852..587.039 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8367.32 rows=720186 width=0) (actual time=71.480..71.480 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30195 width=4) (actual time=54.611..54.611 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30195 width=4) (actual time=0.005..50.037 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 18.689 ms
 Execution time: 2304.671 ms
(30 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=303686.33..303686.36 rows=10 width=44) (actual time=1534.058..1534.059 rows=10 loops=1)
   ->  Sort  (cost=303686.33..304476.76 rows=316172 width=44) (actual time=1534.057..1534.058 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=287368.81..296853.97 rows=316172 width=44) (actual time=1513.479..1532.112 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=287368.81..288159.24 rows=316172 width=24) (actual time=1513.464..1515.521 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=55492.72..258485.95 rows=316172 width=24) (actual time=291.252..1507.144 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187564.12 rows=3271349 width=16) (actual time=0.009..951.073 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=53680.56..53680.56 rows=144973 width=12) (actual time=290.677..290.677 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14396.81..53680.56 rows=144973 width=12) (actual time=80.097..267.793 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8547.37..43680.69 rows=720186 width=16) (actual time=53.280..141.575 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8367.32 rows=720186 width=0) (actual time=49.711..49.711 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30195 width=4) (actual time=26.791..26.791 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30195 width=4) (actual time=0.006..23.625 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 0.814 ms
 Execution time: 1534.131 ms
(30 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=185759.51..185759.51 rows=1 width=24) (actual time=2138.184..2138.185 rows=1 loops=1)
   ->  Sort  (cost=185759.51..185759.52 rows=5 width=24) (actual time=2138.183..2138.183 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=185759.44..185759.49 rows=5 width=24) (actual time=2138.161..2138.162 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=803.67..185480.51 rows=55786 width=16) (actual time=12.826..2112.394 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=803.23..27771.02 rows=55786 width=20) (actual time=12.768..550.536 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..789.29 rows=55786 width=0) (actual time=9.855..9.855 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 14.390 ms
 Execution time: 2138.267 ms
(18 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=185759.51..185759.51 rows=1 width=24) (actual time=201.274..201.274 rows=1 loops=1)
   ->  Sort  (cost=185759.51..185759.52 rows=5 width=24) (actual time=201.272..201.272 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=185759.44..185759.49 rows=5 width=24) (actual time=201.252..201.253 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=803.67..185480.51 rows=55786 width=16) (actual time=8.883..188.750 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=803.23..27771.02 rows=55786 width=20) (actual time=8.862..41.028 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..789.29 rows=55786 width=0) (actual time=5.817..5.817 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 0.590 ms
 Execution time: 201.320 ms
(18 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191548.24..191548.25 rows=1 width=58) (actual time=2324.188..2324.188 rows=1 loops=1)
   ->  Sort  (cost=191548.24..191548.31 rows=25 width=58) (actual time=2324.186..2324.186 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=191456.06..191548.12 rows=25 width=58) (actual time=2320.894..2324.172 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=191456.06..191474.41 rows=7340 width=38) (actual time=2320.031..2320.555 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10106.92..190984.77 rows=7340 width=38) (actual time=97.903..2315.556 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9633.92..189062.08 rows=183505 width=50) (actual time=92.156..2273.385 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9633.49..40523.90 rows=45874 width=38) (actual time=92.085..725.856 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3296.46..32867.99 rows=229369 width=8) (actual time=31.077..600.480 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3239.12 rows=229369 width=0) (actual time=27.736..27.736 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=60.966..60.967 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.029..55.354 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..39.063 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.015..0.020 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.031..0.033 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.574..5.574 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..4.348 rows=10000 loops=1)
 Planning time: 24.861 ms
 Execution time: 2324.475 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191548.24..191548.25 rows=1 width=58) (actual time=338.046..338.046 rows=1 loops=1)
   ->  Sort  (cost=191548.24..191548.31 rows=25 width=58) (actual time=338.045..338.045 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=191456.06..191548.12 rows=25 width=58) (actual time=334.829..338.033 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=191456.06..191474.41 rows=7340 width=38) (actual time=334.032..334.519 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10106.92..190984.77 rows=7340 width=38) (actual time=58.883..331.367 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9633.92..189062.08 rows=183505 width=50) (actual time=56.015..308.644 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9633.49..40523.90 rows=45874 width=38) (actual time=56.003..151.441 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3296.46..32867.99 rows=229369 width=8) (actual time=22.743..76.683 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3239.12 rows=229369 width=0) (actual time=19.476..19.476 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=33.227..33.227 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.030..29.045 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..8.351 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.842..2.842 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..1.478 rows=10000 loops=1)
 Planning time: 2.372 ms
 Execution time: 338.119 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107017.93..107017.94 rows=1 width=32) (actual time=1322.415..1322.415 rows=1 loops=1)
   ->  Aggregate  (cost=107017.93..107017.94 rows=1 width=32) (actual time=1322.413..1322.413 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20974.89..106442.91 rows=115004 width=12) (actual time=141.476..1242.273 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20946.14 rows=115004 width=0) (actual time=130.165..130.165 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 9.657 ms
 Execution time: 1322.488 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107017.93..107017.94 rows=1 width=32) (actual time=231.368..231.369 rows=1 loops=1)
   ->  Aggregate  (cost=107017.93..107017.94 rows=1 width=32) (actual time=231.366..231.366 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20974.89..106442.91 rows=115004 width=12) (actual time=111.333..188.072 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20946.14 rows=115004 width=0) (actual time=101.000..101.000 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.368 ms
 Execution time: 231.402 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234342.58..234342.61 rows=1 width=92) (actual time=3294.684..3294.684 rows=1 loops=1)
   ->  GroupAggregate  (cost=234342.58..234554.89 rows=6066 width=92) (actual time=3294.683..3294.683 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=234342.58..234357.74 rows=6066 width=72) (actual time=3293.825..3293.924 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=84970.26..233961.44 rows=6066 width=72) (actual time=837.394..3289.976 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84590.36..232771.37 rows=145764 width=46) (actual time=831.675..3258.120 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29203.46..169094.22 rows=1822051 width=24) (actual time=301.537..2487.101 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28747.94 rows=1822051 width=0) (actual time=281.216..281.216 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=529.658..529.658 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=53.709..505.468 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.008..281.984 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=53.688..53.688 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.020..51.520 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..37.217 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=5.000..5.000 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.014..4.889 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..3.930 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 23.564 ms
 Execution time: 3294.791 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234342.58..234342.61 rows=1 width=92) (actual time=1004.304..1004.305 rows=1 loops=1)
   ->  GroupAggregate  (cost=234342.58..234554.89 rows=6066 width=92) (actual time=1004.304..1004.304 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=234342.58..234357.74 rows=6066 width=72) (actual time=1003.441..1003.537 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=84970.26..233961.44 rows=6066 width=72) (actual time=531.769..1000.669 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84590.36..232771.37 rows=145764 width=46) (actual time=529.759..983.772 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29203.46..169094.22 rows=1822051 width=24) (actual time=226.487..485.673 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28747.94 rows=1822051 width=0) (actual time=205.850..205.850 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=303.165..303.165 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=27.996..283.522 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..76.696 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=27.973..27.973 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.019..26.288 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..7.968 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.935..1.935 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.015..1.854 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..0.557 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 1.921 ms
 Execution time: 1004.401 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118517.08..118517.13 rows=1 width=40) (actual time=6262.855..6262.855 rows=1 loops=1)
   ->  GroupAggregate  (cost=118517.08..118626.81 rows=2406 width=40) (actual time=6262.854..6262.854 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=118517.08..118523.26 rows=2471 width=46) (actual time=6261.996..6262.074 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Nested Loop  (cost=50347.06..118377.83 rows=2471 width=46) (actual time=696.659..6259.639 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 59640
                     ->  Hash Join  (cost=50347.06..117437.54 rows=2471 width=20) (actual time=695.891..6243.686 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49899.06..116955.56 rows=2471 width=20) (actual time=690.504..6236.763 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..66882.25 rows=39992 width=20) (actual time=1.246..5528.559 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.837..70.652 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.91 rows=31 width=24) (actual time=0.306..4.115 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48740.25..48740.25 rows=92670 width=8) (actual time=685.900..685.900 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=12994.78..48740.25 rows=92670 width=8) (actual time=112.454..667.220 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6657.74..39738.96 rows=463348 width=12) (actual time=53.474..523.932 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6541.91 rows=463348 width=0) (actual time=50.135..50.135 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=58.921..58.921 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.022..54.294 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..38.027 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.016..0.016 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.011..0.016 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.372..5.372 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..4.308 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.002 rows=25 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.014 rows=25 loops=1)
 Planning time: 27.527 ms
 Execution time: 6262.949 ms
(50 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118517.08..118517.13 rows=1 width=40) (actual time=299.463..299.463 rows=1 loops=1)
   ->  GroupAggregate  (cost=118517.08..118626.81 rows=2406 width=40) (actual time=299.462..299.462 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=118517.08..118523.26 rows=2471 width=46) (actual time=298.625..298.728 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Nested Loop  (cost=50347.06..118377.83 rows=2471 width=46) (actual time=215.755..297.797 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 59640
                     ->  Hash Join  (cost=50347.06..117437.54 rows=2471 width=20) (actual time=215.731..290.302 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49899.06..116955.56 rows=2471 width=20) (actual time=213.243..286.990 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..66882.25 rows=39992 width=20) (actual time=0.048..67.280 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.038..24.691 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.91 rows=31 width=24) (actual time=0.003..0.028 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48740.25..48740.25 rows=92670 width=8) (actual time=212.880..212.880 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=12994.78..48740.25 rows=92670 width=8) (actual time=71.236..200.573 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6657.74..39738.96 rows=463348 width=12) (actual time=38.391..107.474 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6541.91 rows=463348 width=0) (actual time=35.097..35.097 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=32.823..32.823 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.024..28.779 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..8.401 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.473..2.473 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..1.459 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.009 rows=25 loops=1)
 Planning time: 2.926 ms
 Execution time: 299.557 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224057.95..224057.95 rows=1 width=66) (actual time=12582.782..12582.783 rows=1 loops=1)
   ->  Sort  (cost=224057.95..224208.32 rows=60150 width=66) (actual time=12582.781..12582.781 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=222704.57..223757.20 rows=60150 width=66) (actual time=12582.606..12582.713 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=66191.42..218461.82 rows=242443 width=57) (actual time=583.632..12202.274 rows=325928 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Nested Loop  (cost=450.42..137276.09 rows=242443 width=53) (actual time=5.751..11183.825 rows=325928 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Hash Join  (cost=449.99..34216.31 rows=32324 width=48) (actual time=5.495..360.205 rows=43520 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=448.43..33770.29 rows=32324 width=26) (actual time=5.476..347.071 rows=43520 loops=1)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Nested Loop  (cost=0.42..32877.84 rows=32324 width=18) (actual time=0.062..321.279 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.007..87.878 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.018..0.020 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.401..5.401 rows=10000 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..4.304 rows=10000 loops=1)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.012..0.012 rows=25 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.008 rows=25 loops=1)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.037..0.245 rows=7 loops=43520)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=576.013..576.013 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.013..364.998 rows=1500000 loops=1)
 Planning time: 27.525 ms
 Execution time: 12583.147 ms
(33 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224057.95..224057.95 rows=1 width=66) (actual time=1535.817..1535.818 rows=1 loops=1)
   ->  Sort  (cost=224057.95..224208.32 rows=60150 width=66) (actual time=1535.816..1535.816 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=222704.57..223757.20 rows=60150 width=66) (actual time=1535.640..1535.732 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=66191.42..218461.82 rows=242443 width=57) (actual time=397.657..1226.371 rows=325928 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Nested Loop  (cost=450.42..137276.09 rows=242443 width=53) (actual time=2.496..492.276 rows=325928 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Hash Join  (cost=449.99..34216.31 rows=32324 width=48) (actual time=2.485..107.726 rows=43520 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=448.43..33770.29 rows=32324 width=26) (actual time=2.464..99.509 rows=43520 loops=1)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Nested Loop  (cost=0.42..32877.84 rows=32324 width=18) (actual time=0.014..83.360 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.008..43.002 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.442..2.443 rows=10000 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.422 rows=10000 loops=1)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.015 rows=25 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.012 rows=25 loops=1)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.002..0.007 rows=7 loops=43520)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=393.723..393.723 rows=1500000 loops=1)
                           Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.011..193.794 rows=1500000 loops=1)
 Planning time: 4.054 ms
 Execution time: 1536.197 ms
(33 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=230556.26..230556.31 rows=20 width=202) (actual time=2247.902..2247.906 rows=20 loops=1)
   ->  Sort  (cost=230556.26..230703.07 rows=58725 width=202) (actual time=2247.901..2247.902 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=228259.54..228993.61 rows=58725 width=202) (actual time=2221.130..2237.762 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7825.03..227525.48 rows=58725 width=182) (actual time=103.831..2092.833 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7823.46..226716.45 rows=58725 width=160) (actual time=103.817..2067.157 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=851.46..218936.98 rows=58725 width=16) (actual time=13.053..1929.208 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=851.03..27869.01 rows=59132 width=8) (actual time=12.105..498.135 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..836.25 rows=59132 width=0) (actual time=9.135..9.135 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.023..0.024 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=90.341..90.341 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.010..52.013 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.005 rows=25 loops=1)
 Planning time: 21.489 ms
 Execution time: 2248.291 ms
(28 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=230556.26..230556.31 rows=20 width=202) (actual time=498.192..498.195 rows=20 loops=1)
   ->  Sort  (cost=230556.26..230703.07 rows=58725 width=202) (actual time=498.191..498.194 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=228259.54..228993.61 rows=58725 width=202) (actual time=471.522..488.114 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7825.03..227525.48 rows=58725 width=182) (actual time=72.354..377.891 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7823.46..226716.45 rows=58725 width=160) (actual time=72.337..357.077 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=851.46..218936.98 rows=58725 width=16) (actual time=9.007..253.914 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=851.03..27869.01 rows=59132 width=8) (actual time=8.979..42.207 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..836.25 rows=59132 width=0) (actual time=5.902..5.902 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=62.913..62.913 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.008..26.028 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.012..0.012 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.008 rows=25 loops=1)
 Planning time: 1.120 ms
 Execution time: 498.594 ms
(28 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22743.81..22743.81 rows=1 width=36) (actual time=753.250..753.251 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.90..10891.91 rows=1 width=32) (actual time=33.165..33.165 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.90 rows=32000 width=10) (actual time=0.271..20.783 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.265..0.490 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.256..0.432 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.239..0.240 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.039 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11851.90..11931.90 rows=32000 width=36) (actual time=753.249..753.249 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.90..11691.90 rows=32000 width=36) (actual time=744.456..753.108 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.90 rows=32000 width=14) (actual time=0.990..676.470 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.695..3.060 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.685..2.953 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.609..0.609 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.085..1.620 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 13.768 ms
 Execution time: 753.582 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22743.81..22743.81 rows=1 width=36) (actual time=89.390..89.391 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.90..10891.91 rows=1 width=32) (actual time=32.686..32.686 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.90 rows=32000 width=10) (actual time=0.065..20.195 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.060..0.291 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.049..0.230 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.033..0.033 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.038 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11851.90..11931.90 rows=32000 width=36) (actual time=89.388..89.388 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.90..11691.90 rows=32000 width=36) (actual time=80.360..89.247 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.90 rows=32000 width=14) (actual time=0.072..28.476 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.066..0.441 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.058..0.372 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.039..0.040 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.058 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.870 ms
 Execution time: 89.479 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=310907.91..310991.63 rows=1 width=27) (actual time=2084.021..2084.021 rows=1 loops=1)
   ->  GroupAggregate  (cost=310907.91..311493.96 rows=7 width=27) (actual time=2084.019..2084.019 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=310907.91..310981.16 rows=29299 width=27) (actual time=2078.193..2079.101 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 3187kB
               ->  Merge Join  (cost=249741.63..308734.13 rows=29299 width=27) (actual time=1585.658..2071.000 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..385.150 rows=1499957 loops=1)
                     ->  Sort  (cost=249741.20..249814.45 rows=29299 width=15) (actual time=1585.562..1589.642 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247567.42 rows=29299 width=15) (actual time=0.907..1578.876 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 15.803 ms
 Execution time: 2084.265 ms
(17 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=310907.91..310991.63 rows=1 width=27) (actual time=1650.171..1650.171 rows=1 loops=1)
   ->  GroupAggregate  (cost=310907.91..311493.96 rows=7 width=27) (actual time=1650.170..1650.170 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=310907.91..310981.16 rows=29299 width=27) (actual time=1644.295..1645.204 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 3187kB
               ->  Merge Join  (cost=249741.63..308734.13 rows=29299 width=27) (actual time=1356.041..1638.948 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..189.957 rows=1499957 loops=1)
                     ->  Sort  (cost=249741.20..249814.45 rows=29299 width=15) (actual time=1356.021..1359.162 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247567.42 rows=29299 width=15) (actual time=0.122..1349.816 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 0.587 ms
 Execution time: 1650.217 ms
(17 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80937.50..80937.50 rows=1 width=16) (actual time=1626.061..1626.061 rows=1 loops=1)
   ->  Sort  (cost=80937.50..80938.00 rows=200 width=16) (actual time=1626.060..1626.060 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=80934.50..80936.50 rows=200 width=16) (actual time=1626.035..1626.040 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77184.50..78684.50 rows=150000 width=12) (actual time=1580.377..1606.276 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..69835.95 rows=1469711 width=8) (actual time=33.451..1123.505 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469711 width=8) (actual time=0.341..638.745 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.817..32.817 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.280..16.230 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 11.716 ms
 Execution time: 1626.711 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80937.50..80937.50 rows=1 width=16) (actual time=1419.380..1419.380 rows=1 loops=1)
   ->  Sort  (cost=80937.50..80938.00 rows=200 width=16) (actual time=1419.379..1419.379 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=80934.50..80936.50 rows=200 width=16) (actual time=1419.355..1419.359 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77184.50..78684.50 rows=150000 width=12) (actual time=1372.618..1399.761 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..69835.95 rows=1469711 width=8) (actual time=30.088..947.505 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469711 width=8) (actual time=0.013..492.241 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.766..29.767 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.038..13.544 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.561 ms
 Execution time: 1420.027 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79740.01..79740.02 rows=1 width=32) (actual time=844.920..844.921 rows=1 loops=1)
   ->  Aggregate  (cost=79740.01..79740.02 rows=1 width=32) (actual time=844.918..844.918 rows=1 loops=1)
         ->  Hash Join  (cost=9854.82..78370.07 rows=78282 width=33) (actual time=107.167..772.703 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1255.82..68694.69 rows=78282 width=16) (actual time=19.902..637.060 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1236.25 rows=78282 width=0) (actual time=13.888..13.888 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=86.884..86.884 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.008..54.641 rows=200000 loops=1)
 Planning time: 13.907 ms
 Execution time: 845.004 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79740.01..79740.02 rows=1 width=32) (actual time=201.989..201.990 rows=1 loops=1)
   ->  Aggregate  (cost=79740.01..79740.02 rows=1 width=32) (actual time=201.987..201.987 rows=1 loops=1)
         ->  Hash Join  (cost=9854.82..78370.07 rows=78282 width=33) (actual time=71.631..156.060 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1255.82..68694.69 rows=78282 width=16) (actual time=14.918..65.675 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1236.25 rows=78282 width=0) (actual time=9.375..9.375 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=56.319..56.319 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.009..27.301 rows=200000 loops=1)
 Planning time: 0.565 ms
 Execution time: 202.058 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246563.53..246563.59 rows=1 width=103) (actual time=1807.224..1807.224 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122101.42..122101.43 rows=1 width=32) (actual time=232.795..232.795 rows=1 loops=1)
           ->  HashAggregate  (cost=121852.22..121976.82 rows=9968 width=36) (actual time=230.376..232.062 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3631.02..119587.74 rows=226448 width=16) (actual time=34.514..99.730 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3574.41 rows=226448 width=0) (actual time=23.819..23.819 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124462.10..125055.12 rows=9968 width=103) (actual time=1807.224..1807.224 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.349..4.628 rows=8449 loops=1)
         ->  Sort  (cost=124461.81..124486.73 rows=9968 width=36) (actual time=1802.097..1802.097 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123550.58..123799.78 rows=9968 width=36) (actual time=1800.470..1802.088 rows=1 loops=1)
                     ->  HashAggregate  (cost=123550.58..123700.10 rows=9968 width=36) (actual time=1800.469..1802.087 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3631.02..119587.74 rows=226448 width=16) (actual time=46.997..1270.452 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3574.41 rows=226448 width=0) (actual time=36.406..36.406 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 13.179 ms
 Execution time: 1807.533 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246563.53..246563.59 rows=1 width=103) (actual time=493.970..493.970 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122101.42..122101.43 rows=1 width=32) (actual time=230.867..230.867 rows=1 loops=1)
           ->  HashAggregate  (cost=121852.22..121976.82 rows=9968 width=36) (actual time=228.332..230.195 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3631.02..119587.74 rows=226448 width=16) (actual time=33.478..98.288 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3574.41 rows=226448 width=0) (actual time=23.155..23.155 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124462.10..125055.12 rows=9968 width=103) (actual time=493.969..493.969 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.013..1.239 rows=8449 loops=1)
         ->  Sort  (cost=124461.81..124486.73 rows=9968 width=36) (actual time=492.243..492.243 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123550.58..123799.78 rows=9968 width=36) (actual time=490.627..492.237 rows=1 loops=1)
                     ->  HashAggregate  (cost=123550.58..123700.10 rows=9968 width=36) (actual time=490.627..492.237 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3631.02..119587.74 rows=226448 width=16) (actual time=33.657..122.241 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3574.41 rows=226448 width=0) (actual time=24.040..24.040 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.604 ms
 Execution time: 494.301 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34878.89..34878.89 rows=1 width=44) (actual time=611.719..611.719 rows=1 loops=1)
   ->  Sort  (cost=34878.89..34918.86 rows=15988 width=44) (actual time=611.719..611.719 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33897.04..34798.95 rows=15988 width=44) (actual time=558.833..608.887 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33897.04..34045.45 rows=59362 width=40) (actual time=558.812..568.981 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9818.44..29190.45 rows=59362 width=40) (actual time=96.471..302.410 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=5.975..139.341 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.135..5.504 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29681 width=40) (actual time=90.452..90.452 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29681 width=40) (actual time=0.010..84.304 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 14.826 ms
 Execution time: 611.770 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34878.89..34878.89 rows=1 width=44) (actual time=559.794..559.794 rows=1 loops=1)
   ->  Sort  (cost=34878.89..34918.86 rows=15988 width=44) (actual time=559.793..559.793 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33897.04..34798.95 rows=15988 width=44) (actual time=506.950..556.949 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33897.04..34045.45 rows=59362 width=40) (actual time=506.931..516.980 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9818.44..29190.45 rows=59362 width=40) (actual time=63.391..250.675 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.236..118.875 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.090..2.213 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29681 width=40) (actual time=61.114..61.114 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29681 width=40) (actual time=0.007..56.456 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.643 ms
 Execution time: 559.846 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=983521.89..983521.90 rows=1 width=32) (actual time=5331.217..5331.218 rows=1 loops=1)
   ->  Aggregate  (cost=983521.89..983521.90 rows=1 width=32) (actual time=5331.215..5331.215 rows=1 loops=1)
         ->  Merge Join  (cost=914022.37..983516.79 rows=2040 width=8) (actual time=2760.183..5330.967 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914021.51..961910.24 rows=192417 width=36) (actual time=2753.490..5114.834 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914021.51..929022.34 rows=6000330 width=9) (actual time=2753.465..4076.759 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111264kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172563.30 rows=6000330 width=9) (actual time=0.278..953.829 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..19108.94 rows=6360 width=21) (actual time=1.249..202.218 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..19093.04 rows=6360 width=21) (actual time=1.246..200.235 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=212 width=4) (actual time=0.979..65.981 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.65 rows=31 width=17) (actual time=0.387..0.636 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 13.865 ms
 Execution time: 5346.218 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=983521.89..983521.90 rows=1 width=32) (actual time=4859.098..4859.098 rows=1 loops=1)
   ->  Aggregate  (cost=983521.89..983521.90 rows=1 width=32) (actual time=4859.097..4859.097 rows=1 loops=1)
         ->  Merge Join  (cost=914022.37..983516.79 rows=2040 width=8) (actual time=2526.907..4858.942 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914021.51..961910.24 rows=192417 width=36) (actual time=2521.620..4802.958 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914021.51..929022.34 rows=6000330 width=9) (actual time=2521.595..3777.779 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111264kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172563.30 rows=6000330 width=9) (actual time=0.033..748.814 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..19108.94 rows=6360 width=21) (actual time=0.145..43.258 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..19093.04 rows=6360 width=21) (actual time=0.142..42.361 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=212 width=4) (actual time=0.133..36.330 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.65 rows=31 width=17) (actual time=0.004..0.024 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.647 ms
 Execution time: 4873.395 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1258662.59..1258662.84 rows=100 width=71) (actual time=4323.976..4323.978 rows=9 loops=1)
   ->  Sort  (cost=1258662.59..1266163.00 rows=3000165 width=71) (actual time=4323.974..4323.975 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1076494.72..1143998.44 rows=3000165 width=71) (actual time=4323.943..4323.959 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1076494.72..1083995.14 rows=3000165 width=44) (actual time=4323.736..4323.743 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6978.26..694397.57 rows=3000165 width=44) (actual time=1040.246..4323.703 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=6.26..646173.30 rows=3000165 width=25) (actual time=971.543..4254.970 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..372062.04 rows=750000 width=24) (actual time=761.217..3450.516 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..305.294 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..294755.08 rows=1500082 width=4) (actual time=659.095..3077.852 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..276004.06 rows=1500082 width=4) (actual time=659.093..3077.837 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227251.38 rows=6000330 width=9) (actual time=0.003..1626.228 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227251.38 rows=6000330 width=9) (actual time=0.007..545.172 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.406..68.406 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..43.744 rows=150000 loops=1)
 Planning time: 20.506 ms
 Execution time: 4324.061 ms
(28 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1258662.59..1258662.84 rows=100 width=71) (actual time=3228.067..3228.069 rows=9 loops=1)
   ->  Sort  (cost=1258662.59..1266163.00 rows=3000165 width=71) (actual time=3228.066..3228.066 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1076494.72..1143998.44 rows=3000165 width=71) (actual time=3228.035..3228.050 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1076494.72..1083995.14 rows=3000165 width=44) (actual time=3228.029..3228.033 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6978.26..694397.57 rows=3000165 width=44) (actual time=767.206..3227.999 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=6.26..646173.30 rows=3000165 width=25) (actual time=726.546..3187.313 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..372062.04 rows=750000 width=24) (actual time=516.126..2383.244 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..145.210 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..294755.08 rows=1500082 width=4) (actual time=460.623..2172.840 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..276004.06 rows=1500082 width=4) (actual time=460.620..2172.824 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227251.38 rows=6000330 width=9) (actual time=0.003..801.139 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227251.38 rows=6000330 width=9) (actual time=0.006..541.946 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.338..40.338 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.581 rows=150000 loops=1)
 Planning time: 0.946 ms
 Execution time: 3228.144 ms
(28 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=36497.91..36497.92 rows=1 width=32) (actual time=2422.962..2422.963 rows=1 loops=1)
   ->  Aggregate  (cost=36497.91..36497.92 rows=1 width=32) (actual time=2422.960..2422.960 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..36497.07 rows=112 width=12) (actual time=11.719..2422.565 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=498 width=30) (actual time=1.042..92.784 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.98 rows=1 width=21) (actual time=4.102..4.594 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 15.038 ms
 Execution time: 2423.426 ms
(12 rows)

SET
SET
SET


 Limit  (cost=36497.91..36497.92 rows=1 width=32) (actual time=73.880..73.881 rows=1 loops=1)
   ->  Aggregate  (cost=36497.91..36497.92 rows=1 width=32) (actual time=73.879..73.879 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..36497.07 rows=112 width=12) (actual time=0.371..73.777 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=498 width=30) (actual time=0.250..55.966 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.98 rows=1 width=21) (actual time=0.031..0.035 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 0.897 ms
 Execution time: 73.921 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277194.70..277194.70 rows=1 width=51) (actual time=3810.168..3810.168 rows=1 loops=1)
   ->  Sort  (cost=277194.70..277195.20 rows=200 width=51) (actual time=3810.167..3810.167 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=253150.07..277193.70 rows=200 width=51) (actual time=3625.900..3809.969 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.348..3.662 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.335..2.795 rows=10000 loops=1)
               ->  Materialize  (cost=253150.07..276738.39 rows=1 width=8) (actual time=7.188..8.413 rows=4371 loops=438)
                     ->  Merge Join  (cost=253150.07..276738.38 rows=1 width=8) (actual time=3148.189..3623.037 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=240004.98..256289.79 rows=482858 width=40) (actual time=2623.977..3065.841 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=240004.98..242265.46 rows=904194 width=13) (actual time=2623.959..2733.143 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14492.92..140615.83 rows=904194 width=13) (actual time=162.927..2233.143 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14266.87 rows=904194 width=0) (actual time=143.461..143.461 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=13145.10..13165.30 rows=8080 width=16) (actual time=523.924..524.564 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=0.42..12620.70 rows=8080 width=16) (actual time=0.690..520.195 rows=8748 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.106..74.006 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.188..0.202 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 18.512 ms
 Execution time: 3812.917 ms
(40 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277194.70..277194.70 rows=1 width=51) (actual time=1415.245..1415.246 rows=1 loops=1)
   ->  Sort  (cost=277194.70..277195.20 rows=200 width=51) (actual time=1415.244..1415.244 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=253150.07..277193.70 rows=200 width=51) (actual time=1231.355..1415.102 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.011..1.749 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.581 rows=10000 loops=1)
               ->  Materialize  (cost=253150.07..276738.39 rows=1 width=8) (actual time=1.722..2.948 rows=4371 loops=438)
                     ->  Merge Join  (cost=253150.07..276738.38 rows=1 width=8) (actual time=754.050..1228.898 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=240004.98..256289.79 rows=482858 width=40) (actual time=721.293..1163.400 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=240004.98..242265.46 rows=904194 width=13) (actual time=721.276..830.399 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14492.92..140615.83 rows=904194 width=13) (actual time=122.727..358.967 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14266.87 rows=904194 width=0) (actual time=104.121..104.121 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=13145.10..13165.30 rows=8080 width=16) (actual time=32.472..33.136 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=0.42..12620.70 rows=8080 width=16) (actual time=0.049..30.651 rows=8748 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.034..22.841 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.747 ms
 Execution time: 1417.969 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=390345.94..390345.95 rows=1 width=34) (actual time=2828.812..2828.824 rows=100 loops=1)
   ->  Sort  (cost=390345.94..390345.95 rows=1 width=34) (actual time=2828.811..2828.818 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=390345.91..390345.93 rows=1 width=34) (actual time=2827.670..2828.383 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=390345.91..390345.92 rows=1 width=26) (actual time=2827.664..2827.871 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=57036.69..390345.90 rows=1 width=26) (actual time=493.781..2814.654 rows=4227 loops=1)
                           ->  Nested Loop Semi Join  (cost=57036.26..390339.54 rows=1 width=34) (actual time=490.236..2661.739 rows=73962 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 19078
                                 ->  Hash Join  (cost=57035.83..257677.88 rows=38749 width=38) (actual time=490.222..2143.099 rows=76644 loops=1)
                                       Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=235.58..196100.15 rows=80004 width=34) (actual time=4.349..1553.888 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..187564.12 rows=2000110 width=8) (actual time=0.011..1291.323 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                             ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=4.276..4.276 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                   ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.699..4.181 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.693..4.111 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=184
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.648..0.648 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=44881.00..44881.00 rows=726500 width=4) (actual time=484.413..484.413 rows=729413 loops=1)
                                             Buckets: 1048576  Batches: 2  Memory Usage: 21019kB
                                             ->  Seq Scan on orders  (cost=0.00..44881.00 rows=726500 width=4) (actual time=0.014..379.381 rows=729413 loops=1)
                                                   Filter: (o_orderstatus = 'F'::bpchar)
                                                   Rows Removed by Filter: 770587
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.006..0.006 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 19.084 ms
 Execution time: 2828.939 ms
(44 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=390345.94..390345.95 rows=1 width=34) (actual time=2039.566..2039.578 rows=100 loops=1)
   ->  Sort  (cost=390345.94..390345.95 rows=1 width=34) (actual time=2039.565..2039.570 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=390345.91..390345.93 rows=1 width=34) (actual time=2038.416..2039.142 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=390345.91..390345.92 rows=1 width=26) (actual time=2038.409..2038.646 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=57036.69..390345.90 rows=1 width=26) (actual time=313.201..2025.863 rows=4227 loops=1)
                           ->  Nested Loop Semi Join  (cost=57036.26..390339.54 rows=1 width=34) (actual time=311.434..1899.134 rows=73962 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 19078
                                 ->  Hash Join  (cost=57035.83..257677.88 rows=38749 width=38) (actual time=311.421..1727.657 rows=76644 loops=1)
                                       Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=235.58..196100.15 rows=80004 width=34) (actual time=0.483..1322.808 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..187564.12 rows=2000110 width=8) (actual time=0.011..1077.889 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                             ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.435..0.435 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                   ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.066..0.368 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.060..0.305 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=184
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.041..0.041 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=44881.00..44881.00 rows=726500 width=4) (actual time=309.457..309.457 rows=729413 loops=1)
                                             Buckets: 1048576  Batches: 2  Memory Usage: 21019kB
                                             ->  Seq Scan on orders  (cost=0.00..44881.00 rows=726500 width=4) (actual time=0.015..200.977 rows=729413 loops=1)
                                                   Filter: (o_orderstatus = 'F'::bpchar)
                                                   Rows Removed by Filter: 770587
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 1.722 ms
 Execution time: 2039.682 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16123.63..16123.66 rows=1 width=72) (actual time=240.744..240.744 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=109.600..109.601 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4770 width=6) (actual time=0.728..103.626 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8577.20..8597.44 rows=736 width=72) (actual time=240.743..240.743 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8577.20..8579.04 rows=736 width=38) (actual time=240.487..240.540 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8542.15 rows=736 width=38) (actual time=109.655..238.325 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=109.636..167.733 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 13.220 ms
 Execution time: 241.206 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16123.63..16123.66 rows=1 width=72) (actual time=170.944..170.945 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=80.748..80.749 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4770 width=6) (actual time=0.013..75.315 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8577.20..8597.44 rows=736 width=72) (actual time=170.943..170.943 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8577.20..8579.04 rows=736 width=38) (actual time=170.684..170.740 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8542.15 rows=736 width=38) (actual time=80.785..169.017 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=80.773..134.602 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.606 ms
 Execution time: 170.990 ms
(20 rows)

