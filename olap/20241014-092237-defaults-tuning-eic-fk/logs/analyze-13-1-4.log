query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191574.11..191574.79 rows=1 width=236) (actual time=2109.891..2109.983 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191574.11..191578.17 rows=6 width=236) (actual time=2109.889..2109.980 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191574.11..191576.99 rows=24 width=236) (actual time=2109.850..2109.944 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190574.05..190574.07 rows=6 width=236) (actual time=2100.676..2100.677 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190573.81..190573.98 rows=6 width=236) (actual time=2100.648..2100.656 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.17 rows=1481491 width=25) (actual time=0.098..512.365 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 11.555 ms
 Execution Time: 2111.276 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191574.11..191574.79 rows=1 width=236) (actual time=1872.240..1872.317 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191574.11..191578.17 rows=6 width=236) (actual time=1872.239..1872.315 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191574.11..191576.99 rows=24 width=236) (actual time=1872.200..1872.283 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190574.05..190574.07 rows=6 width=236) (actual time=1867.760..1867.761 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190573.81..190573.98 rows=6 width=236) (actual time=1867.733..1867.741 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.17 rows=1481491 width=25) (actual time=0.026..261.276 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.557 ms
 Execution Time: 1872.611 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=53798.45..53798.46 rows=1 width=192) (actual time=435.476..435.560 rows=100 loops=1)
   ->  Sort  (cost=53798.45..53798.46 rows=1 width=192) (actual time=435.474..435.545 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..53798.44 rows=1 width=192) (actual time=387.725..435.148 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6420.60 rows=716 width=30) (actual time=0.862..1.129 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=298 width=30) (actual time=0.422..30.071 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=386.147..386.150 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.753..317.831 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.402..197.018 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.335..6.337 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.682..5.827 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.360..4.246 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.313..0.315 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.307..0.313 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.152..0.153 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.148..0.149 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.144..0.145 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.019..0.024 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.014..0.022 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.012..0.018 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.011..0.011 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.706 ms
 Execution Time: 435.871 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=53798.45..53798.46 rows=1 width=192) (actual time=275.741..275.824 rows=100 loops=1)
   ->  Sort  (cost=53798.45..53798.46 rows=1 width=192) (actual time=275.740..275.816 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=37849.01..53798.44 rows=1 width=192) (actual time=241.171..275.472 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6420.60 rows=716 width=30) (actual time=0.497..0.711 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=298 width=30) (actual time=0.058..14.133 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=240.236..240.240 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.751..178.121 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..49.262 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.738..2.741 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.037..2.260 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.008..0.658 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.025..0.027 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.019..0.025 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.816 ms
 Execution Time: 275.929 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232520.21..232520.24 rows=10 width=44) (actual time=1126.302..1129.008 rows=10 loops=1)
   ->  Sort  (cost=232520.21..233299.75 rows=311817 width=44) (actual time=1126.301..1129.005 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179871.69..225781.96 rows=311817 width=44) (actual time=1102.577..1126.696 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179871.69..217206.99 rows=311817 width=24) (actual time=1102.562..1110.219 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178871.64..179066.52 rows=77954 width=24) (actual time=1094.686..1094.970 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 614kB
                           Worker 0:  Sort Method: quicksort  Memory: 658kB
                           Worker 1:  Sort Method: quicksort  Memory: 731kB
                           Worker 2:  Sort Method: quicksort  Memory: 672kB
                           Worker 3:  Sort Method: quicksort  Memory: 673kB
                           ->  Parallel Hash Join  (cost=37896.70..172537.74 rows=77954 width=24) (actual time=222.084..1092.802 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.17 rows=820122 width=16) (actual time=0.855..804.728 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37321.79..37321.79 rows=45993 width=12) (actual time=215.059..215.061 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4533.04..37321.79 rows=45993 width=12) (actual time=23.785..205.658 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232131 width=16) (actual time=0.582..152.086 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12383 width=4) (actual time=23.064..23.065 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12383 width=4) (actual time=0.079..21.550 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 17.233 ms
 Execution Time: 1129.428 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232520.21..232520.24 rows=10 width=44) (actual time=463.018..467.987 rows=10 loops=1)
   ->  Sort  (cost=232520.21..233299.75 rows=311817 width=44) (actual time=463.016..467.984 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179871.69..225781.96 rows=311817 width=44) (actual time=438.605..465.641 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179871.69..217206.99 rows=311817 width=24) (actual time=438.591..449.185 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178871.64..179066.52 rows=77954 width=24) (actual time=435.048..435.335 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 589kB
                           Worker 0:  Sort Method: quicksort  Memory: 578kB
                           Worker 1:  Sort Method: quicksort  Memory: 711kB
                           Worker 2:  Sort Method: quicksort  Memory: 777kB
                           Worker 3:  Sort Method: quicksort  Memory: 692kB
                           ->  Parallel Hash Join  (cost=37896.70..172537.74 rows=77954 width=24) (actual time=103.422..431.821 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.17 rows=820122 width=16) (actual time=0.046..246.900 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37321.79..37321.79 rows=45993 width=12) (actual time=101.591..101.594 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4533.04..37321.79 rows=45993 width=12) (actual time=10.311..88.741 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232131 width=16) (actual time=0.014..52.163 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12383 width=4) (actual time=9.129..9.129 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12383 width=4) (actual time=0.011..6.365 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.001 ms
 Execution Time: 468.048 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29379.84..63001.72 rows=1 width=24) (actual time=3009.795..3013.030 rows=1 loops=1)
   ->  GroupAggregate  (cost=29379.84..197489.22 rows=5 width=24) (actual time=3009.794..3013.028 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29379.84..197203.05 rows=57224 width=16) (actual time=428.090..3005.224 rows=10479 loops=1)
               ->  Gather Merge  (cost=29379.41..36149.38 rows=57224 width=20) (actual time=427.313..443.049 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28379.37..28425.52 rows=18459 width=20) (actual time=420.755..421.234 rows=3594 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1503kB
                           Worker 0:  Sort Method: quicksort  Memory: 1479kB
                           Worker 1:  Sort Method: quicksort  Memory: 1472kB
                           Worker 2:  Sort Method: quicksort  Memory: 1457kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=663.47..27071.36 rows=18459 width=20) (actual time=5.216..414.625 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5885
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..649.17 rows=57224 width=0) (actual time=7.346..7.347 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.223..0.223 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 14.468 ms
 Execution Time: 3013.715 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29379.84..63001.72 rows=1 width=24) (actual time=78.168..83.329 rows=1 loops=1)
   ->  GroupAggregate  (cost=29379.84..197489.22 rows=5 width=24) (actual time=78.167..83.327 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29379.84..197203.05 rows=57224 width=16) (actual time=34.408..81.878 rows=10479 loops=1)
               ->  Gather Merge  (cost=29379.41..36149.38 rows=57224 width=20) (actual time=34.352..42.571 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28379.37..28425.52 rows=18459 width=20) (actual time=31.140..31.449 rows=3602 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1549kB
                           Worker 0:  Sort Method: quicksort  Memory: 1428kB
                           Worker 1:  Sort Method: quicksort  Memory: 1506kB
                           Worker 2:  Sort Method: quicksort  Memory: 1427kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=663.47..27071.36 rows=18459 width=20) (actual time=6.277..27.206 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=6206
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..649.17 rows=57224 width=0) (actual time=5.356..5.356 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.939 ms
 Execution Time: 83.492 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83929.31..83929.31 rows=1 width=58) (actual time=2180.971..2191.776 rows=1 loops=1)
   ->  Sort  (cost=83929.31..83929.37 rows=25 width=58) (actual time=2180.970..2191.774 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83890.07..83929.19 rows=25 width=58) (actual time=2180.276..2191.763 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83890.07..83928.31 rows=75 width=58) (actual time=2180.069..2191.741 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82890.03..82919.46 rows=25 width=58) (actual time=2172.712..2173.408 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82890.03..82895.86 rows=2329 width=38) (actual time=2172.530..2172.611 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 Worker 0:  Sort Method: quicksort  Memory: 189kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 200kB
                                 ->  Hash Join  (cost=7834.47..82759.78 rows=2329 width=38) (actual time=57.430..2170.799 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7361.47..81980.19 rows=58398 width=50) (actual time=53.046..2152.727 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7361.04..34921.26 rows=14596 width=38) (actual time=52.646..366.040 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2620.91..29846.63 rows=72981 width=8) (actual time=20.222..307.388 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6647
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2564.35 rows=226242 width=0) (actual time=15.995..15.995 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=32.205..32.207 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2400kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.195..29.906 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.086..25.157 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.103..0.105 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.096..0.102 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.043..0.044 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.149..0.156 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.821..3.821 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.091..2.358 rows=10000 loops=4)
 Planning Time: 21.880 ms
 Execution Time: 2192.543 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83929.31..83929.31 rows=1 width=58) (actual time=144.591..158.771 rows=1 loops=1)
   ->  Sort  (cost=83929.31..83929.37 rows=25 width=58) (actual time=144.590..158.769 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83890.07..83929.19 rows=25 width=58) (actual time=143.861..158.757 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83890.07..83928.31 rows=75 width=58) (actual time=143.673..158.733 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82890.03..82919.46 rows=25 width=58) (actual time=139.576..140.270 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82890.03..82895.86 rows=2329 width=38) (actual time=139.394..139.475 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 193kB
                                 Worker 0:  Sort Method: quicksort  Memory: 189kB
                                 Worker 1:  Sort Method: quicksort  Memory: 202kB
                                 Worker 2:  Sort Method: quicksort  Memory: 199kB
                                 ->  Hash Join  (cost=7834.47..82759.78 rows=2329 width=38) (actual time=31.236..138.626 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7361.47..81980.19 rows=58398 width=50) (actual time=28.290..127.741 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7361.04..34921.26 rows=14596 width=38) (actual time=28.265..69.278 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2620.91..29846.63 rows=72981 width=8) (actual time=16.678..43.753 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6519
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2564.35 rows=226242 width=0) (actual time=12.699..12.699 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.401..11.403 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.047..9.456 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.383 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.032..0.034 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.026..0.032 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.012 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.838..2.838 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.401 rows=10000 loops=4)
 Planning Time: 3.332 ms
 Execution Time: 158.861 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106069.97..106069.98 rows=1 width=32) (actual time=1081.838..1083.645 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106069.97..106069.98 rows=1 width=32) (actual time=1081.836..1083.642 rows=1 loops=1)
         ->  Gather  (cost=106069.53..106069.94 rows=4 width=32) (actual time=1076.120..1083.621 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105069.53..105069.54 rows=1 width=32) (actual time=1067.602..1067.603 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20888.48..104924.15 rows=29076 width=12) (actual time=140.914..1051.315 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13323
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20859.40 rows=116305 width=0) (actual time=136.666..136.666 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 9.281 ms
 Execution Time: 1084.781 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106069.97..106069.98 rows=1 width=32) (actual time=211.928..217.282 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106069.97..106069.98 rows=1 width=32) (actual time=211.927..217.280 rows=1 loops=1)
         ->  Gather  (cost=106069.53..106069.94 rows=4 width=32) (actual time=207.322..217.261 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105069.53..105069.54 rows=1 width=32) (actual time=203.254..203.255 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20888.48..104924.15 rows=29076 width=12) (actual time=114.958..195.207 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=10745
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20859.40 rows=116305 width=0) (actual time=106.762..106.762 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.493 ms
 Execution Time: 217.331 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141394.37..141552.73 rows=1 width=92) (actual time=2114.474..2115.632 rows=1 loops=1)
   ->  GroupAggregate  (cost=141394.37..1096811.70 rows=6033 width=92) (actual time=2114.473..2115.630 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141394.37..1096615.62 rows=6033 width=72) (actual time=821.117..2113.574 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32670
               ->  Nested Loop  (cost=141393.95..628472.44 rows=150815 width=76) (actual time=806.260..1553.320 rows=34029 loops=1)
                     ->  Gather Merge  (cost=141393.52..159451.30 rows=150815 width=76) (actual time=805.636..827.855 rows=34029 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140393.46..140487.72 rows=37704 width=76) (actual time=794.742..795.610 rows=7178 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 4777kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5147kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4990kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4211kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5069kB
                                 ->  Hash Join  (cost=381.77..137527.50 rows=37704 width=76) (actual time=3.448..773.128 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135065.01 rows=454355 width=24) (actual time=0.108..720.224 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.219..3.222 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.501..3.078 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.126..1.475 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.355..0.357 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.057..0.068 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.040..0.042 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.006..0.009 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.011 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.021..0.021 rows=1 loops=34029)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=34029)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.844 ms
 Execution Time: 2116.608 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141394.37..141552.73 rows=1 width=92) (actual time=513.538..514.684 rows=1 loops=1)
   ->  GroupAggregate  (cost=141394.37..1096811.70 rows=6033 width=92) (actual time=513.537..514.682 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141394.37..1096615.62 rows=6033 width=72) (actual time=338.630..513.551 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32754
               ->  Nested Loop  (cost=141393.95..628472.44 rows=150815 width=76) (actual time=338.469..437.685 rows=34113 loops=1)
                     ->  Gather Merge  (cost=141393.52..159451.30 rows=150815 width=76) (actual time=338.415..352.765 rows=34113 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140393.46..140487.72 rows=37704 width=76) (actual time=331.284..332.003 rows=7200 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 6224kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5254kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5182kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4395kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3905kB
                                 ->  Hash Join  (cost=381.77..137527.50 rows=37704 width=76) (actual time=3.109..306.984 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135065.01 rows=454355 width=24) (actual time=0.655..250.825 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.341..2.348 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.239..2.211 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..0.677 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.211..0.212 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.024..0.031 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34113)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34113)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.955 ms
 Execution Time: 514.787 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41986.86..42587.62 rows=1 width=40) (actual time=5751.211..5755.269 rows=1 loops=1)
   ->  GroupAggregate  (cost=41986.86..1487424.94 rows=2406 width=40) (actual time=5751.210..5755.268 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=41986.86..1487322.59 rows=2411 width=46) (actual time=257.438..5752.146 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=41986.86..1486438.32 rows=2411 width=20) (actual time=257.413..5747.427 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41986.57..1479343.09 rows=2418 width=20) (actual time=257.190..5711.178 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41986.15..347224.69 rows=364732 width=24) (actual time=234.891..4571.188 rows=183065 loops=1)
                                 ->  Gather Merge  (cost=41985.72..52770.89 rows=91163 width=8) (actual time=234.482..266.721 rows=45678 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40985.68..41059.20 rows=29407 width=8) (actual time=226.409..227.932 rows=12306 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 1814kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1841kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1836kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1858kB
                                             ->  Parallel Hash Join  (cost=4740.13..38803.11 rows=29407 width=8) (actual time=29.871..222.024 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147036 width=12) (actual time=0.391..162.983 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=29.275..29.278 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.527..27.389 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.100..22.458 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.412..0.414 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.125..0.134 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.051..0.054 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.057..0.058 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.086..0.093 rows=4 loops=45678)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=183065)
                                 Index Cond: (p_partkey = lineitem.l_partkey)
                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.028..0.028 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.022 rows=25 loops=1)
 Planning Time: 27.631 ms
 Execution Time: 5755.755 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41986.86..42587.62 rows=1 width=40) (actual time=644.490..650.988 rows=1 loops=1)
   ->  GroupAggregate  (cost=41986.86..1487424.94 rows=2406 width=40) (actual time=644.489..650.986 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=41986.86..1487322.59 rows=2411 width=46) (actual time=100.543..649.806 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14801
               ->  Nested Loop  (cost=41986.86..1486438.32 rows=2411 width=20) (actual time=100.526..647.448 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41986.57..1479343.09 rows=2418 width=20) (actual time=100.508..644.254 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41986.15..347224.69 rows=364732 width=24) (actual time=100.446..284.221 rows=182866 loops=1)
                                 ->  Gather Merge  (cost=41985.72..52770.89 rows=91163 width=8) (actual time=100.400..117.292 rows=45631 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40985.68..41059.20 rows=29407 width=8) (actual time=96.673..97.542 rows=12334 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 1838kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1834kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1839kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1836kB
                                             ->  Parallel Hash Join  (cost=4740.13..38803.11 rows=29407 width=8) (actual time=11.648..93.053 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147036 width=12) (actual time=0.004..59.592 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.424..11.426 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.259..9.496 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.371 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.235..0.237 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.046..0.053 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.009..0.011 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45631)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182866)
                                 Index Cond: (p_partkey = lineitem.l_partkey)
                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.009 rows=25 loops=1)
 Planning Time: 3.899 ms
 Execution Time: 651.071 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54260.75..54275.15 rows=1 width=66) (actual time=4742.138..4745.332 rows=1 loops=1)
   ->  GroupAggregate  (cost=54260.75..920402.85 rows=60150 width=66) (actual time=4742.137..4745.330 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=54260.75..915119.44 rows=241759 width=57) (actual time=4741.222..4744.528 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=18530.17..886728.61 rows=241759 width=57) (actual time=303.837..4724.730 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=241759 width=53) (actual time=303.004..2644.417 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=301.977..307.576 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=296.040..296.190 rows=1086 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2465kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2342kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2467kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=4.769..286.085 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=4.634..282.846 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.750..272.724 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.179..33.465 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.061..0.065 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.865..3.865 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.129..2.591 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.069..0.069 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.058..0.061 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.288..1.282 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.150..0.150 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 25.601 ms
 Execution Time: 4745.917 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54260.75..54275.15 rows=1 width=66) (actual time=124.960..128.918 rows=1 loops=1)
   ->  GroupAggregate  (cost=54260.75..920402.85 rows=60150 width=66) (actual time=124.958..128.916 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=54260.75..915119.44 rows=241759 width=57) (actual time=124.065..128.124 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=18530.17..886728.61 rows=241759 width=57) (actual time=52.947..122.538 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=241759 width=53) (actual time=52.936..77.321 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=52.896..57.645 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=50.134..50.235 rows=1070 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2529kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2376kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2369kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=2.792..41.480 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=2.708..38.844 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.028..31.726 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.014..15.775 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.664..2.665 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.439 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.021 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 4.811 ms
 Execution Time: 129.013 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101393.60..101393.65 rows=20 width=201) (actual time=2047.541..2052.632 rows=20 loops=1)
   ->  Sort  (cost=101393.60..101534.86 rows=56506 width=201) (actual time=2047.540..2052.629 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=99183.67..99889.99 rows=56506 width=201) (actual time=2015.989..2041.007 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6671.05..98477.34 rows=56506 width=181) (actual time=56.522..1909.255 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5671.05..91826.74 rows=18228 width=181) (actual time=49.860..1957.148 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5669.48..91769.22 rows=18228 width=159) (actual time=49.726..1946.731 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=666.23..86718.12 rows=18228 width=16) (actual time=13.364..1889.486 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=665.80..27074.79 rows=18533 width=8) (actual time=12.664..254.439 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4882
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..651.44 rows=57451 width=0) (actual time=8.742..8.742 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.110..0.113 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=147) (actual time=35.956..35.956 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=147) (actual time=0.094..15.528 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.057..0.057 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.049..0.052 rows=25 loops=4)
 Planning Time: 19.201 ms
 Execution Time: 2053.256 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101393.60..101393.65 rows=20 width=201) (actual time=224.214..228.144 rows=20 loops=1)
   ->  Sort  (cost=101393.60..101534.86 rows=56506 width=201) (actual time=224.212..228.141 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=99183.67..99889.99 rows=56506 width=201) (actual time=192.079..216.355 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6671.05..98477.34 rows=56506 width=181) (actual time=42.759..113.113 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5671.05..91826.74 rows=18228 width=181) (actual time=38.736..148.655 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5669.48..91769.22 rows=18228 width=159) (actual time=38.645..141.764 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=666.23..86718.12 rows=18228 width=16) (actual time=10.752..100.775 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=665.80..27074.79 rows=18533 width=8) (actual time=10.716..27.131 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2087
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..651.44 rows=57451 width=0) (actual time=7.195..7.195 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=147) (actual time=27.508..27.508 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=147) (actual time=0.008..7.893 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
 Planning Time: 1.498 ms
 Execution Time: 228.533 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16312.58..16312.58 rows=1 width=36) (actual time=702.922..702.927 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.62..7689.63 rows=1 width=32) (actual time=24.971..24.973 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.62 rows=32000 width=10) (actual time=0.052..17.657 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.268 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.215 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8622.95..8649.62 rows=10667 width=36) (actual time=702.921..702.923 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8009.62..8569.62 rows=10667 width=36) (actual time=692.432..702.778 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.62 rows=32000 width=14) (actual time=0.885..637.997 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.660..4.254 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.193..0.196 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.461..3.918 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.251..0.251 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.042..1.523 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.710 ms
 Execution Time: 703.329 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16312.58..16312.58 rows=1 width=36) (actual time=79.525..79.530 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.62..7689.63 rows=1 width=32) (actual time=25.127..25.129 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.62 rows=32000 width=10) (actual time=0.049..17.750 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.265 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.033..0.211 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8622.95..8649.62 rows=10667 width=36) (actual time=79.524..79.526 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8009.62..8569.62 rows=10667 width=36) (actual time=68.804..79.386 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.62 rows=32000 width=14) (actual time=0.062..26.272 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.052..0.404 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.040..0.338 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.023..0.024 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.385 ms
 Execution Time: 79.869 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147779.01..161137.81 rows=1 width=27) (actual time=1759.909..1760.886 rows=1 loops=1)
   ->  GroupAggregate  (cost=147779.01..241290.61 rows=7 width=27) (actual time=1759.908..1760.884 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147779.01..240786.84 rows=28783 width=27) (actual time=871.651..1751.198 rows=15492 loops=1)
               ->  Gather Merge  (cost=147778.58..151224.90 rows=28783 width=15) (actual time=870.703..879.743 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146778.52..146796.51 rows=7196 width=15) (actual time=862.252..862.621 rows=4008 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 497kB
                           Worker 0:  Sort Method: quicksort  Memory: 472kB
                           Worker 1:  Sort Method: quicksort  Memory: 440kB
                           Worker 2:  Sort Method: quicksort  Memory: 507kB
                           Worker 3:  Sort Method: quicksort  Memory: 498kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.51 rows=7196 width=15) (actual time=0.374..860.315 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.055..0.055 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 13.397 ms
 Execution Time: 1761.849 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147779.01..161137.81 rows=1 width=27) (actual time=411.577..412.584 rows=1 loops=1)
   ->  GroupAggregate  (cost=147779.01..241290.61 rows=7 width=27) (actual time=411.576..412.582 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147779.01..240786.84 rows=28783 width=27) (actual time=361.110..408.339 rows=15492 loops=1)
               ->  Gather Merge  (cost=147778.58..151224.90 rows=28783 width=15) (actual time=361.077..365.823 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146778.52..146796.51 rows=7196 width=15) (actual time=357.400..357.619 rows=4090 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 418kB
                           Worker 0:  Sort Method: quicksort  Memory: 519kB
                           Worker 1:  Sort Method: quicksort  Memory: 515kB
                           Worker 2:  Sort Method: quicksort  Memory: 435kB
                           Worker 3:  Sort Method: quicksort  Memory: 527kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.51 rows=7196 width=15) (actual time=0.058..355.967 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.739 ms
 Execution Time: 412.640 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1452.617..1452.620 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1452.616..1452.618 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1452.590..1452.598 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1412.773..1436.050 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=35.314..1059.581 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.819..626.804 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=34.115..34.116 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..16.524 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.263 ms
 Execution Time: 1454.439 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1257.027..1257.030 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1257.025..1257.028 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1256.996..1257.003 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1217.185..1240.366 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=30.125..881.651 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..474.791 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.758..29.759 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.275 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.898 ms
 Execution Time: 1258.457 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74182.94..74182.96 rows=1 width=32) (actual time=528.534..532.430 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74182.94..74182.96 rows=1 width=32) (actual time=528.532..532.428 rows=1 loops=1)
         ->  Gather  (cost=74182.49..74182.90 rows=4 width=64) (actual time=528.513..532.412 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73182.49..73182.50 rows=1 width=64) (actual time=516.277..516.279 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7200.99..72847.81 rows=19124 width=33) (actual time=58.340..501.106 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1227.00..66823.62 rows=19124 width=16) (actual time=22.207..448.769 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8315
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1207.87 rows=76494 width=0) (actual time=14.420..14.421 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=35.710..35.710 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.085..21.337 rows=40000 loops=5)
 Planning Time: 15.266 ms
 Execution Time: 532.485 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74182.94..74182.96 rows=1 width=32) (actual time=105.843..113.267 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74182.94..74182.96 rows=1 width=32) (actual time=105.842..113.265 rows=1 loops=1)
         ->  Gather  (cost=74182.49..74182.90 rows=4 width=64) (actual time=105.823..113.250 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73182.49..73182.50 rows=1 width=64) (actual time=99.570..99.572 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7200.99..72847.81 rows=19124 width=33) (actual time=40.713..90.888 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1227.00..66823.62 rows=19124 width=16) (actual time=14.370..55.611 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8608
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1207.87 rows=76494 width=0) (actual time=8.406..8.406 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=25.111..25.111 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.014..6.901 rows=40000 loops=5)
 Planning Time: 0.680 ms
 Execution Time: 113.307 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239690.03..239802.14 rows=1 width=103) (actual time=1260.072..1267.709 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121148.11..121148.12 rows=1 width=32) (actual time=228.323..228.324 rows=1 loops=1)
           ->  HashAggregate  (cost=120897.36..121022.73 rows=10030 width=36) (actual time=225.119..227.747 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3547.38..118685.22 rows=221214 width=16) (actual time=27.603..117.208 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3492.07 rows=221214 width=0) (actual time=18.685..18.685 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118541.91..124147.53 rows=50 width=103) (actual time=1260.071..1267.705 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118541.63..124022.41 rows=50 width=36) (actual time=1259.388..1267.022 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118541.63..123345.38 rows=40120 width=36) (actual time=1002.801..1017.986 rows=41792 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117541.57..117566.65 rows=10030 width=36) (actual time=990.941..991.762 rows=8885 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1158kB
                           Worker 2:  Sort Method: quicksort  Memory: 1158kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=116749.60..116874.97 rows=10030 width=36) (actual time=983.192..988.225 rows=9895 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3547.38..116196.56 rows=55304 width=16) (actual time=43.112..931.720 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13043
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3492.07 rows=221214 width=0) (actual time=38.085..38.085 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.677..0.678 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.859 ms
 Execution Time: 1268.537 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239690.03..239802.14 rows=1 width=103) (actual time=408.149..417.693 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121148.11..121148.12 rows=1 width=32) (actual time=213.130..213.131 rows=1 loops=1)
           ->  HashAggregate  (cost=120897.36..121022.73 rows=10030 width=36) (actual time=209.917..212.555 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3547.38..118685.22 rows=221214 width=16) (actual time=27.580..103.181 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3492.07 rows=221214 width=0) (actual time=18.568..18.568 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118541.91..124147.53 rows=50 width=103) (actual time=408.147..417.689 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118541.63..124022.41 rows=50 width=36) (actual time=408.118..417.659 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118541.63..123345.38 rows=40120 width=36) (actual time=167.097..184.164 rows=41776 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117541.57..117566.65 rows=10030 width=36) (actual time=158.219..159.014 rows=8887 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1160kB
                           Worker 1:  Sort Method: quicksort  Memory: 1157kB
                           Worker 2:  Sort Method: quicksort  Memory: 1152kB
                           Worker 3:  Sort Method: quicksort  Memory: 1159kB
                           ->  Partial HashAggregate  (cost=116749.60..116874.97 rows=10030 width=36) (actual time=149.472..155.295 rows=9888 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3547.38..116196.56 rows=55304 width=16) (actual time=33.441..114.769 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13106
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3492.07 rows=221214 width=0) (actual time=27.276..27.276 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.024..0.024 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.806 ms
 Execution Time: 417.853 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26873.99..26873.99 rows=1 width=44) (actual time=281.111..281.747 rows=1 loops=1)
   ->  Sort  (cost=26873.99..26914.27 rows=16111 width=44) (actual time=281.110..281.745 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18793.24..26793.44 rows=16111 width=44) (actual time=190.281..277.418 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18793.24..26028.09 rows=60424 width=40) (actual time=190.255..239.389 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17793.18..17830.95 rows=15106 width=40) (actual time=163.938..165.704 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2572kB
                           Worker 0:  Sort Method: quicksort  Memory: 2402kB
                           Worker 1:  Sort Method: quicksort  Memory: 2603kB
                           Worker 2:  Sort Method: quicksort  Memory: 2816kB
                           Worker 3:  Sort Method: quicksort  Memory: 2663kB
                           ->  Parallel Hash Join  (cost=6688.11..16744.61 rows=15106 width=40) (actual time=35.517..102.721 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.967..57.462 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=2.369..7.180 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12588 width=40) (actual time=27.396..27.396 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12588 width=40) (actual time=0.225..25.401 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 14.447 ms
 Execution Time: 281.814 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26873.99..26873.99 rows=1 width=44) (actual time=245.317..245.723 rows=1 loops=1)
   ->  Sort  (cost=26873.99..26914.27 rows=16111 width=44) (actual time=245.316..245.722 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18793.24..26793.44 rows=16111 width=44) (actual time=154.159..241.320 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18793.24..26028.09 rows=60424 width=40) (actual time=154.132..203.345 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17793.18..17830.95 rows=15106 width=40) (actual time=134.185..135.964 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2812kB
                           Worker 0:  Sort Method: quicksort  Memory: 2697kB
                           Worker 1:  Sort Method: quicksort  Memory: 2254kB
                           Worker 2:  Sort Method: quicksort  Memory: 2377kB
                           Worker 3:  Sort Method: quicksort  Memory: 2915kB
                           ->  Parallel Hash Join  (cost=6688.11..16744.61 rows=15106 width=40) (actual time=17.933..72.846 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.606..38.854 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.557 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12588 width=40) (actual time=14.974..14.974 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12588 width=40) (actual time=0.013..12.267 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.019 ms
 Execution Time: 245.783 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=337932.29..337932.31 rows=1 width=32) (actual time=2320.719..2324.600 rows=1 loops=1)
   ->  Aggregate  (cost=337932.29..337932.31 rows=1 width=32) (actual time=2320.718..2324.598 rows=1 loops=1)
         ->  Merge Join  (cost=222955.21..337927.51 rows=1911 width=8) (actual time=1595.571..2324.501 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221954.33..322573.06 rows=192043 width=36) (actual time=1588.795..2302.328 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221954.33..313931.13 rows=768172 width=36) (actual time=1588.780..1779.964 rows=993610 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220954.27..221434.38 rows=192043 width=36) (actual time=1526.502..1549.319 rows=199265 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 21745kB
                                 Worker 0:  Sort Method: quicksort  Memory: 21746kB
                                 Worker 1:  Sort Method: quicksort  Memory: 21736kB
                                 Worker 2:  Sort Method: quicksort  Memory: 21705kB
                                 Worker 3:  Sort Method: quicksort  Memory: 21698kB
                                 ->  Partial HashAggregate  (cost=187049.24..204101.47 rows=192043 width=36) (actual time=1086.725..1463.152 rows=199444 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 34865kB  Disk Usage: 23352kB
                                       Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 20136kB
                                       Worker 1:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19912kB
                                       Worker 2:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19344kB
                                       Worker 3:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19232kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.34 rows=1500334 width=9) (actual time=0.126..423.171 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12867.32 rows=5971 width=21) (actual time=4.156..10.656 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12852.39 rows=5971 width=21) (actual time=4.151..9.880 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11163.17 rows=2488 width=21) (actual time=0.961..68.490 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=83 width=4) (actual time=0.739..27.757 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.72 rows=31 width=17) (actual time=0.343..0.577 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 11.641 ms
 Execution Time: 2329.021 ms
(38 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=337932.29..337932.31 rows=1 width=32) (actual time=2095.457..2100.461 rows=1 loops=1)
   ->  Aggregate  (cost=337932.29..337932.31 rows=1 width=32) (actual time=2095.455..2100.459 rows=1 loops=1)
         ->  Merge Join  (cost=222955.21..337927.51 rows=1911 width=8) (actual time=1379.013..2100.372 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221954.33..322573.06 rows=192043 width=36) (actual time=1373.151..2083.110 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221954.33..313931.13 rows=768172 width=36) (actual time=1373.134..1562.890 rows=993410 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220954.27..221434.38 rows=192043 width=36) (actual time=1289.644..1312.362 rows=199228 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 21749kB
                                 Worker 0:  Sort Method: quicksort  Memory: 21700kB
                                 Worker 1:  Sort Method: quicksort  Memory: 21720kB
                                 Worker 2:  Sort Method: quicksort  Memory: 21751kB
                                 Worker 3:  Sort Method: quicksort  Memory: 21693kB
                                 ->  Partial HashAggregate  (cost=187049.24..204101.47 rows=192043 width=36) (actual time=845.882..1233.701 rows=199404 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 32817kB  Disk Usage: 23736kB
                                       Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19288kB
                                       Worker 1:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19472kB
                                       Worker 2:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 23624kB
                                       Worker 3:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 16016kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.34 rows=1500334 width=9) (actual time=0.047..164.985 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12867.32 rows=5971 width=21) (actual time=3.486..6.028 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12852.39 rows=5971 width=21) (actual time=3.481..5.276 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11163.17 rows=2488 width=21) (actual time=0.141..17.146 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=83 width=4) (actual time=0.124..14.411 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.72 rows=31 width=17) (actual time=0.005..0.034 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.796 ms
 Execution Time: 2104.135 ms
(38 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803672.10..803672.35 rows=100 width=71) (actual time=4439.183..4439.189 rows=9 loops=1)
   ->  Sort  (cost=803672.10..808674.33 rows=2000889 width=71) (actual time=4439.182..4439.187 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=667016.58..727199.57 rows=2000889 width=71) (actual time=4438.794..4439.147 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338899.04..559234.31 rows=2000889 width=44) (actual time=3702.403..4438.725 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331927.04..547009.83 rows=2000889 width=25) (actual time=3632.332..4368.633 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.35 rows=6001335 width=9) (actual time=0.704..327.880 rows=6001215 loops=1)
                           ->  Hash  (cost=325675.65..325675.65 rows=500111 width=24) (actual time=3434.854..3434.856 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280607.14..325675.65 rows=500111 width=24) (actual time=3076.810..3434.829 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.804..278.439 rows=1500000 loops=1)
                                       ->  Hash  (cost=274355.75..274355.75 rows=500111 width=4) (actual time=2977.204..2977.205 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269354.64 rows=500111 width=4) (actual time=637.455..2977.178 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216842.96 rows=6001335 width=9) (actual time=0.019..1622.901 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.702..69.703 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.426..43.995 rows=150000 loops=1)
 Planning Time: 17.306 ms
 Execution Time: 4440.313 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803672.10..803672.35 rows=100 width=71) (actual time=3366.670..3366.676 rows=9 loops=1)
   ->  Sort  (cost=803672.10..808674.33 rows=2000889 width=71) (actual time=3366.669..3366.673 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=667016.58..727199.57 rows=2000889 width=71) (actual time=3366.278..3366.632 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338899.04..559234.31 rows=2000889 width=44) (actual time=2624.892..3366.207 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331927.04..547009.83 rows=2000889 width=25) (actual time=2580.259..3321.554 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.35 rows=6001335 width=9) (actual time=0.010..327.734 rows=6001215 loops=1)
                           ->  Hash  (cost=325675.65..325675.65 rows=500111 width=24) (actual time=2381.801..2381.804 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280607.14..325675.65 rows=500111 width=24) (actual time=2166.547..2381.781 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..81.561 rows=1500000 loops=1)
                                       ->  Hash  (cost=274355.75..274355.75 rows=500111 width=4) (actual time=2108.254..2108.255 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269354.64 rows=500111 width=4) (actual time=445.395..2108.237 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216842.96 rows=6001335 width=9) (actual time=0.017..815.240 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.218..44.218 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.022..19.294 rows=150000 loops=1)
 Planning Time: 1.328 ms
 Execution Time: 3367.418 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18074.77..18074.78 rows=1 width=32) (actual time=846.446..846.590 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18074.77..18074.78 rows=1 width=32) (actual time=846.445..846.588 rows=1 loops=1)
         ->  Gather  (cost=18074.55..18074.76 rows=2 width=32) (actual time=846.432..846.578 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17074.55..17074.56 rows=1 width=32) (actual time=838.105..838.106 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17074.20 rows=47 width=12) (actual time=18.807..837.995 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=196 width=30) (actual time=0.662..29.497 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.12 rows=1 width=21) (actual time=4.268..4.782 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.907 ms
 Execution Time: 847.294 ms
(16 rows)

SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18074.77..18074.78 rows=1 width=32) (actual time=28.791..32.713 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18074.77..18074.78 rows=1 width=32) (actual time=28.790..32.711 rows=1 loops=1)
         ->  Gather  (cost=18074.55..18074.76 rows=2 width=32) (actual time=28.671..32.703 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17074.55..17074.56 rows=1 width=32) (actual time=26.268..26.269 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17074.20 rows=47 width=12) (actual time=0.597..26.233 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=196 width=30) (actual time=0.118..17.051 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.12 rows=1 width=21) (actual time=0.048..0.054 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.927 ms
 Execution Time: 32.760 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=214940.43..214940.44 rows=1 width=51) (actual time=3790.043..3790.125 rows=1 loops=1)
   ->  Sort  (cost=214940.43..214940.44 rows=1 width=51) (actual time=3790.042..3790.123 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185308.16..214940.42 rows=1 width=51) (actual time=3620.933..3789.910 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.540..3.835 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.203..0.206 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.332..2.865 rows=10000 loops=1)
               ->  Materialize  (cost=185308.16..214485.11 rows=1 width=8) (actual time=5.727..8.405 rows=4356 loops=438)
                     ->  Nested Loop  (cost=185308.16..214485.11 rows=1 width=8) (actual time=2508.423..3614.542 rows=5898 loops=1)
                           ->  Hash Join  (cost=185307.74..207524.03 rows=4884 width=44) (actual time=2508.029..3123.786 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178939.82..195051.15 rows=483560 width=40) (actual time=2473.268..3038.305 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14543.22..140709.00 rows=907052 width=13) (actual time=129.390..1995.002 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14316.45 rows=907052 width=0) (actual time=112.662..112.662 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=34.743..34.822 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.690..34.296 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.158..27.699 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.082..0.082 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 19.637 ms
 Execution Time: 3795.819 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=214940.43..214940.44 rows=1 width=51) (actual time=1445.003..1445.076 rows=1 loops=1)
   ->  Sort  (cost=214940.43..214940.44 rows=1 width=51) (actual time=1445.001..1445.074 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185308.16..214940.42 rows=1 width=51) (actual time=1275.038..1444.902 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.025..1.722 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.012..0.609 rows=10000 loops=1)
               ->  Materialize  (cost=185308.16..214485.11 rows=1 width=8) (actual time=1.601..3.052 rows=4356 loops=438)
                     ->  Nested Loop  (cost=185308.16..214485.11 rows=1 width=8) (actual time=701.151..1271.800 rows=5898 loops=1)
                           ->  Hash Join  (cost=185307.74..207524.03 rows=4884 width=44) (actual time=701.130..1249.058 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178939.82..195051.15 rows=483560 width=40) (actual time=689.359..1199.265 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14543.22..140709.00 rows=907052 width=13) (actual time=92.914..298.051 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14316.45 rows=907052 width=0) (actual time=76.719..76.720 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.754..11.825 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.325..11.467 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.019..8.924 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.571 ms
 Execution Time: 1449.990 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194002.46..194002.46 rows=1 width=34) (actual time=1557.566..1557.680 rows=100 loops=1)
   ->  Sort  (cost=194002.46..194002.46 rows=1 width=34) (actual time=1557.564..1557.672 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194002.43..194002.45 rows=1 width=34) (actual time=1556.505..1557.251 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194002.43..194002.43 rows=1 width=26) (actual time=1556.496..1556.768 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194002.42 rows=1 width=26) (actual time=11.144..1543.067 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..193999.02 rows=1 width=38) (actual time=10.569..1459.561 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..193995.71 rows=1 width=34) (actual time=9.003..74.138 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..192995.61 rows=1 width=34) (actual time=2.298..727.929 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.11 rows=19944 width=34) (actual time=1.699..567.440 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.17 rows=500111 width=8) (actual time=0.098..499.654 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.508..1.509 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.377..1.434 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.136..0.138 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.236..1.240 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.156..0.156 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.096..0.096 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.030 ms
 Execution Time: 1558.772 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194002.46..194002.46 rows=1 width=34) (actual time=490.279..490.374 rows=100 loops=1)
   ->  Sort  (cost=194002.46..194002.46 rows=1 width=34) (actual time=490.278..490.367 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194002.43..194002.45 rows=1 width=34) (actual time=489.256..489.962 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194002.43..194002.43 rows=1 width=26) (actual time=489.245..489.485 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194002.42 rows=1 width=26) (actual time=1.652..476.658 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..193999.02 rows=1 width=38) (actual time=1.594..458.679 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..193995.71 rows=1 width=34) (actual time=1.582..398.687 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..192995.61 rows=1 width=34) (actual time=1.783..450.229 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.11 rows=19944 width=34) (actual time=1.419..346.668 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.17 rows=500111 width=8) (actual time=0.030..274.170 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.298..1.300 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.062..1.236 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.049..1.175 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.029..0.029 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.523 ms
 Execution Time: 490.482 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.58..12517.15 rows=1 width=72) (actual time=145.412..147.091 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=43.367..43.441 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=43.239..43.423 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=36.851..36.852 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1994 width=6) (actual time=0.112..35.560 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7455.71 rows=757 width=72) (actual time=145.411..147.015 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7436.78 rows=757 width=38) (actual time=71.113..146.551 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=69.896..72.885 rows=2738 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=23.455..23.608 rows=1569 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 797kB
                           Worker 0:  Sort Method: quicksort  Memory: 650kB
                           Worker 1:  Sort Method: quicksort  Memory: 621kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..21.416 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.026..0.026 rows=1 loops=2738)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 14.297 ms
 Execution Time: 147.801 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.58..12517.15 rows=1 width=72) (actual time=59.622..61.123 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=28.967..29.040 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=28.829..29.029 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=26.572..26.573 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1994 width=6) (actual time=0.015..25.410 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7455.71 rows=757 width=72) (actual time=59.621..61.047 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7436.78 rows=757 width=38) (actual time=53.329..60.821 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=53.292..55.421 rows=2735 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.848..21.930 rows=1548 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 768kB
                           Worker 0:  Sort Method: quicksort  Memory: 648kB
                           Worker 1:  Sort Method: quicksort  Memory: 652kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..19.794 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.734 ms
 Execution Time: 61.180 ms
(30 rows)

