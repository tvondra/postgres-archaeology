query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191570.57..191571.25 rows=1 width=236) (actual time=2092.138..2092.847 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191570.57..191574.63 rows=6 width=236) (actual time=2092.137..2092.846 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191570.57..191573.45 rows=24 width=236) (actual time=2092.091..2092.820 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190570.52..190570.53 rows=6 width=236) (actual time=2084.534..2084.535 rows=3 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190570.27..190570.44 rows=6 width=236) (actual time=2084.506..2084.514 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.71 rows=1481389 width=25) (actual time=0.126..502.913 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 11.253 ms
 Execution Time: 2093.424 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191570.57..191571.25 rows=1 width=236) (actual time=1881.628..1881.702 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191570.57..191574.63 rows=6 width=236) (actual time=1881.627..1881.701 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191570.57..191573.45 rows=24 width=236) (actual time=1881.591..1881.669 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190570.52..190570.53 rows=6 width=236) (actual time=1877.219..1877.220 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190570.27..190570.44 rows=6 width=236) (actual time=1877.194..1877.201 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.71 rows=1481389 width=25) (actual time=0.029..276.927 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.466 ms
 Execution Time: 1881.765 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=53621.10..53621.11 rows=1 width=192) (actual time=492.745..492.834 rows=100 loops=1)
   ->  Sort  (cost=53621.10..53621.11 rows=1 width=192) (actual time=492.743..492.827 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..53621.09 rows=1 width=192) (actual time=382.229..492.219 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6418.70 rows=697 width=30) (actual time=0.715..1.096 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=290 width=30) (actual time=0.774..39.650 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=380.682..380.686 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.511..312.070 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.387..192.926 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.114..6.116 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.648..5.596 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.266..3.978 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.377..0.378 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.365..0.375 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.165..0.168 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.192..0.193 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.186..0.188 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.074..0.074 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.066..0.072 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.058..0.070 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.056..0.065 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.054..0.055 rows=4 loops=1288)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 19.404 ms
 Execution Time: 493.431 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=53621.10..53621.11 rows=1 width=192) (actual time=270.236..270.312 rows=100 loops=1)
   ->  Sort  (cost=53621.10..53621.11 rows=1 width=192) (actual time=270.235..270.305 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=37849.01..53621.09 rows=1 width=192) (actual time=235.370..269.683 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6418.70 rows=697 width=30) (actual time=0.297..0.532 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=290 width=30) (actual time=0.029..13.953 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=234.617..234.620 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.679..172.534 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..47.478 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.667..2.669 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.033..2.200 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.009..0.631 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.020..0.021 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.014..0.020 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.682 ms
 Execution Time: 270.424 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233542.84..233542.87 rows=10 width=44) (actual time=1144.454..1145.842 rows=10 loops=1)
   ->  Sort  (cost=233542.84..234318.44 rows=310240 width=44) (actual time=1144.453..1145.840 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179803.29..226838.67 rows=310240 width=44) (actual time=1127.592..1143.391 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179803.29..219082.67 rows=310240 width=44) (actual time=1127.584..1135.217 rows=12052 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178803.24..181130.04 rows=77560 width=44) (actual time=1118.130..1121.937 rows=2410 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178803.24..178997.14 rows=77560 width=24) (actual time=1118.114..1118.400 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 661kB
                                 Worker 0:  Sort Method: quicksort  Memory: 686kB
                                 Worker 1:  Sort Method: quicksort  Memory: 697kB
                                 Worker 2:  Sort Method: quicksort  Memory: 594kB
                                 Worker 3:  Sort Method: quicksort  Memory: 710kB
                                 ->  Parallel Hash Join  (cost=37898.89..172504.19 rows=77560 width=24) (actual time=249.772..1116.217 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.71 rows=810789 width=16) (actual time=0.510..799.600 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37320.30..37320.30 rows=46287 width=12) (actual time=246.231..246.233 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                             ->  Parallel Hash Join  (cost=4534.89..37320.30 rows=46287 width=12) (actual time=23.893..236.870 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230859 width=16) (actual time=0.613..183.506 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12531 width=4) (actual time=23.144..23.144 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12531 width=4) (actual time=0.274..21.535 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 18.490 ms
 Execution Time: 1146.737 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233542.84..233542.87 rows=10 width=44) (actual time=461.430..462.806 rows=10 loops=1)
   ->  Sort  (cost=233542.84..234318.44 rows=310240 width=44) (actual time=461.428..462.804 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179803.29..226838.67 rows=310240 width=44) (actual time=442.404..460.429 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179803.29..219082.67 rows=310240 width=44) (actual time=442.399..450.652 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178803.24..181130.04 rows=77560 width=44) (actual time=437.175..440.988 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178803.24..178997.14 rows=77560 width=24) (actual time=437.163..437.444 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 726kB
                                 Worker 0:  Sort Method: quicksort  Memory: 591kB
                                 Worker 1:  Sort Method: quicksort  Memory: 707kB
                                 Worker 2:  Sort Method: quicksort  Memory: 743kB
                                 Worker 3:  Sort Method: quicksort  Memory: 580kB
                                 ->  Parallel Hash Join  (cost=37898.89..172504.19 rows=77560 width=24) (actual time=99.544..435.583 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.71 rows=810789 width=16) (actual time=0.121..259.570 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37320.30..37320.30 rows=46287 width=12) (actual time=98.034..98.037 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                             ->  Parallel Hash Join  (cost=4534.89..37320.30 rows=46287 width=12) (actual time=9.494..88.705 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230859 width=16) (actual time=0.014..51.580 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12531 width=4) (actual time=8.214..8.214 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12531 width=4) (actual time=0.010..5.715 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 0.861 ms
 Execution Time: 462.868 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79637.31..79637.69 rows=1 width=24) (actual time=1982.641..1993.280 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79637.31..79639.21 rows=5 width=24) (actual time=1982.640..1993.278 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=79637.31..79639.09 rows=15 width=24) (actual time=1982.632..1993.272 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=78637.27..78637.28 rows=5 width=24) (actual time=1975.930..1975.932 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=78637.16..78637.21 rows=5 width=24) (actual time=1975.911..1975.912 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=810.36..78546.37 rows=18159 width=16) (actual time=8.505..1966.667 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=809.93..27213.32 rows=18159 width=20) (actual time=8.134..267.618 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5774
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..795.86 rows=56293 width=0) (actual time=10.436..10.436 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.120..0.120 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 16.631 ms
 Execution Time: 1994.223 ms
(26 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79637.31..79637.69 rows=1 width=24) (actual time=94.197..108.766 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79637.31..79639.21 rows=5 width=24) (actual time=94.196..108.765 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=79637.31..79639.09 rows=15 width=24) (actual time=94.190..108.759 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=78637.27..78637.28 rows=5 width=24) (actual time=90.797..90.799 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=78637.16..78637.21 rows=5 width=24) (actual time=90.779..90.781 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=810.36..78546.37 rows=18159 width=16) (actual time=7.296..86.782 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=809.93..27213.32 rows=18159 width=20) (actual time=7.268..25.051 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5778
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..795.86 rows=56293 width=0) (actual time=6.694..6.694 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 0.659 ms
 Execution Time: 108.832 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84676.89..84676.89 rows=1 width=58) (actual time=2269.462..2279.992 rows=1 loops=1)
   ->  Sort  (cost=84676.89..84676.95 rows=25 width=58) (actual time=2269.461..2279.990 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84637.61..84676.76 rows=25 width=58) (actual time=2268.775..2279.979 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84637.61..84675.89 rows=75 width=58) (actual time=2268.601..2279.952 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83637.57..83667.04 rows=25 width=58) (actual time=2261.324..2262.019 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83637.57..83643.40 rows=2332 width=38) (actual time=2261.142..2261.225 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 Worker 0:  Sort Method: quicksort  Memory: 196kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 194kB
                                 ->  Hash Join  (cost=8459.07..83507.13 rows=2332 width=38) (actual time=69.917..2259.422 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7986.07..82728.05 rows=58301 width=50) (actual time=65.479..2240.725 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7985.64..35543.45 rows=14572 width=38) (actual time=65.078..372.403 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3245.50..30469.38 rows=72858 width=8) (actual time=30.504..311.718 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6380
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3189.04 rows=225861 width=0) (actual time=26.245..26.245 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=34.434..34.436 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.217..32.070 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.095..27.318 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.115..0.117 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.108..0.115 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.050..0.052 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.155..0.163 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.645..3.646 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.082..2.274 rows=10000 loops=4)
 Planning Time: 23.404 ms
 Execution Time: 2280.927 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84676.89..84676.89 rows=1 width=58) (actual time=151.190..165.762 rows=1 loops=1)
   ->  Sort  (cost=84676.89..84676.95 rows=25 width=58) (actual time=151.189..165.760 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84637.61..84676.76 rows=25 width=58) (actual time=150.533..165.749 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84637.61..84675.89 rows=75 width=58) (actual time=150.360..165.730 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83637.57..83667.04 rows=25 width=58) (actual time=146.495..147.167 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83637.57..83643.40 rows=2332 width=38) (actual time=146.325..146.407 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 Worker 0:  Sort Method: quicksort  Memory: 199kB
                                 Worker 1:  Sort Method: quicksort  Memory: 195kB
                                 Worker 2:  Sort Method: quicksort  Memory: 193kB
                                 ->  Hash Join  (cost=8459.07..83507.13 rows=2332 width=38) (actual time=35.044..145.574 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7986.07..82728.05 rows=58301 width=50) (actual time=32.183..133.813 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7985.64..35543.45 rows=14572 width=38) (actual time=32.158..71.951 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3245.50..30469.38 rows=72858 width=8) (actual time=20.858..46.553 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6566
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3189.04 rows=225861 width=0) (actual time=16.872..16.873 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.156..11.160 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.036..9.116 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.005..3.295 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.025..0.027 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.019..0.025 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.780..2.780 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.427 rows=10000 loops=4)
 Planning Time: 2.963 ms
 Execution Time: 166.068 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107409.96..107409.97 rows=1 width=32) (actual time=1057.164..1063.788 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107409.96..107409.97 rows=1 width=32) (actual time=1057.162..1063.786 rows=1 loops=1)
         ->  Gather  (cost=107409.52..107409.93 rows=4 width=32) (actual time=1057.151..1063.777 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106409.52..106409.53 rows=1 width=32) (actual time=1048.821..1048.822 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21262.19..106261.01 rows=29702 width=12) (actual time=132.377..1030.997 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13369
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21232.49 rows=118808 width=0) (actual time=126.422..126.422 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.100 ms
 Execution Time: 1064.522 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107409.96..107409.97 rows=1 width=32) (actual time=203.963..206.443 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107409.96..107409.97 rows=1 width=32) (actual time=203.962..206.441 rows=1 loops=1)
         ->  Gather  (cost=107409.52..107409.93 rows=4 width=32) (actual time=197.775..206.425 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106409.52..106409.53 rows=1 width=32) (actual time=194.250..194.251 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21262.19..106261.01 rows=29702 width=12) (actual time=103.041..186.397 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=10798
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21232.49 rows=118808 width=0) (actual time=93.887..93.887 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.424 ms
 Execution Time: 206.485 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163956.84..163956.99 rows=1 width=92) (actual time=1473.720..1489.446 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163956.84..164897.10 rows=6081 width=92) (actual time=1473.719..1489.444 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163956.84..164717.11 rows=5886 width=92) (actual time=1473.541..1489.436 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162956.80..163025.47 rows=1962 width=92) (actual time=1466.591..1466.912 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162956.80..162961.70 rows=1962 width=72) (actual time=1466.408..1466.450 rows=958 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 245kB
                           Worker 0:  Sort Method: quicksort  Memory: 258kB
                           Worker 1:  Sort Method: quicksort  Memory: 249kB
                           Worker 2:  Sort Method: quicksort  Memory: 248kB
                           ->  Hash Join  (cost=4843.31..162849.49 rows=1962 width=72) (actual time=37.969..1464.910 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162222.40 rows=47138 width=46) (actual time=31.725..1449.961 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=31.096..262.165 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.668..156.021 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=30.307..30.309 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.114..29.403 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.095..25.435 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.039..0.040 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.994..2.995 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.135..2.873 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.070..1.587 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.061..0.061 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.057..0.059 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 22.249 ms
 Execution Time: 1490.071 ms
(48 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163956.84..163956.99 rows=1 width=92) (actual time=255.138..274.026 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163956.84..164897.10 rows=6081 width=92) (actual time=255.137..274.024 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163956.84..164717.11 rows=5886 width=92) (actual time=254.937..274.016 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162956.80..163025.47 rows=1962 width=92) (actual time=250.241..250.574 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162956.80..162961.70 rows=1962 width=72) (actual time=250.058..250.101 rows=961 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 251kB
                           Worker 0:  Sort Method: quicksort  Memory: 253kB
                           Worker 1:  Sort Method: quicksort  Memory: 246kB
                           Worker 2:  Sort Method: quicksort  Memory: 250kB
                           ->  Hash Join  (cost=4843.31..162849.49 rows=1962 width=72) (actual time=13.968..249.087 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162222.40 rows=47138 width=46) (actual time=10.651..238.791 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=10.612..106.437 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.007..31.978 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=10.496..10.498 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.026..9.798 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.839 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=3.046..3.047 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.031..2.944 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.642 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.390 ms
 Execution Time: 274.116 ms
(48 rows)

query 8 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70382.46..70382.60 rows=1 width=40) (actual time=2235.443..2246.056 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70382.46..70738.52 rows=2406 width=40) (actual time=2235.442..2246.055 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70382.46..70659.09 rows=2024 width=72) (actual time=2235.246..2246.044 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=69382.43..69425.44 rows=1012 width=72) (actual time=2229.205..2229.404 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69382.43..69384.96 rows=1012 width=46) (actual time=2228.998..2229.042 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 89kB
                           Worker 0:  Sort Method: quicksort  Memory: 89kB
                           Worker 1:  Sort Method: quicksort  Memory: 90kB
                           ->  Hash Join  (cost=64819.31..69331.92 rows=1012 width=46) (actual time=2187.312..2228.709 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64817.74..69322.19 rows=1012 width=20) (actual time=2186.862..2227.841 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=64369.74..68871.54 rows=1012 width=20) (actual time=2183.031..2223.673 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=64367.24..68839.93 rows=5061 width=24) (actual time=2182.478..2223.086 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.583..33.638 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=64318.26..64318.26 rows=3918 width=24) (actual time=2181.736..2181.739 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=30359.76..64318.26 rows=3918 width=24) (actual time=1957.102..2179.468 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147498 width=12) (actual time=0.353..195.697 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=30152.21..30152.21 rows=16604 width=20) (actual time=1956.508..1956.509 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..30152.21 rows=16604 width=20) (actual time=0.790..1941.778 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=553 width=4) (actual time=0.406..22.827 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.323..4.342 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.089..0.090 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.083..0.089 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.076..0.076 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.074..0.074 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.814..3.814 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.083..2.410 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.084..0.085 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.074..0.077 rows=25 loops=3)
 Planning Time: 24.828 ms
 Execution Time: 2246.981 ms
(55 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70382.46..70382.60 rows=1 width=40) (actual time=145.822..159.836 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70382.46..70738.52 rows=2406 width=40) (actual time=145.821..159.835 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70382.46..70659.09 rows=2024 width=72) (actual time=145.614..159.826 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=69382.43..69425.44 rows=1012 width=72) (actual time=142.832..143.029 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69382.43..69384.96 rows=1012 width=46) (actual time=142.632..142.673 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 92kB
                           Worker 0:  Sort Method: quicksort  Memory: 88kB
                           Worker 1:  Sort Method: quicksort  Memory: 88kB
                           ->  Hash Join  (cost=64819.31..69331.92 rows=1012 width=46) (actual time=130.165..142.448 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64817.74..69322.19 rows=1012 width=20) (actual time=130.116..142.112 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=64369.74..68871.54 rows=1012 width=20) (actual time=127.251..138.964 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=64367.24..68839.93 rows=5061 width=24) (actual time=127.167..138.551 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.010..3.895 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=64318.26..64318.26 rows=3918 width=24) (actual time=126.989..126.991 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=30359.76..64318.26 rows=3918 width=24) (actual time=36.389..125.332 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147498 width=12) (actual time=0.014..67.992 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=30152.21..30152.21 rows=16604 width=20) (actual time=36.260..36.261 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..30152.21 rows=16604 width=20) (actual time=0.071..32.053 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=553 width=4) (actual time=0.052..8.479 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.004..0.048 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.035..0.036 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.030..0.035 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.006 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.847..2.848 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.447 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.018 rows=25 loops=3)
 Planning Time: 3.611 ms
 Execution Time: 159.934 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131140.15..131140.55 rows=1 width=66) (actual time=3808.701..3836.032 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=131140.15..155350.52 rows=60150 width=66) (actual time=3808.699..3836.030 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=131140.15..152493.40 rows=180450 width=66) (actual time=3808.685..3836.018 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=130140.11..130290.48 rows=60150 width=66) (actual time=3799.752..3799.765 rows=132 loops=4)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=124312.69..125365.32 rows=60150 width=66) (actual time=3798.965..3799.567 rows=175 loops=4)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=88399.82..122259.44 rows=117329 width=57) (actual time=3425.021..3725.853 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.904..184.830 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=86505.44..86505.44 rows=151550 width=53) (actual time=3422.491..3422.495 rows=81482 loops=4)
                                       Buckets: 524288  Batches: 1  Memory Usage: 34688kB
                                       ->  Nested Loop  (cost=450.42..86505.44 rows=151550 width=53) (actual time=4.383..3369.616 rows=81482 loops=4)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=449.99..22094.67 rows=20202 width=48) (actual time=4.119..189.830 rows=10880 loops=4)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Hash Join  (cost=448.43..22031.09 rows=20202 width=26) (actual time=4.037..185.725 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.42..21530.04 rows=20202 width=18) (actual time=0.398..175.712 rows=10880 loops=4)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.165..23.347 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.052..0.055 rows=4 loops=10880)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.611..3.612 rows=10000 loops=4)
                                                               Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                               ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.074..2.333 rows=10000 loops=4)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.076..0.077 rows=25 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.066..0.069 rows=25 loops=4)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.049..0.289 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
 Planning Time: 27.974 ms
 Execution Time: 3837.545 ms
(41 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131140.15..131140.55 rows=1 width=66) (actual time=446.503..474.952 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=131140.15..155350.52 rows=60150 width=66) (actual time=446.502..474.950 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=131140.15..152493.40 rows=180450 width=66) (actual time=446.490..474.939 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=130140.11..130290.48 rows=60150 width=66) (actual time=441.379..441.392 rows=132 loops=4)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=124312.69..125365.32 rows=60150 width=66) (actual time=440.627..441.199 rows=175 loops=4)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=88399.82..122259.44 rows=117329 width=57) (actual time=220.818..371.885 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.010..31.733 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=86505.44..86505.44 rows=151550 width=53) (actual time=220.029..220.033 rows=81482 loops=4)
                                       Buckets: 524288  Batches: 1  Memory Usage: 34688kB
                                       ->  Nested Loop  (cost=450.42..86505.44 rows=151550 width=53) (actual time=4.883..179.105 rows=81482 loops=4)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=449.99..22094.67 rows=20202 width=48) (actual time=4.862..37.865 rows=10880 loops=4)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Hash Join  (cost=448.43..22031.09 rows=20202 width=26) (actual time=4.834..35.257 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.42..21530.04 rows=20202 width=18) (actual time=0.038..25.662 rows=10880 loops=4)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.016..12.065 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.777..4.778 rows=10000 loops=4)
                                                               Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                               ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..2.474 rows=10000 loops=4)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.018 rows=25 loops=4)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.011 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
 Planning Time: 4.686 ms
 Execution Time: 475.677 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101137.65..101137.70 rows=20 width=202) (actual time=2150.920..2155.631 rows=20 loops=1)
   ->  Sort  (cost=101137.65..101277.89 rows=56096 width=202) (actual time=2150.919..2155.628 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98943.76..99644.96 rows=56096 width=202) (actual time=2118.616..2143.925 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6824.17..98242.56 rows=56096 width=182) (actual time=65.898..2016.614 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5824.17..91632.96 rows=18095 width=182) (actual time=57.798..2064.931 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5822.61..91575.84 rows=18095 width=160) (actual time=57.682..2054.089 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=819.36..86525.09 rows=18095 width=16) (actual time=16.229..1991.616 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=818.93..27225.14 rows=18348 width=8) (actual time=15.583..217.758 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4945
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..804.71 rows=56878 width=0) (actual time=11.580..11.580 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.119..0.123 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=41.010..41.011 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29280kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.115..20.642 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.061..0.062 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.054..0.056 rows=25 loops=4)
 Planning Time: 20.970 ms
 Execution Time: 2156.712 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101137.65..101137.70 rows=20 width=202) (actual time=222.466..226.557 rows=20 loops=1)
   ->  Sort  (cost=101137.65..101277.89 rows=56096 width=202) (actual time=222.465..226.554 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98943.76..99644.96 rows=56096 width=202) (actual time=189.466..214.379 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6824.17..98242.56 rows=56096 width=182) (actual time=43.864..114.138 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5824.17..91632.96 rows=18095 width=182) (actual time=40.165..150.966 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5822.61..91575.84 rows=18095 width=160) (actual time=40.088..144.171 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=819.36..86525.09 rows=18095 width=16) (actual time=11.994..102.690 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=818.93..27225.14 rows=18348 width=8) (actual time=11.957..27.794 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2159
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..804.71 rows=56878 width=0) (actual time=8.412..8.413 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.685..27.686 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.912 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=4)
 Planning Time: 1.251 ms
 Execution Time: 226.916 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22716.64..22716.65 rows=1 width=36) (actual time=716.781..716.786 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.65..10891.66 rows=1 width=32) (actual time=26.291..26.293 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.65 rows=32000 width=10) (actual time=0.055..18.641 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.049..0.276 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.218 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.024..0.025 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11824.98..11851.65 rows=10667 width=36) (actual time=716.780..716.782 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.65..11771.65 rows=10667 width=36) (actual time=705.936..716.636 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.65 rows=32000 width=14) (actual time=1.361..650.677 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=1.009..4.426 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.205..0.207 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.797..4.112 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.598..0.598 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.094..1.555 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.374 ms
 Execution Time: 717.652 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22716.64..22716.65 rows=1 width=36) (actual time=81.887..81.892 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.65..10891.66 rows=1 width=32) (actual time=26.233..26.236 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.65 rows=32000 width=10) (actual time=0.056..18.626 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.050..0.288 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.038..0.226 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11824.98..11851.65 rows=10667 width=36) (actual time=81.886..81.888 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.65..11771.65 rows=10667 width=36) (actual time=71.117..81.729 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.65 rows=32000 width=14) (actual time=0.063..27.234 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.057..0.400 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.048..0.335 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.031..0.032 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.056 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.248 ms
 Execution Time: 82.242 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170535.44..170556.86 rows=1 width=27) (actual time=1126.566..1126.648 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170535.44..170685.35 rows=7 width=27) (actual time=1126.565..1126.647 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170535.44..170685.07 rows=28 width=27) (actual time=1125.680..1126.639 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169535.38..169681.67 rows=7 width=27) (actual time=1113.794..1114.707 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169535.38..169553.66 rows=7311 width=27) (actual time=1112.905..1113.149 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 656kB
                           Worker 0:  Sort Method: quicksort  Memory: 677kB
                           Worker 1:  Sort Method: quicksort  Memory: 697kB
                           Worker 2:  Sort Method: quicksort  Memory: 667kB
                           Worker 3:  Sort Method: quicksort  Memory: 683kB
                           ->  Nested Loop  (cost=0.43..169066.17 rows=7311 width=27) (actual time=0.864..1108.984 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146318.48 rows=7311 width=15) (actual time=0.719..719.533 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.062..0.062 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.905 ms
 Execution Time: 1127.525 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170535.44..170556.86 rows=1 width=27) (actual time=402.131..402.234 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170535.44..170685.35 rows=7 width=27) (actual time=402.130..402.232 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170535.44..170685.07 rows=28 width=27) (actual time=401.194..402.224 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169535.38..169681.67 rows=7 width=27) (actual time=393.762..394.686 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169535.38..169553.66 rows=7311 width=27) (actual time=392.866..393.111 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 655kB
                           Worker 0:  Sort Method: quicksort  Memory: 691kB
                           Worker 1:  Sort Method: quicksort  Memory: 572kB
                           Worker 2:  Sort Method: quicksort  Memory: 708kB
                           Worker 3:  Sort Method: quicksort  Memory: 756kB
                           ->  Nested Loop  (cost=0.43..169066.17 rows=7311 width=27) (actual time=0.160..390.839 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146318.48 rows=7311 width=15) (actual time=0.145..359.840 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.642 ms
 Execution Time: 402.292 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1452.725..1452.727 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1452.723..1452.725 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1452.699..1452.705 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1412.172..1435.601 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=33.622..1051.031 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.704..625.459 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.560..32.560 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.012..15.907 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.819 ms
 Execution Time: 1454.324 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1259.482..1259.485 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1259.481..1259.483 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1259.456..1259.463 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1219.064..1242.254 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=29.006..873.399 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.012..474.384 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.576..28.577 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..12.885 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.639 ms
 Execution Time: 1260.596 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72580.01..72580.03 rows=1 width=32) (actual time=529.625..532.120 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72580.01..72580.03 rows=1 width=32) (actual time=529.624..532.118 rows=1 loops=1)
         ->  Gather  (cost=72579.56..72579.97 rows=4 width=64) (actual time=524.686..532.097 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71579.56..71579.57 rows=1 width=64) (actual time=516.159..516.161 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7155.66..71257.20 rows=18420 width=33) (actual time=55.062..501.256 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1181.66..65234.86 rows=18420 width=16) (actual time=20.958..452.345 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7930
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1163.24 rows=73681 width=0) (actual time=13.688..13.689 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.716..33.716 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.290..19.970 rows=40000 loops=5)
 Planning Time: 15.406 ms
 Execution Time: 532.880 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72580.01..72580.03 rows=1 width=32) (actual time=116.350..118.773 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72580.01..72580.03 rows=1 width=32) (actual time=116.348..118.771 rows=1 loops=1)
         ->  Gather  (cost=72579.56..72579.97 rows=4 width=64) (actual time=109.957..118.748 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71579.56..71579.57 rows=1 width=64) (actual time=106.481..106.483 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7155.66..71257.20 rows=18420 width=33) (actual time=39.339..99.128 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1181.66..65234.86 rows=18420 width=16) (actual time=15.359..66.955 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7240
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1163.24 rows=73681 width=0) (actual time=8.620..8.620 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.387..23.387 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.010..7.827 rows=40000 loops=5)
 Planning Time: 0.592 ms
 Execution Time: 118.814 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241440.52..241551.91 rows=1 width=103) (actual time=1269.218..1276.883 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122066.88..122066.89 rows=1 width=32) (actual time=232.715..232.716 rows=1 loops=1)
           ->  HashAggregate  (cost=121817.78..121942.33 rows=9964 width=36) (actual time=229.405..232.095 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3616.75..119561.37 rows=225641 width=16) (actual time=26.976..117.335 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3560.34 rows=225641 width=0) (actual time=18.122..18.123 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119373.63..124943.19 rows=50 width=103) (actual time=1269.217..1276.879 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119373.35..124818.06 rows=50 width=36) (actual time=1268.719..1276.379 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119373.35..124145.49 rows=39856 width=36) (actual time=1009.595..1025.608 rows=41800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118373.29..118398.20 rows=9964 width=36) (actual time=999.252..1000.026 rows=8887 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1158kB
                           Worker 2:  Sort Method: quicksort  Memory: 1157kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=117587.01..117711.56 rows=9964 width=36) (actual time=990.258..996.905 rows=9893 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3616.75..117022.91 rows=56410 width=16) (actual time=42.372..940.344 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13194
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3560.34 rows=225641 width=0) (actual time=38.108..38.108 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.493..0.493 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 11.141 ms
 Execution Time: 1277.661 ms
(36 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241440.52..241551.91 rows=1 width=103) (actual time=429.475..438.143 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122066.88..122066.89 rows=1 width=32) (actual time=217.816..217.817 rows=1 loops=1)
           ->  HashAggregate  (cost=121817.78..121942.33 rows=9964 width=36) (actual time=214.553..217.194 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3616.75..119561.37 rows=225641 width=16) (actual time=26.830..104.712 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3560.34 rows=225641 width=0) (actual time=17.972..17.972 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119373.63..124943.19 rows=50 width=103) (actual time=429.474..438.140 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119373.35..124818.06 rows=50 width=36) (actual time=429.455..438.120 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119373.35..124145.49 rows=39856 width=36) (actual time=184.974..201.924 rows=41784 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118373.29..118398.20 rows=9964 width=36) (actual time=176.766..177.539 rows=8890 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1159kB
                           Worker 0:  Sort Method: quicksort  Memory: 1156kB
                           Worker 1:  Sort Method: quicksort  Memory: 1160kB
                           Worker 2:  Sort Method: quicksort  Memory: 1155kB
                           Worker 3:  Sort Method: quicksort  Memory: 1158kB
                           ->  Partial HashAggregate  (cost=117587.01..117711.56 rows=9964 width=36) (actual time=168.991..174.466 rows=9893 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3616.75..117022.91 rows=56410 width=16) (actual time=33.689..135.611 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13784
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3560.34 rows=225641 width=0) (actual time=26.170..26.170 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.015..0.015 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.684 ms
 Execution Time: 438.287 ms
(36 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29582.10..29582.10 rows=1 width=44) (actual time=425.344..426.171 rows=1 loops=1)
   ->  Sort  (cost=29582.10..29622.38 rows=16111 width=44) (actual time=425.343..426.169 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28585.16..29501.54 rows=16111 width=44) (actual time=377.968..422.408 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28585.16..28736.21 rows=60422 width=40) (actual time=377.947..386.229 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7688.11..23786.81 rows=60422 width=40) (actual time=42.018..109.216 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6688.11..16744.61 rows=15106 width=40) (actual time=34.717..101.250 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.266..56.156 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.782..6.547 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12588 width=40) (actual time=27.273..27.274 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12588 width=40) (actual time=0.250..24.982 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.317 ms
 Execution Time: 426.940 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29582.10..29582.10 rows=1 width=44) (actual time=395.663..396.118 rows=1 loops=1)
   ->  Sort  (cost=29582.10..29622.38 rows=16111 width=44) (actual time=395.662..396.116 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28585.16..29501.54 rows=16111 width=44) (actual time=347.577..392.352 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28585.16..28736.21 rows=60422 width=40) (actual time=347.557..355.850 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7688.11..23786.81 rows=60422 width=40) (actual time=20.678..78.183 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6688.11..16744.61 rows=15106 width=40) (actual time=17.444..72.564 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.872..40.191 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.081..2.820 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12588 width=40) (actual time=14.341..14.342 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12588 width=40) (actual time=0.013..10.791 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.720 ms
 Execution Time: 396.168 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=430287.08..430287.09 rows=1 width=32) (actual time=2318.600..2323.173 rows=1 loops=1)
   ->  Aggregate  (cost=430287.08..430287.09 rows=1 width=32) (actual time=2318.599..2323.171 rows=1 loops=1)
         ->  Merge Join  (cost=299965.83..430282.27 rows=1922 width=8) (actual time=1159.239..2323.080 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298964.95..414933.28 rows=196119 width=36) (actual time=1150.801..2281.569 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298964.95..406107.92 rows=784476 width=36) (actual time=1150.788..1765.018 rows=993458 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297964.90..311669.21 rows=196119 width=36) (actual time=1107.520..1505.875 rows=199234 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297964.90..301715.84 rows=1500377 width=9) (actual time=1107.505..1253.921 rows=1199085 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 23336kB
                                       Worker 0:  Sort Method: external merge  Disk: 18984kB
                                       Worker 1:  Sort Method: external merge  Disk: 23312kB
                                       Worker 2:  Sort Method: external merge  Disk: 20800kB
                                       Worker 3:  Sort Method: external merge  Disk: 25224kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.77 rows=1500377 width=9) (actual time=0.211..631.354 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12810.72 rows=5881 width=21) (actual time=4.617..21.293 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12796.01 rows=5881 width=21) (actual time=4.613..20.687 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11117.18 rows=2450 width=21) (actual time=1.133..91.749 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=82 width=4) (actual time=0.742..33.314 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.75 rows=31 width=17) (actual time=0.530..0.832 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 16.121 ms
 Execution Time: 2327.235 ms
(33 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=430287.08..430287.09 rows=1 width=32) (actual time=1916.069..1922.572 rows=1 loops=1)
   ->  Aggregate  (cost=430287.08..430287.09 rows=1 width=32) (actual time=1916.068..1922.570 rows=1 loops=1)
         ->  Merge Join  (cost=299965.83..430282.27 rows=1922 width=8) (actual time=803.575..1922.491 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298964.95..414933.28 rows=196119 width=36) (actual time=795.361..1896.668 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298964.95..406107.92 rows=784476 width=36) (actual time=795.341..1390.470 rows=992923 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297964.90..311669.21 rows=196119 width=36) (actual time=746.287..1142.368 rows=199095 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297964.90..301715.84 rows=1500377 width=9) (actual time=746.270..891.253 rows=1198943 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 22152kB
                                       Worker 0:  Sort Method: external merge  Disk: 25224kB
                                       Worker 1:  Sort Method: external merge  Disk: 21672kB
                                       Worker 2:  Sort Method: external merge  Disk: 17392kB
                                       Worker 3:  Sort Method: external merge  Disk: 25224kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.77 rows=1500377 width=9) (actual time=0.431..229.679 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12810.72 rows=5881 width=21) (actual time=3.483..6.033 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12796.01 rows=5881 width=21) (actual time=3.479..5.452 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11117.18 rows=2450 width=21) (actual time=0.132..17.412 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=82 width=4) (actual time=0.114..14.459 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.75 rows=31 width=17) (actual time=0.005..0.037 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.731 ms
 Execution Time: 1925.684 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894864.47..894864.72 rows=100 width=71) (actual time=3911.058..3928.617 rows=9 loops=1)
   ->  Sort  (cost=894864.47..899866.99 rows=2001007 width=71) (actual time=3911.057..3928.615 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523769.74..818387.42 rows=2001007 width=71) (actual time=3911.025..3928.594 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523769.74..773364.75 rows=2001008 width=71) (actual time=3911.004..3928.575 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522769.68..534025.35 rows=500252 width=71) (actual time=3898.177..3898.186 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522769.68..524020.31 rows=500252 width=44) (actual time=3898.166..3898.172 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 25kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=330718.35..465521.84 rows=500252 width=44) (actual time=3731.889..3898.119 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127563.77 rows=1500377 width=9) (actual time=1.023..90.641 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328701.71..328701.71 rows=161331 width=43) (actual time=3637.979..3637.983 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4256kB
                                             ->  Parallel Hash Join  (cost=296038.33..328701.71 rows=161331 width=43) (actual time=3496.861..3637.611 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291035.08..323274.95 rows=161331 width=24) (actual time=3464.032..3604.712 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=1.135..188.903 rows=300000 loops=5)
                                                         ->  Hash  (cost=284783.51..284783.51 rows=500126 width=4) (actual time=3370.447..3370.448 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279782.25 rows=500126 width=4) (actual time=717.340..3370.431 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227269.05 rows=6001508 width=9) (actual time=0.563..1982.100 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=32.497..32.498 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.080..23.145 rows=30000 loops=5)
 Planning Time: 18.228 ms
 Execution Time: 3929.498 ms
(40 rows)

SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894864.47..894864.72 rows=100 width=71) (actual time=3235.234..3253.684 rows=9 loops=1)
   ->  Sort  (cost=894864.47..899866.99 rows=2001007 width=71) (actual time=3235.233..3253.681 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523769.74..818387.42 rows=2001007 width=71) (actual time=3235.198..3253.662 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523769.74..773364.75 rows=2001008 width=71) (actual time=3235.186..3253.642 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522769.68..534025.35 rows=500252 width=71) (actual time=3227.800..3227.809 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522769.68..524020.31 rows=500252 width=44) (actual time=3227.786..3227.792 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=330718.35..465521.84 rows=500252 width=44) (actual time=3084.030..3227.741 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127563.77 rows=1500377 width=9) (actual time=0.014..87.899 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328701.71..328701.71 rows=161331 width=43) (actual time=2969.236..2969.241 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4192kB
                                             ->  Parallel Hash Join  (cost=296038.33..328701.71 rows=161331 width=43) (actual time=2860.097..2913.771 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291035.08..323274.95 rows=161331 width=24) (actual time=2839.391..2893.056 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.012..21.962 rows=300000 loops=5)
                                                         ->  Hash  (cost=284783.51..284783.51 rows=500126 width=4) (actual time=2818.016..2818.017 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279782.25 rows=500126 width=4) (actual time=600.039..2817.995 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227269.05 rows=6001508 width=9) (actual time=0.038..1073.480 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=20.011..20.011 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10368kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.010..7.105 rows=30000 loops=5)
 Planning Time: 1.127 ms
 Execution Time: 3253.981 ms
(40 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18351.17..18351.18 rows=1 width=32) (actual time=865.031..865.189 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18351.17..18351.18 rows=1 width=32) (actual time=865.030..865.187 rows=1 loops=1)
         ->  Gather  (cost=18350.94..18351.15 rows=2 width=32) (actual time=865.019..865.179 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17350.94..17350.95 rows=1 width=32) (actual time=857.103..857.104 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17350.58 rows=48 width=12) (actual time=29.134..856.993 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.672..29.556 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=4.352..4.895 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.466 ms
 Execution Time: 865.741 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18351.17..18351.18 rows=1 width=32) (actual time=27.189..31.082 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18351.17..18351.18 rows=1 width=32) (actual time=27.188..31.080 rows=1 loops=1)
         ->  Gather  (cost=18350.94..18351.15 rows=2 width=32) (actual time=27.061..31.072 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17350.94..17350.95 rows=1 width=32) (actual time=24.687..24.689 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17350.58 rows=48 width=12) (actual time=0.704..24.653 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.123..15.370 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=0.048..0.054 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.852 ms
 Execution Time: 31.129 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=274259.87..274259.88 rows=1 width=51) (actual time=3303.309..3303.385 rows=1 loops=1)
   ->  Sort  (cost=274259.87..274259.88 rows=1 width=51) (actual time=3303.308..3303.384 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=240683.54..274259.86 rows=1 width=51) (actual time=3134.742..3303.193 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.407..3.673 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.163..0.165 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.239..2.732 rows=10000 loops=1)
               ->  Materialize  (cost=240683.54..273804.55 rows=1 width=8) (actual time=5.962..7.297 rows=4371 loops=438)
                     ->  Merge Join  (cost=240683.54..273804.55 rows=1 width=8) (actual time=2611.497..3131.776 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=239682.67..255939.20 rows=482414 width=40) (actual time=2601.733..3072.643 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=239682.67..241937.75 rows=902032 width=13) (actual time=2601.720..2716.230 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14457.26..140547.74 rows=902032 width=13) (actual time=125.902..2194.239 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14231.75 rows=902032 width=0) (actual time=109.363..109.363 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=9.441..28.434 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=9.437..26.852 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.544..196.287 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.292..34.093 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.207..0.221 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 17.400 ms
 Execution Time: 3306.866 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=274259.87..274259.88 rows=1 width=51) (actual time=1348.311..1348.385 rows=1 loops=1)
   ->  Sort  (cost=274259.87..274259.88 rows=1 width=51) (actual time=1348.310..1348.383 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=240683.54..274259.86 rows=1 width=51) (actual time=1181.482..1348.236 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.021..1.699 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.008..0.598 rows=10000 loops=1)
               ->  Materialize  (cost=240683.54..273804.55 rows=1 width=8) (actual time=1.608..2.838 rows=4371 loops=438)
                     ->  Merge Join  (cost=240683.54..273804.55 rows=1 width=8) (actual time=704.300..1179.159 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=239682.67..255939.20 rows=482414 width=40) (actual time=700.435..1143.794 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=239682.67..241937.75 rows=902032 width=13) (actual time=700.422..808.102 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14457.26..140547.74 rows=902032 width=13) (actual time=89.335..324.360 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14231.75 rows=902032 width=0) (actual time=73.476..73.476 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=3.539..6.855 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=3.535..5.395 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.067..14.568 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.045..11.423 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.004 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.397 ms
 Execution Time: 1351.103 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194230.23..194230.24 rows=1 width=34) (actual time=1453.407..1453.527 rows=100 loops=1)
   ->  Sort  (cost=194230.23..194230.24 rows=1 width=34) (actual time=1453.406..1453.520 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194230.20..194230.22 rows=1 width=34) (actual time=1452.409..1453.114 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194230.20..194230.21 rows=1 width=26) (actual time=1452.402..1452.665 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..194230.19 rows=1 width=26) (actual time=11.334..1438.699 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..194226.80 rows=1 width=38) (actual time=9.989..1347.408 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..194223.48 rows=1 width=34) (actual time=9.532..15.194 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..193223.38 rows=1 width=34) (actual time=2.447..693.175 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133625.81 rows=20005 width=34) (actual time=1.791..485.053 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.71 rows=500126 width=8) (actual time=0.256..418.476 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.420..1.421 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.293..1.346 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.080..0.082 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.208..1.202 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.138..0.138 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.093..0.093 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.012..0.012 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.255 ms
 Execution Time: 1454.401 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194230.23..194230.24 rows=1 width=34) (actual time=516.963..517.070 rows=100 loops=1)
   ->  Sort  (cost=194230.23..194230.24 rows=1 width=34) (actual time=516.961..517.062 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194230.20..194230.22 rows=1 width=34) (actual time=515.917..516.635 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194230.20..194230.21 rows=1 width=26) (actual time=515.906..516.177 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..194230.19 rows=1 width=26) (actual time=1.469..496.552 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..194226.80 rows=1 width=38) (actual time=1.426..469.977 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..194223.48 rows=1 width=34) (actual time=1.418..410.856 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..193223.38 rows=1 width=34) (actual time=0.775..476.890 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133625.81 rows=20005 width=34) (actual time=0.531..369.194 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.71 rows=500126 width=8) (actual time=0.027..295.422 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.418..0.420 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.067..0.354 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.049..0.288 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.029..0.029 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.264 ms
 Execution Time: 517.152 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12911.92..12912.05 rows=1 width=72) (actual time=108.452..110.935 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=47.038..47.109 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=46.903..47.098 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=41.229..41.230 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.369..39.917 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6669.09..6768.73 rows=747 width=72) (actual time=108.451..110.862 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6669.09..6749.44 rows=622 width=72) (actual time=108.374..110.847 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5669.07..5677.62 rows=311 width=72) (actual time=58.819..58.995 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5669.07..5669.85 rows=311 width=38) (actual time=58.748..58.793 rows=1186 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 201kB
                           Worker 0:  Sort Method: quicksort  Memory: 201kB
                           Worker 1:  Sort Method: quicksort  Memory: 139kB
                           ->  Nested Loop Anti Join  (cost=0.43..5656.19 rows=311 width=38) (actual time=0.072..57.816 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.021..21.707 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.005..0.005 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 13.126 ms
 Execution Time: 111.748 ms
(32 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12911.92..12912.05 rows=1 width=72) (actual time=68.343..70.631 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=30.183..30.259 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=30.099..30.251 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=28.032..28.033 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.019..26.844 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6669.09..6768.73 rows=747 width=72) (actual time=68.342..70.553 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6669.09..6749.44 rows=622 width=72) (actual time=68.266..70.545 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5669.07..5677.62 rows=311 width=72) (actual time=35.514..35.711 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5669.07..5669.85 rows=311 width=38) (actual time=35.428..35.479 rows=1276 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 206kB
                           Worker 0:  Sort Method: quicksort  Memory: 142kB
                           Worker 1:  Sort Method: quicksort  Memory: 193kB
                           ->  Nested Loop Anti Join  (cost=0.43..5656.19 rows=311 width=38) (actual time=0.068..34.702 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..19.737 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.636 ms
 Execution Time: 70.693 ms
(32 rows)

