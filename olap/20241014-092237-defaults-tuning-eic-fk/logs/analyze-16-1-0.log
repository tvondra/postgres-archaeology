query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394863.19..394863.19 rows=1 width=236) (actual time=7219.616..7219.618 rows=1 loops=1)
   ->  Sort  (cost=394863.19..394863.20 rows=6 width=236) (actual time=7219.615..7219.616 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394862.99..394863.16 rows=6 width=236) (actual time=7219.578..7219.584 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187570.88 rows=5922632 width=25) (actual time=0.668..1167.616 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 12.019 ms
 Execution Time: 7220.010 ms
(12 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394863.19..394863.19 rows=1 width=236) (actual time=7026.033..7026.034 rows=1 loops=1)
   ->  Sort  (cost=394863.19..394863.20 rows=6 width=236) (actual time=7026.031..7026.032 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394862.99..394863.16 rows=6 width=236) (actual time=7025.999..7026.006 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187570.88 rows=5922632 width=25) (actual time=0.027..979.244 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.864 ms
 Execution Time: 7026.094 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47253.09..47253.09 rows=1 width=192) (actual time=464.558..464.575 rows=100 loops=1)
   ->  Sort  (cost=47253.09..47253.09 rows=1 width=192) (actual time=464.557..464.568 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=32942.01..47253.08 rows=1 width=192) (actual time=359.314..463.892 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=781 width=30) (actual time=0.448..64.428 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=358.133..358.137 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.835..297.341 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.490..182.059 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.336..6.339 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.796..5.850 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.321..4.170 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.467..0.469 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.455..0.465 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.212..0.215 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.233..0.234 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.226..0.228 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.031..0.031 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.024..0.029 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.017..0.027 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.016..0.023 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.014..0.015 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.186 ms
 Execution Time: 464.730 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47253.09..47253.09 rows=1 width=192) (actual time=285.262..285.278 rows=100 loops=1)
   ->  Sort  (cost=47253.09..47253.09 rows=1 width=192) (actual time=285.261..285.271 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=32942.01..47253.08 rows=1 width=192) (actual time=226.633..284.673 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=781 width=30) (actual time=0.017..37.216 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=226.216..226.219 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.554..171.585 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..53.903 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.545..2.547 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.030..2.105 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.713 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.025..0.026 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.019..0.024 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.738 ms
 Execution Time: 285.416 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285066.43..285066.45 rows=10 width=44) (actual time=2124.374..2124.379 rows=10 loops=1)
   ->  Sort  (cost=285066.43..285850.35 rows=313568 width=44) (actual time=2124.372..2124.376 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=270696.11..278290.33 rows=313568 width=44) (actual time=2117.871..2122.298 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51208.60..254209.29 rows=313568 width=24) (actual time=712.269..2096.753 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187570.88 rows=3278560 width=16) (actual time=0.599..1093.211 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49415.31..49415.31 rows=143463 width=12) (actual time=710.250..710.252 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12387.67..49415.31 rows=143463 width=12) (actual time=94.807..678.059 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6542.30..41678.74 rows=720435 width=16) (actual time=42.654..493.860 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6362.19 rows=720435 width=0) (actual time=37.748..37.748 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=29870 width=4) (actual time=52.073..52.073 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29870 width=4) (actual time=0.442..47.445 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 21.627 ms
 Execution Time: 2125.725 ms
(28 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285066.43..285066.45 rows=10 width=44) (actual time=1474.160..1474.165 rows=10 loops=1)
   ->  Sort  (cost=285066.43..285850.35 rows=313568 width=44) (actual time=1474.159..1474.163 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=270696.11..278290.33 rows=313568 width=44) (actual time=1467.673..1472.100 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51208.60..254209.29 rows=313568 width=24) (actual time=286.088..1448.352 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187570.88 rows=3278560 width=16) (actual time=0.041..880.029 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49415.31..49415.31 rows=143463 width=12) (actual time=285.502..285.504 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12387.67..49415.31 rows=143463 width=12) (actual time=61.727..261.397 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6542.30..41678.74 rows=720435 width=16) (actual time=35.319..137.789 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6362.19 rows=720435 width=0) (actual time=31.738..31.738 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=29870 width=4) (actual time=26.381..26.382 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29870 width=4) (actual time=0.011..22.807 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 0.955 ms
 Execution Time: 1475.261 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=180641.55..180641.55 rows=1 width=24) (actual time=2077.306..2077.308 rows=1 loops=1)
   ->  Sort  (cost=180641.55..180641.56 rows=5 width=24) (actual time=2077.305..2077.306 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=180641.48..180641.53 rows=5 width=24) (actual time=2077.267..2077.269 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=630.64..180370.12 rows=54271 width=16) (actual time=9.204..2045.994 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=630.21..27575.27 rows=54271 width=20) (actual time=8.826..516.012 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..616.64 rows=54271 width=0) (actual time=5.225..5.225 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 13.543 ms
 Execution Time: 2078.215 ms
(19 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=180641.55..180641.55 rows=1 width=24) (actual time=194.877..194.879 rows=1 loops=1)
   ->  Sort  (cost=180641.55..180641.56 rows=5 width=24) (actual time=194.876..194.877 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=180641.48..180641.53 rows=5 width=24) (actual time=194.849..194.851 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=630.64..180370.12 rows=54271 width=16) (actual time=6.888..180.590 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=630.21..27575.27 rows=54271 width=20) (actual time=6.868..40.584 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..616.64 rows=54271 width=0) (actual time=3.551..3.552 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 0.825 ms
 Execution Time: 194.940 ms
(19 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=186607.19..186607.19 rows=1 width=58) (actual time=2203.929..2203.935 rows=1 loops=1)
   ->  Sort  (cost=186607.19..186607.25 rows=25 width=58) (actual time=2203.928..2203.933 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=186516.99..186607.07 rows=25 width=58) (actual time=2201.293..2203.916 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=186516.99..186534.94 rows=7181 width=38) (actual time=2200.620..2200.917 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 664kB
                     ->  Hash Join  (cost=9414.25..186057.05 rows=7181 width=38) (actual time=86.202..2196.052 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8941.25..184640.08 rows=179802 width=50) (actual time=79.740..2151.942 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8940.82..39734.76 rows=44944 width=38) (actual time=79.067..718.173 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2603.81..32105.61 rows=224720 width=8) (actual time=17.640..588.690 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2547.63 rows=224720 width=0) (actual time=13.485..13.485 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=61.386..61.389 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=1.328..55.429 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.713..38.154 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.609..0.611 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.603..0.609 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.298..0.299 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.299..0.300 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.295..0.296 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.029..0.031 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.136..6.136 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.353..4.801 rows=10000 loops=1)
 Planning Time: 24.450 ms
 Execution Time: 2204.569 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=186607.19..186607.19 rows=1 width=58) (actual time=332.066..332.071 rows=1 loops=1)
   ->  Sort  (cost=186607.19..186607.25 rows=25 width=58) (actual time=332.065..332.070 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=186516.99..186607.07 rows=25 width=58) (actual time=329.489..332.052 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=186516.99..186534.94 rows=7181 width=38) (actual time=328.850..329.147 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 664kB
                     ->  Hash Join  (cost=9414.25..186057.05 rows=7181 width=38) (actual time=52.289..326.103 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8941.25..184640.08 rows=179802 width=50) (actual time=49.553..301.576 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8940.82..39734.76 rows=44944 width=38) (actual time=49.534..148.151 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2603.81..32105.61 rows=224720 width=8) (actual time=14.333..70.334 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2547.63 rows=224720 width=0) (actual time=10.744..10.744 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=35.169..35.171 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.030..30.273 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..10.548 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.021..0.022 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.015..0.021 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.718..2.719 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..1.463 rows=10000 loops=1)
 Planning Time: 3.355 ms
 Execution Time: 332.374 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109143.61..109143.62 rows=1 width=32) (actual time=1282.574..1282.576 rows=1 loops=1)
   ->  Aggregate  (cost=109143.61..109143.62 rows=1 width=32) (actual time=1282.572..1282.573 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21250.59..108545.89 rows=119543 width=12) (actual time=130.286..1221.518 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21220.70 rows=119543 width=0) (actual time=119.094..119.094 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.504 ms
 Execution Time: 1283.747 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109143.61..109143.62 rows=1 width=32) (actual time=213.354..213.355 rows=1 loops=1)
   ->  Aggregate  (cost=109143.61..109143.62 rows=1 width=32) (actual time=213.353..213.353 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21250.59..108545.89 rows=119543 width=12) (actual time=104.586..183.112 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21220.70 rows=119543 width=0) (actual time=93.913..93.914 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.429 ms
 Execution Time: 213.419 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234836.81..234836.84 rows=1 width=116) (actual time=3204.035..3204.041 rows=1 loops=1)
   ->  GroupAggregate  (cost=234836.81..235035.84 rows=6124 width=116) (actual time=3204.034..3204.039 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234836.81..234852.12 rows=6124 width=96) (actual time=3203.270..3203.327 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 730kB
               ->  Hash Join  (cost=85071.52..234451.60 rows=6124 width=96) (actual time=750.046..3198.433 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=29906.62..178484.12 rows=147160 width=46) (actual time=220.770..2630.233 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29541.52..169738.24 rows=1842448 width=24) (actual time=214.812..2387.943 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29080.91 rows=1842448 width=0) (actual time=193.846..193.847 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.822..5.824 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.651..5.687 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.355..4.388 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.288..0.289 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.284..0.286 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=528.690..528.692 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=54.855..505.272 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.883..277.914 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=53.957..53.959 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.783..51.697 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.762..36.956 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 22.607 ms
 Execution Time: 3204.511 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234836.81..234836.84 rows=1 width=116) (actual time=981.948..981.954 rows=1 loops=1)
   ->  GroupAggregate  (cost=234836.81..235035.84 rows=6124 width=116) (actual time=981.946..981.952 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234836.81..234852.12 rows=6124 width=96) (actual time=981.188..981.245 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 730kB
               ->  Hash Join  (cost=85071.52..234451.60 rows=6124 width=96) (actual time=465.859..977.978 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=29906.62..178484.12 rows=147160 width=46) (actual time=161.274..644.153 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29541.52..169738.24 rows=1842448 width=24) (actual time=159.204..454.744 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29080.91 rows=1842448 width=0) (actual time=138.852..138.852 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.023..2.025 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.017..1.922 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..0.714 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=304.420..304.423 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=29.068..285.256 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..92.582 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=29.049..29.050 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.016..27.457 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..10.034 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.008 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.509 ms
 Execution Time: 982.057 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=112356.37..112356.42 rows=1 width=64) (actual time=6278.466..6278.473 rows=1 loops=1)
   ->  GroupAggregate  (cost=112356.37..112459.28 rows=2406 width=64) (actual time=6278.465..6278.471 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=112356.37..112362.46 rows=2435 width=70) (actual time=6277.794..6277.848 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 271kB
               ->  Nested Loop  (cost=77207.52..112219.41 rows=2435 width=70) (actual time=5709.736..6276.152 rows=2485 loops=1)
                     ->  Hash Join  (cost=77207.37..112130.97 rows=2435 width=20) (actual time=5709.719..6272.534 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=76759.37..111676.57 rows=2439 width=20) (actual time=5703.679..6265.420 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=70422.37..105269.44 rows=12194 width=24) (actual time=5645.931..6204.291 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5309.07..38315.39 rows=458355 width=12) (actual time=28.790..512.721 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5194.48 rows=458355 width=0) (actual time=24.721..24.721 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=64614.47..64614.47 rows=39906 width=20) (actual time=5616.998..5616.999 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..64614.47 rows=39906 width=20) (actual time=1.909..5570.534 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1330 width=4) (actual time=1.226..74.477 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.32 rows=30 width=24) (actual time=0.247..4.144 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=57.732..57.735 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.904..53.847 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.492..37.029 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.406..0.408 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.396..0.405 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.190..0.193 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.197..0.197 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.193..0.194 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.030..6.031 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.310..4.588 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 27.418 ms
 Execution Time: 6278.846 ms
(52 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=112356.37..112356.42 rows=1 width=64) (actual time=273.712..273.719 rows=1 loops=1)
   ->  GroupAggregate  (cost=112356.37..112459.28 rows=2406 width=64) (actual time=273.711..273.717 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=112356.37..112362.46 rows=2435 width=70) (actual time=273.093..273.145 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 271kB
               ->  Nested Loop  (cost=77207.52..112219.41 rows=2435 width=70) (actual time=134.084..272.237 rows=2485 loops=1)
                     ->  Hash Join  (cost=77207.37..112130.97 rows=2435 width=20) (actual time=134.072..270.342 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=76759.37..111676.57 rows=2439 width=20) (actual time=131.252..266.605 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=70422.37..105269.44 rows=12194 width=24) (actual time=97.461..230.041 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5309.07..38315.39 rows=458355 width=12) (actual time=24.161..103.781 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5194.48 rows=458355 width=0) (actual time=20.594..20.594 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=64614.47..64614.47 rows=39906 width=20) (actual time=73.244..73.246 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..64614.47 rows=39906 width=20) (actual time=0.057..65.612 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1330 width=4) (actual time=0.044..24.094 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.32 rows=30 width=24) (actual time=0.003..0.027 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=33.778..33.780 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.029..30.285 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.008..10.598 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.017..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.808..2.809 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..1.451 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 4.116 ms
 Execution Time: 273.822 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194952.27..194952.27 rows=1 width=90) (actual time=12164.967..12164.972 rows=1 loops=1)
   ->  Sort  (cost=194952.27..195102.64 rows=60150 width=90) (actual time=12164.966..12164.970 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=193749.27..194651.52 rows=60150 width=90) (actual time=12164.481..12164.888 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=138988.10..189512.90 rows=242078 width=81) (actual time=11145.112..11884.761 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=138986.54..188162.97 rows=242078 width=31) (actual time=11144.767..11786.228 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.563..289.409 rows=1500000 loops=1)
                           ->  Hash  (cost=135960.56..135960.56 rows=242078 width=31) (actual time=11143.858..11143.860 rows=325928 loops=1)
                                 Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 25391kB
                                 ->  Nested Loop  (cost=448.86..135960.56 rows=242078 width=31) (actual time=7.600..10974.502 rows=325928 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=448.43..33385.22 rows=32324 width=26) (actual time=7.011..330.579 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.42..32852.34 rows=32324 width=18) (actual time=0.919..299.666 rows=43520 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.452..87.887 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.016..0.018 rows=4 loops=10880)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.072..6.073 rows=10000 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.419..4.874 rows=10000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.035..0.241 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.335..0.335 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.326..0.328 rows=25 loops=1)
 Planning Time: 27.103 ms
 Execution Time: 12165.945 ms
(34 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194952.27..194952.27 rows=1 width=90) (actual time=1330.604..1330.609 rows=1 loops=1)
   ->  Sort  (cost=194952.27..195102.64 rows=60150 width=90) (actual time=1330.603..1330.608 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=193749.27..194651.52 rows=60150 width=90) (actual time=1330.122..1330.524 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=138988.10..189512.90 rows=242078 width=81) (actual time=512.933..1062.682 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=138986.54..188162.97 rows=242078 width=31) (actual time=512.907..970.093 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.010..97.274 rows=1500000 loops=1)
                           ->  Hash  (cost=135960.56..135960.56 rows=242078 width=31) (actual time=512.577..512.580 rows=325928 loops=1)
                                 Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 25391kB
                                 ->  Nested Loop  (cost=448.86..135960.56 rows=242078 width=31) (actual time=2.640..434.512 rows=325928 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=448.43..33385.22 rows=32324 width=26) (actual time=2.626..94.285 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.42..32852.34 rows=32324 width=18) (actual time=0.026..77.373 rows=43520 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.014..40.755 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.589..2.589 rows=10000 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.446 rows=10000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.002..0.006 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=1)
 Planning Time: 5.097 ms
 Execution Time: 1331.319 ms
(34 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=226262.44..226262.49 rows=20 width=202) (actual time=2237.164..2237.171 rows=20 loops=1)
   ->  Sort  (cost=226262.44..226405.53 rows=57239 width=202) (actual time=2237.162..2237.167 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=224023.84..224739.33 rows=57239 width=202) (actual time=2207.400..2226.044 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=7646.92..223308.35 rows=57239 width=182) (actual time=99.614..2082.555 rows=114347 loops=1)
                     ->  Hash Join  (cost=7646.77..221886.27 rows=57239 width=160) (actual time=99.255..2016.564 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=674.77..214764.02 rows=57239 width=16) (actual time=9.991..1874.126 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=674.34..27677.41 rows=58138 width=8) (actual time=8.975..503.037 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..659.81 rows=58138 width=0) (actual time=5.287..5.287 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.021..0.023 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=88.912..88.912 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.447..48.051 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.015..0.015 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 21.628 ms
 Execution Time: 2237.931 ms
(31 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=226262.44..226262.49 rows=20 width=202) (actual time=539.170..539.177 rows=20 loops=1)
   ->  Sort  (cost=226262.44..226405.53 rows=57239 width=202) (actual time=539.169..539.174 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=224023.84..224739.33 rows=57239 width=202) (actual time=509.313..528.017 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=7646.92..223308.35 rows=57239 width=182) (actual time=71.999..416.464 rows=114347 loops=1)
                     ->  Hash Join  (cost=7646.77..221886.27 rows=57239 width=160) (actual time=71.979..366.926 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=674.77..214764.02 rows=57239 width=16) (actual time=6.667..258.880 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=674.34..27677.41 rows=58138 width=8) (actual time=6.627..43.775 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..659.81 rows=58138 width=0) (actual time=3.298..3.299 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.002..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=65.000..65.000 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.009..24.919 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 1.428 ms
 Execution Time: 539.626 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.65..15992.65 rows=1 width=36) (actual time=721.082..721.087 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.65..7689.67 rows=1 width=32) (actual time=26.091..26.093 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=10) (actual time=0.054..18.330 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.286 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.038..0.229 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.99..8329.65 rows=10667 width=36) (actual time=721.081..721.082 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.65..8249.65 rows=10667 width=36) (actual time=710.378..720.932 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=14) (actual time=1.100..653.036 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.720..4.267 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.208..0.211 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.506..3.958 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.248..0.248 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.043..1.560 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 15.282 ms
 Execution Time: 721.458 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.65..15992.65 rows=1 width=36) (actual time=82.603..82.608 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.65..7689.67 rows=1 width=32) (actual time=26.259..26.261 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=10) (actual time=0.053..18.325 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.295 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.235 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.99..8329.65 rows=10667 width=36) (actual time=82.602..82.604 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.65..8249.65 rows=10667 width=36) (actual time=71.965..82.445 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=14) (actual time=0.057..27.327 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.051..0.477 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.040..0.398 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.056 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.990 ms
 Execution Time: 82.985 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302715.06..302796.62 rows=1 width=27) (actual time=2016.698..2016.700 rows=1 loops=1)
   ->  GroupAggregate  (cost=302715.06..303285.99 rows=7 width=27) (actual time=2016.696..2016.698 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302715.06..302786.41 rows=28543 width=27) (actual time=2012.103..2012.705 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2461kB
               ->  Hash Join  (cost=247936.36..300602.75 rows=28543 width=27) (actual time=1540.617..2005.075 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.515..273.016 rows=1500000 loops=1)
                     ->  Hash  (cost=247579.57..247579.57 rows=28543 width=15) (actual time=1539.977..1539.978 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247579.57 rows=28543 width=15) (actual time=1.503..1532.529 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 13.094 ms
 Execution Time: 2017.375 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302715.06..302796.62 rows=1 width=27) (actual time=1586.473..1586.476 rows=1 loops=1)
   ->  GroupAggregate  (cost=302715.06..303285.99 rows=7 width=27) (actual time=1586.472..1586.474 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302715.06..302786.41 rows=28543 width=27) (actual time=1581.909..1582.499 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2461kB
               ->  Hash Join  (cost=247936.36..300602.75 rows=28543 width=27) (actual time=1314.452..1576.609 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.003..90.745 rows=1500000 loops=1)
                     ->  Hash  (cost=247579.57..247579.57 rows=28543 width=15) (actual time=1314.403..1314.404 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247579.57 rows=28543 width=15) (actual time=0.102..1307.592 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 0.827 ms
 Execution Time: 1586.532 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64586.97..64586.97 rows=1 width=16) (actual time=1445.206..1445.209 rows=1 loops=1)
   ->  Sort  (cost=64586.97..64587.47 rows=200 width=16) (actual time=1445.205..1445.207 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64583.97..64585.97 rows=200 width=16) (actual time=1445.180..1445.187 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60833.97..62333.97 rows=150000 width=12) (actual time=1405.517..1428.050 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53485.49 rows=1469697 width=8) (actual time=34.185..1056.955 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.691..631.092 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.168..33.169 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..16.022 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.024 ms
 Execution Time: 1446.309 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64586.97..64586.97 rows=1 width=16) (actual time=1255.961..1255.965 rows=1 loops=1)
   ->  Sort  (cost=64586.97..64587.47 rows=200 width=16) (actual time=1255.960..1255.962 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64583.97..64585.97 rows=200 width=16) (actual time=1255.935..1255.943 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60833.97..62333.97 rows=150000 width=12) (actual time=1216.300..1238.819 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53485.49 rows=1469697 width=8) (actual time=29.806..886.585 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.012..486.657 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.413..29.414 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..12.957 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.737 ms
 Execution Time: 1257.111 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83709.93..83709.94 rows=1 width=32) (actual time=821.609..821.612 rows=1 loops=1)
   ->  Aggregate  (cost=83709.93..83709.94 rows=1 width=32) (actual time=821.608..821.609 rows=1 loops=1)
         ->  Hash Join  (cost=9994.40..82188.75 rows=86924 width=33) (actual time=107.935..764.944 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1395.40..73361.58 rows=86924 width=16) (actual time=19.477..635.235 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1373.67 rows=86924 width=0) (actual time=12.777..12.778 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=88.244..88.244 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.371..54.422 rows=200000 loops=1)
 Planning Time: 13.795 ms
 Execution Time: 821.706 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83709.93..83709.94 rows=1 width=32) (actual time=183.486..183.489 rows=1 loops=1)
   ->  Aggregate  (cost=83709.93..83709.94 rows=1 width=32) (actual time=183.485..183.487 rows=1 loops=1)
         ->  Hash Join  (cost=9994.40..82188.75 rows=86924 width=33) (actual time=72.604..152.715 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1395.40..73361.58 rows=86924 width=16) (actual time=14.204..67.667 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1373.67 rows=86924 width=0) (actual time=7.902..7.902 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=58.206..58.207 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.009..27.441 rows=200000 loops=1)
 Planning Time: 1.086 ms
 Execution Time: 183.553 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237881.03..237889.91 rows=1 width=103) (actual time=1483.269..1483.272 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=118989.49..118989.50 rows=1 width=32) (actual time=210.007..210.008 rows=1 loops=1)
           ->  HashAggregate  (cost=118739.09..118864.29 rows=10016 width=36) (actual time=206.708..209.444 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3401.78..116617.78 rows=212131 width=16) (actual time=30.146..99.420 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3348.74 rows=212131 width=0) (actual time=19.477..19.478 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=118891.53..119335.78 rows=50 width=103) (actual time=1483.268..1483.269 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.802..5.200 rows=8449 loops=1)
         ->  Sort  (cost=118891.24..118891.37 rows=50 width=36) (actual time=1477.555..1477.556 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=118739.09..118889.83 rows=50 width=36) (actual time=1475.164..1477.548 rows=1 loops=1)
                     ->  HashAggregate  (cost=118739.09..118889.33 rows=50 width=36) (actual time=1475.163..1477.547 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3401.78..116617.78 rows=212131 width=16) (actual time=41.022..1066.022 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3348.74 rows=212131 width=0) (actual time=29.682..29.682 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 15.071 ms
 Execution Time: 1483.735 ms
(30 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237881.03..237889.91 rows=1 width=103) (actual time=452.654..452.657 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=118989.49..118989.50 rows=1 width=32) (actual time=209.506..209.507 rows=1 loops=1)
           ->  HashAggregate  (cost=118739.09..118864.29 rows=10016 width=36) (actual time=206.270..208.943 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3401.78..116617.78 rows=212131 width=16) (actual time=29.884..99.270 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3348.74 rows=212131 width=0) (actual time=19.204..19.204 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=118891.53..119335.78 rows=50 width=103) (actual time=452.652..452.654 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.007..1.294 rows=8449 loops=1)
         ->  Sort  (cost=118891.24..118891.37 rows=50 width=36) (actual time=450.883..450.884 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=118739.09..118889.83 rows=50 width=36) (actual time=448.510..450.879 rows=1 loops=1)
                     ->  HashAggregate  (cost=118739.09..118889.33 rows=50 width=36) (actual time=448.509..450.878 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3401.78..116617.78 rows=212131 width=16) (actual time=31.468..127.163 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3348.74 rows=212131 width=0) (actual time=20.704..20.704 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.801 ms
 Execution Time: 452.771 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33821.58..33821.59 rows=1 width=44) (actual time=673.088..673.092 rows=1 loops=1)
   ->  Sort  (cost=33821.58..33861.47 rows=15956 width=44) (actual time=673.087..673.090 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32843.64..33741.80 rows=15956 width=44) (actual time=636.321..670.211 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32843.64..32991.36 rows=59088 width=40) (actual time=636.307..642.823 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10954kB
                     ->  Hash Join  (cost=9816.73..28160.75 rows=59088 width=40) (actual time=87.687..301.060 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=5.789..144.169 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.109..5.478 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29544 width=40) (actual time=81.862..81.863 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29544 width=40) (actual time=0.367..75.480 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 16.867 ms
 Execution Time: 673.399 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33821.58..33821.59 rows=1 width=44) (actual time=618.254..618.258 rows=1 loops=1)
   ->  Sort  (cost=33821.58..33861.47 rows=15956 width=44) (actual time=618.253..618.256 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32843.64..33741.80 rows=15956 width=44) (actual time=581.776..615.381 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32843.64..32991.36 rows=59088 width=40) (actual time=581.763..588.236 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10954kB
                     ->  Hash Join  (cost=9816.73..28160.75 rows=59088 width=40) (actual time=54.071..246.721 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.173..123.041 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.089..2.151 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29544 width=40) (actual time=51.870..51.871 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29544 width=40) (actual time=0.011..46.523 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.814 ms
 Execution Time: 618.536 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222925.94..222925.95 rows=1 width=32) (actual time=3701.161..3701.163 rows=1 loops=1)
   ->  Aggregate  (cost=222925.94..222925.95 rows=1 width=32) (actual time=3701.159..3701.161 rows=1 loops=1)
         ->  Nested Loop  (cost=208015.24..222921.24 rows=1880 width=8) (actual time=3537.694..3700.941 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=208014.80..215114.30 rows=188 width=40) (actual time=3537.274..3588.496 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=190 width=4) (actual time=1.238..52.259 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205541.28..205541.28 rows=197882 width=36) (actual time=3535.633..3535.634 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202573.05..205541.28 rows=197882 width=36) (actual time=3167.413..3502.412 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172568.70 rows=6000870 width=9) (actual time=1.141..753.500 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.397..0.539 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 13.742 ms
 Execution Time: 3708.139 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222925.94..222925.95 rows=1 width=32) (actual time=3310.979..3310.981 rows=1 loops=1)
   ->  Aggregate  (cost=222925.94..222925.95 rows=1 width=32) (actual time=3310.978..3310.979 rows=1 loops=1)
         ->  Nested Loop  (cost=208015.24..222921.24 rows=1880 width=8) (actual time=3281.443..3310.886 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=208014.80..215114.30 rows=188 width=40) (actual time=3281.408..3306.825 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=190 width=4) (actual time=0.116..25.429 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205541.28..205541.28 rows=197882 width=36) (actual time=3280.970..3280.971 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202573.05..205541.28 rows=197882 width=36) (actual time=2913.379..3247.849 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172568.70 rows=6000870 width=9) (actual time=0.035..550.210 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.007..0.019 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 0.902 ms
 Execution Time: 3317.972 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794673.82..794674.07 rows=100 width=71) (actual time=4468.261..4468.267 rows=9 loops=1)
   ->  Sort  (cost=794673.82..799675.28 rows=2000582 width=71) (actual time=4468.259..4468.265 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658039.26..718213.02 rows=2000582 width=71) (actual time=4467.516..4468.214 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335198.66..550273.54 rows=2000582 width=44) (actual time=3699.180..4467.438 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172568.70 rows=6000870 width=9) (actual time=0.605..338.393 rows=6001215 loops=1)
                     ->  Hash  (cost=328947.75..328947.75 rows=500073 width=43) (actual time=3493.474..3493.477 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282566.51..328947.75 rows=500073 width=43) (actual time=3145.189..3493.449 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275594.51..320663.03 rows=500073 width=24) (actual time=3076.620..3424.871 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.712..268.498 rows=1500000 loops=1)
                                       ->  Hash  (cost=269343.60..269343.60 rows=500073 width=4) (actual time=2979.295..2979.296 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269343.60 rows=500073 width=4) (actual time=635.628..2979.262 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216835.98 rows=6000870 width=9) (actual time=0.016..1616.843 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.247..68.248 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.649..42.132 rows=150000 loops=1)
 Planning Time: 18.624 ms
 Execution Time: 4469.593 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794673.82..794674.07 rows=100 width=71) (actual time=3408.909..3408.916 rows=9 loops=1)
   ->  Sort  (cost=794673.82..799675.28 rows=2000582 width=71) (actual time=3408.908..3408.913 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658039.26..718213.02 rows=2000582 width=71) (actual time=3408.167..3408.866 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335198.66..550273.54 rows=2000582 width=44) (actual time=2641.651..3408.091 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172568.70 rows=6000870 width=9) (actual time=0.016..332.527 rows=6001215 loops=1)
                     ->  Hash  (cost=328947.75..328947.75 rows=500073 width=43) (actual time=2437.108..2437.111 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282566.51..328947.75 rows=500073 width=43) (actual time=2224.321..2437.089 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275594.51..320663.03 rows=500073 width=24) (actual time=2179.544..2392.304 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..90.676 rows=1500000 loops=1)
                                       ->  Hash  (cost=269343.60..269343.60 rows=500073 width=4) (actual time=2121.945..2121.946 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269343.60 rows=500073 width=4) (actual time=448.265..2121.930 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216835.98 rows=6000870 width=9) (actual time=0.014..832.140 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.431..44.431 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.010..19.361 rows=150000 loops=1)
 Planning Time: 1.152 ms
 Execution Time: 3410.065 ms
(29 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=35353.63..35353.64 rows=1 width=32) (actual time=2415.428..2415.429 rows=1 loops=1)
   ->  Aggregate  (cost=35353.63..35353.64 rows=1 width=32) (actual time=2415.426..2415.427 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35352.74 rows=118 width=12) (actual time=12.552..2415.110 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=488 width=30) (actual time=1.360..83.473 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.62 rows=1 width=21) (actual time=4.108..4.597 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 16.282 ms
 Execution Time: 2415.492 ms
(12 rows)

SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=35353.63..35353.64 rows=1 width=32) (actual time=64.710..64.711 rows=1 loops=1)
   ->  Aggregate  (cost=35353.63..35353.64 rows=1 width=32) (actual time=64.708..64.709 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35352.74 rows=118 width=12) (actual time=0.346..64.626 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=488 width=30) (actual time=0.229..48.050 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.62 rows=1 width=21) (actual time=0.029..0.032 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 1.140 ms
 Execution Time: 64.748 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208865.34..208865.35 rows=1 width=51) (actual time=3695.112..3695.115 rows=1 loops=1)
   ->  Sort  (cost=208865.34..208865.35 rows=1 width=51) (actual time=3695.110..3695.113 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184353.34..208865.33 rows=1 width=51) (actual time=3525.306..3694.887 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.688..3.850 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.328..0.331 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.353..2.767 rows=10000 loops=1)
               ->  Materialize  (cost=184353.34..208410.02 rows=1 width=8) (actual time=5.779..8.196 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184353.34..208410.02 rows=1 width=8) (actual time=2531.294..3519.612 rows=5898 loops=1)
                           ->  Hash Join  (cost=184352.91..201503.64 rows=4845 width=44) (actual time=2530.533..3062.856 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=177728.66..193620.18 rows=479692 width=40) (actual time=2480.028..2968.067 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14278.89..140196.15 rows=890484 width=13) (actual time=127.385..1974.167 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14056.27 rows=890484 width=0) (actual time=107.599..107.599 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=50.481..50.482 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.534..49.891 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.077..0.077 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.468 ms
 Execution Time: 3700.138 ms
(37 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208865.34..208865.35 rows=1 width=51) (actual time=1403.337..1403.340 rows=1 loops=1)
   ->  Sort  (cost=208865.34..208865.35 rows=1 width=51) (actual time=1403.335..1403.338 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184353.34..208865.33 rows=1 width=51) (actual time=1234.849..1403.149 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.020..1.604 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.005..0.693 rows=10000 loops=1)
               ->  Materialize  (cost=184353.34..208410.02 rows=1 width=8) (actual time=1.631..2.969 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184353.34..208410.02 rows=1 width=8) (actual time=714.311..1231.696 rows=5898 loops=1)
                           ->  Hash Join  (cost=184352.91..201503.64 rows=4845 width=44) (actual time=714.292..1209.725 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=177728.66..193620.18 rows=479692 width=40) (actual time=691.997..1149.234 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14278.89..140196.15 rows=890484 width=13) (actual time=94.828..305.414 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14056.27 rows=890484 width=0) (actual time=75.573..75.573 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=22.274..22.275 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.028..21.935 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.570 ms
 Execution Time: 1408.251 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360564.60..360564.61 rows=1 width=34) (actual time=2622.910..2622.924 rows=100 loops=1)
   ->  Sort  (cost=360564.60..360564.61 rows=1 width=34) (actual time=2622.909..2622.917 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=360564.57..360564.59 rows=1 width=34) (actual time=2621.901..2622.512 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=360564.57..360564.58 rows=1 width=26) (actual time=2621.892..2622.064 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=197104.29..360564.56 rows=1 width=26) (actual time=1489.550..2609.014 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197103.86..360561.17 rows=1 width=38) (actual time=1489.513..2594.638 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197103.43..245103.15 rows=38784 width=38) (actual time=1488.546..1990.679 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=728250 width=4) (actual time=0.388..358.960 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196104.88..196104.88 rows=79884 width=34) (actual time=1487.866..1487.868 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196104.88 rows=79884 width=34) (actual time=6.648..1448.009 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187570.88 rows=2000290 width=8) (actual time=0.510..1162.100 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=6.074..6.075 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.932..5.930 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.169..0.172 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.759..5.680 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.451..0.452 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 15.191 ms
 Execution Time: 2623.237 ms
(44 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360564.60..360564.61 rows=1 width=34) (actual time=1750.691..1750.705 rows=100 loops=1)
   ->  Sort  (cost=360564.60..360564.61 rows=1 width=34) (actual time=1750.689..1750.697 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=360564.57..360564.59 rows=1 width=34) (actual time=1749.646..1750.287 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=360564.57..360564.58 rows=1 width=26) (actual time=1749.637..1749.824 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=197104.29..360564.56 rows=1 width=26) (actual time=1281.752..1737.091 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197103.86..360561.17 rows=1 width=38) (actual time=1281.736..1726.506 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197103.43..245103.15 rows=38784 width=38) (actual time=1281.615..1571.422 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=728250 width=4) (actual time=0.006..171.695 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196104.88..196104.88 rows=79884 width=34) (actual time=1281.306..1281.309 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196104.88 rows=79884 width=34) (actual time=0.513..1244.181 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187570.88 rows=2000290 width=8) (actual time=0.072..975.751 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.418..0.419 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.062..0.363 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.050..0.310 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.029..0.029 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.534 ms
 Execution Time: 1750.825 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16077.44..16077.47 rows=1 width=72) (actual time=197.849..197.850 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=99.113..99.113 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4770 width=6) (actual time=0.017..95.503 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8531.00..8551.88 rows=759 width=72) (actual time=197.847..197.848 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8531.00..8532.90 rows=759 width=38) (actual time=197.651..197.687 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 442kB
               ->  Nested Loop Anti Join  (cost=0.43..8494.69 rows=759 width=38) (actual time=99.627..195.288 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=99.610..154.021 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 14.351 ms
 Execution Time: 197.910 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16077.44..16077.47 rows=1 width=72) (actual time=158.182..158.184 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=74.962..74.963 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4770 width=6) (actual time=0.007..71.659 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8531.00..8551.88 rows=759 width=72) (actual time=158.181..158.181 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8531.00..8532.90 rows=759 width=38) (actual time=157.985..158.022 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 442kB
               ->  Nested Loop Anti Join  (cost=0.43..8494.69 rows=759 width=38) (actual time=75.000..155.830 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=74.985..126.417 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.770 ms
 Execution Time: 158.222 ms
(20 rows)

