query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=395261.60..395261.61 rows=1 width=236) (actual time=6255.803..6255.804 rows=1 loops=1)
   ->  Sort  (cost=395261.60..395261.62 rows=6 width=236) (actual time=6255.802..6255.802 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=395261.41..395261.57 rows=6 width=236) (actual time=6255.753..6255.759 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187569.94 rows=5934042 width=25) (actual time=0.596..1121.400 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 13.581 ms
 Execution Time: 6256.171 ms
(12 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=395261.60..395261.61 rows=1 width=236) (actual time=6056.716..6056.717 rows=1 loops=1)
   ->  Sort  (cost=395261.60..395261.62 rows=6 width=236) (actual time=6056.715..6056.716 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=395261.41..395261.57 rows=6 width=236) (actual time=6056.684..6056.690 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187569.94 rows=5934042 width=25) (actual time=0.027..925.847 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.763 ms
 Execution Time: 6056.767 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47119.02..47119.02 rows=1 width=192) (actual time=434.091..434.097 rows=0 loops=1)
   ->  Sort  (cost=47119.02..47119.02 rows=1 width=192) (actual time=434.090..434.096 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=32937.22..47119.01 rows=1 width=192) (actual time=433.392..433.397 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=767 width=30) (actual time=0.384..56.661 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30537.22..30537.22 rows=160000 width=172) (actual time=337.291..337.294 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30537.22 rows=160000 width=172) (actual time=7.717..279.886 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.483..160.533 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=7.227..7.230 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.972..6.561 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.428..4.784 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.537..0.539 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.525..0.535 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.268..0.272 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.247..0.247 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.240..0.242 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.048..0.048 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.040..0.046 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.030..0.044 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.028..0.039 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.025..0.026 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.515 ms
 Execution Time: 434.259 ms
(47 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47119.02..47119.02 rows=1 width=192) (actual time=285.289..285.295 rows=0 loops=1)
   ->  Sort  (cost=47119.02..47119.02 rows=1 width=192) (actual time=285.288..285.294 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=32937.22..47119.01 rows=1 width=192) (actual time=285.260..285.266 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=767 width=30) (actual time=0.016..35.395 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30537.22..30537.22 rows=160000 width=172) (actual time=233.341..233.345 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30537.22 rows=160000 width=172) (actual time=3.100..178.487 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.009..56.299 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=3.088..3.090 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.268..2.413 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.003..0.728 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.263..0.264 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.256..0.262 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.019..0.019 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.014..0.018 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.007..0.016 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.006..0.012 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.004..0.005 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.741 ms
 Execution Time: 285.435 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=284689.74..284689.77 rows=10 width=44) (actual time=2000.096..2000.101 rows=10 loops=1)
   ->  Sort  (cost=284689.74..285470.43 rows=312277 width=44) (actual time=2000.095..2000.099 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=270378.59..277941.55 rows=312277 width=44) (actual time=1993.705..1998.052 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51066.57..253959.65 rows=312277 width=24) (actual time=690.237..1974.356 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187569.94 rows=3253541 width=16) (actual time=0.848..1016.879 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49266.94..49266.94 rows=143971 width=12) (actual time=687.936..687.939 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12334.51..49266.94 rows=143971 width=12) (actual time=87.148..657.753 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6484.51..41542.26 rows=714140 width=16) (actual time=42.255..482.338 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6305.98 rows=714140 width=0) (actual time=38.005..38.005 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30240 width=4) (actual time=44.812..44.813 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30240 width=4) (actual time=0.542..40.984 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 16.877 ms
 Execution Time: 2001.509 ms
(28 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=284689.74..284689.77 rows=10 width=44) (actual time=1366.039..1366.044 rows=10 loops=1)
   ->  Sort  (cost=284689.74..285470.43 rows=312277 width=44) (actual time=1366.037..1366.042 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=270378.59..277941.55 rows=312277 width=44) (actual time=1359.698..1364.022 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51066.57..253959.65 rows=312277 width=24) (actual time=284.358..1341.820 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187569.94 rows=3253541 width=16) (actual time=0.053..799.650 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49266.94..49266.94 rows=143971 width=12) (actual time=283.707..283.710 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12334.51..49266.94 rows=143971 width=12) (actual time=59.305..260.700 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6484.51..41542.26 rows=714140 width=16) (actual time=33.997..139.257 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6305.98 rows=714140 width=0) (actual time=30.478..30.478 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30240 width=4) (actual time=25.283..25.284 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30240 width=4) (actual time=0.013..21.982 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 1.437 ms
 Execution Time: 1367.180 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184066.28..184066.28 rows=1 width=24) (actual time=2110.761..2110.763 rows=1 loops=1)
   ->  Sort  (cost=184066.28..184066.29 rows=5 width=24) (actual time=2110.759..2110.760 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=184066.20..184066.25 rows=5 width=24) (actual time=2110.722..2110.724 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=644.55..183788.79 rows=55482 width=16) (actual time=9.066..2079.773 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=644.12..27607.35 rows=55482 width=20) (actual time=8.607..523.517 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..630.25 rows=55482 width=0) (actual time=4.989..4.989 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 14.586 ms
 Execution Time: 2111.783 ms
(19 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184066.28..184066.28 rows=1 width=24) (actual time=214.174..214.176 rows=1 loops=1)
   ->  Sort  (cost=184066.28..184066.29 rows=5 width=24) (actual time=214.173..214.174 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=184066.20..184066.25 rows=5 width=24) (actual time=214.146..214.148 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=644.55..183788.79 rows=55482 width=16) (actual time=6.847..199.261 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=644.12..27607.35 rows=55482 width=20) (actual time=6.816..41.478 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..630.25 rows=55482 width=0) (actual time=3.571..3.571 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 0.866 ms
 Execution Time: 214.227 ms
(19 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=186645.15..186645.16 rows=1 width=58) (actual time=2237.918..2237.923 rows=1 loops=1)
   ->  Sort  (cost=186645.15..186645.22 rows=25 width=58) (actual time=2237.916..2237.921 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=186554.85..186645.03 rows=25 width=58) (actual time=2235.653..2237.897 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=186554.85..186572.83 rows=7189 width=38) (actual time=2235.086..2235.384 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 605kB
                     ->  Hash Join  (cost=9414.81..186094.34 rows=7189 width=38) (actual time=77.753..2230.190 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8941.81..184677.15 rows=179844 width=50) (actual time=71.367..2186.312 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8941.38..39736.46 rows=44955 width=38) (actual time=70.850..715.044 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2604.37..32107.00 rows=224775 width=8) (actual time=17.689..594.047 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2548.18 rows=224775 width=0) (actual time=13.713..13.713 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=53.112..53.115 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.986..48.077 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.511..32.353 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.467..0.469 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.455..0.466 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.221..0.224 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.224..0.225 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.218..0.219 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.029..0.031 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.127..6.127 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.339..4.882 rows=10000 loops=1)
 Planning Time: 22.611 ms
 Execution Time: 2238.282 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=186645.15..186645.16 rows=1 width=58) (actual time=348.813..348.819 rows=1 loops=1)
   ->  Sort  (cost=186645.15..186645.22 rows=25 width=58) (actual time=348.812..348.817 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=186554.85..186645.03 rows=25 width=58) (actual time=346.591..348.802 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=186554.85..186572.83 rows=7189 width=38) (actual time=346.040..346.333 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 605kB
                     ->  Hash Join  (cost=9414.81..186094.34 rows=7189 width=38) (actual time=50.835..343.166 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8941.81..184677.15 rows=179844 width=50) (actual time=48.162..318.670 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8941.38..39736.46 rows=44955 width=38) (actual time=48.146..149.498 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2604.37..32107.00 rows=224775 width=8) (actual time=14.715..73.610 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2548.18 rows=224775 width=0) (actual time=11.250..11.251 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=33.402..33.404 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.032..29.004 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..9.728 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.022..0.024 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.017..0.022 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.657..2.658 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.432 rows=10000 loops=1)
 Planning Time: 3.520 ms
 Execution Time: 348.898 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108913.97..108913.98 rows=1 width=32) (actual time=1267.179..1267.180 rows=1 loops=1)
   ->  Aggregate  (cost=108913.97..108913.98 rows=1 width=32) (actual time=1267.177..1267.178 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21177.04..108318.20 rows=119153 width=12) (actual time=132.432..1209.920 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21147.25 rows=119153 width=0) (actual time=121.450..121.451 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.382 ms
 Execution Time: 1268.414 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108913.97..108913.98 rows=1 width=32) (actual time=208.956..208.958 rows=1 loops=1)
   ->  Aggregate  (cost=108913.97..108913.98 rows=1 width=32) (actual time=208.955..208.956 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21177.04..108318.20 rows=119153 width=12) (actual time=102.035..182.508 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21147.25 rows=119153 width=0) (actual time=91.468..91.468 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.463 ms
 Execution Time: 208.996 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234608.46..234608.49 rows=1 width=116) (actual time=3163.704..3163.709 rows=1 loops=1)
   ->  GroupAggregate  (cost=234608.46..234807.13 rows=6113 width=116) (actual time=3163.702..3163.707 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234608.46..234623.74 rows=6113 width=96) (actual time=3163.012..3163.069 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 685kB
               ->  Hash Join  (cost=84968.40..234224.02 rows=6113 width=96) (actual time=695.534..3158.107 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84603.30..233057.81 rows=146884 width=46) (actual time=688.975..3123.514 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29438.40..169539.09 rows=1836046 width=24) (actual time=208.005..2377.310 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28979.39 rows=1836046 width=0) (actual time=187.023..187.023 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=480.724..480.727 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=48.289..459.334 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.738..235.897 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=47.536..47.538 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.754..45.756 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.732..32.545 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.017..0.018 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.014 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.834..5.835 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.624..5.736 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.390..4.549 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.227..0.227 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.218..0.221 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 21.955 ms
 Execution Time: 3164.179 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234608.46..234608.49 rows=1 width=116) (actual time=954.094..954.100 rows=1 loops=1)
   ->  GroupAggregate  (cost=234608.46..234807.13 rows=6113 width=116) (actual time=954.092..954.098 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234608.46..234623.74 rows=6113 width=96) (actual time=953.405..953.462 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 685kB
               ->  Hash Join  (cost=84968.40..234224.02 rows=6113 width=96) (actual time=436.517..950.150 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84603.30..233057.81 rows=146884 width=46) (actual time=434.476..930.839 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29438.40..169539.09 rows=1836046 width=24) (actual time=143.615..440.607 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28979.39 rows=1836046 width=0) (actual time=123.560..123.560 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=290.763..290.766 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=27.493..271.690 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..86.639 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=27.473..27.475 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.022..26.003 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..9.345 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.971..1.972 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.025..1.882 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..0.675 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.016..0.016 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 2.690 ms
 Execution Time: 954.199 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114249.77..114249.81 rows=1 width=64) (actual time=6319.609..6319.616 rows=1 loops=1)
   ->  GroupAggregate  (cost=114249.77..114353.04 rows=2406 width=64) (actual time=6319.608..6319.614 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114249.77..114255.90 rows=2451 width=70) (actual time=6319.023..6319.077 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 252kB
               ->  Nested Loop  (cost=79054.58..114111.79 rows=2451 width=70) (actual time=5742.582..6317.153 rows=2485 loops=1)
                     ->  Hash Join  (cost=79054.43..114022.93 rows=2451 width=20) (actual time=5742.562..6313.325 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78606.43..113568.49 rows=2451 width=20) (actual time=5736.611..6306.260 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72269.42..107161.01 rows=12256 width=24) (actual time=5684.675..6251.071 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5336.06..38377.50 rows=460696 width=12) (actual time=29.347..522.248 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5220.89 rows=460696 width=0) (actual time=25.359..25.360 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66434.55..66434.55 rows=39905 width=20) (actual time=5655.188..5655.189 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66434.55 rows=39905 width=20) (actual time=1.419..5612.787 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1330 width=4) (actual time=1.087..57.951 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24) (actual time=0.252..4.189 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=51.916..51.918 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=1.199..48.327 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.497..32.641 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.696..0.697 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.691..0.695 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.225..0.227 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.459..0.459 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.212..0.213 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.944..5.944 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.321..4.871 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 24.457 ms
 Execution Time: 6320.016 ms
(52 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114249.77..114249.81 rows=1 width=64) (actual time=267.763..267.770 rows=1 loops=1)
   ->  GroupAggregate  (cost=114249.77..114353.04 rows=2406 width=64) (actual time=267.762..267.768 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114249.77..114255.90 rows=2451 width=70) (actual time=267.192..267.244 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 252kB
               ->  Nested Loop  (cost=79054.58..114111.79 rows=2451 width=70) (actual time=133.205..266.114 rows=2485 loops=1)
                     ->  Hash Join  (cost=79054.43..114022.93 rows=2451 width=20) (actual time=133.193..264.333 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78606.43..113568.49 rows=2451 width=20) (actual time=130.659..260.896 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72269.42..107161.01 rows=12256 width=24) (actual time=98.029..225.547 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5336.06..38377.50 rows=460696 width=12) (actual time=23.189..100.770 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5220.89 rows=460696 width=0) (actual time=19.676..19.676 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66434.55..66434.55 rows=39905 width=20) (actual time=74.793..74.795 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66434.55 rows=39905 width=20) (actual time=0.055..67.221 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1330 width=4) (actual time=0.041..21.306 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24) (actual time=0.004..0.031 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=32.609..32.611 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.247..29.386 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..9.881 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.238..0.239 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.232..0.237 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.224..0.225 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.525..2.526 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.395 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 4.122 ms
 Execution Time: 267.872 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=281798.40..281798.40 rows=1 width=90) (actual time=12444.742..12444.747 rows=1 loops=1)
   ->  Sort  (cost=281798.40..281948.77 rows=60150 width=90) (actual time=12444.740..12444.745 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=280595.40..281497.65 rows=60150 width=90) (actual time=12444.253..12444.665 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=219808.83..273170.39 rows=424286 width=81) (actual time=11528.981..12199.583 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=219807.26..270805.56 rows=424286 width=31) (actual time=11528.725..12102.760 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.590..233.212 rows=1500000 loops=1)
                           ->  Hash  (cost=214503.69..214503.69 rows=424286 width=31) (actual time=11527.497..11527.500 rows=325928 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25391kB
                                 ->  Nested Loop  (cost=7224.19..214503.69 rows=424286 width=31) (actual time=67.900..11374.589 rows=325928 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=7223.76..35006.35 rows=56564 width=26) (actual time=67.245..358.181 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=6775.76..34409.81 rows=56564 width=18) (actual time=60.913..330.810 rows=43520 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.508..165.783 rows=800000 loops=1)
                                                   ->  Hash  (cost=6599.00..6599.00 rows=14141 width=4) (actual time=60.315..60.316 rows=10880 loops=1)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 511kB
                                                         ->  Seq Scan on part  (cost=0.00..6599.00 rows=14141 width=4) (actual time=0.366..58.828 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.323..6.323 rows=10000 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.493..5.005 rows=10000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.036..0.250 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.248..0.249 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.230..0.235 rows=25 loops=1)
 Planning Time: 28.290 ms
 Execution Time: 12445.536 ms
(36 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=281798.40..281798.40 rows=1 width=90) (actual time=1464.420..1464.425 rows=1 loops=1)
   ->  Sort  (cost=281798.40..281948.77 rows=60150 width=90) (actual time=1464.418..1464.423 rows=1 loops=1)
         Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=280595.40..281497.65 rows=60150 width=90) (actual time=1463.940..1464.339 rows=175 loops=1)
               Group Key: nation.n_name, EXTRACT(year FROM orders.o_orderdate)
               Batches: 1  Memory Usage: 3217kB
               ->  Hash Join  (cost=219808.83..273170.39 rows=424286 width=81) (actual time=677.264..1223.380 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=219807.26..270805.56 rows=424286 width=31) (actual time=677.232..1127.836 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.007..92.206 rows=1500000 loops=1)
                           ->  Hash  (cost=214503.69..214503.69 rows=424286 width=31) (actual time=676.595..676.598 rows=325928 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25391kB
                                 ->  Nested Loop  (cost=7224.19..214503.69 rows=424286 width=31) (actual time=41.475..600.769 rows=325928 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=7223.76..35006.35 rows=56564 width=26) (actual time=41.456..199.990 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=6775.76..34409.81 rows=56564 width=18) (actual time=38.674..183.152 rows=43520 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.007..47.170 rows=800000 loops=1)
                                                   ->  Hash  (cost=6599.00..6599.00 rows=14141 width=4) (actual time=38.645..38.646 rows=10880 loops=1)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 511kB
                                                         ->  Seq Scan on part  (cost=0.00..6599.00 rows=14141 width=4) (actual time=0.009..37.286 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.772..2.772 rows=10000 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.019..1.409 rows=10000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.002..0.008 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.019 rows=25 loops=1)
 Planning Time: 5.887 ms
 Execution Time: 1464.939 ms
(36 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222518.02..222518.07 rows=20 width=202) (actual time=2259.111..2259.117 rows=20 loops=1)
   ->  Sort  (cost=222518.02..222659.96 rows=56775 width=202) (actual time=2259.109..2259.114 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=220297.57..221007.26 rows=56775 width=202) (actual time=2229.539..2247.894 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=7633.63..219587.89 rows=56775 width=182) (actual time=92.861..2116.642 rows=114347 loops=1)
                     ->  Hash Join  (cost=7633.49..218177.14 rows=56775 width=160) (actual time=92.590..2051.032 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=661.49..211056.10 rows=56775 width=16) (actual time=9.983..1917.770 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=661.05..27646.87 rows=56988 width=8) (actual time=8.851..517.030 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..646.81 rows=56988 width=0) (actual time=5.138..5.139 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.022..0.024 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=82.172..82.173 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.490..43.009 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.012..0.012 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 21.308 ms
 Execution Time: 2259.816 ms
(31 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222518.02..222518.07 rows=20 width=202) (actual time=535.962..535.969 rows=20 loops=1)
   ->  Sort  (cost=222518.02..222659.96 rows=56775 width=202) (actual time=535.961..535.966 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=220297.57..221007.26 rows=56775 width=202) (actual time=506.687..525.034 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=7633.63..219587.89 rows=56775 width=182) (actual time=70.230..422.633 rows=114347 loops=1)
                     ->  Hash Join  (cost=7633.49..218177.14 rows=56775 width=160) (actual time=70.212..372.033 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=661.49..211056.10 rows=56775 width=16) (actual time=6.916..267.914 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=661.05..27646.87 rows=56988 width=8) (actual time=6.878..46.256 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..646.81 rows=56988 width=0) (actual time=3.599..3.599 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=62.870..62.871 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.011..24.561 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 1.368 ms
 Execution Time: 536.398 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.29..15992.30 rows=1 width=36) (actual time=728.042..728.047 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.47..7689.49 rows=1 width=32) (actual time=27.358..27.360 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=10) (actual time=0.057..20.695 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.050..0.307 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.038..0.253 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.041 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.81..8329.47 rows=10667 width=36) (actual time=728.041..728.043 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.47..8249.47 rows=10667 width=36) (actual time=717.214..727.673 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=14) (actual time=1.166..660.190 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.727..4.299 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.301..0.304 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.423..3.888 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.201..0.202 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.050..1.575 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.252 ms
 Execution Time: 728.189 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.29..15992.30 rows=1 width=36) (actual time=82.957..82.962 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.47..7689.49 rows=1 width=32) (actual time=26.737..26.739 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=10) (actual time=0.055..20.060 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.297 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.244 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.81..8329.47 rows=10667 width=36) (actual time=82.956..82.958 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.47..8249.47 rows=10667 width=36) (actual time=72.500..82.587 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=14) (actual time=0.062..29.093 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.056..0.507 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.039..0.441 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.060 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.216 ms
 Execution Time: 83.085 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302810.66..302894.90 rows=1 width=27) (actual time=1869.067..1869.069 rows=1 loops=1)
   ->  GroupAggregate  (cost=302810.66..303400.33 rows=7 width=27) (actual time=1869.065..1869.067 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302810.66..302884.36 rows=29480 width=27) (actual time=1864.837..1865.432 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2219kB
               ->  Hash Join  (cost=247946.39..300622.15 rows=29480 width=27) (actual time=1441.273..1859.384 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.547..231.966 rows=1500000 loops=1)
                     ->  Hash  (cost=247577.89..247577.89 rows=29480 width=15) (actual time=1440.607..1440.608 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247577.89 rows=29480 width=15) (actual time=1.933..1433.952 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 14.539 ms
 Execution Time: 1869.706 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302810.66..302894.90 rows=1 width=27) (actual time=1480.333..1480.335 rows=1 loops=1)
   ->  GroupAggregate  (cost=302810.66..303400.33 rows=7 width=27) (actual time=1480.332..1480.334 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302810.66..302884.36 rows=29480 width=27) (actual time=1476.117..1476.703 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2219kB
               ->  Hash Join  (cost=247946.39..300622.15 rows=29480 width=27) (actual time=1217.853..1471.059 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.009..84.993 rows=1500000 loops=1)
                     ->  Hash  (cost=247577.89..247577.89 rows=29480 width=15) (actual time=1217.799..1217.800 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247577.89 rows=29480 width=15) (actual time=0.129..1211.380 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 0.859 ms
 Execution Time: 1480.385 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1383.824..1383.827 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1383.823..1383.825 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1383.797..1383.804 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1345.185..1367.207 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=34.675..1000.261 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.793..570.627 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.435..33.436 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.016..17.026 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.571 ms
 Execution Time: 1385.283 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1256.978..1256.981 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1256.976..1256.979 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1256.950..1256.958 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1216.364..1239.208 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=29.896..875.331 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.014..468.724 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.547..29.548 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.516 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.756 ms
 Execution Time: 1258.134 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76409.71..76409.72 rows=1 width=32) (actual time=826.267..826.269 rows=1 loops=1)
   ->  Aggregate  (cost=76409.71..76409.72 rows=1 width=32) (actual time=826.265..826.267 rows=1 loops=1)
         ->  Hash Join  (cost=9788.15..75112.62 rows=74119 width=33) (actual time=99.094..776.385 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1189.15..66319.06 rows=74119 width=16) (actual time=19.303..649.949 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1170.62 rows=74119 width=0) (actual time=12.523..12.523 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=79.613..79.614 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.501..47.147 rows=200000 loops=1)
 Planning Time: 15.857 ms
 Execution Time: 826.342 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76409.71..76409.72 rows=1 width=32) (actual time=175.167..175.169 rows=1 loops=1)
   ->  Aggregate  (cost=76409.71..76409.72 rows=1 width=32) (actual time=175.165..175.168 rows=1 loops=1)
         ->  Hash Join  (cost=9788.15..75112.62 rows=74119 width=33) (actual time=69.309..148.972 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1189.15..66319.06 rows=74119 width=16) (actual time=13.263..65.191 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1170.62 rows=74119 width=0) (actual time=7.281..7.281 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=55.864..55.865 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.017..26.865 rows=200000 loops=1)
 Planning Time: 1.115 ms
 Execution Time: 175.231 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240076.03..240084.91 rows=1 width=103) (actual time=1476.239..1476.242 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=120086.76..120086.77 rows=1 width=32) (actual time=202.385..202.387 rows=1 loops=1)
           ->  HashAggregate  (cost=119837.53..119962.14 rows=9969 width=36) (actual time=199.171..201.789 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3475.64..117670.50 rows=216703 width=16) (actual time=28.256..99.146 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3421.46 rows=216703 width=0) (actual time=17.627..17.627 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=119989.26..120433.51 rows=50 width=103) (actual time=1476.238..1476.239 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.767..5.742 rows=8449 loops=1)
         ->  Sort  (cost=119988.98..119989.10 rows=50 width=36) (actual time=1469.962..1469.963 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=119837.53..119987.57 rows=50 width=36) (actual time=1467.613..1469.955 rows=1 loops=1)
                     ->  HashAggregate  (cost=119837.53..119987.07 rows=50 width=36) (actual time=1467.612..1469.953 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3475.64..117670.50 rows=216703 width=16) (actual time=40.132..1091.079 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3421.46 rows=216703 width=0) (actual time=28.707..28.707 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 12.764 ms
 Execution Time: 1476.981 ms
(30 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240076.03..240084.91 rows=1 width=103) (actual time=436.199..436.202 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=120086.76..120086.77 rows=1 width=32) (actual time=201.845..201.846 rows=1 loops=1)
           ->  HashAggregate  (cost=119837.53..119962.14 rows=9969 width=36) (actual time=198.661..201.257 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3475.64..117670.50 rows=216703 width=16) (actual time=27.671..98.455 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3421.46 rows=216703 width=0) (actual time=17.195..17.195 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=119989.26..120433.51 rows=50 width=103) (actual time=436.198..436.199 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.014..1.321 rows=8449 loops=1)
         ->  Sort  (cost=119988.98..119989.10 rows=50 width=36) (actual time=434.398..434.399 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=119837.53..119987.57 rows=50 width=36) (actual time=432.068..434.394 rows=1 loops=1)
                     ->  HashAggregate  (cost=119837.53..119987.07 rows=50 width=36) (actual time=432.067..434.392 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3475.64..117670.50 rows=216703 width=16) (actual time=29.407..126.059 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3421.46 rows=216703 width=0) (actual time=18.806..18.806 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.768 ms
 Execution Time: 436.359 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33745.85..33745.85 rows=1 width=44) (actual time=661.698..661.702 rows=1 loops=1)
   ->  Sort  (cost=33745.85..33785.52 rows=15871 width=44) (actual time=661.697..661.700 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32778.03..33666.49 rows=15871 width=44) (actual time=626.598..658.925 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32778.03..32923.98 rows=58380 width=40) (actual time=626.585..632.807 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10033kB
                     ->  Hash Join  (cost=9812.30..28156.32 rows=58380 width=40) (actual time=80.207..290.407 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=5.911..145.181 rows=799680 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.176..5.646 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29190 width=40) (actual time=74.255..74.256 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29190 width=40) (actual time=0.474..68.791 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 16.330 ms
 Execution Time: 661.900 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33745.85..33745.85 rows=1 width=44) (actual time=614.144..614.147 rows=1 loops=1)
   ->  Sort  (cost=33745.85..33785.52 rows=15871 width=44) (actual time=614.143..614.146 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32778.03..33666.49 rows=15871 width=44) (actual time=579.462..611.355 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32778.03..32923.98 rows=58380 width=40) (actual time=579.450..585.522 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10033kB
                     ->  Hash Join  (cost=9812.30..28156.32 rows=58380 width=40) (actual time=54.077..244.123 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.057..124.330 rows=799680 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.035 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29190 width=40) (actual time=51.991..51.992 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29190 width=40) (actual time=0.012..47.060 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.921 ms
 Execution Time: 614.198 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222994.98..222994.99 rows=1 width=32) (actual time=3560.045..3560.048 rows=1 loops=1)
   ->  Aggregate  (cost=222994.98..222994.99 rows=1 width=32) (actual time=3560.044..3560.046 rows=1 loops=1)
         ->  Nested Loop  (cost=207878.57..222990.30 rows=1872 width=8) (actual time=3390.977..3559.809 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=207878.13..214977.64 rows=187 width=40) (actual time=3390.560..3435.092 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=194 width=4) (actual time=1.309..45.628 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205466.22..205466.22 rows=192953 width=36) (actual time=3388.926..3388.927 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202571.92..205466.22 rows=192953 width=36) (actual time=3043.826..3357.851 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172567.95 rows=6000795 width=9) (actual time=0.632..654.794 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.451..0.598 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 15.404 ms
 Execution Time: 3567.424 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222994.98..222994.99 rows=1 width=32) (actual time=3172.584..3172.587 rows=1 loops=1)
   ->  Aggregate  (cost=222994.98..222994.99 rows=1 width=32) (actual time=3172.583..3172.585 rows=1 loops=1)
         ->  Nested Loop  (cost=207878.57..222990.30 rows=1872 width=8) (actual time=3143.604..3172.499 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=207878.13..214977.64 rows=187 width=40) (actual time=3143.564..3167.685 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=194 width=4) (actual time=0.112..24.124 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205466.22..205466.22 rows=192953 width=36) (actual time=3143.082..3143.083 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202571.92..205466.22 rows=192953 width=36) (actual time=2796.591..3112.312 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172567.95 rows=6000795 width=9) (actual time=0.038..462.391 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.009..0.022 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 0.913 ms
 Execution Time: 3179.188 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794664.07..794664.32 rows=100 width=71) (actual time=4305.271..4305.277 rows=9 loops=1)
   ->  Sort  (cost=794664.07..799665.39 rows=2000529 width=71) (actual time=4305.270..4305.275 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658033.13..718205.29 rows=2000529 width=71) (actual time=4304.526..4305.226 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335196.69..550270.26 rows=2000529 width=44) (actual time=3579.502..4304.445 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172567.95 rows=6000795 width=9) (actual time=0.668..307.410 rows=6001215 loops=1)
                     ->  Hash  (cost=328945.86..328945.86 rows=500066 width=43) (actual time=3382.036..3382.039 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282564.64..328945.86 rows=500066 width=43) (actual time=3073.011..3382.011 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275592.64..320661.15 rows=500066 width=24) (actual time=3007.859..3316.849 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.674..226.923 rows=1500000 loops=1)
                                       ->  Hash  (cost=269341.82..269341.82 rows=500066 width=4) (actual time=2920.411..2920.412 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269341.82 rows=500066 width=4) (actual time=623.062..2920.388 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216834.86 rows=6000795 width=9) (actual time=0.017..1625.522 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=64.823..64.823 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.633..40.207 rows=150000 loops=1)
 Planning Time: 18.340 ms
 Execution Time: 4306.564 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794664.07..794664.32 rows=100 width=71) (actual time=3287.674..3287.680 rows=9 loops=1)
   ->  Sort  (cost=794664.07..799665.39 rows=2000529 width=71) (actual time=3287.672..3287.677 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658033.13..718205.29 rows=2000529 width=71) (actual time=3286.921..3287.630 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335196.69..550270.26 rows=2000529 width=44) (actual time=2560.682..3286.844 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172567.95 rows=6000795 width=9) (actual time=0.019..307.138 rows=6001215 loops=1)
                     ->  Hash  (cost=328945.86..328945.86 rows=500066 width=43) (actual time=2366.609..2366.612 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282564.64..328945.86 rows=500066 width=43) (actual time=2163.401..2366.590 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275592.64..320661.15 rows=500066 width=24) (actual time=2119.773..2322.952 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..84.130 rows=1500000 loops=1)
                                       ->  Hash  (cost=269341.82..269341.82 rows=500066 width=4) (actual time=2064.714..2064.715 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269341.82 rows=500066 width=4) (actual time=437.102..2064.694 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216834.86 rows=6000795 width=9) (actual time=0.016..840.495 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.275..43.276 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.021..18.670 rows=150000 loops=1)
 Planning Time: 1.211 ms
 Execution Time: 3288.812 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=35719.38..35719.39 rows=1 width=32) (actual time=2458.864..2458.865 rows=1 loops=1)
   ->  Aggregate  (cost=35719.38..35719.39 rows=1 width=32) (actual time=2458.863..2458.864 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35718.50 rows=117 width=12) (actual time=14.033..2458.509 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=481 width=30) (actual time=2.193..83.804 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=4.184..4.682 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 16.473 ms
 Execution Time: 2458.921 ms
(12 rows)

SET
SET
SET


 Limit  (cost=35719.38..35719.39 rows=1 width=32) (actual time=66.028..66.029 rows=1 loops=1)
   ->  Aggregate  (cost=35719.38..35719.39 rows=1 width=32) (actual time=66.027..66.028 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35718.50 rows=117 width=12) (actual time=0.349..65.952 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=481 width=30) (actual time=0.226..47.589 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=0.032..0.036 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 1.095 ms
 Execution Time: 66.064 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=211222.77..211222.77 rows=1 width=51) (actual time=3705.372..3705.376 rows=1 loops=1)
   ->  Sort  (cost=211222.77..211222.77 rows=1 width=51) (actual time=3705.371..3705.374 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186264.12..211222.76 rows=1 width=51) (actual time=3540.347..3705.184 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.701..3.298 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.337..0.340 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.357..2.251 rows=10000 loops=1)
               ->  Materialize  (cost=186264.12..210767.45 rows=1 width=8) (actual time=5.684..8.223 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=186264.12..210767.44 rows=1 width=8) (actual time=2489.384..3533.461 rows=5898 loops=1)
                           ->  Hash Join  (cost=186263.70..203775.49 rows=4906 width=44) (actual time=2488.667..3029.662 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179639.45..195876.25 rows=485703 width=40) (actual time=2445.643..2936.441 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14696.67..141005.81 rows=916609 width=13) (actual time=124.724..1950.120 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14467.52 rows=916609 width=0) (actual time=105.038..105.039 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=43.004..43.005 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.518..42.591 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.084..0.084 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.329 ms
 Execution Time: 3709.951 ms
(38 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=211222.77..211222.77 rows=1 width=51) (actual time=1379.406..1379.410 rows=1 loops=1)
   ->  Sort  (cost=211222.77..211222.77 rows=1 width=51) (actual time=1379.405..1379.408 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186264.12..211222.76 rows=1 width=51) (actual time=1215.164..1379.222 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.032..1.586 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.025 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.662 rows=10000 loops=1)
               ->  Materialize  (cost=186264.12..210767.45 rows=1 width=8) (actual time=1.634..2.918 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=186264.12..210767.44 rows=1 width=8) (actual time=715.835..1211.733 rows=5898 loops=1)
                           ->  Hash Join  (cost=186263.70..203775.49 rows=4906 width=44) (actual time=715.810..1188.280 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179639.45..195876.25 rows=485703 width=40) (actual time=695.573..1128.855 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14696.67..141005.81 rows=916609 width=13) (actual time=87.101..309.089 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14467.52 rows=916609 width=0) (actual time=67.943..67.944 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=20.219..20.219 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.024..19.892 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.004..0.004 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.535 ms
 Execution Time: 1383.915 ms
(38 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359794.81..359794.81 rows=1 width=34) (actual time=2474.886..2474.900 rows=100 loops=1)
   ->  Sort  (cost=359794.81..359794.81 rows=1 width=34) (actual time=2474.885..2474.893 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=359794.78..359794.80 rows=1 width=34) (actual time=2473.892..2474.486 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=359794.78..359794.78 rows=1 width=26) (actual time=2473.884..2474.054 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=197106.12..359794.77 rows=1 width=26) (actual time=1374.798..2460.871 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197105.69..359791.38 rows=1 width=38) (actual time=1374.762..2443.361 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197105.25..245080.53 rows=38533 width=38) (actual time=1373.597..1810.072 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=722400 width=4) (actual time=0.406..299.765 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196105.12..196105.12 rows=80011 width=34) (actual time=1372.887..1372.889 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196105.12 rows=80011 width=34) (actual time=6.112..1339.525 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187569.94 rows=2000265 width=8) (actual time=0.631..1091.190 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=5.416..5.417 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.887..5.285 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.188..0.191 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.695..5.000 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.374..0.374 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 15.754 ms
 Execution Time: 2475.225 ms
(44 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359794.81..359794.81 rows=1 width=34) (actual time=1708.940..1708.954 rows=100 loops=1)
   ->  Sort  (cost=359794.81..359794.81 rows=1 width=34) (actual time=1708.939..1708.947 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=359794.78..359794.80 rows=1 width=34) (actual time=1707.948..1708.539 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=359794.78..359794.78 rows=1 width=26) (actual time=1707.940..1708.111 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=197106.12..359794.77 rows=1 width=26) (actual time=1206.573..1695.177 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197105.69..359791.38 rows=1 width=38) (actual time=1206.556..1681.964 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197105.25..245080.53 rows=38533 width=38) (actual time=1206.427..1492.887 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=722400 width=4) (actual time=0.015..168.548 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196105.12..196105.12 rows=80011 width=34) (actual time=1206.094..1206.097 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196105.12 rows=80011 width=34) (actual time=0.492..1172.733 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187569.94 rows=2000265 width=8) (actual time=0.037..934.157 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.429..0.431 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.060..0.376 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.045..0.321 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.022..0.023 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.391 ms
 Execution Time: 1709.060 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16078.53..16078.55 rows=1 width=72) (actual time=182.911..182.913 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=32) (actual time=87.684..87.684 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4780 width=6) (actual time=0.020..84.524 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8532.06..8552.77 rows=753 width=72) (actual time=182.910..182.911 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8532.06..8533.95 rows=753 width=38) (actual time=182.723..182.760 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 392kB
               ->  Nested Loop Anti Join  (cost=0.43..8496.08 rows=753 width=38) (actual time=88.324..180.845 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=88.305..137.794 rows=19077 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 14.843 ms
 Execution Time: 182.965 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16078.53..16078.55 rows=1 width=72) (actual time=148.231..148.233 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=32) (actual time=69.294..69.295 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4780 width=6) (actual time=0.007..66.180 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8532.06..8552.77 rows=753 width=72) (actual time=148.230..148.231 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8532.06..8533.95 rows=753 width=38) (actual time=148.040..148.077 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 392kB
               ->  Nested Loop Anti Join  (cost=0.43..8496.08 rows=753 width=38) (actual time=69.334..146.355 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=69.318..116.005 rows=19077 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 1.033 ms
 Execution Time: 148.273 ms
(20 rows)

