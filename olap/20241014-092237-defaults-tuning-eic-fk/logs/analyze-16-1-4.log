query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184122.46..184123.10 rows=1 width=236) (actual time=2070.124..2072.903 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184122.46..184126.28 rows=6 width=236) (actual time=2070.123..2072.900 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184122.46..184125.34 rows=24 width=236) (actual time=2070.101..2072.880 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183122.40..183122.42 rows=6 width=236) (actual time=2060.657..2060.658 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183122.19..183122.33 rows=6 width=236) (actual time=2060.621..2060.627 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.67 rows=1480272 width=25) (actual time=1.287..434.170 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 13.308 ms
 Execution Time: 2073.315 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184122.46..184123.10 rows=1 width=236) (actual time=1985.700..1985.789 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184122.46..184126.28 rows=6 width=236) (actual time=1985.698..1985.787 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184122.46..184125.34 rows=24 width=236) (actual time=1985.665..1985.758 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183122.40..183122.42 rows=6 width=236) (actual time=1980.931..1980.932 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183122.19..183122.33 rows=6 width=236) (actual time=1980.899..1980.905 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.67 rows=1480272 width=25) (actual time=0.034..280.097 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.555 ms
 Execution Time: 1985.859 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47514.63..47514.63 rows=1 width=192) (actual time=422.257..422.356 rows=100 loops=1)
   ->  Sort  (cost=47514.63..47514.63 rows=1 width=192) (actual time=422.256..422.349 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=33942.01..47514.62 rows=1 width=192) (actual time=368.209..421.902 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6437.10 rows=881 width=30) (actual time=1.873..2.158 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=367 width=30) (actual time=0.474..34.415 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=365.541..365.545 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.998..303.587 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.498..184.766 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.485..6.488 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.611..5.961 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.293..4.366 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.304..0.306 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.298..0.303 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.145..0.147 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.146..0.147 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.143..0.143 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.041..0.041 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.034..0.039 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.028..0.037 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.026..0.033 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.024..0.025 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.067 ms
 Execution Time: 422.505 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47514.63..47514.63 rows=1 width=192) (actual time=250.740..250.838 rows=100 loops=1)
   ->  Sort  (cost=47514.63..47514.63 rows=1 width=192) (actual time=250.739..250.831 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=33942.01..47514.62 rows=1 width=192) (actual time=230.449..250.478 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6437.10 rows=881 width=30) (actual time=0.268..0.489 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=367 width=30) (actual time=0.029..13.873 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=229.765..229.769 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.775..174.362 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..55.737 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.764..2.767 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.040..2.291 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.766 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.035..0.037 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.029..0.035 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.009..0.013 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.008 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.987 ms
 Execution Time: 250.978 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233158.40..233158.42 rows=10 width=44) (actual time=1185.688..1187.417 rows=10 loops=1)
   ->  Sort  (cost=233158.40..233946.26 rows=315147 width=44) (actual time=1185.687..1187.415 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179947.63..226348.18 rows=315147 width=44) (actual time=1162.844..1185.109 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179947.63..217681.64 rows=315147 width=24) (actual time=1162.831..1168.942 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178947.57..179144.54 rows=78787 width=24) (actual time=1151.689..1151.959 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 500kB
                           Worker 0:  Sort Method: quicksort  Memory: 523kB
                           Worker 1:  Sort Method: quicksort  Memory: 512kB
                           Worker 2:  Sort Method: quicksort  Memory: 527kB
                           Worker 3:  Sort Method: quicksort  Memory: 511kB
                           ->  Parallel Hash Join  (cost=37903.02..172539.95 rows=78787 width=24) (actual time=265.512..1149.583 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.67 rows=818705 width=16) (actual time=0.708..812.360 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37320.96..37320.96 rows=46565 width=12) (actual time=263.467..263.470 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4535.94..37320.96 rows=46565 width=12) (actual time=26.488..254.402 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230708 width=16) (actual time=0.445..197.827 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12615 width=4) (actual time=25.920..25.921 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12615 width=4) (actual time=0.783..23.934 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 18.571 ms
 Execution Time: 1187.825 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233158.40..233158.42 rows=10 width=44) (actual time=459.879..461.518 rows=10 loops=1)
   ->  Sort  (cost=233158.40..233946.26 rows=315147 width=44) (actual time=459.878..461.515 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179947.63..226348.18 rows=315147 width=44) (actual time=436.226..459.175 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179947.63..217681.64 rows=315147 width=24) (actual time=436.213..443.092 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178947.57..179144.54 rows=78787 width=24) (actual time=432.013..432.280 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 551kB
                           Worker 0:  Sort Method: quicksort  Memory: 596kB
                           Worker 1:  Sort Method: quicksort  Memory: 438kB
                           Worker 2:  Sort Method: quicksort  Memory: 546kB
                           Worker 3:  Sort Method: quicksort  Memory: 442kB
                           ->  Parallel Hash Join  (cost=37903.02..172539.95 rows=78787 width=24) (actual time=99.114..430.395 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.67 rows=818705 width=16) (actual time=0.073..248.531 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37320.96..37320.96 rows=46565 width=12) (actual time=97.909..97.912 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4535.94..37320.96 rows=46565 width=12) (actual time=9.813..88.981 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230708 width=16) (actual time=0.014..50.925 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12615 width=4) (actual time=8.925..8.926 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12615 width=4) (actual time=0.014..5.847 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.368 ms
 Execution Time: 461.591 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29292.13..61683.51 rows=1 width=24) (actual time=2805.926..2810.722 rows=1 loops=1)
   ->  GroupAggregate  (cost=29292.13..191249.03 rows=5 width=24) (actual time=2805.925..2810.719 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29292.13..190973.39 rows=55117 width=16) (actual time=429.499..2801.781 rows=10479 loops=1)
               ->  Gather Merge  (cost=29291.70..35812.40 rows=55117 width=20) (actual time=428.787..445.595 rows=11388 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28291.66..28336.11 rows=17780 width=20) (actual time=420.436..420.879 rows=3767 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1029kB
                           Worker 0:  Sort Method: quicksort  Memory: 1035kB
                           Worker 1:  Sort Method: quicksort  Memory: 1040kB
                           Worker 2:  Sort Method: quicksort  Memory: 1057kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=638.88..27036.57 rows=17780 width=20) (actual time=5.140..415.263 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5718
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..625.10 rows=55117 width=0) (actual time=7.162..7.163 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.205..0.205 rows=1 loops=11388)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 15.398 ms
 Execution Time: 2810.807 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29292.13..61683.51 rows=1 width=24) (actual time=74.985..80.320 rows=1 loops=1)
   ->  GroupAggregate  (cost=29292.13..191249.03 rows=5 width=24) (actual time=74.983..80.317 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29292.13..190973.39 rows=55117 width=16) (actual time=33.684..78.797 rows=10479 loops=1)
               ->  Gather Merge  (cost=29291.70..35812.40 rows=55117 width=20) (actual time=33.645..41.761 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28291.66..28336.11 rows=17780 width=20) (actual time=30.269..30.539 rows=3767 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1035kB
                           Worker 0:  Sort Method: quicksort  Memory: 1020kB
                           Worker 1:  Sort Method: quicksort  Memory: 1085kB
                           Worker 2:  Sort Method: quicksort  Memory: 1021kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=638.88..27036.57 rows=17780 width=20) (actual time=6.040..26.815 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5742
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..625.10 rows=55117 width=0) (actual time=5.393..5.394 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.842 ms
 Execution Time: 80.377 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82697.37..82697.37 rows=1 width=58) (actual time=2246.474..2256.521 rows=1 loops=1)
   ->  Sort  (cost=82697.37..82697.43 rows=25 width=58) (actual time=2246.473..2256.520 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=82658.78..82697.24 rows=25 width=58) (actual time=2245.935..2256.509 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=82658.78..82696.37 rows=75 width=58) (actual time=2245.730..2256.489 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=81658.74..81687.52 rows=25 width=58) (actual time=2237.038..2237.753 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=81658.74..81664.43 rows=2277 width=38) (actual time=2236.854..2236.937 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 162kB
                                 Worker 0:  Sort Method: quicksort  Memory: 162kB
                                 Worker 1:  Sort Method: quicksort  Memory: 167kB
                                 Worker 2:  Sort Method: quicksort  Memory: 174kB
                                 ->  Hash Join  (cost=7771.49..81531.77 rows=2277 width=38) (actual time=49.858..2235.005 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7298.49..80759.54 rows=56996 width=50) (actual time=45.052..2217.408 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7298.06..34824.08 rows=14247 width=38) (actual time=44.576..244.560 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2557.92..29757.45 rows=71235 width=8) (actual time=20.347..194.731 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6528
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2502.72 rows=220829 width=0) (actual time=15.882..15.883 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.033..24.036 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.297..21.650 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.123..16.908 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.169..0.170 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.093..0.098 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.042..0.044 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.165..0.173 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.714..3.715 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.082..2.283 rows=10000 loops=4)
 Planning Time: 24.243 ms
 Execution Time: 2256.615 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82697.37..82697.37 rows=1 width=58) (actual time=142.474..156.128 rows=1 loops=1)
   ->  Sort  (cost=82697.37..82697.43 rows=25 width=58) (actual time=142.473..156.126 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=82658.78..82697.24 rows=25 width=58) (actual time=141.930..156.115 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=82658.78..82696.37 rows=75 width=58) (actual time=141.720..156.096 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=81658.74..81687.52 rows=25 width=58) (actual time=137.691..138.395 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=81658.74..81664.43 rows=2277 width=38) (actual time=137.511..137.595 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 164kB
                                 Worker 0:  Sort Method: quicksort  Memory: 165kB
                                 Worker 1:  Sort Method: quicksort  Memory: 169kB
                                 Worker 2:  Sort Method: quicksort  Memory: 167kB
                                 ->  Hash Join  (cost=7771.49..81531.77 rows=2277 width=38) (actual time=31.757..136.544 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7298.49..80759.54 rows=56996 width=50) (actual time=28.677..125.575 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7298.06..34824.08 rows=14247 width=38) (actual time=28.650..68.172 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2557.92..29757.45 rows=71235 width=8) (actual time=16.711..42.625 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6585
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2502.72 rows=220829 width=0) (actual time=13.004..13.005 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.785..11.787 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.113..9.467 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.010..3.834 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.097..0.098 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.030..0.035 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.013 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.949..2.949 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.020..1.539 rows=10000 loops=4)
 Planning Time: 4.205 ms
 Execution Time: 156.219 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=105457.79..105457.80 rows=1 width=32) (actual time=1095.328..1102.128 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=105457.79..105457.80 rows=1 width=32) (actual time=1095.326..1102.125 rows=1 loops=1)
         ->  Gather  (cost=105457.36..105457.77 rows=4 width=32) (actual time=1094.843..1102.113 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=104457.36..104457.37 rows=1 width=32) (actual time=1084.939..1084.940 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20410.86..104312.41 rows=28990 width=12) (actual time=129.002..1067.801 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13232
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20381.87 rows=115960 width=0) (actual time=125.643..125.643 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.679 ms
 Execution Time: 1103.216 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=105457.79..105457.80 rows=1 width=32) (actual time=202.760..207.370 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=105457.79..105457.80 rows=1 width=32) (actual time=202.759..207.367 rows=1 loops=1)
         ->  Gather  (cost=105457.36..105457.77 rows=4 width=32) (actual time=198.768..207.350 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=104457.36..104457.37 rows=1 width=32) (actual time=193.919..193.920 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20410.86..104312.41 rows=28990 width=12) (actual time=107.029..186.652 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=14230
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20381.87 rows=115960 width=0) (actual time=99.409..99.410 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.746 ms
 Execution Time: 207.428 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141441.91..141600.29 rows=1 width=116) (actual time=3524.527..3527.877 rows=1 loops=1)
   ->  GroupAggregate  (cost=141441.91..1106451.47 rows=6093 width=116) (actual time=3524.525..3527.875 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141441.91..1106268.68 rows=6093 width=96) (actual time=846.625..3525.088 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32695
               ->  Nested Loop  (cost=141441.49..633425.62 rows=152334 width=76) (actual time=839.113..2956.279 rows=34054 loops=1)
                     ->  Gather Merge  (cost=141441.06..159680.72 rows=152334 width=76) (actual time=838.520..879.987 rows=34054 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140441.00..140536.21 rows=38084 width=76) (actual time=824.663..825.549 rows=7211 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3708kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3786kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4025kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4154kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3998kB
                                 ->  Hash Join  (cost=381.77..137543.40 rows=38084 width=76) (actual time=4.762..799.971 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.21 rows=458062 width=24) (actual time=1.586..746.547 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.056..3.059 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.232..2.917 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.158..1.628 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.067..0.068 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.056..0.063 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.044..0.046 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.060..0.060 rows=1 loops=34054)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=34054)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 22.952 ms
 Execution Time: 3528.589 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141441.91..141600.29 rows=1 width=116) (actual time=501.578..502.857 rows=1 loops=1)
   ->  GroupAggregate  (cost=141441.91..1106451.47 rows=6093 width=116) (actual time=501.577..502.855 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141441.91..1106268.68 rows=6093 width=96) (actual time=342.364..501.701 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32670
               ->  Nested Loop  (cost=141441.49..633425.62 rows=152334 width=76) (actual time=342.108..431.692 rows=34029 loops=1)
                     ->  Gather Merge  (cost=141441.06..159680.72 rows=152334 width=76) (actual time=342.064..359.746 rows=34029 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140441.00..140536.21 rows=38084 width=76) (actual time=333.517..334.155 rows=7204 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 2970kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3170kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5154kB
                                 Worker 2:  Sort Method: quicksort  Memory: 5333kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5348kB
                                 ->  Hash Join  (cost=381.77..137543.40 rows=38084 width=76) (actual time=3.630..306.486 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.21 rows=458062 width=24) (actual time=1.299..252.595 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.230..2.233 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.038..2.088 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..0.779 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.028..0.030 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.019..0.024 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34029)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34029)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.858 ms
 Execution Time: 502.951 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42047.32..42431.25 rows=1 width=64) (actual time=5067.864..5073.074 rows=1 loops=1)
   ->  GroupAggregate  (cost=42047.32..965783.88 rows=2406 width=64) (actual time=5067.863..5073.072 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42047.32..965686.40 rows=2468 width=70) (actual time=248.842..5070.299 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14802
               ->  Nested Loop  (cost=42047.32..964787.68 rows=2468 width=20) (actual time=248.823..5065.688 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42047.04..957536.93 rows=2471 width=20) (actual time=248.672..5028.058 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42046.61..353284.32 rows=371879 width=24) (actual time=223.486..4041.100 rows=182880 loops=1)
                                 ->  Gather Merge  (cost=42046.17..53043.47 rows=92956 width=8) (actual time=222.377..261.077 rows=45635 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41046.13..41121.10 rows=29986 width=8) (actual time=212.198..213.432 rows=12551 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1617kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1704kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1645kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1670kB
                                             ->  Parallel Hash Join  (cost=4740.13..38816.38 rows=29986 width=8) (actual time=24.851..204.932 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149930 width=12) (actual time=0.474..149.509 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=24.150..24.154 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.279..22.287 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.147..17.747 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.127..0.129 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.121..0.127 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.054..0.056 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.062..0.063 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.057..0.058 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.076..0.082 rows=4 loops=45635)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=182880)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62903  Misses: 119977  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=119977)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.030..0.030 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.012 rows=25 loops=1)
 Planning Time: 27.973 ms
 Execution Time: 5074.300 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42047.32..42431.25 rows=1 width=64) (actual time=609.575..615.997 rows=1 loops=1)
   ->  GroupAggregate  (cost=42047.32..965783.88 rows=2406 width=64) (actual time=609.573..615.995 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42047.32..965686.40 rows=2468 width=70) (actual time=102.936..614.821 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=42047.32..964787.68 rows=2468 width=20) (actual time=102.922..612.382 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42047.04..957536.93 rows=2471 width=20) (actual time=102.913..609.140 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42046.61..353284.32 rows=371879 width=24) (actual time=100.606..283.283 rows=182928 loops=1)
                                 ->  Gather Merge  (cost=42046.17..53043.47 rows=92956 width=8) (actual time=100.564..123.348 rows=45646 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41046.13..41121.10 rows=29986 width=8) (actual time=97.207..98.041 rows=12497 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1661kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1665kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1649kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1660kB
                                             ->  Parallel Hash Join  (cost=4740.13..38816.38 rows=29986 width=8) (actual time=11.310..91.104 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149930 width=12) (actual time=0.009..56.461 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.051..11.054 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.053..9.427 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.010..3.885 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.038..0.040 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.033..0.039 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.020..0.020 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45646)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182928)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62937  Misses: 119991  Evictions: 0  Overflows: 0  Memory Usage: 7997kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119991)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.011 rows=25 loops=1)
 Planning Time: 4.877 ms
 Execution Time: 617.295 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42076.05..42086.75 rows=1 width=90) (actual time=4529.606..4534.825 rows=1 loops=1)
   ->  GroupAggregate  (cost=42076.05..685301.60 rows=60150 width=90) (actual time=4529.605..4534.823 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=42076.05..681220.37 rows=181656 width=81) (actual time=4528.688..4533.960 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1528kB  Peak Memory: 1528kB
               ->  Nested Loop  (cost=15539.67..667298.67 rows=181656 width=81) (actual time=223.148..4508.480 rows=13629 loops=1)
                     ->  Nested Loop  (cost=15539.25..95297.11 rows=181656 width=53) (actual time=222.279..2493.884 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=15538.81..18362.43 rows=24244 width=48) (actual time=220.921..228.439 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=14538.79..14564.04 rows=10102 width=48) (actual time=213.375..213.498 rows=1026 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1555kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1500kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1498kB
                                       ->  Hash Join  (cost=449.99..13866.89 rows=10102 width=48) (actual time=4.207..204.347 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..13834.31 rows=10102 width=26) (actual time=4.065..201.252 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..13359.78 rows=10102 width=18) (actual time=0.235..191.715 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=2525 width=4) (actual time=0.096..29.946 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.042..0.044 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.811..3.812 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.100..2.546 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.075..0.076 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.065..0.068 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.283..1.243 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.145..0.145 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 28.705 ms
 Execution Time: 4534.913 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42076.05..42086.75 rows=1 width=90) (actual time=124.641..128.462 rows=1 loops=1)
   ->  GroupAggregate  (cost=42076.05..685301.60 rows=60150 width=90) (actual time=124.640..128.460 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=42076.05..681220.37 rows=181656 width=81) (actual time=123.749..127.616 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1528kB  Peak Memory: 1528kB
               ->  Nested Loop  (cost=15539.67..667298.67 rows=181656 width=81) (actual time=51.846..119.972 rows=13629 loops=1)
                     ->  Nested Loop  (cost=15539.25..95297.11 rows=181656 width=53) (actual time=51.829..75.697 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=15538.81..18362.43 rows=24244 width=48) (actual time=51.791..56.420 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=14538.79..14564.04 rows=10102 width=48) (actual time=48.731..48.821 rows=1036 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1595kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1487kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1471kB
                                       ->  Hash Join  (cost=449.99..13866.89 rows=10102 width=48) (actual time=2.817..40.314 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..13834.31 rows=10102 width=26) (actual time=2.730..37.713 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..13359.78 rows=10102 width=18) (actual time=0.026..30.772 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=2525 width=4) (actual time=0.010..14.926 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.689..2.690 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..1.477 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.215 ms
 Execution Time: 128.551 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103740.00..103740.05 rows=20 width=202) (actual time=2072.420..2077.310 rows=20 loops=1)
   ->  Sort  (cost=103740.00..103885.03 rows=58010 width=202) (actual time=2072.419..2077.307 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=101471.25..102196.38 rows=58010 width=202) (actual time=2041.023..2065.731 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6694.73..100746.13 rows=58010 width=182) (actual time=60.017..1933.514 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5694.73..93945.13 rows=18713 width=182) (actual time=49.005..1984.115 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5693.17..93886.11 rows=18713 width=160) (actual time=48.846..1974.539 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=689.92..88833.74 rows=18713 width=16) (actual time=13.625..1917.531 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=689.48..27108.24 rows=19184 width=8) (actual time=12.818..262.253 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4884
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..674.62 rows=59469 width=0) (actual time=9.034..9.034 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.111..0.115 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=34.754..34.754 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.128..13.882 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.063..0.063 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.052..0.055 rows=25 loops=4)
 Planning Time: 21.723 ms
 Execution Time: 2078.046 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103740.00..103740.05 rows=20 width=202) (actual time=216.420..220.517 rows=20 loops=1)
   ->  Sort  (cost=103740.00..103885.03 rows=58010 width=202) (actual time=216.419..220.513 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=101471.25..102196.38 rows=58010 width=202) (actual time=184.314..208.846 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6694.73..100746.13 rows=58010 width=182) (actual time=42.394..105.883 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5694.73..93945.13 rows=18713 width=182) (actual time=38.934..147.591 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5693.17..93886.11 rows=18713 width=160) (actual time=38.833..141.452 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=689.92..88833.74 rows=18713 width=16) (actual time=10.675..99.610 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=689.48..27108.24 rows=19184 width=8) (actual time=10.635..27.518 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2261
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..674.62 rows=59469 width=0) (actual time=7.235..7.235 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.751..27.752 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.005..7.745 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.022 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.012 rows=25 loops=4)
 Planning Time: 1.663 ms
 Execution Time: 220.924 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.23..15992.23 rows=1 width=36) (actual time=704.491..704.496 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.44..7689.46 rows=1 width=32) (actual time=26.765..26.768 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.44 rows=32000 width=10) (actual time=0.055..18.884 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.049..0.301 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.039..0.243 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.78..8329.44 rows=10667 width=36) (actual time=704.490..704.491 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.44..8249.44 rows=10667 width=36) (actual time=693.816..704.340 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.44 rows=32000 width=14) (actual time=1.107..635.234 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.643..4.152 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.188..0.192 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.448..3.848 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.215..0.215 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.046..1.517 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.147 ms
 Execution Time: 704.878 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.23..15992.23 rows=1 width=36) (actual time=84.113..84.117 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.44..7689.46 rows=1 width=32) (actual time=26.303..26.305 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.44 rows=32000 width=10) (actual time=0.053..18.466 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.307 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.238 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.78..8329.44 rows=10667 width=36) (actual time=84.112..84.114 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.44..8249.44 rows=10667 width=36) (actual time=73.414..83.953 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.44 rows=32000 width=14) (actual time=0.062..28.320 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.051..0.444 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.039..0.374 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.058 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.033 ms
 Execution Time: 84.491 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147777.59..161169.30 rows=1 width=27) (actual time=1872.533..1875.654 rows=1 loops=1)
   ->  GroupAggregate  (cost=147777.59..241519.53 rows=7 width=27) (actual time=1872.532..1875.652 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147777.59..241014.52 rows=28854 width=27) (actual time=804.202..1863.665 rows=15492 loops=1)
               ->  Gather Merge  (cost=147777.16..151231.99 rows=28854 width=15) (actual time=803.051..815.097 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146777.10..146795.14 rows=7214 width=15) (actual time=791.868..792.221 rows=4206 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 427kB
                           Worker 0:  Sort Method: quicksort  Memory: 443kB
                           Worker 1:  Sort Method: quicksort  Memory: 434kB
                           Worker 2:  Sort Method: quicksort  Memory: 434kB
                           Worker 3:  Sort Method: quicksort  Memory: 434kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146314.81 rows=7214 width=15) (actual time=0.855..790.061 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.067..0.067 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 12.988 ms
 Execution Time: 1876.003 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147777.59..161169.30 rows=1 width=27) (actual time=415.447..416.599 rows=1 loops=1)
   ->  GroupAggregate  (cost=147777.59..241519.53 rows=7 width=27) (actual time=415.446..416.597 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147777.59..241014.52 rows=28854 width=27) (actual time=368.787..412.085 rows=15492 loops=1)
               ->  Gather Merge  (cost=147777.16..151231.99 rows=28854 width=15) (actual time=368.750..373.312 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146777.10..146795.14 rows=7214 width=15) (actual time=364.768..365.001 rows=4227 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 495kB
                           Worker 0:  Sort Method: quicksort  Memory: 397kB
                           Worker 1:  Sort Method: quicksort  Memory: 466kB
                           Worker 2:  Sort Method: quicksort  Memory: 245kB
                           Worker 3:  Sort Method: quicksort  Memory: 472kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146314.81 rows=7214 width=15) (actual time=0.082..363.261 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.837 ms
 Execution Time: 416.657 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64586.97..64586.97 rows=1 width=16) (actual time=1450.261..1450.264 rows=1 loops=1)
   ->  Sort  (cost=64586.97..64587.47 rows=200 width=16) (actual time=1450.259..1450.262 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64583.97..64585.97 rows=200 width=16) (actual time=1450.234..1450.242 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60833.97..62333.97 rows=150000 width=12) (actual time=1411.172..1433.436 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53485.49 rows=1469697 width=8) (actual time=42.763..1063.174 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.625..629.671 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=41.690..41.691 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..18.067 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 12.705 ms
 Execution Time: 1451.340 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64586.97..64586.97 rows=1 width=16) (actual time=1262.693..1262.696 rows=1 loops=1)
   ->  Sort  (cost=64586.97..64587.47 rows=200 width=16) (actual time=1262.692..1262.694 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64583.97..64585.97 rows=200 width=16) (actual time=1262.667..1262.674 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60833.97..62333.97 rows=150000 width=12) (actual time=1223.880..1245.647 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53485.49 rows=1469697 width=8) (actual time=39.473..893.716 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469697 width=8) (actual time=0.012..485.466 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=39.120..39.120 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..16.027 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.744 ms
 Execution Time: 1263.810 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71869.20..71869.21 rows=1 width=32) (actual time=545.672..551.263 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=71869.20..71869.21 rows=1 width=32) (actual time=545.671..551.261 rows=1 loops=1)
         ->  Gather  (cost=71868.74..71869.15 rows=4 width=64) (actual time=544.768..551.244 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=70868.74..70868.75 rows=1 width=64) (actual time=532.952..532.954 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7137.09..70551.74 rows=18114 width=33) (actual time=52.354..517.051 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1163.10..64530.20 rows=18114 width=16) (actual time=20.950..469.414 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8179
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1144.98 rows=72455 width=0) (actual time=13.817..13.817 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=30.975..30.976 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.072..15.240 rows=40000 loops=5)
 Planning Time: 16.490 ms
 Execution Time: 551.309 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71869.20..71869.21 rows=1 width=32) (actual time=107.359..113.820 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=71869.20..71869.21 rows=1 width=32) (actual time=107.358..113.818 rows=1 loops=1)
         ->  Gather  (cost=71868.74..71869.15 rows=4 width=64) (actual time=104.162..113.795 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=70868.74..70868.75 rows=1 width=64) (actual time=100.573..100.576 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7137.09..70551.74 rows=18114 width=33) (actual time=38.663..93.256 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1163.10..64530.20 rows=18114 width=16) (actual time=15.153..61.962 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8933
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1144.98 rows=72455 width=0) (actual time=8.648..8.648 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.149..23.150 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..7.618 rows=40000 loops=5)
 Planning Time: 0.789 ms
 Execution Time: 113.859 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241410.56..241517.96 rows=1 width=103) (actual time=1293.233..1300.352 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122045.44..122045.45 rows=1 width=32) (actual time=236.978..236.980 rows=1 loops=1)
           ->  HashAggregate  (cost=121795.17..121920.31 rows=10011 width=36) (actual time=233.623..236.417 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3609.77..119544.11 rows=225106 width=16) (actual time=30.180..122.106 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3553.49 rows=225106 width=0) (actual time=19.376..19.377 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119365.10..124735.09 rows=50 width=103) (actual time=1293.231..1300.347 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119364.82..124609.97 rows=50 width=36) (actual time=1292.616..1299.730 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119364.82..124159.47 rows=40044 width=36) (actual time=1030.674..1045.231 rows=41775 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118364.76..118389.79 rows=10011 width=36) (actual time=1019.800..1020.654 rows=8782 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1311kB
                           Worker 0:  Sort Method: quicksort  Memory: 1311kB
                           Worker 1:  Sort Method: quicksort  Memory: 1312kB
                           Worker 2:  Sort Method: quicksort  Memory: 1313kB
                           Worker 3:  Sort Method: quicksort  Memory: 1310kB
                           ->  Partial HashAggregate  (cost=117574.43..117699.56 rows=10011 width=36) (actual time=1012.460..1017.146 rows=9886 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3609.77..117011.67 rows=56276 width=16) (actual time=41.660..959.959 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12817
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3553.49 rows=225106 width=0) (actual time=37.594..37.594 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.610..0.610 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.304 ms
 Execution Time: 1301.033 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241410.56..241517.96 rows=1 width=103) (actual time=413.441..424.679 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122045.44..122045.45 rows=1 width=32) (actual time=221.844..221.845 rows=1 loops=1)
           ->  HashAggregate  (cost=121795.17..121920.31 rows=10011 width=36) (actual time=218.513..221.282 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3609.77..119544.11 rows=225106 width=16) (actual time=30.118..108.759 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3553.49 rows=225106 width=0) (actual time=19.410..19.410 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119365.10..124735.09 rows=50 width=103) (actual time=413.441..424.676 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119364.82..124609.97 rows=50 width=36) (actual time=413.418..424.652 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119364.82..124159.47 rows=40044 width=36) (actual time=167.077..185.744 rows=41690 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118364.76..118389.79 rows=10011 width=36) (actual time=159.230..160.053 rows=8850 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1309kB
                           Worker 0:  Sort Method: quicksort  Memory: 1300kB
                           Worker 1:  Sort Method: quicksort  Memory: 1306kB
                           Worker 2:  Sort Method: quicksort  Memory: 1315kB
                           Worker 3:  Sort Method: quicksort  Memory: 1317kB
                           ->  Partial HashAggregate  (cost=117574.43..117699.56 rows=10011 width=36) (actual time=151.968..156.592 rows=9867 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3609.77..117011.67 rows=56276 width=16) (actual time=33.567..115.248 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13338
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3553.49 rows=225106 width=0) (actual time=27.312..27.312 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.019..0.019 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.798 ms
 Execution Time: 425.060 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26727.17..26727.18 rows=1 width=44) (actual time=294.447..295.253 rows=1 loops=1)
   ->  Sort  (cost=26727.17..26767.17 rows=16000 width=44) (actual time=294.445..295.251 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18772.38..26647.17 rows=16000 width=44) (actual time=215.795..292.041 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18772.38..25892.51 rows=59466 width=40) (actual time=215.776..270.663 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17772.32..17809.48 rows=14866 width=40) (actual time=191.966..193.428 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2389kB
                           Worker 0:  Sort Method: quicksort  Memory: 2283kB
                           Worker 1:  Sort Method: quicksort  Memory: 2465kB
                           Worker 2:  Sort Method: quicksort  Memory: 2354kB
                           Worker 3:  Sort Method: quicksort  Memory: 2233kB
                           ->  Parallel Hash Join  (cost=6685.62..16742.12 rows=14866 width=40) (actual time=41.301..114.769 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.291..62.844 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.371..6.500 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12389 width=40) (actual time=33.811..33.812 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2496kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12389 width=40) (actual time=0.168..30.639 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 14.972 ms
 Execution Time: 295.342 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26727.17..26727.18 rows=1 width=44) (actual time=258.580..259.026 rows=1 loops=1)
   ->  Sort  (cost=26727.17..26767.17 rows=16000 width=44) (actual time=258.579..259.024 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18772.38..26647.17 rows=16000 width=44) (actual time=179.637..255.833 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18772.38..25892.51 rows=59466 width=40) (actual time=179.623..234.462 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17772.32..17809.48 rows=14866 width=40) (actual time=152.377..153.867 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2554kB
                           Worker 0:  Sort Method: quicksort  Memory: 2260kB
                           Worker 1:  Sort Method: quicksort  Memory: 2287kB
                           Worker 2:  Sort Method: quicksort  Memory: 2339kB
                           Worker 3:  Sort Method: quicksort  Memory: 2285kB
                           ->  Parallel Hash Join  (cost=6685.62..16742.12 rows=14866 width=40) (actual time=19.288..76.492 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.898..42.888 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.086..2.417 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12389 width=40) (actual time=16.206..16.207 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12389 width=40) (actual time=0.013..12.923 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.816 ms
 Execution Time: 259.084 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217708.93..217708.94 rows=1 width=32) (actual time=4316.867..4320.966 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217708.93..217708.94 rows=1 width=32) (actual time=4316.865..4320.963 rows=1 loops=1)
         ->  Gather  (cost=217708.71..217708.92 rows=2 width=32) (actual time=4310.915..4320.950 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216708.71..216708.72 rows=1 width=32) (actual time=4301.756..4301.759 rows=1 loops=3)
                     ->  Nested Loop  (cost=207844.32..216706.65 rows=823 width=8) (actual time=4230.912..4301.676 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207843.89..213193.11 rows=82 width=40) (actual time=4230.560..4256.631 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=86 width=4) (actual time=0.491..26.464 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205447.95..205447.95 rows=191675 width=36) (actual time=4229.620..4229.620 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202572.83..205447.95 rows=191675 width=36) (actual time=3717.630..4192.763 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172568.55 rows=6000855 width=9) (actual time=0.212..1014.148 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.491..0.647 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 13.227 ms
 Execution Time: 4328.370 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217708.93..217708.94 rows=1 width=32) (actual time=3957.681..3960.762 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217708.93..217708.94 rows=1 width=32) (actual time=3957.679..3960.759 rows=1 loops=1)
         ->  Gather  (cost=217708.71..217708.92 rows=2 width=32) (actual time=3951.728..3960.746 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216708.71..216708.72 rows=1 width=32) (actual time=3948.027..3948.030 rows=1 loops=3)
                     ->  Nested Loop  (cost=207844.32..216706.65 rows=823 width=8) (actual time=3937.142..3947.991 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207843.89..213193.11 rows=82 width=40) (actual time=3937.103..3946.397 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=86 width=4) (actual time=0.073..9.328 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205447.95..205447.95 rows=191675 width=36) (actual time=3936.576..3936.577 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202572.83..205447.95 rows=191675 width=36) (actual time=3424.785..3899.770 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172568.55 rows=6000855 width=9) (actual time=0.055..742.936 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.009..0.022 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 1.144 ms
 Execution Time: 3967.362 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794671.54..794671.79 rows=100 width=71) (actual time=4464.071..4464.077 rows=9 loops=1)
   ->  Sort  (cost=794671.54..799672.97 rows=2000569 width=71) (actual time=4464.069..4464.074 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658037.87..718211.23 rows=2000569 width=71) (actual time=4463.328..4464.027 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335198.25..550272.84 rows=2000569 width=44) (actual time=3699.689..4463.251 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172568.55 rows=6000855 width=9) (actual time=0.702..332.221 rows=6001215 loops=1)
                     ->  Hash  (cost=328947.36..328947.36 rows=500071 width=43) (actual time=3495.138..3495.142 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282566.13..328947.36 rows=500071 width=43) (actual time=3146.935..3495.116 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275594.13..320662.64 rows=500071 width=24) (actual time=3078.801..3426.973 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.775..268.768 rows=1500000 loops=1)
                                       ->  Hash  (cost=269343.24..269343.24 rows=500071 width=4) (actual time=2981.434..2981.435 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269343.24 rows=500071 width=4) (actual time=636.805..2981.411 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216835.76 rows=6000855 width=9) (actual time=0.016..1619.456 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.817..67.817 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.536..41.785 rows=150000 loops=1)
 Planning Time: 18.108 ms
 Execution Time: 4465.434 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794671.54..794671.79 rows=100 width=71) (actual time=3423.077..3423.083 rows=9 loops=1)
   ->  Sort  (cost=794671.54..799672.97 rows=2000569 width=71) (actual time=3423.076..3423.081 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658037.87..718211.23 rows=2000569 width=71) (actual time=3422.331..3423.032 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335198.25..550272.84 rows=2000569 width=44) (actual time=2654.216..3422.256 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172568.55 rows=6000855 width=9) (actual time=0.015..332.476 rows=6001215 loops=1)
                     ->  Hash  (cost=328947.36..328947.36 rows=500071 width=43) (actual time=2449.035..2449.038 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282566.13..328947.36 rows=500071 width=43) (actual time=2235.205..2448.816 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275594.13..320662.64 rows=500071 width=24) (actual time=2189.998..2403.599 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..90.909 rows=1500000 loops=1)
                                       ->  Hash  (cost=269343.24..269343.24 rows=500071 width=4) (actual time=2132.250..2132.252 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269343.24 rows=500071 width=4) (actual time=452.264..2132.235 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216835.76 rows=6000855 width=9) (actual time=0.014..844.690 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.875..44.875 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.010..19.620 rows=150000 loops=1)
 Planning Time: 1.351 ms
 Execution Time: 3424.242 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18300.38..18300.39 rows=1 width=32) (actual time=844.691..845.714 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18300.38..18300.39 rows=1 width=32) (actual time=844.690..845.712 rows=1 loops=1)
         ->  Gather  (cost=18300.16..18300.37 rows=2 width=32) (actual time=844.678..845.703 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17300.16..17300.17 rows=1 width=32) (actual time=835.271..835.272 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17299.80 rows=48 width=12) (actual time=19.532..835.159 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=201 width=30) (actual time=0.541..28.122 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.05 rows=1 width=21) (actual time=4.257..4.774 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 15.144 ms
 Execution Time: 846.347 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18300.38..18300.39 rows=1 width=32) (actual time=29.064..32.949 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18300.38..18300.39 rows=1 width=32) (actual time=29.062..32.947 rows=1 loops=1)
         ->  Gather  (cost=18300.16..18300.37 rows=2 width=32) (actual time=28.944..32.938 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17300.16..17300.17 rows=1 width=32) (actual time=26.594..26.594 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17299.80 rows=48 width=12) (actual time=0.418..26.556 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=201 width=30) (actual time=0.106..17.430 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.05 rows=1 width=21) (actual time=0.048..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.041 ms
 Execution Time: 32.996 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=211163.44..211163.45 rows=1 width=51) (actual time=4015.035..4015.123 rows=1 loops=1)
   ->  Sort  (cost=211163.44..211163.45 rows=1 width=51) (actual time=4015.033..4015.120 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186167.88..211163.43 rows=1 width=51) (actual time=3845.571..4014.889 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.566..3.749 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.272..0.276 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.289..2.718 rows=10000 loops=1)
               ->  Materialize  (cost=186167.88..210708.12 rows=1 width=8) (actual time=6.485..8.927 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186167.88..210708.12 rows=1 width=8) (actual time=2840.608..3839.954 rows=5898 loops=1)
                           ->  Hash Join  (cost=186167.46..203709.16 rows=4911 width=44) (actual time=2840.146..3372.126 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179799.54..196064.96 rows=486195 width=40) (actual time=2804.536..3292.618 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14732.47..141074.23 rows=918784 width=13) (actual time=129.152..2188.760 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14502.77 rows=918784 width=0) (actual time=109.222..109.222 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=35.588..35.672 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=1.982..35.186 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.140..25.330 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.078..0.078 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.488 ms
 Execution Time: 4019.749 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=211163.44..211163.45 rows=1 width=51) (actual time=1401.499..1401.588 rows=1 loops=1)
   ->  Sort  (cost=211163.44..211163.45 rows=1 width=51) (actual time=1401.497..1401.586 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186167.88..211163.43 rows=1 width=51) (actual time=1233.922..1401.402 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.603 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.701 rows=10000 loops=1)
               ->  Materialize  (cost=186167.88..210708.12 rows=1 width=8) (actual time=1.622..2.967 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186167.88..210708.12 rows=1 width=8) (actual time=710.325..1230.743 rows=5898 loops=1)
                           ->  Hash Join  (cost=186167.46..203709.16 rows=4911 width=44) (actual time=710.306..1208.837 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179799.54..196064.96 rows=486195 width=40) (actual time=698.827..1159.144 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14732.47..141074.23 rows=918784 width=13) (actual time=96.228..310.303 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14502.77 rows=918784 width=0) (actual time=76.984..76.984 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.459..11.545 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.335..11.240 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.048..8.821 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.735 ms
 Execution Time: 1405.946 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194111.32..194111.32 rows=1 width=34) (actual time=1484.393..1484.510 rows=100 loops=1)
   ->  Sort  (cost=194111.32..194111.32 rows=1 width=34) (actual time=1484.391..1484.503 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194111.29..194111.31 rows=1 width=34) (actual time=1483.383..1484.096 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194111.29..194111.29 rows=1 width=26) (actual time=1483.374..1483.648 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194111.28 rows=1 width=26) (actual time=12.611..1470.726 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194107.89 rows=1 width=38) (actual time=12.279..1390.774 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194104.57 rows=1 width=34) (actual time=9.830..21.528 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193104.47 rows=1 width=34) (actual time=2.581..603.039 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133621.82 rows=19981 width=34) (actual time=1.827..501.752 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131312.67 rows=500071 width=8) (actual time=0.182..434.873 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.553..1.555 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.428..1.483 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.122..0.124 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.302..1.305 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.218..0.218 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.095..0.095 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.275 ms
 Execution Time: 1485.083 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194111.32..194111.32 rows=1 width=34) (actual time=484.314..484.427 rows=100 loops=1)
   ->  Sort  (cost=194111.32..194111.32 rows=1 width=34) (actual time=484.313..484.419 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194111.29..194111.31 rows=1 width=34) (actual time=483.302..484.011 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194111.29..194111.29 rows=1 width=26) (actual time=483.290..483.560 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194111.28 rows=1 width=26) (actual time=0.967..470.494 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194107.89 rows=1 width=38) (actual time=0.962..449.678 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194104.57 rows=1 width=34) (actual time=0.949..400.678 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193104.47 rows=1 width=34) (actual time=0.633..449.235 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133621.82 rows=19981 width=34) (actual time=0.532..355.023 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131312.67 rows=500071 width=8) (actual time=0.031..270.870 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.403..0.405 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.059..0.344 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.047..0.286 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.027..0.027 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.419 ms
 Execution Time: 484.735 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.19 rows=1 width=72) (actual time=157.541..159.469 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=43.965..44.049 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=43.842..44.039 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=36.166..36.167 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.172..34.809 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.58 rows=735 width=72) (actual time=157.540..159.383 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7441.21 rows=735 width=38) (actual time=69.657..158.801 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=69.123..72.368 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.615..22.763 rows=1531 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 577kB
                           Worker 0:  Sort Method: quicksort  Memory: 520kB
                           Worker 1:  Sort Method: quicksort  Memory: 524kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..20.627 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.031..0.031 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 12.799 ms
 Execution Time: 160.191 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.19 rows=1 width=72) (actual time=60.878..62.522 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=29.823..29.903 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=29.704..29.894 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=27.515..27.516 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.012..26.316 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.58 rows=735 width=72) (actual time=60.877..62.439 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7441.21 rows=735 width=38) (actual time=54.686..62.178 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=54.636..56.863 rows=2736 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.944..22.022 rows=1526 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 600kB
                           Worker 0:  Sort Method: quicksort  Memory: 504kB
                           Worker 1:  Sort Method: quicksort  Memory: 517kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..19.977 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.824 ms
 Execution Time: 62.581 ms
(30 rows)

