query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906654.68..1906655.36 rows=1 width=236) (actual time=21425.506..21425.587 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906654.68..1906658.74 rows=6 width=236) (actual time=21425.505..21425.585 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906654.68..1906657.55 rows=24 width=236) (actual time=21425.471..21425.554 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905654.62..1905654.64 rows=6 width=236) (actual time=21415.719..21415.721 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905654.38..1905654.55 rows=6 width=236) (actual time=21415.693..21415.701 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312613.50 rows=14826022 width=25) (actual time=0.329..5548.623 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 13.739 ms
 Execution Time: 21427.415 ms
(20 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906654.68..1906655.36 rows=1 width=236) (actual time=19322.052..19322.118 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906654.68..1906658.74 rows=6 width=236) (actual time=19322.051..19322.116 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906654.68..1906657.55 rows=24 width=236) (actual time=19322.027..19322.094 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905654.62..1905654.64 rows=6 width=236) (actual time=19317.795..19317.796 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905654.38..1905654.55 rows=6 width=236) (actual time=19317.770..19317.777 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312613.50 rows=14826022 width=25) (actual time=0.029..2907.871 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 0.518 ms
 Execution Time: 19322.190 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1052622.62..1052622.63 rows=1 width=193) (actual time=4534.315..4534.431 rows=100 loops=1)
   ->  Sort  (cost=1052622.62..1052622.63 rows=1 width=193) (actual time=4534.314..4534.424 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=559112.64..1052622.61 rows=1 width=193) (actual time=3181.008..4531.245 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68642.80 rows=7805 width=30) (actual time=11.863..16.060 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66713.09 rows=1951 width=30) (actual time=1.752..294.718 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=558112.05..566113.56 rows=1600301 width=173) (actual time=3168.205..3626.466 rows=1603828 loops=1)
                     ->  Sort  (cost=558112.05..562112.81 rows=1600301 width=173) (actual time=3168.202..3475.946 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305294.24 rows=1600301 width=173) (actual time=53.325..2494.937 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255237.07 rows=8001507 width=14) (actual time=1.175..1087.741 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=167) (actual time=51.893..51.895 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=167) (actual time=2.408..45.293 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=1.625..31.929 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.774..0.776 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.762..0.772 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.560..0.563 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.193..0.194 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.188..0.190 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.110..0.110 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.099..0.108 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.094..0.106 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.093..0.104 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.089..0.091 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 21.123 ms
 Execution Time: 4570.645 ms
(56 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1052622.62..1052622.63 rows=1 width=193) (actual time=3448.827..3448.951 rows=100 loops=1)
   ->  Sort  (cost=1052622.62..1052622.63 rows=1 width=193) (actual time=3448.826..3448.944 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=559112.64..1052622.61 rows=1 width=193) (actual time=2721.698..3446.748 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68642.80 rows=7805 width=30) (actual time=3.678..6.440 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66713.09 rows=1951 width=30) (actual time=0.108..117.784 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=558112.05..566113.56 rows=1600301 width=173) (actual time=2717.929..3160.275 rows=1603828 loops=1)
                     ->  Sort  (cost=558112.05..562112.81 rows=1600301 width=173) (actual time=2717.925..3012.167 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305294.24 rows=1600301 width=173) (actual time=49.073..2060.391 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255237.07 rows=8001507 width=14) (actual time=0.043..764.926 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=167) (actual time=48.787..48.790 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=167) (actual time=0.049..38.086 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.013..7.521 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.031..0.033 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.025..0.031 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.009..0.015 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.003..0.003 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 1.700 ms
 Execution Time: 3485.289 ms
(56 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2271793.35..2271793.37 rows=10 width=44) (actual time=14409.854..14447.544 rows=10 loops=1)
   ->  Sort  (cost=2271793.35..2279505.33 rows=3084792 width=44) (actual time=14409.853..14447.541 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1737447.90..2205132.10 rows=3084792 width=44) (actual time=14242.849..14424.700 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1737447.90..2128012.30 rows=3084792 width=44) (actual time=14242.832..14345.606 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1736447.84..1759583.78 rows=771198 width=44) (actual time=14233.165..14270.140 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1736447.84..1738375.83 rows=771198 width=24) (actual time=14233.153..14236.030 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6260kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6292kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6203kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6179kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6305kB
                                 ->  Nested Loop  (cost=41558.05..1650869.49 rows=771198 width=24) (actual time=304.460..14209.254 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41557.48..354450.51 rows=356744 width=12) (actual time=301.426..2087.892 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308139.45 rows=1810883 width=16) (actual time=0.468..1297.131 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.12..40634.12 rows=73869 width=4) (actual time=300.241..300.241 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.12 rows=73869 width=4) (actual time=0.111..282.168 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.041..0.041 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 22.717 ms
 Execution Time: 14448.351 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2271793.35..2271793.37 rows=10 width=44) (actual time=4095.060..4149.944 rows=10 loops=1)
   ->  Sort  (cost=2271793.35..2279505.33 rows=3084792 width=44) (actual time=4095.059..4149.942 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1737447.90..2205132.10 rows=3084792 width=44) (actual time=3933.348..4127.272 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1737447.90..2128012.30 rows=3084792 width=44) (actual time=3933.339..4048.081 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1736447.84..1759583.78 rows=771198 width=44) (actual time=3921.765..3958.410 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1736447.84..1738375.83 rows=771198 width=24) (actual time=3921.752..3924.574 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6246kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6420kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6002kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6340kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6231kB
                                 ->  Nested Loop  (cost=41558.05..1650869.49 rows=771198 width=24) (actual time=134.139..3902.188 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41557.48..354450.51 rows=356744 width=12) (actual time=133.802..1065.639 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308139.45 rows=1810883 width=16) (actual time=0.258..490.587 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.12..40634.12 rows=73869 width=4) (actual time=132.835..132.836 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.12 rows=73869 width=4) (actual time=0.024..111.589 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.009..0.009 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 1.751 ms
 Execution Time: 4150.017 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=728050.38..728050.89 rows=1 width=24) (actual time=21006.165..21051.263 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=728050.38..728052.93 rows=5 width=24) (actual time=21006.164..21051.261 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=728050.38..728052.78 rows=20 width=24) (actual time=21006.156..21051.255 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=727050.32..727050.34 rows=5 width=24) (actual time=20994.298..20994.299 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=727050.22..727050.27 rows=5 width=24) (actual time=20994.276..20994.278 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=8200.69..726336.78 rows=142688 width=16) (actual time=152.571..20915.881 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=8200.12..271608.62 rows=142700 width=20) (actual time=150.498..2116.264 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=46487
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8057.43 rows=570799 width=0) (actual time=106.391..106.391 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.167..0.167 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 19.398 ms
 Execution Time: 21052.952 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=728050.38..728050.89 rows=1 width=24) (actual time=2143.322..2186.152 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=728050.38..728052.93 rows=5 width=24) (actual time=2143.321..2186.151 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=728050.38..728052.78 rows=20 width=24) (actual time=2141.044..2186.142 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=727050.32..727050.34 rows=5 width=24) (actual time=2136.370..2136.372 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=727050.22..727050.27 rows=5 width=24) (actual time=2136.349..2136.350 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=8200.69..726336.78 rows=142688 width=16) (actual time=149.379..2094.048 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=8200.12..271608.62 rows=142700 width=20) (actual time=149.308..540.756 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=38872
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8057.43 rows=570799 width=0) (actual time=99.948..99.948 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 1.157 ms
 Execution Time: 2186.240 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=774420.29..774420.29 rows=1 width=58) (actual time=22705.406..22756.303 rows=1 loops=1)
   ->  Sort  (cost=774420.29..774420.35 rows=25 width=58) (actual time=22705.404..22756.300 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=774177.83..774420.17 rows=25 width=58) (actual time=22697.517..22756.284 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=774177.83..774419.10 rows=100 width=58) (actual time=22696.149..22756.253 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=773177.77..773407.13 rows=25 width=58) (actual time=22680.363..22686.079 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=773177.77..773223.58 rows=18324 width=38) (actual time=22678.485..22679.183 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1521kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1504kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1495kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1529kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1501kB
                                 ->  Parallel Hash Join  (cost=79418.00..771880.30 rows=18324 width=38) (actual time=650.104..22664.822 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75726.40..765781.51 rows=458513 width=50) (actual time=629.716..22486.516 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=75725.84..348027.70 rows=114638 width=38) (actual time=628.414..2661.580 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32933.13..302798.95 rows=573188 width=8) (actual time=342.699..2150.804 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52046
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32359.95 rows=2292751 width=0) (actual time=281.708..281.708 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.28..41855.28 rows=74994 width=38) (actual time=284.993..284.996 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.28 rows=74994 width=38) (actual time=1.104..258.012 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=8) (actual time=0.705..219.163 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.384..0.386 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.378..0.384 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.242..0.243 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.129..0.129 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.126..0.127 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.206..0.217 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.138..17.138 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.096..11.212 rows=20000 loops=5)
 Planning Time: 26.742 ms
 Execution Time: 22757.280 ms
(50 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=774420.29..774420.29 rows=1 width=58) (actual time=2784.073..2832.388 rows=1 loops=1)
   ->  Sort  (cost=774420.29..774420.35 rows=25 width=58) (actual time=2784.071..2832.386 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=774177.83..774420.17 rows=25 width=58) (actual time=2774.348..2832.367 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=774177.83..774419.10 rows=100 width=58) (actual time=2772.824..2832.328 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=773177.77..773407.13 rows=25 width=58) (actual time=2762.554..2769.025 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=773177.77..773223.58 rows=18324 width=38) (actual time=2761.321..2761.999 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1611kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1452kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1519kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1450kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1519kB
                                 ->  Parallel Hash Join  (cost=79418.00..771880.30 rows=18324 width=38) (actual time=496.104..2753.355 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75726.40..765781.51 rows=458513 width=50) (actual time=477.903..2613.016 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=75725.84..348027.70 rows=114638 width=38) (actual time=477.854..1100.379 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32933.13..302798.95 rows=573188 width=8) (actual time=316.029..763.337 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=57030
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32359.95 rows=2292751 width=0) (actual time=256.158..256.159 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.28..41855.28 rows=74994 width=38) (actual time=161.274..161.277 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.28 rows=74994 width=38) (actual time=0.074..128.632 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=8) (actual time=0.031..86.760 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.034..0.036 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.028..0.034 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.013 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.015..0.016 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.196..17.196 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.023..7.659 rows=20000 loops=5)
 Planning Time: 3.802 ms
 Execution Time: 2832.700 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1277790.59..1277790.60 rows=1 width=32) (actual time=10793.703..10839.591 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1277790.59..1277790.60 rows=1 width=32) (actual time=10793.701..10839.588 rows=1 loops=1)
         ->  Gather  (cost=1277790.16..1277790.57 rows=4 width=32) (actual time=10788.999..10839.571 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1276790.16..1276790.17 rows=1 width=32) (actual time=10781.705..10781.706 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=210970.54..1275318.45 rows=294341 width=12) (actual time=1323.375..10638.731 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=79809 lossy=54235
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..210676.20 rows=1177363 width=0) (actual time=1231.364..1231.365 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 13.656 ms
 Execution Time: 10840.339 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1277790.59..1277790.60 rows=1 width=32) (actual time=3195.365..3242.926 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1277790.59..1277790.60 rows=1 width=32) (actual time=3195.364..3242.923 rows=1 loops=1)
         ->  Gather  (cost=1277790.16..1277790.57 rows=4 width=32) (actual time=3193.718..3242.913 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1276790.16..1276790.17 rows=1 width=32) (actual time=3189.358..3189.359 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=210970.54..1275318.45 rows=294341 width=12) (actual time=1184.114..3086.595 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=80941 lossy=55085
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..210676.20 rows=1177363 width=0) (actual time=1090.230..1090.231 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.735 ms
 Execution Time: 3242.968 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1451823.73..1451824.32 rows=1 width=92) (actual time=14712.477..14758.566 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1451823.73..1457727.74 rows=10044 width=92) (actual time=14712.475..14758.564 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1451823.73..1457049.77 rows=40176 width=92) (actual time=14710.113..14758.552 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1450823.68..1451264.36 rows=10044 width=92) (actual time=14695.785..14699.852 rows=3 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1450823.68..1450861.52 rows=15138 width=72) (actual time=14694.265..14694.834 rows=9850 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2009kB
                           Worker 0:  Sort Method: quicksort  Memory: 2017kB
                           Worker 1:  Sort Method: quicksort  Memory: 2018kB
                           Worker 2:  Sort Method: quicksort  Memory: 2009kB
                           Worker 3:  Sort Method: quicksort  Memory: 1996kB
                           ->  Parallel Hash Join  (cost=44274.85..1449772.65 rows=15138 width=72) (actual time=269.361..14681.842 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41224.80..1444939.41 rows=364032 width=46) (actual time=253.216..14552.920 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.23..354800.78 rows=299977 width=30) (actual time=251.317..2124.118 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298765.16 rows=3749716 width=8) (actual time=0.877..997.354 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.26..40849.26 rows=29998 width=30) (actual time=250.173..250.175 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                   ->  Hash Join  (cost=1.40..40849.26 rows=29998 width=30) (actual time=0.706..241.337 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=8) (actual time=0.672..207.731 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.022..0.023 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.015..0.019 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.051..0.052 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=12.558..12.560 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 608kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.201..12.004 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.145..9.866 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.049..0.049 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.045..0.047 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 29.688 ms
 Execution Time: 14759.424 ms
(49 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1451823.73..1451824.32 rows=1 width=92) (actual time=4150.641..4191.541 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1451823.73..1457727.74 rows=10044 width=92) (actual time=4150.640..4191.539 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1451823.73..1457049.77 rows=40176 width=92) (actual time=4148.999..4191.530 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1450823.68..1451264.36 rows=10044 width=92) (actual time=4138.242..4142.583 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1450823.68..1450861.52 rows=15138 width=72) (actual time=4135.098..4135.659 rows=10356 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2062kB
                           Worker 0:  Sort Method: quicksort  Memory: 1927kB
                           Worker 1:  Sort Method: quicksort  Memory: 2033kB
                           Worker 2:  Sort Method: quicksort  Memory: 2007kB
                           Worker 3:  Sort Method: quicksort  Memory: 2021kB
                           ->  Parallel Hash Join  (cost=44274.85..1449772.65 rows=15138 width=72) (actual time=151.153..4125.869 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41224.80..1444939.41 rows=364032 width=46) (actual time=138.340..4016.013 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.23..354800.78 rows=299977 width=30) (actual time=138.277..1309.671 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298765.16 rows=3749716 width=8) (actual time=0.029..378.846 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.26..40849.26 rows=29998 width=30) (actual time=137.868..137.870 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8640kB
                                                   ->  Hash Join  (cost=1.40..40849.26 rows=29998 width=30) (actual time=0.050..125.476 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=8) (actual time=0.030..89.045 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.010..0.011 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=11.475..11.476 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.052..11.006 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.023..8.263 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.020..0.022 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.106 ms
 Execution Time: 4191.633 ms
(49 rows)

query 8 run 1
SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=570245.48..570245.78 rows=1 width=40) (actual time=30869.219..30913.520 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=570245.48..570958.02 rows=2406 width=40) (actual time=30869.218..30913.519 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=570245.48..570873.81 rows=2406 width=72) (actual time=30866.627..30913.510 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=569245.47..569603.13 rows=2406 width=72) (actual time=30861.893..30864.474 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=569245.47..569279.87 rows=13757 width=46) (actual time=30859.351..30859.816 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1312kB
                           Worker 0:  Sort Method: quicksort  Memory: 1320kB
                           ->  Hash Join  (cost=565124.59..568299.83 rows=13757 width=46) (actual time=30833.050..30856.982 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=565123.03..568187.25 rows=13757 width=20) (actual time=30832.217..30853.030 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.178..10.942 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=565049.89..565049.89 rows=5851 width=20) (actual time=30831.637..30831.642 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=523705.71..565049.89 rows=5851 width=20) (actual time=30453.446..30827.629 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=523703.20..564879.17 rows=29255 width=24) (actual time=30453.234..30821.055 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=8) (actual time=1.105..206.792 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=523337.51..523337.51 rows=29255 width=24) (actual time=30451.662..30451.664 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8256kB
                                                               ->  Parallel Hash Join  (cost=201541.88..523337.51 rows=29255 width=24) (actual time=28209.832..30425.036 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317513.74 rows=1122331 width=12) (actual time=0.371..1731.352 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=200320.11..200320.11 rows=97742 width=20) (actual time=28207.995..28207.996 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..200320.11 rows=97742 width=20) (actual time=0.985..28013.830 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47231.24 rows=3334 width=4) (actual time=0.499..316.569 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.63 rows=29 width=24) (actual time=0.315..4.237 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.192..0.194 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.188..0.193 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.182..0.182 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.179..0.180 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.099..0.100 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.091..0.094 rows=25 loops=2)
 Planning Time: 33.291 ms
 Execution Time: 30914.260 ms
(54 rows)

SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=570245.48..570245.78 rows=1 width=40) (actual time=3003.927..3049.246 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=570245.48..570958.02 rows=2406 width=40) (actual time=3003.926..3049.244 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=570245.48..570873.81 rows=2406 width=72) (actual time=3001.296..3049.234 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=569245.47..569603.13 rows=2406 width=72) (actual time=2999.016..3001.974 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=569245.47..569279.87 rows=13757 width=46) (actual time=2996.438..2997.283 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1328kB
                           Worker 0:  Sort Method: quicksort  Memory: 1304kB
                           ->  Hash Join  (cost=565124.59..568299.83 rows=13757 width=46) (actual time=2975.213..2994.550 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=565123.03..568187.25 rows=13757 width=20) (actual time=2975.165..2991.423 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.018..6.928 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=565049.89..565049.89 rows=5851 width=20) (actual time=2974.743..2975.125 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=523705.71..565049.89 rows=5851 width=20) (actual time=2709.636..2971.498 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=523703.20..564879.17 rows=29255 width=24) (actual time=2709.596..2965.380 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=8) (actual time=0.030..103.866 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=523337.51..523337.51 rows=29255 width=24) (actual time=2709.118..2709.496 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8224kB
                                                               ->  Parallel Hash Join  (cost=201541.88..523337.51 rows=29255 width=24) (actual time=1282.743..2687.379 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317513.74 rows=1122331 width=12) (actual time=0.030..958.683 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=200320.11..200320.11 rows=97742 width=20) (actual time=1281.468..1281.469 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..200320.11 rows=97742 width=20) (actual time=0.111..1198.309 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47231.24 rows=3334 width=4) (actual time=0.064..175.884 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.63 rows=29 width=24) (actual time=0.012..0.150 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.017..0.019 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.013..0.017 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.020 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=2)
 Planning Time: 4.032 ms
 Execution Time: 3049.339 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=664042.92..664043.46 rows=1 width=66) (actual time=34287.542..34694.568 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=664042.92..696309.70 rows=60150 width=66) (actual time=34287.541..34694.566 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=664042.92..692851.07 rows=240600 width=66) (actual time=34287.521..34694.548 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=663042.86..663193.24 rows=60150 width=66) (actual time=34275.190..34275.371 rows=140 loops=5)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     Worker 3:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=657215.45..658268.07 rows=60150 width=66) (actual time=34274.233..34275.182 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=331927.34..649446.43 rows=443944 width=57) (actual time=32331.010..33618.394 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=331925.77..645862.23 rows=443944 width=31) (actual time=32330.909..33380.825 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298765.16 rows=3749716 width=8) (actual time=0.722..1951.043 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=326376.47..326376.47 rows=443944 width=31) (actual time=29647.462..29647.466 rows=649638 loops=5)
                                             Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 18464kB
                                             ->  Nested Loop  (cost=3545.53..326376.47 rows=443944 width=31) (actual time=21.757..29059.475 rows=649638 loops=5)
                                                   Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                                   ->  Parallel Hash Join  (cost=3544.97..109990.63 rows=60617 width=26) (actual time=20.652..1915.221 rows=86650 loops=5)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.43..106286.97 rows=60617 width=18) (actual time=0.919..1816.128 rows=86650 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47231.24 rows=15152 width=4) (actual time=0.511..176.174 rows=21662 loops=5)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 378338
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.72 rows=18 width=14) (actual time=0.071..0.074 rows=4 loops=108312)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=19.485..19.485 rows=20000 loops=5)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.372..13.661 rows=20000 loops=5)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.055..0.310 rows=7 loops=433248)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.072..0.073 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.063..0.066 rows=25 loops=5)
 Planning Time: 33.712 ms
 Execution Time: 34695.865 ms
(42 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=664042.92..664043.46 rows=1 width=66) (actual time=21013.252..21384.597 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=664042.92..696309.70 rows=60150 width=66) (actual time=21013.251..21384.594 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=664042.92..692851.07 rows=240600 width=66) (actual time=21013.234..21384.580 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=663042.86..663193.24 rows=60150 width=66) (actual time=21001.723..21002.000 rows=140 loops=5)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     Worker 3:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=657215.45..658268.07 rows=60150 width=66) (actual time=21000.958..21001.807 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=331927.34..649446.43 rows=443944 width=57) (actual time=18986.097..20310.112 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=331925.77..645862.23 rows=443944 width=31) (actual time=18985.996..20065.121 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298765.16 rows=3749716 width=8) (actual time=0.029..1966.720 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=326376.47..326376.47 rows=443944 width=31) (actual time=16276.668..16276.723 rows=649638 loops=5)
                                             Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 18464kB
                                             ->  Nested Loop  (cost=3545.53..326376.47 rows=443944 width=31) (actual time=25.007..15721.952 rows=649638 loops=5)
                                                   Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                                   ->  Parallel Hash Join  (cost=3544.97..109990.63 rows=60617 width=26) (actual time=24.884..1011.159 rows=86650 loops=5)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.43..106286.97 rows=60617 width=18) (actual time=2.918..907.328 rows=86650 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47231.24 rows=15152 width=4) (actual time=2.637..171.369 rows=21662 loops=5)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 378338
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.72 rows=18 width=14) (actual time=0.031..0.032 rows=4 loops=108312)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=21.671..21.671 rows=20000 loops=5)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.422..14.429 rows=20000 loops=5)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.030..0.167 rows=7 loops=433248)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.071..0.071 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.061..0.064 rows=25 loops=5)
 Planning Time: 20.058 ms
 Execution Time: 21385.281 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=943503.23..943503.28 rows=20 width=202) (actual time=21323.667..21382.692 rows=20 loops=1)
   ->  Sort  (cost=943503.23..944909.24 rows=562406 width=202) (actual time=21323.666..21382.689 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=845028.88..928537.81 rows=562406 width=202) (actual time=20587.792..21252.629 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=845028.88..915883.65 rows=562408 width=202) (actual time=20587.783..20925.814 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=844028.82..847895.38 rows=140602 width=202) (actual time=20568.271..20743.724 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=844028.82..844380.33 rows=140602 width=182) (actual time=20568.236..20600.751 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 48016kB
                                 Worker 0:  Sort Method: external merge  Disk: 49464kB
                                 Worker 1:  Sort Method: external merge  Disk: 44808kB
                                 Worker 2:  Sort Method: external merge  Disk: 41808kB
                                 Worker 3:  Sort Method: external merge  Disk: 34440kB
                                 ->  Hash Join  (cost=788714.34..832006.47 rows=140602 width=182) (actual time=20057.278..20425.297 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=788712.78..831573.26 rows=140602 width=160) (actual time=20057.210..20372.802 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=148) (actual time=0.590..161.201 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=786955.25..786955.25 rows=140602 width=16) (actual time=20055.412..20055.414 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85216kB
                                                   ->  Nested Loop  (cost=8171.44..786955.25 rows=140602 width=16) (actual time=160.870..19894.299 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8170.87..271571.96 rows=142206 width=8) (actual time=159.070..2527.332 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=46760
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8028.67 rows=568823 width=0) (actual time=108.644..108.644 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.145..0.150 rows=2 loops=573160)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                               Rows Removed by Filter: 2
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.050..0.051 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.042..0.045 rows=25 loops=5)
 Planning Time: 23.305 ms
 Execution Time: 21389.952 ms
(40 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=943503.23..943503.28 rows=20 width=202) (actual time=3529.435..3588.203 rows=20 loops=1)
   ->  Sort  (cost=943503.23..944909.24 rows=562406 width=202) (actual time=3529.434..3588.199 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=845028.88..928537.81 rows=562406 width=202) (actual time=2811.618..3457.876 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=845028.88..915883.65 rows=562408 width=202) (actual time=2811.609..3131.013 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=844028.82..847895.38 rows=140602 width=202) (actual time=2789.900..2969.171 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=844028.82..844380.33 rows=140602 width=182) (actual time=2789.865..2823.970 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 42440kB
                                 Worker 0:  Sort Method: external merge  Disk: 45072kB
                                 Worker 1:  Sort Method: external merge  Disk: 38736kB
                                 Worker 2:  Sort Method: external merge  Disk: 45080kB
                                 Worker 3:  Sort Method: external merge  Disk: 47208kB
                                 ->  Hash Join  (cost=788714.34..832006.47 rows=140602 width=182) (actual time=2361.903..2644.651 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=788712.78..831573.26 rows=140602 width=160) (actual time=2361.853..2589.713 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=148) (actual time=0.026..68.609 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=786955.25..786955.25 rows=140602 width=16) (actual time=2359.600..2359.602 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                                   ->  Nested Loop  (cost=8171.44..786955.25 rows=140602 width=16) (actual time=153.398..2233.166 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8170.87..271571.96 rows=142206 width=8) (actual time=153.317..535.901 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=48126
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8028.67 rows=568823 width=0) (actual time=101.565..101.565 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.013..0.014 rows=2 loops=573160)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                               Rows Removed by Filter: 2
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.028 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.021 rows=25 loops=5)
 Planning Time: 1.999 ms
 Execution Time: 3594.065 ms
(40 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471076.45..471076.46 rows=1 width=36) (actual time=2100.543..2100.680 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207451.34..207451.35 rows=1 width=32) (actual time=467.858..467.941 rows=1 loops=1)
           ->  Gather  (cost=207450.91..207451.32 rows=4 width=32) (actual time=467.758..467.933 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206450.91..206450.92 rows=1 width=32) (actual time=465.156..465.158 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.46..205850.79 rows=80015 width=10) (actual time=4.404..439.843 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195225.77 rows=2000377 width=14) (actual time=0.029..227.358 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=4.302..4.303 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.862..3.861 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.844..3.428 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.649..0.649 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263625.10..263891.82 rows=106687 width=36) (actual time=2100.542..2100.596 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213367.26..263091.67 rows=106687 width=36) (actual time=2100.536..2100.590 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213367.26..253489.87 rows=320060 width=36) (actual time=1336.146..1439.633 rows=302508 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212367.20..214367.58 rows=80015 width=36) (actual time=1327.272..1377.325 rows=60502 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212367.20..212567.24 rows=80015 width=14) (actual time=1327.247..1330.697 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 6152kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4529kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6237kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6254kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4156kB
                                 ->  Hash Join  (cost=2323.46..205850.79 rows=80015 width=14) (actual time=37.053..1315.071 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195225.77 rows=2000377 width=18) (actual time=0.138..1074.433 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=36.854..36.856 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=1.339..35.819 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.153..0.155 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=1.182..34.885 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.842..0.842 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 16.531 ms
 Execution Time: 2101.297 ms
(56 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471076.45..471076.46 rows=1 width=36) (actual time=1245.387..1245.521 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207451.34..207451.35 rows=1 width=32) (actual time=471.104..471.184 rows=1 loops=1)
           ->  Gather  (cost=207450.91..207451.32 rows=4 width=32) (actual time=470.994..471.159 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206450.91..206450.92 rows=1 width=32) (actual time=468.216..468.219 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.46..205850.79 rows=80015 width=10) (actual time=4.463..442.768 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195225.77 rows=2000377 width=14) (actual time=0.308..227.663 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=4.044..4.045 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.759..3.600 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.739..3.154 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.548..0.548 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263625.10..263891.82 rows=106687 width=36) (actual time=1245.386..1245.440 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213367.26..263091.67 rows=106687 width=36) (actual time=1245.380..1245.433 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213367.26..253489.87 rows=320060 width=36) (actual time=467.195..580.230 rows=302504 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212367.20..214367.58 rows=80015 width=36) (actual time=462.653..513.249 rows=60501 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212367.20..212567.24 rows=80015 width=14) (actual time=462.642..466.078 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 6785kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4502kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4208kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4479kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4282kB
                                 ->  Hash Join  (cost=2323.46..205850.79 rows=80015 width=14) (actual time=5.144..450.524 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195225.77 rows=2000377 width=18) (actual time=0.033..228.061 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=5.064..5.066 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.760..4.601 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.018 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.738..4.154 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.545..0.545 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.433 ms
 Execution Time: 1245.600 ms
(56 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1718825.10..1719034.05 rows=1 width=27) (actual time=11437.561..11457.012 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1718825.10..1720287.73 rows=7 width=27) (actual time=11437.560..11457.010 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1718825.10..1720287.45 rows=28 width=27) (actual time=11417.537..11456.996 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1717825.04..1719284.05 rows=7 width=27) (actual time=11398.587..11410.833 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1717825.04..1718007.41 rows=72947 width=27) (actual time=11387.990..11390.576 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6463kB
                           Worker 0:  Sort Method: quicksort  Memory: 6407kB
                           Worker 1:  Sort Method: quicksort  Memory: 6353kB
                           Worker 2:  Sort Method: quicksort  Memory: 6390kB
                           Worker 3:  Sort Method: quicksort  Memory: 6387kB
                           ->  Nested Loop  (cost=0.43..1711932.91 rows=72947 width=27) (actual time=0.733..11346.529 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462589.90 rows=72947 width=15) (actual time=0.492..7615.208 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.059..0.059 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 19.331 ms
 Execution Time: 11457.831 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1718825.10..1719034.05 rows=1 width=27) (actual time=3964.450..3976.346 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1718825.10..1720287.73 rows=7 width=27) (actual time=3964.449..3976.344 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1718825.10..1720287.45 rows=28 width=27) (actual time=3947.115..3976.336 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1717825.04..1719284.05 rows=7 width=27) (actual time=3932.127..3945.485 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1717825.04..1718007.41 rows=72947 width=27) (actual time=3919.036..3922.424 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 8196kB
                           Worker 0:  Sort Method: quicksort  Memory: 6472kB
                           Worker 1:  Sort Method: quicksort  Memory: 6482kB
                           Worker 2:  Sort Method: quicksort  Memory: 6562kB
                           Worker 3:  Sort Method: quicksort  Memory: 5823kB
                           ->  Nested Loop  (cost=0.43..1711932.91 rows=72947 width=27) (actual time=1.628..3889.906 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462589.90 rows=72947 width=15) (actual time=1.607..3589.668 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.672 ms
 Execution Time: 3976.406 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1685401.38..1685401.39 rows=1 width=16) (actual time=6271.565..6370.977 rows=1 loops=1)
   ->  Sort  (cost=1685401.38..1685401.88 rows=200 width=16) (actual time=6271.564..6370.975 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1685398.38..1685400.38 rows=200 width=16) (actual time=6271.545..6370.961 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860185.32..1662900.21 rows=1499878 width=12) (actual time=4812.657..6165.748 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860185.32..1617903.87 rows=5999512 width=12) (actual time=4812.647..5832.926 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=859185.26..902304.10 rows=1499878 width=12) (actual time=4787.865..5508.892 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859185.26..868558.61 rows=3749341 width=8) (actual time=4787.853..5131.531 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 48776kB
                                       Worker 0:  Sort Method: external merge  Disk: 52912kB
                                       Worker 1:  Sort Method: external merge  Disk: 52512kB
                                       Worker 2:  Sort Method: external merge  Disk: 59344kB
                                       Worker 3:  Sort Method: external merge  Disk: 54744kB
                                       ->  Parallel Hash Left Join  (cost=369652.64..416837.36 rows=3749341 width=8) (actual time=2780.726..3935.028 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17423.51 rows=374970 width=4) (actual time=0.864..66.157 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308139.45..308139.45 rows=3749341 width=8) (actual time=2577.421..2577.422 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308139.45 rows=3749341 width=8) (actual time=0.102..2050.410 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 18.875 ms
 Execution Time: 6378.932 ms
(31 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1685401.38..1685401.39 rows=1 width=16) (actual time=5583.639..5685.051 rows=1 loops=1)
   ->  Sort  (cost=1685401.38..1685401.88 rows=200 width=16) (actual time=5583.638..5685.049 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1685398.38..1685400.38 rows=200 width=16) (actual time=5583.619..5685.036 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860185.32..1662900.21 rows=1499878 width=12) (actual time=4106.451..5486.826 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860185.32..1617903.87 rows=5999512 width=12) (actual time=4106.445..5149.254 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=859185.26..902304.10 rows=1499878 width=12) (actual time=4076.616..4798.007 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859185.26..868558.61 rows=3749341 width=8) (actual time=4076.606..4419.011 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 50672kB
                                       Worker 0:  Sort Method: external merge  Disk: 53304kB
                                       Worker 1:  Sort Method: external merge  Disk: 54944kB
                                       Worker 2:  Sort Method: external merge  Disk: 53072kB
                                       Worker 3:  Sort Method: external merge  Disk: 56296kB
                                       ->  Parallel Hash Left Join  (cost=369652.64..416837.36 rows=3749341 width=8) (actual time=2063.064..3246.153 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17423.51 rows=374970 width=4) (actual time=0.097..42.553 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308139.45..308139.45 rows=3749341 width=8) (actual time=1873.460..1873.461 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308139.45 rows=3749341 width=8) (actual time=0.041..1290.303 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 0.658 ms
 Execution Time: 5693.026 ms
(31 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=874755.73..874755.74 rows=1 width=32) (actual time=5323.948..5366.187 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=874755.73..874755.74 rows=1 width=32) (actual time=5323.946..5366.185 rows=1 loops=1)
         ->  Gather  (cost=874755.27..874755.68 rows=4 width=64) (actual time=5315.268..5366.163 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=873755.27..873755.28 rows=1 width=64) (actual time=5308.138..5308.145 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65225.99..870287.50 rows=198158 width=33) (actual time=704.434..5165.358 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12994.56..817523.97 rows=202707 width=16) (actual time=296.330..4594.018 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=83667
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12791.86 rows=810829 width=0) (actual time=190.287..190.287 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.19..45981.19 rows=500019 width=25) (actual time=405.996..405.997 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137280kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.19 rows=500019 width=25) (actual time=0.795..272.371 rows=400000 loops=5)
 Planning Time: 17.323 ms
 Execution Time: 5367.043 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=874755.73..874755.74 rows=1 width=32) (actual time=1816.350..1857.180 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=874755.73..874755.74 rows=1 width=32) (actual time=1816.349..1857.178 rows=1 loops=1)
         ->  Gather  (cost=874755.27..874755.68 rows=4 width=64) (actual time=1811.650..1857.146 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=873755.27..873755.28 rows=1 width=64) (actual time=1806.759..1806.762 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65225.99..870287.50 rows=198158 width=33) (actual time=563.178..1709.933 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12994.56..817523.97 rows=202707 width=16) (actual time=276.792..1293.076 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=83179
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12791.86 rows=810829 width=0) (actual time=170.840..170.840 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.19..45981.19 rows=500019 width=25) (actual time=284.347..284.347 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137280kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.19 rows=500019 width=25) (actual time=0.040..135.403 rows=400000 loops=5)
 Planning Time: 0.972 ms
 Execution Time: 1857.229 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2742100.10..2742211.92 rows=1 width=104) (actual time=13235.129..13293.285 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1389660.95..1389660.96 rows=1 width=32) (actual time=2951.381..2960.342 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1387159.10..1388410.03 rows=100074 width=36) (actual time=2904.895..2954.055 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1342876.36..1384156.88 rows=400296 width=36) (actual time=2554.105..2649.968 rows=398543 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1341876.36..1343127.28 rows=100074 width=36) (actual time=2550.098..2601.669 rows=99636 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=36498.89..1336182.50 rows=569386 width=16) (actual time=441.894..2118.619 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109094 lossy=72353
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35929.51 rows=2277544 width=0) (actual time=345.493..345.494 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1352439.13..1408352.63 rows=500 width=104) (actual time=13235.128..13284.321 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1352438.84..1407123.13 rows=500 width=36) (actual time=13234.543..13283.735 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1352438.84..1400368.14 rows=400296 width=36) (actual time=10061.927..10179.770 rows=346273 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1351438.78..1351688.97 rows=100074 width=36) (actual time=10029.581..10036.861 rows=69823 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10805kB
                           Worker 0:  Sort Method: quicksort  Memory: 10797kB
                           Worker 1:  Sort Method: quicksort  Memory: 10802kB
                           Worker 2:  Sort Method: quicksort  Memory: 10799kB
                           Worker 3:  Sort Method: quicksort  Memory: 10804kB
                           ->  Partial HashAggregate  (cost=1341876.36..1343127.28 rows=100074 width=36) (actual time=9934.893..10000.726 rows=98932 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=36498.89..1336182.50 rows=569386 width=16) (actual time=489.547..9459.390 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80570 lossy=53881
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35929.51 rows=2277544 width=0) (actual time=396.263..396.263 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=72) (actual time=0.578..0.578 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 16.437 ms
 Execution Time: 13295.343 ms
(43 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2742100.10..2742211.92 rows=1 width=104) (actual time=6020.575..6078.758 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1389660.95..1389660.96 rows=1 width=32) (actual time=2952.360..2961.623 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1387159.10..1388410.03 rows=100074 width=36) (actual time=2906.343..2955.314 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1342876.36..1384156.88 rows=400296 width=36) (actual time=2557.628..2653.708 rows=398512 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1341876.36..1343127.28 rows=100074 width=36) (actual time=2553.473..2605.427 rows=99628 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=36498.89..1336182.50 rows=569386 width=16) (actual time=439.338..2119.962 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=108897 lossy=72575
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35929.51 rows=2277544 width=0) (actual time=343.448..343.448 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1352439.13..1408352.63 rows=500 width=104) (actual time=6020.573..6069.492 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1352438.84..1407123.13 rows=500 width=36) (actual time=6020.528..6069.446 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1352438.84..1400368.14 rows=400296 width=36) (actual time=2849.681..2967.073 rows=346043 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1351438.78..1351688.97 rows=100074 width=36) (actual time=2820.440..2827.627 rows=69819 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10780kB
                           Worker 0:  Sort Method: quicksort  Memory: 10795kB
                           Worker 1:  Sort Method: quicksort  Memory: 10842kB
                           Worker 2:  Sort Method: quicksort  Memory: 10785kB
                           Worker 3:  Sort Method: quicksort  Memory: 10782kB
                           ->  Partial HashAggregate  (cost=1341876.36..1343127.28 rows=100074 width=36) (actual time=2725.675..2792.043 rows=98872 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=36498.89..1336182.50 rows=569386 width=16) (actual time=450.746..2338.459 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=76687 lossy=51329
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35929.51 rows=2277544 width=0) (actual time=356.382..356.382 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=72) (actual time=0.041..0.041 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.039 ms
 Execution Time: 6080.809 ms
(43 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=292951.28..292951.29 rows=1 width=44) (actual time=4673.020..4676.112 rows=1 loops=1)
   ->  Sort  (cost=292951.28..293332.20 rows=152366 width=44) (actual time=4673.018..4676.110 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=283400.16..292189.45 rows=152366 width=44) (actual time=3994.376..4669.763 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=283400.16..284853.28 rows=581251 width=40) (actual time=3994.326..4377.233 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58861.01..217529.36 rows=581251 width=40) (actual time=393.859..1132.056 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57861.01..158404.26 rows=145313 width=40) (actual time=385.095..1119.195 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101389.20 rows=1000188 width=8) (actual time=44.904..587.644 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=2.361..44.046 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.47..53481.47 rows=72646 width=40) (actual time=339.473..339.473 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.47 rows=72646 width=40) (actual time=0.107..314.449 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 16.608 ms
 Execution Time: 4684.800 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=292951.28..292951.29 rows=1 width=44) (actual time=4373.635..4376.654 rows=1 loops=1)
   ->  Sort  (cost=292951.28..293332.20 rows=152366 width=44) (actual time=4373.634..4376.652 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=283400.16..292189.45 rows=152366 width=44) (actual time=3700.785..4370.371 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=283400.16..284853.28 rows=581251 width=40) (actual time=3700.733..4082.487 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58861.01..217529.36 rows=581251 width=40) (actual time=181.534..797.992 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57861.01..158404.26 rows=145313 width=40) (actual time=183.240..787.974 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101389.20 rows=1000188 width=8) (actual time=27.380..434.341 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.082..27.300 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.47..53481.47 rows=72646 width=40) (actual time=155.018..155.018 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26400kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.47 rows=72646 width=40) (actual time=0.014..129.617 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 0.764 ms
 Execution Time: 4383.221 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4559008.93..4559008.94 rows=1 width=32) (actual time=21758.953..21792.758 rows=1 loops=1)
   ->  Aggregate  (cost=4559008.93..4559008.94 rows=1 width=32) (actual time=21758.952..21792.756 rows=1 loops=1)
         ->  Merge Join  (cost=3229476.38..4558956.81 rows=20846 width=8) (actual time=10466.662..21791.879 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3228475.33..4433389.52 rows=2045988 width=36) (actual time=10458.670..21561.255 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3228475.33..4341320.06 rows=8183952 width=36) (actual time=10458.653..16613.576 rows=9972160 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3227475.27..3365532.42 rows=2045988 width=36) (actual time=10413.309..14978.481 rows=1994960 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3227475.27..3264969.37 rows=14997640 width=9) (actual time=10413.285..12445.830 rows=11996435 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 212096kB
                                       Worker 0:  Sort Method: external merge  Disk: 223752kB
                                       Worker 1:  Sort Method: external merge  Disk: 223752kB
                                       Worker 2:  Sort Method: external merge  Disk: 227184kB
                                       Worker 3:  Sort Method: external merge  Disk: 229064kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275119.40 rows=14997640 width=9) (actual time=0.530..5831.619 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..99050.88 rows=61134 width=21) (actual time=4.349..49.296 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..98898.04 rows=61134 width=21) (actual time=4.346..43.674 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..90616.34 rows=15284 width=21) (actual time=1.218..668.341 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66713.09 rows=521 width=4) (actual time=0.982..200.899 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.59 rows=29 width=17) (actual time=0.638..0.926 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 17.106 ms
 Execution Time: 21822.472 ms
(33 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4559008.93..4559008.94 rows=1 width=32) (actual time=18974.847..19017.260 rows=1 loops=1)
   ->  Aggregate  (cost=4559008.93..4559008.94 rows=1 width=32) (actual time=18974.846..19017.258 rows=1 loops=1)
         ->  Merge Join  (cost=3229476.38..4558956.81 rows=20846 width=8) (actual time=7490.786..19016.505 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3228475.33..4433389.52 rows=2045988 width=36) (actual time=7481.300..18802.064 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3228475.33..4341320.06 rows=8183952 width=36) (actual time=7481.280..13902.390 rows=9971890 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3227475.27..3365532.42 rows=2045988 width=36) (actual time=7449.123..11947.179 rows=1994893 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3227475.27..3264969.37 rows=14997640 width=9) (actual time=7449.100..9447.616 rows=11996299 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 226848kB
                                       Worker 0:  Sort Method: external merge  Disk: 215480kB
                                       Worker 1:  Sort Method: external merge  Disk: 215480kB
                                       Worker 2:  Sort Method: external merge  Disk: 232024kB
                                       Worker 3:  Sort Method: external merge  Disk: 226024kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275119.40 rows=14997640 width=9) (actual time=0.790..2223.263 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..99050.88 rows=61134 width=21) (actual time=4.457..24.932 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..98898.04 rows=61134 width=21) (actual time=4.453..19.405 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..90616.34 rows=15284 width=21) (actual time=0.210..126.147 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66713.09 rows=521 width=4) (actual time=0.171..105.480 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.59 rows=29 width=17) (actual time=0.005..0.036 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.755 ms
 Execution Time: 19047.232 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9256277.48..9256277.73 rows=100 width=71) (actual time=38775.514..39088.587 rows=99 loops=1)
   ->  Sort  (cost=9256277.48..9306265.53 rows=19995219 width=71) (actual time=38775.513..39088.579 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5548085.57..8492074.59 rows=19995219 width=71) (actual time=38775.291..39088.488 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5548085.57..8042182.15 rows=19995220 width=71) (actual time=38775.279..39088.401 rows=99 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5547085.51..5659558.63 rows=4998805 width=71) (actual time=38761.402..38761.448 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5547085.51..5559582.53 rows=4998805 width=44) (actual time=38761.388..38761.400 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 33kB
                                 Worker 0:  Sort Method: quicksort  Memory: 39kB
                                 Worker 1:  Sort Method: quicksort  Memory: 36kB
                                 Worker 2:  Sort Method: quicksort  Memory: 35kB
                                 Worker 3:  Sort Method: quicksort  Memory: 34kB
                                 ->  Parallel Hash Join  (cost=3390731.37..4892035.93 rows=4998805 width=44) (actual time=36968.433..38760.494 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275119.40 rows=14997640 width=9) (actual time=0.019..2330.457 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3364123.83..3364123.83 rows=1249803 width=43) (actual time=32390.873..32390.877 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4192kB
                                             ->  Parallel Hash Join  (cost=44384.82..3364123.83 rows=1249803 width=43) (actual time=1929.037..32376.654 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316459.27 rows=1249803 width=24) (actual time=1577.313..32024.152 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435456.92 rows=3749716 width=20) (actual time=1.362..1628.089 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796639.86 rows=4999213 width=4) (actual time=737.648..30208.777 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271722.46 rows=59990560 width=9) (actual time=0.530..13456.321 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39696.69..39696.69 rows=374970 width=23) (actual time=349.665..349.666 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98656kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=23) (actual time=0.511..245.647 rows=300000 loops=5)
 Planning Time: 20.869 ms
 Execution Time: 39089.277 ms
(38 rows)

SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9256277.48..9256277.73 rows=100 width=71) (actual time=36166.012..36512.966 rows=99 loops=1)
   ->  Sort  (cost=9256277.48..9306265.53 rows=19995219 width=71) (actual time=36166.011..36512.959 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5548085.57..8492074.59 rows=19995219 width=71) (actual time=36165.789..36512.869 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5548085.57..8042182.15 rows=19995220 width=71) (actual time=36165.781..36512.788 rows=100 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5547085.51..5659558.63 rows=4998805 width=71) (actual time=36156.548..36156.591 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5547085.51..5559582.53 rows=4998805 width=44) (actual time=36156.537..36156.547 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 36kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32kB
                                 Worker 1:  Sort Method: quicksort  Memory: 35kB
                                 Worker 2:  Sort Method: quicksort  Memory: 35kB
                                 Worker 3:  Sort Method: quicksort  Memory: 38kB
                                 ->  Parallel Hash Join  (cost=3390731.37..4892035.93 rows=4998805 width=44) (actual time=35199.512..36156.451 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275119.40 rows=14997640 width=9) (actual time=0.016..2245.758 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3364123.83..3364123.83 rows=1249803 width=43) (actual time=30871.140..30871.143 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=44384.82..3364123.83 rows=1249803 width=43) (actual time=1809.681..30860.711 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316459.27 rows=1249803 width=24) (actual time=1493.700..30543.958 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435456.92 rows=3749716 width=20) (actual time=1.082..849.211 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796639.86 rows=4999213 width=4) (actual time=742.159..29498.358 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271722.46 rows=59990560 width=9) (actual time=0.471..11846.617 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39696.69..39696.69 rows=374970 width=23) (actual time=313.837..313.838 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98688kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.69 rows=374970 width=23) (actual time=1.813..198.426 rows=300000 loops=5)
 Planning Time: 18.077 ms
 Execution Time: 36513.048 ms
(38 rows)

query 19 run 1
SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120831.24..120831.25 rows=1 width=32) (actual time=5420.743..5435.333 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=120831.24..120831.25 rows=1 width=32) (actual time=5420.742..5435.331 rows=1 loops=1)
         ->  Gather  (cost=120830.80..120831.21 rows=4 width=32) (actual time=5413.686..5435.313 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=119830.80..119830.81 rows=1 width=32) (actual time=5405.860..5405.861 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..119828.72 rows=277 width=12) (actual time=39.322..5405.237 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.81 rows=1214 width=30) (actual time=0.523..175.790 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.43 rows=1 width=21) (actual time=4.927..5.467 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 20.418 ms
 Execution Time: 5436.134 ms
(16 rows)

SET
SET
SET


 Limit  (cost=120831.24..120831.25 rows=1 width=32) (actual time=206.825..229.879 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=120831.24..120831.25 rows=1 width=32) (actual time=206.824..229.877 rows=1 loops=1)
         ->  Gather  (cost=120830.80..120831.21 rows=4 width=32) (actual time=204.339..229.862 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=119830.80..119830.81 rows=1 width=32) (actual time=198.291..198.291 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..119828.72 rows=277 width=12) (actual time=0.620..198.109 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.81 rows=1214 width=30) (actual time=0.107..115.235 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.43 rows=1 width=21) (actual time=0.077..0.086 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.946 ms
 Execution Time: 229.929 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3088560.71..3088560.71 rows=1 width=52) (actual time=33662.228..33662.376 rows=1 loops=1)
   ->  Sort  (cost=3088560.71..3088560.71 rows=1 width=52) (actual time=33662.227..33662.374 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1616150.51..3088560.70 rows=1 width=52) (actual time=10421.708..33660.468 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.519..34.501 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.173..0.176 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.341..26.716 rows=100000 loops=1)
               ->  Materialize  (cost=1616150.51..3083908.39 rows=3 width=8) (actual time=2.138..5.764 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1616150.51..3083908.38 rows=3 width=8) (actual time=8756.224..17548.191 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1615149.60..2908657.00 rows=4832690 width=40) (actual time=8750.505..17141.594 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1615149.60..2745542.81 rows=9062384 width=40) (actual time=8750.495..11881.541 rows=8158913 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1614149.54..1665125.45 rows=2265596 width=40) (actual time=8688.228..9946.857 rows=1631869 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1614149.54..1619813.53 rows=2265596 width=13) (actual time=8688.213..8962.167 rows=1824715 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 41624kB
                                                   Worker 0:  Sort Method: external merge  Disk: 40616kB
                                                   Worker 1:  Sort Method: external merge  Disk: 40896kB
                                                   Worker 2:  Sort Method: external merge  Disk: 41728kB
                                                   Worker 3:  Sort Method: external merge  Disk: 40528kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350107.60 rows=2265596 width=13) (actual time=0.100..7878.536 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95275.22 rows=80824 width=16) (actual time=5.081..70.207 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95073.16 rows=80824 width=16) (actual time=5.077..53.709 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84446.18 rows=20206 width=16) (actual time=0.734..1222.925 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65463.05 rows=5051 width=4) (actual time=0.461..187.444 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.175..0.189 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 23.067 ms
 Execution Time: 33668.706 ms
(48 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3088560.71..3088560.71 rows=1 width=52) (actual time=28004.862..28005.006 rows=1 loops=1)
   ->  Sort  (cost=3088560.71..3088560.71 rows=1 width=52) (actual time=28004.861..28005.004 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1616150.51..3088560.70 rows=1 width=52) (actual time=5094.606..28003.361 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.018..17.493 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.009..6.392 rows=100000 loops=1)
               ->  Materialize  (cost=1616150.51..3083908.39 rows=3 width=8) (actual time=0.853..4.417 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1616150.51..3083908.38 rows=3 width=8) (actual time=3493.954..12028.125 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1615149.60..2908657.00 rows=4832690 width=40) (actual time=3489.631..11669.474 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1615149.60..2745542.81 rows=9062384 width=40) (actual time=3489.621..6523.127 rows=8159472 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1614149.54..1665125.45 rows=2265596 width=40) (actual time=3423.527..4666.043 rows=1631986 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1614149.54..1619813.53 rows=2265596 width=13) (actual time=3423.513..3691.770 rows=1824719 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 40528kB
                                                   Worker 0:  Sort Method: external merge  Disk: 41696kB
                                                   Worker 1:  Sort Method: external merge  Disk: 42856kB
                                                   Worker 2:  Sort Method: external merge  Disk: 40872kB
                                                   Worker 3:  Sort Method: external merge  Disk: 39432kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350107.60 rows=2265596 width=13) (actual time=0.045..2468.208 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95275.22 rows=80824 width=16) (actual time=3.742..35.680 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95073.16 rows=80824 width=16) (actual time=3.738..19.817 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84446.18 rows=20206 width=16) (actual time=0.126..110.489 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65463.05 rows=5051 width=4) (actual time=0.106..87.315 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.003..0.003 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.445 ms
 Execution Time: 28010.753 ms
(48 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1966986.08..1966986.08 rows=1 width=34) (actual time=13449.421..13490.071 rows=100 loops=1)
   ->  Sort  (cost=1966986.08..1966986.08 rows=1 width=34) (actual time=13449.420..13490.063 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1966985.54..1966986.07 rows=1 width=34) (actual time=13427.935..13488.735 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1966985.54..1966986.04 rows=4 width=34) (actual time=13427.925..13486.202 rows=17148 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1965985.48..1965985.50 rows=1 width=34) (actual time=13409.332..13411.097 rows=3430 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1965985.48..1965985.49 rows=1 width=26) (actual time=13409.327..13409.744 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 798kB
                                 Worker 0:  Sort Method: quicksort  Memory: 798kB
                                 Worker 1:  Sort Method: quicksort  Memory: 798kB
                                 Worker 2:  Sort Method: quicksort  Memory: 817kB
                                 Worker 3:  Sort Method: quicksort  Memory: 819kB
                                 ->  Nested Loop Semi Join  (cost=1338055.44..1965985.47 rows=1 width=26) (actual time=8801.539..13364.746 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1338054.88..1965981.83 rows=1 width=38) (actual time=8801.151..13325.146 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1338054.31..1653289.82 rows=97379 width=38) (actual time=8799.960..10575.822 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308139.45 rows=1827362 width=4) (actual time=0.632..1262.475 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335556.55..1335556.55 rows=199821 width=34) (actual time=8798.133..8798.137 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335556.55 rows=199821 width=34) (actual time=17.031..8624.740 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312613.50 rows=4999213 width=8) (actual time=0.553..7783.237 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=16.364..16.366 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 320kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.138..15.868 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.082..13.765 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.045..0.046 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 21.928 ms
 Execution Time: 13490.871 ms
(52 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1966986.08..1966986.08 rows=1 width=34) (actual time=6740.389..6777.300 rows=100 loops=1)
   ->  Sort  (cost=1966986.08..1966986.08 rows=1 width=34) (actual time=6740.387..6777.292 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1966985.54..1966986.07 rows=1 width=34) (actual time=6724.468..6775.961 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1966985.54..1966986.04 rows=4 width=34) (actual time=6724.455..6773.436 rows=17139 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1965985.48..1965985.50 rows=1 width=34) (actual time=6708.385..6710.508 rows=3428 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1965985.48..1965985.49 rows=1 width=26) (actual time=6708.380..6709.154 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 829kB
                                 Worker 0:  Sort Method: quicksort  Memory: 811kB
                                 Worker 1:  Sort Method: quicksort  Memory: 800kB
                                 Worker 2:  Sort Method: quicksort  Memory: 788kB
                                 Worker 3:  Sort Method: quicksort  Memory: 803kB
                                 ->  Nested Loop Semi Join  (cost=1338055.44..1965985.47 rows=1 width=26) (actual time=3936.199..6664.893 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1338054.88..1965981.83 rows=1 width=38) (actual time=3936.080..6628.635 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1338054.31..1653289.82 rows=97379 width=38) (actual time=3935.912..4918.564 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308139.45 rows=1827362 width=4) (actual time=0.031..495.297 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335556.55..1335556.55 rows=199821 width=34) (actual time=3934.539..3934.882 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335556.55 rows=199821 width=34) (actual time=10.894..3747.417 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312613.50 rows=4999213 width=8) (actual time=0.044..2890.143 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=9.752..9.754 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 384kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.057..9.443 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.029..7.533 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.679 ms
 Execution Time: 6777.404 ms
(52 rows)

query 22 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96324.80..96324.96 rows=1 width=72) (actual time=921.284..935.327 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.19..46820.20 rows=1 width=32) (actual time=393.259..393.361 rows=1 loops=1)
           ->  Gather  (cost=46819.76..46820.17 rows=4 width=32) (actual time=390.622..393.344 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45819.76..45819.77 rows=1 width=32) (actual time=381.553..381.554 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45789.95 rows=11924 width=6) (actual time=0.114..371.733 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49504.60..50661.89 rows=7541 width=72) (actual time=921.283..935.222 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49504.60..50454.52 rows=7540 width=72) (actual time=920.789..935.214 rows=5 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=48504.54..48556.38 rows=1885 width=72) (actual time=524.276..525.118 rows=3 loops=4)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48504.54..48509.25 rows=1885 width=38) (actual time=523.804..524.055 rows=6206 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1134kB
                           Worker 0:  Sort Method: quicksort  Memory: 1112kB
                           Worker 1:  Sort Method: quicksort  Memory: 1133kB
                           Worker 2:  Sort Method: quicksort  Memory: 1135kB
                           ->  Nested Loop Anti Join  (cost=0.43..48401.99 rows=1885 width=38) (actual time=0.331..517.468 rows=15877 loops=4)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45789.95 rows=4375 width=26) (actual time=0.019..174.849 rows=47782 loops=4)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 327218
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.007..0.007 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 16.947 ms
 Execution Time: 936.075 ms
(33 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96324.80..96324.96 rows=1 width=72) (actual time=527.160..540.718 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.19..46820.20 rows=1 width=32) (actual time=236.011..236.109 rows=1 loops=1)
           ->  Gather  (cost=46819.76..46820.17 rows=4 width=32) (actual time=233.446..236.094 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45819.76..45819.77 rows=1 width=32) (actual time=229.773..229.773 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45789.95 rows=11924 width=6) (actual time=0.020..219.612 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49504.60..50661.89 rows=7541 width=72) (actual time=527.159..540.618 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49504.60..50454.52 rows=7540 width=72) (actual time=526.667..540.610 rows=5 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=48504.54..48556.38 rows=1885 width=72) (actual time=287.370..288.185 rows=3 loops=4)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48504.54..48509.25 rows=1885 width=38) (actual time=286.897..287.140 rows=6194 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1540kB
                           Worker 0:  Sort Method: quicksort  Memory: 1125kB
                           Worker 1:  Sort Method: quicksort  Memory: 1119kB
                           Worker 2:  Sort Method: quicksort  Memory: 1116kB
                           ->  Nested Loop Anti Join  (cost=0.43..48401.99 rows=1885 width=38) (actual time=0.051..281.589 rows=15877 loops=4)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45789.95 rows=4375 width=26) (actual time=0.019..159.739 rows=47782 loops=4)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 327218
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.681 ms
 Execution Time: 540.810 ms
(33 rows)

