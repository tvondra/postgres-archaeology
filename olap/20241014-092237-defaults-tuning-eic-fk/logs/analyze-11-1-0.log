query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424622.63..424622.63 rows=1 width=236) (actual time=7014.242..7014.243 rows=1 loops=1)
   ->  Sort  (cost=424622.63..424622.64 rows=6 width=236) (actual time=7014.240..7014.241 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424622.43..424622.60 rows=6 width=236) (actual time=7014.209..7014.216 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187577.35 rows=5926127 width=25) (actual time=0.527..1144.900 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 12.305 ms
 Execution Time: 7016.052 ms
(11 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424622.63..424622.63 rows=1 width=236) (actual time=6698.872..6698.874 rows=1 loops=1)
   ->  Sort  (cost=424622.63..424622.64 rows=6 width=236) (actual time=6698.871..6698.872 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424622.43..424622.60 rows=6 width=236) (actual time=6698.847..6698.854 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187577.35 rows=5926127 width=25) (actual time=0.026..956.018 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.687 ms
 Execution Time: 6698.930 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55411.53..55411.53 rows=1 width=192) (actual time=510.859..510.876 rows=100 loops=1)
   ->  Sort  (cost=55411.53..55411.53 rows=1 width=192) (actual time=510.858..510.869 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=36849.01..55411.52 rows=1 width=192) (actual time=380.657..510.461 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=817 width=30) (actual time=0.343..63.550 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=379.670..379.673 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=7.173..309.209 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.551..190.468 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.612..6.615 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.784..5.927 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.309..4.212 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.469..0.470 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.457..0.467 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.231..0.234 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.218..0.218 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.211..0.214 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.040..0.040 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.033..0.039 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.026..0.037 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.025..0.033 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.023..0.024 rows=4 loops=1288)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 17.798 ms
 Execution Time: 511.490 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55411.53..55411.53 rows=1 width=192) (actual time=310.659..310.676 rows=100 loops=1)
   ->  Sort  (cost=55411.53..55411.53 rows=1 width=192) (actual time=310.650..310.661 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=36849.01..55411.52 rows=1 width=192) (actual time=240.142..310.283 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=817 width=30) (actual time=0.012..35.666 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=239.735..239.738 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.792..175.946 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.002..45.760 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.784..2.787 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.028..2.134 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.011..0.593 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.014..0.016 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.009..0.014 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.656 ms
 Execution Time: 310.780 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302330.66..302330.69 rows=10 width=44) (actual time=2150.268..2150.272 rows=10 loops=1)
   ->  Sort  (cost=302330.66..303133.22 rows=321024 width=44) (actual time=2150.267..2150.270 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=285762.73..295393.45 rows=321024 width=44) (actual time=2132.698..2148.170 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=285762.73..286565.29 rows=321024 width=24) (actual time=2132.686..2133.924 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=53348.70..256401.36 rows=321024 width=24) (actual time=723.598..2125.454 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187577.35 rows=3270882 width=16) (actual time=0.540..1114.757 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=51508.46..51508.46 rows=147219 width=12) (actual time=722.085..722.087 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14437.25..51508.46 rows=147219 width=12) (actual time=118.074..690.769 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8583.63..43756.08 rows=723316 width=16) (actual time=64.360..505.454 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8402.80 rows=723316 width=0) (actual time=60.727..60.727 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30530 width=4) (actual time=53.636..53.637 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30530 width=4) (actual time=0.363..49.157 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning Time: 18.672 ms
 Execution Time: 2151.108 ms
(30 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302330.66..302330.69 rows=10 width=44) (actual time=1466.886..1466.891 rows=10 loops=1)
   ->  Sort  (cost=302330.66..303133.22 rows=321024 width=44) (actual time=1466.885..1466.888 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=285762.73..295393.45 rows=321024 width=44) (actual time=1449.243..1464.763 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=285762.73..286565.29 rows=321024 width=24) (actual time=1449.231..1450.469 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=53348.70..256401.36 rows=321024 width=24) (actual time=286.360..1442.527 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187577.35 rows=3270882 width=16) (actual time=0.031..881.718 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=51508.46..51508.46 rows=147219 width=12) (actual time=285.842..285.844 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14437.25..51508.46 rows=147219 width=12) (actual time=67.702..262.250 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8583.63..43756.08 rows=723316 width=16) (actual time=42.999..137.784 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8402.80 rows=723316 width=0) (actual time=40.080..40.080 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30530 width=4) (actual time=24.679..24.679 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30530 width=4) (actual time=0.006..21.494 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning Time: 0.895 ms
 Execution Time: 1467.196 ms
(30 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=177790.74..177790.75 rows=1 width=24) (actual time=2195.978..2195.979 rows=1 loops=1)
   ->  Sort  (cost=177790.74..177790.76 rows=5 width=24) (actual time=2195.977..2195.978 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=177790.67..177790.72 rows=5 width=24) (actual time=2195.746..2195.747 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=762.95..177525.75 rows=52984 width=16) (actual time=12.267..2172.055 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=762.51..27688.27 rows=52984 width=20) (actual time=11.799..545.533 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..749.27 rows=52984 width=0) (actual time=8.586..8.586 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 14.179 ms
 Execution Time: 2196.855 ms
(18 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=177790.74..177790.75 rows=1 width=24) (actual time=206.336..206.338 rows=1 loops=1)
   ->  Sort  (cost=177790.74..177790.76 rows=5 width=24) (actual time=206.335..206.336 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=177790.67..177790.72 rows=5 width=24) (actual time=206.317..206.319 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=762.95..177525.75 rows=52984 width=16) (actual time=7.510..193.525 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=762.51..27688.27 rows=52984 width=20) (actual time=7.488..41.099 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..749.27 rows=52984 width=0) (actual time=4.817..4.818 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 0.658 ms
 Execution Time: 206.390 ms
(18 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=190904.34..190904.34 rows=1 width=58) (actual time=2358.074..2358.079 rows=1 loops=1)
   ->  Sort  (cost=190904.34..190904.40 rows=25 width=58) (actual time=2358.073..2358.077 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=190812.59..190904.21 rows=25 width=58) (actual time=2355.612..2358.061 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=190812.59..190830.85 rows=7305 width=38) (actual time=2355.001..2355.282 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10103.12..190343.80 rows=7305 width=38) (actual time=94.690..2350.122 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9630.12..188908.15 rows=183359 width=50) (actual time=88.551..2302.398 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9629.68..40515.46 rows=45829 width=38) (actual time=88.134..740.593 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3292.67..32860.86 rows=229146 width=8) (actual time=27.006..611.630 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3235.39 rows=229146 width=0) (actual time=23.639..23.640 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=61.088..61.090 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.723..55.460 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.291..38.660 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.426..0.428 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.415..0.425 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.205..0.208 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.200..0.201 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.194..0.196 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.031..0.033 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.874..5.875 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.285..4.602 rows=10000 loops=1)
 Planning Time: 22.387 ms
 Execution Time: 2359.163 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=190904.34..190904.34 rows=1 width=58) (actual time=357.011..357.016 rows=1 loops=1)
   ->  Sort  (cost=190904.34..190904.40 rows=25 width=58) (actual time=357.010..357.014 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=190812.59..190904.21 rows=25 width=58) (actual time=354.588..356.996 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=190812.59..190830.85 rows=7305 width=38) (actual time=353.992..354.270 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10103.12..190343.80 rows=7305 width=38) (actual time=54.777..351.224 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9630.12..188908.15 rows=183359 width=50) (actual time=52.124..323.034 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9629.68..40515.46 rows=45829 width=38) (actual time=52.109..153.006 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3292.67..32860.86 rows=229146 width=8) (actual time=18.228..74.813 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3235.39 rows=229146 width=0) (actual time=15.241..15.241 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=33.851..33.853 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.029..29.133 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..8.564 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.020..0.022 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.014..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.631..2.631 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.398 rows=10000 loops=1)
 Planning Time: 2.510 ms
 Execution Time: 357.316 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108029.00..108029.01 rows=1 width=32) (actual time=1454.397..1454.399 rows=1 loops=1)
   ->  Aggregate  (cost=108029.00..108029.01 rows=1 width=32) (actual time=1454.396..1454.396 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20740.91..107438.79 rows=118043 width=12) (actual time=129.730..1376.231 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20711.40 rows=118043 width=0) (actual time=120.472..120.472 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 13.189 ms
 Execution Time: 1455.121 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108029.00..108029.01 rows=1 width=32) (actual time=210.536..210.538 rows=1 loops=1)
   ->  Aggregate  (cost=108029.00..108029.01 rows=1 width=32) (actual time=210.535..210.536 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20740.91..107438.79 rows=118043 width=12) (actual time=99.965..176.985 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20711.40 rows=118043 width=0) (actual time=91.177..91.177 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.377 ms
 Execution Time: 210.572 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235110.52..235110.56 rows=1 width=92) (actual time=3413.825..3413.831 rows=1 loops=1)
   ->  GroupAggregate  (cost=235110.52..235325.25 rows=6135 width=92) (actual time=3413.824..3413.829 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=235110.52..235125.86 rows=6135 width=72) (actual time=3413.186..3413.241 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=85181.53..234724.54 rows=6135 width=72) (actual time=760.531..3407.989 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=30016.63..178740.33 rows=147419 width=46) (actual time=216.943..2817.889 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29651.53..169963.13 rows=1850107 width=24) (actual time=211.073..2528.832 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29189.00 rows=1850107 width=0) (actual time=193.578..193.578 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.726..5.728 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.448..5.599 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.248..4.427 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.195..0.196 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.191..0.193 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=542.970..542.972 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=56.306..518.465 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.392..289.894 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=55.901..55.902 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.319..53.543 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.287..39.557 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.023 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.015..0.019 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 20.002 ms
 Execution Time: 3414.596 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235110.52..235110.56 rows=1 width=92) (actual time=931.347..931.353 rows=1 loops=1)
   ->  GroupAggregate  (cost=235110.52..235325.25 rows=6135 width=92) (actual time=931.346..931.351 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=235110.52..235125.86 rows=6135 width=72) (actual time=930.698..930.759 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=85181.53..234724.54 rows=6135 width=72) (actual time=448.849..927.690 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=30016.63..178740.33 rows=147419 width=46) (actual time=147.178..598.989 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29651.53..169963.13 rows=1850107 width=24) (actual time=145.198..412.854 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29189.00 rows=1850107 width=0) (actual time=128.334..128.334 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.957..1.958 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.018..1.862 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..0.589 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=301.482..301.484 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=28.057..282.045 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..78.757 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=28.037..28.039 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.015..26.494 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.213 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.503 ms
 Execution Time: 931.455 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115712.99..115713.04 rows=1 width=40) (actual time=6442.743..6442.750 rows=1 loops=1)
   ->  GroupAggregate  (cost=115712.99..115821.58 rows=2406 width=40) (actual time=6442.741..6442.748 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=115712.99..115719.04 rows=2420 width=46) (actual time=6442.187..6442.246 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=80681.01..115576.98 rows=2420 width=46) (actual time=5870.687..6440.983 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=80679.45..115555.88 rows=2420 width=20) (actual time=5870.413..6438.818 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=80231.45..115101.51 rows=2429 width=20) (actual time=5864.402..6431.831 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=73894.44..108694.66 rows=12147 width=24) (actual time=5804.286..6368.592 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=6549.71..39518.92 rows=455881 width=12) (actual time=45.560..534.985 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6435.74 rows=455881 width=0) (actual time=42.160..42.160 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66845.12..66845.12 rows=39969 width=20) (actual time=5758.581..5758.582 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66845.12 rows=39969 width=20) (actual time=1.657..5719.041 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1332 width=4) (actual time=0.997..75.301 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.310..4.251 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=60.092..60.094 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.609..55.805 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.350..39.423 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.251..0.253 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.241..0.250 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.008 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.228..0.228 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.224..0.225 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.758..5.759 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.268..4.579 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.262..0.263 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.245..0.250 rows=25 loops=1)
 Planning Time: 25.465 ms
 Execution Time: 6443.639 ms
(50 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=115712.99..115713.04 rows=1 width=40) (actual time=267.794..267.801 rows=1 loops=1)
   ->  GroupAggregate  (cost=115712.99..115821.58 rows=2406 width=40) (actual time=267.793..267.799 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=115712.99..115719.04 rows=2420 width=46) (actual time=267.256..267.312 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=80681.01..115576.98 rows=2420 width=46) (actual time=142.070..266.646 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=80679.45..115555.88 rows=2420 width=20) (actual time=142.040..265.605 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=80231.45..115101.51 rows=2429 width=20) (actual time=139.361..262.106 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=73894.44..108694.66 rows=12147 width=24) (actual time=107.193..227.414 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=6549.71..39518.92 rows=455881 width=12) (actual time=31.596..101.645 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6435.74 rows=455881 width=0) (actual time=28.685..28.685 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66845.12..66845.12 rows=39969 width=20) (actual time=75.551..75.552 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66845.12 rows=39969 width=20) (actual time=0.055..66.835 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1332 width=4) (actual time=0.042..23.287 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.003..0.028 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=32.148..32.150 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.023..28.709 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..8.567 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.016..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.011..0.016 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.459..2.459 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.378 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=1)
 Planning Time: 2.970 ms
 Execution Time: 267.890 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=255067.36..255067.36 rows=1 width=66) (actual time=12339.360..12339.365 rows=1 loops=1)
   ->  Sort  (cost=255067.36..255217.73 rows=60150 width=66) (actual time=12339.358..12339.363 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=253713.98..254766.61 rows=60150 width=66) (actual time=12338.871..12339.284 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=194073.05..247374.35 rows=362265 width=57) (actual time=11372.317..12090.136 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=194071.49..244449.30 rows=362265 width=31) (actual time=11372.034..12009.310 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.433..298.755 rows=1500000 loops=1)
                           ->  Hash  (cost=189543.18..189543.18 rows=362265 width=31) (actual time=11370.828..11370.831 rows=325928 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25391kB
                                 ->  Nested Loop  (cost=7198.94..189543.18 rows=362265 width=31) (actual time=76.668..11210.896 rows=325928 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=7198.51..34959.88 rows=48484 width=26) (actual time=76.032..410.537 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=6750.51..34384.56 rows=48484 width=18) (actual time=70.084..384.486 rows=43520 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.502..214.251 rows=800000 loops=1)
                                                   ->  Hash  (cost=6599.00..6599.00 rows=12121 width=4) (actual time=69.491..69.491 rows=10880 loops=1)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 511kB
                                                         ->  Seq Scan on part  (cost=0.00..6599.00 rows=12121 width=4) (actual time=0.321..67.399 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.933..5.934 rows=10000 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.313..4.747 rows=10000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.037..0.245 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.272..0.272 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.253..0.259 rows=25 loops=1)
 Planning Time: 29.530 ms
 Execution Time: 12340.736 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=255067.36..255067.36 rows=1 width=66) (actual time=1412.049..1412.054 rows=1 loops=1)
   ->  Sort  (cost=255067.36..255217.73 rows=60150 width=66) (actual time=1412.048..1412.052 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=253713.98..254766.61 rows=60150 width=66) (actual time=1411.569..1411.972 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=194073.05..247374.35 rows=362265 width=57) (actual time=659.346..1177.220 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=194071.49..244449.30 rows=362265 width=31) (actual time=659.317..1103.093 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..84.439 rows=1500000 loops=1)
                           ->  Hash  (cost=189543.18..189543.18 rows=362265 width=31) (actual time=658.556..658.559 rows=325928 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25391kB
                                 ->  Nested Loop  (cost=7198.94..189543.18 rows=362265 width=31) (actual time=41.205..572.911 rows=325928 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=7198.51..34959.88 rows=48484 width=26) (actual time=41.185..204.209 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Hash Join  (cost=6750.51..34384.56 rows=48484 width=18) (actual time=38.620..188.038 rows=43520 loops=1)
                                                   Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                   ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..48.165 rows=800000 loops=1)
                                                   ->  Hash  (cost=6599.00..6599.00 rows=12121 width=4) (actual time=38.583..38.583 rows=10880 loops=1)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 511kB
                                                         ->  Seq Scan on part  (cost=0.00..6599.00 rows=12121 width=4) (actual time=0.009..37.192 rows=10880 loops=1)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 189120
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.547..2.548 rows=10000 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.017..1.455 rows=10000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.002..0.007 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=1)
 Planning Time: 4.090 ms
 Execution Time: 1412.788 ms
(35 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231216.08..231216.13 rows=20 width=202) (actual time=2283.522..2283.529 rows=20 loops=1)
   ->  Sort  (cost=231216.08..231363.99 rows=59163 width=202) (actual time=2283.521..2283.526 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=228902.24..229641.78 rows=59163 width=202) (actual time=2252.569..2272.264 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7832.58..228162.70 rows=59163 width=182) (actual time=106.039..2143.883 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7831.02..227979.50 rows=59163 width=160) (actual time=105.687..2115.050 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=859.02..220852.20 rows=59163 width=16) (actual time=12.561..1970.334 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=858.59..27885.43 rows=59723 width=8) (actual time=11.339..506.732 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..843.66 rows=59723 width=0) (actual time=8.122..8.123 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.023..0.025 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=92.704..92.705 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.323..51.642 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.346..0.346 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.337..0.340 rows=25 loops=1)
 Planning Time: 20.121 ms
 Execution Time: 2284.970 ms
(28 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231216.08..231216.13 rows=20 width=202) (actual time=497.331..497.338 rows=20 loops=1)
   ->  Sort  (cost=231216.08..231363.99 rows=59163 width=202) (actual time=497.330..497.334 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=228902.24..229641.78 rows=59163 width=202) (actual time=466.501..486.020 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7832.58..228162.70 rows=59163 width=182) (actual time=72.782..387.400 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7831.02..227979.50 rows=59163 width=160) (actual time=72.760..363.594 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=859.02..220852.20 rows=59163 width=16) (actual time=7.446..257.642 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=858.59..27885.43 rows=59723 width=8) (actual time=7.406..42.020 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..843.66 rows=59723 width=0) (actual time=4.692..4.692 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=64.922..64.922 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.008..25.692 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=1)
 Planning Time: 1.218 ms
 Execution Time: 498.116 ms
(28 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22717.82..22717.83 rows=1 width=36) (actual time=719.157..719.162 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.24..10892.25 rows=1 width=32) (actual time=28.063..28.065 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.24 rows=32000 width=10) (actual time=0.056..19.848 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.049..0.283 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.226 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.025..0.025 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.038 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11825.57..11852.24 rows=10667 width=36) (actual time=719.156..719.158 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.24..11772.24 rows=10667 width=36) (actual time=708.650..719.010 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.24 rows=32000 width=14) (actual time=1.475..651.183 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=1.108..4.473 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.279..0.282 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.821..4.093 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.619..0.619 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.085..1.556 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.176 ms
 Execution Time: 720.129 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22717.82..22717.83 rows=1 width=36) (actual time=85.166..85.170 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.24..10892.25 rows=1 width=32) (actual time=28.017..28.020 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.24 rows=32000 width=10) (actual time=0.055..19.723 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.049..0.285 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.038..0.225 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.038 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11825.57..11852.24 rows=10667 width=36) (actual time=85.164..85.166 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.24..11772.24 rows=10667 width=36) (actual time=74.092..84.770 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.24 rows=32000 width=14) (actual time=0.065..28.136 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.059..0.446 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.049..0.379 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.032..0.032 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.057 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.176 ms
 Execution Time: 85.297 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302762.79..302845.35 rows=1 width=27) (actual time=1962.945..1962.947 rows=1 loops=1)
   ->  GroupAggregate  (cost=302762.79..303340.68 rows=7 width=27) (actual time=1962.944..1962.945 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302762.79..302835.02 rows=28891 width=27) (actual time=1958.945..1959.483 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 3187kB
               ->  Hash Join  (cost=247952.37..300622.21 rows=28891 width=27) (actual time=1480.269..1950.822 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.407..282.968 rows=1500000 loops=1)
                     ->  Hash  (cost=247591.23..247591.23 rows=28891 width=15) (actual time=1479.738..1479.739 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247591.23 rows=28891 width=15) (actual time=1.022..1471.004 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 15.881 ms
 Execution Time: 1963.963 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302762.79..302845.35 rows=1 width=27) (actual time=1512.183..1512.185 rows=1 loops=1)
   ->  GroupAggregate  (cost=302762.79..303340.68 rows=7 width=27) (actual time=1512.182..1512.184 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302762.79..302835.02 rows=28891 width=27) (actual time=1508.193..1508.734 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 3187kB
               ->  Hash Join  (cost=247952.37..300622.21 rows=28891 width=27) (actual time=1246.071..1502.242 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.003..78.228 rows=1500000 loops=1)
                     ->  Hash  (cost=247591.23..247591.23 rows=28891 width=15) (actual time=1246.018..1246.019 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247591.23 rows=28891 width=15) (actual time=0.108..1237.827 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 0.634 ms
 Execution Time: 1512.237 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64471.44..64471.44 rows=1 width=16) (actual time=1444.602..1444.605 rows=1 loops=1)
   ->  Sort  (cost=64471.44..64471.94 rows=200 width=16) (actual time=1444.600..1444.602 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64468.44..64470.44 rows=200 width=16) (actual time=1444.576..1444.583 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60718.44..62218.44 rows=150000 width=12) (actual time=1403.883..1427.384 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53445.71 rows=1454545 width=8) (actual time=33.179..1045.761 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454545 width=8) (actual time=0.616..625.169 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.130..32.131 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..15.844 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 12.532 ms
 Execution Time: 1446.417 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64471.44..64471.44 rows=1 width=16) (actual time=1236.108..1236.111 rows=1 loops=1)
   ->  Sort  (cost=64471.44..64471.94 rows=200 width=16) (actual time=1236.106..1236.109 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64468.44..64470.44 rows=200 width=16) (actual time=1236.081..1236.089 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60718.44..62218.44 rows=150000 width=12) (actual time=1195.783..1219.102 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53445.71 rows=1454545 width=8) (actual time=29.009..863.482 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454545 width=8) (actual time=0.012..471.911 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.624..28.625 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.039..12.898 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.620 ms
 Execution Time: 1237.241 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81204.27..81204.29 rows=1 width=32) (actual time=812.102..812.104 rows=1 loops=1)
   ->  Aggregate  (cost=81204.27..81204.29 rows=1 width=32) (actual time=812.100..812.102 rows=1 loops=1)
         ->  Hash Join  (cost=9920.78..79762.70 rows=82375 width=33) (actual time=107.494..762.905 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1321.78..70947.47 rows=82375 width=16) (actual time=17.967..630.938 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1301.18 rows=82375 width=0) (actual time=12.369..12.370 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=89.286..89.287 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.405..55.913 rows=200000 loops=1)
 Planning Time: 15.284 ms
 Execution Time: 812.661 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81204.27..81204.29 rows=1 width=32) (actual time=180.222..180.224 rows=1 loops=1)
   ->  Aggregate  (cost=81204.27..81204.29 rows=1 width=32) (actual time=180.221..180.223 rows=1 loops=1)
         ->  Hash Join  (cost=9920.78..79762.70 rows=82375 width=33) (actual time=70.115..151.167 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1321.78..70947.47 rows=82375 width=16) (actual time=12.550..66.717 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1301.18 rows=82375 width=0) (actual time=7.532..7.532 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=57.357..57.358 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..26.968 rows=200000 loops=1)
 Planning Time: 0.566 ms
 Execution Time: 180.284 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246065.76..246074.65 rows=1 width=103) (actual time=1494.808..1494.811 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122210.44..122210.45 rows=1 width=32) (actual time=207.265..207.266 rows=1 loops=1)
           ->  HashAggregate  (cost=121959.44..122084.94 rows=10040 width=36) (actual time=204.073..206.644 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3672.84..119668.80 rows=229064 width=16) (actual time=27.562..98.207 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3615.57 rows=229064 width=0) (actual time=18.433..18.433 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123855.31..124299.56 rows=50 width=103) (actual time=1494.807..1494.808 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.340..4.866 rows=8449 loops=1)
         ->  Sort  (cost=123855.03..123855.15 rows=50 width=36) (actual time=1489.465..1489.466 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123677.42..123853.62 rows=50 width=36) (actual time=1487.021..1489.460 rows=1 loops=1)
                     ->  HashAggregate  (cost=123677.42..123853.12 rows=50 width=36) (actual time=1487.020..1489.457 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3672.84..119668.80 rows=229064 width=16) (actual time=40.147..1102.105 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3615.57 rows=229064 width=0) (actual time=30.543..30.543 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 11.895 ms
 Execution Time: 1495.592 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246065.76..246074.65 rows=1 width=103) (actual time=442.935..442.939 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122210.44..122210.45 rows=1 width=32) (actual time=204.800..204.801 rows=1 loops=1)
           ->  HashAggregate  (cost=121959.44..122084.94 rows=10040 width=36) (actual time=201.622..204.176 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3672.84..119668.80 rows=229064 width=16) (actual time=26.710..95.895 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3615.57 rows=229064 width=0) (actual time=17.917..17.917 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123855.31..124299.56 rows=50 width=103) (actual time=442.934..442.935 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.006..1.269 rows=8449 loops=1)
         ->  Sort  (cost=123855.03..123855.15 rows=50 width=36) (actual time=441.193..441.194 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123677.42..123853.62 rows=50 width=36) (actual time=438.733..441.189 rows=1 loops=1)
                     ->  HashAggregate  (cost=123677.42..123853.12 rows=50 width=36) (actual time=438.732..441.187 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3672.84..119668.80 rows=229064 width=16) (actual time=28.332..124.068 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3615.57 rows=229064 width=0) (actual time=19.485..19.485 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.862 ms
 Execution Time: 443.051 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33918.11..33918.12 rows=1 width=44) (actual time=606.112..606.114 rows=1 loops=1)
   ->  Sort  (cost=33918.11..33958.27 rows=16061 width=44) (actual time=606.110..606.112 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32927.32..33837.81 rows=16061 width=44) (actual time=558.675..602.337 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32927.32..33077.30 rows=59990 width=40) (actual time=558.655..566.308 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9822.36..28166.39 rows=59990 width=40) (actual time=84.983..293.370 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.364..141.148 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.467..6.096 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29995 width=40) (actual time=78.581..78.581 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29995 width=40) (actual time=0.296..72.159 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 13.511 ms
 Execution Time: 606.661 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33918.11..33918.12 rows=1 width=44) (actual time=553.015..553.018 rows=1 loops=1)
   ->  Sort  (cost=33918.11..33958.27 rows=16061 width=44) (actual time=553.014..553.016 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32927.32..33837.81 rows=16061 width=44) (actual time=505.387..549.250 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32927.32..33077.30 rows=59990 width=40) (actual time=505.368..513.106 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9822.36..28166.39 rows=59990 width=40) (actual time=49.428..241.205 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.101..120.984 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.088..2.084 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29995 width=40) (actual time=47.090..47.091 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29995 width=40) (actual time=0.009..42.125 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.688 ms
 Execution Time: 553.068 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=982615.95..982615.97 rows=1 width=32) (actual time=4620.939..4620.941 rows=1 loops=1)
   ->  Aggregate  (cost=982615.95..982615.97 rows=1 width=32) (actual time=4620.938..4620.939 rows=1 loops=1)
         ->  Merge Join  (cost=914170.94..982611.38 rows=1827 width=8) (actual time=2813.271..4620.764 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914170.09..962080.26 rows=193317 width=36) (actual time=2806.621..4402.274 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914170.09..929173.56 rows=6001388 width=9) (actual time=2806.601..3533.049 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111632kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172573.88 rows=6001388 width=9) (actual time=0.398..947.560 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..18031.96 rows=5671 width=21) (actual time=1.643..200.869 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..18017.78 rows=5671 width=21) (actual time=1.640..198.896 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=189 width=4) (actual time=1.326..65.727 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.79 rows=31 width=17) (actual time=0.391..0.631 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 14.730 ms
 Execution Time: 4636.211 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=982615.95..982615.97 rows=1 width=32) (actual time=4188.871..4188.872 rows=1 loops=1)
   ->  Aggregate  (cost=982615.95..982615.97 rows=1 width=32) (actual time=4188.870..4188.871 rows=1 loops=1)
         ->  Merge Join  (cost=914170.94..982611.38 rows=1827 width=8) (actual time=2572.052..4188.777 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914170.09..962080.26 rows=193317 width=36) (actual time=2567.060..4131.985 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914170.09..929173.56 rows=6001388 width=9) (actual time=2567.040..3285.892 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111632kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172573.88 rows=6001388 width=9) (actual time=0.024..741.258 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..18031.96 rows=5671 width=21) (actual time=0.160..41.064 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..18017.78 rows=5671 width=21) (actual time=0.157..40.088 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=189 width=4) (actual time=0.146..35.170 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.79 rows=31 width=17) (actual time=0.003..0.019 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.693 ms
 Execution Time: 4203.095 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=940145.26..940145.51 rows=100 width=71) (actual time=4371.373..4371.378 rows=9 loops=1)
   ->  Sort  (cost=940145.26..945147.58 rows=2000927 width=71) (actual time=4371.371..4371.375 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=818650.41..863671.27 rows=2000927 width=71) (actual time=4371.333..4371.351 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=818650.41..823652.73 rows=2000927 width=44) (actual time=4371.321..4371.327 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=349323.97..569660.27 rows=2000927 width=44) (actual time=3666.729..4371.287 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=342351.97..557435.69 rows=2000927 width=25) (actual time=3596.966..4301.507 rows=63 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..172573.88 rows=6001388 width=9) (actual time=0.737..317.593 rows=6001215 loops=1)
                                 ->  Hash  (cost=336100.52..336100.52 rows=500116 width=24) (actual time=3407.773..3407.775 rows=9 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                       ->  Hash Join  (cost=291032.01..336100.52 rows=500116 width=24) (actual time=3056.732..3407.752 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.738..276.066 rows=1500000 loops=1)
                                             ->  Hash  (cost=284780.56..284780.56 rows=500116 width=4) (actual time=2958.916..2958.917 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..279779.40 rows=500116 width=4) (actual time=633.184..2958.895 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227267.25 rows=6001388 width=9) (actual time=0.017..1652.333 rows=6001215 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.466..69.466 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.415..43.383 rows=150000 loops=1)
 Planning Time: 17.499 ms
 Execution Time: 4372.378 ms
(31 rows)

SET
SET
SET
                                                                                                        QUERY PLAN                                                                                                        
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=940145.26..940145.51 rows=100 width=71) (actual time=3233.045..3233.051 rows=9 loops=1)
   ->  Sort  (cost=940145.26..945147.58 rows=2000927 width=71) (actual time=3233.044..3233.048 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=818650.41..863671.27 rows=2000927 width=71) (actual time=3233.006..3233.024 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=818650.41..823652.73 rows=2000927 width=44) (actual time=3232.995..3233.001 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=349323.97..569660.27 rows=2000927 width=44) (actual time=2533.908..3232.963 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=342351.97..557435.69 rows=2000927 width=25) (actual time=2489.186..3188.224 rows=63 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..172573.88 rows=6001388 width=9) (actual time=0.010..314.542 rows=6001215 loops=1)
                                 ->  Hash  (cost=336100.52..336100.52 rows=500116 width=24) (actual time=2302.347..2302.349 rows=9 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                       ->  Hash Join  (cost=291032.01..336100.52 rows=500116 width=24) (actual time=2098.953..2302.328 rows=9 loops=1)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.008..77.998 rows=1500000 loops=1)
                                             ->  Hash  (cost=284780.56..284780.56 rows=500116 width=4) (actual time=2043.705..2043.707 rows=9 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                   ->  GroupAggregate  (cost=0.43..279779.40 rows=500116 width=4) (actual time=432.423..2043.690 rows=9 loops=1)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                         Rows Removed by Filter: 1499991
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227267.25 rows=6001388 width=9) (actual time=0.014..796.752 rows=6001215 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.407..44.407 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..19.569 rows=150000 loops=1)
 Planning Time: 1.033 ms
 Execution Time: 3233.335 ms
(31 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=36409.39..36409.40 rows=1 width=32) (actual time=2488.810..2488.812 rows=1 loops=1)
   ->  Aggregate  (cost=36409.39..36409.40 rows=1 width=32) (actual time=2488.809..2488.810 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..36408.50 rows=119 width=12) (actual time=12.322..2488.445 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=496 width=30) (actual time=1.295..83.725 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.99 rows=1 width=21) (actual time=4.232..4.741 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 17.560 ms
 Execution Time: 2489.807 ms
(12 rows)

SET
SET
SET


 Limit  (cost=36409.39..36409.40 rows=1 width=32) (actual time=59.106..59.107 rows=1 loops=1)
   ->  Aggregate  (cost=36409.39..36409.40 rows=1 width=32) (actual time=59.104..59.105 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..36408.50 rows=119 width=12) (actual time=0.307..59.023 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=496 width=30) (actual time=0.194..41.716 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.99 rows=1 width=21) (actual time=0.030..0.034 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 0.840 ms
 Execution Time: 59.369 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=281506.16..281506.17 rows=1 width=51) (actual time=3807.180..3807.184 rows=1 loops=1)
   ->  Sort  (cost=281506.16..281506.17 rows=1 width=51) (actual time=3807.179..3807.182 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243456.30..281506.15 rows=1 width=51) (actual time=3638.866..3806.989 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.517..3.801 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.218..0.221 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.292..2.812 rows=10000 loops=1)
               ->  Materialize  (cost=243456.30..281050.84 rows=1 width=8) (actual time=5.925..8.447 rows=4371 loops=438)
                     ->  Merge Join  (cost=243456.30..281050.84 rows=1 width=8) (actual time=2595.178..3634.779 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243455.45..260052.65 rows=488155 width=40) (actual time=2593.956..3105.315 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243455.45..245774.17 rows=927487 width=13) (actual time=2593.943..2728.079 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14865.17..141337.48 rows=927487 width=13) (actual time=125.080..2187.184 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14633.30 rows=927487 width=0) (actual time=108.499..108.499 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..14468.32 rows=8080 width=16) (actual time=0.864..494.623 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..14448.12 rows=8080 width=16) (actual time=0.860..490.533 rows=8748 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.42..8426.42 rows=2020 width=4) (actual time=0.455..64.494 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.179..0.193 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 20.381 ms
 Execution Time: 3810.848 ms
(38 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=281506.16..281506.17 rows=1 width=51) (actual time=1406.946..1406.948 rows=1 loops=1)
   ->  Sort  (cost=281506.16..281506.17 rows=1 width=51) (actual time=1406.944..1406.946 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243456.30..281506.15 rows=1 width=51) (actual time=1241.428..1406.799 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.020..1.640 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.010..0.577 rows=10000 loops=1)
               ->  Materialize  (cost=243456.30..281050.84 rows=1 width=8) (actual time=1.609..2.974 rows=4371 loops=438)
                     ->  Merge Join  (cost=243456.30..281050.84 rows=1 width=8) (actual time=704.589..1238.938 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243455.45..260052.65 rows=488155 width=40) (actual time=704.239..1167.647 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243455.45..245774.17 rows=927487 width=13) (actual time=704.227..826.624 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14865.17..141337.48 rows=927487 width=13) (actual time=89.810..328.215 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14633.30 rows=927487 width=0) (actual time=73.860..73.860 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..14468.32 rows=8080 width=16) (actual time=0.055..42.467 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..14448.12 rows=8080 width=16) (actual time=0.052..40.352 rows=8748 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.42..8426.42 rows=2020 width=4) (actual time=0.042..31.482 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.368 ms
 Execution Time: 1409.932 ms
(38 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360717.80..360717.81 rows=1 width=34) (actual time=2723.219..2723.233 rows=100 loops=1)
   ->  Sort  (cost=360717.80..360717.81 rows=1 width=34) (actual time=2723.218..2723.226 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=360717.77..360717.79 rows=1 width=34) (actual time=2722.221..2722.817 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=360717.77..360717.78 rows=1 width=26) (actual time=2722.214..2722.373 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=197108.78..360717.76 rows=1 width=26) (actual time=1496.134..2708.742 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197108.34..360714.37 rows=1 width=38) (actual time=1496.096..2693.038 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197107.91..245115.48 rows=38803 width=38) (actual time=1495.276..1988.942 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=730300 width=4) (actual time=0.552..351.920 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196111.66..196111.66 rows=79700 width=34) (actual time=1494.391..1494.393 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=235.58..196111.66 rows=79700 width=34) (actual time=6.444..1456.863 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187577.35 rows=2000463 width=8) (actual time=0.465..1184.817 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=5.916..5.917 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=1.465..5.817 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.269..0.272 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=1.188..5.469 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.747..0.747 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.009..0.009 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.026 ms
 Execution Time: 2723.864 ms
(44 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360717.80..360717.81 rows=1 width=34) (actual time=1763.200..1763.214 rows=100 loops=1)
   ->  Sort  (cost=360717.80..360717.81 rows=1 width=34) (actual time=1763.198..1763.207 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=360717.77..360717.79 rows=1 width=34) (actual time=1762.179..1762.790 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=360717.77..360717.78 rows=1 width=26) (actual time=1762.172..1762.329 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=197108.78..360717.76 rows=1 width=26) (actual time=1283.175..1749.362 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197108.34..360714.37 rows=1 width=38) (actual time=1283.159..1737.746 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197107.91..245115.48 rows=38803 width=38) (actual time=1283.021..1561.540 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=730300 width=4) (actual time=0.007..157.833 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196111.66..196111.66 rows=79700 width=34) (actual time=1282.926..1282.929 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=235.58..196111.66 rows=79700 width=34) (actual time=0.483..1247.292 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187577.35 rows=2000463 width=8) (actual time=0.036..993.172 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.421..0.423 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.057..0.356 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.050..0.301 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.029..0.029 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 1.920 ms
 Execution Time: 1763.315 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16124.99..16125.02 rows=1 width=72) (actual time=235.550..235.552 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.40..7546.41 rows=1 width=32) (actual time=103.977..103.978 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4761 width=6) (actual time=0.016..100.203 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8578.57..8598.65 rows=730 width=72) (actual time=235.549..235.550 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8578.57..8580.40 rows=730 width=38) (actual time=235.347..235.382 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8543.86 rows=730 width=38) (actual time=104.314..233.249 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=104.290..160.158 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 12.198 ms
 Execution Time: 236.439 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16124.99..16125.02 rows=1 width=72) (actual time=165.183..165.185 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.40..7546.41 rows=1 width=32) (actual time=75.906..75.907 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4761 width=6) (actual time=0.007..72.575 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8578.57..8598.65 rows=730 width=72) (actual time=165.182..165.183 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8578.57..8580.40 rows=730 width=38) (actual time=164.978..165.012 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8543.86 rows=730 width=38) (actual time=75.944..163.253 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=75.929..127.567 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.626 ms
 Execution Time: 165.229 ms
(20 rows)

