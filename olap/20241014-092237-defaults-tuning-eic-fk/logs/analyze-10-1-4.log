query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191548.55..191548.76 rows=1 width=236) (actual time=2126.994..2127.071 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191548.55..191549.79 rows=6 width=236) (actual time=2126.993..2127.069 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191548.55..191548.61 rows=24 width=236) (actual time=2126.961..2127.037 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191545.43..191548.00 rows=24 width=236) (actual time=2126.108..2126.998 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190545.43..190545.60 rows=6 width=236) (actual time=2119.254..2119.266 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.31 rows=1480778 width=25) (actual time=0.070..527.888 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 14.144 ms
 Execution time: 2127.134 ms
(16 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191548.55..191548.76 rows=1 width=236) (actual time=1935.228..1935.289 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191548.55..191549.79 rows=6 width=236) (actual time=1935.227..1935.287 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191548.55..191548.61 rows=24 width=236) (actual time=1935.192..1935.252 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191545.43..191548.00 rows=24 width=236) (actual time=1934.317..1935.211 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190545.43..190545.60 rows=6 width=236) (actual time=1930.913..1930.923 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.31 rows=1480778 width=25) (actual time=0.027..308.287 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 0.470 ms
 Execution time: 1935.347 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61800.21..61800.21 rows=1 width=192) (actual time=446.558..446.646 rows=100 loops=1)
   ->  Sort  (cost=61800.21..61800.21 rows=1 width=192) (actual time=446.557..446.639 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=1002.93..61800.20 rows=1 width=192) (actual time=197.058..446.335 rows=489 loops=1)
               Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
               Rows Removed by Join Filter: 995115
               ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.021..1.914 rows=2036 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.003..0.561 rows=10000 loops=1)
                     ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.014..0.015 rows=5 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.009..0.014 rows=5 loops=1)
                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
               ->  Materialize  (cost=1000.42..61387.19 rows=1 width=34) (actual time=0.001..0.188 rows=489 loops=2036)
                     ->  Nested Loop  (cost=1000.42..61387.19 rows=1 width=34) (actual time=1.347..348.871 rows=489 loops=1)
                           ->  Gather  (cost=1000.00..6420.30 rows=713 width=30) (actual time=0.199..1.502 rows=799 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=297 width=30) (actual time=0.074..27.534 rows=266 loops=3)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 66400
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..77.08 rows=1 width=14) (actual time=0.418..0.434 rows=1 loops=799)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((SubPlan 1) = ps_supplycost)
                                 Rows Removed by Filter: 3
                                 SubPlan 1
                                   ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.044..0.044 rows=1 loops=3196)
                                         ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.031..0.042 rows=1 loops=3196)
                                               Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                               Rows Removed by Join Filter: 3
                                               ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=3196)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                     Rows Removed by Filter: 4
                                               ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.009..0.039 rows=4 loops=3196)
                                                     ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.007..0.033 rows=4 loops=3196)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.011 rows=4 loops=3196)
                                                                 Index Cond: (part.p_partkey = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=12784)
                                                                 Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                     ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                           Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 21.631 ms
 Execution time: 447.479 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61800.21..61800.21 rows=1 width=192) (actual time=148.219..148.302 rows=100 loops=1)
   ->  Sort  (cost=61800.21..61800.21 rows=1 width=192) (actual time=148.218..148.296 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=1002.93..61800.20 rows=1 width=192) (actual time=46.096..148.002 rows=489 loops=1)
               Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
               Rows Removed by Join Filter: 995115
               ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.019..1.913 rows=2036 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.003..0.568 rows=10000 loops=1)
                     ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.013..0.014 rows=5 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                             Filter: (r_name = 'AMERICA'::bpchar)
                                             Rows Removed by Filter: 4
               ->  Materialize  (cost=1000.42..61387.19 rows=1 width=34) (actual time=0.000..0.041 rows=489 loops=2036)
                     ->  Nested Loop  (cost=1000.42..61387.19 rows=1 width=34) (actual time=0.263..50.330 rows=489 loops=1)
                           ->  Gather  (cost=1000.00..6420.30 rows=713 width=30) (actual time=0.209..1.687 rows=799 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=297 width=30) (actual time=0.032..13.360 rows=266 loops=3)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 66400
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..77.08 rows=1 width=14) (actual time=0.047..0.061 rows=1 loops=799)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((SubPlan 1) = ps_supplycost)
                                 Rows Removed by Filter: 3
                                 SubPlan 1
                                   ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.014..0.014 rows=1 loops=3196)
                                         ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.009..0.013 rows=1 loops=3196)
                                               Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                               Rows Removed by Join Filter: 3
                                               ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=3196)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                     Rows Removed by Filter: 4
                                               ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.004..0.011 rows=4 loops=3196)
                                                     ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.003..0.007 rows=4 loops=3196)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.001..0.002 rows=4 loops=3196)
                                                                 Index Cond: (part.p_partkey = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                                 Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                     ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                           Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.656 ms
 Execution time: 148.371 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=250481.77..250481.80 rows=10 width=44) (actual time=1532.874..1543.809 rows=10 loops=1)
   ->  Sort  (cost=250481.77..251265.91 rows=313657 width=44) (actual time=1532.872..1543.806 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=197287.44..243703.76 rows=313657 width=44) (actual time=1511.654..1541.459 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=197287.44..235988.79 rows=303540 width=44) (actual time=1511.641..1531.701 rows=11612 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=196287.40..199322.80 rows=101180 width=44) (actual time=1495.590..1501.132 rows=2903 loops=4)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=196287.40..196540.35 rows=101180 width=24) (actual time=1495.568..1495.940 rows=7633 loops=4)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 789kB
                                 ->  Nested Loop  (cost=5846.12..187876.03 rows=101180 width=24) (actual time=42.391..1492.700 rows=7633 loops=4)
                                       ->  Hash Join  (cost=5845.69..38634.73 rows=46286 width=12) (actual time=40.988..241.670 rows=36516 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232242 width=16) (actual time=0.031..151.182 rows=180569 loops=4)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 194431
                                             ->  Hash  (cost=5472.00..5472.00 rows=29895 width=4) (actual time=40.528..40.528 rows=30142 loops=4)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                   ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29895 width=4) (actual time=0.028..36.135 rows=30142 loops=4)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 119858
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.034..0.034 rows=0 loops=146063)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning time: 18.554 ms
 Execution time: 1544.666 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=250481.77..250481.80 rows=10 width=44) (actual time=298.944..313.500 rows=10 loops=1)
   ->  Sort  (cost=250481.77..251265.91 rows=313657 width=44) (actual time=298.943..313.498 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=197287.44..243703.76 rows=313657 width=44) (actual time=277.955..311.195 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=197287.44..235988.79 rows=303540 width=44) (actual time=277.950..301.618 rows=11612 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=196287.40..199322.80 rows=101180 width=44) (actual time=274.490..279.946 rows=2903 loops=4)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=196287.40..196540.35 rows=101180 width=24) (actual time=274.477..274.853 rows=7633 loops=4)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 796kB
                                 ->  Nested Loop  (cost=5846.12..187876.03 rows=101180 width=24) (actual time=30.405..272.665 rows=7633 loops=4)
                                       ->  Hash Join  (cost=5845.69..38634.73 rows=46286 width=12) (actual time=30.299..127.855 rows=36516 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232242 width=16) (actual time=0.008..58.453 rows=180569 loops=4)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 194431
                                             ->  Hash  (cost=5472.00..5472.00 rows=29895 width=4) (actual time=28.946..28.947 rows=30142 loops=4)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                   ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29895 width=4) (actual time=0.024..23.676 rows=30142 loops=4)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 119858
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.004..0.004 rows=0 loops=146063)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning time: 1.254 ms
 Execution time: 313.583 ms
(31 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79351.50..79351.53 rows=1 width=24) (actual time=1952.642..1962.970 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79351.50..79351.66 rows=5 width=24) (actual time=1952.641..1962.969 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=79351.50..79351.54 rows=15 width=24) (actual time=1952.637..1962.965 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=79349.66..79351.21 rows=15 width=24) (actual time=1952.473..1962.938 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=78349.66..78349.71 rows=5 width=24) (actual time=1943.852..1943.854 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=805.68..78259.36 rows=18059 width=16) (actual time=6.659..1933.752 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=805.24..27207.12 rows=18059 width=20) (actual time=6.452..235.623 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5798
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..791.25 rows=55982 width=0) (actual time=10.783..10.784 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.120..0.120 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 15.043 ms
 Execution time: 1963.673 ms
(23 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79351.50..79351.53 rows=1 width=24) (actual time=96.849..109.810 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79351.50..79351.66 rows=5 width=24) (actual time=96.848..109.808 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=79351.50..79351.54 rows=15 width=24) (actual time=96.844..109.804 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=79349.66..79351.21 rows=15 width=24) (actual time=96.637..109.777 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=78349.66..78349.71 rows=5 width=24) (actual time=93.603..93.605 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=805.68..78259.36 rows=18059 width=16) (actual time=8.182..89.661 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=805.24..27207.12 rows=18059 width=20) (actual time=8.159..29.498 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5617
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..791.25 rows=55982 width=0) (actual time=6.683..6.683 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 0.642 ms
 Execution time: 109.866 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85686.86..85686.87 rows=1 width=58) (actual time=2319.666..2330.364 rows=1 loops=1)
   ->  Sort  (cost=85686.86..85686.93 rows=25 width=58) (actual time=2319.665..2330.363 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=85647.99..85686.74 rows=25 width=58) (actual time=2319.017..2330.352 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=85647.99..85685.86 rows=75 width=58) (actual time=2318.831..2330.326 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=84647.95..84677.01 rows=25 width=58) (actual time=2310.557..2311.255 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=84647.95..84653.70 rows=2300 width=38) (actual time=2310.369..2310.453 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 192kB
                                 ->  Hash Join  (cost=10014.35..84519.52 rows=2300 width=38) (actual time=100.810..2308.722 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=9541.35..83744.36 rows=57555 width=50) (actual time=96.953..2292.228 rows=45609 loops=4)
                                             ->  Hash Join  (cost=9540.92..37164.40 rows=14385 width=38) (actual time=96.337..356.349 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3203.91..30413.82 rows=71927 width=8) (actual time=26.089..265.476 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6550
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3148.17 rows=222974 width=0) (actual time=27.111..27.111 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=70.195..70.197 rows=29952 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                         ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.055..64.155 rows=29952 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.015..41.086 rows=150000 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.035..0.036 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.027..0.034 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.161..0.169 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.569..3.569 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..2.236 rows=10000 loops=4)
 Planning time: 25.761 ms
 Execution time: 2330.998 ms
(46 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85686.86..85686.87 rows=1 width=58) (actual time=170.356..185.757 rows=1 loops=1)
   ->  Sort  (cost=85686.86..85686.93 rows=25 width=58) (actual time=170.355..185.755 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=85647.99..85686.74 rows=25 width=58) (actual time=169.678..185.744 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=85647.99..85685.86 rows=75 width=58) (actual time=169.492..185.724 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=84647.95..84677.01 rows=25 width=58) (actual time=165.473..166.140 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=84647.95..84653.70 rows=2300 width=38) (actual time=165.300..165.381 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 197kB
                                 ->  Hash Join  (cost=10014.35..84519.52 rows=2300 width=38) (actual time=57.570..164.555 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=9541.35..83744.36 rows=57555 width=50) (actual time=54.550..153.993 rows=45609 loops=4)
                                             ->  Hash Join  (cost=9540.92..37164.40 rows=14385 width=38) (actual time=54.524..94.368 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3203.91..30413.82 rows=71927 width=8) (actual time=17.690..43.523 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6524
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3148.17 rows=222974 width=0) (actual time=17.079..17.080 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=36.789..36.791 rows=29952 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                         ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.050..31.640 rows=29952 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.015..9.572 rows=150000 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.031 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.029 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.909..2.909 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.414 rows=10000 loops=4)
 Planning time: 2.863 ms
 Execution time: 185.846 ms
(46 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=105046.24..105046.25 rows=1 width=32) (actual time=1081.174..1089.155 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=105046.24..105046.25 rows=1 width=32) (actual time=1081.173..1089.153 rows=1 loops=1)
         ->  Gather  (cost=105045.80..105046.21 rows=4 width=32) (actual time=1081.062..1089.144 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=104045.80..104045.81 rows=1 width=32) (actual time=1072.790..1072.791 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20679.69..103903.01 rows=28558 width=12) (actual time=137.871..1057.165 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13393
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20651.13 rows=114231 width=0) (actual time=132.926..132.926 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 10.857 ms
 Execution time: 1089.834 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=105046.24..105046.25 rows=1 width=32) (actual time=204.794..211.202 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=105046.24..105046.25 rows=1 width=32) (actual time=204.786..211.193 rows=1 loops=1)
         ->  Gather  (cost=105045.80..105046.21 rows=4 width=32) (actual time=200.824..211.177 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=104045.80..104045.81 rows=1 width=32) (actual time=197.566..197.567 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20679.69..103903.01 rows=28558 width=12) (actual time=108.133..190.712 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12870
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20651.13 rows=114231 width=0) (actual time=99.168..99.168 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.380 ms
 Execution time: 211.242 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165415.18..165415.34 rows=1 width=92) (actual time=1557.331..1573.099 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=165415.18..166358.37 rows=6102 width=92) (actual time=1557.330..1573.097 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=165415.18..166177.78 rows=5904 width=92) (actual time=1557.153..1573.089 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=164415.14..164484.02 rows=1968 width=92) (actual time=1548.847..1549.165 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=164415.14..164420.06 rows=1968 width=72) (actual time=1548.664..1548.702 rows=959 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 251kB
                           ->  Hash Join  (cost=6074.43..164307.47 rows=1968 width=72) (actual time=65.627..1547.221 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=5709.33..163679.33 rows=47338 width=46) (actual time=59.443..1533.799 rows=36276 loops=4)
                                       ->  Hash Join  (cost=5708.90..38880.23 rows=38710 width=30) (actual time=58.958..294.239 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.043..154.696 rows=375000 loops=4)
                                             ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=58.885..58.886 rows=11896 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                                   ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.021..56.414 rows=11896 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.008..35.820 rows=150000 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.008 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.041..0.041 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.936..2.937 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.029..2.822 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.570 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 24.129 ms
 Execution time: 1573.621 ms
(45 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165415.18..165415.34 rows=1 width=92) (actual time=279.327..298.273 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=165415.18..166358.37 rows=6102 width=92) (actual time=279.326..298.272 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=165415.18..166177.78 rows=5904 width=92) (actual time=279.153..298.264 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=164415.14..164484.02 rows=1968 width=92) (actual time=274.861..275.185 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=164415.14..164420.06 rows=1968 width=72) (actual time=274.669..274.709 rows=960 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 249kB
                           ->  Hash Join  (cost=6074.43..164307.47 rows=1968 width=72) (actual time=34.581..273.780 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=5709.33..163679.33 rows=47338 width=46) (actual time=32.363..265.233 rows=36276 loops=4)
                                       ->  Hash Join  (cost=5708.90..38880.23 rows=38710 width=30) (actual time=32.330..133.912 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.007..31.827 rows=375000 loops=4)
                                             ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=32.294..32.295 rows=11896 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                                   ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.032..30.340 rows=11896 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.019..9.186 rows=150000 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.123..2.123 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.027..2.025 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..0.682 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 2.303 ms
 Execution time: 298.372 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81427.45..81427.60 rows=1 width=40) (actual time=2776.645..2789.255 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=81427.45..81783.22 rows=2406 width=40) (actual time=2776.644..2789.252 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=81427.45..81703.81 rows=2022 width=72) (actual time=2776.420..2789.239 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=80427.43..80470.39 rows=1011 width=72) (actual time=2766.718..2766.932 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=80427.43..80429.95 rows=1011 width=46) (actual time=2766.496..2766.537 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 88kB
                           ->  Hash Join  (cost=50050.95..80376.97 rows=1011 width=46) (actual time=738.776..2765.837 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=50049.39..80367.25 rows=1011 width=20) (actual time=738.731..2764.670 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=49601.39..79916.60 rows=1012 width=20) (actual time=735.059..2760.549 rows=828 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Nested Loop  (cost=0.43..30243.03 rows=16666 width=20) (actual time=0.832..2023.261 rows=13231 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.216..26.079 rows=440 loops=3)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 66227
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.330..4.524 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=48462.33..48462.33 rows=91090 width=8) (actual time=730.521..730.525 rows=91179 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                                   ->  Hash Join  (cost=12880.78..48462.33 rows=91090 width=8) (actual time=116.361..710.069 rows=91179 loops=3)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Bitmap Heap Scan on orders  (cost=6543.77..39506.49 rows=455448 width=12) (actual time=51.210..542.129 rows=457263 loops=3)
                                                               Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Heap Blocks: exact=26131
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6429.91 rows=455448 width=0) (actual time=48.002..48.002 rows=457263 loops=3)
                                                                     Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=65.093..65.095 rows=29952 loops=3)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                               ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.051..60.532 rows=29952 loops=3)
                                                                     Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.022..39.052 rows=150000 loops=3)
                                                                     ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.025..0.026 rows=5 loops=3)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.020..0.025 rows=5 loops=3)
                                                                                 Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=3)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.651..3.651 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..2.499 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=3)
 Planning time: 29.256 ms
 Execution time: 2790.039 ms
(55 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81427.45..81427.60 rows=1 width=40) (actual time=278.211..293.045 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=81427.45..81783.22 rows=2406 width=40) (actual time=278.209..293.043 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=81427.45..81703.81 rows=2022 width=72) (actual time=277.988..293.034 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=80427.43..80470.39 rows=1011 width=72) (actual time=275.218..275.427 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=80427.43..80429.95 rows=1011 width=46) (actual time=275.001..275.043 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 90kB
                           ->  Hash Join  (cost=50050.95..80376.97 rows=1011 width=46) (actual time=240.602..274.757 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=50049.39..80367.25 rows=1011 width=20) (actual time=240.558..274.301 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=49601.39..79916.60 rows=1012 width=20) (actual time=237.847..271.308 rows=828 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Nested Loop  (cost=0.43..30243.03 rows=16666 width=20) (actual time=0.058..30.892 rows=13231 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.024..8.262 rows=440 loops=3)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 66227
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.004..0.046 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=48462.33..48462.33 rows=91090 width=8) (actual time=237.415..237.418 rows=91179 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                                   ->  Hash Join  (cost=12880.78..48462.33 rows=91090 width=8) (actual time=67.946..222.377 rows=91179 loops=3)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Bitmap Heap Scan on orders  (cost=6543.77..39506.49 rows=455448 width=12) (actual time=34.527..116.083 rows=457263 loops=3)
                                                               Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Heap Blocks: exact=26131
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6429.91 rows=455448 width=0) (actual time=31.365..31.365 rows=457263 loops=3)
                                                                     Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=33.397..33.399 rows=29952 loops=3)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                               ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.044..29.535 rows=29952 loops=3)
                                                                     Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.021..9.027 rows=150000 loops=3)
                                                                     ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.019..0.021 rows=5 loops=3)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.014..0.019 rows=5 loops=3)
                                                                                 Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=3)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=3)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.685..2.685 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.522 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.013 rows=25 loops=3)
 Planning time: 3.526 ms
 Execution time: 293.161 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=159349.66..159349.99 rows=1 width=66) (actual time=5414.349..5443.743 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=159349.66..179067.33 rows=60150 width=66) (actual time=5414.348..5443.741 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=159349.66..176811.71 rows=120300 width=66) (actual time=5413.765..5443.734 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=158349.63..161926.08 rows=60150 width=66) (actual time=5405.206..5406.383 rows=3 loops=3)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=158349.63..158665.11 rows=126191 width=57) (actual time=5404.859..5405.028 rows=1809 loops=3)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 18503kB
                           ->  Hash Join  (cost=66191.42..147657.94 rows=126191 width=57) (actual time=638.114..5306.667 rows=108643 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=66189.86..146638.02 rows=126191 width=31) (actual time=638.062..5264.012 rows=108643 loops=3)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Nested Loop  (cost=448.86..72979.76 rows=126191 width=31) (actual time=4.286..4411.213 rows=108643 loops=3)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=448.43..19304.12 rows=16835 width=26) (actual time=4.088..205.430 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..18811.91 rows=16835 width=18) (actual time=0.078..194.125 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=4209 width=4) (actual time=0.042..33.140 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.040..0.043 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.919..3.919 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..2.808 rows=10000 loops=3)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.048..0.287 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                       ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=630.842..630.842 rows=1500000 loops=3)
                                             Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.023..408.349 rows=1500000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.026 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.022 rows=25 loops=3)
 Planning time: 32.618 ms
 Execution time: 5444.633 ms
(38 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=159349.66..159349.99 rows=1 width=66) (actual time=944.505..972.090 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=159349.66..179067.33 rows=60150 width=66) (actual time=944.504..972.089 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=159349.66..176811.71 rows=120300 width=66) (actual time=943.923..972.078 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=158349.63..161926.08 rows=60150 width=66) (actual time=939.470..941.545 rows=5 loops=3)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=158349.63..158665.11 rows=126191 width=57) (actual time=939.114..939.390 rows=2887 loops=3)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 18348kB
                           ->  Hash Join  (cost=66191.42..147657.94 rows=126191 width=57) (actual time=414.980..843.799 rows=108643 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=66189.86..146638.02 rows=126191 width=31) (actual time=414.914..809.568 rows=108643 loops=3)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Nested Loop  (cost=448.86..72979.76 rows=126191 width=31) (actual time=2.896..202.395 rows=108643 loops=3)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=448.43..19304.12 rows=16835 width=26) (actual time=2.866..40.220 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..18811.91 rows=16835 width=18) (actual time=0.025..31.970 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=4209 width=4) (actual time=0.013..15.546 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.740..2.740 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.552 rows=10000 loops=3)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.009 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                       ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=409.987..409.987 rows=1500000 loops=3)
                                             Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                             ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.021..196.568 rows=1500000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.032..0.032 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.025..0.027 rows=25 loops=3)
 Planning time: 4.603 ms
 Execution time: 972.230 ms
(38 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99771.29..99771.34 rows=20 width=202) (actual time=2368.844..2369.491 rows=20 loops=1)
   ->  Sort  (cost=99771.29..99902.78 rows=52599 width=202) (actual time=2368.843..2369.488 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97714.16..98371.65 rows=52599 width=202) (actual time=2337.508..2358.800 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=8753.76..97056.67 rows=52599 width=182) (actual time=116.252..2235.370 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=7753.76..90796.77 rows=16967 width=182) (actual time=108.755..2280.340 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7752.20..90743.12 rows=16967 width=160) (actual time=108.681..2270.697 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=780.20..83726.58 rows=16967 width=16) (actual time=7.681..2155.053 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=779.76..27173.16 rows=17493 width=8) (actual time=6.811..178.999 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4741
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..766.21 rows=54228 width=0) (actual time=10.184..10.184 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.133..0.137 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=100.376..100.377 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.036..56.627 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.018 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning time: 23.001 ms
 Execution time: 2370.432 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99771.29..99771.34 rows=20 width=202) (actual time=252.628..253.187 rows=20 loops=1)
   ->  Sort  (cost=99771.29..99902.78 rows=52599 width=202) (actual time=252.626..253.184 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97714.16..98371.65 rows=52599 width=202) (actual time=221.139..242.926 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=8753.76..97056.67 rows=52599 width=182) (actual time=81.177..148.927 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=7753.76..90796.77 rows=16967 width=182) (actual time=77.629..181.165 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7752.20..90743.12 rows=16967 width=160) (actual time=77.549..174.858 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=780.20..83726.58 rows=16967 width=16) (actual time=7.409..95.102 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=779.76..27173.16 rows=17493 width=8) (actual time=7.358..22.389 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1611
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..766.21 rows=54228 width=0) (actual time=6.795..6.795 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=69.195..69.195 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.051..25.553 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=4)
 Planning time: 1.195 ms
 Execution time: 253.619 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22744.91..22744.92 rows=1 width=36) (actual time=758.384..758.389 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.45..10892.46 rows=1 width=32) (actual time=29.146..29.148 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.45 rows=32000 width=10) (actual time=0.067..20.744 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.047..0.279 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.039..0.224 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11852.45..11932.45 rows=32000 width=36) (actual time=758.383..758.385 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.45..11692.45 rows=32000 width=36) (actual time=747.226..758.239 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.45 rows=32000 width=14) (actual time=1.314..687.018 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.732..3.226 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.722..3.127 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.630..0.630 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.096..1.646 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 14.540 ms
 Execution time: 758.770 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22744.91..22744.92 rows=1 width=36) (actual time=86.137..86.142 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.45..10892.46 rows=1 width=32) (actual time=28.464..28.465 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.45 rows=32000 width=10) (actual time=0.082..20.083 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.076..0.303 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.065..0.239 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.030..0.030 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.038 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11852.45..11932.45 rows=32000 width=36) (actual time=86.136..86.138 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.45..11692.45 rows=32000 width=36) (actual time=75.425..85.998 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.45 rows=32000 width=14) (actual time=0.053..29.103 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.048..0.393 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.335 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.059 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 1.002 ms
 Execution time: 86.272 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170972.37..170994.18 rows=1 width=27) (actual time=1203.324..1204.458 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170972.37..171125.03 rows=7 width=27) (actual time=1203.323..1204.457 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170972.37..171124.75 rows=28 width=27) (actual time=1202.367..1204.452 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169972.31..170121.36 rows=7 width=27) (actual time=1189.278..1190.197 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169972.31..169990.93 rows=7449 width=27) (actual time=1188.375..1188.623 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 677kB
                           ->  Nested Loop  (cost=0.43..169493.23 rows=7449 width=27) (actual time=0.561..1184.573 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.76 rows=7449 width=15) (actual time=0.523..784.184 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.064..0.064 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 16.304 ms
 Execution time: 1205.377 ms
(19 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170972.37..170994.18 rows=1 width=27) (actual time=406.572..408.683 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170972.37..171125.03 rows=7 width=27) (actual time=406.571..408.681 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170972.37..171124.75 rows=28 width=27) (actual time=405.482..408.676 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169972.31..170121.36 rows=7 width=27) (actual time=399.586..400.501 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169972.31..169990.93 rows=7449 width=27) (actual time=398.683..398.928 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 743kB
                           ->  Nested Loop  (cost=0.43..169493.23 rows=7449 width=27) (actual time=0.197..396.785 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.76 rows=7449 width=15) (actual time=0.180..367.457 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 0.671 ms
 Execution time: 408.750 ms
(19 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.57..64702.58 rows=1 width=16) (actual time=1448.483..1448.485 rows=1 loops=1)
   ->  Sort  (cost=64702.57..64703.07 rows=200 width=16) (actual time=1448.482..1448.484 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.57..64701.57 rows=200 width=16) (actual time=1448.457..1448.463 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.57..62449.57 rows=150000 width=12) (actual time=1407.487..1430.650 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.28 rows=1484858 width=8) (actual time=34.705..1053.693 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484858 width=8) (actual time=0.400..629.977 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.948..33.949 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.331..17.866 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 16.446 ms
 Execution time: 1450.046 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.57..64702.58 rows=1 width=16) (actual time=1248.387..1248.390 rows=1 loops=1)
   ->  Sort  (cost=64702.57..64703.07 rows=200 width=16) (actual time=1248.386..1248.388 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.57..64701.57 rows=200 width=16) (actual time=1248.360..1248.367 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.57..62449.57 rows=150000 width=12) (actual time=1207.587..1230.748 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.28 rows=1484858 width=8) (actual time=28.221..869.829 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484858 width=8) (actual time=0.014..472.582 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=27.750..27.751 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.037..12.880 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.601 ms
 Execution time: 1249.569 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78551.59..78551.60 rows=1 width=32) (actual time=613.547..617.540 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=78551.59..78551.60 rows=1 width=32) (actual time=613.546..617.539 rows=1 loops=1)
         ->  Gather  (cost=78551.13..78551.54 rows=4 width=64) (actual time=613.528..617.525 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=77551.13..77551.14 rows=1 width=64) (actual time=602.836..602.838 rows=1 loops=5)
                     ->  Hash Join  (cost=9876.19..77202.72 rows=19909 width=33) (actual time=122.929..586.689 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1277.19..68551.46 rows=19909 width=16) (actual time=15.844..467.345 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8428
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1257.28 rows=79635 width=0) (actual time=16.776..16.776 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=105.926..105.926 rows=200000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                                 ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.049..68.663 rows=200000 loops=5)
 Planning time: 13.712 ms
 Execution time: 618.327 ms
(18 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78551.59..78551.60 rows=1 width=32) (actual time=165.716..168.177 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=78551.59..78551.60 rows=1 width=32) (actual time=165.714..168.175 rows=1 loops=1)
         ->  Gather  (cost=78551.13..78551.54 rows=4 width=64) (actual time=160.329..168.152 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=77551.13..77551.14 rows=1 width=64) (actual time=157.149..157.150 rows=1 loops=5)
                     ->  Hash Join  (cost=9876.19..77202.72 rows=19909 width=33) (actual time=93.982..144.679 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1277.19..68551.46 rows=19909 width=16) (actual time=15.257..58.858 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9988
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1257.28 rows=79635 width=0) (actual time=10.400..10.401 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=77.607..77.607 rows=200000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                                 ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.045..36.428 rows=200000 loops=5)
 Planning time: 0.712 ms
 Execution time: 168.320 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=248196.75..248196.81 rows=1 width=103) (actual time=1495.158..1495.161 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122848.38..122848.39 rows=1 width=32) (actual time=208.027..208.028 rows=1 loops=1)
           ->  HashAggregate  (cost=122598.18..122723.28 rows=10008 width=36) (actual time=204.779..207.339 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3922.40..120151.87 rows=244631 width=16) (actual time=27.370..91.839 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3861.24 rows=244631 width=0) (actual time=18.345..18.345 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=125348.37..125941.99 rows=10008 width=103) (actual time=1495.156..1495.158 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.340..4.453 rows=8449 loops=1)
         ->  Sort  (cost=125348.08..125373.10 rows=10008 width=36) (actual time=1490.072..1490.072 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124432.91..124683.11 rows=10008 width=36) (actual time=1487.637..1490.064 rows=1 loops=1)
                     ->  HashAggregate  (cost=124432.91..124583.03 rows=10008 width=36) (actual time=1487.636..1490.062 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3922.40..120151.87 rows=244631 width=16) (actual time=39.771..1094.009 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3861.24 rows=244631 width=0) (actual time=30.038..30.038 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 11.631 ms
 Execution time: 1495.298 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=248196.75..248196.81 rows=1 width=103) (actual time=442.953..442.957 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122848.38..122848.39 rows=1 width=32) (actual time=205.167..205.168 rows=1 loops=1)
           ->  HashAggregate  (cost=122598.18..122723.28 rows=10008 width=36) (actual time=201.914..204.479 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3922.40..120151.87 rows=244631 width=16) (actual time=26.741..91.279 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3861.24 rows=244631 width=0) (actual time=17.778..17.778 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=125348.37..125941.99 rows=10008 width=103) (actual time=442.952..442.954 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.005..1.589 rows=8449 loops=1)
         ->  Sort  (cost=125348.08..125373.10 rows=10008 width=36) (actual time=440.767..440.768 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124432.91..124683.11 rows=10008 width=36) (actual time=438.350..440.763 rows=1 loops=1)
                     ->  HashAggregate  (cost=124432.91..124583.03 rows=10008 width=36) (actual time=438.350..440.761 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3922.40..120151.87 rows=244631 width=16) (actual time=28.396..119.202 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3861.24 rows=244631 width=0) (actual time=19.328..19.329 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.876 ms
 Execution time: 443.066 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=32609.31..32609.31 rows=1 width=44) (actual time=482.175..482.288 rows=1 loops=1)
   ->  Sort  (cost=32609.31..32649.43 rows=16050 width=44) (actual time=482.174..482.286 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=31619.91..32529.06 rows=16050 width=44) (actual time=429.283..479.021 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=31619.91..31769.64 rows=59892 width=40) (actual time=429.259..437.053 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=10821.75..26867.45 rows=59892 width=40) (actual time=96.064..163.614 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=9821.75..19878.25 rows=14973 width=40) (actual time=89.393..156.651 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.920..53.405 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.273..2.788 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Hash  (cost=9099.00..9099.00 rows=29946 width=40) (actual time=85.370..85.370 rows=29492 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                       ->  Seq Scan on part  (cost=0.00..9099.00 rows=29946 width=40) (actual time=0.029..79.286 rows=29492 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 170508
 Planning time: 15.286 ms
 Execution time: 482.945 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=32609.31..32609.31 rows=1 width=44) (actual time=446.690..446.800 rows=1 loops=1)
   ->  Sort  (cost=32609.31..32649.43 rows=16050 width=44) (actual time=446.689..446.798 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=31619.91..32529.06 rows=16050 width=44) (actual time=394.410..443.502 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=31619.91..31769.64 rows=59892 width=40) (actual time=394.387..401.778 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=10821.75..26867.45 rows=59892 width=40) (actual time=54.994..128.421 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=9821.75..19878.25 rows=14973 width=40) (actual time=65.655..119.711 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.044..38.197 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..3.012 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Hash  (cost=9099.00..9099.00 rows=29946 width=40) (actual time=62.490..62.491 rows=29492 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                       ->  Seq Scan on part  (cost=0.00..9099.00 rows=29946 width=40) (actual time=0.024..55.992 rows=29492 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 170508
 Planning time: 0.705 ms
 Execution time: 446.852 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=429190.91..429190.92 rows=1 width=32) (actual time=2500.880..2504.690 rows=1 loops=1)
   ->  Aggregate  (cost=429190.91..429190.92 rows=1 width=32) (actual time=2500.880..2504.689 rows=1 loops=1)
         ->  Merge Join  (cost=299959.75..429185.92 rows=1996 width=8) (actual time=1069.108..2504.565 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298958.87..413641.23 rows=193711 width=36) (actual time=1058.224..2472.547 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298958.87..404924.24 rows=774844 width=36) (actual time=1058.198..1913.687 rows=992933 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297958.81..311632.79 rows=193711 width=36) (actual time=1008.037..1472.330 rows=199164 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297958.81..301709.68 rows=1500345 width=9) (actual time=1008.008..1155.124 rows=1199261 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 25224kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.45 rows=1500345 width=9) (actual time=0.074..540.629 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13033.01 rows=6181 width=21) (actual time=6.154..12.998 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13017.55 rows=6181 width=21) (actual time=6.151..11.954 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11304.09 rows=2575 width=21) (actual time=1.715..85.855 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=86 width=4) (actual time=0.677..26.200 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.69 rows=31 width=17) (actual time=0.532..0.850 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 14.020 ms
 Execution time: 2508.933 ms
(29 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=429190.91..429190.92 rows=1 width=32) (actual time=2174.848..2180.168 rows=1 loops=1)
   ->  Aggregate  (cost=429190.91..429190.92 rows=1 width=32) (actual time=2174.847..2180.166 rows=1 loops=1)
         ->  Merge Join  (cost=299959.75..429185.92 rows=1996 width=8) (actual time=780.006..2180.042 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298958.87..413641.23 rows=193711 width=36) (actual time=769.669..2152.238 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298958.87..404924.24 rows=774844 width=36) (actual time=769.651..1602.997 rows=993696 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297958.81..311632.79 rows=193711 width=36) (actual time=745.448..1233.879 rows=199317 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297958.81..301709.68 rows=1500345 width=9) (actual time=745.431..900.450 rows=1199418 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 21296kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.45 rows=1500345 width=9) (actual time=0.042..230.489 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13033.01 rows=6181 width=21) (actual time=4.271..8.781 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13017.55 rows=6181 width=21) (actual time=4.268..7.696 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11304.09 rows=2575 width=21) (actual time=0.199..17.092 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=86 width=4) (actual time=0.185..13.989 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.69 rows=31 width=17) (actual time=0.006..0.039 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.768 ms
 Execution time: 2183.108 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1856080.42..1856080.67 rows=100 width=71) (actual time=4339.672..4339.675 rows=9 loops=1)
   ->  Sort  (cost=1856080.42..1871087.32 rows=6002760 width=71) (actual time=4339.671..4339.673 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1491597.15..1626659.25 rows=6002760 width=71) (actual time=4339.641..4339.657 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1491597.15..1506604.05 rows=6002760 width=44) (actual time=4339.635..4339.639 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6985.69..697062.83 rows=6002760 width=44) (actual time=1044.493..4339.602 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=13.69..674333.14 rows=6002760 width=25) (actual time=976.923..4272.001 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..368342.04 rows=1500345 width=24) (actual time=748.941..3397.982 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..306.278 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..276028.35 rows=1500345 width=4) (actual time=646.898..3023.963 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227267.13 rows=6001380 width=9) (actual time=0.003..1640.870 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227267.13 rows=6001380 width=9) (actual time=0.010..608.305 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.216..67.216 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..42.688 rows=150000 loops=1)
 Planning time: 20.494 ms
 Execution time: 4340.223 ms
(27 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1856080.42..1856080.67 rows=100 width=71) (actual time=3277.412..3277.415 rows=9 loops=1)
   ->  Sort  (cost=1856080.42..1871087.32 rows=6002760 width=71) (actual time=3277.411..3277.413 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1491597.15..1626659.25 rows=6002760 width=71) (actual time=3277.381..3277.397 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1491597.15..1506604.05 rows=6002760 width=44) (actual time=3277.375..3277.380 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6985.69..697062.83 rows=6002760 width=44) (actual time=783.045..3277.346 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=13.69..674333.14 rows=6002760 width=25) (actual time=741.783..3236.055 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..368342.04 rows=1500345 width=24) (actual time=512.813..2358.600 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..161.179 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..276028.35 rows=1500345 width=4) (actual time=452.821..2131.105 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227267.13 rows=6001380 width=9) (actual time=0.003..800.553 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227267.13 rows=6001380 width=9) (actual time=0.008..613.021 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.920..40.920 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.808 rows=150000 loops=1)
 Planning time: 1.301 ms
 Execution time: 3277.491 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18169.58..18169.59 rows=1 width=32) (actual time=883.261..886.316 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18169.58..18169.59 rows=1 width=32) (actual time=883.260..886.314 rows=1 loops=1)
         ->  Gather  (cost=18169.35..18169.56 rows=2 width=32) (actual time=880.049..886.091 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17169.35..17169.36 rows=1 width=32) (actual time=875.284..875.285 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17169.00 rows=47 width=12) (actual time=37.514..875.155 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.466..27.414 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.11 rows=1 width=21) (actual time=4.484..5.015 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 16.481 ms
 Execution time: 886.934 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18169.58..18169.59 rows=1 width=32) (actual time=27.471..31.346 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18169.58..18169.59 rows=1 width=32) (actual time=27.470..31.344 rows=1 loops=1)
         ->  Gather  (cost=18169.35..18169.56 rows=2 width=32) (actual time=27.209..31.336 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17169.35..17169.36 rows=1 width=32) (actual time=24.992..24.992 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17169.00 rows=47 width=12) (actual time=0.389..24.952 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.111..15.553 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.11 rows=1 width=21) (actual time=0.049..0.055 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 0.900 ms
 Execution time: 31.398 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=281962.55..281962.55 rows=1 width=51) (actual time=3317.082..3317.160 rows=1 loops=1)
   ->  Sort  (cost=281962.55..281962.55 rows=1 width=51) (actual time=3317.081..3317.158 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=247611.50..281962.54 rows=1 width=51) (actual time=3146.421..3316.744 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.333..3.602 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.323..2.814 rows=10000 loops=1)
               ->  Materialize  (cost=247611.50..281507.23 rows=1 width=8) (actual time=6.014..7.324 rows=4371 loops=438)
                     ->  Merge Join  (cost=247611.50..281507.22 rows=1 width=8) (actual time=2634.007..3143.779 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=246610.63..263489.40 rows=492758 width=40) (actual time=2625.001..3076.569 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=246610.63..248982.48 rows=948740 width=13) (actual time=2624.989..2721.569 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=15206.02..141997.12 rows=948740 width=13) (actual time=125.624..2235.840 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14968.83 rows=948740 width=0) (actual time=108.731..108.732 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=8.700..37.360 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=8.697..35.406 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.440..208.552 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.150..31.708 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.226..0.241 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 21.741 ms
 Execution time: 3320.533 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=281962.55..281962.55 rows=1 width=51) (actual time=1333.805..1333.890 rows=1 loops=1)
   ->  Sort  (cost=281962.55..281962.55 rows=1 width=51) (actual time=1333.804..1333.888 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=247611.50..281962.54 rows=1 width=51) (actual time=1163.341..1333.509 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.010..1.696 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.593 rows=10000 loops=1)
               ->  Materialize  (cost=247611.50..281507.23 rows=1 width=8) (actual time=1.561..2.801 rows=4371 loops=438)
                     ->  Merge Join  (cost=247611.50..281507.22 rows=1 width=8) (actual time=683.650..1161.126 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=246610.63..263489.40 rows=492758 width=40) (actual time=680.316..1123.698 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=246610.63..248982.48 rows=948740 width=13) (actual time=680.303..776.074 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=15206.02..141997.12 rows=948740 width=13) (actual time=89.420..323.612 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14968.83 rows=948740 width=0) (actual time=73.228..73.228 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=2.990..8.112 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=2.987..6.183 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.065..16.887 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.048..12.491 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.004..0.005 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.413 ms
 Execution time: 1336.615 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=203058.52..203058.52 rows=1 width=34) (actual time=1388.640..1388.748 rows=100 loops=1)
   ->  Sort  (cost=203058.52..203058.52 rows=1 width=34) (actual time=1388.639..1388.741 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=203058.49..203058.51 rows=1 width=34) (actual time=1387.595..1388.338 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=203058.49..203058.49 rows=1 width=26) (actual time=1387.586..1387.849 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..203058.48 rows=1 width=26) (actual time=7.468..1373.191 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..203055.08 rows=1 width=34) (actual time=5.287..847.581 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..203051.76 rows=1 width=38) (actual time=5.281..214.566 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..202051.66 rows=1 width=38) (actual time=1.545..972.772 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133625.21 rows=19988 width=34) (actual time=1.385..640.255 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.31 rows=500115 width=8) (actual time=0.020..566.687 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.265..1.266 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.247..1.200 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.230..1.126 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.208..0.208 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.010..0.010 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 18.752 ms
 Execution time: 1389.358 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=203058.52..203058.52 rows=1 width=34) (actual time=644.177..644.346 rows=100 loops=1)
   ->  Sort  (cost=203058.52..203058.52 rows=1 width=34) (actual time=644.176..644.339 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=203058.49..203058.51 rows=1 width=34) (actual time=643.067..643.925 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=203058.49..203058.49 rows=1 width=26) (actual time=643.057..643.408 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..203058.48 rows=1 width=26) (actual time=1.653..628.820 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..203055.08 rows=1 width=34) (actual time=0.925..434.518 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..203051.76 rows=1 width=38) (actual time=0.920..139.732 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..202051.66 rows=1 width=38) (actual time=0.578..492.442 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133625.21 rows=19988 width=34) (actual time=0.563..385.476 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.31 rows=500115 width=8) (actual time=0.026..308.767 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.441..0.443 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.064..0.381 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.047..0.309 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.028..0.028 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 2.050 ms
 Execution time: 644.427 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14817.59..14817.61 rows=1 width=72) (actual time=178.307..178.387 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=46.695..46.773 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=46.650..46.764 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=40.384..40.385 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.027..38.911 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8574.76..8595.33 rows=748 width=72) (actual time=178.306..178.307 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8574.76..8576.63 rows=748 width=38) (actual time=178.112..178.148 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8539.06 rows=748 width=38) (actual time=46.745..175.808 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=46.718..103.231 rows=19077 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 16.500 ms
 Execution time: 179.171 ms
(24 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14817.59..14817.61 rows=1 width=72) (actual time=117.103..117.186 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=29.191..29.272 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=29.130..29.263 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=27.148..27.148 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.011..25.837 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8574.76..8595.33 rows=748 width=72) (actual time=117.102..117.103 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8574.76..8576.63 rows=748 width=38) (actual time=116.909..116.945 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8539.06 rows=748 width=38) (actual time=29.227..115.255 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=29.213..80.288 rows=19077 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.607 ms
 Execution time: 117.239 ms
(24 rows)

