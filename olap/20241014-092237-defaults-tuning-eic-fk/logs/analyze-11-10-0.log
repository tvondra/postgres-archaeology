query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4243900.04..4243900.04 rows=1 width=236) (actual time=72856.952..72856.953 rows=1 loops=1)
   ->  Sort  (cost=4243900.04..4243900.05 rows=6 width=236) (actual time=72856.950..72856.951 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4243899.84..4243900.00 rows=6 width=236) (actual time=72856.912..72856.920 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875028.80 rows=59221776 width=25) (actual time=0.386..11713.324 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 14.221 ms
 Execution Time: 72858.550 ms
(11 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4243900.04..4243900.04 rows=1 width=236) (actual time=67072.495..67072.496 rows=1 loops=1)
   ->  Sort  (cost=4243900.04..4243900.05 rows=6 width=236) (actual time=67072.494..67072.494 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4243899.84..4243900.00 rows=6 width=236) (actual time=67072.469..67072.477 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875028.80 rows=59221776 width=25) (actual time=0.023..9527.510 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 0.468 ms
 Execution Time: 67072.550 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1120835.24..1120835.24 rows=1 width=192) (actual time=5153.087..5153.104 rows=100 loops=1)
   ->  Sort  (cost=1120835.24..1120835.24 rows=1 width=192) (actual time=5153.086..5153.096 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=557988.13..1120835.23 rows=1 width=192) (actual time=3121.746..5149.865 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89211.69 rows=8709 width=30) (actual time=0.441..768.034 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=557987.70..565986.63 rows=1599786 width=172) (actual time=3120.355..3584.490 rows=1603828 loops=1)
                     ->  Sort  (cost=557987.70..561987.16 rows=1599786 width=172) (actual time=3120.351..3435.387 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305253.67 rows=1599786 width=172) (actual time=44.134..2451.104 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255211.31 rows=7998931 width=14) (actual time=0.459..1075.108 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=43.636..43.639 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.963..37.993 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.324..25.592 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.632..0.634 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.627..0.632 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.183..0.184 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.437..0.438 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.190..0.192 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.096..0.096 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.085..0.094 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.079..0.092 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.079..0.090 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.074..0.076 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 18.093 ms
 Execution Time: 5190.734 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1120835.24..1120835.24 rows=1 width=192) (actual time=3844.193..3844.208 rows=100 loops=1)
   ->  Sort  (cost=1120835.24..1120835.24 rows=1 width=192) (actual time=3844.191..3844.201 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=557988.13..1120835.23 rows=1 width=192) (actual time=2670.812..3841.834 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89211.69 rows=8709 width=30) (actual time=0.015..458.004 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=557987.70..565986.63 rows=1599786 width=172) (actual time=2670.707..3107.084 rows=1603828 loops=1)
                     ->  Sort  (cost=557987.70..561987.16 rows=1599786 width=172) (actual time=2670.704..2960.752 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305253.67 rows=1599786 width=172) (actual time=25.294..2021.694 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255211.31 rows=7998931 width=14) (actual time=0.034..768.616 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=25.232..25.234 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.243..20.329 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.008..5.641 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.231..0.232 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.010..0.016 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.009..0.014 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.005..0.011 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.002..0.003 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 1.694 ms
 Execution Time: 3880.652 ms
(53 rows)

query 3 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3432755.71..3432755.73 rows=10 width=44) (actual time=26892.556..26892.561 rows=10 loops=1)
   ->  Sort  (cost=3432755.71..3440575.01 rows=3127722 width=44) (actual time=26892.555..26892.558 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3271335.10..3365166.76 rows=3127722 width=44) (actual time=26717.711..26872.254 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3271335.10..3279154.41 rows=3127722 width=24) (actual time=26717.697..26730.256 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=539433.87..2892670.05 rows=3127722 width=24) (actual time=8506.650..26615.292 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875028.80 rows=32546711 width=16) (actual time=0.371..11523.467 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=514373.62..514373.62 rows=1441620 width=12) (actual time=8503.363..8503.365 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144010.28..514373.62 rows=1441620 width=12) (actual time=1251.112..8139.146 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85566.00..436995.38 rows=7212911 width=16) (actual time=742.581..5664.153 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83762.77 rows=7212911 width=0) (actual time=698.668..698.668 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54696.82..54696.82 rows=299797 width=4) (actual time=507.821..507.821 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54696.82 rows=299797 width=4) (actual time=0.510..455.473 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 18.928 ms
 Execution Time: 26893.760 ms
(30 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3432755.71..3432755.73 rows=10 width=44) (actual time=20925.695..20925.699 rows=10 loops=1)
   ->  Sort  (cost=3432755.71..3440575.01 rows=3127722 width=44) (actual time=20925.693..20925.697 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3271335.10..3365166.76 rows=3127722 width=44) (actual time=20748.849..20905.252 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3271335.10..3279154.41 rows=3127722 width=24) (actual time=20748.835..20761.426 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=539433.87..2892670.05 rows=3127722 width=24) (actual time=4636.854..20648.005 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875028.80 rows=32546711 width=16) (actual time=0.019..9545.244 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=514373.62..514373.62 rows=1441620 width=12) (actual time=4634.988..4634.990 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144010.28..514373.62 rows=1441620 width=12) (actual time=1028.673..4383.103 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85566.00..436995.38 rows=7212911 width=16) (actual time=658.652..2519.032 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83762.77 rows=7212911 width=0) (actual time=615.473..615.473 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54696.82..54696.82 rows=299797 width=4) (actual time=369.372..369.372 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54696.82 rows=299797 width=4) (actual time=0.031..319.744 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 1.151 ms
 Execution Time: 20926.136 ms
(30 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2034451.74..2034451.74 rows=1 width=24) (actual time=19280.653..19280.654 rows=1 loops=1)
   ->  Sort  (cost=2034451.74..2034451.75 rows=5 width=24) (actual time=19280.651..19280.652 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2034451.66..2034451.71 rows=5 width=24) (actual time=19280.631..19280.633 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=7908.62..2031699.83 rows=550367 width=16) (actual time=124.671..19048.042 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=7908.06..277433.56 rows=550500 width=20) (actual time=124.260..5114.770 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7770.44 rows=550500 width=0) (actual time=85.385..85.385 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 14.813 ms
 Execution Time: 19281.571 ms
(18 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2034451.74..2034451.74 rows=1 width=24) (actual time=4764.742..4764.744 rows=1 loops=1)
   ->  Sort  (cost=2034451.74..2034451.75 rows=5 width=24) (actual time=4764.741..4764.742 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2034451.66..2034451.71 rows=5 width=24) (actual time=4764.722..4764.723 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=7908.62..2031699.83 rows=550367 width=16) (actual time=119.544..4593.649 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=7908.06..277433.56 rows=550500 width=20) (actual time=119.515..1212.344 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7770.44 rows=550500 width=0) (actual time=80.894..80.895 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 1.091 ms
 Execution Time: 4764.805 ms
(18 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2077830.07..2077830.07 rows=1 width=58) (actual time=22461.534..22461.540 rows=1 loops=1)
   ->  Sort  (cost=2077830.07..2077830.13 rows=25 width=58) (actual time=22461.533..22461.538 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2076922.97..2077829.94 rows=25 width=58) (actual time=22438.273..22461.519 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2076922.97..2077104.30 rows=72533 width=38) (actual time=22432.418..22435.490 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=100615.22..2071067.25 rows=72533 width=38) (actual time=950.189..22384.609 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=95894.22..2056825.00 rows=1813570 width=50) (actual time=900.407..21865.136 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=95893.65..404212.45 rows=453502 width=38) (actual time=899.831..7056.652 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32569.40..327850.04 rows=2267509 width=8) (actual time=298.128..5789.835 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32002.53 rows=2267509 width=0) (actual time=254.537..254.537 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59574.29..59574.29 rows=299997 width=38) (actual time=601.217..601.220 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59574.29 rows=299997 width=38) (actual time=1.357..537.750 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=8) (actual time=0.666..373.700 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.671..0.672 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.665..0.670 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.328..0.329 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.330..0.331 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.325..0.327 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.029..0.031 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=45.286..45.286 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.341..29.549 rows=100000 loops=1)
 Planning Time: 27.219 ms
 Execution Time: 22462.540 ms
(41 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2077830.07..2077830.07 rows=1 width=58) (actual time=6450.594..6450.600 rows=1 loops=1)
   ->  Sort  (cost=2077830.07..2077830.13 rows=25 width=58) (actual time=6450.593..6450.599 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2076922.97..2077829.94 rows=25 width=58) (actual time=6427.603..6450.578 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2076922.97..2077104.30 rows=72533 width=38) (actual time=6421.838..6424.827 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=100615.22..2071067.25 rows=72533 width=38) (actual time=792.805..6389.162 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=95894.22..2056825.00 rows=1813570 width=50) (actual time=753.714..5928.261 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=95893.65..404212.45 rows=453502 width=38) (actual time=753.691..2646.217 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32569.40..327850.04 rows=2267509 width=8) (actual time=270.379..1600.601 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32002.53 rows=2267509 width=0) (actual time=227.501..227.501 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59574.29..59574.29 rows=299997 width=38) (actual time=482.957..482.960 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59574.29 rows=299997 width=38) (actual time=0.058..422.170 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=8) (actual time=0.019..264.286 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.034 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.027..0.032 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.006..0.006 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.796..38.797 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.022..21.956 rows=100000 loops=1)
 Planning Time: 3.408 ms
 Execution Time: 6450.823 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1958157.04..1958157.05 rows=1 width=32) (actual time=99741.667..99741.668 rows=1 loops=1)
   ->  Aggregate  (cost=1958157.04..1958157.05 rows=1 width=32) (actual time=99741.666..99741.666 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1952309.99 rows=1169410 width=12) (actual time=1.178..98311.218 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.926 ms
 Execution Time: 99742.606 ms
(6 rows)

SET
SET
SET
                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1958157.04..1958157.05 rows=1 width=32) (actual time=4600.851..4600.852 rows=1 loops=1)
   ->  Aggregate  (cost=1958157.04..1958157.05 rows=1 width=32) (actual time=4600.850..4600.850 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1952309.99 rows=1169410 width=12) (actual time=0.050..4190.932 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.659 ms
 Execution Time: 4600.885 ms
(6 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2718026.03..2718026.15 rows=1 width=92) (actual time=19217.641..19217.647 rows=1 loops=1)
   ->  GroupAggregate  (cost=2718026.03..2719263.09 rows=10056 width=92) (actual time=19217.640..19217.645 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2718026.03..2718177.61 rows=60633 width=72) (actual time=19210.607..19211.345 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563425.28..2713209.40 rows=60633 width=72) (actual time=5122.680..19182.255 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111499.65 rows=1456955 width=46) (actual time=36.886..13394.529 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2025005.96 rows=18211932 width=24) (actual time=0.463..11174.007 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=36.392..36.394 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.550..34.975 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.329..25.287 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.213..0.213 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.204..0.208 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536590.55..536590.55 rows=1200106 width=30) (actual time=5081.012..5081.014 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57053.20..536590.55 rows=1200106 width=30) (actual time=542.906..4822.699 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411281.29 rows=15001329 width=8) (actual time=0.826..1703.496 rows=15000000 loops=1)
                                 ->  Hash  (cost=55553.21..55553.21 rows=119999 width=30) (actual time=542.014..542.015 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55553.21 rows=119999 width=30) (actual time=0.724..515.520 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=8) (actual time=0.703..374.611 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 25.059 ms
 Execution Time: 19218.649 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2718026.03..2718026.15 rows=1 width=92) (actual time=15346.914..15346.920 rows=1 loops=1)
   ->  GroupAggregate  (cost=2718026.03..2719263.09 rows=10056 width=92) (actual time=15346.913..15346.918 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2718026.03..2718177.61 rows=60633 width=72) (actual time=15339.867..15340.598 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563425.28..2713209.40 rows=60633 width=72) (actual time=4138.302..15313.395 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111499.65 rows=1456955 width=46) (actual time=18.593..10554.527 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2025005.96 rows=18211932 width=24) (actual time=0.041..8738.687 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=18.540..18.541 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.014..17.561 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..5.476 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536590.55..536590.55 rows=1200106 width=30) (actual time=4117.484..4117.486 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57053.20..536590.55 rows=1200106 width=30) (actual time=282.962..3875.971 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411281.29 rows=15001329 width=8) (actual time=0.031..1243.960 rows=15000000 loops=1)
                                 ->  Hash  (cost=55553.21..55553.21 rows=119999 width=30) (actual time=282.872..282.873 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55553.21 rows=119999 width=30) (actual time=0.018..262.707 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=8) (actual time=0.003..82.434 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.106 ms
 Execution Time: 15347.338 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1176067.43..1176067.67 rows=1 width=40) (actual time=60968.406..60968.412 rows=1 loops=1)
   ->  GroupAggregate  (cost=1176067.43..1176657.92 rows=2406 width=40) (actual time=60968.405..60968.410 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1176067.43..1176127.02 rows=23838 width=46) (actual time=60963.309..60963.782 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=815606.96..1174334.29 rows=23838 width=46) (actual time=55521.502..60951.121 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 287513
                     ->  Hash Join  (cost=815606.96..1165604.77 rows=23838 width=20) (actual time=55520.727..60899.278 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=811135.96..1161071.19 rows=23838 width=20) (actual time=55476.797..60844.589 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=747811.71..1097061.61 rows=119188 width=24) (actual time=54886.723..60224.781 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=66483.65..397183.66 rows=4628801 width=12) (actual time=521.556..4941.896 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..65326.44 rows=4628801 width=0) (actual time=477.575..477.575 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=676499.65..676499.65 rows=386273 width=20) (actual time=54364.822..54364.823 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.56..676499.65 rows=386273 width=20) (actual time=2.659..53980.435 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.54 rows=13296 width=4) (actual time=1.171..579.741 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.63 rows=29 width=24) (actual time=0.306..4.082 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59574.29..59574.29 rows=299997 width=4) (actual time=589.464..589.466 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59574.29 rows=299997 width=4) (actual time=1.407..538.214 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=8) (actual time=0.782..379.063 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.619..0.620 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.614..0.618 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.299..0.301 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.309..0.310 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.305..0.307 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.884..43.884 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.328..29.210 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.014 rows=25 loops=1)
 Planning Time: 28.706 ms
 Execution Time: 60969.486 ms
(50 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1176067.43..1176067.67 rows=1 width=40) (actual time=5316.790..5316.796 rows=1 loops=1)
   ->  GroupAggregate  (cost=1176067.43..1176657.92 rows=2406 width=40) (actual time=5316.788..5316.794 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1176067.43..1176127.02 rows=23838 width=46) (actual time=5311.840..5312.296 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=815606.96..1174334.29 rows=23838 width=46) (actual time=3122.544..5303.739 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 287513
                     ->  Hash Join  (cost=815606.96..1165604.77 rows=23838 width=20) (actual time=3122.516..5261.725 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=811135.96..1161071.19 rows=23838 width=20) (actual time=3085.491..5215.465 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=747811.71..1097061.61 rows=119188 width=24) (actual time=2634.605..4737.908 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=66483.65..397183.66 rows=4628801 width=12) (actual time=481.347..1747.739 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..65326.44 rows=4628801 width=0) (actual time=437.829..437.829 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=676499.65..676499.65 rows=386273 width=20) (actual time=2152.953..2152.954 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.56..676499.65 rows=386273 width=20) (actual time=0.112..2020.365 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.54 rows=13296 width=4) (actual time=0.076..304.417 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.63 rows=29 width=24) (actual time=0.010..0.125 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59574.29..59574.29 rows=299997 width=4) (actual time=450.249..450.251 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59574.29 rows=299997 width=4) (actual time=0.064..401.342 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=8) (actual time=0.021..248.403 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.037..0.038 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.032..0.036 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.013..0.015 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.973..36.973 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.022..21.296 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.008 rows=25 loops=1)
 Planning Time: 3.759 ms
 Execution Time: 5317.079 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1886120.21..1886120.21 rows=1 width=66) (actual time=124943.918..124943.923 rows=1 loops=1)
   ->  Sort  (cost=1886120.21..1886270.58 rows=60150 width=66) (actual time=124943.917..124943.921 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1884766.83..1885819.46 rows=60150 width=66) (actual time=124943.399..124943.842 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=1206617.22..1853954.79 rows=1760688 width=57) (actual time=113989.263..122505.073 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1206615.66..1839744.47 rows=1760688 width=31) (actual time=113989.034..121693.580 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411281.29 rows=15001329 width=8) (actual time=0.508..2485.474 rows=15000000 loops=1)
                           ->  Hash  (cost=1172571.06..1172571.06 rows=1760688 width=31) (actual time=113987.668..113987.671 rows=3248192 loops=1)
                                 Buckets: 524288 (originally 524288)  Batches: 8 (originally 4)  Memory Usage: 30530kB
                                 ->  Nested Loop  (cost=4472.00..1172571.06 rows=1760688 width=31) (actual time=45.885..112078.703 rows=3248192 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=4471.43..307298.98 rows=242392 width=26) (actual time=45.427..3024.954 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.43..302191.68 rows=242392 width=18) (actual time=0.889..2708.880 rows=433248 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.54 rows=60605 width=4) (actual time=0.494..672.553 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.72 rows=18 width=14) (actual time=0.015..0.017 rows=4 loops=108312)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.234..44.234 rows=100000 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.313..29.675 rows=100000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.038..0.248 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.219..0.219 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.202..0.207 rows=25 loops=1)
 Planning Time: 30.588 ms
 Execution Time: 124945.217 ms
(33 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1886120.21..1886120.21 rows=1 width=66) (actual time=61978.495..61978.500 rows=1 loops=1)
   ->  Sort  (cost=1886120.21..1886270.58 rows=60150 width=66) (actual time=61978.493..61978.498 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1884766.83..1885819.46 rows=60150 width=66) (actual time=61977.967..61978.414 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=1206617.22..1853954.79 rows=1760688 width=57) (actual time=51222.538..59617.615 rows=3248192 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=1206615.66..1839744.47 rows=1760688 width=31) (actual time=51222.307..58820.554 rows=3248192 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..411281.29 rows=15001329 width=8) (actual time=0.266..2334.512 rows=15000000 loops=1)
                           ->  Hash  (cost=1172571.06..1172571.06 rows=1760688 width=31) (actual time=51221.248..51221.250 rows=3248192 loops=1)
                                 Buckets: 524288 (originally 524288)  Batches: 8 (originally 4)  Memory Usage: 30530kB
                                 ->  Nested Loop  (cost=4472.00..1172571.06 rows=1760688 width=31) (actual time=44.801..49703.533 rows=3248192 loops=1)
                                       Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Hash Join  (cost=4471.43..307298.98 rows=242392 width=26) (actual time=44.516..2012.209 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                             ->  Nested Loop  (cost=0.43..302191.68 rows=242392 width=18) (actual time=0.478..1723.223 rows=433248 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.54 rows=60605 width=4) (actual time=0.302..558.378 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.72 rows=18 width=14) (actual time=0.008..0.010 rows=4 loops=108312)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.741..43.741 rows=100000 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                                   ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.294..28.458 rows=100000 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.017..0.107 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.220..0.220 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.211..0.213 rows=25 loops=1)
 Planning Time: 18.393 ms
 Execution Time: 61979.108 ms
(33 rows)

query 10 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2461123.39..2461123.44 rows=20 width=202) (actual time=20640.865..20640.872 rows=20 loops=1)
   ->  Sort  (cost=2461123.39..2462556.66 rows=573307 width=202) (actual time=20640.864..20640.869 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2430101.95..2445867.90 rows=573307 width=202) (actual time=19723.611..20525.976 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=2430101.95..2431535.22 rows=573307 width=182) (actual time=19723.595..19918.612 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=387481.79..2342514.90 rows=573307 width=182) (actual time=5797.854..18977.945 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387480.23..2340753.29 rows=573307 width=160) (actual time=5797.663..18783.338 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285556.54..2199497.68 rows=573307 width=16) (actual time=4824.407..16981.826 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1875028.80 rows=14823742 width=16) (actual time=0.706..10385.850 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278304.35..278304.35 rows=580175 width=8) (actual time=4821.966..4821.967 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8333.73..278304.35 rows=580175 width=8) (actual time=123.098..4660.265 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8188.69 rows=580175 width=0) (actual time=84.210..84.210 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50946.86..50946.86 rows=1499986 width=148) (actual time=972.682..972.682 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=148) (actual time=0.479..495.278 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.186..0.186 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.169..0.175 rows=25 loops=1)
 Planning Time: 20.969 ms
 Execution Time: 20677.851 ms
(33 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2461123.39..2461123.44 rows=20 width=202) (actual time=15183.211..15183.217 rows=20 loops=1)
   ->  Sort  (cost=2461123.39..2462556.66 rows=573307 width=202) (actual time=15183.210..15183.215 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2430101.95..2445867.90 rows=573307 width=202) (actual time=14264.999..15068.227 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=2430101.95..2431535.22 rows=573307 width=182) (actual time=14264.983..14460.695 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=387481.79..2342514.90 rows=573307 width=182) (actual time=2427.365..13516.701 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387480.23..2340753.29 rows=573307 width=160) (actual time=2427.335..13324.471 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285556.54..2199497.68 rows=573307 width=16) (actual time=1584.257..11678.039 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1875028.80 rows=14823742 width=16) (actual time=0.018..8392.186 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278304.35..278304.35 rows=580175 width=8) (actual time=1582.921..1582.922 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8333.73..278304.35 rows=580175 width=8) (actual time=111.298..1455.760 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8188.69 rows=580175 width=0) (actual time=73.013..73.013 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50946.86..50946.86 rows=1499986 width=148) (actual time=842.549..842.550 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=148) (actual time=0.012..368.810 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.025 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.019 rows=25 loops=1)
 Planning Time: 1.491 ms
 Execution Time: 15219.922 ms
(33 rows)

query 11 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625648.10..625648.10 rows=1 width=36) (actual time=3612.640..3612.645 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293130.01..293130.02 rows=1 width=32) (actual time=1521.441..1521.443 rows=1 loops=1)
           ->  Hash Join  (cost=2323.46..290730.33 rows=319957 width=10) (actual time=2.757..1433.364 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255211.31 rows=7998931 width=14) (actual time=0.034..736.571 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=2.693..2.694 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.484..2.331 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.473..1.936 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.300..0.300 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332518.08..332784.71 rows=106652 width=36) (actual time=3612.639..3612.641 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319986.43..331984.82 rows=106652 width=36) (actual time=3612.629..3612.630 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319986.43..320786.32 rows=319957 width=14) (actual time=1906.007..1918.303 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.46..290730.33 rows=319957 width=14) (actual time=40.039..1854.941 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255211.31 rows=7998931 width=18) (actual time=0.641..1065.076 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=39.341..39.342 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=2.282..38.252 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.220..0.223 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=2.055..37.340 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.703..1.703 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 17.142 ms
 Execution Time: 3613.402 ms
(43 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625648.10..625648.10 rows=1 width=36) (actual time=3174.313..3174.317 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293130.01..293130.02 rows=1 width=32) (actual time=1514.319..1514.321 rows=1 loops=1)
           ->  Hash Join  (cost=2323.46..290730.33 rows=319957 width=10) (actual time=2.776..1426.699 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255211.31 rows=7998931 width=14) (actual time=0.035..731.823 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=2.712..2.713 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.484..2.334 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.474..1.935 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.302..0.302 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332518.08..332784.71 rows=106652 width=36) (actual time=3174.312..3174.314 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319986.43..331984.82 rows=106652 width=36) (actual time=3174.304..3174.306 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319986.43..320786.32 rows=319957 width=14) (actual time=1474.704..1486.909 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.46..290730.33 rows=319957 width=14) (actual time=3.471..1425.746 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255211.31 rows=7998931 width=18) (actual time=0.028..731.889 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=3.420..3.421 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.480..3.046 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.469..2.658 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.293..0.293 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 0.923 ms
 Execution Time: 3174.375 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031736.37..3032569.01 rows=1 width=27) (actual time=18666.090..18666.092 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031736.37..3037564.90 rows=7 width=27) (actual time=18666.088..18666.090 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031736.37..3032464.92 rows=291423 width=27) (actual time=18623.230..18629.096 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478580.23..3005285.71 rows=291423 width=27) (actual time=14506.311..18548.126 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411281.29 rows=15001329 width=20) (actual time=0.508..1635.049 rows=15000000 loops=1)
                     ->  Hash  (cost=2474937.44..2474937.44 rows=291423 width=15) (actual time=14505.032..14505.032 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474937.44 rows=291423 width=15) (actual time=1.233..14406.679 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 17.800 ms
 Execution Time: 18667.103 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031736.37..3032569.01 rows=1 width=27) (actual time=15989.541..15989.543 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031736.37..3037564.90 rows=7 width=27) (actual time=15989.539..15989.542 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031736.37..3032464.92 rows=291423 width=27) (actual time=15946.562..15952.466 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478580.23..3005285.71 rows=291423 width=27) (actual time=12398.082..15875.018 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411281.29 rows=15001329 width=20) (actual time=0.021..1202.004 rows=15000000 loops=1)
                     ->  Hash  (cost=2474937.44..2474937.44 rows=291423 width=15) (actual time=12397.434..12397.435 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474937.44 rows=291423 width=15) (actual time=0.103..12303.878 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 0.652 ms
 Execution Time: 15989.647 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2595398.77..2595398.77 rows=1 width=16) (actual time=19927.428..19927.431 rows=1 loops=1)
   ->  Sort  (cost=2595398.77..2595399.27 rows=200 width=16) (actual time=19927.428..19927.430 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2595395.77..2595397.77 rows=200 width=16) (actual time=19927.408..19927.415 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2452204.94..2572895.98 rows=1499986 width=12) (actual time=15986.434..19746.553 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2452204.94..2487435.33 rows=14092158 width=8) (actual time=15986.423..18025.360 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=53284.04..655016.67 rows=14092158 width=8) (actual time=342.053..11213.081 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448784.61 rows=14092158 width=8) (actual time=0.451..5212.192 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=28674.22..28674.22 rows=1499986 width=4) (actual time=340.283..340.284 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28674.22 rows=1499986 width=4) (actual time=0.018..158.614 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 15.795 ms
 Execution Time: 19968.567 ms
(22 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2595398.77..2595398.77 rows=1 width=16) (actual time=19367.454..19367.457 rows=1 loops=1)
   ->  Sort  (cost=2595398.77..2595399.27 rows=200 width=16) (actual time=19367.454..19367.456 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2595395.77..2595397.77 rows=200 width=16) (actual time=19367.434..19367.442 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2452204.94..2572895.98 rows=1499986 width=12) (actual time=15379.325..19184.074 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2452204.94..2487435.33 rows=14092158 width=8) (actual time=15379.314..17434.586 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=53284.04..655016.67 rows=14092158 width=8) (actual time=307.179..10633.693 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448784.61 rows=14092158 width=8) (actual time=0.032..4759.598 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=28674.22..28674.22 rows=1499986 width=4) (actual time=305.822..305.822 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28674.22 rows=1499986 width=4) (actual time=0.018..127.347 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 0.594 ms
 Execution Time: 19407.859 ms
(22 rows)

query 14 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1328695.17..1328695.18 rows=1 width=32) (actual time=8073.276..8073.279 rows=1 loops=1)
   ->  Aggregate  (cost=1328695.17..1328695.18 rows=1 width=32) (actual time=8073.274..8073.276 rows=1 loops=1)
         ->  Hash Join  (cost=112508.42..1315099.12 rows=776917 width=33) (actual time=1084.953..7744.415 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12856.26..1191835.26 rows=802165 width=16) (actual time=219.524..6212.778 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12655.72 rows=802165 width=0) (actual time=144.525..144.525 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.63..60980.63 rows=1999963 width=25) (actual time=864.345..864.345 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.63 rows=1999963 width=25) (actual time=0.729..542.946 rows=2000000 loops=1)
 Planning Time: 16.974 ms
 Execution Time: 8074.248 ms
(14 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1328695.17..1328695.18 rows=1 width=32) (actual time=3943.597..3943.600 rows=1 loops=1)
   ->  Aggregate  (cost=1328695.17..1328695.18 rows=1 width=32) (actual time=3943.596..3943.598 rows=1 loops=1)
         ->  Hash Join  (cost=112508.42..1315099.12 rows=776917 width=33) (actual time=910.924..3640.395 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12856.26..1191835.26 rows=802165 width=16) (actual time=205.627..2355.512 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12655.72 rows=802165 width=0) (actual time=131.011..131.011 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.63..60980.63 rows=1999963 width=25) (actual time=704.854..704.855 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.63 rows=1999963 width=25) (actual time=0.022..391.038 rows=2000000 loops=1)
 Planning Time: 0.888 ms
 Execution Time: 3943.888 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4014202.30..4014301.18 rows=1 width=103) (actual time=21423.362..21423.367 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1885711.60..1885711.61 rows=1 width=32) (actual time=6158.623..6158.625 rows=1 loops=1)
           ->  HashAggregate  (cost=1883234.48..1884473.04 rows=99085 width=36) (actual time=6115.323..6152.412 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36852.47..1860238.48 rows=2299600 width=16) (actual time=348.989..4694.328 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36277.57 rows=2299600 width=0) (actual time=277.460..277.461 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2128490.69..2177435.29 rows=495 width=103) (actual time=21423.361..21423.362 rows=1 loops=1)
         ->  GroupAggregate  (cost=2128490.40..2176216.39 rows=495 width=36) (actual time=21422.942..21422.943 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2128490.40..2134239.40 rows=2299600 width=16) (actual time=14571.453..14752.902 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=36852.47..1860238.48 rows=2299600 width=16) (actual time=410.563..13474.815 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36277.57 rows=2299600 width=0) (actual time=338.053..338.053 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71) (actual time=0.413..0.413 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.422 ms
 Execution Time: 21431.909 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4014202.30..4014301.18 rows=1 width=103) (actual time=12917.310..12917.313 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1885711.60..1885711.61 rows=1 width=32) (actual time=6142.042..6142.043 rows=1 loops=1)
           ->  HashAggregate  (cost=1883234.48..1884473.04 rows=99085 width=36) (actual time=6098.807..6135.823 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36852.47..1860238.48 rows=2299600 width=16) (actual time=348.056..4682.614 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36277.57 rows=2299600 width=0) (actual time=276.698..276.699 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2128490.69..2177435.29 rows=495 width=103) (actual time=12917.309..12917.310 rows=1 loops=1)
         ->  GroupAggregate  (cost=2128490.40..2176216.39 rows=495 width=36) (actual time=12917.272..12917.273 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2128490.40..2134239.40 rows=2299600 width=16) (actual time=6085.358..6265.912 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=36852.47..1860238.48 rows=2299600 width=16) (actual time=374.596..5241.039 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36277.57 rows=2299600 width=0) (actual time=302.965..302.965 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71) (actual time=0.032..0.033 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.930 ms
 Execution Time: 12927.575 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359310.98..359310.98 rows=1 width=44) (actual time=6574.248..6574.251 rows=1 loops=1)
   ->  Sort  (cost=359310.98..359696.53 rows=154218 width=44) (actual time=6574.247..6574.250 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=349517.65..358539.89 rows=154218 width=44) (actual time=5902.225..6568.101 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=349517.65..351013.66 rows=598405 width=40) (actual time=5902.177..6280.281 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98192.00..281577.41 rows=598405 width=40) (actual time=812.927..3089.963 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176358.25 rows=3999466 width=8) (actual time=36.662..1518.768 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.166..36.319 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.08..90980.08 rows=299237 width=40) (actual time=775.579..775.579 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.08 rows=299237 width=40) (actual time=0.633..705.050 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 15.832 ms
 Execution Time: 6583.245 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359310.98..359310.98 rows=1 width=44) (actual time=6070.489..6070.492 rows=1 loops=1)
   ->  Sort  (cost=359310.98..359696.53 rows=154218 width=44) (actual time=6070.488..6070.490 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=349517.65..358539.89 rows=154218 width=44) (actual time=5398.688..6064.030 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=349517.65..351013.66 rows=598405 width=40) (actual time=5398.638..5777.004 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98192.00..281577.41 rows=598405 width=40) (actual time=499.006..2592.534 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176358.25 rows=3999466 width=8) (actual time=20.406..1324.908 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.090..20.366 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.08..90980.08 rows=299237 width=40) (actual time=477.967..477.967 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.08 rows=299237 width=40) (actual time=0.013..416.611 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 0.735 ms
 Execution Time: 6078.486 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10824887.82..10824887.84 rows=1 width=32) (actual time=50751.463..50751.465 rows=1 loops=1)
   ->  Aggregate  (cost=10824887.82..10824887.84 rows=1 width=32) (actual time=50751.462..50751.463 rows=1 loops=1)
         ->  Merge Join  (cost=10134425.43..10824836.93 rows=20357 width=8) (actual time=28483.707..50749.884 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10134424.44..10615330.29 rows=2064958 width=36) (actual time=28475.018..48288.273 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10134424.44..10284401.60 rows=59990864 width=9) (actual time=28474.997..39511.255 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1115736kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725051.64 rows=59990864 width=9) (actual time=0.422..9121.714 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..182773.78 rows=59150 width=21) (actual time=2.505..2288.815 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..182625.90 rows=59150 width=21) (actual time=2.501..2268.275 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89211.69 rows=2036 width=4) (actual time=1.431..638.668 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.59 rows=29 width=17) (actual time=0.558..0.807 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 16.926 ms
 Execution Time: 50877.410 ms
(21 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10824887.82..10824887.84 rows=1 width=32) (actual time=46908.781..46908.783 rows=1 loops=1)
   ->  Aggregate  (cost=10824887.82..10824887.84 rows=1 width=32) (actual time=46908.780..46908.781 rows=1 loops=1)
         ->  Merge Join  (cost=10134425.43..10824836.93 rows=20357 width=8) (actual time=26494.589..46908.006 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10134424.44..10615330.29 rows=2064958 width=36) (actual time=26488.338..46335.047 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10134424.44..10284401.60 rows=59990864 width=9) (actual time=26488.317..37569.955 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1115736kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725051.64 rows=59990864 width=9) (actual time=0.037..7341.335 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..182773.78 rows=59150 width=21) (actual time=0.148..412.866 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..182625.90 rows=59150 width=21) (actual time=0.145..402.661 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89211.69 rows=2036 width=4) (actual time=0.134..352.312 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..45.59 rows=29 width=17) (actual time=0.004..0.020 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 1.076 ms
 Execution Time: 47034.325 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10575232.43..10575232.68 rows=100 width=71) (actual time=40137.420..40137.433 rows=99 loops=1)
   ->  Sort  (cost=10575232.43..10625212.78 rows=19992140 width=71) (actual time=40137.419..40137.426 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9361324.07..9811147.22 rows=19992140 width=71) (actual time=40137.148..40137.346 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9361324.07..9411304.42 rows=19992140 width=44) (actual time=40137.137..40137.165 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78553.90..6541630.00 rows=19992140 width=44) (actual time=4234.761..40136.895 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=68.21..6128543.80 rows=19992140 width=25) (actual time=964.968..39360.931 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..3494618.66 rows=4999239 width=24) (actual time=737.316..28318.645 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..547985.37 rows=15001329 width=20) (actual time=0.457..2812.327 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796647.09 rows=4999239 width=4) (actual time=635.140..24681.473 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271727.02 rows=59990864 width=9) (actual time=0.497..11952.080 rows=59986052 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271727.02 rows=59990864 width=9) (actual time=0.010..7782.192 rows=59916431 loops=1)
                           ->  Hash  (cost=50946.86..50946.86 rows=1499986 width=23) (actual time=673.698..673.699 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=23) (actual time=0.778..421.635 rows=1500000 loops=1)
 Planning Time: 19.147 ms
 Execution Time: 40138.378 ms
(27 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10575232.43..10575232.68 rows=100 width=71) (actual time=36715.152..36715.165 rows=99 loops=1)
   ->  Sort  (cost=10575232.43..10625212.78 rows=19992140 width=71) (actual time=36715.150..36715.158 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9361324.07..9811147.22 rows=19992140 width=71) (actual time=36714.908..36715.078 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9361324.07..9411304.42 rows=19992140 width=44) (actual time=36714.898..36714.926 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78553.90..6541630.00 rows=19992140 width=44) (actual time=3621.744..36714.652 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=68.21..6128543.80 rows=19992140 width=25) (actual time=830.054..36077.438 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..3494618.66 rows=4999239 width=24) (actual time=595.639..24937.534 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..547985.37 rows=15001329 width=20) (actual time=0.016..2198.485 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796647.09 rows=4999239 width=4) (actual time=521.361..21939.853 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271727.02 rows=59990864 width=9) (actual time=0.011..9482.218 rows=59986052 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271727.02 rows=59990864 width=9) (actual time=0.009..7883.892 rows=59916431 loops=1)
                           ->  Hash  (cost=50946.86..50946.86 rows=1499986 width=23) (actual time=535.126..535.126 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50946.86 rows=1499986 width=23) (actual time=0.024..290.455 rows=1500000 loops=1)
 Planning Time: 1.530 ms
 Execution Time: 36715.277 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=355425.83..355425.84 rows=1 width=32) (actual time=23019.875..23019.877 rows=1 loops=1)
   ->  Aggregate  (cost=355425.83..355425.84 rows=1 width=32) (actual time=23019.874..23019.875 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..355417.46 rows=1115 width=12) (actual time=61.186..23016.749 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125979.43 rows=4836 width=30) (actual time=1.268..792.458 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.43 rows=1 width=21) (actual time=4.194..4.647 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 16.819 ms
 Execution Time: 23020.959 ms
(12 rows)

SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=355425.83..355425.84 rows=1 width=32) (actual time=570.495..570.496 rows=1 loops=1)
   ->  Aggregate  (cost=355425.83..355425.84 rows=1 width=32) (actual time=570.494..570.495 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..355417.46 rows=1115 width=12) (actual time=1.355..569.829 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125979.43 rows=4836 width=30) (actual time=0.191..412.631 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.43 rows=1 width=21) (actual time=0.029..0.032 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 0.858 ms
 Execution Time: 570.760 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3551516.41..3551516.41 rows=1 width=51) (actual time=51566.256..51566.260 rows=1 loops=1)
   ->  Sort  (cost=3551516.41..3551516.41 rows=1 width=51) (actual time=51566.254..51566.258 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3142519.24..3551516.40 rows=1 width=51) (actual time=27617.922..51564.479 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.507..23.630 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.173..0.176 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.327..15.822 rows=100000 loops=1)
               ->  Materialize  (cost=3142519.24..3546864.09 rows=3 width=8) (actual time=6.261..10.215 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3142519.24..3546864.08 rows=3 width=8) (actual time=25637.062..35796.995 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3142518.38..3305937.93 rows=4837898 width=40) (actual time=25635.051..31105.463 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3142518.38..3165231.15 rows=9085108 width=13) (actual time=25635.039..27424.770 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=145591.42..1992691.49 rows=9085108 width=13) (actual time=1229.228..21927.406 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..143320.15 rows=9085108 width=0) (actual time=1125.487..1125.487 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.86..160338.63 rows=80799 width=16) (actual time=1.687..4349.851 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.86..160136.64 rows=80799 width=16) (actual time=1.684..4310.874 rows=86872 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.43..84211.78 rows=20202 width=4) (actual time=0.825..452.380 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.163..0.176 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 22.588 ms
 Execution Time: 51590.473 ms
(39 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3551516.41..3551516.41 rows=1 width=51) (actual time=34388.230..34388.234 rows=1 loops=1)
   ->  Sort  (cost=3551516.41..3551516.41 rows=1 width=51) (actual time=34388.229..34388.232 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3142519.24..3551516.40 rows=1 width=51) (actual time=13925.073..34386.516 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.027..19.345 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.005..12.161 rows=100000 loops=1)
               ->  Materialize  (cost=3142519.24..3546864.09 rows=3 width=8) (actual time=3.132..6.029 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3142519.24..3546864.08 rows=3 width=8) (actual time=12827.258..18671.964 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3142518.38..3305937.93 rows=4837898 width=40) (actual time=12826.845..17839.764 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3142518.38..3165231.15 rows=9085108 width=13) (actual time=12826.830..14465.020 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=145591.42..1992691.49 rows=9085108 width=13) (actual time=1085.889..9391.404 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..143320.15 rows=9085108 width=0) (actual time=982.790..982.790 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.86..160338.63 rows=80799 width=16) (actual time=0.092..544.161 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.86..160136.64 rows=80799 width=16) (actual time=0.089..521.467 rows=86872 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.43..84211.78 rows=20202 width=4) (actual time=0.066..352.100 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.006..0.007 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 2.233 ms
 Execution Time: 34414.041 ms
(39 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3766259.50..3766259.51 rows=1 width=34) (actual time=26751.474..26751.489 rows=100 loops=1)
   ->  Sort  (cost=3766259.50..3766259.51 rows=1 width=34) (actual time=26751.473..26751.481 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3766259.47..3766259.49 rows=1 width=34) (actual time=26744.586..26750.279 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3766259.47..3766259.48 rows=1 width=26) (actual time=26744.576..26746.091 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976589.23..3766259.46 rows=1 width=26) (actual time=15357.170..26573.912 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976588.66..3766255.82 rows=1 width=38) (actual time=15356.588..26426.489 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976588.10..2519689.20 rows=388208 width=38) (actual time=15354.885..20014.645 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448784.61 rows=7280645 width=4) (actual time=0.493..2421.897 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960339.62..1960339.62 rows=799878 width=34) (actual time=15353.510..15353.513 rows=1514267 loops=1)
                                             Buckets: 524288  Batches: 4  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2323.46..1960339.62 rows=799878 width=34) (actual time=39.241..14965.150 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1875028.80 rows=19996955 width=8) (actual time=0.445..11654.451 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30) (actual time=38.728..38.730 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30) (actual time=2.132..37.589 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.183..0.186 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34) (actual time=1.942..36.672 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.456..1.456 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 21.808 ms
 Execution Time: 26752.378 ms
(44 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3766259.50..3766259.51 rows=1 width=34) (actual time=22070.574..22070.590 rows=100 loops=1)
   ->  Sort  (cost=3766259.50..3766259.51 rows=1 width=34) (actual time=22070.573..22070.582 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3766259.47..3766259.49 rows=1 width=34) (actual time=22063.670..22069.370 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3766259.47..3766259.48 rows=1 width=26) (actual time=22063.660..22065.128 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976589.23..3766259.46 rows=1 width=26) (actual time=13058.195..21893.878 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976588.66..3766255.82 rows=1 width=38) (actual time=13057.766..21751.421 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976588.10..2519689.20 rows=388208 width=38) (actual time=13057.338..17173.000 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448784.61 rows=7280645 width=4) (actual time=0.023..1926.169 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960339.62..1960339.62 rows=799878 width=34) (actual time=13056.510..13056.512 rows=1514267 loops=1)
                                             Buckets: 524288  Batches: 4  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2323.46..1960339.62 rows=799878 width=34) (actual time=14.570..12713.438 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1875028.80 rows=19996955 width=8) (actual time=0.029..9810.985 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30) (actual time=14.508..14.509 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30) (actual time=0.599..13.636 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34) (actual time=0.583..13.054 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.394..0.394 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.933 ms
 Execution Time: 22070.766 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161602.88..161602.91 rows=1 width=72) (actual time=2312.910..2312.912 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.96..75440.97 rows=1 width=32) (actual time=1015.569..1015.570 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75321.63 rows=47729 width=6) (actual time=0.017..978.237 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86161.92..86380.84 rows=7961 width=72) (actual time=2312.908..2312.909 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86161.92..86181.82 rows=7961 width=38) (actual time=2311.069..2311.394 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85646.09 rows=7961 width=38) (actual time=1016.088..2289.896 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75321.63 rows=17500 width=26) (actual time=1016.065..1586.465 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 14.889 ms
 Execution Time: 2313.556 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161602.88..161602.91 rows=1 width=72) (actual time=1662.185..1662.186 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.96..75440.97 rows=1 width=32) (actual time=755.644..755.645 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75321.63 rows=47729 width=6) (actual time=0.007..722.872 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86161.92..86380.84 rows=7961 width=72) (actual time=1662.184..1662.184 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86161.92..86181.82 rows=7961 width=38) (actual time=1660.325..1660.648 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85646.09 rows=7961 width=38) (actual time=755.683..1642.523 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75321.63 rows=17500 width=26) (actual time=755.668..1277.268 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.643 ms
 Execution Time: 1662.231 ms
(20 rows)

