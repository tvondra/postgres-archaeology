query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184193.85..184194.49 rows=1 width=236) (actual time=1975.285..1976.969 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184193.85..184197.67 rows=6 width=236) (actual time=1975.283..1976.967 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184193.85..184196.73 rows=24 width=236) (actual time=1975.259..1976.946 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183193.80..183193.81 rows=6 width=236) (actual time=1964.172..1964.173 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183193.58..183193.72 rows=6 width=236) (actual time=1964.132..1964.137 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=1482293 width=25) (actual time=0.120..507.470 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 11.984 ms
 Execution Time: 1978.950 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184193.85..184194.49 rows=1 width=236) (actual time=1802.726..1803.124 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184193.85..184197.67 rows=6 width=236) (actual time=1802.725..1803.122 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184193.85..184196.73 rows=24 width=236) (actual time=1802.705..1803.104 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183193.80..183193.81 rows=6 width=236) (actual time=1797.714..1797.715 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183193.58..183193.72 rows=6 width=236) (actual time=1797.684..1797.689 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=1482293 width=25) (actual time=0.030..242.063 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.542 ms
 Execution Time: 1803.192 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47765.70..47765.70 rows=1 width=192) (actual time=385.953..386.052 rows=100 loops=1)
   ->  Sort  (cost=47765.70..47765.70 rows=1 width=192) (actual time=385.952..386.045 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=33941.05..47765.69 rows=1 width=192) (actual time=330.653..385.659 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6439.80 rows=908 width=30) (actual time=1.506..1.797 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=378 width=30) (actual time=0.901..32.588 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30541.05..30541.05 rows=160000 width=172) (actual time=328.425..328.429 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30541.05 rows=160000 width=172) (actual time=6.815..270.905 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.455..155.948 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.352..6.355 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.696..5.652 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.287..4.046 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.405..0.406 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.389..0.396 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.185..0.187 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.189..0.190 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.182..0.184 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.042..0.042 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.035..0.040 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.028..0.038 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.026..0.033 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.024..0.025 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 21.171 ms
 Execution Time: 386.716 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47765.70..47765.70 rows=1 width=192) (actual time=247.405..247.502 rows=100 loops=1)
   ->  Sort  (cost=47765.70..47765.70 rows=1 width=192) (actual time=247.404..247.495 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=33941.05..47765.69 rows=1 width=192) (actual time=225.191..247.148 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6439.80 rows=908 width=30) (actual time=0.268..0.458 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=378 width=30) (actual time=0.038..13.251 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30541.05..30541.05 rows=160000 width=172) (actual time=224.501..224.504 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30541.05 rows=160000 width=172) (actual time=2.929..169.365 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.008..51.006 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.913..2.916 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.041..2.220 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.737 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.036..0.037 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.030..0.036 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.008 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.822 ms
 Execution Time: 247.639 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234444.49..234444.52 rows=10 width=44) (actual time=1125.208..1127.698 rows=10 loops=1)
   ->  Sort  (cost=234444.49..235248.52 rows=321610 width=44) (actual time=1125.207..1127.696 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180142.48..227494.61 rows=321610 width=44) (actual time=1103.100..1125.329 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180142.48..218650.34 rows=321610 width=24) (actual time=1103.086..1109.841 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179142.42..179343.43 rows=80402 width=24) (actual time=1091.644..1091.916 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 471kB
                           Worker 0:  Sort Method: quicksort  Memory: 461kB
                           Worker 1:  Sort Method: quicksort  Memory: 470kB
                           Worker 2:  Sort Method: quicksort  Memory: 457kB
                           Worker 3:  Sort Method: quicksort  Memory: 476kB
                           ->  Parallel Hash Join  (cost=37925.37..172591.69 rows=80402 width=24) (actual time=246.702..1089.931 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=824980 width=16) (actual time=0.509..773.739 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37335.90..37335.90 rows=47158 width=12) (actual time=244.883..244.886 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4533.49..37335.90 rows=47158 width=12) (actual time=25.099..236.605 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=237333 width=16) (actual time=0.449..183.404 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12419 width=4) (actual time=24.532..24.533 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12419 width=4) (actual time=0.139..22.951 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 19.390 ms
 Execution Time: 1128.856 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234444.49..234444.52 rows=10 width=44) (actual time=423.582..424.991 rows=10 loops=1)
   ->  Sort  (cost=234444.49..235248.52 rows=321610 width=44) (actual time=423.581..424.988 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180142.48..227494.61 rows=321610 width=44) (actual time=401.575..422.631 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180142.48..218650.34 rows=321610 width=24) (actual time=401.561..407.175 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179142.42..179343.43 rows=80402 width=24) (actual time=396.727..396.993 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 428kB
                           Worker 0:  Sort Method: quicksort  Memory: 471kB
                           Worker 1:  Sort Method: quicksort  Memory: 436kB
                           Worker 2:  Sort Method: quicksort  Memory: 529kB
                           Worker 3:  Sort Method: quicksort  Memory: 471kB
                           ->  Parallel Hash Join  (cost=37925.37..172591.69 rows=80402 width=24) (actual time=92.345..395.368 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.33 rows=824980 width=16) (actual time=0.053..220.167 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37335.90..37335.90 rows=47158 width=12) (actual time=90.924..90.927 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4533.49..37335.90 rows=47158 width=12) (actual time=8.732..80.281 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=237333 width=16) (actual time=0.012..43.891 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12419 width=4) (actual time=7.962..7.963 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12419 width=4) (actual time=0.016..5.875 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.054 ms
 Execution Time: 425.055 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29451.03..64059.81 rows=1 width=24) (actual time=2841.355..2846.250 rows=1 loops=1)
   ->  GroupAggregate  (cost=29451.03..202494.93 rows=5 width=24) (actual time=2841.354..2846.248 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29451.03..202200.31 rows=58914 width=16) (actual time=424.046..2838.328 rows=10479 loops=1)
               ->  Gather Merge  (cost=29450.60..36420.51 rows=58914 width=20) (actual time=423.174..439.101 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28450.56..28498.07 rows=19005 width=20) (actual time=415.342..415.783 rows=3800 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 928kB
                           Worker 0:  Sort Method: quicksort  Memory: 918kB
                           Worker 1:  Sort Method: quicksort  Memory: 935kB
                           Worker 2:  Sort Method: quicksort  Memory: 943kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=683.80..27099.86 rows=19005 width=20) (actual time=4.886..410.031 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5704
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..669.07 rows=58914 width=0) (actual time=7.313..7.313 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.209..0.209 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 14.666 ms
 Execution Time: 2846.812 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29451.03..64059.81 rows=1 width=24) (actual time=76.275..81.817 rows=1 loops=1)
   ->  GroupAggregate  (cost=29451.03..202494.93 rows=5 width=24) (actual time=76.274..81.815 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29451.03..202200.31 rows=58914 width=16) (actual time=33.345..80.210 rows=10479 loops=1)
               ->  Gather Merge  (cost=29450.60..36420.51 rows=58914 width=20) (actual time=33.299..41.702 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28450.56..28498.07 rows=19005 width=20) (actual time=29.856..30.117 rows=3781 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 934kB
                           Worker 0:  Sort Method: quicksort  Memory: 932kB
                           Worker 1:  Sort Method: quicksort  Memory: 927kB
                           Worker 2:  Sort Method: quicksort  Memory: 930kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=683.80..27099.86 rows=19005 width=20) (actual time=6.017..26.607 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5830
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..669.07 rows=58914 width=0) (actual time=5.595..5.595 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.857 ms
 Execution Time: 81.875 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84486.72..84486.72 rows=1 width=58) (actual time=2295.030..2304.930 rows=1 loops=1)
   ->  Sort  (cost=84486.72..84486.78 rows=25 width=58) (actual time=2295.029..2304.929 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84447.16..84486.59 rows=25 width=58) (actual time=2294.503..2304.918 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84447.16..84485.72 rows=75 width=58) (actual time=2294.307..2304.899 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83447.12..83476.87 rows=25 width=58) (actual time=2284.211..2284.942 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83447.12..83453.00 rows=2355 width=38) (actual time=2284.022..2284.105 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 149kB
                                 Worker 0:  Sort Method: quicksort  Memory: 156kB
                                 Worker 1:  Sort Method: quicksort  Memory: 146kB
                                 Worker 2:  Sort Method: quicksort  Memory: 156kB
                                 ->  Hash Join  (cost=7862.54..83315.22 rows=2355 width=38) (actual time=53.212..2282.368 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7389.54..82532.33 rows=59026 width=50) (actual time=46.789..2264.156 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7389.10..34964.77 rows=14754 width=38) (actual time=46.390..293.265 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2648.97..29886.52 rows=73770 width=8) (actual time=19.836..239.570 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6403
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2591.80 rows=228687 width=0) (actual time=15.754..15.754 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=26.372..26.374 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.260..24.128 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.136..19.589 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.117..0.118 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.111..0.116 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.054..0.055 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.164..0.172 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.158..4.159 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.090..2.218 rows=10000 loops=4)
 Planning Time: 23.806 ms
 Execution Time: 2305.023 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84486.72..84486.72 rows=1 width=58) (actual time=145.025..158.739 rows=1 loops=1)
   ->  Sort  (cost=84486.72..84486.78 rows=25 width=58) (actual time=145.024..158.737 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84447.16..84486.59 rows=25 width=58) (actual time=144.486..158.726 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84447.16..84485.72 rows=75 width=58) (actual time=144.269..158.708 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83447.12..83476.87 rows=25 width=58) (actual time=140.258..140.975 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83447.12..83453.00 rows=2355 width=38) (actual time=140.070..140.155 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 150kB
                                 Worker 0:  Sort Method: quicksort  Memory: 152kB
                                 Worker 1:  Sort Method: quicksort  Memory: 153kB
                                 Worker 2:  Sort Method: quicksort  Memory: 151kB
                                 ->  Hash Join  (cost=7862.54..83315.22 rows=2355 width=38) (actual time=31.132..139.272 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7389.54..82532.33 rows=59026 width=50) (actual time=27.657..127.662 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7389.10..34964.77 rows=14754 width=38) (actual time=27.630..68.038 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2648.97..29886.52 rows=73770 width=8) (actual time=16.208..42.008 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6552
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2591.80 rows=228687 width=0) (actual time=12.490..12.491 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.257..11.260 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.052..9.155 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.011..3.606 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.035..0.037 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.029..0.035 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.013..0.015 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.355..3.356 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.463 rows=10000 loops=4)
 Planning Time: 4.269 ms
 Execution Time: 158.824 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106823.30..106823.31 rows=1 width=32) (actual time=1070.088..1076.931 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106823.30..106823.31 rows=1 width=32) (actual time=1070.087..1076.929 rows=1 loops=1)
         ->  Gather  (cost=106822.86..106823.27 rows=4 width=32) (actual time=1069.475..1076.916 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105822.86..105822.87 rows=1 width=32) (actual time=1060.776..1060.777 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21074.92..105675.65 rows=29442 width=12) (actual time=130.309..1044.824 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13296
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21045.48 rows=117767 width=0) (actual time=125.950..125.950 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.845 ms
 Execution Time: 1078.269 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106823.30..106823.31 rows=1 width=32) (actual time=195.815..204.310 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106823.30..106823.31 rows=1 width=32) (actual time=195.814..204.307 rows=1 loops=1)
         ->  Gather  (cost=106822.86..106823.27 rows=4 width=32) (actual time=195.562..204.294 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105822.86..105822.87 rows=1 width=32) (actual time=190.014..190.015 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21074.92..105675.65 rows=29442 width=12) (actual time=103.462..183.322 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12408
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21045.48 rows=117767 width=0) (actual time=95.360..95.361 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.496 ms
 Execution Time: 204.359 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141508.96..141667.34 rows=1 width=116) (actual time=3280.275..3283.445 rows=1 loops=1)
   ->  GroupAggregate  (cost=141508.96..1118205.86 rows=6167 width=116) (actual time=3280.274..3283.443 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141508.96..1118020.85 rows=6167 width=96) (actual time=843.686..3280.575 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32681
               ->  Nested Loop  (cost=141508.54..639450.93 rows=154179 width=76) (actual time=833.665..2692.317 rows=34040 loops=1)
                     ->  Gather Merge  (cost=141508.12..159968.68 rows=154179 width=76) (actual time=832.755..873.746 rows=34040 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140508.06..140604.42 rows=38545 width=76) (actual time=819.163..820.033 rows=7224 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3658kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3772kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3632kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3734kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3744kB
                                 ->  Hash Join  (cost=381.77..137572.03 rows=38545 width=76) (actual time=3.660..795.619 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.99 rows=464259 width=24) (actual time=0.702..744.025 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.863..2.867 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.223..2.689 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.143..1.527 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.075..0.078 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.064..0.073 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.049..0.052 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.006 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.053..0.053 rows=1 loops=34040)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=34040)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 23.974 ms
 Execution Time: 3283.906 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141508.96..141667.34 rows=1 width=116) (actual time=485.589..487.543 rows=1 loops=1)
   ->  GroupAggregate  (cost=141508.96..1118205.86 rows=6167 width=116) (actual time=485.588..487.541 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141508.96..1118020.85 rows=6167 width=96) (actual time=315.044..486.410 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32704
               ->  Nested Loop  (cost=141508.54..639450.93 rows=154179 width=76) (actual time=314.776..411.519 rows=34063 loops=1)
                     ->  Gather Merge  (cost=141508.12..159968.68 rows=154179 width=76) (actual time=314.725..334.169 rows=34063 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140508.06..140604.42 rows=38545 width=76) (actual time=305.608..306.264 rows=7237 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4063kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4087kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3701kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3365kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3324kB
                                 ->  Hash Join  (cost=381.77..137572.03 rows=38545 width=76) (actual time=2.242..279.044 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.99 rows=464259 width=24) (actual time=0.051..227.878 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.087..2.091 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.046..1.912 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..0.691 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.030..0.033 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.021..0.028 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34063)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34063)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.871 ms
 Execution Time: 487.629 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41967.56..42353.40 rows=1 width=64) (actual time=4779.493..4784.774 rows=1 loops=1)
   ->  GroupAggregate  (cost=41967.56..967594.82 rows=2399 width=64) (actual time=4779.492..4784.772 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41967.56..967498.86 rows=2399 width=70) (actual time=253.616..4782.123 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=41967.56..966625.15 rows=2399 width=20) (actual time=253.572..4777.756 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41967.27..959568.07 rows=2405 width=20) (actual time=253.366..4735.401 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41966.84..345278.15 rows=362413 width=24) (actual time=244.889..3664.885 rows=182929 loops=1)
                                 ->  Gather Merge  (cost=41966.41..52683.44 rows=90587 width=8) (actual time=243.858..280.660 rows=45646 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40966.37..41039.43 rows=29222 width=8) (actual time=234.217..235.426 rows=12608 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1464kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1485kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1508kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1466kB
                                             ->  Parallel Hash Join  (cost=4740.13..38798.86 rows=29222 width=8) (actual time=24.538..228.548 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146108 width=12) (actual time=0.479..176.450 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=23.844..23.847 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.275..22.045 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.143..17.587 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.125..0.127 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.120..0.126 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.052..0.054 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.063..0.064 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.057..0.058 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.068..0.073 rows=4 loops=45646)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=182929)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62937  Misses: 119992  Evictions: 0  Overflows: 0  Memory Usage: 7997kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=119992)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.033..0.033 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.021 rows=25 loops=1)
 Planning Time: 27.631 ms
 Execution Time: 4784.865 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41967.56..42353.40 rows=1 width=64) (actual time=629.937..634.100 rows=1 loops=1)
   ->  GroupAggregate  (cost=41967.56..967594.82 rows=2399 width=64) (actual time=629.935..634.098 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41967.56..967498.86 rows=2399 width=70) (actual time=93.818..632.955 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14804
               ->  Nested Loop  (cost=41967.56..966625.15 rows=2399 width=20) (actual time=93.799..630.544 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41967.27..959568.07 rows=2405 width=20) (actual time=93.785..627.154 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41966.84..345278.15 rows=362413 width=24) (actual time=92.455..281.771 rows=182883 loops=1)
                                 ->  Gather Merge  (cost=41966.41..52683.44 rows=90587 width=8) (actual time=92.409..113.064 rows=45636 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40966.37..41039.43 rows=29222 width=8) (actual time=88.790..89.632 rows=12444 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1475kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1479kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1491kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1478kB
                                             ->  Parallel Hash Join  (cost=4740.13..38798.86 rows=29222 width=8) (actual time=11.073..83.402 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146108 width=12) (actual time=0.012..50.502 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.836..10.839 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.051..9.043 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.011..3.595 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.036..0.038 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.031..0.037 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45636)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182883)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62910  Misses: 119973  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119973)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.016 rows=25 loops=1)
 Planning Time: 5.007 ms
 Execution Time: 634.197 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=53888.12..53902.37 rows=1 width=90) (actual time=4713.743..4718.658 rows=1 loops=1)
   ->  GroupAggregate  (cost=53888.12..910637.90 rows=60150 width=90) (actual time=4713.742..4718.656 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=53888.12..905502.96 rows=241868 width=81) (actual time=4712.872..4717.842 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=18530.17..886467.45 rows=241868 width=81) (actual time=298.161..4691.546 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=241868 width=53) (actual time=297.089..2583.928 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=295.742..303.441 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=288.391..288.537 rows=1153 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1403kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1407kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1404kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=5.126..279.340 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=4.755..275.875 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=1.110..266.496 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.114..29.974 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.061..0.064 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.626..3.627 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.128..2.446 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.289..0.290 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.078..0.081 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.282..1.251 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.152..0.152 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 30.319 ms
 Execution Time: 4720.333 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=53888.12..53902.37 rows=1 width=90) (actual time=126.416..130.144 rows=1 loops=1)
   ->  GroupAggregate  (cost=53888.12..910637.90 rows=60150 width=90) (actual time=126.415..130.142 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=53888.12..905502.96 rows=241868 width=81) (actual time=125.559..129.340 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=18530.17..886467.45 rows=241868 width=81) (actual time=51.322..121.907 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=241868 width=53) (actual time=51.311..75.511 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=51.280..55.963 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=47.971..48.065 rows=1104 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1475kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1365kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1373kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=2.902..39.734 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=2.657..36.887 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.036..30.133 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.016..13.369 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.610..2.611 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.020..1.437 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.175..0.175 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.745 ms
 Execution Time: 130.242 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102495.59..102495.64 rows=20 width=202) (actual time=2116.756..2121.531 rows=20 loops=1)
   ->  Sort  (cost=102495.59..102639.50 rows=57564 width=202) (actual time=2116.754..2121.527 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=100244.28..100963.83 rows=57564 width=202) (actual time=2085.697..2110.100 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6681.73..99524.73 rows=57564 width=182) (actual time=63.592..1975.035 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5681.73..92768.33 rows=18569 width=182) (actual time=53.821..2029.061 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5680.17..92709.76 rows=18569 width=160) (actual time=53.677..2019.194 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=676.92..87657.77 rows=18569 width=16) (actual time=13.721..1957.323 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=676.48..27089.81 rows=18822 width=8) (actual time=12.898..225.546 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4852
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..661.90 rows=58347 width=0) (actual time=9.050..9.050 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.116..0.120 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=39.483..39.483 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.130..18.373 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.070..0.071 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.060..0.063 rows=25 loops=4)
 Planning Time: 20.398 ms
 Execution Time: 2122.790 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102495.59..102495.64 rows=20 width=202) (actual time=217.182..221.394 rows=20 loops=1)
   ->  Sort  (cost=102495.59..102639.50 rows=57564 width=202) (actual time=217.180..221.391 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=100244.28..100963.83 rows=57564 width=202) (actual time=185.793..209.915 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6681.73..99524.73 rows=57564 width=182) (actual time=41.974..108.041 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5681.73..92768.33 rows=18569 width=182) (actual time=38.708..149.584 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5680.17..92709.76 rows=18569 width=160) (actual time=38.616..143.115 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=676.92..87657.77 rows=18569 width=16) (actual time=10.739..101.663 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=676.48..27089.81 rows=18822 width=8) (actual time=10.701..27.498 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2294
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..661.90 rows=58347 width=0) (actual time=7.354..7.354 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.475..27.476 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.008..7.629 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.024 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=4)
 Planning Time: 1.526 ms
 Execution Time: 221.751 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.20..15992.20 rows=1 width=36) (actual time=692.275..692.290 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.43..7689.44 rows=1 width=32) (actual time=24.765..24.767 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.43 rows=32000 width=10) (actual time=0.057..17.821 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.050..0.283 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.039..0.226 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.76..8329.43 rows=10667 width=36) (actual time=692.274..692.276 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.43..8249.43 rows=10667 width=36) (actual time=682.033..692.134 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.43 rows=32000 width=14) (actual time=1.307..626.835 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.761..4.352 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.234..0.238 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.522..4.014 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.274..0.274 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.047..1.497 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 16.138 ms
 Execution Time: 693.332 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.20..15992.20 rows=1 width=36) (actual time=79.431..79.446 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.43..7689.44 rows=1 width=32) (actual time=24.872..24.874 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.43 rows=32000 width=10) (actual time=0.054..17.887 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.281 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.225 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.76..8329.43 rows=10667 width=36) (actual time=79.430..79.432 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.43..8249.43 rows=10667 width=36) (actual time=69.285..79.290 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.43 rows=32000 width=14) (actual time=0.064..26.682 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.052..0.426 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.039..0.360 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.020 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.056 ms
 Execution Time: 79.816 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147766.10..160829.17 rows=1 width=27) (actual time=1721.374..1724.503 rows=1 loops=1)
   ->  GroupAggregate  (cost=147766.10..239207.65 rows=7 width=27) (actual time=1721.374..1724.502 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147766.10..238715.06 rows=28144 width=27) (actual time=839.703..1714.575 rows=15492 loops=1)
               ->  Gather Merge  (cost=147765.67..151135.48 rows=28144 width=15) (actual time=839.066..849.881 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146765.61..146783.20 rows=7036 width=15) (actual time=828.654..828.992 rows=4228 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 387kB
                           Worker 0:  Sort Method: quicksort  Memory: 391kB
                           Worker 1:  Sort Method: quicksort  Memory: 391kB
                           Worker 2:  Sort Method: quicksort  Memory: 387kB
                           Worker 3:  Sort Method: quicksort  Memory: 374kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146315.99 rows=7036 width=15) (actual time=0.695..827.030 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.055..0.055 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.583 ms
 Execution Time: 1725.336 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147766.10..160829.17 rows=1 width=27) (actual time=400.455..401.672 rows=1 loops=1)
   ->  GroupAggregate  (cost=147766.10..239207.65 rows=7 width=27) (actual time=400.454..401.671 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147766.10..238715.06 rows=28144 width=27) (actual time=351.724..396.859 rows=15492 loops=1)
               ->  Gather Merge  (cost=147765.67..151135.48 rows=28144 width=15) (actual time=351.703..356.318 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146765.61..146783.20 rows=7036 width=15) (actual time=346.741..346.949 rows=4173 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 222kB
                           Worker 0:  Sort Method: quicksort  Memory: 417kB
                           Worker 1:  Sort Method: quicksort  Memory: 414kB
                           Worker 2:  Sort Method: quicksort  Memory: 413kB
                           Worker 3:  Sort Method: quicksort  Memory: 368kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146315.99 rows=7036 width=15) (actual time=0.095..345.485 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.837 ms
 Execution Time: 401.723 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64471.44..64471.44 rows=1 width=16) (actual time=1388.130..1388.133 rows=1 loops=1)
   ->  Sort  (cost=64471.44..64471.94 rows=200 width=16) (actual time=1388.129..1388.131 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64468.44..64470.44 rows=200 width=16) (actual time=1388.104..1388.111 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60718.44..62218.44 rows=150000 width=12) (actual time=1348.783..1371.440 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53445.71 rows=1454545 width=8) (actual time=37.036..1001.731 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454545 width=8) (actual time=0.661..577.770 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=36.044..36.045 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..16.874 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.675 ms
 Execution Time: 1389.219 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64471.44..64471.44 rows=1 width=16) (actual time=1256.183..1256.186 rows=1 loops=1)
   ->  Sort  (cost=64471.44..64471.94 rows=200 width=16) (actual time=1256.181..1256.184 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64468.44..64470.44 rows=200 width=16) (actual time=1256.156..1256.163 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60718.44..62218.44 rows=150000 width=12) (actual time=1216.876..1239.546 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53445.71 rows=1454545 width=8) (actual time=32.504..886.074 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454545 width=8) (actual time=0.014..484.709 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.100..32.100 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.436 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.737 ms
 Execution Time: 1257.338 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74014.34..74014.35 rows=1 width=32) (actual time=549.288..554.999 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74014.34..74014.35 rows=1 width=32) (actual time=549.287..554.997 rows=1 loops=1)
         ->  Gather  (cost=74013.88..74014.29 rows=4 width=64) (actual time=548.425..554.982 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73013.88..73013.89 rows=1 width=64) (actual time=536.204..536.206 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7196.41..72680.54 rows=19048 width=33) (actual time=62.799..521.460 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1222.41..66656.54 rows=19048 width=16) (actual time=21.239..462.935 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8070
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1203.36 rows=76193 width=0) (actual time=14.049..14.049 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=41.098..41.098 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.072..27.519 rows=40000 loops=5)
 Planning Time: 18.152 ms
 Execution Time: 555.869 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74014.34..74014.35 rows=1 width=32) (actual time=108.847..115.672 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74014.34..74014.35 rows=1 width=32) (actual time=108.845..115.669 rows=1 loops=1)
         ->  Gather  (cost=74013.88..74014.29 rows=4 width=64) (actual time=106.179..115.650 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73013.88..73013.89 rows=1 width=64) (actual time=102.453..102.456 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7196.41..72680.54 rows=19048 width=33) (actual time=42.612..92.871 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1222.41..66656.54 rows=19048 width=16) (actual time=14.413..56.175 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9584
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1203.36 rows=76193 width=0) (actual time=8.129..8.129 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=27.560..27.560 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.349 rows=40000 loops=5)
 Planning Time: 0.788 ms
 Execution Time: 115.925 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241456.66..241564.21 rows=1 width=103) (actual time=1264.708..1272.014 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122073.69..122073.70 rows=1 width=32) (actual time=226.855..226.856 rows=1 loops=1)
           ->  HashAggregate  (cost=121823.07..121948.38 rows=10025 width=36) (actual time=223.618..226.273 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3620.42..119566.01 rows=225706 width=16) (actual time=27.959..118.608 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3563.99 rows=225706 width=0) (actual time=17.341..17.341 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119382.96..124760.28 rows=50 width=103) (actual time=1264.707..1272.010 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119382.67..124635.16 rows=50 width=36) (actual time=1264.136..1271.437 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119382.67..124184.03 rows=40100 width=36) (actual time=1014.453..1029.311 rows=41761 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118382.62..118407.68 rows=10025 width=36) (actual time=1003.182..1004.029 rows=8786 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1235kB
                           Worker 0:  Sort Method: quicksort  Memory: 1233kB
                           Worker 1:  Sort Method: quicksort  Memory: 1235kB
                           Worker 2:  Sort Method: quicksort  Memory: 1234kB
                           Worker 3:  Sort Method: quicksort  Memory: 1234kB
                           ->  Partial HashAggregate  (cost=117591.08..117716.39 rows=10025 width=36) (actual time=995.521..1001.326 rows=9887 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3620.42..117026.82 rows=56426 width=16) (actual time=40.373..944.899 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13342
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3563.99 rows=225706 width=0) (actual time=36.696..36.696 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.564..0.565 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 14.151 ms
 Execution Time: 1273.010 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241456.66..241564.21 rows=1 width=103) (actual time=394.089..408.759 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122073.69..122073.70 rows=1 width=32) (actual time=212.360..212.361 rows=1 loops=1)
           ->  HashAggregate  (cost=121823.07..121948.38 rows=10025 width=36) (actual time=209.131..211.776 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3620.42..119566.01 rows=225706 width=16) (actual time=27.878..105.384 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3563.99 rows=225706 width=0) (actual time=17.272..17.272 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119382.96..124760.28 rows=50 width=103) (actual time=394.088..408.756 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119382.67..124635.16 rows=50 width=36) (actual time=394.064..408.730 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119382.67..124184.03 rows=40100 width=36) (actual time=159.476..181.456 rows=41723 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118382.62..118407.68 rows=10025 width=36) (actual time=151.164..151.963 rows=8862 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1239kB
                           Worker 0:  Sort Method: quicksort  Memory: 1227kB
                           Worker 1:  Sort Method: quicksort  Memory: 1237kB
                           Worker 2:  Sort Method: quicksort  Memory: 1224kB
                           Worker 3:  Sort Method: quicksort  Memory: 1239kB
                           ->  Partial HashAggregate  (cost=117591.08..117716.39 rows=10025 width=36) (actual time=143.696..149.324 rows=9876 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3620.42..117026.82 rows=56426 width=16) (actual time=31.321..110.050 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14671
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3563.99 rows=225706 width=0) (actual time=25.538..25.538 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.020..0.021 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.794 ms
 Execution Time: 409.108 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26629.09..26629.10 rows=1 width=44) (actual time=293.947..294.801 rows=1 loops=1)
   ->  Sort  (cost=26629.09..26668.90 rows=15924 width=44) (actual time=293.946..294.800 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18758.46..26549.47 rows=15924 width=44) (actual time=217.842..291.548 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18758.46..25801.97 rows=58826 width=40) (actual time=217.825..272.025 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17758.41..17795.17 rows=14706 width=40) (actual time=181.974..183.348 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2316kB
                           Worker 0:  Sort Method: quicksort  Memory: 1981kB
                           Worker 1:  Sort Method: quicksort  Memory: 2128kB
                           Worker 2:  Sort Method: quicksort  Memory: 2100kB
                           Worker 3:  Sort Method: quicksort  Memory: 2277kB
                           ->  Parallel Hash Join  (cost=6683.95..16740.45 rows=14706 width=40) (actual time=39.694..105.608 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.474..54.884 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.886..5.802 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12255 width=40) (actual time=32.986..32.987 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2496kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12255 width=40) (actual time=0.706..30.578 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 16.810 ms
 Execution Time: 294.868 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26629.09..26629.10 rows=1 width=44) (actual time=256.865..257.382 rows=1 loops=1)
   ->  Sort  (cost=26629.09..26668.90 rows=15924 width=44) (actual time=256.864..257.381 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18758.46..26549.47 rows=15924 width=44) (actual time=180.517..254.071 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18758.46..25801.97 rows=58826 width=40) (actual time=180.501..234.360 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17758.41..17795.17 rows=14706 width=40) (actual time=150.595..151.930 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 1996kB
                           Worker 0:  Sort Method: quicksort  Memory: 2242kB
                           Worker 1:  Sort Method: quicksort  Memory: 2061kB
                           Worker 2:  Sort Method: quicksort  Memory: 2106kB
                           Worker 3:  Sort Method: quicksort  Memory: 2398kB
                           ->  Parallel Hash Join  (cost=6683.95..16740.45 rows=14706 width=40) (actual time=18.465..76.641 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.613..41.722 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.530 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12255 width=40) (actual time=15.557..15.557 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12255 width=40) (actual time=0.015..12.794 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.847 ms
 Execution Time: 257.440 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217931.54..217931.55 rows=1 width=32) (actual time=4061.680..4065.843 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217931.54..217931.55 rows=1 width=32) (actual time=4061.679..4065.840 rows=1 loops=1)
         ->  Gather  (cost=217931.31..217931.52 rows=2 width=32) (actual time=4055.100..4065.823 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216931.31..216931.32 rows=1 width=32) (actual time=4044.902..4044.904 rows=1 loops=3)
                     ->  Nested Loop  (cost=207938.49..216929.19 rows=849 width=8) (actual time=3974.870..4044.821 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207938.06..213287.29 rows=85 width=40) (actual time=3974.116..3999.611 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.477..25.880 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205500.75..205500.75 rows=194985 width=36) (actual time=3973.218..3973.219 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202575.98..205500.75 rows=194985 width=36) (actual time=3472.387..3937.060 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.65 rows=6001065 width=9) (actual time=0.319..802.113 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.494..0.650 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 16.023 ms
 Execution Time: 4073.419 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217931.54..217931.55 rows=1 width=32) (actual time=3695.262..3697.693 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217931.54..217931.55 rows=1 width=32) (actual time=3695.261..3697.690 rows=1 loops=1)
         ->  Gather  (cost=217931.31..217931.52 rows=2 width=32) (actual time=3688.903..3697.677 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216931.31..216931.32 rows=1 width=32) (actual time=3684.661..3684.664 rows=1 loops=3)
                     ->  Nested Loop  (cost=207938.49..216929.19 rows=849 width=8) (actual time=3674.067..3684.629 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207938.06..213287.29 rows=85 width=40) (actual time=3674.021..3682.986 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.075..8.999 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205500.75..205500.75 rows=194985 width=36) (actual time=3673.473..3673.474 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202575.98..205500.75 rows=194985 width=36) (actual time=3170.930..3637.471 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.65 rows=6001065 width=9) (actual time=0.098..513.559 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.010..0.023 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 1.201 ms
 Execution Time: 3704.555 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794697.98..794698.23 rows=100 width=71) (actual time=4436.264..4437.194 rows=9 loops=1)
   ->  Sort  (cost=794697.98..799699.75 rows=2000711 width=71) (actual time=4436.263..4436.268 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658054.60..718232.24 rows=2000711 width=71) (actual time=4435.520..4436.220 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335203.73..550281.93 rows=2000711 width=44) (actual time=3711.498..4435.444 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172570.65 rows=6001065 width=9) (actual time=0.622..297.009 rows=6001215 loops=1)
                     ->  Hash  (cost=328952.61..328952.61 rows=500089 width=43) (actual time=3517.457..3517.460 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282571.33..328952.61 rows=500089 width=43) (actual time=3206.192..3517.435 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275599.33..320667.85 rows=500089 width=24) (actual time=3142.967..3454.200 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=1.362..225.620 rows=1500000 loops=1)
                                       ->  Hash  (cost=269348.22..269348.22 rows=500089 width=4) (actual time=3053.874..3053.875 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269348.22 rows=500089 width=4) (actual time=652.567..3053.848 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216838.91 rows=6001065 width=9) (actual time=0.021..1687.109 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=62.818..62.818 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.554..37.570 rows=150000 loops=1)
 Planning Time: 18.172 ms
 Execution Time: 4439.369 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794697.98..794698.23 rows=100 width=71) (actual time=3410.996..3411.014 rows=9 loops=1)
   ->  Sort  (cost=794697.98..799699.75 rows=2000711 width=71) (actual time=3410.994..3410.999 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658054.60..718232.24 rows=2000711 width=71) (actual time=3410.252..3410.950 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335203.73..550281.93 rows=2000711 width=44) (actual time=2674.604..3410.175 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172570.65 rows=6001065 width=9) (actual time=0.017..297.169 rows=6001215 loops=1)
                     ->  Hash  (cost=328952.61..328952.61 rows=500089 width=43) (actual time=2477.999..2478.002 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282571.33..328952.61 rows=500089 width=43) (actual time=2275.490..2477.980 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275599.33..320667.85 rows=500089 width=24) (actual time=2231.435..2433.915 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.008..81.623 rows=1500000 loops=1)
                                       ->  Hash  (cost=269348.22..269348.22 rows=500089 width=4) (actual time=2176.697..2176.698 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269348.22 rows=500089 width=4) (actual time=461.152..2176.680 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216838.91 rows=6001065 width=9) (actual time=0.018..876.299 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.614..43.615 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.022..19.018 rows=150000 loops=1)
 Planning Time: 1.384 ms
 Execution Time: 3412.381 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18299.93..18299.94 rows=1 width=32) (actual time=846.269..848.785 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18299.93..18299.94 rows=1 width=32) (actual time=846.268..848.783 rows=1 loops=1)
         ->  Gather  (cost=18299.71..18299.92 rows=2 width=32) (actual time=843.262..848.775 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17299.71..17299.72 rows=1 width=32) (actual time=836.784..836.784 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17299.37 rows=45 width=12) (actual time=34.976..836.677 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=201 width=30) (actual time=0.672..26.519 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.04 rows=1 width=21) (actual time=4.288..4.793 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 19.617 ms
 Execution Time: 849.538 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18299.93..18299.94 rows=1 width=32) (actual time=28.591..32.257 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18299.93..18299.94 rows=1 width=32) (actual time=28.590..32.255 rows=1 loops=1)
         ->  Gather  (cost=18299.71..18299.92 rows=2 width=32) (actual time=28.458..32.247 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17299.71..17299.72 rows=1 width=32) (actual time=25.811..25.812 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17299.37 rows=45 width=12) (actual time=0.740..25.775 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=201 width=30) (actual time=0.189..17.106 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.04 rows=1 width=21) (actual time=0.045..0.051 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.031 ms
 Execution Time: 32.304 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=212135.92..212135.92 rows=1 width=51) (actual time=3698.601..3698.684 rows=1 loops=1)
   ->  Sort  (cost=212135.92..212135.92 rows=1 width=51) (actual time=3698.599..3698.682 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186958.56..212135.91 rows=1 width=51) (actual time=3532.969..3698.493 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.697..3.203 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.339..0.342 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.351..2.156 rows=10000 loops=1)
               ->  Materialize  (cost=186958.56..211680.60 rows=1 width=8) (actual time=5.671..8.204 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186958.56..211680.59 rows=1 width=8) (actual time=2483.785..3526.379 rows=5898 loops=1)
                           ->  Hash Join  (cost=186958.14..204648.00 rows=4935 width=44) (actual time=2483.241..3024.776 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=180590.22..196997.47 rows=488606 width=40) (actual time=2448.683..2942.434 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14904.86..141408.91 rows=929603 width=13) (actual time=125.077..1958.397 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14672.46 rows=929603 width=0) (actual time=105.122..105.122 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=34.535..34.616 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=2.333..34.166 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.159..20.057 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.084..0.084 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.476 ms
 Execution Time: 3703.236 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=212135.92..212135.92 rows=1 width=51) (actual time=1371.689..1371.774 rows=1 loops=1)
   ->  Sort  (cost=212135.92..212135.92 rows=1 width=51) (actual time=1371.688..1371.772 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186958.56..212135.91 rows=1 width=51) (actual time=1207.140..1371.586 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.034..1.590 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.649 rows=10000 loops=1)
               ->  Materialize  (cost=186958.56..211680.60 rows=1 width=8) (actual time=1.612..2.897 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186958.56..211680.59 rows=1 width=8) (actual time=706.028..1203.942 rows=5898 loops=1)
                           ->  Hash Join  (cost=186958.14..204648.00 rows=4935 width=44) (actual time=706.004..1181.803 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=180590.22..196997.47 rows=488606 width=40) (actual time=694.256..1133.261 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14904.86..141408.91 rows=929603 width=13) (actual time=87.981..302.312 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14672.46 rows=929603 width=0) (actual time=68.816..68.816 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.728..11.810 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.377..11.461 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.041..8.740 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.733 ms
 Execution Time: 1376.524 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194031.36..194031.37 rows=1 width=34) (actual time=1431.029..1431.149 rows=100 loops=1)
   ->  Sort  (cost=194031.36..194031.37 rows=1 width=34) (actual time=1431.028..1431.142 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194031.33..194031.35 rows=1 width=34) (actual time=1430.021..1430.735 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194031.33..194031.34 rows=1 width=26) (actual time=1430.013..1430.285 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194031.32 rows=1 width=26) (actual time=12.666..1417.483 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194027.93 rows=1 width=38) (actual time=12.322..1335.261 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194024.62 rows=1 width=34) (actual time=11.266..24.639 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193024.52 rows=1 width=34) (actual time=3.743..623.874 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133622.28 rows=19954 width=34) (actual time=2.532..518.272 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.33 rows=500089 width=8) (actual time=0.714..454.059 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.684..1.685 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.365..1.588 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.155..0.157 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.207..1.368 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.113..0.113 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.091..0.091 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.082 ms
 Execution Time: 1432.057 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194031.36..194031.37 rows=1 width=34) (actual time=473.594..473.708 rows=100 loops=1)
   ->  Sort  (cost=194031.36..194031.37 rows=1 width=34) (actual time=473.593..473.700 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194031.33..194031.35 rows=1 width=34) (actual time=472.591..473.294 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194031.33..194031.34 rows=1 width=26) (actual time=472.583..472.849 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194031.32 rows=1 width=26) (actual time=1.040..460.134 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194027.93 rows=1 width=38) (actual time=1.036..424.200 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194024.62 rows=1 width=34) (actual time=1.020..358.067 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193024.52 rows=1 width=34) (actual time=1.603..428.673 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133622.28 rows=19954 width=34) (actual time=1.460..330.342 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.33 rows=500089 width=8) (actual time=0.034..259.163 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.321..1.323 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.068..1.236 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.052..1.171 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.025..0.025 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.005..0.005 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 3.011 ms
 Execution Time: 473.795 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.18 rows=1 width=72) (actual time=182.687..184.535 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=44.083..44.174 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=43.963..44.164 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=35.566..35.566 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.172..34.345 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.17 rows=737 width=72) (actual time=182.686..184.442 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.74 rows=737 width=38) (actual time=68.654..183.809 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=68.388..71.864 rows=2734 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.251..21.412 rows=1601 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 533kB
                           Worker 0:  Sort Method: quicksort  Memory: 468kB
                           Worker 1:  Sort Method: quicksort  Memory: 471kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.021..19.532 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.040..0.040 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 14.099 ms
 Execution Time: 185.264 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.18 rows=1 width=72) (actual time=58.851..60.522 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.783..28.864 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.496..28.854 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.263..26.264 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.018..25.146 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.17 rows=737 width=72) (actual time=58.850..60.439 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.74 rows=737 width=38) (actual time=52.272..60.179 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=52.225..54.585 rows=2734 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.626..20.705 rows=1533 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 547kB
                           Worker 0:  Sort Method: quicksort  Memory: 462kB
                           Worker 1:  Sort Method: quicksort  Memory: 463kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..18.846 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.834 ms
 Execution Time: 60.580 ms
(29 rows)

