query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191612.26..191612.93 rows=1 width=236) (actual time=2152.059..2152.132 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191612.26..191616.32 rows=6 width=236) (actual time=2152.057..2152.131 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191612.26..191615.13 rows=24 width=236) (actual time=2152.019..2152.095 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190612.20..190612.21 rows=6 width=236) (actual time=2143.669..2143.670 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190611.96..190612.12 rows=6 width=236) (actual time=2143.622..2143.630 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.40 rows=1482439 width=25) (actual time=0.098..526.717 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 14.318 ms
 Execution Time: 2154.009 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191612.26..191612.93 rows=1 width=236) (actual time=1911.009..1911.089 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191612.26..191616.32 rows=6 width=236) (actual time=1911.008..1911.087 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191612.26..191615.13 rows=24 width=236) (actual time=1910.969..1911.053 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190612.20..190612.21 rows=6 width=236) (actual time=1906.534..1906.535 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190611.96..190612.12 rows=6 width=236) (actual time=1906.487..1906.496 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.40 rows=1482439 width=25) (actual time=0.028..269.090 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.812 ms
 Execution Time: 1911.173 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55976.25..55976.25 rows=1 width=192) (actual time=482.716..482.799 rows=100 loops=1)
   ->  Sort  (cost=55976.25..55976.25 rows=1 width=192) (actual time=482.715..482.792 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=37847.89..55976.24 rows=1 width=192) (actual time=386.852..482.350 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6443.90 rows=949 width=30) (actual time=0.528..0.833 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=395 width=30) (actual time=0.472..36.080 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30540.89..30540.89 rows=160000 width=172) (actual time=385.413..385.416 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30540.89 rows=160000 width=172) (actual time=6.928..316.461 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.524..196.796 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.393..6.396 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.732..5.892 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.301..4.245 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.422..0.424 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.411..0.420 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.166..0.169 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.236..0.237 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.230..0.231 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.062..0.062 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.054..0.060 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.046..0.058 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.045..0.053 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.042..0.043 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.183 ms
 Execution Time: 483.701 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55976.25..55976.25 rows=1 width=192) (actual time=276.728..276.802 rows=100 loops=1)
   ->  Sort  (cost=55976.25..55976.25 rows=1 width=192) (actual time=276.727..276.795 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=37847.89..55976.24 rows=1 width=192) (actual time=240.601..276.405 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6443.90 rows=949 width=30) (actual time=0.276..0.459 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=395 width=30) (actual time=0.022..14.291 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30540.89..30540.89 rows=160000 width=172) (actual time=239.877..239.880 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30540.89 rows=160000 width=172) (actual time=2.737..177.264 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.006..49.814 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.724..2.726 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.030..2.252 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.006..0.669 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.020..0.022 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.014..0.020 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.889 ms
 Execution Time: 276.918 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235521.21..235521.24 rows=10 width=44) (actual time=1133.042..1134.400 rows=10 loops=1)
   ->  Sort  (cost=235521.21..236321.49 rows=320110 width=44) (actual time=1133.041..1134.398 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=180071.71..228603.75 rows=320110 width=44) (actual time=1114.779..1131.957 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180071.71..220600.97 rows=320112 width=44) (actual time=1114.773..1122.859 rows=12053 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=179071.65..181472.49 rows=80028 width=44) (actual time=1105.655..1109.972 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=179071.65..179271.72 rows=80028 width=24) (actual time=1105.642..1105.921 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 679kB
                                 Worker 0:  Sort Method: quicksort  Memory: 648kB
                                 Worker 1:  Sort Method: quicksort  Memory: 718kB
                                 Worker 2:  Sort Method: quicksort  Memory: 616kB
                                 Worker 3:  Sort Method: quicksort  Memory: 688kB
                                 ->  Parallel Hash Join  (cost=37916.75..172554.08 rows=80028 width=24) (actual time=246.874..1103.523 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.40 rows=817292 width=16) (actual time=1.478..789.673 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37324.50..37324.50 rows=47380 width=12) (actual time=242.444..242.446 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                             ->  Parallel Hash Join  (cost=4538.40..37324.50 rows=47380 width=12) (actual time=22.443..232.687 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231121 width=16) (actual time=0.447..180.531 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12812 width=4) (actual time=21.922..21.923 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12812 width=4) (actual time=0.094..20.250 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 16.885 ms
 Execution Time: 1135.679 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235521.21..235521.24 rows=10 width=44) (actual time=450.564..452.881 rows=10 loops=1)
   ->  Sort  (cost=235521.21..236321.49 rows=320110 width=44) (actual time=450.563..452.879 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=180071.71..228603.75 rows=320110 width=44) (actual time=433.221..450.437 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180071.71..220600.97 rows=320112 width=44) (actual time=433.211..441.405 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=179071.65..181472.49 rows=80028 width=44) (actual time=428.400..432.980 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=179071.65..179271.72 rows=80028 width=24) (actual time=428.388..428.676 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 548kB
                                 Worker 0:  Sort Method: quicksort  Memory: 729kB
                                 Worker 1:  Sort Method: quicksort  Memory: 723kB
                                 Worker 2:  Sort Method: quicksort  Memory: 748kB
                                 Worker 3:  Sort Method: quicksort  Memory: 600kB
                                 ->  Parallel Hash Join  (cost=37916.75..172554.08 rows=80028 width=24) (actual time=100.121..426.606 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.40 rows=817292 width=16) (actual time=0.048..239.285 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37324.50..37324.50 rows=47380 width=12) (actual time=99.373..99.375 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                             ->  Parallel Hash Join  (cost=4538.40..37324.50 rows=47380 width=12) (actual time=8.150..89.778 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231121 width=16) (actual time=0.008..53.038 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12812 width=4) (actual time=8.071..8.072 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12812 width=4) (actual time=0.013..5.930 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 1.174 ms
 Execution Time: 452.953 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79030.85..79031.23 rows=1 width=24) (actual time=2063.185..2074.068 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79030.85..79032.75 rows=5 width=24) (actual time=2063.184..2074.066 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=79030.85..79032.63 rows=15 width=24) (actual time=2063.172..2074.055 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=78030.81..78030.82 rows=5 width=24) (actual time=2056.887..2056.889 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=78030.70..78030.75 rows=5 width=24) (actual time=2056.867..2056.869 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=800.65..77940.96 rows=17948 width=16) (actual time=9.648..2045.483 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=800.22..27200.43 rows=17948 width=20) (actual time=8.423..289.406 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5865
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..786.31 rows=55638 width=0) (actual time=10.490..10.490 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.124..0.124 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 12.632 ms
 Execution Time: 2074.727 ms
(26 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79030.85..79031.23 rows=1 width=24) (actual time=95.821..110.540 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79030.85..79032.75 rows=5 width=24) (actual time=95.820..110.538 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=79030.85..79032.63 rows=15 width=24) (actual time=95.813..110.532 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=78030.81..78030.82 rows=5 width=24) (actual time=92.321..92.323 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=78030.70..78030.75 rows=5 width=24) (actual time=92.301..92.303 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=800.65..77940.96 rows=17948 width=16) (actual time=7.329..87.961 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=800.22..27200.43 rows=17948 width=20) (actual time=7.303..25.890 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5847
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..786.31 rows=55638 width=0) (actual time=6.850..6.850 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 0.730 ms
 Execution Time: 110.602 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84097.80..84097.80 rows=1 width=58) (actual time=2272.161..2282.714 rows=1 loops=1)
   ->  Sort  (cost=84097.80..84097.86 rows=25 width=58) (actual time=2272.160..2282.712 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84058.99..84097.68 rows=25 width=58) (actual time=2271.442..2282.700 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84058.99..84096.80 rows=75 width=58) (actual time=2271.258..2282.676 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83058.95..83087.95 rows=25 width=58) (actual time=2263.597..2264.272 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83058.95..83064.69 rows=2295 width=38) (actual time=2263.422..2263.506 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 198kB
                                 Worker 0:  Sort Method: quicksort  Memory: 200kB
                                 Worker 1:  Sort Method: quicksort  Memory: 191kB
                                 Worker 2:  Sort Method: quicksort  Memory: 195kB
                                 ->  Hash Join  (cost=8424.44..82930.84 rows=2295 width=38) (actual time=60.217..2261.413 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7951.44..82155.15 rows=57655 width=50) (actual time=55.513..2244.094 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7951.01..35493.03 rows=14410 width=38) (actual time=55.131..345.226 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3210.88..30422.66 rows=72052 width=8) (actual time=30.191..294.682 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6512
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3155.04 rows=223361 width=0) (actual time=25.878..25.879 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.777..24.780 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.185..22.553 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.082..18.002 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.097..0.099 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.090..0.097 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.037..0.039 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.045..0.046 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.158..0.166 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.692..3.693 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.089..2.261 rows=10000 loops=4)
 Planning Time: 21.068 ms
 Execution Time: 2283.461 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84097.80..84097.80 rows=1 width=58) (actual time=157.392..171.432 rows=1 loops=1)
   ->  Sort  (cost=84097.80..84097.86 rows=25 width=58) (actual time=157.391..171.430 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84058.99..84097.68 rows=25 width=58) (actual time=156.750..171.419 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84058.99..84096.80 rows=75 width=58) (actual time=156.543..171.396 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83058.95..83087.95 rows=25 width=58) (actual time=152.722..153.406 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83058.95..83064.69 rows=2295 width=38) (actual time=152.548..152.634 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 202kB
                                 Worker 0:  Sort Method: quicksort  Memory: 197kB
                                 Worker 1:  Sort Method: quicksort  Memory: 192kB
                                 Worker 2:  Sort Method: quicksort  Memory: 192kB
                                 ->  Hash Join  (cost=8424.44..82930.84 rows=2295 width=38) (actual time=39.327..151.560 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7951.44..82155.15 rows=57655 width=50) (actual time=35.346..139.888 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7951.01..35493.03 rows=14410 width=38) (actual time=35.322..77.175 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3210.88..30422.66 rows=72052 width=8) (actual time=21.384..49.210 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6567
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3155.04 rows=223361 width=0) (actual time=17.466..17.466 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=13.783..13.785 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.037..11.893 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.005..4.958 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.027..0.028 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.021..0.027 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.817..3.817 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.339 rows=10000 loops=4)
 Planning Time: 3.120 ms
 Execution Time: 171.517 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106312.06..106312.07 rows=1 width=32) (actual time=1072.689..1076.237 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106312.06..106312.07 rows=1 width=32) (actual time=1072.687..1076.234 rows=1 loops=1)
         ->  Gather  (cost=106311.63..106312.04 rows=4 width=32) (actual time=1068.090..1076.213 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105311.63..105311.64 rows=1 width=32) (actual time=1060.109..1060.109 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21055.25..105166.00 rows=29125 width=12) (actual time=133.636..1043.210 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13259
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21026.12 rows=116499 width=0) (actual time=128.009..128.010 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.200 ms
 Execution Time: 1077.353 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106312.06..106312.07 rows=1 width=32) (actual time=197.925..204.703 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106312.06..106312.07 rows=1 width=32) (actual time=197.924..204.701 rows=1 loops=1)
         ->  Gather  (cost=106311.63..106312.04 rows=4 width=32) (actual time=194.890..204.684 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105311.63..105311.64 rows=1 width=32) (actual time=191.154..191.155 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21055.25..105166.00 rows=29125 width=12) (actual time=111.147..182.326 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=14112
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21026.12 rows=116499 width=0) (actual time=102.587..102.588 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.415 ms
 Execution Time: 204.749 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163959.20..163959.35 rows=1 width=92) (actual time=1659.994..1675.396 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163959.20..164894.23 rows=6049 width=92) (actual time=1659.993..1675.395 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163959.20..164715.21 rows=5853 width=92) (actual time=1659.819..1675.385 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162959.16..163027.45 rows=1951 width=92) (actual time=1652.055..1652.388 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162959.16..162964.04 rows=1951 width=72) (actual time=1651.863..1651.906 rows=956 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 252kB
                           Worker 0:  Sort Method: quicksort  Memory: 239kB
                           Worker 1:  Sort Method: quicksort  Memory: 251kB
                           Worker 2:  Sort Method: quicksort  Memory: 259kB
                           ->  Hash Join  (cost=4843.31..162852.54 rows=1951 width=72) (actual time=31.747..1650.190 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162225.92 rows=47132 width=46) (actual time=24.365..1636.174 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=23.898..271.218 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.403..170.387 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=23.375..23.376 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.096..22.449 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.078..18.546 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.045..0.045 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=3.005..3.006 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.137..2.881 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.082..1.638 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.050..0.050 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.043..0.045 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 19.534 ms
 Execution Time: 1676.564 ms
(48 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163959.20..163959.35 rows=1 width=92) (actual time=262.603..282.038 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163959.20..164894.23 rows=6049 width=92) (actual time=262.602..282.036 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163959.20..164715.21 rows=5853 width=92) (actual time=262.423..282.027 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162959.16..163027.45 rows=1951 width=92) (actual time=257.579..257.913 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162959.16..162964.04 rows=1951 width=72) (actual time=257.389..257.431 rows=947 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 252kB
                           Worker 0:  Sort Method: quicksort  Memory: 250kB
                           Worker 1:  Sort Method: quicksort  Memory: 252kB
                           Worker 2:  Sort Method: quicksort  Memory: 247kB
                           ->  Hash Join  (cost=4843.31..162852.54 rows=1951 width=72) (actual time=12.598..256.325 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162225.92 rows=47132 width=46) (actual time=10.282..247.870 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=10.241..109.009 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.010..33.970 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=10.077..10.078 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.026..8.693 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.009..3.240 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.130..2.132 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.033..2.022 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..0.697 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.531 ms
 Execution Time: 282.141 ms
(48 rows)

query 8 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69617.77..69617.91 rows=1 width=40) (actual time=2238.330..2248.622 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=69617.77..69970.12 rows=2400 width=40) (actual time=2238.329..2248.621 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=69617.77..69891.12 rows=2000 width=72) (actual time=2238.110..2248.610 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=68617.74..68660.24 rows=1000 width=72) (actual time=2231.388..2231.587 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=68617.74..68620.24 rows=1000 width=46) (actual time=2231.186..2231.227 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 92kB
                           Worker 0:  Sort Method: quicksort  Memory: 85kB
                           Worker 1:  Sort Method: quicksort  Memory: 91kB
                           ->  Hash Join  (cost=64055.72..68567.91 rows=1000 width=46) (actual time=2200.158..2230.910 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64054.16..68558.28 rows=1000 width=20) (actual time=2200.072..2230.397 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=63606.16..68107.64 rows=1005 width=20) (actual time=2196.052..2226.059 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=63603.65..68076.24 rows=5026 width=24) (actual time=2195.795..2225.508 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.352..22.459 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=63555.01..63555.01 rows=3891 width=24) (actual time=2195.146..2195.148 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=29600.02..63555.01 rows=3891 width=24) (actual time=1965.723..2192.790 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146592 width=12) (actual time=0.750..200.105 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=29392.63..29392.63 rows=16591 width=20) (actual time=1964.799..1964.800 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..29392.63 rows=16591 width=20) (actual time=0.811..1951.034 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=553 width=4) (actual time=0.397..23.918 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.56 rows=30 width=24) (actual time=0.318..4.363 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.078..0.079 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.072..0.077 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.065..0.065 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.063..0.064 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.828..3.828 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.107..2.471 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.060..0.060 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.052..0.054 rows=25 loops=3)
 Planning Time: 22.618 ms
 Execution Time: 2249.344 ms
(55 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69617.77..69617.91 rows=1 width=40) (actual time=150.207..164.114 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=69617.77..69970.12 rows=2400 width=40) (actual time=150.206..164.112 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=69617.77..69891.12 rows=2000 width=72) (actual time=150.017..164.102 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=68617.74..68660.24 rows=1000 width=72) (actual time=147.360..147.557 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=68617.74..68620.24 rows=1000 width=46) (actual time=147.160..147.200 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 89kB
                           Worker 0:  Sort Method: quicksort  Memory: 89kB
                           Worker 1:  Sort Method: quicksort  Memory: 90kB
                           ->  Hash Join  (cost=64055.72..68567.91 rows=1000 width=46) (actual time=134.244..146.979 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64054.16..68558.28 rows=1000 width=20) (actual time=134.198..146.651 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=63606.16..68107.64 rows=1005 width=20) (actual time=131.183..143.355 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=63603.65..68076.24 rows=5026 width=24) (actual time=131.094..142.932 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.009..4.082 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=63555.01..63555.01 rows=3891 width=24) (actual time=130.889..130.891 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=29600.02..63555.01 rows=3891 width=24) (actual time=36.412..129.281 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146592 width=12) (actual time=0.012..71.444 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=29392.63..29392.63 rows=16591 width=20) (actual time=36.277..36.278 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..29392.63 rows=16591 width=20) (actual time=0.058..32.276 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=553 width=4) (actual time=0.036..8.934 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.56 rows=30 width=24) (actual time=0.005..0.048 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.029..0.030 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.024..0.029 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.798..2.798 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.021..1.468 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=3)
 Planning Time: 3.445 ms
 Execution Time: 164.200 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=138637.51..138637.91 rows=1 width=66) (actual time=3738.752..3766.509 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=138637.51..162847.88 rows=60150 width=66) (actual time=3738.751..3766.508 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=138637.51..159990.76 rows=180450 width=66) (actual time=3738.735..3766.492 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=137637.47..137787.84 rows=60150 width=66) (actual time=3730.499..3730.511 rows=132 loops=4)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=131810.05..132862.68 rows=60150 width=66) (actual time=3729.711..3730.307 rows=175 loops=4)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=95022.13..129086.46 rows=155634 width=57) (actual time=3419.067..3655.897 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.532..115.878 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=93076.71..93076.71 rows=155634 width=53) (actual time=3417.686..3417.691 rows=81482 loops=4)
                                       Buckets: 524288  Batches: 1  Memory Usage: 34720kB
                                       ->  Nested Loop  (cost=5674.84..93076.71 rows=155634 width=53) (actual time=40.287..3362.981 rows=81482 loops=4)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=5674.40..26585.27 rows=20854 width=48) (actual time=39.559..166.775 rows=10880 loops=4)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Hash Join  (cost=5672.84..26519.68 rows=20854 width=26) (actual time=39.478..162.261 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Hash Join  (cost=5224.84..26016.92 rows=20854 width=18) (actual time=35.273..152.681 rows=10880 loops=4)
                                                               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                               ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.473..89.159 rows=200000 loops=4)
                                                               ->  Parallel Hash  (cost=5140.67..5140.67 rows=6734 width=4) (actual time=34.532..34.532 rows=2720 loops=4)
                                                                     Buckets: 16384  Batches: 1  Memory Usage: 608kB
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=6734 width=4) (actual time=0.304..33.722 rows=2720 loops=4)
                                                                           Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                           Rows Removed by Filter: 47280
                                                         ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.166..4.167 rows=10000 loops=4)
                                                               Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                               ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.081..2.378 rows=10000 loops=4)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.075..0.075 rows=25 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.062..0.066 rows=25 loops=4)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.050..0.291 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
 Planning Time: 25.275 ms
 Execution Time: 3768.036 ms
(43 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=138637.51..138637.91 rows=1 width=66) (actual time=486.147..512.375 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=138637.51..162847.88 rows=60150 width=66) (actual time=486.146..512.373 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=138637.51..159990.76 rows=180450 width=66) (actual time=486.134..512.362 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=137637.47..137787.84 rows=60150 width=66) (actual time=480.955..480.968 rows=132 loops=4)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=131810.05..132862.68 rows=60150 width=66) (actual time=480.197..480.767 rows=175 loops=4)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Parallel Hash Join  (cost=95022.13..129086.46 rows=155634 width=57) (actual time=254.240..410.641 rows=81482 loops=4)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.010..32.414 rows=375000 loops=4)
                                 ->  Parallel Hash  (cost=93076.71..93076.71 rows=155634 width=53) (actual time=253.459..253.464 rows=81482 loops=4)
                                       Buckets: 524288  Batches: 1  Memory Usage: 34720kB
                                       ->  Nested Loop  (cost=5674.84..93076.71 rows=155634 width=53) (actual time=18.428..217.014 rows=81482 loops=4)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=5674.40..26585.27 rows=20854 width=48) (actual time=18.403..74.726 rows=10880 loops=4)
                                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                   ->  Hash Join  (cost=5672.84..26519.68 rows=20854 width=26) (actual time=18.373..71.991 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Parallel Hash Join  (cost=5224.84..26016.92 rows=20854 width=18) (actual time=14.223..63.691 rows=10880 loops=4)
                                                               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                               ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.004..18.362 rows=200000 loops=4)
                                                               ->  Parallel Hash  (cost=5140.67..5140.67 rows=6734 width=4) (actual time=14.138..14.139 rows=2720 loops=4)
                                                                     Buckets: 16384  Batches: 1  Memory Usage: 640kB
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=6734 width=4) (actual time=0.016..13.597 rows=2720 loops=4)
                                                                           Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                           Rows Removed by Filter: 47280
                                                         ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.134..4.135 rows=10000 loops=4)
                                                               Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                               ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..2.517 rows=10000 loops=4)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.024 rows=25 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=4)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.011 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
 Planning Time: 4.526 ms
 Execution Time: 513.056 ms
(43 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98784.21..98784.26 rows=20 width=202) (actual time=2065.401..2070.308 rows=20 loops=1)
   ->  Sort  (cost=98784.21..98918.52 rows=53723 width=202) (actual time=2065.399..2070.305 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=96683.13..97354.66 rows=53723 width=202) (actual time=2033.426..2057.810 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6797.36..96011.59 rows=53723 width=182) (actual time=71.088..1921.690 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5797.36..89639.29 rows=17330 width=182) (actual time=63.426..1972.204 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5795.80..89584.53 rows=17330 width=160) (actual time=63.301..1961.519 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=792.55..84535.79 rows=17330 width=16) (actual time=17.102..1893.848 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=792.12..27189.22 rows=17740 width=8) (actual time=15.961..346.066 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4985
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..778.37 rows=54994 width=0) (actual time=11.988..11.989 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.103..0.107 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=45.773..45.774 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.092..24.736 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.056..0.056 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.045..0.048 rows=25 loops=4)
 Planning Time: 18.776 ms
 Execution Time: 2071.525 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98784.21..98784.26 rows=20 width=202) (actual time=232.423..236.436 rows=20 loops=1)
   ->  Sort  (cost=98784.21..98918.52 rows=53723 width=202) (actual time=232.422..236.433 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=96683.13..97354.66 rows=53723 width=202) (actual time=200.133..224.486 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6797.36..96011.59 rows=53723 width=182) (actual time=44.204..118.045 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5797.36..89639.29 rows=17330 width=182) (actual time=40.437..155.728 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5795.80..89584.53 rows=17330 width=160) (actual time=40.354..148.356 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=792.55..84535.79 rows=17330 width=16) (actual time=12.133..106.460 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=792.12..27189.22 rows=17740 width=8) (actual time=12.100..28.972 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2194
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..778.37 rows=54994 width=0) (actual time=8.481..8.481 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.838..27.838 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.857 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning Time: 1.288 ms
 Execution Time: 236.827 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22726.14..22726.14 rows=1 width=36) (actual time=784.103..784.108 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10896.40..10896.41 rows=1 width=32) (actual time=27.446..27.448 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10656.39 rows=32000 width=10) (actual time=0.057..19.276 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.050..0.284 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.226 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.025..0.025 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.26 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11829.73..11856.40 rows=10667 width=36) (actual time=784.101..784.103 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11216.39..11776.39 rows=10667 width=36) (actual time=773.317..783.957 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10656.39 rows=32000 width=14) (actual time=3.310..714.348 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=2.713..6.256 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.181..0.185 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=2.525..5.970 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=2.222..2.222 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.26 rows=80 width=18) (actual time=0.130..1.705 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 11.716 ms
 Execution Time: 785.248 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22726.14..22726.14 rows=1 width=36) (actual time=85.309..85.314 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10896.40..10896.41 rows=1 width=32) (actual time=27.500..27.502 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10656.39 rows=32000 width=10) (actual time=0.054..19.297 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.048..0.280 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.037..0.221 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.022..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.26 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11829.73..11856.40 rows=10667 width=36) (actual time=85.308..85.309 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11216.39..11776.39 rows=10667 width=36) (actual time=74.691..85.166 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10656.39 rows=32000 width=14) (actual time=0.065..28.607 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.059..0.482 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.049..0.407 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.031..0.031 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.26 rows=80 width=18) (actual time=0.004..0.058 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.988 ms
 Execution Time: 85.665 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170405.04..170426.33 rows=1 width=27) (actual time=1149.865..1150.823 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170405.04..170554.12 rows=7 width=27) (actual time=1149.864..1150.820 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170405.04..170553.84 rows=28 width=27) (actual time=1148.774..1150.811 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169404.98..169550.45 rows=7 width=27) (actual time=1137.324..1138.340 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169404.98..169423.15 rows=7270 width=27) (actual time=1136.332..1136.583 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 697kB
                           Worker 0:  Sort Method: quicksort  Memory: 668kB
                           Worker 1:  Sort Method: quicksort  Memory: 674kB
                           Worker 2:  Sort Method: quicksort  Memory: 669kB
                           Worker 3:  Sort Method: quicksort  Memory: 673kB
                           ->  Nested Loop  (cost=0.43..168938.69 rows=7270 width=27) (actual time=0.587..1131.593 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.91 rows=7270 width=15) (actual time=0.481..743.555 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.061..0.061 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 16.345 ms
 Execution Time: 1151.983 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170405.04..170426.33 rows=1 width=27) (actual time=397.619..399.424 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170405.04..170554.12 rows=7 width=27) (actual time=397.618..399.422 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170405.04..170553.84 rows=28 width=27) (actual time=396.299..399.413 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169404.98..169550.45 rows=7 width=27) (actual time=390.348..391.375 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169404.98..169423.15 rows=7270 width=27) (actual time=389.351..389.607 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 797kB
                           Worker 0:  Sort Method: quicksort  Memory: 733kB
                           Worker 1:  Sort Method: quicksort  Memory: 746kB
                           Worker 2:  Sort Method: quicksort  Memory: 606kB
                           Worker 3:  Sort Method: quicksort  Memory: 402kB
                           ->  Nested Loop  (cost=0.43..168938.69 rows=7270 width=27) (actual time=0.656..386.891 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.91 rows=7270 width=15) (actual time=0.636..354.248 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.956 ms
 Execution Time: 399.498 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64471.44..64471.44 rows=1 width=16) (actual time=1456.870..1456.873 rows=1 loops=1)
   ->  Sort  (cost=64471.44..64471.94 rows=200 width=16) (actual time=1456.868..1456.870 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64468.44..64470.44 rows=200 width=16) (actual time=1456.844..1456.851 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60718.44..62218.44 rows=150000 width=12) (actual time=1417.050..1440.334 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53445.71 rows=1454545 width=8) (actual time=34.005..1065.868 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454545 width=8) (actual time=0.738..630.710 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.938..32.939 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..15.810 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.289 ms
 Execution Time: 1458.566 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64471.44..64471.44 rows=1 width=16) (actual time=1253.753..1253.755 rows=1 loops=1)
   ->  Sort  (cost=64471.44..64471.94 rows=200 width=16) (actual time=1253.752..1253.754 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64468.44..64470.44 rows=200 width=16) (actual time=1253.727..1253.734 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60718.44..62218.44 rows=150000 width=12) (actual time=1213.686..1237.132 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53445.71 rows=1454545 width=8) (actual time=28.960..877.196 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454545 width=8) (actual time=0.012..475.159 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.586..28.587 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..12.392 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.672 ms
 Execution Time: 1254.925 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72624.81..72624.82 rows=1 width=32) (actual time=555.835..558.430 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72624.81..72624.82 rows=1 width=32) (actual time=555.833..558.428 rows=1 loops=1)
         ->  Gather  (cost=72624.35..72624.76 rows=4 width=64) (actual time=550.750..558.398 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71624.35..71624.36 rows=1 width=64) (actual time=542.655..542.657 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7157.94..71301.67 rows=18439 width=33) (actual time=59.239..527.825 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1183.94..65279.27 rows=18439 width=16) (actual time=23.777..477.494 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8566
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1165.50 rows=73757 width=0) (actual time=16.141..16.141 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=35.029..35.030 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.190..21.359 rows=40000 loops=5)
 Planning Time: 13.294 ms
 Execution Time: 559.301 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72624.81..72624.82 rows=1 width=32) (actual time=116.155..118.438 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72624.81..72624.82 rows=1 width=32) (actual time=116.154..118.436 rows=1 loops=1)
         ->  Gather  (cost=72624.35..72624.76 rows=4 width=64) (actual time=110.253..118.412 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71624.35..71624.36 rows=1 width=64) (actual time=106.605..106.608 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7157.94..71301.67 rows=18439 width=33) (actual time=41.363..98.631 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1183.94..65279.27 rows=18439 width=16) (actual time=15.384..64.581 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8629
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1165.50 rows=73757 width=0) (actual time=8.589..8.589 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=25.558..25.559 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.823 rows=40000 loops=5)
 Planning Time: 0.638 ms
 Execution Time: 118.479 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241813.45..241925.80 rows=1 width=103) (actual time=1294.228..1302.019 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122303.94..122303.95 rows=1 width=32) (actual time=234.007..234.008 rows=1 loops=1)
           ->  HashAggregate  (cost=122052.64..122178.29 rows=10052 width=36) (actual time=230.644..233.399 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3709.51..119739.39 rows=231325 width=16) (actual time=27.892..117.725 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.68 rows=231325 width=0) (actual time=18.817..18.818 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119509.50..125127.14 rows=50 width=103) (actual time=1294.227..1302.016 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119509.22..125002.02 rows=50 width=36) (actual time=1293.572..1301.361 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119509.22..124323.51 rows=40208 width=36) (actual time=1031.503..1046.997 rows=41768 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118509.16..118534.29 rows=10052 width=36) (actual time=1019.803..1020.583 rows=8885 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1156kB
                           Worker 2:  Sort Method: quicksort  Memory: 1158kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=117715.29..117840.94 rows=10052 width=36) (actual time=1011.884..1017.409 rows=9887 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3709.51..117136.98 rows=57831 width=16) (actual time=42.183..960.266 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13252
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.68 rows=231325 width=0) (actual time=36.776..36.776 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.650..0.650 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.555 ms
 Execution Time: 1302.655 ms
(36 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241813.45..241925.80 rows=1 width=103) (actual time=412.938..421.735 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122303.94..122303.95 rows=1 width=32) (actual time=217.365..217.366 rows=1 loops=1)
           ->  HashAggregate  (cost=122052.64..122178.29 rows=10052 width=36) (actual time=214.126..216.753 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3709.51..119739.39 rows=231325 width=16) (actual time=27.645..102.826 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.68 rows=231325 width=0) (actual time=18.668..18.669 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119509.50..125127.14 rows=50 width=103) (actual time=412.936..421.732 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119509.22..125002.02 rows=50 width=36) (actual time=412.915..421.710 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119509.22..124323.51 rows=40208 width=36) (actual time=168.132..184.556 rows=41707 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118509.16..118534.29 rows=10052 width=36) (actual time=160.077..160.850 rows=8934 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1160kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1147kB
                           Worker 2:  Sort Method: quicksort  Memory: 1151kB
                           Worker 3:  Sort Method: quicksort  Memory: 1162kB
                           ->  Partial HashAggregate  (cost=117715.29..117840.94 rows=10052 width=36) (actual time=151.482..156.836 rows=9872 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3709.51..117136.98 rows=57831 width=16) (actual time=33.408..116.254 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14473
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.68 rows=231325 width=0) (actual time=26.683..26.683 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.017..0.017 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.748 ms
 Execution Time: 422.093 ms
(36 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29153.40..29153.40 rows=1 width=44) (actual time=427.224..428.100 rows=1 loops=1)
   ->  Sort  (cost=29153.40..29193.06 rows=15863 width=44) (actual time=427.223..428.098 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28186.53..29074.08 rows=15863 width=44) (actual time=379.485..424.950 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28186.53..28332.31 rows=58314 width=40) (actual time=379.462..387.920 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7682.62..23570.52 rows=58314 width=40) (actual time=45.881..115.877 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6682.62..16739.12 rows=14578 width=40) (actual time=39.147..107.362 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=8.181..58.218 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=2.503..7.429 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12149 width=40) (actual time=30.771..30.772 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12149 width=40) (actual time=0.263..28.348 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 13.243 ms
 Execution Time: 428.920 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29153.40..29153.40 rows=1 width=44) (actual time=399.689..400.141 rows=1 loops=1)
   ->  Sort  (cost=29153.40..29193.06 rows=15863 width=44) (actual time=399.688..400.139 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28186.53..29074.08 rows=15863 width=44) (actual time=350.597..397.054 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28186.53..28332.31 rows=58314 width=40) (actual time=350.573..359.291 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7682.62..23570.52 rows=58314 width=40) (actual time=21.691..81.110 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6682.62..16739.12 rows=14578 width=40) (actual time=19.471..76.029 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.150..41.965 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.086..3.076 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12149 width=40) (actual time=15.921..15.922 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12149 width=40) (actual time=0.015..12.168 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.721 ms
 Execution Time: 400.189 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=430818.87..430818.88 rows=1 width=32) (actual time=2285.610..2290.180 rows=1 loops=1)
   ->  Aggregate  (cost=430818.87..430818.88 rows=1 width=32) (actual time=2285.609..2290.178 rows=1 loops=1)
         ->  Merge Join  (cost=299960.58..430813.79 rows=2029 width=8) (actual time=1124.059..2290.075 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298959.71..415352.33 rows=196914 width=36) (actual time=1116.047..2258.773 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298959.71..406491.20 rows=787656 width=36) (actual time=1116.035..1730.020 rows=993188 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297959.65..311673.71 rows=196914 width=36) (actual time=1070.316..1467.207 rows=199166 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297959.65..301710.53 rows=1500352 width=9) (actual time=1070.298..1192.004 rows=1198974 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 24576kB
                                       Worker 0:  Sort Method: external merge  Disk: 24848kB
                                       Worker 1:  Sort Method: external merge  Disk: 24376kB
                                       Worker 2:  Sort Method: external merge  Disk: 18160kB
                                       Worker 3:  Sort Method: external merge  Disk: 19688kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.52 rows=1500352 width=9) (actual time=0.091..599.867 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12908.51 rows=6181 width=21) (actual time=4.111..13.587 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12893.06 rows=6181 width=21) (actual time=4.106..12.805 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11179.60 rows=2575 width=21) (actual time=0.928..96.408 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=86 width=4) (actual time=0.714..31.416 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.25 rows=30 width=17) (actual time=0.605..0.928 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 12.645 ms
 Execution Time: 2293.946 ms
(33 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=430818.87..430818.88 rows=1 width=32) (actual time=1870.438..1876.334 rows=1 loops=1)
   ->  Aggregate  (cost=430818.87..430818.88 rows=1 width=32) (actual time=1870.437..1876.332 rows=1 loops=1)
         ->  Merge Join  (cost=299960.58..430813.79 rows=2029 width=8) (actual time=811.522..1876.249 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298959.71..415352.33 rows=196914 width=36) (actual time=803.086..1853.264 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298959.71..406491.20 rows=787656 width=36) (actual time=803.065..1329.574 rows=992290 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297959.65..311673.71 rows=196914 width=36) (actual time=747.728..1144.469 rows=198978 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297959.65..301710.53 rows=1500352 width=9) (actual time=747.707..869.070 rows=1199207 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 17600kB
                                       Worker 0:  Sort Method: external merge  Disk: 25224kB
                                       Worker 1:  Sort Method: external merge  Disk: 26104kB
                                       Worker 2:  Sort Method: external merge  Disk: 25224kB
                                       Worker 3:  Sort Method: external merge  Disk: 17512kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.52 rows=1500352 width=9) (actual time=0.036..221.289 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12908.51 rows=6181 width=21) (actual time=3.296..5.752 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12893.06 rows=6181 width=21) (actual time=3.291..5.007 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11179.60 rows=2575 width=21) (actual time=0.142..19.332 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=86 width=4) (actual time=0.124..16.262 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.25 rows=30 width=17) (actual time=0.006..0.039 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.800 ms
 Execution Time: 1878.777 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894873.37..894873.62 rows=100 width=71) (actual time=3948.682..3968.790 rows=9 loops=1)
   ->  Sort  (cost=894873.37..899875.71 rows=2000937 width=71) (actual time=3948.681..3968.787 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523791.89..818398.99 rows=2000937 width=71) (actual time=3948.654..3968.769 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523791.89..773377.92 rows=2000936 width=71) (actual time=3948.647..3968.753 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522791.83..534047.10 rows=500234 width=71) (actual time=3938.458..3938.466 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522791.83..524042.42 rows=500234 width=44) (actual time=3938.443..3938.448 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 26kB
                                 Worker 2:  Sort Method: quicksort  Memory: 25kB
                                 Worker 3:  Sort Method: quicksort  Memory: 26kB
                                 ->  Parallel Hash Join  (cost=330742.70..465545.82 rows=500234 width=44) (actual time=3783.280..3938.395 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127563.52 rows=1500352 width=9) (actual time=0.007..93.100 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328726.10..328726.10 rows=161328 width=43) (actual time=3670.573..3670.577 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4192kB
                                             ->  Parallel Hash Join  (cost=296062.73..328726.10 rows=161328 width=43) (actual time=3589.580..3670.220 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291059.48..323299.36 rows=161328 width=24) (actual time=3563.188..3643.815 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.538..181.925 rows=300000 loops=5)
                                                         ->  Hash  (cost=284808.02..284808.02 rows=500117 width=4) (actual time=3416.008..3416.009 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279806.85 rows=500117 width=4) (actual time=734.084..3415.991 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227294.54 rows=6001407 width=9) (actual time=0.444..1998.785 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=26.024..26.025 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.073..17.019 rows=30000 loops=5)
 Planning Time: 17.363 ms
 Execution Time: 3969.131 ms
(40 rows)

SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894873.37..894873.62 rows=100 width=71) (actual time=3312.852..3330.346 rows=9 loops=1)
   ->  Sort  (cost=894873.37..899875.71 rows=2000937 width=71) (actual time=3312.851..3330.344 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523791.89..818398.99 rows=2000937 width=71) (actual time=3312.822..3330.327 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523791.89..773377.92 rows=2000936 width=71) (actual time=3312.812..3330.311 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522791.83..534047.10 rows=500234 width=71) (actual time=3305.954..3305.962 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522791.83..524042.42 rows=500234 width=44) (actual time=3305.940..3305.945 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=330742.70..465545.82 rows=500234 width=44) (actual time=3165.358..3305.891 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127563.52 rows=1500352 width=9) (actual time=0.008..90.225 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328726.10..328726.10 rows=161328 width=43) (actual time=3040.705..3040.709 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4160kB
                                             ->  Parallel Hash Join  (cost=296062.73..328726.10 rows=161328 width=43) (actual time=2931.442..2986.752 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291059.48..323299.36 rows=161328 width=24) (actual time=2910.945..2966.247 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.014..18.333 rows=300000 loops=5)
                                                         ->  Hash  (cost=284808.02..284808.02 rows=500117 width=4) (actual time=2891.108..2891.109 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279806.85 rows=500117 width=4) (actual time=628.046..2891.083 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227294.54 rows=6001407 width=9) (actual time=0.036..1122.405 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=19.662..19.662 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.010..5.002 rows=30000 loops=5)
 Planning Time: 1.156 ms
 Execution Time: 3330.420 ms
(40 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18289.07..18289.08 rows=1 width=32) (actual time=879.578..882.383 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18289.07..18289.08 rows=1 width=32) (actual time=879.577..882.381 rows=1 loops=1)
         ->  Gather  (cost=18288.85..18289.06 rows=2 width=32) (actual time=877.891..882.371 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17288.85..17288.86 rows=1 width=32) (actual time=872.292..872.293 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17288.49 rows=48 width=12) (actual time=28.661..872.183 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=207 width=30) (actual time=0.598..28.472 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.60 rows=1 width=21) (actual time=4.451..4.991 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.787 ms
 Execution Time: 883.155 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18289.07..18289.08 rows=1 width=32) (actual time=29.156..32.992 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18289.07..18289.08 rows=1 width=32) (actual time=29.155..32.990 rows=1 loops=1)
         ->  Gather  (cost=18288.85..18289.06 rows=2 width=32) (actual time=29.066..32.981 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17288.85..17288.86 rows=1 width=32) (actual time=26.489..26.490 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17288.49 rows=48 width=12) (actual time=0.418..26.451 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=207 width=30) (actual time=0.124..17.014 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.60 rows=1 width=21) (actual time=0.049..0.055 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.878 ms
 Execution Time: 33.033 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=276162.10..276162.11 rows=1 width=51) (actual time=3400.820..3400.896 rows=1 loops=1)
   ->  Sort  (cost=276162.10..276162.11 rows=1 width=51) (actual time=3400.819..3400.894 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=242393.17..276162.09 rows=1 width=51) (actual time=3225.198..3400.700 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.515..3.828 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.171..0.174 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.337..2.910 rows=10000 loops=1)
               ->  Materialize  (cost=242393.17..275706.78 rows=1 width=8) (actual time=6.044..7.512 rows=4371 loops=438)
                     ->  Merge Join  (cost=242393.17..275706.78 rows=1 width=8) (actual time=2647.052..3221.648 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=241392.30..257803.21 rows=485038 width=40) (actual time=2637.977..3159.850 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=241392.30..243676.14 rows=913534 width=13) (actual time=2637.963..2736.262 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14647.16..140910.17 rows=913534 width=13) (actual time=126.142..2230.709 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14418.77 rows=913534 width=0) (actual time=109.366..109.366 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11431.60 rows=8080 width=16) (actual time=8.687..29.230 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11411.40 rows=8080 width=16) (actual time=8.684..27.312 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.75 rows=3367 width=16) (actual time=0.574..208.863 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.235..28.077 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.232..0.246 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 18.730 ms
 Execution Time: 3403.828 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=276162.10..276162.11 rows=1 width=51) (actual time=1427.912..1428.004 rows=1 loops=1)
   ->  Sort  (cost=276162.10..276162.11 rows=1 width=51) (actual time=1427.911..1428.002 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=242393.17..276162.09 rows=1 width=51) (actual time=1252.530..1427.838 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.018..1.732 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.654 rows=10000 loops=1)
               ->  Materialize  (cost=242393.17..275706.78 rows=1 width=8) (actual time=1.643..3.010 rows=4371 loops=438)
                     ->  Merge Join  (cost=242393.17..275706.78 rows=1 width=8) (actual time=719.512..1249.685 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=241392.30..257803.21 rows=485038 width=40) (actual time=715.879..1211.573 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=241392.30..243676.14 rows=913534 width=13) (actual time=715.865..809.029 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14647.16..140910.17 rows=913534 width=13) (actual time=92.637..343.290 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14418.77 rows=913534 width=0) (actual time=76.484..76.484 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11431.60 rows=8080 width=16) (actual time=3.279..7.078 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11411.40 rows=8080 width=16) (actual time=3.276..5.302 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.75 rows=3367 width=16) (actual time=0.067..15.936 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.046..12.553 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.004 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.437 ms
 Execution Time: 1431.072 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193918.66..193918.66 rows=1 width=34) (actual time=1491.280..1491.402 rows=100 loops=1)
   ->  Sort  (cost=193918.66..193918.66 rows=1 width=34) (actual time=1491.279..1491.394 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=193918.63..193918.65 rows=1 width=34) (actual time=1490.234..1490.974 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=193918.63..193918.63 rows=1 width=26) (actual time=1490.225..1490.493 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..193918.62 rows=1 width=26) (actual time=10.623..1476.627 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..193915.22 rows=1 width=38) (actual time=10.341..1397.788 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..193911.91 rows=1 width=34) (actual time=8.759..151.769 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..192911.81 rows=1 width=34) (actual time=2.522..780.921 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133624.42 rows=19901 width=34) (actual time=1.914..554.352 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.40 rows=500117 width=8) (actual time=0.203..485.350 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.630..1.632 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.463..1.548 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.223..0.225 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.235..1.260 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.145..0.145 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.087..0.087 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.010..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.992 ms
 Execution Time: 1492.380 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193918.66..193918.66 rows=1 width=34) (actual time=510.457..510.562 rows=100 loops=1)
   ->  Sort  (cost=193918.66..193918.66 rows=1 width=34) (actual time=510.456..510.554 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=193918.63..193918.65 rows=1 width=34) (actual time=509.211..509.926 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=193918.63..193918.63 rows=1 width=26) (actual time=509.200..509.448 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..193918.62 rows=1 width=26) (actual time=1.693..496.156 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..193915.22 rows=1 width=38) (actual time=1.649..477.246 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..193911.91 rows=1 width=34) (actual time=1.640..429.731 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..192911.81 rows=1 width=34) (actual time=0.961..473.946 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133624.42 rows=19901 width=34) (actual time=0.528..355.031 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.40 rows=500117 width=8) (actual time=0.038..280.974 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.418..0.419 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.060..0.348 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.047..0.285 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.028..0.028 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.111 ms
 Execution Time: 510.643 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12913.43..12913.56 rows=1 width=72) (actual time=112.519..115.028 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=46.788..46.862 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=46.694..46.851 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=40.542..40.543 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.113..39.270 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6670.60..6768.00 rows=730 width=72) (actual time=112.518..114.952 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6670.60..6749.14 rows=608 width=72) (actual time=112.447..114.945 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5670.58..5678.94 rows=304 width=72) (actual time=63.006..63.171 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5670.58..5671.34 rows=304 width=38) (actual time=62.933..62.976 rows=1107 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 199kB
                           Worker 0:  Sort Method: quicksort  Memory: 198kB
                           Worker 1:  Sort Method: quicksort  Memory: 193kB
                           ->  Nested Loop Anti Join  (cost=0.43..5658.04 rows=304 width=38) (actual time=0.068..62.066 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..21.860 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.006..0.006 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 11.939 ms
 Execution Time: 115.699 ms
(32 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12913.43..12913.56 rows=1 width=72) (actual time=69.066..71.484 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=29.770..29.850 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=29.654..29.832 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=27.427..27.427 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.015..26.242 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6670.60..6768.00 rows=730 width=72) (actual time=69.066..71.404 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6670.60..6749.14 rows=608 width=72) (actual time=68.986..71.396 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5670.58..5678.94 rows=304 width=72) (actual time=36.478..36.701 rows=5 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5670.58..5671.34 rows=304 width=38) (actual time=36.406..36.459 rows=1365 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 208kB
                           Worker 0:  Sort Method: quicksort  Memory: 142kB
                           Worker 1:  Sort Method: quicksort  Memory: 143kB
                           ->  Nested Loop Anti Join  (cost=0.43..5658.04 rows=304 width=38) (actual time=0.056..35.698 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..19.717 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.695 ms
 Execution Time: 71.540 ms
(32 rows)

