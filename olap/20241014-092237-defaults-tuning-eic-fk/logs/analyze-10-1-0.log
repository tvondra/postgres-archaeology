query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424416.66..424416.66 rows=1 width=236) (actual time=7118.624..7118.625 rows=1 loops=1)
   ->  Sort  (cost=424416.66..424416.67 rows=6 width=236) (actual time=7118.623..7118.623 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424416.46..424416.62 rows=6 width=236) (actual time=7118.597..7118.605 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187578.10 rows=5920959 width=25) (actual time=0.394..1160.774 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 13.774 ms
 Execution time: 7119.525 ms
(11 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424416.66..424416.66 rows=1 width=236) (actual time=7199.708..7199.709 rows=1 loops=1)
   ->  Sort  (cost=424416.66..424416.67 rows=6 width=236) (actual time=7199.707..7199.708 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424416.46..424416.62 rows=6 width=236) (actual time=7199.681..7199.689 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187578.10 rows=5920959 width=25) (actual time=0.026..991.026 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 0.452 ms
 Execution time: 7199.975 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65641.98..65641.99 rows=1 width=192) (actual time=639.203..639.217 rows=100 loops=1)
   ->  Sort  (cost=65641.98..65641.99 rows=1 width=192) (actual time=639.202..639.211 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Merge Join  (cost=44372.60..65641.97 rows=1 width=192) (actual time=428.024..638.707 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=781 width=30) (actual time=0.013..81.132 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44372.18..44772.18 rows=160000 width=172) (actual time=427.561..452.452 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30512kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=5.794..312.104 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..194.988 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=5.786..5.788 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.015..5.380 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..4.162 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.012..0.013 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.007..0.012 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.138..0.138 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.126..0.136 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.120..0.133 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.118..0.128 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.115..0.116 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 20.498 ms
 Execution time: 644.109 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65641.98..65641.99 rows=1 width=192) (actual time=379.088..379.102 rows=100 loops=1)
   ->  Sort  (cost=65641.98..65641.99 rows=1 width=192) (actual time=379.087..379.095 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Merge Join  (cost=44372.60..65641.97 rows=1 width=192) (actual time=280.322..378.723 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=781 width=30) (actual time=0.014..48.396 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44372.18..44772.18 rows=160000 width=172) (actual time=280.236..304.535 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30512kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.458..170.650 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..44.946 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.451..2.453 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.016..2.066 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..0.595 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.013..0.014 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.009..0.016 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.880 ms
 Execution time: 383.175 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=301403.25..301403.28 rows=10 width=44) (actual time=2144.871..2144.874 rows=10 loops=1)
   ->  Sort  (cost=301403.25..302191.81 rows=315425 width=44) (actual time=2144.870..2144.873 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=285124.28..294587.03 rows=315425 width=44) (actual time=2126.742..2142.934 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=285124.28..285912.84 rows=315425 width=24) (actual time=2126.729..2127.927 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=53321.94..256315.04 rows=315425 width=24) (actual time=733.789..2120.255 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187578.10 rows=3269736 width=16) (actual time=0.011..1104.222 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=51513.16..51513.16 rows=144702 width=12) (actual time=732.730..732.731 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14435.37..51513.16 rows=144702 width=12) (actual time=114.114..704.941 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8588.50..43766.39 rows=723751 width=16) (actual time=62.545..521.798 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8407.56 rows=723751 width=0) (actual time=59.549..59.550 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29990 width=4) (actual time=51.491..51.491 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29990 width=4) (actual time=0.004..47.215 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 18.646 ms
 Execution time: 2145.569 ms
(30 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=301403.25..301403.28 rows=10 width=44) (actual time=1455.046..1455.050 rows=10 loops=1)
   ->  Sort  (cost=301403.25..302191.81 rows=315425 width=44) (actual time=1455.045..1455.047 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=285124.28..294587.03 rows=315425 width=44) (actual time=1436.653..1452.884 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=285124.28..285912.84 rows=315425 width=24) (actual time=1436.640..1437.839 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=53321.94..256315.04 rows=315425 width=24) (actual time=278.666..1430.576 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187578.10 rows=3269736 width=16) (actual time=0.011..881.472 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=51513.16..51513.16 rows=144702 width=12) (actual time=278.171..278.172 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14435.37..51513.16 rows=144702 width=12) (actual time=67.244..256.779 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8588.50..43766.39 rows=723751 width=16) (actual time=42.439..133.240 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8407.56 rows=723751 width=0) (actual time=39.446..39.446 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29990 width=4) (actual time=24.780..24.781 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29990 width=4) (actual time=0.004..21.685 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 0.820 ms
 Execution time: 1455.122 ms
(30 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=188724.78..188724.78 rows=1 width=24) (actual time=2145.025..2145.026 rows=1 loops=1)
   ->  Sort  (cost=188724.78..188724.79 rows=5 width=24) (actual time=2145.024..2145.025 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=188724.70..188724.75 rows=5 width=24) (actual time=2145.002..2145.003 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=817.36..188440.56 rows=56829 width=16) (actual time=11.001..2120.032 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=816.92..27800.36 rows=56829 width=20) (actual time=10.944..541.022 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..802.72 rows=56829 width=0) (actual time=8.270..8.270 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.028..0.028 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 13.701 ms
 Execution time: 2145.883 ms
(18 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=188724.78..188724.78 rows=1 width=24) (actual time=201.773..201.775 rows=1 loops=1)
   ->  Sort  (cost=188724.78..188724.79 rows=5 width=24) (actual time=201.772..201.773 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=188724.70..188724.75 rows=5 width=24) (actual time=201.733..201.734 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=817.36..188440.56 rows=56829 width=16) (actual time=7.549..189.097 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=816.92..27800.36 rows=56829 width=20) (actual time=7.528..40.011 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..802.72 rows=56829 width=0) (actual time=4.760..4.760 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 0.751 ms
 Execution time: 201.871 ms
(18 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=195474.96..195474.96 rows=1 width=58) (actual time=2345.830..2345.834 rows=1 loops=1)
   ->  Sort  (cost=195474.96..195475.02 rows=25 width=58) (actual time=2345.829..2345.833 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=195380.27..195474.83 rows=25 width=58) (actual time=2343.369..2345.819 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=195380.27..195399.12 rows=7540 width=38) (actual time=2342.754..2343.042 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10198.10..194894.68 rows=7540 width=38) (actual time=95.238..2338.315 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9725.10..193431.16 rows=188669 width=50) (actual time=89.562..2296.106 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9724.67..40748.09 rows=47156 width=38) (actual time=89.487..736.628 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3387.66..33055.35 rows=235779 width=8) (actual time=27.770..609.838 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3328.72 rows=235779 width=0) (actual time=24.777..24.778 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=61.671..61.672 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.028..56.285 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..39.452 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.019..0.020 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.014..0.019 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.031..0.033 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.622..5.622 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..4.388 rows=10000 loops=1)
 Planning time: 22.005 ms
 Execution time: 2346.695 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=195474.96..195474.96 rows=1 width=58) (actual time=338.872..338.876 rows=1 loops=1)
   ->  Sort  (cost=195474.96..195475.02 rows=25 width=58) (actual time=338.871..338.875 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=195380.27..195474.83 rows=25 width=58) (actual time=336.468..338.860 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=195380.27..195399.12 rows=7540 width=38) (actual time=335.872..336.152 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10198.10..194894.68 rows=7540 width=38) (actual time=54.209..333.252 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9725.10..193431.16 rows=188669 width=50) (actual time=51.592..309.721 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9724.67..40748.09 rows=47156 width=38) (actual time=51.577..147.110 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3387.66..33055.35 rows=235779 width=8) (actual time=18.014..71.870 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3328.72 rows=235779 width=0) (actual time=15.081..15.081 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=33.530..33.531 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.029..29.246 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..8.497 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.019..0.020 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.587..2.588 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..1.427 rows=10000 loops=1)
 Planning time: 2.506 ms
 Execution time: 338.960 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109743.90..109743.91 rows=1 width=32) (actual time=1318.976..1318.977 rows=1 loops=1)
   ->  Aggregate  (cost=109743.90..109743.91 rows=1 width=32) (actual time=1318.975..1318.975 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21421.76..109140.82 rows=120616 width=12) (actual time=134.509..1248.503 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21391.61 rows=120616 width=0) (actual time=125.043..125.043 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 10.878 ms
 Execution time: 1319.536 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109743.90..109743.91 rows=1 width=32) (actual time=217.323..217.324 rows=1 loops=1)
   ->  Aggregate  (cost=109743.90..109743.91 rows=1 width=32) (actual time=217.322..217.323 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21421.76..109140.82 rows=120616 width=12) (actual time=105.996..183.012 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21391.61 rows=120616 width=0) (actual time=97.036..97.036 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.360 ms
 Execution time: 217.365 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232617.96..232618.00 rows=1 width=92) (actual time=3251.061..3251.065 rows=1 loops=1)
   ->  GroupAggregate  (cost=232617.96..232825.30 rows=5924 width=92) (actual time=3251.060..3251.064 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=232617.96..232632.77 rows=5924 width=72) (actual time=3250.401..3250.457 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=84075.67..232246.76 rows=5924 width=72) (actual time=756.466..3246.578 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=28910.77..176290.73 rows=142349 width=46) (actual time=218.703..2672.975 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=28545.67..167822.84 rows=1781145 width=24) (actual time=213.034..2448.323 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28100.38 rows=1781145 width=0) (actual time=195.880..195.880 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.536..5.537 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.014..5.405 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..4.419 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.008 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=537.184..537.186 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=55.178..514.117 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.013..284.006 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=55.139..55.140 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.018..52.967 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..38.558 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 22.551 ms
 Execution time: 3251.187 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232617.96..232618.00 rows=1 width=92) (actual time=926.197..926.201 rows=1 loops=1)
   ->  GroupAggregate  (cost=232617.96..232825.30 rows=5924 width=92) (actual time=926.196..926.200 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=232617.96..232632.77 rows=5924 width=72) (actual time=925.554..925.608 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=84075.67..232246.76 rows=5924 width=72) (actual time=443.885..922.932 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=28910.77..176290.73 rows=142349 width=46) (actual time=147.066..598.879 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=28545.67..167822.84 rows=1781145 width=24) (actual time=145.022..409.154 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28100.38 rows=1781145 width=0) (actual time=127.679..127.679 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=1.981..1.982 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.016..1.893 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..0.594 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=296.647..296.648 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=27.757..278.560 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.008..77.594 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=27.735..27.736 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.015..26.331 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.219 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 2.466 ms
 Execution time: 926.308 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116008.78..116008.82 rows=1 width=40) (actual time=6428.959..6428.965 rows=1 loops=1)
   ->  GroupAggregate  (cost=116008.78..116116.15 rows=2386 width=40) (actual time=6428.958..6428.963 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=116008.78..116014.74 rows=2386 width=46) (actual time=6428.367..6428.424 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Nested Loop  (cost=49766.46..115874.92 rows=2386 width=46) (actual time=689.238..6425.798 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 29943
                     ->  Hash Join  (cost=49766.46..114999.81 rows=2386 width=20) (actual time=689.210..6415.263 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49318.46..114545.54 rows=2389 width=20) (actual time=683.665..6408.013 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..65053.63 rows=40000 width=20) (actual time=1.448..5704.944 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.959..73.871 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.55 rows=30 width=24) (actual time=0.311..4.247 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48198.28..48198.28 rows=89580 width=8) (actual time=678.886..678.889 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=12773.39..48198.28 rows=89580 width=8) (actual time=103.149..660.173 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6436.38..39285.85 rows=447898 width=12) (actual time=45.329..512.373 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6324.41 rows=447898 width=0) (actual time=42.359..42.359 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=57.757..57.759 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.229..54.034 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..37.716 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.222..0.224 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.217..0.222 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.211..0.211 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.533..5.533 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..4.443 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.012 rows=25 loops=1)
 Planning time: 28.319 ms
 Execution time: 6429.787 ms
(50 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116008.78..116008.82 rows=1 width=40) (actual time=285.552..285.557 rows=1 loops=1)
   ->  GroupAggregate  (cost=116008.78..116116.15 rows=2386 width=40) (actual time=285.551..285.555 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=116008.78..116014.74 rows=2386 width=46) (actual time=284.982..285.036 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Nested Loop  (cost=49766.46..115874.92 rows=2386 width=46) (actual time=209.304..284.345 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 29943
                     ->  Hash Join  (cost=49766.46..114999.81 rows=2386 width=20) (actual time=209.286..280.179 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49318.46..114545.54 rows=2389 width=20) (actual time=206.847..276.917 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..65053.63 rows=40000 width=20) (actual time=0.046..63.267 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.034..22.052 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.55 rows=30 width=24) (actual time=0.003..0.027 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48198.28..48198.28 rows=89580 width=8) (actual time=206.710..206.713 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=12773.39..48198.28 rows=89580 width=8) (actual time=63.459..193.622 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6436.38..39285.85 rows=447898 width=12) (actual time=31.056..100.505 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6324.41 rows=447898 width=0) (actual time=28.114..28.114 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=32.376..32.378 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.237..29.188 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..8.522 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.231..0.232 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.009..0.015 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.427..2.427 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..1.392 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning time: 2.885 ms
 Execution time: 285.867 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=249367.77..249367.77 rows=1 width=66) (actual time=12630.348..12630.352 rows=1 loops=1)
   ->  Sort  (cost=249367.77..249518.08 rows=60125 width=66) (actual time=12630.347..12630.351 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=248014.96..249067.15 rows=60125 width=66) (actual time=12628.965..12629.390 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=72916.26..242715.96 rows=302800 width=57) (actual time=643.049..12309.709 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=72914.70..240270.80 rows=302800 width=31) (actual time=643.012..12181.939 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Nested Loop  (cost=7173.69..163734.95 rows=302800 width=31) (actual time=73.580..11260.228 rows=325928 loops=1)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=7173.26..34913.41 rows=40404 width=26) (actual time=73.235..402.769 rows=43520 loops=1)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=6725.26..34359.31 rows=40404 width=18) (actual time=67.747..378.611 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..213.495 rows=800000 loops=1)
                                             ->  Hash  (cost=6599.00..6599.00 rows=10101 width=4) (actual time=67.659..67.659 rows=10880 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 511kB
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=10101 width=4) (actual time=0.008..65.510 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.480..5.481 rows=10000 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..4.406 rows=10000 loops=1)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.037..0.246 rows=7 loops=43520)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=567.414..567.415 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.014..358.829 rows=1500000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.010 rows=25 loops=1)
 Planning time: 29.680 ms
 Execution time: 12631.015 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=249367.77..249367.77 rows=1 width=66) (actual time=1606.589..1606.593 rows=1 loops=1)
   ->  Sort  (cost=249367.77..249518.08 rows=60125 width=66) (actual time=1606.587..1606.591 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=248014.96..249067.15 rows=60125 width=66) (actual time=1606.084..1606.505 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=72916.26..242715.96 rows=302800 width=57) (actual time=430.102..1348.641 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=72914.70..240270.80 rows=302800 width=31) (actual time=430.074..1249.344 rows=325928 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Nested Loop  (cost=7173.69..163734.95 rows=302800 width=31) (actual time=41.148..592.867 rows=325928 loops=1)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=7173.26..34913.41 rows=40404 width=26) (actual time=41.133..202.348 rows=43520 loops=1)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=6725.26..34359.31 rows=40404 width=18) (actual time=38.670..186.238 rows=43520 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..47.045 rows=800000 loops=1)
                                             ->  Hash  (cost=6599.00..6599.00 rows=10101 width=4) (actual time=38.638..38.639 rows=10880 loops=1)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 511kB
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=10101 width=4) (actual time=0.008..37.096 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.456..2.456 rows=10000 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.406 rows=10000 loops=1)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.002..0.007 rows=7 loops=43520)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Hash  (cost=41131.00..41131.00 rows=1500000 width=8) (actual time=387.596..387.597 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 22817kB
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.011..189.629 rows=1500000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=1)
 Planning time: 3.845 ms
 Execution time: 1607.269 ms
(35 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=209119.23..209119.28 rows=20 width=202) (actual time=2278.155..2278.161 rows=20 loops=1)
   ->  Sort  (cost=209119.23..209249.63 rows=52160 width=202) (actual time=2278.154..2278.158 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=207079.27..207731.27 rows=52160 width=202) (actual time=2246.932..2267.319 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7736.99..206427.27 rows=52160 width=182) (actual time=98.477..2134.852 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7735.43..206265.58 rows=52160 width=160) (actual time=98.459..2107.977 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=763.43..199156.66 rows=52160 width=16) (actual time=11.343..1975.594 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=763.00..27689.46 rows=53031 width=8) (actual time=10.593..526.092 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..749.74 rows=53031 width=0) (actual time=7.909..7.909 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.023..0.025 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=86.770..86.770 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.008..50.071 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.013..0.013 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.008 rows=25 loops=1)
 Planning time: 23.422 ms
 Execution time: 2279.403 ms
(28 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=209119.23..209119.28 rows=20 width=202) (actual time=480.884..480.890 rows=20 loops=1)
   ->  Sort  (cost=209119.23..209249.63 rows=52160 width=202) (actual time=480.883..480.887 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=207079.27..207731.27 rows=52160 width=202) (actual time=451.919..470.718 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7736.99..206427.27 rows=52160 width=182) (actual time=68.371..371.681 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7735.43..206265.58 rows=52160 width=160) (actual time=68.354..349.183 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=763.43..199156.66 rows=52160 width=16) (actual time=7.311..252.257 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=763.00..27689.46 rows=53031 width=8) (actual time=7.274..41.678 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..749.74 rows=53031 width=0) (actual time=4.501..4.501 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=60.677..60.677 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.008..25.422 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.013..0.013 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.008 rows=25 loops=1)
 Planning time: 1.492 ms
 Execution time: 481.340 ms
(28 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22744.76..22744.77 rows=1 width=36) (actual time=754.139..754.143 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.38..10892.39 rows=1 width=32) (actual time=26.687..26.689 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.37 rows=32000 width=10) (actual time=0.053..18.342 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.047..0.260 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.038..0.206 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11852.37..11932.37 rows=32000 width=36) (actual time=754.138..754.139 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.37..11692.37 rows=32000 width=36) (actual time=743.330..753.993 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.37 rows=32000 width=14) (actual time=0.859..686.751 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.654..3.084 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.644..2.977 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.555..0.555 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.091..1.646 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 14.055 ms
 Execution time: 754.536 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22744.76..22744.77 rows=1 width=36) (actual time=80.568..80.572 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.38..10892.39 rows=1 width=32) (actual time=26.671..26.673 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.37 rows=32000 width=10) (actual time=0.054..18.370 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.049..0.264 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.038..0.208 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11852.37..11932.37 rows=32000 width=36) (actual time=80.566..80.568 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.37..11692.37 rows=32000 width=36) (actual time=69.744..80.429 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.37 rows=32000 width=14) (actual time=0.053..26.320 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.048..0.385 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.327 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 1.148 ms
 Execution time: 80.701 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=310787.87..310869.22 rows=1 width=27) (actual time=2002.845..2002.846 rows=1 loops=1)
   ->  GroupAggregate  (cost=310787.87..311357.30 rows=7 width=27) (actual time=2002.844..2002.845 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=310787.87..310859.04 rows=28468 width=27) (actual time=1998.740..1999.295 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 3187kB
               ->  Merge Join  (cost=249702.89..308681.66 rows=28468 width=27) (actual time=1505.629..1991.372 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..386.947 rows=1499957 loops=1)
                     ->  Sort  (cost=249698.79..249769.96 rows=28468 width=15) (actual time=1505.539..1508.343 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247592.58 rows=28468 width=15) (actual time=0.682..1498.733 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 14.570 ms
 Execution time: 2003.330 ms
(17 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=310787.87..310869.22 rows=1 width=27) (actual time=1581.521..1581.522 rows=1 loops=1)
   ->  GroupAggregate  (cost=310787.87..311357.30 rows=7 width=27) (actual time=1581.520..1581.521 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=310787.87..310859.04 rows=28468 width=27) (actual time=1577.395..1577.952 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 3187kB
               ->  Merge Join  (cost=249702.89..308681.66 rows=28468 width=27) (actual time=1274.726..1572.233 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..204.702 rows=1499957 loops=1)
                     ->  Sort  (cost=249698.79..249769.96 rows=28468 width=15) (actual time=1274.701..1276.999 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247592.58 rows=28468 width=15) (actual time=0.104..1268.326 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 0.580 ms
 Execution time: 1581.570 ms
(17 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.57..64702.58 rows=1 width=16) (actual time=1446.930..1446.932 rows=1 loops=1)
   ->  Sort  (cost=64702.57..64703.07 rows=200 width=16) (actual time=1446.929..1446.931 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.57..64701.57 rows=200 width=16) (actual time=1446.903..1446.909 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.57..62449.57 rows=150000 width=12) (actual time=1406.085..1429.222 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.28 rows=1484858 width=8) (actual time=33.416..1049.768 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484858 width=8) (actual time=0.411..627.375 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.678..32.679 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.406..16.456 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 13.182 ms
 Execution time: 1448.575 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.57..64702.58 rows=1 width=16) (actual time=1246.906..1246.909 rows=1 loops=1)
   ->  Sort  (cost=64702.57..64703.07 rows=200 width=16) (actual time=1246.905..1246.907 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.57..64701.57 rows=200 width=16) (actual time=1246.880..1246.887 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.57..62449.57 rows=150000 width=12) (actual time=1205.978..1229.292 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.28 rows=1484858 width=8) (actual time=28.217..867.938 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484858 width=8) (actual time=0.010..472.122 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=27.857..27.858 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.040..12.804 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.575 ms
 Execution time: 1248.064 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75947.13..75947.14 rows=1 width=32) (actual time=1057.494..1057.496 rows=1 loops=1)
   ->  Aggregate  (cost=75947.13..75947.14 rows=1 width=32) (actual time=1057.493..1057.494 rows=1 loops=1)
         ->  Hash Join  (cost=9775.80..74663.45 rows=73353 width=33) (actual time=106.043..979.173 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1176.80..65871.90 rows=73353 width=16) (actual time=17.964..832.587 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1158.46 rows=73353 width=0) (actual time=12.590..12.590 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=87.850..87.851 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.007..55.886 rows=200000 loops=1)
 Planning time: 13.041 ms
 Execution time: 1058.226 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75947.13..75947.14 rows=1 width=32) (actual time=184.168..184.170 rows=1 loops=1)
   ->  Aggregate  (cost=75947.13..75947.14 rows=1 width=32) (actual time=184.167..184.168 rows=1 loops=1)
         ->  Hash Join  (cost=9775.80..74663.45 rows=73353 width=33) (actual time=68.430..150.263 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1176.80..65871.90 rows=73353 width=16) (actual time=12.521..66.310 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1158.46 rows=73353 width=0) (actual time=7.393..7.393 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=55.707..55.708 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.009..26.890 rows=200000 loops=1)
 Planning time: 0.567 ms
 Execution time: 184.241 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244185.15..244185.21 rows=1 width=103) (actual time=1468.847..1468.850 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120933.75..120933.76 rows=1 width=32) (actual time=204.255..204.256 rows=1 loops=1)
           ->  HashAggregate  (cost=120683.50..120808.62 rows=10010 width=36) (actual time=201.024..203.561 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3532.00..118480.51 rows=220299 width=16) (actual time=27.004..91.372 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3476.92 rows=220299 width=0) (actual time=17.955..17.955 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123251.40..123845.05 rows=10010 width=103) (actual time=1468.846..1468.847 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.300..4.871 rows=8449 loops=1)
         ->  Sort  (cost=123251.11..123276.14 rows=10010 width=36) (actual time=1463.483..1463.484 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122335.74..122585.99 rows=10010 width=36) (actual time=1461.044..1463.475 rows=1 loops=1)
                     ->  HashAggregate  (cost=122335.74..122485.89 rows=10010 width=36) (actual time=1461.043..1463.473 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3532.00..118480.51 rows=220299 width=16) (actual time=39.927..1076.162 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3476.92 rows=220299 width=0) (actual time=30.006..30.006 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 10.913 ms
 Execution time: 1469.186 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244185.15..244185.21 rows=1 width=103) (actual time=440.032..440.034 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120933.75..120933.76 rows=1 width=32) (actual time=203.994..203.995 rows=1 loops=1)
           ->  HashAggregate  (cost=120683.50..120808.62 rows=10010 width=36) (actual time=200.619..203.305 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3532.00..118480.51 rows=220299 width=16) (actual time=26.455..90.949 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3476.92 rows=220299 width=0) (actual time=17.497..17.497 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123251.40..123845.05 rows=10010 width=103) (actual time=440.031..440.032 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.006..1.320 rows=8449 loops=1)
         ->  Sort  (cost=123251.11..123276.14 rows=10010 width=36) (actual time=438.229..438.230 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122335.74..122585.99 rows=10010 width=36) (actual time=435.771..438.225 rows=1 loops=1)
                     ->  HashAggregate  (cost=122335.74..122485.89 rows=10010 width=36) (actual time=435.770..438.224 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3532.00..118480.51 rows=220299 width=16) (actual time=28.324..118.455 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3476.92 rows=220299 width=0) (actual time=19.295..19.295 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.626 ms
 Execution time: 440.392 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33780.71..33780.71 rows=1 width=44) (actual time=599.758..599.760 rows=1 loops=1)
   ->  Sort  (cost=33780.71..33820.49 rows=15910 width=44) (actual time=599.757..599.759 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32808.24..33701.16 rows=15910 width=44) (actual time=547.593..596.434 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32808.24..32955.00 rows=58706 width=40) (actual time=547.572..554.733 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9814.34..28158.36 rows=58706 width=40) (actual time=83.512..290.135 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.082..140.589 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.143..5.571 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29353 width=40) (actual time=77.395..77.395 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29353 width=40) (actual time=0.008..71.734 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 14.539 ms
 Execution time: 600.500 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33780.71..33780.71 rows=1 width=44) (actual time=550.248..550.250 rows=1 loops=1)
   ->  Sort  (cost=33780.71..33820.49 rows=15910 width=44) (actual time=550.247..550.249 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32808.24..33701.16 rows=15910 width=44) (actual time=497.572..546.964 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32808.24..32955.00 rows=58706 width=40) (actual time=497.551..505.073 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9814.34..28158.36 rows=58706 width=40) (actual time=49.337..240.971 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.129..122.287 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.102 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29353 width=40) (actual time=47.179..47.179 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29353 width=40) (actual time=0.006..42.658 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.945 ms
 Execution time: 550.304 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=982960.40..982960.41 rows=1 width=32) (actual time=4484.385..4484.387 rows=1 loops=1)
   ->  Aggregate  (cost=982960.40..982960.41 rows=1 width=32) (actual time=4484.384..4484.385 rows=1 loops=1)
         ->  Merge Join  (cost=914178.73..982955.45 rows=1978 width=8) (actual time=2748.730..4484.193 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914177.88..962169.76 rows=198735 width=36) (actual time=2742.457..4265.627 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914177.88..929181.50 rows=6001448 width=9) (actual time=2742.423..3366.914 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111632kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172574.48 rows=6001448 width=9) (actual time=0.352..953.791 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..18212.41 rows=5971 width=21) (actual time=1.492..206.619 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..18197.48 rows=5971 width=21) (actual time=1.489..204.633 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=199 width=4) (actual time=1.157..65.534 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.29 rows=30 width=17) (actual time=0.419..0.660 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 16.562 ms
 Execution time: 4499.793 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=982960.40..982960.41 rows=1 width=32) (actual time=4094.607..4094.608 rows=1 loops=1)
   ->  Aggregate  (cost=982960.40..982960.41 rows=1 width=32) (actual time=4094.606..4094.607 rows=1 loops=1)
         ->  Merge Join  (cost=914178.73..982955.45 rows=1978 width=8) (actual time=2520.243..4094.502 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914177.88..962169.76 rows=198735 width=36) (actual time=2515.381..4041.355 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914177.88..929181.50 rows=6001448 width=9) (actual time=2515.360..3139.262 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111632kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172574.48 rows=6001448 width=9) (actual time=0.025..743.470 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..18212.41 rows=5971 width=21) (actual time=0.148..42.853 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..18197.48 rows=5971 width=21) (actual time=0.145..41.805 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=199 width=4) (actual time=0.135..36.304 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.29 rows=30 width=17) (actual time=0.003..0.022 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.698 ms
 Execution time: 4109.819 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1856139.36..1856139.61 rows=100 width=71) (actual time=4343.911..4343.914 rows=9 loops=1)
   ->  Sort  (cost=1856139.36..1871146.60 rows=6002896 width=71) (actual time=4343.910..4343.912 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1491647.83..1626712.99 rows=6002896 width=71) (actual time=4343.878..4343.893 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1491647.83..1506655.07 rows=6002896 width=44) (actual time=4343.871..4343.875 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6996.60..697094.97 rows=6002896 width=44) (actual time=1047.642..4343.839 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=24.60..674364.92 rows=6002896 width=25) (actual time=979.819..4275.984 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..368343.99 rows=1500362 width=24) (actual time=750.095..3396.316 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..307.125 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..276029.92 rows=1500362 width=4) (actual time=648.129..3021.170 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227268.15 rows=6001448 width=9) (actual time=0.003..1644.965 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227268.15 rows=6001448 width=9) (actual time=0.009..614.772 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.510..67.510 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..43.006 rows=150000 loops=1)
 Planning time: 17.911 ms
 Execution time: 4344.746 ms
(27 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1856139.36..1856139.61 rows=100 width=71) (actual time=3347.225..3347.228 rows=9 loops=1)
   ->  Sort  (cost=1856139.36..1871146.60 rows=6002896 width=71) (actual time=3347.224..3347.226 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1491647.83..1626712.99 rows=6002896 width=71) (actual time=3347.195..3347.211 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1491647.83..1506655.07 rows=6002896 width=44) (actual time=3347.190..3347.194 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6996.60..697094.97 rows=6002896 width=44) (actual time=800.463..3347.162 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=24.60..674364.92 rows=6002896 width=25) (actual time=759.384..3306.054 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..368343.99 rows=1500362 width=24) (actual time=516.853..2380.193 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..161.887 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..276029.92 rows=1500362 width=4) (actual time=456.756..2151.652 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227268.15 rows=6001448 width=9) (actual time=0.003..808.665 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227268.15 rows=6001448 width=9) (actual time=0.008..660.238 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.769..40.770 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.889 rows=150000 loops=1)
 Planning time: 0.979 ms
 Execution time: 3347.302 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=35760.44..35760.45 rows=1 width=32) (actual time=2673.345..2673.347 rows=1 loops=1)
   ->  Aggregate  (cost=35760.44..35760.45 rows=1 width=32) (actual time=2673.345..2673.345 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35759.57 rows=115 width=12) (actual time=11.969..2672.967 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=497 width=30) (actual time=1.112..83.926 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.59 rows=1 width=21) (actual time=4.554..5.105 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 15.011 ms
 Execution time: 2674.059 ms
(12 rows)

SET
SET
SET


 Limit  (cost=35760.44..35760.45 rows=1 width=32) (actual time=59.703..59.704 rows=1 loops=1)
   ->  Aggregate  (cost=35760.44..35760.45 rows=1 width=32) (actual time=59.702..59.703 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35759.57 rows=115 width=12) (actual time=0.301..59.612 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=497 width=30) (actual time=0.193..42.330 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.59 rows=1 width=21) (actual time=0.030..0.034 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 1.091 ms
 Execution time: 59.748 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=274554.52..274554.53 rows=1 width=51) (actual time=3897.091..3897.094 rows=1 loops=1)
   ->  Sort  (cost=274554.52..274554.53 rows=1 width=51) (actual time=3897.090..3897.092 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=237196.16..274554.51 rows=1 width=51) (actual time=3726.165..3896.903 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.249..3.534 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.240..2.733 rows=10000 loops=1)
               ->  Materialize  (cost=237196.16..274099.20 rows=1 width=8) (actual time=6.121..8.647 rows=4371 loops=438)
                     ->  Merge Join  (cost=237196.16..274099.20 rows=1 width=8) (actual time=2681.038..3722.440 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=237195.32..253224.83 rows=478476 width=40) (actual time=2680.302..3161.996 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=237195.32..239408.41 rows=885237 width=13) (actual time=2680.289..2784.669 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14187.61..140026.17 rows=885237 width=13) (actual time=125.293..2288.574 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13966.30 rows=885237 width=0) (actual time=108.304..108.304 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..14468.32 rows=8080 width=16) (actual time=0.447..525.324 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..14448.12 rows=8080 width=16) (actual time=0.445..521.255 rows=8748 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.42..8426.42 rows=2020 width=4) (actual time=0.110..65.921 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.193..0.207 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 19.375 ms
 Execution time: 3900.623 ms
(38 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=274554.52..274554.53 rows=1 width=51) (actual time=1361.996..1361.999 rows=1 loops=1)
   ->  Sort  (cost=274554.52..274554.53 rows=1 width=51) (actual time=1361.995..1361.997 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=237196.16..274554.51 rows=1 width=51) (actual time=1191.912..1361.847 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.010..1.641 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.583 rows=10000 loops=1)
               ->  Materialize  (cost=237196.16..274099.20 rows=1 width=8) (actual time=1.558..2.865 rows=4371 loops=438)
                     ->  Merge Join  (cost=237196.16..274099.20 rows=1 width=8) (actual time=682.435..1189.535 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=237195.32..253224.83 rows=478476 width=40) (actual time=682.106..1116.990 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=237195.32..239408.41 rows=885237 width=13) (actual time=682.094..776.260 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14187.61..140026.17 rows=885237 width=13) (actual time=89.100..325.861 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13966.30 rows=885237 width=0) (actual time=72.950..72.950 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..14468.32 rows=8080 width=16) (actual time=0.053..43.634 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..14448.12 rows=8080 width=16) (actual time=0.051..41.562 rows=8748 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.42..8426.42 rows=2020 width=4) (actual time=0.041..32.357 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.567 ms
 Execution time: 1364.937 ms
(38 rows)

query 21 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=390710.72..390710.73 rows=1 width=34) (actual time=2761.398..2761.411 rows=100 loops=1)
   ->  Sort  (cost=390710.72..390710.73 rows=1 width=34) (actual time=2761.397..2761.404 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=390710.69..390710.71 rows=1 width=34) (actual time=2760.364..2761.003 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=390710.69..390710.70 rows=1 width=26) (actual time=2760.357..2760.518 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=57113.82..390710.68 rows=1 width=26) (actual time=470.822..2746.751 rows=4227 loops=1)
                           ->  Nested Loop Semi Join  (cost=57113.38..390707.28 rows=1 width=34) (actual time=467.223..2589.601 rows=73962 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 19078
                                 ->  Hash Join  (cost=57112.95..257309.09 rows=38965 width=38) (actual time=467.209..2055.436 rows=76644 loops=1)
                                       Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=235.58..196114.88 rows=79939 width=34) (actual time=4.901..1493.491 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..187578.10 rows=2000483 width=8) (actual time=0.011..1214.347 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                             ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=4.828..4.829 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                   ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.624..4.736 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.618..4.651 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=184
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.572..0.572 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=44881.00..44881.00 rows=731150 width=4) (actual time=460.923..460.923 rows=729413 loops=1)
                                             Buckets: 1048576  Batches: 2  Memory Usage: 21019kB
                                             ->  Seq Scan on orders  (cost=0.00..44881.00 rows=731150 width=4) (actual time=0.013..357.673 rows=729413 loops=1)
                                                   Filter: (o_orderstatus = 'F'::bpchar)
                                                   Rows Removed by Filter: 770587
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.006..0.006 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 16.678 ms
 Execution time: 2762.323 ms
(44 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=390710.72..390710.73 rows=1 width=34) (actual time=1938.584..1938.597 rows=100 loops=1)
   ->  Sort  (cost=390710.72..390710.73 rows=1 width=34) (actual time=1938.584..1938.590 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=390710.69..390710.71 rows=1 width=34) (actual time=1937.531..1938.183 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=390710.69..390710.70 rows=1 width=26) (actual time=1937.525..1937.691 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=57113.82..390710.68 rows=1 width=26) (actual time=279.154..1925.034 rows=4227 loops=1)
                           ->  Nested Loop Semi Join  (cost=57113.38..390707.28 rows=1 width=34) (actual time=277.449..1798.615 rows=73962 loops=1)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Join Filter: 19078
                                 ->  Hash Join  (cost=57112.95..257309.09 rows=38965 width=38) (actual time=277.436..1622.663 rows=76644 loops=1)
                                       Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                       ->  Hash Join  (cost=235.58..196114.88 rows=79939 width=34) (actual time=0.682..1255.308 rows=159165 loops=1)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Seq Scan on lineitem l1  (cost=0.00..187578.10 rows=2000483 width=8) (actual time=0.012..997.530 rows=3793296 loops=1)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2207919
                                             ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.632..0.633 rows=421 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                   ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.047..0.350 rows=421 loops=1)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                               Filter: (n_name = 'PERU'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.041..0.296 rows=421 loops=1)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=184
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.024..0.024 rows=421 loops=1)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Hash  (cost=44881.00..44881.00 rows=731150 width=4) (actual time=275.281..275.281 rows=729413 loops=1)
                                             Buckets: 1048576  Batches: 2  Memory Usage: 21019kB
                                             ->  Seq Scan on orders  (cost=0.00..44881.00 rows=731150 width=4) (actual time=0.013..179.665 rows=729413 loops=1)
                                                   Filter: (o_orderstatus = 'F'::bpchar)
                                                   Rows Removed by Filter: 770587
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 1.807 ms
 Execution time: 1938.709 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16122.81..16122.84 rows=1 width=72) (actual time=228.390..228.392 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=32) (actual time=99.996..99.996 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4778 width=6) (actual time=0.016..95.704 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8576.36..8596.71 rows=740 width=72) (actual time=228.389..228.389 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8576.36..8578.21 rows=740 width=38) (actual time=228.195..228.230 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8541.09 rows=740 width=38) (actual time=100.043..225.926 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=100.022..153.802 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 14.234 ms
 Execution time: 229.076 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16122.81..16122.84 rows=1 width=72) (actual time=158.530..158.532 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=32) (actual time=72.281..72.281 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4778 width=6) (actual time=0.006..68.500 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8576.36..8596.71 rows=740 width=72) (actual time=158.529..158.530 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8576.36..8578.21 rows=740 width=38) (actual time=158.338..158.373 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8541.09 rows=740 width=38) (actual time=72.314..156.649 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=72.302..122.122 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.578 ms
 Execution time: 158.577 ms
(20 rows)

