query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184163.02..184163.66 rows=1 width=236) (actual time=2143.659..2143.735 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184163.02..184166.84 rows=6 width=236) (actual time=2143.658..2143.734 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184163.02..184165.89 rows=24 width=236) (actual time=2143.624..2143.706 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183162.96..183162.98 rows=6 width=236) (actual time=2134.167..2134.168 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183162.75..183162.88 rows=6 width=236) (actual time=2134.140..2134.148 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.43 rows=1481352 width=25) (actual time=0.735..478.098 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 11.086 ms
 Execution Time: 2144.122 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184163.02..184163.66 rows=1 width=236) (actual time=2005.276..2005.352 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184163.02..184166.84 rows=6 width=236) (actual time=2005.275..2005.350 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184163.02..184165.89 rows=24 width=236) (actual time=2005.241..2005.321 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183162.96..183162.98 rows=6 width=236) (actual time=1999.785..1999.786 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183162.75..183162.88 rows=6 width=236) (actual time=1999.760..1999.769 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.43 rows=1481352 width=25) (actual time=0.029..287.753 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.541 ms
 Execution Time: 2005.416 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54799.23..54799.24 rows=1 width=192) (actual time=461.849..461.926 rows=100 loops=1)
   ->  Sort  (cost=54799.23..54799.24 rows=1 width=192) (actual time=461.847..461.918 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..54799.22 rows=1 width=192) (actual time=390.296..461.528 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6431.30 rows=823 width=30) (actual time=0.679..0.946 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=343 width=30) (actual time=0.473..41.187 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=388.860..388.864 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.339..318.698 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.478..196.861 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=5.849..5.852 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.589..5.345 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.277..3.759 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.307..0.309 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.301..0.307 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.141..0.142 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.154..0.155 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.151..0.151 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.044..0.044 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.037..0.042 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.030..0.040 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.029..0.035 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.026..0.027 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 19.992 ms
 Execution Time: 462.257 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54799.23..54799.24 rows=1 width=192) (actual time=281.592..281.666 rows=100 loops=1)
   ->  Sort  (cost=54799.23..54799.24 rows=1 width=192) (actual time=281.590..281.658 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..54799.22 rows=1 width=192) (actual time=246.283..281.295 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6431.30 rows=823 width=30) (actual time=0.290..0.478 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=343 width=30) (actual time=0.031..14.125 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=245.527..245.531 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.853..181.287 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..50.187 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.840..2.843 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.033..2.347 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.670 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.027..0.029 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.021..0.027 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.925 ms
 Execution Time: 281.992 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233738.09..233738.11 rows=10 width=44) (actual time=1140.784..1142.235 rows=10 loops=1)
   ->  Sort  (cost=233738.09..234533.56 rows=318189 width=44) (actual time=1140.783..1142.232 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180013.70..226862.14 rows=318189 width=44) (actual time=1117.691..1140.017 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180013.70..218111.94 rows=318189 width=24) (actual time=1117.677..1123.433 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179013.64..179212.51 rows=79547 width=24) (actual time=1107.786..1108.089 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 678kB
                           Worker 0:  Sort Method: quicksort  Memory: 655kB
                           Worker 1:  Sort Method: quicksort  Memory: 668kB
                           Worker 2:  Sort Method: quicksort  Memory: 641kB
                           Worker 3:  Sort Method: quicksort  Memory: 705kB
                           ->  Parallel Hash Join  (cost=37919.66..172538.70 rows=79547 width=24) (actual time=241.648..1105.859 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.43 rows=812557 width=16) (actual time=0.479..791.578 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37327.53..37327.53 rows=47370 width=12) (actual time=239.910..239.913 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4537.29..37327.53 rows=47370 width=12) (actual time=21.224..230.735 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232699 width=16) (actual time=0.448..179.581 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12723 width=4) (actual time=20.656..20.657 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12723 width=4) (actual time=0.071..18.943 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 17.771 ms
 Execution Time: 1142.952 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233738.09..233738.11 rows=10 width=44) (actual time=459.787..465.070 rows=10 loops=1)
   ->  Sort  (cost=233738.09..234533.56 rows=318189 width=44) (actual time=459.786..465.068 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180013.70..226862.14 rows=318189 width=44) (actual time=436.525..462.798 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180013.70..218111.94 rows=318189 width=24) (actual time=436.511..446.140 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179013.64..179212.51 rows=79547 width=24) (actual time=431.424..431.739 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 634kB
                           Worker 0:  Sort Method: quicksort  Memory: 646kB
                           Worker 1:  Sort Method: quicksort  Memory: 647kB
                           Worker 2:  Sort Method: quicksort  Memory: 656kB
                           Worker 3:  Sort Method: quicksort  Memory: 766kB
                           ->  Parallel Hash Join  (cost=37919.66..172538.70 rows=79547 width=24) (actual time=99.092..429.158 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.43 rows=812557 width=16) (actual time=0.054..251.992 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37327.53..37327.53 rows=47370 width=12) (actual time=98.337..98.339 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 9024kB
                                       ->  Parallel Hash Join  (cost=4537.29..37327.53 rows=47370 width=12) (actual time=9.017..88.558 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232699 width=16) (actual time=0.011..51.643 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12723 width=4) (actual time=8.390..8.391 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1568kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12723 width=4) (actual time=0.014..6.291 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.030 ms
 Execution Time: 465.132 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29402.93..63337.07 rows=1 width=24) (actual time=2899.159..2902.464 rows=1 loops=1)
   ->  GroupAggregate  (cost=29402.93..199073.62 rows=5 width=24) (actual time=2899.157..2902.462 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29402.93..198784.78 rows=57759 width=16) (actual time=424.443..2894.383 rows=10479 loops=1)
               ->  Gather Merge  (cost=29402.50..36235.76 rows=57759 width=20) (actual time=423.720..439.601 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28402.46..28449.04 rows=18632 width=20) (actual time=416.694..417.175 rows=3758 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1447kB
                           Worker 0:  Sort Method: quicksort  Memory: 1473kB
                           Worker 1:  Sort Method: quicksort  Memory: 1496kB
                           Worker 2:  Sort Method: quicksort  Memory: 1495kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=670.46..27080.94 rows=18632 width=20) (actual time=5.133..410.576 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5684
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..656.02 rows=57759 width=0) (actual time=7.111..7.112 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.214..0.214 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 15.921 ms
 Execution Time: 2903.526 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29402.93..63337.07 rows=1 width=24) (actual time=76.933..82.362 rows=1 loops=1)
   ->  GroupAggregate  (cost=29402.93..199073.62 rows=5 width=24) (actual time=76.932..82.361 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29402.93..198784.78 rows=57759 width=16) (actual time=34.188..80.914 rows=10479 loops=1)
               ->  Gather Merge  (cost=29402.50..36235.76 rows=57759 width=20) (actual time=34.112..42.520 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28402.46..28449.04 rows=18632 width=20) (actual time=31.058..31.362 rows=3798 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1496kB
                           Worker 0:  Sort Method: quicksort  Memory: 1476kB
                           Worker 1:  Sort Method: quicksort  Memory: 1470kB
                           Worker 2:  Sort Method: quicksort  Memory: 1469kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=670.46..27080.94 rows=18632 width=20) (actual time=6.119..27.056 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5892
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..656.02 rows=57759 width=0) (actual time=5.433..5.433 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.834 ms
 Execution Time: 82.423 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84187.38..84187.39 rows=1 width=58) (actual time=2226.391..2236.777 rows=1 loops=1)
   ->  Sort  (cost=84187.38..84187.45 rows=25 width=58) (actual time=2226.390..2236.775 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84147.93..84187.26 rows=25 width=58) (actual time=2225.595..2236.763 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84147.93..84186.38 rows=75 width=58) (actual time=2225.388..2236.742 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83147.89..83177.53 rows=25 width=58) (actual time=2216.162..2216.903 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83147.89..83153.76 rows=2346 width=38) (actual time=2215.970..2216.064 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 199kB
                                 Worker 0:  Sort Method: quicksort  Memory: 192kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 195kB
                                 ->  Hash Join  (cost=7847.60..83016.56 rows=2346 width=38) (actual time=48.809..2214.189 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7374.60..82235.42 rows=58695 width=50) (actual time=43.558..2196.751 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7374.17..34941.54 rows=14669 width=38) (actual time=42.971..337.593 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2634.03..29865.24 rows=73347 width=8) (actual time=19.553..288.088 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6457
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2577.19 rows=227376 width=0) (actual time=15.570..15.570 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=23.254..23.256 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.201..20.867 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.083..15.996 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.112..0.114 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.105..0.111 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.045..0.047 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.054..0.054 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.155..0.162 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.628..3.629 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.108..2.195 rows=10000 loops=4)
 Planning Time: 26.628 ms
 Execution Time: 2237.088 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84187.38..84187.39 rows=1 width=58) (actual time=143.463..157.503 rows=1 loops=1)
   ->  Sort  (cost=84187.38..84187.45 rows=25 width=58) (actual time=143.462..157.501 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84147.93..84187.26 rows=25 width=58) (actual time=142.694..157.488 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84147.93..84186.38 rows=75 width=58) (actual time=142.491..157.460 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83147.89..83177.53 rows=25 width=58) (actual time=138.687..139.456 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83147.89..83153.76 rows=2346 width=38) (actual time=138.493..138.589 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 195kB
                                 Worker 0:  Sort Method: quicksort  Memory: 195kB
                                 Worker 1:  Sort Method: quicksort  Memory: 196kB
                                 Worker 2:  Sort Method: quicksort  Memory: 198kB
                                 ->  Hash Join  (cost=7847.60..83016.56 rows=2346 width=38) (actual time=31.218..137.722 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7374.60..82235.42 rows=58695 width=50) (actual time=28.324..126.946 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7374.17..34941.54 rows=14669 width=38) (actual time=28.299..69.332 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2634.03..29865.24 rows=73347 width=8) (actual time=16.297..43.412 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6583
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2577.19 rows=227376 width=0) (actual time=12.621..12.621 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.868..11.870 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.044..9.767 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.449 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.032..0.034 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.026..0.032 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.797..2.797 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.417 rows=10000 loops=4)
 Planning Time: 4.586 ms
 Execution Time: 157.816 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109208.31..109208.32 rows=1 width=32) (actual time=1083.794..1089.725 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=109208.31..109208.32 rows=1 width=32) (actual time=1083.792..1089.723 rows=1 loops=1)
         ->  Gather  (cost=109207.88..109208.29 rows=4 width=32) (actual time=1079.487..1089.706 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=108207.88..108207.89 rows=1 width=32) (actual time=1071.436..1071.438 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21792.36..108055.17 rows=30542 width=12) (actual time=141.812..1054.130 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13150
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21761.81 rows=122166 width=0) (actual time=138.477..138.477 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.318 ms
 Execution Time: 1090.909 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109208.31..109208.32 rows=1 width=32) (actual time=215.572..222.615 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=109208.31..109208.32 rows=1 width=32) (actual time=215.571..222.613 rows=1 loops=1)
         ->  Gather  (cost=109207.88..109208.29 rows=4 width=32) (actual time=215.315..222.599 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=108207.88..108207.89 rows=1 width=32) (actual time=209.098..209.099 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21792.36..108055.17 rows=30542 width=12) (actual time=119.675..200.796 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=11860
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21761.81 rows=122166 width=0) (actual time=111.463..111.463 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.668 ms
 Execution Time: 222.666 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141437.56..141595.93 rows=1 width=116) (actual time=3728.326..3729.431 rows=1 loops=1)
   ->  GroupAggregate  (cost=141437.56..1105243.53 rows=6086 width=116) (actual time=3728.324..3729.429 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141437.56..1105060.95 rows=6086 width=96) (actual time=875.109..3726.487 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32710
               ->  Nested Loop  (cost=141437.14..632807.65 rows=152144 width=76) (actual time=869.506..3201.860 rows=34069 loops=1)
                     ->  Gather Merge  (cost=141436.72..159653.62 rows=152144 width=76) (actual time=868.501..909.726 rows=34069 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140436.66..140531.75 rows=38036 width=76) (actual time=854.656..855.562 rows=7213 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4799kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4796kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4864kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4876kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4859kB
                                 ->  Hash Join  (cost=381.77..137543.05 rows=38036 width=76) (actual time=3.947..828.722 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.51 rows=457216 width=24) (actual time=0.947..771.717 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.909..2.912 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.146..2.755 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.078..1.382 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.063..0.064 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.057..0.062 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.046..0.047 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.066..0.066 rows=1 loops=34069)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=34069)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 23.848 ms
 Execution Time: 3729.786 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141437.56..141595.93 rows=1 width=116) (actual time=516.840..517.917 rows=1 loops=1)
   ->  GroupAggregate  (cost=141437.56..1105243.53 rows=6086 width=116) (actual time=516.839..517.915 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141437.56..1105060.95 rows=6086 width=96) (actual time=348.144..516.775 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32678
               ->  Nested Loop  (cost=141437.14..632807.65 rows=152144 width=76) (actual time=347.917..444.225 rows=34037 loops=1)
                     ->  Gather Merge  (cost=141436.72..159653.62 rows=152144 width=76) (actual time=347.862..367.584 rows=34037 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140436.66..140531.75 rows=38036 width=76) (actual time=337.751..338.449 rows=7207 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 6442kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6438kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6649kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3495kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3475kB
                                 ->  Hash Join  (cost=381.77..137543.05 rows=38036 width=76) (actual time=2.901..311.006 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.51 rows=457216 width=24) (actual time=0.040..248.001 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.788..2.790 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.033..2.643 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..0.689 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.023..0.025 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.017..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34037)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34037)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 3.226 ms
 Execution Time: 518.007 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41998.04..42377.26 rows=1 width=64) (actual time=5475.292..5479.329 rows=1 loops=1)
   ->  GroupAggregate  (cost=41998.04..954407.95 rows=2406 width=64) (actual time=5475.291..5479.327 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41998.04..954311.21 rows=2431 width=70) (actual time=275.542..5476.526 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=41998.04..953425.77 rows=2431 width=20) (actual time=275.528..5471.989 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41997.76..946286.52 rows=2433 width=20) (actual time=275.255..5437.283 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41997.33..348343.38 rows=366083 width=24) (actual time=244.178..4405.157 rows=183205 loops=1)
                                 ->  Gather Merge  (cost=41996.89..52821.22 rows=91494 width=8) (actual time=243.307..284.549 rows=45712 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40996.85..41070.64 rows=29514 width=8) (actual time=233.527..234.784 rows=12584 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1804kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1835kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1822kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1887kB
                                             ->  Parallel Hash Join  (cost=4740.13..38805.57 rows=29514 width=8) (actual time=32.384..226.084 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147571 width=12) (actual time=0.451..163.539 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=31.715..31.719 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.234..29.820 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.083..24.923 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.145..0.147 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.138..0.145 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.054..0.055 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.078..0.079 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.074..0.075 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.082..0.089 rows=4 loops=45712)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=183205)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 63099  Misses: 120106  Evictions: 0  Overflows: 0  Memory Usage: 8005kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=120106)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.027..0.027 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.015 rows=25 loops=1)
 Planning Time: 23.567 ms
 Execution Time: 5480.428 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41998.04..42377.26 rows=1 width=64) (actual time=616.360..622.729 rows=1 loops=1)
   ->  GroupAggregate  (cost=41998.04..954407.95 rows=2406 width=64) (actual time=616.358..622.726 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41998.04..954311.21 rows=2431 width=70) (actual time=102.210..621.558 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14804
               ->  Nested Loop  (cost=41998.04..953425.77 rows=2431 width=20) (actual time=102.194..619.127 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41997.76..946286.52 rows=2433 width=20) (actual time=102.186..615.938 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41997.33..348343.38 rows=366083 width=24) (actual time=99.597..285.726 rows=182882 loops=1)
                                 ->  Gather Merge  (cost=41996.89..52821.22 rows=91494 width=8) (actual time=99.546..122.548 rows=45636 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40996.85..41070.64 rows=29514 width=8) (actual time=96.100..96.940 rows=12487 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1835kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1841kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1842kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1830kB
                                             ->  Parallel Hash Join  (cost=4740.13..38805.57 rows=29514 width=8) (actual time=11.435..89.825 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147571 width=12) (actual time=0.010..55.537 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.245..11.248 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.045..9.657 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.507 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.031..0.033 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.025..0.031 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45636)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182882)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62910  Misses: 119972  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119972)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.010 rows=25 loops=1)
 Planning Time: 5.197 ms
 Execution Time: 623.909 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=90258.72..90283.99 rows=1 width=90) (actual time=4723.584..4726.930 rows=1 loops=1)
   ->  GroupAggregate  (cost=90258.72..1609871.05 rows=60150 width=90) (actual time=4723.582..4726.928 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=90258.72..1601546.33 rows=424141 width=81) (actual time=4722.646..4726.041 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=27531.42..1549158.19 rows=424141 width=81) (actual time=264.941..4697.469 rows=13629 loops=1)
                     ->  Nested Loop  (cost=27531.00..213615.71 rows=424141 width=53) (actual time=264.188..2574.716 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=27530.56..34118.37 rows=56564 width=48) (actual time=263.027..268.928 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=26530.54..26589.46 rows=23568 width=48) (actual time=255.811..255.966 rows=1078 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2397kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2477kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2399kB
                                       ->  Hash Join  (cost=449.99..24818.97 rows=23568 width=48) (actual time=4.052..245.120 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..24745.05 rows=23568 width=26) (actual time=3.911..241.666 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..24235.16 rows=23568 width=18) (actual time=0.281..232.183 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5892 width=4) (actual time=0.157..34.016 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.051..0.054 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.614..3.615 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.101..2.367 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.083..0.083 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.074..0.077 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.288..1.265 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.153..0.153 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 29.041 ms
 Execution Time: 4727.250 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=90258.72..90283.99 rows=1 width=90) (actual time=129.329..133.152 rows=1 loops=1)
   ->  GroupAggregate  (cost=90258.72..1609871.05 rows=60150 width=90) (actual time=129.328..133.150 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=90258.72..1601546.33 rows=424141 width=81) (actual time=128.400..132.276 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=27531.42..1549158.19 rows=424141 width=81) (actual time=52.153..124.220 rows=13629 loops=1)
                     ->  Nested Loop  (cost=27531.00..213615.71 rows=424141 width=53) (actual time=52.135..76.625 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=27530.56..34118.37 rows=56564 width=48) (actual time=52.079..56.696 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=26530.54..26589.46 rows=23568 width=48) (actual time=49.582..49.690 rows=1083 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2536kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2366kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2372kB
                                       ->  Hash Join  (cost=449.99..24818.97 rows=23568 width=48) (actual time=2.814..40.800 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..24745.05 rows=23568 width=26) (actual time=2.737..37.942 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..24235.16 rows=23568 width=18) (actual time=0.027..30.895 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5892 width=4) (actual time=0.008..15.031 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.697..2.698 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.478 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.022 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.005..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.612 ms
 Execution Time: 133.479 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99600.12..99600.17 rows=20 width=202) (actual time=2044.402..2049.468 rows=20 loops=1)
   ->  Sort  (cost=99600.12..99739.64 rows=55806 width=202) (actual time=2044.401..2049.465 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97417.57..98115.14 rows=55806 width=202) (actual time=2010.989..2037.385 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6653.05..96719.99 rows=55806 width=182) (actual time=59.007..1891.481 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5653.05..90139.39 rows=18002 width=182) (actual time=50.487..1952.722 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5651.49..90082.57 rows=18002 width=160) (actual time=50.369..1942.624 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=648.24..85032.06 rows=18002 width=16) (actual time=14.381..1885.416 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=647.81..27049.01 rows=18014 width=8) (actual time=12.802..306.555 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4772
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..633.85 rows=55842 width=0) (actual time=9.028..9.028 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.105..0.109 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=35.529..35.529 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.084..14.975 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.056..0.056 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.048..0.051 rows=25 loops=4)
 Planning Time: 21.077 ms
 Execution Time: 2049.811 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99600.12..99600.17 rows=20 width=202) (actual time=219.272..223.254 rows=20 loops=1)
   ->  Sort  (cost=99600.12..99739.64 rows=55806 width=202) (actual time=219.270..223.251 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97417.57..98115.14 rows=55806 width=202) (actual time=187.035..211.891 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6653.05..96719.99 rows=55806 width=182) (actual time=42.815..101.689 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5653.05..90139.39 rows=18002 width=182) (actual time=38.886..146.763 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5651.49..90082.57 rows=18002 width=160) (actual time=38.807..139.993 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=648.24..85032.06 rows=18002 width=16) (actual time=10.562..98.600 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=647.81..27049.01 rows=18014 width=8) (actual time=10.488..26.943 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1764
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..633.85 rows=55842 width=0) (actual time=7.164..7.164 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.004 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.826..27.827 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.005..7.966 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning Time: 1.546 ms
 Execution Time: 223.592 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15991.59..15991.60 rows=1 width=36) (actual time=696.994..696.999 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.12..7689.14 rows=1 width=32) (actual time=25.062..25.064 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.12 rows=32000 width=10) (actual time=0.051..17.608 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.282 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.230 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.46..8329.12 rows=10667 width=36) (actual time=696.993..696.995 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.12..8249.12 rows=10667 width=36) (actual time=686.136..696.829 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.12 rows=32000 width=14) (actual time=1.034..627.095 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.624..4.145 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.184..0.187 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.434..3.842 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.236..0.236 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.049..1.498 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.040 ms
 Execution Time: 697.395 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15991.59..15991.60 rows=1 width=36) (actual time=86.016..86.020 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.12..7689.14 rows=1 width=32) (actual time=25.144..25.146 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.12 rows=32000 width=10) (actual time=0.050..17.587 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.282 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.033..0.229 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.017 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.46..8329.12 rows=10667 width=36) (actual time=86.015..86.017 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.12..8249.12 rows=10667 width=36) (actual time=75.108..85.856 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.12 rows=32000 width=14) (actual time=0.057..28.816 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.046..0.436 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.375 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.059 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.020 ms
 Execution Time: 86.371 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147779.77..161100.46 rows=1 width=27) (actual time=1683.766..1684.741 rows=1 loops=1)
   ->  GroupAggregate  (cost=147779.77..241024.63 rows=7 width=27) (actual time=1683.765..1684.739 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147779.77..240522.29 rows=28701 width=27) (actual time=837.140..1675.452 rows=15492 loops=1)
               ->  Gather Merge  (cost=147779.34..151215.85 rows=28701 width=15) (actual time=836.348..845.230 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146779.29..146797.22 rows=7175 width=15) (actual time=823.251..823.605 rows=4254 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 493kB
                           Worker 0:  Sort Method: quicksort  Memory: 489kB
                           Worker 1:  Sort Method: quicksort  Memory: 474kB
                           Worker 2:  Sort Method: quicksort  Memory: 472kB
                           Worker 3:  Sort Method: quicksort  Memory: 486kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146319.77 rows=7175 width=15) (actual time=0.825..821.110 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.053..0.053 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 15.033 ms
 Execution Time: 1685.130 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147779.77..161100.46 rows=1 width=27) (actual time=401.920..402.771 rows=1 loops=1)
   ->  GroupAggregate  (cost=147779.77..241024.63 rows=7 width=27) (actual time=401.919..402.769 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147779.77..240522.29 rows=28701 width=27) (actual time=354.865..398.026 rows=15492 loops=1)
               ->  Gather Merge  (cost=147779.34..151215.85 rows=28701 width=15) (actual time=354.814..359.424 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146779.29..146797.22 rows=7175 width=15) (actual time=351.304..351.549 rows=4284 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 556kB
                           Worker 0:  Sort Method: quicksort  Memory: 481kB
                           Worker 1:  Sort Method: quicksort  Memory: 499kB
                           Worker 2:  Sort Method: quicksort  Memory: 502kB
                           Worker 3:  Sort Method: quicksort  Memory: 280kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146319.77 rows=7175 width=15) (actual time=0.092..349.739 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.803 ms
 Execution Time: 403.036 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1447.382..1447.385 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1447.381..1447.383 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1447.356..1447.363 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1407.710..1430.294 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=34.228..1047.871 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.702..618.840 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.154..33.154 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..16.316 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.316 ms
 Execution Time: 1448.457 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1246.595..1246.598 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1246.594..1246.596 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1246.569..1246.576 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1206.895..1229.331 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=29.515..866.225 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..463.805 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.058..29.059 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..13.050 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.898 ms
 Execution Time: 1247.898 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71406.77..71406.78 rows=1 width=32) (actual time=522.231..528.499 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=71406.77..71406.78 rows=1 width=32) (actual time=522.229..528.497 rows=1 loops=1)
         ->  Gather  (cost=71406.31..71406.72 rows=4 width=64) (actual time=521.119..528.477 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=70406.31..70406.32 rows=1 width=64) (actual time=513.696..513.699 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7124.50..70092.78 rows=17916 width=33) (actual time=54.182..497.906 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1150.51..64071.75 rows=17916 width=16) (actual time=21.064..449.727 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8060
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1132.59 rows=71666 width=0) (actual time=14.040..14.040 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=32.629..32.630 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.104..19.156 rows=40000 loops=5)
 Planning Time: 15.213 ms
 Execution Time: 528.552 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71406.77..71406.78 rows=1 width=32) (actual time=111.614..116.315 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=71406.77..71406.78 rows=1 width=32) (actual time=111.612..116.312 rows=1 loops=1)
         ->  Gather  (cost=71406.31..71406.72 rows=4 width=64) (actual time=107.569..116.283 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=70406.31..70406.32 rows=1 width=64) (actual time=103.948..103.951 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7124.50..70092.78 rows=17916 width=33) (actual time=40.642..96.328 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1150.51..64071.75 rows=17916 width=16) (actual time=15.002..63.322 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9705
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1132.59 rows=71666 width=0) (actual time=8.607..8.608 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=25.150..25.151 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.007..7.765 rows=40000 loops=5)
 Planning Time: 0.783 ms
 Execution Time: 116.354 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241833.17..241940.51 rows=1 width=103) (actual time=1283.571..1292.782 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122318.67..122318.68 rows=1 width=32) (actual time=246.753..246.755 rows=1 loops=1)
           ->  HashAggregate  (cost=122068.54..122193.60 rows=10005 width=36) (actual time=243.315..246.147 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3716.27..119751.63 rows=231691 width=16) (actual time=28.854..122.603 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3658.34 rows=231691 width=0) (actual time=18.685..18.685 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119514.50..124881.34 rows=50 width=103) (actual time=1283.570..1292.777 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119514.21..124756.22 rows=50 width=36) (actual time=1282.993..1292.199 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119514.21..124305.99 rows=40020 width=36) (actual time=1009.468..1026.417 rows=41770 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118514.15..118539.17 rows=10005 width=36) (actual time=998.632..999.560 rows=8858 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1780kB
                           Worker 0:  Sort Method: quicksort  Memory: 1776kB
                           Worker 1:  Sort Method: quicksort  Memory: 1773kB
                           Worker 2:  Sort Method: quicksort  Memory: 1771kB
                           Worker 3:  Sort Method: quicksort  Memory: 1775kB
                           ->  Partial HashAggregate  (cost=117724.34..117849.40 rows=10005 width=36) (actual time=989.581..995.552 rows=9887 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3716.27..117145.11 rows=57923 width=16) (actual time=42.959..935.431 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13833
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3658.34 rows=231691 width=0) (actual time=38.275..38.275 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.570..0.571 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 11.949 ms
 Execution Time: 1293.448 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241833.17..241940.51 rows=1 width=103) (actual time=435.000..444.723 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122318.67..122318.68 rows=1 width=32) (actual time=233.813..233.815 rows=1 loops=1)
           ->  HashAggregate  (cost=122068.54..122193.60 rows=10005 width=36) (actual time=230.397..233.215 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3716.27..119751.63 rows=231691 width=16) (actual time=28.841..110.593 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3658.34 rows=231691 width=0) (actual time=18.626..18.627 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119514.50..124881.34 rows=50 width=103) (actual time=434.999..444.720 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119514.21..124756.22 rows=50 width=36) (actual time=434.978..444.698 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119514.21..124305.99 rows=40020 width=36) (actual time=174.642..192.033 rows=41753 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118514.15..118539.17 rows=10005 width=36) (actual time=167.254..168.174 rows=8849 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1774kB
                           Worker 0:  Sort Method: quicksort  Memory: 1778kB
                           Worker 1:  Sort Method: quicksort  Memory: 1776kB
                           Worker 2:  Sort Method: quicksort  Memory: 1770kB
                           Worker 3:  Sort Method: quicksort  Memory: 1775kB
                           ->  Partial HashAggregate  (cost=117724.34..117849.40 rows=10005 width=36) (actual time=157.944..164.969 rows=9884 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3716.27..117145.11 rows=57923 width=16) (actual time=33.483..119.919 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12952
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3658.34 rows=231691 width=0) (actual time=26.746..26.746 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.017..0.017 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.805 ms
 Execution Time: 445.107 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26431.17..26431.18 rows=1 width=44) (actual time=279.665..280.312 rows=1 loops=1)
   ->  Sort  (cost=26431.17..26470.59 rows=15767 width=44) (actual time=279.664..280.310 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18730.52..26352.34 rows=15767 width=44) (actual time=186.812..275.864 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18730.52..25619.33 rows=57534 width=40) (actual time=186.784..236.105 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17730.46..17766.42 rows=14384 width=40) (actual time=164.633..166.368 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2568kB
                           Worker 0:  Sort Method: quicksort  Memory: 2564kB
                           Worker 1:  Sort Method: quicksort  Memory: 2502kB
                           Worker 2:  Sort Method: quicksort  Memory: 2781kB
                           Worker 3:  Sort Method: quicksort  Memory: 2641kB
                           ->  Parallel Hash Join  (cost=6680.59..16737.09 rows=14384 width=40) (actual time=35.100..101.759 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.210..54.540 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.778..5.560 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=11986 width=40) (actual time=28.322..28.323 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=11986 width=40) (actual time=0.223..25.743 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 14.513 ms
 Execution Time: 280.385 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26431.17..26431.18 rows=1 width=44) (actual time=246.304..246.687 rows=1 loops=1)
   ->  Sort  (cost=26431.17..26470.59 rows=15767 width=44) (actual time=246.303..246.686 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18730.52..26352.34 rows=15767 width=44) (actual time=153.341..242.220 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18730.52..25619.33 rows=57534 width=40) (actual time=153.316..202.190 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17730.46..17766.42 rows=14384 width=40) (actual time=138.610..140.403 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2575kB
                           Worker 0:  Sort Method: quicksort  Memory: 2331kB
                           Worker 1:  Sort Method: quicksort  Memory: 3017kB
                           Worker 2:  Sort Method: quicksort  Memory: 2647kB
                           Worker 3:  Sort Method: quicksort  Memory: 2486kB
                           ->  Parallel Hash Join  (cost=6680.59..16737.09 rows=14384 width=40) (actual time=18.919..75.822 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.564..41.878 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.485 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=11986 width=40) (actual time=15.824..15.825 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=11986 width=40) (actual time=0.018..12.204 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.170 ms
 Execution Time: 246.745 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=336830.45..336830.46 rows=1 width=32) (actual time=2499.013..2506.147 rows=1 loops=1)
   ->  Aggregate  (cost=336830.45..336830.46 rows=1 width=32) (actual time=2499.012..2506.145 rows=1 loops=1)
         ->  Merge Join  (cost=222708.28..336825.44 rows=2002 width=8) (actual time=1813.752..2506.052 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221707.40..321092.78 rows=189689 width=36) (actual time=1807.004..2478.796 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221707.40..312556.78 rows=758756 width=36) (actual time=1806.989..2001.339 rows=993737 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220707.34..221181.57 rows=189689 width=36) (actual time=1699.763..1722.342 rows=199310 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: external merge  Disk: 13496kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32743kB
                                 Worker 1:  Sort Method: quicksort  Memory: 32720kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32687kB
                                 Worker 3:  Sort Method: quicksort  Memory: 32740kB
                                 ->  Partial HashAggregate  (cost=187054.21..204077.99 rows=189689 width=36) (actual time=1116.955..1629.656 rows=199470 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 28224kB
                                       Worker 0:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27784kB
                                       Worker 1:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27400kB
                                       Worker 2:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 24024kB
                                       Worker 3:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27728kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127564.34 rows=1500434 width=9) (actual time=0.165..377.398 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13270.64 rows=6332 width=21) (actual time=4.287..13.232 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13254.81 rows=6332 width=21) (actual time=4.283..12.483 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11523.92 rows=2638 width=21) (actual time=1.146..76.299 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=88 width=4) (actual time=0.755..29.479 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.08 rows=32 width=17) (actual time=0.424..0.665 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 12.054 ms
 Execution Time: 2512.422 ms
(38 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=336830.45..336830.46 rows=1 width=32) (actual time=2311.539..2319.963 rows=1 loops=1)
   ->  Aggregate  (cost=336830.45..336830.46 rows=1 width=32) (actual time=2311.538..2319.961 rows=1 loops=1)
         ->  Merge Join  (cost=222708.28..336825.44 rows=2002 width=8) (actual time=1638.514..2319.878 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221707.40..321092.78 rows=189689 width=36) (actual time=1632.729..2300.520 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221707.40..312556.78 rows=758756 width=36) (actual time=1632.709..1825.081 rows=993553 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220707.34..221181.57 rows=189689 width=36) (actual time=1509.700..1531.069 rows=199233 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 32714kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32717kB
                                 Worker 1:  Sort Method: external merge  Disk: 13496kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32673kB
                                 Worker 3:  Sort Method: quicksort  Memory: 32750kB
                                 ->  Partial HashAggregate  (cost=187054.21..204077.99 rows=189689 width=36) (actual time=926.432..1439.212 rows=199432 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 24208kB
                                       Worker 0:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27408kB
                                       Worker 1:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 31768kB
                                       Worker 2:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 23824kB
                                       Worker 3:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27848kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127564.34 rows=1500434 width=9) (actual time=0.060..176.167 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13270.64 rows=6332 width=21) (actual time=3.502..6.309 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13254.81 rows=6332 width=21) (actual time=3.496..5.616 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11523.92 rows=2638 width=21) (actual time=0.311..17.610 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=88 width=4) (actual time=0.133..14.650 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.08 rows=32 width=17) (actual time=0.008..0.038 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.979 ms
 Execution Time: 2323.801 ms
(38 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803723.42..803723.67 rows=100 width=71) (actual time=4590.886..4590.891 rows=9 loops=1)
   ->  Sort  (cost=803723.42..808726.31 rows=2001159 width=71) (actual time=4590.884..4590.888 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=667049.45..727240.56 rows=2001159 width=71) (actual time=4590.497..4590.851 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338909.77..559252.64 rows=2001159 width=44) (actual time=3820.777..4590.426 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331937.77..547027.45 rows=2001159 width=25) (actual time=3751.974..4521.603 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172577.37 rows=6001737 width=9) (actual time=0.796..333.138 rows=6001215 loops=1)
                           ->  Hash  (cost=325685.96..325685.96 rows=500145 width=24) (actual time=3545.371..3545.373 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280617.45..325685.96 rows=500145 width=24) (actual time=3185.117..3545.343 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.789..280.252 rows=1500000 loops=1)
                                       ->  Hash  (cost=274365.63..274365.63 rows=500145 width=4) (actual time=3084.013..3084.014 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269364.18 rows=500145 width=4) (actual time=659.164..3083.987 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216848.99 rows=6001737 width=9) (actual time=0.019..1673.954 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.465..68.465 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.291..42.584 rows=150000 loops=1)
 Planning Time: 16.728 ms
 Execution Time: 4591.827 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803723.42..803723.67 rows=100 width=71) (actual time=3507.064..3507.070 rows=9 loops=1)
   ->  Sort  (cost=803723.42..808726.31 rows=2001159 width=71) (actual time=3507.063..3507.067 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=667049.45..727240.56 rows=2001159 width=71) (actual time=3506.662..3507.028 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338909.77..559252.64 rows=2001159 width=44) (actual time=2731.223..3506.592 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331937.77..547027.45 rows=2001159 width=25) (actual time=2686.481..3461.829 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172577.37 rows=6001737 width=9) (actual time=0.010..335.313 rows=6001215 loops=1)
                           ->  Hash  (cost=325685.96..325685.96 rows=500145 width=24) (actual time=2479.385..2479.388 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280617.45..325685.96 rows=500145 width=24) (actual time=2256.137..2479.365 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.006..84.180 rows=1500000 loops=1)
                                       ->  Hash  (cost=274365.63..274365.63 rows=500145 width=4) (actual time=2195.710..2195.711 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269364.18 rows=500145 width=4) (actual time=463.557..2195.692 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216848.99 rows=6001737 width=9) (actual time=0.017..853.668 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.371..44.371 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.017..19.395 rows=150000 loops=1)
 Planning Time: 1.438 ms
 Execution Time: 3507.728 ms
(29 rows)

query 19 run 1
SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18582.00..18582.01 rows=1 width=32) (actual time=857.680..860.547 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18582.00..18582.01 rows=1 width=32) (actual time=857.679..860.546 rows=1 loops=1)
         ->  Gather  (cost=18581.78..18581.99 rows=2 width=32) (actual time=856.742..860.534 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17581.78..17581.79 rows=1 width=32) (actual time=850.560..850.561 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17581.43 rows=46 width=12) (actual time=18.168..850.440 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=201 width=30) (actual time=0.664..30.343 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.45 rows=1 width=21) (actual time=4.318..4.851 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 18.163 ms
 Execution Time: 860.610 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18582.00..18582.01 rows=1 width=32) (actual time=28.557..32.407 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18582.00..18582.01 rows=1 width=32) (actual time=28.556..32.405 rows=1 loops=1)
         ->  Gather  (cost=18581.78..18581.99 rows=2 width=32) (actual time=28.432..32.396 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17581.78..17581.79 rows=1 width=32) (actual time=26.010..26.011 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17581.43 rows=46 width=12) (actual time=0.765..25.970 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=201 width=30) (actual time=0.149..16.871 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.45 rows=1 width=21) (actual time=0.047..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.982 ms
 Execution Time: 32.450 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216615.72..216615.73 rows=1 width=51) (actual time=3882.215..3882.300 rows=1 loops=1)
   ->  Sort  (cost=216615.72..216615.73 rows=1 width=51) (actual time=3882.213..3882.298 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186635.50..216615.71 rows=1 width=51) (actual time=3708.038..3882.080 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.626..3.921 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.313..0.316 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.306..2.825 rows=10000 loops=1)
               ->  Materialize  (cost=186635.50..216160.40 rows=1 width=8) (actual time=5.802..8.611 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186635.50..216160.40 rows=1 width=8) (actual time=2541.039..3701.164 rows=5898 loops=1)
                           ->  Hash Join  (cost=186635.07..209141.83 rows=4925 width=44) (actual time=2540.577..3179.264 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=180267.16..196617.14 rows=487663 width=40) (actual time=2503.569..3093.069 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14834.11..141271.93 rows=925188 width=13) (actual time=129.611..1976.757 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14602.81 rows=925188 width=0) (actual time=110.492..110.492 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=36.984..37.066 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=1.477..36.551 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.683..29.196 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.087..0.087 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 19.563 ms
 Execution Time: 3887.455 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216615.72..216615.73 rows=1 width=51) (actual time=1506.461..1506.541 rows=1 loops=1)
   ->  Sort  (cost=216615.72..216615.73 rows=1 width=51) (actual time=1506.459..1506.539 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186635.50..216615.71 rows=1 width=51) (actual time=1336.601..1506.356 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.018..1.712 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.597 rows=10000 loops=1)
               ->  Materialize  (cost=186635.50..216160.40 rows=1 width=8) (actual time=1.687..3.200 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186635.50..216160.40 rows=1 width=8) (actual time=738.969..1333.206 rows=5898 loops=1)
                           ->  Hash Join  (cost=186635.07..209141.83 rows=4925 width=44) (actual time=738.950..1310.572 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=180267.16..196617.14 rows=487663 width=40) (actual time=727.140..1260.103 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14834.11..141271.93 rows=925188 width=13) (actual time=93.526..308.801 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14602.81 rows=925188 width=0) (actual time=75.046..75.046 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.792..11.869 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.334..11.524 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.021..8.893 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.821 ms
 Execution Time: 1511.422 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194159.14..194159.15 rows=1 width=34) (actual time=1345.708..1345.818 rows=100 loops=1)
   ->  Sort  (cost=194159.14..194159.15 rows=1 width=34) (actual time=1345.706..1345.810 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194159.11..194159.13 rows=1 width=34) (actual time=1344.663..1345.396 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194159.11..194159.12 rows=1 width=26) (actual time=1344.653..1344.913 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194159.10 rows=1 width=26) (actual time=15.387..1330.552 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194155.71 rows=1 width=38) (actual time=11.563..1250.604 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194152.40 rows=1 width=34) (actual time=10.218..13.959 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193152.30 rows=1 width=34) (actual time=3.174..563.951 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133625.01 rows=19996 width=34) (actual time=1.984..456.626 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.43 rows=500145 width=8) (actual time=0.181..388.774 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.699..1.700 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.362..1.604 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.151..0.154 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.206..1.393 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.128..0.128 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.086..0.086 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.457 ms
 Execution Time: 1346.545 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194159.14..194159.15 rows=1 width=34) (actual time=484.223..484.332 rows=100 loops=1)
   ->  Sort  (cost=194159.14..194159.15 rows=1 width=34) (actual time=484.222..484.324 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194159.11..194159.13 rows=1 width=34) (actual time=483.137..483.902 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194159.11..194159.12 rows=1 width=26) (actual time=483.125..483.397 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194159.10 rows=1 width=26) (actual time=1.919..469.467 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194155.71 rows=1 width=38) (actual time=1.750..450.764 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194152.40 rows=1 width=34) (actual time=1.041..398.697 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193152.30 rows=1 width=34) (actual time=1.056..450.642 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133625.01 rows=19996 width=34) (actual time=0.577..346.839 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.43 rows=500145 width=8) (actual time=0.032..267.239 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.449..0.450 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.064..0.371 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.047..0.307 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.027..0.027 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.890 ms
 Execution Time: 484.427 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.13 rows=1 width=72) (actual time=154.728..156.464 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=45.111..45.190 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=44.978..45.163 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=38.313..38.313 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.100..37.020 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7454.92 rows=761 width=72) (actual time=154.727..156.383 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7435.89 rows=761 width=38) (actual time=70.399..155.813 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=69.187..72.379 rows=2736 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.788..21.937 rows=1602 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 745kB
                           Worker 0:  Sort Method: quicksort  Memory: 661kB
                           Worker 1:  Sort Method: quicksort  Memory: 661kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..19.890 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.030..0.030 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.175 ms
 Execution Time: 157.134 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.13 rows=1 width=72) (actual time=58.577..60.122 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.522..28.600 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.407..28.586 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.329..26.330 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1989 width=6) (actual time=0.016..25.147 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7454.92 rows=761 width=72) (actual time=58.576..60.042 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7435.89 rows=761 width=38) (actual time=52.476..59.840 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=52.449..54.619 rows=2736 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.353..21.428 rows=1518 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 760kB
                           Worker 0:  Sort Method: quicksort  Memory: 650kB
                           Worker 1:  Sort Method: quicksort  Memory: 658kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..19.415 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.70 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 1.034 ms
 Execution Time: 60.181 ms
(30 rows)

