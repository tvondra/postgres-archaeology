query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184227.84..184228.47 rows=1 width=236) (actual time=1827.403..1829.492 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184227.84..184231.66 rows=6 width=236) (actual time=1827.402..1829.491 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184227.84..184230.71 rows=24 width=236) (actual time=1827.382..1829.472 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183227.78..183227.79 rows=6 width=236) (actual time=1816.267..1816.268 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183227.57..183227.70 rows=6 width=236) (actual time=1816.228..1816.234 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.01 rows=1483216 width=25) (actual time=0.290..459.751 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 17.336 ms
 Execution Time: 1830.976 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184227.84..184228.47 rows=1 width=236) (actual time=1656.409..1657.234 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184227.84..184231.66 rows=6 width=236) (actual time=1656.408..1657.233 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184227.84..184230.71 rows=24 width=236) (actual time=1656.387..1657.214 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183227.78..183227.79 rows=6 width=236) (actual time=1650.356..1650.357 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183227.57..183227.70 rows=6 width=236) (actual time=1650.324..1650.329 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.01 rows=1483216 width=25) (actual time=0.035..247.021 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.643 ms
 Execution Time: 1657.303 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48512.13..48512.13 rows=1 width=192) (actual time=386.091..386.182 rows=0 loops=1)
   ->  Sort  (cost=48512.13..48512.13 rows=1 width=192) (actual time=386.090..386.181 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=33940.73..48512.12 rows=1 width=192) (actual time=386.066..386.158 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6447.80 rows=988 width=30) (actual time=2.275..2.593 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=412 width=30) (actual time=0.403..36.286 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30540.73..30540.73 rows=160000 width=172) (actual time=327.047..327.052 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30540.73 rows=160000 width=172) (actual time=6.531..269.598 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.542..158.274 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=5.980..5.983 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.618..5.527 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.289..4.079 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.324..0.326 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.318..0.323 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.153..0.155 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.158..0.159 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.154..0.155 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.069..0.069 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.062..0.067 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.052..0.065 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.050..0.059 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.047..0.048 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 23.014 ms
 Execution Time: 386.340 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48512.13..48512.13 rows=1 width=192) (actual time=240.164..240.251 rows=0 loops=1)
   ->  Sort  (cost=48512.13..48512.13 rows=1 width=192) (actual time=240.163..240.249 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=33940.73..48512.12 rows=1 width=192) (actual time=240.140..240.227 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6447.80 rows=988 width=30) (actual time=0.283..0.494 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=412 width=30) (actual time=0.034..13.307 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30540.73..30540.73 rows=160000 width=172) (actual time=224.680..224.683 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30540.73 rows=160000 width=172) (actual time=2.732..169.869 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.010..51.781 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.716..2.719 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.040..2.254 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.003..0.763 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.035 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.020..0.033 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.018..0.018 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.013..0.016 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.006..0.015 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 2.073 ms
 Execution Time: 240.390 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233376.93..233376.96 rows=10 width=44) (actual time=1224.586..1227.675 rows=10 loops=1)
   ->  Sort  (cost=233376.93..234167.51 rows=316232 width=44) (actual time=1224.585..1227.672 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179982.97..226543.27 rows=316232 width=44) (actual time=1203.616..1225.540 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179982.97..217846.89 rows=316232 width=24) (actual time=1203.602..1210.899 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178982.91..179180.56 rows=79058 width=24) (actual time=1187.950..1188.210 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 466kB
                           Worker 0:  Sort Method: quicksort  Memory: 456kB
                           Worker 1:  Sort Method: quicksort  Memory: 470kB
                           Worker 2:  Sort Method: quicksort  Memory: 479kB
                           Worker 3:  Sort Method: quicksort  Memory: 464kB
                           ->  Parallel Hash Join  (cost=37910.88..172551.30 rows=79058 width=24) (actual time=245.480..1186.268 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.01 rows=818786 width=16) (actual time=0.727..874.910 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.88..37326.88 rows=46720 width=12) (actual time=243.063..243.066 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.57..37326.88 rows=46720 width=12) (actual time=22.705..233.004 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233485 width=16) (actual time=0.505..182.328 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12506 width=4) (actual time=22.087..22.087 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12506 width=4) (actual time=0.191..20.593 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 19.647 ms
 Execution Time: 1228.100 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233376.93..233376.96 rows=10 width=44) (actual time=421.503..422.861 rows=10 loops=1)
   ->  Sort  (cost=233376.93..234167.51 rows=316232 width=44) (actual time=421.502..422.858 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179982.97..226543.27 rows=316232 width=44) (actual time=400.321..420.670 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179982.97..217846.89 rows=316232 width=24) (actual time=400.308..405.950 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178982.91..179180.56 rows=79058 width=24) (actual time=394.965..395.232 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 481kB
                           Worker 0:  Sort Method: quicksort  Memory: 472kB
                           Worker 1:  Sort Method: quicksort  Memory: 378kB
                           Worker 2:  Sort Method: quicksort  Memory: 523kB
                           Worker 3:  Sort Method: quicksort  Memory: 480kB
                           ->  Parallel Hash Join  (cost=37910.88..172551.30 rows=79058 width=24) (actual time=91.496..393.548 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.01 rows=818786 width=16) (actual time=0.898..227.922 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.88..37326.88 rows=46720 width=12) (actual time=90.196..90.199 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.57..37326.88 rows=46720 width=12) (actual time=8.556..79.156 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233485 width=16) (actual time=0.016..43.777 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12506 width=4) (actual time=7.960..7.961 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12506 width=4) (actual time=0.011..5.883 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.197 ms
 Execution Time: 422.926 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29342.39..62442.23 rows=1 width=24) (actual time=3053.225..3058.489 rows=1 loops=1)
   ->  GroupAggregate  (cost=29342.39..194841.58 rows=5 width=24) (actual time=3053.223..3058.487 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29342.39..194559.88 rows=56330 width=16) (actual time=435.478..3050.181 rows=10479 loops=1)
               ->  Gather Merge  (cost=29341.95..36006.16 rows=56330 width=20) (actual time=434.751..451.557 rows=11389 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28341.91..28387.34 rows=18171 width=20) (actual time=425.246..425.615 rows=3732 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 898kB
                           Worker 0:  Sort Method: quicksort  Memory: 957kB
                           Worker 1:  Sort Method: quicksort  Memory: 921kB
                           Worker 2:  Sort Method: quicksort  Memory: 948kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=652.81..27056.37 rows=18171 width=20) (actual time=6.868..419.306 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5530
                                 Worker 0:  Heap Blocks: exact=5990
                                 Worker 1:  Heap Blocks: exact=5672
                                 Worker 2:  Heap Blocks: exact=5994
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..638.73 rows=56330 width=0) (actual time=10.454..10.455 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.227..0.227 rows=1 loops=11389)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 17.323 ms
 Execution Time: 3059.310 ms
(27 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29342.39..62442.23 rows=1 width=24) (actual time=79.181..84.936 rows=1 loops=1)
   ->  GroupAggregate  (cost=29342.39..194841.58 rows=5 width=24) (actual time=79.180..84.934 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29342.39..194559.88 rows=56330 width=16) (actual time=33.525..83.568 rows=10479 loops=1)
               ->  Gather Merge  (cost=29341.95..36006.16 rows=56330 width=20) (actual time=33.488..42.374 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28341.91..28387.34 rows=18171 width=20) (actual time=30.293..30.548 rows=3823 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 953kB
                           Worker 0:  Sort Method: quicksort  Memory: 918kB
                           Worker 1:  Sort Method: quicksort  Memory: 931kB
                           Worker 2:  Sort Method: quicksort  Memory: 923kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=652.81..27056.37 rows=18171 width=20) (actual time=5.997..26.516 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=6036
                                 Worker 0:  Heap Blocks: exact=5706
                                 Worker 1:  Heap Blocks: exact=5721
                                 Worker 2:  Heap Blocks: exact=5723
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..638.73 rows=56330 width=0) (actual time=5.274..5.274 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 1.344 ms
 Execution Time: 85.007 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83644.24..83644.25 rows=1 width=58) (actual time=2349.827..2357.071 rows=1 loops=1)
   ->  Sort  (cost=83644.24..83644.31 rows=25 width=58) (actual time=2349.826..2357.069 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83604.72..83644.12 rows=25 width=58) (actual time=2349.360..2357.058 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83604.72..83643.22 rows=78 width=58) (actual time=2349.182..2357.040 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82604.68..82634.02 rows=25 width=58) (actual time=2335.026..2335.636 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82604.68..82610.48 rows=2322 width=38) (actual time=2334.860..2334.945 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 150kB
                                 Worker 0:  Sort Method: quicksort  Memory: 154kB
                                 Worker 1:  Sort Method: quicksort  Memory: 151kB
                                 Worker 2:  Sort Method: quicksort  Memory: 151kB
                                 ->  Hash Join  (cost=7820.00..82474.87 rows=2322 width=38) (actual time=53.866..2333.201 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7347.00..81696.98 rows=58074 width=50) (actual time=48.705..2314.776 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7346.57..34898.79 rows=14515 width=38) (actual time=48.192..308.726 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2606.43..29826.03 rows=72573 width=8) (actual time=20.081..253.841 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6468
                                                         Worker 0:  Heap Blocks: exact=6471
                                                         Worker 1:  Heap Blocks: exact=6545
                                                         Worker 2:  Heap Blocks: exact=6643
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2550.19 rows=224976 width=0) (actual time=15.982..15.982 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=27.903..27.906 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2400kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.266..25.453 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.140..20.944 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.120..0.122 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.113..0.119 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.056..0.058 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.167..0.175 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.789..3.789 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.112..2.438 rows=10000 loops=4)
 Planning Time: 22.531 ms
 Execution Time: 2357.160 ms
(52 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83644.24..83644.25 rows=1 width=58) (actual time=147.401..161.410 rows=1 loops=1)
   ->  Sort  (cost=83644.24..83644.31 rows=25 width=58) (actual time=147.399..161.407 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83604.72..83644.12 rows=25 width=58) (actual time=146.918..161.397 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83604.72..83643.22 rows=78 width=58) (actual time=146.725..161.378 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82604.68..82634.02 rows=25 width=58) (actual time=142.545..143.156 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82604.68..82610.48 rows=2322 width=38) (actual time=142.384..142.472 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 153kB
                                 Worker 0:  Sort Method: quicksort  Memory: 151kB
                                 Worker 1:  Sort Method: quicksort  Memory: 153kB
                                 Worker 2:  Sort Method: quicksort  Memory: 149kB
                                 ->  Hash Join  (cost=7820.00..82474.87 rows=2322 width=38) (actual time=30.655..141.591 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7347.00..81696.98 rows=58074 width=50) (actual time=27.447..130.056 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7346.57..34898.79 rows=14515 width=38) (actual time=27.423..68.389 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2606.43..29826.03 rows=72573 width=8) (actual time=16.400..43.481 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6611
                                                         Worker 0:  Heap Blocks: exact=6522
                                                         Worker 1:  Heap Blocks: exact=6480
                                                         Worker 2:  Heap Blocks: exact=6514
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2550.19 rows=224976 width=0) (actual time=12.669..12.669 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=10.891..10.895 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.050..9.039 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.625 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.036..0.040 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.031..0.038 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.015..0.016 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.808..2.808 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.039..1.515 rows=10000 loops=4)
 Planning Time: 4.205 ms
 Execution Time: 161.489 ms
(52 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107851.07..107851.08 rows=1 width=32) (actual time=1113.034..1120.037 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107851.07..107851.08 rows=1 width=32) (actual time=1113.033..1120.035 rows=1 loops=1)
         ->  Gather  (cost=107850.64..107851.05 rows=4 width=32) (actual time=1112.699..1120.023 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106850.64..106850.65 rows=1 width=32) (actual time=1102.419..1102.420 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21324.27..106700.88 rows=29951 width=12) (actual time=133.454..1086.454 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13352
                           Worker 0:  Heap Blocks: exact=12731
                           Worker 1:  Heap Blocks: exact=13585
                           Worker 2:  Heap Blocks: exact=13277
                           Worker 3:  Heap Blocks: exact=13198
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21294.32 rows=119803 width=0) (actual time=130.229..130.229 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 12.284 ms
 Execution Time: 1121.551 ms
(17 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107851.07..107851.08 rows=1 width=32) (actual time=203.934..208.992 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107851.07..107851.08 rows=1 width=32) (actual time=203.932..208.990 rows=1 loops=1)
         ->  Gather  (cost=107850.64..107851.05 rows=4 width=32) (actual time=203.919..208.980 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106850.64..106850.65 rows=1 width=32) (actual time=196.701..196.702 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21324.27..106700.88 rows=29951 width=12) (actual time=104.439..189.620 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13913
                           Worker 0:  Heap Blocks: exact=11508
                           Worker 1:  Heap Blocks: exact=16276
                           Worker 2:  Heap Blocks: exact=10120
                           Worker 3:  Heap Blocks: exact=14326
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21294.32 rows=119803 width=0) (actual time=96.390..96.390 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.480 ms
 Execution Time: 209.294 ms
(17 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141497.49..141655.85 rows=1 width=116) (actual time=3519.475..3522.919 rows=1 loops=1)
   ->  GroupAggregate  (cost=141497.49..1116522.25 rows=6157 width=116) (actual time=3519.474..3522.917 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141497.49..1116337.54 rows=6157 width=96) (actual time=926.443..3520.275 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32679
               ->  Nested Loop  (cost=141497.07..638587.07 rows=153915 width=76) (actual time=912.778..2911.864 rows=34038 loops=1)
                     ->  Gather Merge  (cost=141496.64..159925.60 rows=153915 width=76) (actual time=911.581..951.849 rows=34038 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140496.58..140592.78 rows=38479 width=76) (actual time=897.023..897.889 rows=7249 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3826kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3600kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3732kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3699kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3682kB
                                 ->  Hash Join  (cost=381.77..137566.06 rows=38479 width=76) (actual time=3.575..873.119 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.01 rows=462305 width=24) (actual time=0.638..825.026 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.924..2.926 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.243..2.792 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.157..1.576 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.080..0.081 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.073..0.079 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.059..0.061 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.006 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.057..0.057 rows=1 loops=34038)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=34038)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 22.714 ms
 Execution Time: 3523.338 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141497.49..141655.85 rows=1 width=116) (actual time=502.406..504.438 rows=1 loops=1)
   ->  GroupAggregate  (cost=141497.49..1116522.25 rows=6157 width=116) (actual time=502.405..504.436 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141497.49..1116337.54 rows=6157 width=96) (actual time=318.295..503.385 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32670
               ->  Nested Loop  (cost=141497.07..638587.07 rows=153915 width=76) (actual time=318.212..419.719 rows=34029 loops=1)
                     ->  Gather Merge  (cost=141496.64..159925.60 rows=153915 width=76) (actual time=318.162..337.359 rows=34029 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140496.58..140592.78 rows=38479 width=76) (actual time=308.157..308.749 rows=7207 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 2994kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3738kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3617kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3942kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5017kB
                                 ->  Hash Join  (cost=381.77..137566.06 rows=38479 width=76) (actual time=2.953..282.398 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.01 rows=462305 width=24) (actual time=0.051..233.154 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.885..2.887 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.038..2.753 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..1.515 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.028..0.029 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.023..0.028 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34029)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34029)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.807 ms
 Execution Time: 504.743 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41976.54..42365.21 rows=1 width=64) (actual time=4884.440..4890.076 rows=1 loops=1)
   ->  GroupAggregate  (cost=41976.54..975945.07 rows=2403 width=64) (actual time=4884.439..4890.074 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41976.54..975848.95 rows=2403 width=70) (actual time=292.613..4887.601 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14813
               ->  Nested Loop  (cost=41976.54..974973.73 rows=2403 width=20) (actual time=292.591..4883.486 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41976.25..967922.51 rows=2403 width=20) (actual time=292.269..4837.475 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41975.82..346183.44 rows=363515 width=24) (actual time=230.662..3770.207 rows=182875 loops=1)
                                 ->  Gather Merge  (cost=41975.39..52724.12 rows=90855 width=8) (actual time=229.971..268.036 rows=45633 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40975.35..41048.62 rows=29308 width=8) (actual time=219.109..220.209 rows=12467 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1522kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1478kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1449kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1475kB
                                             ->  Parallel Hash Join  (cost=4740.13..38800.84 rows=29308 width=8) (actual time=22.473..213.379 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146540 width=12) (actual time=0.516..162.450 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=21.780..21.784 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.395..20.058 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.153..15.558 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.238..0.241 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.121..0.131 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.052..0.054 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.063..0.066 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.057..0.060 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.071..0.076 rows=4 loops=45633)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=182875)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62900  Misses: 119975  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=119975)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.036..0.036 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     Storage: Memory  Maximum Storage: 18kB
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.020 rows=25 loops=1)
 Planning Time: 26.721 ms
 Execution Time: 4890.165 ms
(55 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41976.54..42365.21 rows=1 width=64) (actual time=641.790..646.193 rows=1 loops=1)
   ->  GroupAggregate  (cost=41976.54..975945.07 rows=2403 width=64) (actual time=641.789..646.191 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41976.54..975848.95 rows=2403 width=70) (actual time=97.734..645.075 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14807
               ->  Nested Loop  (cost=41976.54..974973.73 rows=2403 width=20) (actual time=97.710..642.667 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41976.25..967922.51 rows=2403 width=20) (actual time=97.704..639.125 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41975.82..346183.44 rows=363515 width=24) (actual time=95.030..286.677 rows=183034 loops=1)
                                 ->  Gather Merge  (cost=41975.39..52724.12 rows=90855 width=8) (actual time=94.980..115.534 rows=45677 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40975.35..41048.62 rows=29308 width=8) (actual time=91.160..91.900 rows=12497 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1483kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1474kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1482kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1484kB
                                             ->  Parallel Hash Join  (cost=4740.13..38800.84 rows=29308 width=8) (actual time=10.796..85.788 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146540 width=12) (actual time=0.007..52.001 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.666..10.669 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.110..9.011 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.615 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.100..0.101 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.033..0.039 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.013..0.014 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45677)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=183034)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62993  Misses: 120041  Evictions: 0  Overflows: 0  Memory Usage: 8001kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=120041)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     Storage: Memory  Maximum Storage: 18kB
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=1)
 Planning Time: 5.103 ms
 Execution Time: 646.287 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65844.36..65862.21 rows=1 width=90) (actual time=4804.842..4810.072 rows=1 loops=1)
   ->  GroupAggregate  (cost=65844.36..1139445.12 rows=60150 width=90) (actual time=4804.840..4810.070 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=65844.36..1133238.42 rows=303111 width=81) (actual time=4804.065..4809.342 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=21527.50..1108889.58 rows=303111 width=81) (actual time=228.941..4783.962 rows=13629 loops=1)
                     ->  Nested Loop  (cost=21527.07..154448.36 rows=303111 width=53) (actual time=227.996..2606.602 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=21526.64..26232.35 rows=40404 width=48) (actual time=226.670..234.330 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=20526.61..20568.70 rows=16835 width=48) (actual time=217.735..217.866 rows=1092 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1427kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1414kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1373kB
                                       ->  Hash Join  (cost=449.99..19344.86 rows=16835 width=48) (actual time=4.502..208.620 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..19291.62 rows=16835 width=26) (actual time=4.412..205.656 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..18799.41 rows=16835 width=18) (actual time=0.743..196.483 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=4209 width=4) (actual time=0.120..35.272 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.041..0.043 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.651..3.652 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.118..2.470 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.086..0.087 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.077..0.079 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.295..1.301 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.157..0.157 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 28.936 ms
 Execution Time: 4810.912 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65844.36..65862.21 rows=1 width=90) (actual time=128.820..132.549 rows=1 loops=1)
   ->  GroupAggregate  (cost=65844.36..1139445.12 rows=60150 width=90) (actual time=128.819..132.547 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=65844.36..1133238.42 rows=303111 width=81) (actual time=128.065..131.839 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=21527.50..1108889.58 rows=303111 width=81) (actual time=50.943..124.240 rows=13629 loops=1)
                     ->  Nested Loop  (cost=21527.07..154448.36 rows=303111 width=53) (actual time=50.928..76.181 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=21526.64..26232.35 rows=40404 width=48) (actual time=50.899..55.406 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=20526.61..20568.70 rows=16835 width=48) (actual time=47.532..47.617 rows=1044 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1472kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1367kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1375kB
                                       ->  Hash Join  (cost=449.99..19344.86 rows=16835 width=48) (actual time=2.638..39.318 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..19291.62 rows=16835 width=26) (actual time=2.608..36.886 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..18799.41 rows=16835 width=18) (actual time=0.027..30.244 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=4209 width=4) (actual time=0.010..12.942 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.563..2.564 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.415 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.017 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.010 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.311 ms
 Execution Time: 132.638 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101803.28..101803.33 rows=20 width=202) (actual time=2161.787..2166.623 rows=20 loops=1)
   ->  Sort  (cost=101803.28..101943.58 rows=56122 width=202) (actual time=2161.785..2166.620 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=99608.37..100309.89 rows=56122 width=202) (actual time=2130.387..2154.897 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6677.13..98906.84 rows=56122 width=182) (actual time=59.816..2028.301 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5677.13..92294.64 rows=18104 width=182) (actual time=49.977..2074.139 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5675.56..92237.50 rows=18104 width=160) (actual time=49.902..2064.217 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=672.31..87186.73 rows=18104 width=16) (actual time=15.076..2007.424 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=671.88..27083.03 rows=18677 width=8) (actual time=13.496..224.675 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5006
                                             Worker 0:  Heap Blocks: exact=6082
                                             Worker 1:  Heap Blocks: exact=6119
                                             Worker 2:  Heap Blocks: exact=6170
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..657.41 rows=57898 width=0) (actual time=9.312..9.313 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.120..0.124 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=34.366..34.366 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.150..13.703 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.069..0.069 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.061..0.064 rows=25 loops=4)
 Planning Time: 19.284 ms
 Execution Time: 2167.247 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101803.28..101803.33 rows=20 width=202) (actual time=218.925..222.890 rows=20 loops=1)
   ->  Sort  (cost=101803.28..101943.58 rows=56122 width=202) (actual time=218.924..222.887 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=99608.37..100309.89 rows=56122 width=202) (actual time=187.014..211.083 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6677.13..98906.84 rows=56122 width=182) (actual time=41.707..113.864 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5677.13..92294.64 rows=18104 width=182) (actual time=38.359..152.005 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5675.56..92237.50 rows=18104 width=160) (actual time=38.333..145.648 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=672.31..87186.73 rows=18104 width=16) (actual time=10.802..104.247 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=671.88..27083.03 rows=18677 width=8) (actual time=10.726..28.217 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2623
                                             Worker 0:  Heap Blocks: exact=6912
                                             Worker 1:  Heap Blocks: exact=6908
                                             Worker 2:  Heap Blocks: exact=6934
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..657.41 rows=57898 width=0) (actual time=7.253..7.253 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.083..27.083 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.009..7.525 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=4)
 Planning Time: 1.567 ms
 Execution Time: 223.249 ms
(35 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.64..15992.65 rows=1 width=36) (actual time=721.749..721.754 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.65..7689.66 rows=1 width=32) (actual time=26.569..26.571 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=10) (actual time=0.055..19.846 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.300 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.038..0.248 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.039 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.98..8329.65 rows=10667 width=36) (actual time=721.747..721.749 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.65..8249.65 rows=10667 width=36) (actual time=711.573..721.607 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=14) (actual time=1.079..655.523 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.665..4.244 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.205..0.208 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.457..3.935 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.237..0.237 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.046..1.566 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.620 ms
 Execution Time: 722.115 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.64..15992.65 rows=1 width=36) (actual time=83.626..83.631 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.65..7689.66 rows=1 width=32) (actual time=26.706..26.708 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=10) (actual time=0.054..19.975 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.298 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.245 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.98..8329.65 rows=10667 width=36) (actual time=83.625..83.627 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.65..8249.65 rows=10667 width=36) (actual time=73.302..83.485 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=14) (actual time=0.065..29.781 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.059..0.479 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.043..0.414 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.062 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.075 ms
 Execution Time: 83.994 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147772.74..160930.66 rows=1 width=27) (actual time=1785.689..1788.939 rows=1 loops=1)
   ->  GroupAggregate  (cost=147772.74..239878.16 rows=7 width=27) (actual time=1785.688..1788.937 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147772.74..239381.98 rows=28349 width=27) (actual time=938.822..1779.406 rows=15492 loops=1)
               ->  Gather Merge  (cost=147772.32..151166.67 rows=28349 width=15) (actual time=938.286..948.991 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146772.26..146789.98 rows=7087 width=15) (actual time=926.703..927.024 rows=4228 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 391kB
                           Worker 0:  Sort Method: quicksort  Memory: 385kB
                           Worker 1:  Sort Method: quicksort  Memory: 384kB
                           Worker 2:  Sort Method: quicksort  Memory: 384kB
                           Worker 3:  Sort Method: quicksort  Memory: 386kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146319.01 rows=7087 width=15) (actual time=0.877..924.949 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.053..0.053 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 15.468 ms
 Execution Time: 1789.307 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147772.74..160930.66 rows=1 width=27) (actual time=388.980..390.204 rows=1 loops=1)
   ->  GroupAggregate  (cost=147772.74..239878.16 rows=7 width=27) (actual time=388.979..390.203 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147772.74..239381.98 rows=28349 width=27) (actual time=339.800..385.900 rows=15492 loops=1)
               ->  Gather Merge  (cost=147772.32..151166.67 rows=28349 width=15) (actual time=339.764..344.540 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146772.26..146789.98 rows=7087 width=15) (actual time=335.775..335.979 rows=4174 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 370kB
                           Worker 0:  Sort Method: quicksort  Memory: 357kB
                           Worker 1:  Sort Method: quicksort  Memory: 395kB
                           Worker 2:  Sort Method: quicksort  Memory: 393kB
                           Worker 3:  Sort Method: quicksort  Memory: 415kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146319.01 rows=7087 width=15) (actual time=0.116..334.585 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.863 ms
 Execution Time: 390.254 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1391.492..1391.495 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1391.490..1391.493 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1391.465..1391.472 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1352.583..1374.897 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=33.708..1003.659 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.651..572.068 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.647..32.648 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.016..16.624 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.615 ms
 Execution Time: 1392.729 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1254.132..1254.135 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1254.131..1254.133 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1254.106..1254.113 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1215.004..1237.521 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=30.650..879.384 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.015..468.978 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=30.319..30.320 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.016..13.788 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.753 ms
 Execution Time: 1255.229 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74160.90..74160.91 rows=1 width=32) (actual time=535.016..540.801 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74160.90..74160.91 rows=1 width=32) (actual time=535.015..540.799 rows=1 loops=1)
         ->  Gather  (cost=74160.44..74160.85 rows=4 width=64) (actual time=534.198..540.784 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73160.44..73160.45 rows=1 width=64) (actual time=523.221..523.224 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7200.57..72825.96 rows=19113 width=33) (actual time=50.884..508.957 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1226.58..66801.79 rows=19113 width=16) (actual time=20.553..462.967 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7762
                                 Worker 0:  Heap Blocks: exact=8442
                                 Worker 1:  Heap Blocks: exact=8320
                                 Worker 2:  Heap Blocks: exact=8675
                                 Worker 3:  Heap Blocks: exact=8482
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1207.46 rows=76453 width=0) (actual time=13.701..13.701 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=29.954..29.955 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.692..14.134 rows=40000 loops=5)
 Planning Time: 15.591 ms
 Execution Time: 540.850 ms
(22 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74160.90..74160.91 rows=1 width=32) (actual time=102.763..113.620 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74160.90..74160.91 rows=1 width=32) (actual time=102.762..113.618 rows=1 loops=1)
         ->  Gather  (cost=74160.44..74160.85 rows=4 width=64) (actual time=102.748..113.606 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73160.44..73160.45 rows=1 width=64) (actual time=97.759..97.761 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7200.57..72825.96 rows=19113 width=33) (actual time=39.834..90.640 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1226.58..66801.79 rows=19113 width=16) (actual time=14.556..55.777 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=6297
                                 Worker 0:  Heap Blocks: exact=9194
                                 Worker 1:  Heap Blocks: exact=8575
                                 Worker 2:  Heap Blocks: exact=8614
                                 Worker 3:  Heap Blocks: exact=9001
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1207.46 rows=76453 width=0) (actual time=8.127..8.127 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=24.907..24.907 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.286 rows=40000 loops=5)
 Planning Time: 1.160 ms
 Execution Time: 113.658 ms
(22 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242391.66..242498.87 rows=1 width=103) (actual time=1272.232..1279.237 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122681.22..122681.23 rows=1 width=32) (actual time=228.052..228.053 rows=1 loops=1)
           ->  HashAggregate  (cost=122431.40..122556.31 rows=9993 width=36) (actual time=224.768..227.460 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3857.95..120026.02 rows=240538 width=16) (actual time=27.938..120.803 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3797.81 rows=240538 width=0) (actual time=17.365..17.365 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119710.43..125070.99 rows=50 width=103) (actual time=1272.231..1279.233 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119710.15..124945.86 rows=50 width=36) (actual time=1271.556..1278.558 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119710.15..124496.18 rows=39972 width=36) (actual time=1021.340..1035.611 rows=41761 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118710.09..118735.07 rows=9993 width=36) (actual time=1009.801..1010.559 rows=8786 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1236kB
                           Worker 0:  Sort Method: quicksort  Memory: 1236kB
                           Worker 1:  Sort Method: quicksort  Memory: 1234kB
                           Worker 2:  Sort Method: quicksort  Memory: 1234kB
                           Worker 3:  Sort Method: quicksort  Memory: 1233kB
                           ->  Partial HashAggregate  (cost=117921.30..118046.22 rows=9993 width=36) (actual time=1002.004..1007.632 rows=9890 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3857.95..117319.96 rows=60134 width=16) (actual time=40.998..951.290 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13292
                                       Worker 0:  Heap Blocks: exact=13619
                                       Worker 1:  Heap Blocks: exact=13364
                                       Worker 2:  Heap Blocks: exact=13160
                                       Worker 3:  Heap Blocks: exact=13393
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3797.81 rows=240538 width=0) (actual time=37.480..37.481 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.670..0.670 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 14.056 ms
 Execution Time: 1279.662 ms
(46 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242391.66..242498.87 rows=1 width=103) (actual time=397.483..410.622 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122681.22..122681.23 rows=1 width=32) (actual time=212.545..212.547 rows=1 loops=1)
           ->  HashAggregate  (cost=122431.40..122556.31 rows=9993 width=36) (actual time=209.288..211.963 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3857.95..120026.02 rows=240538 width=16) (actual time=27.746..107.419 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3797.81 rows=240538 width=0) (actual time=17.235..17.236 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119710.43..125070.99 rows=50 width=103) (actual time=397.482..410.619 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119710.15..124945.86 rows=50 width=36) (actual time=397.448..410.584 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119710.15..124496.18 rows=39972 width=36) (actual time=162.584..183.023 rows=41755 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118710.09..118735.07 rows=9993 width=36) (actual time=151.192..151.921 rows=8811 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1231kB
                           Worker 0:  Sort Method: quicksort  Memory: 1232kB
                           Worker 1:  Sort Method: quicksort  Memory: 1236kB
                           Worker 2:  Sort Method: quicksort  Memory: 1235kB
                           Worker 3:  Sort Method: quicksort  Memory: 1236kB
                           ->  Partial HashAggregate  (cost=117921.30..118046.22 rows=9993 width=36) (actual time=144.436..149.057 rows=9885 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3857.95..117319.96 rows=60134 width=16) (actual time=32.795..111.235 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12429
                                       Worker 0:  Heap Blocks: exact=12801
                                       Worker 1:  Heap Blocks: exact=14027
                                       Worker 2:  Heap Blocks: exact=13730
                                       Worker 3:  Heap Blocks: exact=13841
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3797.81 rows=240538 width=0) (actual time=26.018..26.018 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.029..0.030 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.935 ms
 Execution Time: 410.751 ms
(46 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26816.65..26816.65 rows=1 width=44) (actual time=287.136..288.535 rows=1 loops=1)
   ->  Sort  (cost=26816.65..26856.82 rows=16068 width=44) (actual time=287.134..288.534 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18785.06..26736.31 rows=16068 width=44) (actual time=211.807..285.306 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18785.06..25975.13 rows=60050 width=40) (actual time=211.790..267.319 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17785.01..17822.54 rows=15012 width=40) (actual time=181.231..182.521 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2252kB
                           Worker 0:  Sort Method: quicksort  Memory: 2078kB
                           Worker 1:  Sort Method: quicksort  Memory: 2193kB
                           Worker 2:  Sort Method: quicksort  Memory: 2142kB
                           Worker 3:  Sort Method: quicksort  Memory: 2138kB
                           ->  Parallel Hash Join  (cost=6687.14..16743.64 rows=15012 width=40) (actual time=34.819..101.856 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.703..56.135 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.360..5.885 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12510 width=40) (actual time=27.939..27.940 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12510 width=40) (actual time=0.111..24.354 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.571 ms
 Execution Time: 288.961 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26816.65..26816.65 rows=1 width=44) (actual time=257.991..258.521 rows=1 loops=1)
   ->  Sort  (cost=26816.65..26856.82 rows=16068 width=44) (actual time=257.990..258.520 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18785.06..26736.31 rows=16068 width=44) (actual time=182.700..255.273 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18785.06..25975.13 rows=60050 width=40) (actual time=182.686..237.348 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17785.01..17822.54 rows=15012 width=40) (actual time=155.335..156.629 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2051kB
                           Worker 0:  Sort Method: quicksort  Memory: 2072kB
                           Worker 1:  Sort Method: quicksort  Memory: 2231kB
                           Worker 2:  Sort Method: quicksort  Memory: 2280kB
                           Worker 3:  Sort Method: quicksort  Memory: 2168kB
                           ->  Parallel Hash Join  (cost=6687.14..16743.64 rows=15012 width=40) (actual time=18.980..77.132 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.701..43.564 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.491 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12510 width=40) (actual time=16.117..16.118 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12510 width=40) (actual time=0.016..12.807 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.907 ms
 Execution Time: 258.584 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218184.05..218184.06 rows=1 width=32) (actual time=4008.440..4012.275 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=218184.05..218184.06 rows=1 width=32) (actual time=4008.438..4012.272 rows=1 loops=1)
         ->  Gather  (cost=218183.82..218184.03 rows=2 width=32) (actual time=4002.009..4012.260 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=217183.82..217183.83 rows=1 width=32) (actual time=3990.755..3990.758 rows=1 loops=3)
                     ->  Nested Loop  (cost=208012.30..217181.53 rows=917 width=8) (actual time=3923.951..3990.673 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=208011.87..213361.11 rows=92 width=40) (actual time=3923.187..3940.283 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=93 width=4) (actual time=0.490..17.493 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205544.67..205544.67 rows=197376 width=36) (actual time=3922.204..3922.205 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202584.03..205544.67 rows=197376 width=36) (actual time=3430.068..3887.444 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172576.02 rows=6001602 width=9) (actual time=0.245..770.820 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.565..0.724 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 12.930 ms
 Execution Time: 4019.486 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218184.05..218184.06 rows=1 width=32) (actual time=3694.000..3696.205 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=218184.05..218184.06 rows=1 width=32) (actual time=3693.999..3696.202 rows=1 loops=1)
         ->  Gather  (cost=218183.82..218184.03 rows=2 width=32) (actual time=3687.131..3696.189 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=217183.82..217183.83 rows=1 width=32) (actual time=3683.051..3683.054 rows=1 loops=3)
                     ->  Nested Loop  (cost=208012.30..217181.53 rows=917 width=8) (actual time=3672.587..3683.020 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=208011.87..213361.11 rows=92 width=40) (actual time=3672.545..3681.166 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=93 width=4) (actual time=0.100..8.678 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205544.67..205544.67 rows=197376 width=36) (actual time=3671.959..3671.960 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202584.03..205544.67 rows=197376 width=36) (actual time=3179.379..3637.283 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172576.02 rows=6001602 width=9) (actual time=0.053..541.645 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.011..0.026 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 1.041 ms
 Execution Time: 3703.015 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794764.46..794764.71 rows=100 width=71) (actual time=4405.214..4405.220 rows=9 loops=1)
   ->  Sort  (cost=794764.46..799767.13 rows=2001066 width=71) (actual time=4405.213..4405.218 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658096.85..718285.16 rows=2001066 width=71) (actual time=4404.471..4405.170 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335217.69..550305.05 rows=2001066 width=44) (actual time=3667.769..4404.393 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172576.02 rows=6001602 width=9) (actual time=0.768..307.786 rows=6001215 loops=1)
                     ->  Hash  (cost=328966.03..328966.03 rows=500133 width=43) (actual time=3467.651..3467.655 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282584.64..328966.03 rows=500133 width=43) (actual time=3156.750..3467.626 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275612.64..320681.15 rows=500133 width=24) (actual time=3095.496..3406.362 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.722..228.505 rows=1500000 loops=1)
                                       ->  Hash  (cost=269360.97..269360.97 rows=500133 width=4) (actual time=3008.060..3008.061 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269360.97 rows=500133 width=4) (actual time=642.879..3008.036 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216846.96 rows=6001602 width=9) (actual time=0.020..1644.571 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=60.884..60.884 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.578..35.867 rows=150000 loops=1)
 Planning Time: 18.395 ms
 Execution Time: 4406.557 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794764.46..794764.71 rows=100 width=71) (actual time=3354.530..3354.536 rows=9 loops=1)
   ->  Sort  (cost=794764.46..799767.13 rows=2001066 width=71) (actual time=3354.528..3354.533 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658096.85..718285.16 rows=2001066 width=71) (actual time=3353.762..3354.478 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335217.69..550305.05 rows=2001066 width=44) (actual time=2624.594..3353.686 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172576.02 rows=6001602 width=9) (actual time=0.018..309.919 rows=6001215 loops=1)
                     ->  Hash  (cost=328966.03..328966.03 rows=500133 width=43) (actual time=2430.098..2430.102 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282584.64..328966.03 rows=500133 width=43) (actual time=2226.389..2430.080 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275612.64..320681.15 rows=500133 width=24) (actual time=2183.280..2386.962 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..84.351 rows=1500000 loops=1)
                                       ->  Hash  (cost=269360.97..269360.97 rows=500133 width=4) (actual time=2128.064..2128.065 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269360.97 rows=500133 width=4) (actual time=450.788..2128.047 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216846.96 rows=6001602 width=9) (actual time=0.018..843.662 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=42.689..42.689 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.022..18.894 rows=150000 loops=1)
 Planning Time: 1.721 ms
 Execution Time: 3355.562 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18196.29..18196.30 rows=1 width=32) (actual time=842.959..843.031 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18196.29..18196.30 rows=1 width=32) (actual time=842.958..843.029 rows=1 loops=1)
         ->  Gather  (cost=18196.07..18196.28 rows=2 width=32) (actual time=842.936..843.020 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17196.07..17196.08 rows=1 width=32) (actual time=831.978..831.979 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17195.70 rows=49 width=12) (actual time=13.801..831.856 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=205 width=30) (actual time=0.737..26.504 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.60 rows=1 width=21) (actual time=4.229..4.764 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 15.934 ms
 Execution Time: 843.630 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18196.29..18196.30 rows=1 width=32) (actual time=28.995..32.714 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18196.29..18196.30 rows=1 width=32) (actual time=28.994..32.712 rows=1 loops=1)
         ->  Gather  (cost=18196.07..18196.28 rows=2 width=32) (actual time=28.878..32.702 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17196.07..17196.08 rows=1 width=32) (actual time=26.079..26.080 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17195.70 rows=49 width=12) (actual time=0.621..26.041 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=205 width=30) (actual time=0.094..17.149 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.60 rows=1 width=21) (actual time=0.046..0.052 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.189 ms
 Execution Time: 32.759 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=212653.71..212653.72 rows=1 width=51) (actual time=3757.502..3757.586 rows=1 loops=1)
   ->  Sort  (cost=212653.71..212653.72 rows=1 width=51) (actual time=3757.500..3757.584 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=187379.31..212653.70 rows=1 width=51) (actual time=3590.609..3757.403 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.570..3.160 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.243..0.246 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.319..2.201 rows=10000 loops=1)
               ->  Materialize  (cost=187379.31..212198.39 rows=1 width=8) (actual time=5.723..8.341 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=187379.31..212198.39 rows=1 width=8) (actual time=2506.548..3583.781 rows=5898 loops=1)
                           ->  Hash Join  (cost=187378.88..205147.55 rows=4948 width=44) (actual time=2506.015..3054.490 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=181010.97..197493.65 rows=489890 width=40) (actual time=2469.964..2968.046 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14996.83..141587.17 rows=935356 width=13) (actual time=125.907..1977.627 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14762.99 rows=935356 width=0) (actual time=106.284..106.285 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=36.031..36.112 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=1.817..35.727 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.161..27.657 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.41 rows=1 width=12) (actual time=0.089..0.089 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 17.813 ms
 Execution Time: 3762.412 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=212653.71..212653.72 rows=1 width=51) (actual time=1363.909..1363.992 rows=1 loops=1)
   ->  Sort  (cost=212653.71..212653.72 rows=1 width=51) (actual time=1363.907..1363.990 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=187379.31..212653.70 rows=1 width=51) (actual time=1197.935..1363.802 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.032..1.600 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.023..0.025 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.670 rows=10000 loops=1)
               ->  Materialize  (cost=187379.31..212198.39 rows=1 width=8) (actual time=1.596..2.879 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=187379.31..212198.39 rows=1 width=8) (actual time=699.042..1194.646 rows=5898 loops=1)
                           ->  Hash Join  (cost=187378.88..205147.55 rows=4948 width=44) (actual time=699.022..1171.624 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=181010.97..197493.65 rows=489890 width=40) (actual time=687.605..1121.050 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14996.83..141587.17 rows=935356 width=13) (actual time=88.267..302.338 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14762.99 rows=935356 width=0) (actual time=69.293..69.293 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.397..11.477 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.343..11.200 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.018..8.163 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.41 rows=1 width=12) (actual time=0.004..0.004 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.694 ms
 Execution Time: 1368.665 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194185.55..194185.56 rows=1 width=34) (actual time=1369.362..1369.476 rows=100 loops=1)
   ->  Sort  (cost=194185.55..194185.56 rows=1 width=34) (actual time=1369.360..1369.468 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194185.52..194185.54 rows=1 width=34) (actual time=1368.354..1369.051 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194185.52..194185.53 rows=1 width=26) (actual time=1368.345..1368.615 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194185.51 rows=1 width=26) (actual time=16.156..1355.000 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194182.12 rows=1 width=38) (actual time=15.065..1265.550 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194178.81 rows=1 width=34) (actual time=11.095..38.742 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193178.71 rows=1 width=34) (actual time=3.320..609.923 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133624.63 rows=20005 width=34) (actual time=2.181..495.398 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.01 rows=500134 width=8) (actual time=0.424..435.488 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.735..1.736 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.440..1.669 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.141..0.143 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.296..1.470 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.155..0.155 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.085..0.085 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.012..0.012 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 20.752 ms
 Execution Time: 1370.384 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194185.55..194185.56 rows=1 width=34) (actual time=477.333..477.435 rows=100 loops=1)
   ->  Sort  (cost=194185.55..194185.56 rows=1 width=34) (actual time=477.331..477.427 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194185.52..194185.54 rows=1 width=34) (actual time=476.303..476.985 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194185.52..194185.53 rows=1 width=26) (actual time=476.294..476.552 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194185.51 rows=1 width=26) (actual time=3.193..463.900 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194182.12 rows=1 width=38) (actual time=3.172..419.657 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194178.81 rows=1 width=34) (actual time=1.011..357.292 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193178.71 rows=1 width=34) (actual time=0.567..431.401 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133624.63 rows=20005 width=34) (actual time=0.455..324.445 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.01 rows=500134 width=8) (actual time=0.039..257.689 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.404..0.405 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.064..0.346 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.050..0.286 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.026..0.026 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.005..0.005 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.516 ms
 Execution Time: 477.747 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.17 rows=1 width=72) (actual time=151.957..153.835 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=50.444..50.525 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=50.297..50.512 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=41.042..41.043 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1984 width=6) (actual time=0.193..39.799 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.15 rows=737 width=72) (actual time=151.957..153.752 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.73 rows=737 width=38) (actual time=75.918..153.229 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=74.575..77.737 rows=2744 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.067..21.203 rows=1521 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 531kB
                           Worker 0:  Sort Method: quicksort  Memory: 472kB
                           Worker 1:  Sort Method: quicksort  Memory: 468kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.022..19.159 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.027..0.027 rows=1 loops=2744)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 15.915 ms
 Execution Time: 153.906 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.17 rows=1 width=72) (actual time=57.628..59.269 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=27.817..27.897 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=27.714..27.887 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=25.131..25.132 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1984 width=6) (actual time=0.013..24.005 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.15 rows=737 width=72) (actual time=57.627..59.188 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.73 rows=737 width=38) (actual time=51.211..58.982 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=51.184..53.421 rows=2736 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.341..20.414 rows=1531 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 549kB
                           Worker 0:  Sort Method: quicksort  Memory: 460kB
                           Worker 1:  Sort Method: quicksort  Memory: 462kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..18.481 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.928 ms
 Execution Time: 59.323 ms
(29 rows)

