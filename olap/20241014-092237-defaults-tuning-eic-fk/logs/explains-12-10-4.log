query 1 run 1
SET
SET
SET
                                                 QUERY PLAN                                                  
-------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906874.18..1906874.86 rows=1 width=236)
   ->  Finalize GroupAggregate  (cost=1906874.18..1906878.24 rows=6 width=236)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906874.18..1906877.05 rows=24 width=236)
               Workers Planned: 4
               ->  Sort  (cost=1905874.12..1905874.14 rows=6 width=236)
                     Sort Key: l_returnflag, l_linestatus
                     ->  Partial HashAggregate  (cost=1905873.88..1905874.05 rows=6 width=236)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312572.60 rows=14832532 width=25)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(11 rows)

query 2 run 1
SET
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1054695.05..1054695.06 rows=1 width=192)
   ->  Sort  (cost=1054695.05..1054695.06 rows=1 width=192)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=559011.43..1054695.04 rows=1 width=192)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               ->  Gather Merge  (cost=1000.49..68602.37 rows=7472 width=30)
                     Workers Planned: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.32 rows=1868 width=30)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=558009.60..566008.99 rows=1599878 width=172)
                     ->  Sort  (cost=558009.60..562009.30 rows=1599878 width=172)
                           Sort Key: partsupp.ps_partkey
                           ->  Hash Join  (cost=4048.51..305260.93 rows=1599878 width=172)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255215.92 rows=7999392 width=14)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166)
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8)
(42 rows)

query 3 run 1
SET
SET
SET
                                                           QUERY PLAN                                                            
---------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2266906.36..2266906.39 rows=10 width=44)
   ->  Sort  (cost=2266906.36..2274628.38 rows=3088808 width=44)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         ->  Finalize GroupAggregate  (cost=1731865.26..2200158.33 rows=3088808 width=44)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1731865.26..2122938.13 rows=3088808 width=44)
                     Workers Planned: 4
                     ->  Partial GroupAggregate  (cost=1730865.21..1754031.27 rows=772202 width=44)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1730865.21..1732795.71 rows=772202 width=24)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 ->  Nested Loop  (cost=41561.55..1645167.93 rows=772202 width=24)
                                       ->  Parallel Hash Join  (cost=41560.99..354425.43 rows=355181 width=12)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=1797472 width=16)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                             ->  Parallel Hash  (cost=40634.70..40634.70 rows=74103 width=4)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.70 rows=74103 width=4)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
(22 rows)

query 4 run 1
SET
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=710612.25..710612.76 rows=1 width=24)
   ->  Finalize GroupAggregate  (cost=710612.25..710614.79 rows=5 width=24)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=710612.25..710614.64 rows=20 width=24)
               Workers Planned: 4
               ->  Sort  (cost=709612.19..709612.20 rows=5 width=24)
                     Sort Key: orders.o_orderpriority
                     ->  Partial HashAggregate  (cost=709612.08..709612.13 rows=5 width=24)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=7895.86..708925.63 rows=137290 width=16)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=7895.30..271223.55 rows=137350 width=20)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7757.95 rows=549401 width=0)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
(17 rows)

query 5 run 1
SET
SET
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=767874.43..767874.43 rows=1 width=58)
   ->  Sort  (cost=767874.43..767874.49 rows=25 width=58)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         ->  Finalize GroupAggregate  (cost=767635.09..767874.30 rows=25 width=58)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=767635.09..767873.24 rows=100 width=58)
                     Workers Planned: 4
                     ->  Partial GroupAggregate  (cost=766635.03..766861.27 rows=25 width=58)
                           Group Key: nation.n_name
                           ->  Sort  (cost=766635.03..766680.22 rows=18074 width=38)
                                 Sort Key: nation.n_name
                                 ->  Parallel Hash Join  (cost=78966.44..765357.05 rows=18074 width=38)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75274.84..759293.01 rows=451894 width=50)
                                             ->  Parallel Hash Join  (cost=75274.28..347420.78 rows=113024 width=38)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32480.73..302225.49 rows=565117 width=8)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31915.62 rows=2260468 width=0)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41856.01..41856.01 rows=75003 width=38)
                                                         ->  Hash Join  (cost=2.51..41856.01 rows=75003 width=38)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30)
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8)
(35 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1279020.18..1279020.19 rows=1 width=32)
   ->  Finalize Aggregate  (cost=1279020.18..1279020.19 rows=1 width=32)
         ->  Gather  (cost=1279019.75..1279020.16 rows=4 width=32)
               Workers Planned: 4
               ->  Partial Aggregate  (cost=1278019.75..1278019.76 rows=1 width=32)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=212251.95..1276548.05 rows=294339 width=12)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211957.61 rows=1177355 width=0)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1452002.06..1452002.65 rows=1 width=92)
   ->  Finalize GroupAggregate  (cost=1452002.06..1457900.71 rows=10032 width=92)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1452002.06..1457223.55 rows=40128 width=92)
               Workers Planned: 4
               ->  Partial GroupAggregate  (cost=1451002.00..1451443.86 rows=10032 width=92)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1451002.00..1451040.04 rows=15217 width=72)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           ->  Parallel Hash Join  (cost=44275.49..1449944.92 rows=15217 width=72)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 ->  Nested Loop  (cost=41225.44..1445103.47 rows=365648 width=46)
                                       ->  Parallel Hash Join  (cost=41224.88..354808.79 rows=300020 width=30)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298770.45 rows=3750245 width=8)
                                             ->  Parallel Hash  (cost=40849.86..40849.86 rows=30001 width=30)
                                                   ->  Hash Join  (cost=1.40..40849.86 rows=30001 width=30)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30)
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
(33 rows)

query 8 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=594738.27..594738.57 rows=1 width=40)
   ->  Finalize GroupAggregate  (cost=594738.27..595465.48 rows=2406 width=40)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=594738.27..595381.27 rows=2406 width=72)
               Workers Planned: 1
               ->  Partial GroupAggregate  (cost=593738.26..594110.58 rows=2406 width=72)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=593738.26..593774.28 rows=14409 width=46)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           ->  Hash Join  (cost=589560.86..592742.98 rows=14409 width=46)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=589559.30..592625.14 rows=14409 width=20)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8)
                                       ->  Parallel Hash  (cost=589482.75..589482.75 rows=6124 width=20)
                                             ->  Hash Join  (cost=548126.66..589482.75 rows=6124 width=20)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=548124.16..589304.18 rows=30619 width=24)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8)
                                                         ->  Parallel Hash  (cost=547741.42..547741.42 rows=30619 width=24)
                                                               ->  Parallel Hash Join  (cost=225812.97..547741.42 rows=30619 width=24)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317521.68 rows=1154725 width=12)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     ->  Parallel Hash  (cost=224569.93..224569.93 rows=99443 width=20)
                                                                           ->  Nested Loop  (cost=0.56..224569.93 rows=99443 width=20)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47230.96 rows=3316 width=4)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..53.14 rows=34 width=24)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4)
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(40 rows)

query 9 run 1
SET
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1101143.82..1101144.36 rows=1 width=66)
   ->  Finalize GroupAggregate  (cost=1101143.82..1133410.60 rows=60150 width=66)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1101143.82..1129951.98 rows=240600 width=66)
               Workers Planned: 4
               ->  Sort  (cost=1100143.76..1100294.14 rows=60150 width=66)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     ->  Partial HashAggregate  (cost=1094316.35..1095368.97 rows=60150 width=66)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=715174.50..1075762.74 rows=1060206 width=57)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=715172.94..1067205.32 rows=1060206 width=31)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298770.45 rows=3750245 width=8)
                                       ->  Parallel Hash  (cost=694672.36..694672.36 rows=1060206 width=31)
                                             ->  Nested Loop  (cost=3545.53..694672.36 rows=1060206 width=31)
                                                   Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                                   ->  Parallel Hash Join  (cost=3544.97..189901.69 rows=141403 width=26)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.43..185985.96 rows=141403 width=18)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47230.96 rows=35353 width=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(30 rows)

query 10 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=953663.67..953663.72 rows=20 width=202)
   ->  Sort  (cost=953663.67..955097.51 rows=573534 width=202)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         ->  Finalize GroupAggregate  (cost=853240.88..938402.14 rows=573534 width=202)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=853240.88..925497.60 rows=573536 width=202)
                     Workers Planned: 4
                     ->  Partial GroupAggregate  (cost=852240.82..856183.88 rows=143384 width=202)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=852240.82..852599.28 rows=143384 width=182)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 ->  Hash Join  (cost=796183.12..839960.32 rows=143384 width=182)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=796181.56..839518.57 rows=143384 width=160)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=148)
                                             ->  Parallel Hash  (cost=794389.26..794389.26 rows=143384 width=16)
                                                   ->  Nested Loop  (cost=8289.86..794389.26 rows=143384 width=16)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8289.29..271720.53 rows=144216 width=8)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8145.08 rows=576864 width=0)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(27 rows)

query 11 run 1
SET
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471046.53..471046.54 rows=1 width=36)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207443.82..207443.84 rows=1 width=32)
           ->  Gather  (cost=207443.39..207443.80 rows=4 width=32)
                 Workers Planned: 4
                 ->  Partial Aggregate  (cost=206443.39..206443.40 rows=1 width=32)
                       ->  Hash Join  (cost=2323.58..205843.43 rows=79994 width=10)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195220.48 rows=1999848 width=14)
                             ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4)
                                   ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263602.70..263869.34 rows=106659 width=36)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         ->  Finalize GroupAggregate  (cost=213358.05..263069.40 rows=106659 width=36)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               ->  Gather Merge  (cost=213358.05..253470.12 rows=319976 width=36)
                     Workers Planned: 4
                     ->  Partial GroupAggregate  (cost=212357.99..214357.84 rows=79994 width=36)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212357.99..212557.97 rows=79994 width=14)
                                 Sort Key: partsupp.ps_partkey
                                 ->  Hash Join  (cost=2323.58..205843.43 rows=79994 width=14)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195220.48 rows=1999848 width=18)
                                       ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4)
                                             ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
(39 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1715613.90..1715820.29 rows=1 width=27)
   ->  Finalize GroupAggregate  (cost=1715613.90..1717058.63 rows=7 width=27)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1715613.90..1717058.35 rows=28 width=27)
               Workers Planned: 4
               ->  Partial GroupAggregate  (cost=1714613.84..1716054.95 rows=7 width=27)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1714613.84..1714793.97 rows=72052 width=27)
                           Sort Key: lineitem.l_shipmode
                           ->  Nested Loop  (cost=0.43..1708800.42 rows=72052 width=27)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462516.28 rows=72052 width=15)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
(14 rows)

query 13 run 1
SET
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1686059.33..1686059.34 rows=1 width=16)
   ->  Sort  (cost=1686059.33..1686059.83 rows=200 width=16)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         ->  HashAggregate  (cost=1686056.33..1686058.33 rows=200 width=16)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860740.45..1663555.37 rows=1500064 width=12)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860740.45..1618553.45 rows=6000256 width=12)
                           Workers Planned: 4
                           ->  Partial GroupAggregate  (cost=859740.39..902865.06 rows=1500064 width=12)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859740.39..869115.07 rows=3749870 width=8)
                                       Sort Key: customer.c_custkey
                                       ->  Parallel Hash Left Join  (cost=369667.87..417326.42 rows=3749870 width=8)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17424.91 rows=375016 width=4)
                                             ->  Parallel Hash  (cost=308146.07..308146.07 rows=3749870 width=8)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=3749870 width=8)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(19 rows)

query 14 run 1
SET
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=871104.11..871104.13 rows=1 width=32)
   ->  Finalize Aggregate  (cost=871104.11..871104.13 rows=1 width=32)
         ->  Gather  (cost=871103.66..871104.07 rows=4 width=64)
               Workers Planned: 4
               ->  Partial Aggregate  (cost=870103.66..870103.67 rows=1 width=64)
                     ->  Parallel Hash Join  (cost=65139.49..866582.09 rows=201232 width=33)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12908.56..813822.93 rows=201232 width=16)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12707.33 rows=804926 width=0)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.97..45980.97 rows=499997 width=25)
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.97 rows=499997 width=25)
(13 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2743361.06..2743472.78 rows=1 width=103)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1390090.44..1390090.45 rows=1 width=32)
           ->  Finalize HashAggregate  (cost=1387616.14..1388853.29 rows=98972 width=36)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1343821.03..1384646.98 rows=395888 width=36)
                       Workers Planned: 4
                       ->  Partial HashAggregate  (cost=1342821.03..1344058.18 rows=98972 width=36)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37314.10..1337003.34 rows=581769 width=16)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36732.34 rows=2327077 width=0)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1353270.60..1408571.33 rows=495 width=103)
         ->  Finalize GroupAggregate  (cost=1353270.31..1407352.43 rows=495 width=36)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               ->  Gather Merge  (cost=1353270.31..1400671.82 rows=395888 width=36)
                     Workers Planned: 4
                     ->  Sort  (cost=1352270.25..1352517.68 rows=98972 width=36)
                           Sort Key: lineitem.l_suppkey
                           ->  Partial HashAggregate  (cost=1342821.03..1344058.18 rows=98972 width=36)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37314.10..1337003.34 rows=581769 width=16)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36732.34 rows=2327077 width=0)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295152.40..295152.41 rows=1 width=44)
   ->  Sort  (cost=295152.40..295535.89 rows=153396 width=44)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=285468.38..294385.42 rows=153396 width=44)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=285468.38..286944.99 rows=590647 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Gather  (cost=58875.33..218465.39 rows=590647 width=40)
                           Workers Planned: 4
                           ->  Parallel Hash Join  (cost=57875.33..158400.69 rows=147662 width=40)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101372.02 rows=999924 width=8)
                                       Filter: (NOT (hashed SubPlan 1))
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                 ->  Parallel Hash  (cost=53480.93..53480.93 rows=73836 width=40)
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.93 rows=73836 width=40)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(19 rows)

query 17 run 1
SET
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4400823.36..4400823.37 rows=1 width=32)
   ->  Aggregate  (cost=4400823.36..4400823.37 rows=1 width=32)
         ->  Merge Join  (cost=3228994.07..4400778.27 rows=18036 width=8)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               ->  Finalize GroupAggregate  (cost=3227993.02..4275317.93 rows=1750889 width=36)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3227993.02..4196527.93 rows=7003556 width=36)
                           Workers Planned: 4
                           ->  Partial GroupAggregate  (cost=3226992.96..3361336.83 rows=1750889 width=36)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3226992.96..3264478.88 rows=14994368 width=9)
                                       Sort Key: lineitem_1.l_partkey
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275086.68 rows=14994368 width=9)
               ->  Materialize  (cost=1001.05..102743.35 rows=61807 width=21)
                     ->  Gather Merge  (cost=1001.05..102588.83 rows=61807 width=21)
                           Workers Planned: 4
                           ->  Nested Loop  (cost=0.99..94226.96 rows=15452 width=21)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.32 rows=515 width=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..53.09 rows=34 width=17)
                                       Index Cond: (l_partkey = part.p_partkey)
(22 rows)

query 18 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9253597.52..9253597.77 rows=100 width=71)
   ->  Sort  (cost=9253597.52..9303556.72 rows=19983679 width=71)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         ->  Finalize GroupAggregate  (cost=5547545.75..8489835.68 rows=19983679 width=71)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547545.75..8040202.89 rows=19983680 width=71)
                     Workers Planned: 4
                     ->  Partial GroupAggregate  (cost=5546545.69..5658953.89 rows=4995920 width=71)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546545.69..5559035.49 rows=4995920 width=44)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 ->  Parallel Hash Join  (cost=3390675.81..4891894.17 rows=4995920 width=44)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275086.68 rows=14994368 width=9)
                                       ->  Parallel Hash  (cost=3364073.67..3364073.67 rows=1249531 width=43)
                                             ->  Parallel Hash Join  (cost=44385.86..3364073.67 rows=1249531 width=43)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316408.78 rows=1249531 width=24)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435472.79 rows=3750245 width=20)
                                                         ->  GroupAggregate  (cost=0.56..2796588.53 rows=4998123 width=4)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271785.65 rows=59977472 width=9)
                                                   ->  Parallel Hash  (cost=39697.16..39697.16 rows=375016 width=23)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=23)
(26 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

 Limit  (cost=132588.62..132588.63 rows=1 width=32)
   ->  Finalize Aggregate  (cost=132588.62..132588.63 rows=1 width=32)
         ->  Gather  (cost=132588.19..132588.60 rows=4 width=32)
               Workers Planned: 4
               ->  Partial Aggregate  (cost=131588.19..131588.20 rows=1 width=32)
                     ->  Nested Loop  (cost=0.56..131586.04 rows=286 width=12)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.87 rows=1255 width=30)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..55.25 rows=1 width=21)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
(11 rows)

query 20 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3102274.45..3102274.46 rows=1 width=51)
   ->  Sort  (cost=3102274.45..3102274.46 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=1618430.33..3102274.44 rows=1 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59)
               ->  Materialize  (cost=1618430.33..3097622.14 rows=3 width=8)
                     ->  Merge Join  (cost=1618430.33..3097622.12 rows=3 width=8)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           ->  Finalize GroupAggregate  (cost=1617429.41..2921322.45 rows=4849201 width=40)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1617429.41..2757208.15 rows=9137628 width=40)
                                       Workers Planned: 4
                                       ->  Partial GroupAggregate  (cost=1616429.35..1667828.51 rows=2284407 width=40)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1616429.35..1622140.37 rows=2284407 width=13)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350058.52 rows=2284407 width=13)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.92..95406.90 rows=80802 width=16)
                                 ->  Gather Merge  (cost=1000.92..95204.89 rows=80802 width=16)
                                       Workers Planned: 4
                                       ->  Nested Loop  (cost=0.86..84580.54 rows=20200 width=16)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.33 rows=5050 width=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12)
                                                   Index Cond: (ps_partkey = part.p_partkey)
(32 rows)

query 21 run 1
SET
SET
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1965232.59..1965232.59 rows=1 width=34)
   ->  Sort  (cost=1965232.59..1965232.59 rows=1 width=34)
         Sort Key: (count(*)) DESC, supplier.s_name
         ->  Finalize GroupAggregate  (cost=1965232.05..1965232.58 rows=1 width=34)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1965232.05..1965232.55 rows=4 width=34)
                     Workers Planned: 4
                     ->  Partial GroupAggregate  (cost=1964231.99..1964232.01 rows=1 width=34)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1964231.99..1964232.00 rows=1 width=26)
                                 Sort Key: supplier.s_name
                                 ->  Nested Loop Semi Join  (cost=1338012.38..1964231.98 rows=1 width=26)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       ->  Nested Loop Anti Join  (cost=1338011.81..1964228.34 rows=1 width=38)
                                             ->  Parallel Hash Join  (cost=1338011.25..1653212.71 rows=96857 width=38)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=1816869 width=4)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                   ->  Parallel Hash  (cost=1335512.18..1335512.18 rows=199925 width=34)
                                                         ->  Parallel Hash Join  (cost=3020.56..1335512.18 rows=199925 width=34)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312572.60 rows=4998123 width=8)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30)
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
(35 rows)

query 22 run 1
SET
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96289.70..96289.85 rows=1 width=72)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.42..46821.43 rows=1 width=32)
           ->  Gather  (cost=46820.98..46821.39 rows=4 width=32)
                 Workers Planned: 4
                 ->  Partial Aggregate  (cost=45820.98..45820.99 rows=1 width=32)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.17 rows=11924 width=6)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Finalize GroupAggregate  (cost=49468.27..50721.32 rows=8164 width=72)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49468.27..50496.81 rows=8164 width=72)
               Workers Planned: 4
               Params Evaluated: $1
               ->  Partial GroupAggregate  (cost=48468.22..48524.34 rows=2041 width=72)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48468.22..48473.32 rows=2041 width=38)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           ->  Nested Loop Anti Join  (cost=0.43..48356.01 rows=2041 width=38)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.17 rows=4375 width=26)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.20 rows=19 width=4)
                                       Index Cond: (o_custkey = customer.c_custkey)
(22 rows)

