query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906874.18..1906874.86 rows=1 width=236) (actual time=21667.932..21667.999 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906874.18..1906878.24 rows=6 width=236) (actual time=21667.931..21667.998 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906874.18..1906877.05 rows=24 width=236) (actual time=21667.894..21667.965 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905874.12..1905874.14 rows=6 width=236) (actual time=21658.283..21658.284 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905873.88..1905874.05 rows=6 width=236) (actual time=21658.256..21658.264 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312572.60 rows=14832532 width=25) (actual time=0.328..5602.269 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 12.831 ms
 Execution Time: 21669.048 ms
(20 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906874.18..1906874.86 rows=1 width=236) (actual time=18997.568..18997.639 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906874.18..1906878.24 rows=6 width=236) (actual time=18997.567..18997.637 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906874.18..1906877.05 rows=24 width=236) (actual time=18997.529..18997.602 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905874.12..1905874.14 rows=6 width=236) (actual time=18992.476..18992.477 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905873.88..1905874.05 rows=6 width=236) (actual time=18992.450..18992.458 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312572.60 rows=14832532 width=25) (actual time=0.027..2658.224 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 0.544 ms
 Execution Time: 18997.715 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1054695.05..1054695.06 rows=1 width=192) (actual time=4568.317..4568.431 rows=100 loops=1)
   ->  Sort  (cost=1054695.05..1054695.06 rows=1 width=192) (actual time=4568.316..4568.424 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=559011.43..1054695.04 rows=1 width=192) (actual time=3249.911..4564.952 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68602.37 rows=7472 width=30) (actual time=10.670..14.955 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.32 rows=1868 width=30) (actual time=1.392..290.967 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=558009.60..566008.99 rows=1599878 width=172) (actual time=3238.141..3693.096 rows=1603828 loops=1)
                     ->  Sort  (cost=558009.60..562009.30 rows=1599878 width=172) (actual time=3238.137..3510.307 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305260.93 rows=1599878 width=172) (actual time=72.677..2543.983 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255215.92 rows=7999392 width=14) (actual time=2.724..1108.897 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=69.916..69.919 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=1.765..63.093 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.321..48.357 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=1.431..1.432 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=1.424..1.430 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=1.070..1.071 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.343..0.343 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.339..0.340 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32) (actual time=0.105..0.105 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6) (actual time=0.094..0.103 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10) (actual time=0.088..0.101 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10) (actual time=0.087..0.099 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.083..0.085 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.012..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.007 rows=25 loops=1)
 Planning Time: 20.098 ms
 Execution Time: 4605.135 ms
(56 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1054695.05..1054695.06 rows=1 width=192) (actual time=3513.863..3513.986 rows=100 loops=1)
   ->  Sort  (cost=1054695.05..1054695.06 rows=1 width=192) (actual time=3513.861..3513.979 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=559011.43..1054695.04 rows=1 width=192) (actual time=2779.319..3511.408 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68602.37 rows=7472 width=30) (actual time=3.923..6.680 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.32 rows=1868 width=30) (actual time=0.142..121.461 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=558009.60..566008.99 rows=1599878 width=172) (actual time=2775.287..3217.378 rows=1603828 loops=1)
                     ->  Sort  (cost=558009.60..562009.30 rows=1599878 width=172) (actual time=2775.284..3035.700 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305260.93 rows=1599878 width=172) (actual time=61.140..2094.177 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255215.92 rows=7999392 width=14) (actual time=0.041..781.814 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=61.062..61.065 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.044..39.948 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.010..15.979 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.029..0.030 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.023..0.029 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.007 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6) (actual time=0.010..0.016 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10) (actual time=0.006..0.014 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.003..0.004 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.012..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.007 rows=25 loops=1)
 Planning Time: 1.758 ms
 Execution Time: 3549.886 ms
(56 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2266906.36..2266906.39 rows=10 width=44) (actual time=14194.311..14232.388 rows=10 loops=1)
   ->  Sort  (cost=2266906.36..2274628.38 rows=3088808 width=44) (actual time=14194.310..14232.385 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1731865.26..2200158.33 rows=3088808 width=44) (actual time=14018.467..14209.474 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1731865.26..2122938.13 rows=3088808 width=44) (actual time=14018.458..14125.137 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1730865.21..1754031.27 rows=772202 width=44) (actual time=14006.996..14049.047 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1730865.21..1732795.71 rows=772202 width=24) (actual time=14006.974..14009.782 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6184kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6288kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6135kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6307kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6325kB
                                 ->  Nested Loop  (cost=41561.55..1645167.93 rows=772202 width=24) (actual time=268.998..13983.332 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41560.99..354425.43 rows=355181 width=12) (actual time=265.995..2059.608 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=1797472 width=16) (actual time=0.546..1299.655 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.70..40634.70 rows=74103 width=4) (actual time=264.772..264.773 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.70 rows=74103 width=4) (actual time=0.104..246.412 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.041..0.041 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 21.588 ms
 Execution Time: 14233.171 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2266906.36..2266906.39 rows=10 width=44) (actual time=4137.536..4172.328 rows=10 loops=1)
   ->  Sort  (cost=2266906.36..2274628.38 rows=3088808 width=44) (actual time=4137.535..4172.326 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1731865.26..2200158.33 rows=3088808 width=44) (actual time=3960.127..4149.022 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1731865.26..2122938.13 rows=3088808 width=44) (actual time=3960.118..4064.764 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1730865.21..1754031.27 rows=772202 width=44) (actual time=3952.020..3993.864 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1730865.21..1732795.71 rows=772202 width=24) (actual time=3952.001..3954.826 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6323kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6435kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6373kB
                                 Worker 2:  Sort Method: quicksort  Memory: 5949kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6160kB
                                 ->  Nested Loop  (cost=41561.55..1645167.93 rows=772202 width=24) (actual time=134.326..3932.141 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41560.99..354425.43 rows=355181 width=12) (actual time=133.996..1081.237 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=1797472 width=16) (actual time=0.031..500.848 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.70..40634.70 rows=74103 width=4) (actual time=133.288..133.289 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.70 rows=74103 width=4) (actual time=0.028..112.146 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.009..0.009 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 1.743 ms
 Execution Time: 4172.414 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=710612.25..710612.76 rows=1 width=24) (actual time=21035.978..21078.874 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=710612.25..710614.79 rows=5 width=24) (actual time=21035.977..21078.872 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=710612.25..710614.64 rows=20 width=24) (actual time=21035.963..21078.862 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=709612.19..709612.20 rows=5 width=24) (actual time=21023.255..21023.257 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=709612.08..709612.13 rows=5 width=24) (actual time=21023.223..21023.224 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=7895.86..708925.63 rows=137290 width=16) (actual time=156.892..20921.377 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=7895.30..271223.55 rows=137350 width=20) (actual time=153.685..2077.114 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=46628
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7757.95 rows=549401 width=0) (actual time=108.234..108.234 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.167..0.167 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 17.319 ms
 Execution Time: 21079.994 ms
(27 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=710612.25..710612.76 rows=1 width=24) (actual time=2079.846..2119.752 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=710612.25..710614.79 rows=5 width=24) (actual time=2079.844..2119.750 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=710612.25..710614.64 rows=20 width=24) (actual time=2079.832..2119.740 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=709612.19..709612.20 rows=5 width=24) (actual time=2070.374..2070.376 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=709612.08..709612.13 rows=5 width=24) (actual time=2070.342..2070.343 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=7895.86..708925.63 rows=137290 width=16) (actual time=149.313..2017.926 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=7895.30..271223.55 rows=137350 width=20) (actual time=149.250..506.358 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=47941
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7757.95 rows=549401 width=0) (actual time=101.302..101.303 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 1.338 ms
 Execution Time: 2120.119 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=767874.43..767874.43 rows=1 width=58) (actual time=22265.415..22317.522 rows=1 loops=1)
   ->  Sort  (cost=767874.43..767874.49 rows=25 width=58) (actual time=22265.414..22317.520 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=767635.09..767874.30 rows=25 width=58) (actual time=22259.678..22317.503 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=767635.09..767873.24 rows=100 width=58) (actual time=22258.290..22317.472 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=766635.03..766861.27 rows=25 width=58) (actual time=22246.239..22252.109 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=766635.03..766680.22 rows=18074 width=38) (actual time=22244.973..22245.675 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1492kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1520kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1529kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1494kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1515kB
                                 ->  Parallel Hash Join  (cost=78966.44..765357.05 rows=18074 width=38) (actual time=638.871..22229.881 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75274.84..759293.01 rows=451894 width=50) (actual time=620.088..22064.177 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=75274.28..347420.78 rows=113024 width=38) (actual time=617.400..2746.056 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32480.73..302225.49 rows=565117 width=8) (actual time=346.193..2255.086 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52025
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31915.62 rows=2260468 width=0) (actual time=285.457..285.457 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41856.01..41856.01 rows=75003 width=38) (actual time=270.567..270.570 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41856.01 rows=75003 width=38) (actual time=1.893..242.749 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8) (actual time=1.054..203.952 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.825..0.827 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.737..0.744 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.297..0.299 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.432..0.433 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.216..0.218 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.200..0.211 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=15.717..15.718 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.080..9.981 rows=20000 loops=5)
 Planning Time: 27.105 ms
 Execution Time: 22318.731 ms
(50 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=767874.43..767874.43 rows=1 width=58) (actual time=2686.821..2735.681 rows=1 loops=1)
   ->  Sort  (cost=767874.43..767874.49 rows=25 width=58) (actual time=2686.819..2735.678 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=767635.09..767874.30 rows=25 width=58) (actual time=2677.461..2735.663 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=767635.09..767873.24 rows=100 width=58) (actual time=2673.519..2735.623 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=766635.03..766861.27 rows=25 width=58) (actual time=2664.413..2669.638 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=766635.03..766680.22 rows=18074 width=38) (actual time=2663.149..2663.878 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1483kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1586kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1476kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1503kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1503kB
                                 ->  Parallel Hash Join  (cost=78966.44..765357.05 rows=18074 width=38) (actual time=496.222..2654.016 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75274.84..759293.01 rows=451894 width=50) (actual time=478.342..2524.220 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=75274.28..347420.78 rows=113024 width=38) (actual time=478.294..1067.965 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32480.73..302225.49 rows=565117 width=8) (actual time=320.454..739.086 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=51094
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31915.62 rows=2260468 width=0) (actual time=261.052..261.052 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41856.01..41856.01 rows=75003 width=38) (actual time=157.263..157.266 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41856.01 rows=75003 width=38) (actual time=0.948..126.328 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8) (actual time=0.035..85.649 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.902..0.904 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.896..0.902 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.673..0.675 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.216..0.216 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.014..0.015 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=16.579..16.580 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5088kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.027..5.055 rows=20000 loops=5)
 Planning Time: 3.985 ms
 Execution Time: 2735.775 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1279020.18..1279020.19 rows=1 width=32) (actual time=10644.000..10688.626 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1279020.18..1279020.19 rows=1 width=32) (actual time=10643.999..10688.624 rows=1 loops=1)
         ->  Gather  (cost=1279019.75..1279020.16 rows=4 width=32) (actual time=10639.301..10688.601 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1278019.75..1278019.76 rows=1 width=32) (actual time=10630.851..10630.852 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=212251.95..1276548.05 rows=294339 width=12) (actual time=1372.266..10486.097 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=80504 lossy=54013
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211957.61 rows=1177355 width=0) (actual time=1280.797..1280.798 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.969 ms
 Execution Time: 10689.643 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1279020.18..1279020.19 rows=1 width=32) (actual time=3168.719..3210.179 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1279020.18..1279020.19 rows=1 width=32) (actual time=3168.718..3210.177 rows=1 loops=1)
         ->  Gather  (cost=1279019.75..1279020.16 rows=4 width=32) (actual time=3168.699..3210.161 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1278019.75..1278019.76 rows=1 width=32) (actual time=3161.996..3161.997 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=212251.95..1276548.05 rows=294339 width=12) (actual time=1232.095..3063.657 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=80668 lossy=54393
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211957.61 rows=1177355 width=0) (actual time=1137.880..1137.880 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.620 ms
 Execution Time: 3210.228 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1452002.06..1452002.65 rows=1 width=92) (actual time=14927.946..14970.833 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1452002.06..1457900.71 rows=10032 width=92) (actual time=14927.945..14970.831 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1452002.06..1457223.55 rows=40128 width=92) (actual time=14922.527..14970.816 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1451002.00..1451443.86 rows=10032 width=92) (actual time=14910.966..14915.508 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1451002.00..1451040.04 rows=15217 width=72) (actual time=14908.078..14909.148 rows=10401 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2006kB
                           Worker 0:  Sort Method: quicksort  Memory: 1998kB
                           Worker 1:  Sort Method: quicksort  Memory: 2018kB
                           Worker 2:  Sort Method: quicksort  Memory: 1992kB
                           Worker 3:  Sort Method: quicksort  Memory: 2036kB
                           ->  Parallel Hash Join  (cost=44275.49..1449944.92 rows=15217 width=72) (actual time=259.710..14895.339 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41225.44..1445103.47 rows=365648 width=46) (actual time=241.751..14771.983 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.88..354808.79 rows=300020 width=30) (actual time=240.193..2228.454 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298770.45 rows=3750245 width=8) (actual time=0.473..1102.337 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.86..40849.86 rows=30001 width=30) (actual time=239.471..239.473 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                   ->  Hash Join  (cost=1.40..40849.86 rows=30001 width=30) (actual time=0.668..229.830 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8) (actual time=0.644..196.940 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.016 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.051..0.052 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=12.941..12.942 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.244..12.401 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.161..10.260 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.073..0.074 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.066..0.069 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 21.257 ms
 Execution Time: 14971.843 ms
(49 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1452002.06..1452002.65 rows=1 width=92) (actual time=4124.145..4163.719 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1452002.06..1457900.71 rows=10032 width=92) (actual time=4124.144..4163.717 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1452002.06..1457223.55 rows=40128 width=92) (actual time=4122.557..4163.705 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1451002.00..1451443.86 rows=10032 width=92) (actual time=4111.244..4115.416 rows=3 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1451002.00..1451040.04 rows=15217 width=72) (actual time=4109.559..4110.215 rows=9851 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1973kB
                           Worker 0:  Sort Method: quicksort  Memory: 1987kB
                           Worker 1:  Sort Method: quicksort  Memory: 1995kB
                           Worker 2:  Sort Method: quicksort  Memory: 2065kB
                           Worker 3:  Sort Method: quicksort  Memory: 2030kB
                           ->  Parallel Hash Join  (cost=44275.49..1449944.92 rows=15217 width=72) (actual time=144.263..4099.161 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41225.44..1445103.47 rows=365648 width=46) (actual time=134.012..3994.484 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.88..354808.79 rows=300020 width=30) (actual time=133.946..1300.850 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298770.45 rows=3750245 width=8) (actual time=0.031..364.926 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.86..40849.86 rows=30001 width=30) (actual time=133.558..133.560 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                   ->  Hash Join  (cost=1.40..40849.86 rows=30001 width=30) (actual time=0.049..121.153 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8) (actual time=0.027..85.550 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.010..0.011 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=9.803..9.804 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.056..9.305 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.024..6.490 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.027..0.027 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.020..0.022 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 3.098 ms
 Execution Time: 4163.820 ms
(49 rows)

query 8 run 1
SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=594738.27..594738.57 rows=1 width=40) (actual time=30974.715..31018.246 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=594738.27..595465.48 rows=2406 width=40) (actual time=30974.714..31018.244 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=594738.27..595381.27 rows=2406 width=72) (actual time=30972.088..31018.231 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=593738.26..594110.58 rows=2406 width=72) (actual time=30967.032..30970.057 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=593738.26..593774.28 rows=14409 width=46) (actual time=30964.418..30965.271 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1313kB
                           Worker 0:  Sort Method: quicksort  Memory: 1318kB
                           ->  Hash Join  (cost=589560.86..592742.98 rows=14409 width=46) (actual time=30932.046..30962.558 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=589559.30..592625.14 rows=14409 width=20) (actual time=30931.084..30958.528 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.188..17.389 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=589482.75..589482.75 rows=6124 width=20) (actual time=30930.435..30930.821 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=548126.66..589482.75 rows=6124 width=20) (actual time=30559.327..30926.712 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=548124.16..589304.18 rows=30619 width=24) (actual time=30559.191..30920.606 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8) (actual time=1.089..198.010 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=547741.42..547741.42 rows=30619 width=24) (actual time=30557.632..30558.015 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8256kB
                                                               ->  Parallel Hash Join  (cost=225812.97..547741.42 rows=30619 width=24) (actual time=28235.452..30529.541 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317521.68 rows=1154725 width=12) (actual time=0.920..1809.307 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=224569.93..224569.93 rows=99443 width=20) (actual time=28232.488..28232.489 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..224569.93 rows=99443 width=20) (actual time=1.057..28017.324 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47230.96 rows=3316 width=4) (actual time=0.590..315.000 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..53.14 rows=34 width=24) (actual time=0.319..4.240 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.111..0.112 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.106..0.111 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.100..0.100 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.098..0.099 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.093..0.094 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.084..0.086 rows=25 loops=2)
 Planning Time: 27.468 ms
 Execution Time: 31019.249 ms
(54 rows)

SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=594738.27..594738.57 rows=1 width=40) (actual time=2912.445..2957.829 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=594738.27..595465.48 rows=2406 width=40) (actual time=2912.443..2957.827 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=594738.27..595381.27 rows=2406 width=72) (actual time=2909.780..2957.814 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=593738.26..594110.58 rows=2406 width=72) (actual time=2907.410..2910.457 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=593738.26..593774.28 rows=14409 width=46) (actual time=2904.784..2905.629 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1300kB
                           Worker 0:  Sort Method: quicksort  Memory: 1332kB
                           ->  Hash Join  (cost=589560.86..592742.98 rows=14409 width=46) (actual time=2883.693..2902.956 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=589559.30..592625.14 rows=14409 width=20) (actual time=2883.641..2899.910 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.022..6.611 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=589482.75..589482.75 rows=6124 width=20) (actual time=2883.196..2883.578 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=548126.66..589482.75 rows=6124 width=20) (actual time=2624.216..2879.746 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=548124.16..589304.18 rows=30619 width=24) (actual time=2624.171..2874.065 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=8) (actual time=0.026..97.364 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=547741.42..547741.42 rows=30619 width=24) (actual time=2623.668..2624.047 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8256kB
                                                               ->  Parallel Hash Join  (cost=225812.97..547741.42 rows=30619 width=24) (actual time=1214.525..2600.274 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317521.68 rows=1154725 width=12) (actual time=0.029..940.780 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=224569.93..224569.93 rows=99443 width=20) (actual time=1213.252..1213.254 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..224569.93 rows=99443 width=20) (actual time=0.110..1133.786 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47230.96 rows=3316 width=4) (actual time=0.058..178.545 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..53.14 rows=34 width=24) (actual time=0.012..0.141 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.020..0.021 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.015..0.020 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.022 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=2)
 Planning Time: 4.067 ms
 Execution Time: 2957.930 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1101143.82..1101144.36 rows=1 width=66) (actual time=33241.696..33361.240 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1101143.82..1133410.60 rows=60150 width=66) (actual time=33241.695..33361.238 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1101143.82..1129951.98 rows=240600 width=66) (actual time=33241.682..33361.225 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1100143.76..1100294.14 rows=60150 width=66) (actual time=33228.706..33228.720 rows=140 loops=5)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     Worker 3:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=1094316.35..1095368.97 rows=60150 width=66) (actual time=33228.005..33228.514 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=715174.50..1075762.74 rows=1060206 width=57) (actual time=31369.477..32566.278 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=715172.94..1067205.32 rows=1060206 width=31) (actual time=31369.179..32305.367 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298770.45 rows=3750245 width=8) (actual time=0.768..1572.036 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=694672.36..694672.36 rows=1060206 width=31) (actual time=29271.179..29271.183 rows=649638 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 18464kB
                                             ->  Nested Loop  (cost=3545.53..694672.36 rows=1060206 width=31) (actual time=20.358..28886.856 rows=649638 loops=5)
                                                   Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                                   ->  Parallel Hash Join  (cost=3544.97..189901.69 rows=141403 width=26) (actual time=19.951..2040.391 rows=86650 loops=5)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.43..185985.96 rows=141403 width=18) (actual time=1.994..1947.406 rows=86650 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47230.96 rows=35353 width=4) (actual time=0.947..216.506 rows=21662 loops=5)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 378338
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14) (actual time=0.075..0.078 rows=4 loops=108312)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.699..17.699 rows=20000 loops=5)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.074..11.880 rows=20000 loops=5)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.056..0.307 rows=7 loops=433248)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.075..0.075 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.065..0.069 rows=25 loops=5)
 Planning Time: 32.055 ms
 Execution Time: 33362.726 ms
(42 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1101143.82..1101144.36 rows=1 width=66) (actual time=19531.766..19699.942 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1101143.82..1133410.60 rows=60150 width=66) (actual time=19531.764..19699.940 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1101143.82..1129951.98 rows=240600 width=66) (actual time=19531.718..19699.926 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1100143.76..1100294.14 rows=60150 width=66) (actual time=19520.808..19520.820 rows=106 loops=5)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 49kB
                     Worker 0:  Sort Method: quicksort  Memory: 49kB
                     Worker 1:  Sort Method: quicksort  Memory: 49kB
                     Worker 2:  Sort Method: quicksort  Memory: 49kB
                     Worker 3:  Sort Method: quicksort  Memory: 49kB
                     ->  Partial HashAggregate  (cost=1094316.35..1095368.97 rows=60150 width=66) (actual time=19520.066..19520.612 rows=175 loops=5)
                           Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
                           ->  Hash Join  (cost=715174.50..1075762.74 rows=1060206 width=57) (actual time=17664.774..18849.859 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=715172.94..1067205.32 rows=1060206 width=31) (actual time=17664.667..18579.526 rows=649638 loops=5)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..298770.45 rows=3750245 width=8) (actual time=0.031..1212.127 rows=3000000 loops=5)
                                       ->  Parallel Hash  (cost=694672.36..694672.36 rows=1060206 width=31) (actual time=15889.290..15889.294 rows=649638 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 18464kB
                                             ->  Nested Loop  (cost=3545.53..694672.36 rows=1060206 width=31) (actual time=21.255..15538.043 rows=649638 loops=5)
                                                   Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                                   ->  Parallel Hash Join  (cost=3544.97..189901.69 rows=141403 width=26) (actual time=20.870..964.040 rows=86650 loops=5)
                                                         Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                         ->  Nested Loop  (cost=0.43..185985.96 rows=141403 width=18) (actual time=1.873..867.658 rows=86650 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47230.96 rows=35353 width=4) (actual time=0.426..166.035 rows=21662 loops=5)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 378338
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14) (actual time=0.029..0.031 rows=4 loops=108312)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=18.710..18.710 rows=20000 loops=5)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=1.134..10.557 rows=20000 loops=5)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.028..0.165 rows=7 loops=433248)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.073..0.073 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.062..0.067 rows=25 loops=5)
 Planning Time: 19.280 ms
 Execution Time: 19700.444 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=953663.67..953663.72 rows=20 width=202) (actual time=21231.223..21290.769 rows=20 loops=1)
   ->  Sort  (cost=953663.67..955097.51 rows=573534 width=202) (actual time=21231.222..21290.766 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=853240.88..938402.14 rows=573534 width=202) (actual time=20432.562..21157.444 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=853240.88..925497.60 rows=573536 width=202) (actual time=20432.552..20781.445 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=852240.82..856183.88 rows=143384 width=202) (actual time=20408.251..20609.821 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=852240.82..852599.28 rows=143384 width=182) (actual time=20408.217..20439.465 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 44432kB
                                 Worker 0:  Sort Method: external merge  Disk: 43320kB
                                 Worker 1:  Sort Method: external merge  Disk: 44984kB
                                 Worker 2:  Sort Method: external merge  Disk: 43352kB
                                 Worker 3:  Sort Method: external merge  Disk: 42440kB
                                 ->  Hash Join  (cost=796183.12..839960.32 rows=143384 width=182) (actual time=19894.171..20268.665 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=796181.56..839518.57 rows=143384 width=160) (actual time=19893.846..20212.885 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=148) (actual time=0.436..163.980 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=794389.26..794389.26 rows=143384 width=16) (actual time=19892.374..19892.376 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                                   ->  Nested Loop  (cost=8289.86..794389.26 rows=143384 width=16) (actual time=162.193..19733.494 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8289.29..271720.53 rows=144216 width=8) (actual time=158.734..2515.622 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=46682
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8145.08 rows=576864 width=0) (actual time=109.054..109.054 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.144..0.149 rows=2 loops=573160)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                               Rows Removed by Filter: 2
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.285..0.286 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.039..0.044 rows=25 loops=5)
 Planning Time: 20.093 ms
 Execution Time: 21298.011 ms
(40 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=953663.67..953663.72 rows=20 width=202) (actual time=3502.634..3544.993 rows=20 loops=1)
   ->  Sort  (cost=953663.67..955097.51 rows=573534 width=202) (actual time=3502.633..3544.990 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=853240.88..938402.14 rows=573534 width=202) (actual time=2711.867..3411.123 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=853240.88..925497.60 rows=573536 width=202) (actual time=2711.847..3036.387 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=852240.82..856183.88 rows=143384 width=202) (actual time=2690.916..2891.058 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=852240.82..852599.28 rows=143384 width=182) (actual time=2690.877..2720.416 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 43960kB
                                 Worker 0:  Sort Method: external merge  Disk: 50048kB
                                 Worker 1:  Sort Method: external merge  Disk: 42064kB
                                 Worker 2:  Sort Method: external merge  Disk: 42448kB
                                 Worker 3:  Sort Method: external merge  Disk: 40032kB
                                 ->  Hash Join  (cost=796183.12..839960.32 rows=143384 width=182) (actual time=2265.774..2545.326 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=796181.56..839518.57 rows=143384 width=160) (actual time=2265.517..2486.678 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=148) (actual time=0.026..64.290 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=794389.26..794389.26 rows=143384 width=16) (actual time=2263.451..2263.452 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85216kB
                                                   ->  Nested Loop  (cost=8289.86..794389.26 rows=143384 width=16) (actual time=154.148..2145.529 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8289.29..271720.53 rows=144216 width=8) (actual time=154.070..504.428 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=49902
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8145.08 rows=576864 width=0) (actual time=102.893..102.893 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.013..0.014 rows=2 loops=573160)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                               Rows Removed by Filter: 2
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.220..0.220 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.019 rows=25 loops=5)
 Planning Time: 2.373 ms
 Execution Time: 3551.128 ms
(40 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471046.53..471046.54 rows=1 width=36) (actual time=2118.497..2118.630 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207443.82..207443.84 rows=1 width=32) (actual time=447.826..447.904 rows=1 loops=1)
           ->  Gather  (cost=207443.39..207443.80 rows=4 width=32) (actual time=447.729..447.894 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206443.39..206443.40 rows=1 width=32) (actual time=445.015..445.017 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.58..205843.43 rows=79994 width=10) (actual time=4.235..420.675 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195220.48 rows=1999848 width=14) (actual time=0.293..207.172 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=3.885..3.887 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.556..3.400 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.540..2.981 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.348..0.348 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263602.70..263869.34 rows=106659 width=36) (actual time=2118.496..2118.551 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213358.05..263069.40 rows=106659 width=36) (actual time=2118.487..2118.543 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213358.05..253470.12 rows=319976 width=36) (actual time=1355.614..1467.190 rows=302507 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212357.99..214357.84 rows=79994 width=36) (actual time=1346.020..1404.737 rows=60501 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212357.99..212557.97 rows=79994 width=14) (actual time=1346.005..1349.428 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 6250kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4405kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4479kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4526kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4596kB
                                 ->  Hash Join  (cost=2323.58..205843.43 rows=79994 width=14) (actual time=36.508..1333.802 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195220.48 rows=1999848 width=18) (actual time=0.134..1095.105 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=36.344..36.346 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=1.070..35.221 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.127..0.130 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.940..34.433 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.713..0.713 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 14.352 ms
 Execution Time: 2119.923 ms
(56 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471046.53..471046.54 rows=1 width=36) (actual time=1210.994..1211.129 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207443.82..207443.84 rows=1 width=32) (actual time=453.312..453.393 rows=1 loops=1)
           ->  Gather  (cost=207443.39..207443.80 rows=4 width=32) (actual time=453.170..453.382 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206443.39..206443.40 rows=1 width=32) (actual time=449.903..449.905 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.58..205843.43 rows=79994 width=10) (actual time=4.192..425.555 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195220.48 rows=1999848 width=14) (actual time=0.027..209.213 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=4.099..4.101 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.570..3.607 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.553..3.189 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.365..0.365 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263602.70..263869.34 rows=106659 width=36) (actual time=1210.993..1211.046 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213358.05..263069.40 rows=106659 width=36) (actual time=1210.986..1211.039 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213358.05..253470.12 rows=319976 width=36) (actual time=450.873..552.810 rows=302504 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212357.99..214357.84 rows=79994 width=36) (actual time=444.839..503.272 rows=60501 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212357.99..212557.97 rows=79994 width=14) (actual time=444.826..448.258 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 4300kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4285kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4414kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6465kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6328kB
                                 ->  Hash Join  (cost=2323.58..205843.43 rows=79994 width=14) (actual time=4.461..432.810 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195220.48 rows=1999848 width=18) (actual time=0.030..210.741 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=4.398..4.399 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=1.006..3.843 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.989..3.412 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.342..0.342 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.031 ms
 Execution Time: 1211.210 ms
(56 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1715613.90..1715820.29 rows=1 width=27) (actual time=11663.150..11686.057 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1715613.90..1717058.63 rows=7 width=27) (actual time=11663.148..11686.055 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1715613.90..1717058.35 rows=28 width=27) (actual time=11642.259..11686.041 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1714613.84..1716054.95 rows=7 width=27) (actual time=11625.600..11638.759 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1714613.84..1714793.97 rows=72052 width=27) (actual time=11611.569..11616.556 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6378kB
                           Worker 0:  Sort Method: quicksort  Memory: 6422kB
                           Worker 1:  Sort Method: quicksort  Memory: 6413kB
                           Worker 2:  Sort Method: quicksort  Memory: 6416kB
                           Worker 3:  Sort Method: quicksort  Memory: 6371kB
                           ->  Nested Loop  (cost=0.43..1708800.42 rows=72052 width=27) (actual time=0.733..11564.343 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462516.28 rows=72052 width=15) (actual time=0.385..7541.342 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.063..0.063 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 16.298 ms
 Execution Time: 11687.036 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1715613.90..1715820.29 rows=1 width=27) (actual time=3914.569..3931.625 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1715613.90..1717058.63 rows=7 width=27) (actual time=3914.568..3931.623 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1715613.90..1717058.35 rows=28 width=27) (actual time=3900.395..3931.612 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1714613.84..1716054.95 rows=7 width=27) (actual time=3883.289..3895.732 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1714613.84..1714793.97 rows=72052 width=27) (actual time=3869.665..3873.936 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6428kB
                           Worker 0:  Sort Method: quicksort  Memory: 6172kB
                           Worker 1:  Sort Method: quicksort  Memory: 6124kB
                           Worker 2:  Sort Method: quicksort  Memory: 6632kB
                           Worker 3:  Sort Method: quicksort  Memory: 6644kB
                           ->  Nested Loop  (cost=0.43..1708800.42 rows=72052 width=27) (actual time=0.155..3840.026 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462516.28 rows=72052 width=15) (actual time=0.136..3517.887 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.782 ms
 Execution Time: 3931.695 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1686059.33..1686059.34 rows=1 width=16) (actual time=6197.920..6298.182 rows=1 loops=1)
   ->  Sort  (cost=1686059.33..1686059.83 rows=200 width=16) (actual time=6197.919..6298.179 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1686056.33..1686058.33 rows=200 width=16) (actual time=6197.899..6298.166 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860740.45..1663555.37 rows=1500064 width=12) (actual time=4715.984..6101.641 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860740.45..1618553.45 rows=6000256 width=12) (actual time=4715.978..5770.921 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=859740.39..902865.06 rows=1500064 width=12) (actual time=4691.715..5370.237 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859740.39..869115.07 rows=3749870 width=8) (actual time=4691.703..4976.780 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 54832kB
                                       Worker 0:  Sort Method: external merge  Disk: 51992kB
                                       Worker 1:  Sort Method: external merge  Disk: 53024kB
                                       Worker 2:  Sort Method: external merge  Disk: 47152kB
                                       Worker 3:  Sort Method: external merge  Disk: 61296kB
                                       ->  Parallel Hash Left Join  (cost=369667.87..417326.42 rows=3749870 width=8) (actual time=2653.949..3804.548 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17424.91 rows=375016 width=4) (actual time=0.272..73.535 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308146.07..308146.07 rows=3749870 width=8) (actual time=2445.766..2445.767 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=3749870 width=8) (actual time=0.102..1885.786 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 16.970 ms
 Execution Time: 6307.491 ms
(31 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1686059.33..1686059.34 rows=1 width=16) (actual time=5502.566..5606.395 rows=1 loops=1)
   ->  Sort  (cost=1686059.33..1686059.83 rows=200 width=16) (actual time=5502.565..5606.394 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1686056.33..1686058.33 rows=200 width=16) (actual time=5502.547..5606.381 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860740.45..1663555.37 rows=1500064 width=12) (actual time=4097.104..5410.090 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860740.45..1618553.45 rows=6000256 width=12) (actual time=4097.094..5080.780 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=859740.39..902865.06 rows=1500064 width=12) (actual time=4070.270..4753.775 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859740.39..869115.07 rows=3749870 width=8) (actual time=4070.258..4358.464 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 48440kB
                                       Worker 0:  Sort Method: external merge  Disk: 54888kB
                                       Worker 1:  Sort Method: external merge  Disk: 60240kB
                                       Worker 2:  Sort Method: external merge  Disk: 54944kB
                                       Worker 3:  Sort Method: external merge  Disk: 49776kB
                                       ->  Parallel Hash Left Join  (cost=369667.87..417326.42 rows=3749870 width=8) (actual time=2030.908..3192.294 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17424.91 rows=375016 width=4) (actual time=0.088..40.870 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308146.07..308146.07 rows=3749870 width=8) (actual time=1847.038..1847.039 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=3749870 width=8) (actual time=0.260..1254.729 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 0.633 ms
 Execution Time: 5613.430 ms
(31 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=871104.11..871104.13 rows=1 width=32) (actual time=5495.632..5539.822 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=871104.11..871104.13 rows=1 width=32) (actual time=5495.631..5539.820 rows=1 loops=1)
         ->  Gather  (cost=871103.66..871104.07 rows=4 width=64) (actual time=5489.668..5539.794 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=870103.66..870103.67 rows=1 width=64) (actual time=5482.371..5482.373 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65139.49..866582.09 rows=201232 width=33) (actual time=720.128..5330.495 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12908.56..813822.93 rows=201232 width=16) (actual time=296.779..4743.312 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=82795
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12707.33 rows=804926 width=0) (actual time=190.857..190.857 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.97..45980.97 rows=499997 width=25) (actual time=421.204..421.205 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.97 rows=499997 width=25) (actual time=0.907..287.947 rows=400000 loops=5)
 Planning Time: 16.746 ms
 Execution Time: 5540.943 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=871104.11..871104.13 rows=1 width=32) (actual time=1684.330..1729.207 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=871104.11..871104.13 rows=1 width=32) (actual time=1684.329..1729.205 rows=1 loops=1)
         ->  Gather  (cost=871103.66..871104.07 rows=4 width=64) (actual time=1679.476..1729.181 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=870103.66..870103.67 rows=1 width=64) (actual time=1673.945..1673.948 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=65139.49..866582.09 rows=201232 width=33) (actual time=557.247..1575.668 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12908.56..813822.93 rows=201232 width=16) (actual time=277.436..1170.600 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=76325
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12707.33 rows=804926 width=0) (actual time=172.887..172.887 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.97..45980.97 rows=499997 width=25) (actual time=277.214..277.215 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.97 rows=499997 width=25) (actual time=0.040..128.061 rows=400000 loops=5)
 Planning Time: 0.962 ms
 Execution Time: 1729.260 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2743361.06..2743472.78 rows=1 width=103) (actual time=13535.750..13593.714 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1390090.44..1390090.45 rows=1 width=32) (actual time=2909.451..2918.551 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1387616.14..1388853.29 rows=98972 width=36) (actual time=2864.487..2912.505 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1343821.03..1384646.98 rows=395888 width=36) (actual time=2500.134..2595.760 rows=398560 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1342821.03..1344058.18 rows=98972 width=36) (actual time=2496.012..2548.378 rows=99640 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37314.10..1337003.34 rows=581769 width=16) (actual time=446.792..2049.068 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109377 lossy=72701
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36732.34 rows=2327077 width=0) (actual time=350.547..350.547 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1353270.60..1408571.33 rows=495 width=103) (actual time=13535.749..13584.611 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1353270.31..1407352.43 rows=495 width=36) (actual time=13535.184..13584.045 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1353270.31..1400671.82 rows=395888 width=36) (actual time=10394.761..10507.577 rows=346318 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1352270.25..1352517.68 rows=98972 width=36) (actual time=10363.958..10371.279 rows=69847 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10797kB
                           Worker 0:  Sort Method: quicksort  Memory: 10797kB
                           Worker 1:  Sort Method: quicksort  Memory: 10805kB
                           Worker 2:  Sort Method: quicksort  Memory: 10807kB
                           Worker 3:  Sort Method: quicksort  Memory: 10801kB
                           ->  Partial HashAggregate  (cost=1342821.03..1344058.18 rows=98972 width=36) (actual time=10270.337..10335.683 rows=98927 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37314.10..1337003.34 rows=581769 width=16) (actual time=492.718..9781.163 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=79921 lossy=53023
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36732.34 rows=2327077 width=0) (actual time=400.033..400.034 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71) (actual time=0.558..0.559 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.561 ms
 Execution Time: 13595.836 ms
(43 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2743361.06..2743472.78 rows=1 width=103) (actual time=5938.144..5994.623 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1390090.44..1390090.45 rows=1 width=32) (actual time=2914.477..2923.508 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1387616.14..1388853.29 rows=98972 width=36) (actual time=2869.356..2917.404 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1343821.03..1384646.98 rows=395888 width=36) (actual time=2507.017..2602.772 rows=398582 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1342821.03..1344058.18 rows=98972 width=36) (actual time=2502.684..2554.352 rows=99646 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37314.10..1337003.34 rows=581769 width=16) (actual time=444.712..2050.195 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109268 lossy=73219
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36732.34 rows=2327077 width=0) (actual time=348.991..348.992 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1353270.60..1408571.33 rows=495 width=103) (actual time=5938.142..5985.590 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1353270.31..1407352.43 rows=495 width=36) (actual time=5938.102..5985.549 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1353270.31..1400671.82 rows=395888 width=36) (actual time=2793.015..2904.509 rows=346171 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1352270.25..1352517.68 rows=98972 width=36) (actual time=2764.529..2771.843 rows=69806 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10797kB
                           Worker 0:  Sort Method: quicksort  Memory: 10793kB
                           Worker 1:  Sort Method: quicksort  Memory: 10790kB
                           Worker 2:  Sort Method: quicksort  Memory: 10799kB
                           Worker 3:  Sort Method: quicksort  Memory: 10819kB
                           ->  Partial HashAggregate  (cost=1342821.03..1344058.18 rows=98972 width=36) (actual time=2670.984..2737.020 rows=98905 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37314.10..1337003.34 rows=581769 width=16) (actual time=453.633..2262.615 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=78994 lossy=52911
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36732.34 rows=2327077 width=0) (actual time=359.674..359.674 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71) (actual time=0.035..0.036 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.278 ms
 Execution Time: 5996.506 ms
(43 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295152.40..295152.41 rows=1 width=44) (actual time=4603.888..4607.106 rows=1 loops=1)
   ->  Sort  (cost=295152.40..295535.89 rows=153396 width=44) (actual time=4603.886..4607.104 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=285468.38..294385.42 rows=153396 width=44) (actual time=3973.569..4601.770 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=285468.38..286944.99 rows=590647 width=40) (actual time=3973.519..4319.039 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58875.33..218465.39 rows=590647 width=40) (actual time=392.624..1157.005 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57875.33..158400.69 rows=147662 width=40) (actual time=384.489..1136.476 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101372.02 rows=999924 width=8) (actual time=42.310..599.655 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.152..41.501 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53480.93..53480.93 rows=73836 width=40) (actual time=341.433..341.434 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.93 rows=73836 width=40) (actual time=0.273..315.936 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 17.911 ms
 Execution Time: 4616.624 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295152.40..295152.41 rows=1 width=44) (actual time=4331.317..4334.278 rows=1 loops=1)
   ->  Sort  (cost=295152.40..295535.89 rows=153396 width=44) (actual time=4331.315..4334.277 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=285468.38..294385.42 rows=153396 width=44) (actual time=3699.076..4328.955 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=285468.38..286944.99 rows=590647 width=40) (actual time=3699.025..4043.798 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58875.33..218465.39 rows=590647 width=40) (actual time=199.854..830.354 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57875.33..158400.69 rows=147662 width=40) (actual time=187.967..807.900 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101372.02 rows=999924 width=8) (actual time=26.214..444.369 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.084..26.147 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53480.93..53480.93 rows=73836 width=40) (actual time=160.793..160.793 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.93 rows=73836 width=40) (actual time=0.013..131.140 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 0.769 ms
 Execution Time: 4342.283 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4400823.36..4400823.37 rows=1 width=32) (actual time=22081.320..22115.671 rows=1 loops=1)
   ->  Aggregate  (cost=4400823.36..4400823.37 rows=1 width=32) (actual time=22081.319..22115.670 rows=1 loops=1)
         ->  Merge Join  (cost=3228994.07..4400778.27 rows=18036 width=8) (actual time=10382.909..22114.710 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3227993.02..4275317.93 rows=1750889 width=36) (actual time=10374.152..21891.740 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3227993.02..4196527.93 rows=7003556 width=36) (actual time=10374.132..16593.947 rows=9971886 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3226992.96..3361336.83 rows=1750889 width=36) (actual time=10328.344..14900.163 rows=1994888 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3226992.96..3264478.88 rows=14994368 width=9) (actual time=10328.323..12116.768 rows=11996314 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 213416kB
                                       Worker 0:  Sort Method: external merge  Disk: 225120kB
                                       Worker 1:  Sort Method: external merge  Disk: 231096kB
                                       Worker 2:  Sort Method: external merge  Disk: 223752kB
                                       Worker 3:  Sort Method: external merge  Disk: 222464kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275086.68 rows=14994368 width=9) (actual time=0.344..5757.069 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..102743.35 rows=61807 width=21) (actual time=5.130..51.444 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..102588.83 rows=61807 width=21) (actual time=5.126..44.254 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..94226.96 rows=15452 width=21) (actual time=1.850..670.088 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.32 rows=515 width=4) (actual time=1.253..196.864 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..53.09 rows=34 width=17) (actual time=0.666..0.937 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 15.439 ms
 Execution Time: 22144.987 ms
(33 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4400823.36..4400823.37 rows=1 width=32) (actual time=19411.240..19453.602 rows=1 loops=1)
   ->  Aggregate  (cost=4400823.36..4400823.37 rows=1 width=32) (actual time=19411.239..19453.600 rows=1 loops=1)
         ->  Merge Join  (cost=3228994.07..4400778.27 rows=18036 width=8) (actual time=7524.134..19452.797 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3227993.02..4275317.93 rows=1750889 width=36) (actual time=7514.092..19249.375 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3227993.02..4196527.93 rows=7003556 width=36) (actual time=7514.071..13894.825 rows=9971878 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3226992.96..3361336.83 rows=1750889 width=36) (actual time=7457.660..11931.356 rows=1994901 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3226992.96..3264478.88 rows=14994368 width=9) (actual time=7457.643..9207.120 rows=11996381 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 225192kB
                                       Worker 0:  Sort Method: external merge  Disk: 219632kB
                                       Worker 1:  Sort Method: external merge  Disk: 232024kB
                                       Worker 2:  Sort Method: external merge  Disk: 223752kB
                                       Worker 3:  Sort Method: external merge  Disk: 215248kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275086.68 rows=14994368 width=9) (actual time=0.037..2205.985 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..102743.35 rows=61807 width=21) (actual time=6.338..30.231 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..102588.83 rows=61807 width=21) (actual time=6.333..23.222 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..94226.96 rows=15452 width=21) (actual time=0.186..141.363 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.32 rows=515 width=4) (actual time=0.164..119.893 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..53.09 rows=34 width=17) (actual time=0.005..0.037 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.780 ms
 Execution Time: 19483.508 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9253597.52..9253597.77 rows=100 width=71) (actual time=37698.374..38038.046 rows=99 loops=1)
   ->  Sort  (cost=9253597.52..9303556.72 rows=19983679 width=71) (actual time=37698.373..38038.038 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5547545.75..8489835.68 rows=19983679 width=71) (actual time=37698.146..38037.948 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547545.75..8040202.89 rows=19983680 width=71) (actual time=37698.134..38037.857 rows=99 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5546545.69..5658953.89 rows=4995920 width=71) (actual time=37687.392..37687.442 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546545.69..5559035.49 rows=4995920 width=44) (actual time=37687.378..37687.389 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 32kB
                                 Worker 0:  Sort Method: quicksort  Memory: 34kB
                                 Worker 1:  Sort Method: quicksort  Memory: 34kB
                                 Worker 2:  Sort Method: quicksort  Memory: 38kB
                                 Worker 3:  Sort Method: quicksort  Memory: 38kB
                                 ->  Parallel Hash Join  (cost=3390675.81..4891894.17 rows=4995920 width=44) (actual time=36476.101..37687.290 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275086.68 rows=14994368 width=9) (actual time=0.020..2143.519 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3364073.67..3364073.67 rows=1249531 width=43) (actual time=32173.102..32173.105 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=44385.86..3364073.67 rows=1249531 width=43) (actual time=2333.610..32167.894 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316408.78 rows=1249531 width=24) (actual time=2046.779..31880.272 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435472.79 rows=3750245 width=20) (actual time=0.577..1537.202 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796588.53 rows=4998123 width=4) (actual time=725.848..30139.639 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271785.65 rows=59977472 width=9) (actual time=0.630..13556.221 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39697.16..39697.16 rows=375016 width=23) (actual time=284.870..284.871 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98624kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=23) (actual time=0.735..181.211 rows=300000 loops=5)
 Planning Time: 19.258 ms
 Execution Time: 38038.380 ms
(38 rows)

SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9253597.52..9253597.77 rows=100 width=71) (actual time=36577.527..36905.781 rows=99 loops=1)
   ->  Sort  (cost=9253597.52..9303556.72 rows=19983679 width=71) (actual time=36577.526..36905.772 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5547545.75..8489835.68 rows=19983679 width=71) (actual time=36577.311..36905.682 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547545.75..8040202.89 rows=19983680 width=71) (actual time=36577.304..36905.596 rows=100 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5546545.69..5658953.89 rows=4995920 width=71) (actual time=36568.927..36568.976 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546545.69..5559035.49 rows=4995920 width=44) (actual time=36568.913..36568.923 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 31kB
                                 Worker 0:  Sort Method: quicksort  Memory: 35kB
                                 Worker 1:  Sort Method: quicksort  Memory: 37kB
                                 Worker 2:  Sort Method: quicksort  Memory: 39kB
                                 Worker 3:  Sort Method: quicksort  Memory: 35kB
                                 ->  Parallel Hash Join  (cost=3390675.81..4891894.17 rows=4995920 width=44) (actual time=35362.253..36568.812 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275086.68 rows=14994368 width=9) (actual time=0.015..2341.729 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3364073.67..3364073.67 rows=1249531 width=43) (actual time=30864.431..30864.434 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=44385.86..3364073.67 rows=1249531 width=43) (actual time=1963.252..30792.667 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316408.78 rows=1249531 width=24) (actual time=1623.675..30452.338 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435472.79 rows=3750245 width=20) (actual time=0.517..899.870 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796588.53 rows=4998123 width=4) (actual time=666.257..29342.188 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271785.65 rows=59977472 width=9) (actual time=0.367..12128.086 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39697.16..39697.16 rows=375016 width=23) (actual time=337.455..337.455 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98688kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.16 rows=375016 width=23) (actual time=0.461..222.934 rows=300000 loops=5)
 Planning Time: 13.535 ms
 Execution Time: 36905.874 ms
(38 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=132588.62..132588.63 rows=1 width=32) (actual time=5152.913..5165.377 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=132588.62..132588.63 rows=1 width=32) (actual time=5152.912..5165.374 rows=1 loops=1)
         ->  Gather  (cost=132588.19..132588.60 rows=4 width=32) (actual time=5139.652..5165.350 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=131588.19..131588.20 rows=1 width=32) (actual time=5135.132..5135.133 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..131586.04 rows=286 width=12) (actual time=44.020..5134.502 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.87 rows=1255 width=30) (actual time=0.499..187.442 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..55.25 rows=1 width=21) (actual time=4.665..5.172 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 17.007 ms
 Execution Time: 5166.724 ms
(16 rows)

SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132588.62..132588.63 rows=1 width=32) (actual time=220.950..244.950 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=132588.62..132588.63 rows=1 width=32) (actual time=220.949..244.948 rows=1 loops=1)
         ->  Gather  (cost=132588.19..132588.60 rows=4 width=32) (actual time=217.328..244.935 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=131588.19..131588.20 rows=1 width=32) (actual time=212.766..212.767 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..131586.04 rows=286 width=12) (actual time=0.722..212.580 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.87 rows=1255 width=30) (actual time=0.122..134.275 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..55.25 rows=1 width=21) (actual time=0.074..0.081 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.967 ms
 Execution Time: 245.007 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3102274.45..3102274.46 rows=1 width=51) (actual time=34609.034..34609.176 rows=1 loops=1)
   ->  Sort  (cost=3102274.45..3102274.46 rows=1 width=51) (actual time=34609.033..34609.174 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1618430.33..3102274.44 rows=1 width=51) (actual time=10441.117..34607.170 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.460..34.249 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.176..0.179 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.280..26.565 rows=100000 loops=1)
               ->  Materialize  (cost=1618430.33..3097622.14 rows=3 width=8) (actual time=2.120..5.978 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1618430.33..3097622.12 rows=3 width=8) (actual time=8679.815..18015.282 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1617429.41..2921322.45 rows=4849201 width=40) (actual time=8674.584..17565.985 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1617429.41..2757208.15 rows=9137628 width=40) (actual time=8674.574..11959.420 rows=8159814 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1616429.35..1667828.51 rows=2284407 width=40) (actual time=8581.403..10026.048 rows=1632053 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1616429.35..1622140.37 rows=2284407 width=13) (actual time=8581.382..8828.672 rows=1824717 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 41224kB
                                                   Worker 0:  Sort Method: external merge  Disk: 42248kB
                                                   Worker 1:  Sort Method: external merge  Disk: 40864kB
                                                   Worker 2:  Sort Method: external merge  Disk: 40480kB
                                                   Worker 3:  Sort Method: external merge  Disk: 40568kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350058.52 rows=2284407 width=13) (actual time=0.309..7796.312 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95406.90 rows=80802 width=16) (actual time=4.552..65.984 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95204.89 rows=80802 width=16) (actual time=4.547..45.635 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84580.54 rows=20200 width=16) (actual time=1.028..1314.149 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.33 rows=5050 width=4) (actual time=0.660..197.986 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.190..0.204 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 20.092 ms
 Execution Time: 34614.526 ms
(48 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3102274.45..3102274.46 rows=1 width=51) (actual time=29200.001..29200.157 rows=1 loops=1)
   ->  Sort  (cost=3102274.45..3102274.46 rows=1 width=51) (actual time=29200.000..29200.155 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1618430.33..3102274.44 rows=1 width=51) (actual time=5103.800..29198.374 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.016..17.780 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.005..6.557 rows=100000 loops=1)
               ->  Materialize  (cost=1618430.33..3097622.14 rows=3 width=8) (actual time=0.822..4.650 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1618430.33..3097622.12 rows=3 width=8) (actual time=3366.478..12616.243 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1617429.41..2921322.45 rows=4849201 width=40) (actual time=3362.584..12194.496 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1617429.41..2757208.15 rows=9137628 width=40) (actual time=3362.574..6641.419 rows=8159460 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1616429.35..1667828.51 rows=2284407 width=40) (actual time=3296.109..4738.777 rows=1631979 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1616429.35..1622140.37 rows=2284407 width=13) (actual time=3296.091..3543.027 rows=1824716 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 42616kB
                                                   Worker 0:  Sort Method: external merge  Disk: 41552kB
                                                   Worker 1:  Sort Method: external merge  Disk: 39784kB
                                                   Worker 2:  Sort Method: external merge  Disk: 40528kB
                                                   Worker 3:  Sort Method: external merge  Disk: 40920kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350058.52 rows=2284407 width=13) (actual time=0.040..2336.124 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95406.90 rows=80802 width=16) (actual time=3.283..39.675 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95204.89 rows=80802 width=16) (actual time=3.278..19.835 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84580.54 rows=20200 width=16) (actual time=0.058..120.249 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.33 rows=5050 width=4) (actual time=0.040..95.798 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.003..0.004 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.628 ms
 Execution Time: 29206.181 ms
(48 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1965232.59..1965232.59 rows=1 width=34) (actual time=13190.487..13230.576 rows=100 loops=1)
   ->  Sort  (cost=1965232.59..1965232.59 rows=1 width=34) (actual time=13190.486..13230.568 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1965232.05..1965232.58 rows=1 width=34) (actual time=13173.696..13229.203 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1965232.05..1965232.55 rows=4 width=34) (actual time=13173.687..13226.354 rows=17104 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1964231.99..1964232.01 rows=1 width=34) (actual time=13153.815..13156.131 rows=3421 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1964231.99..1964232.00 rows=1 width=26) (actual time=13153.809..13154.359 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 822kB
                                 Worker 0:  Sort Method: quicksort  Memory: 822kB
                                 Worker 1:  Sort Method: quicksort  Memory: 805kB
                                 Worker 2:  Sort Method: quicksort  Memory: 803kB
                                 Worker 3:  Sort Method: quicksort  Memory: 779kB
                                 ->  Nested Loop Semi Join  (cost=1338012.38..1964231.98 rows=1 width=26) (actual time=8600.561..13108.282 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1338011.81..1964228.34 rows=1 width=38) (actual time=8599.639..13065.950 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1338011.25..1653212.71 rows=96857 width=38) (actual time=8598.579..10308.040 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=1816869 width=4) (actual time=0.595..1194.360 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335512.18..1335512.18 rows=199925 width=34) (actual time=8596.778..8596.781 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335512.18 rows=199925 width=34) (actual time=16.314..8420.251 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312572.60 rows=4998123 width=8) (actual time=1.568..7569.175 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=14.549..14.551 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.135..13.907 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.076..11.850 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.892 ms
 Execution Time: 13231.894 ms
(52 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1965232.59..1965232.59 rows=1 width=34) (actual time=6641.860..6682.112 rows=100 loops=1)
   ->  Sort  (cost=1965232.59..1965232.59 rows=1 width=34) (actual time=6641.859..6682.104 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1965232.05..1965232.58 rows=1 width=34) (actual time=6620.481..6680.490 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1965232.05..1965232.55 rows=4 width=34) (actual time=6620.474..6677.657 rows=17121 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1964231.99..1964232.01 rows=1 width=34) (actual time=6600.326..6602.456 rows=3424 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1964231.99..1964232.00 rows=1 width=26) (actual time=6600.319..6600.747 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 1025kB
                                 Worker 0:  Sort Method: quicksort  Memory: 797kB
                                 Worker 1:  Sort Method: quicksort  Memory: 803kB
                                 Worker 2:  Sort Method: quicksort  Memory: 755kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1035kB
                                 ->  Nested Loop Semi Join  (cost=1338012.38..1964231.98 rows=1 width=26) (actual time=3817.242..6555.111 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1338011.81..1964228.34 rows=1 width=38) (actual time=3817.090..6515.931 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1338011.25..1653212.71 rows=96857 width=38) (actual time=3816.999..4817.387 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308146.07 rows=1816869 width=4) (actual time=0.055..511.384 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335512.18..1335512.18 rows=199925 width=34) (actual time=3815.658..3815.661 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335512.18 rows=199925 width=34) (actual time=11.720..3628.026 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312572.60 rows=4998123 width=8) (actual time=0.595..2720.316 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=10.497..10.499 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.055..10.209 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.026..8.073 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.709 ms
 Execution Time: 6682.228 ms
(52 rows)

query 22 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96289.70..96289.85 rows=1 width=72) (actual time=847.069..858.250 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.42..46821.43 rows=1 width=32) (actual time=352.811..352.899 rows=1 loops=1)
           ->  Gather  (cost=46820.98..46821.39 rows=4 width=32) (actual time=349.263..352.874 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.98..45820.99 rows=1 width=32) (actual time=342.093..342.094 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.17 rows=11924 width=6) (actual time=0.108..334.052 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49468.27..50721.32 rows=8164 width=72) (actual time=847.067..858.160 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49468.27..50496.81 rows=8164 width=72) (actual time=846.591..858.148 rows=6 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=48468.22..48524.34 rows=2041 width=72) (actual time=487.892..489.740 rows=5 loops=5)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48468.22..48473.32 rows=2041 width=38) (actual time=487.497..487.906 rows=9655 loops=5)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1004kB
                           Worker 0:  Sort Method: quicksort  Memory: 1002kB
                           Worker 1:  Sort Method: quicksort  Memory: 1011kB
                           Worker 2:  Sort Method: quicksort  Memory: 947kB
                           Worker 3:  Sort Method: quicksort  Memory: 935kB
                           ->  Nested Loop Anti Join  (cost=0.43..48356.01 rows=2041 width=38) (actual time=0.519..480.442 rows=12702 loops=5)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.17 rows=4375 width=26) (actual time=0.016..146.103 rows=38226 loops=5)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 261774
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.20 rows=19 width=4) (actual time=0.008..0.008 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 15.006 ms
 Execution Time: 859.045 ms
(34 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96289.70..96289.85 rows=1 width=72) (actual time=519.411..532.802 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.42..46821.43 rows=1 width=32) (actual time=222.261..222.363 rows=1 loops=1)
           ->  Gather  (cost=46820.98..46821.39 rows=4 width=32) (actual time=222.247..222.351 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.98..45820.99 rows=1 width=32) (actual time=213.537..213.538 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.17 rows=11924 width=6) (actual time=0.018..204.608 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49468.27..50721.32 rows=8164 width=72) (actual time=519.410..532.698 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49468.27..50496.81 rows=8164 width=72) (actual time=518.915..532.689 rows=5 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=48468.22..48524.34 rows=2041 width=72) (actual time=292.031..292.876 rows=3 loops=4)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48468.22..48473.32 rows=2041 width=38) (actual time=291.546..291.796 rows=6195 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1151kB
                           Worker 0:  Sort Method: quicksort  Memory: 1123kB
                           Worker 1:  Sort Method: quicksort  Memory: 1121kB
                           Worker 2:  Sort Method: quicksort  Memory: 1120kB
                           ->  Nested Loop Anti Join  (cost=0.43..48356.01 rows=2041 width=38) (actual time=0.065..286.052 rows=15877 loops=4)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.17 rows=4375 width=26) (actual time=0.020..156.783 rows=47782 loops=4)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 327218
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.20 rows=19 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.693 ms
 Execution Time: 532.868 ms
(33 rows)

