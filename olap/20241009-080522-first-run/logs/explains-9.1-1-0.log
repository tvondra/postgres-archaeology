query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=424851.44..424851.44 rows=1 width=25)
   ->  Sort  (cost=424851.44..424851.45 rows=6 width=25)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=424851.30..424851.41 rows=6 width=25)
               ->  Seq Scan on lineitem  (cost=0.00..187576.46 rows=5931871 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=424851.44..424851.44 rows=1 width=25)
   ->  Sort  (cost=424851.44..424851.45 rows=6 width=25)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=424851.30..424851.41 rows=6 width=25)
               ->  Seq Scan on lineitem  (cost=0.00..187576.46 rows=5931871 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=424851.44..424851.44 rows=1 width=25)
   ->  Sort  (cost=424851.44..424851.45 rows=6 width=25)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=424851.30..424851.41 rows=6 width=25)
               ->  Seq Scan on lineitem  (cost=0.00..187576.46 rows=5931871 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66859.59..66859.60 rows=1 width=192)
   ->  Sort  (cost=66859.59..66859.60 rows=1 width=192)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45330.85..66859.58 rows=1 width=192)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8926.26 rows=789 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45330.85..45729.85 rows=159601 width=172)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=408.03..31538.04 rows=159601 width=172)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166)
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=6)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=6)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=10)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=10)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
(38 rows)

query 2 run 2
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66859.59..66859.60 rows=1 width=192)
   ->  Sort  (cost=66859.59..66859.60 rows=1 width=192)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45330.85..66859.58 rows=1 width=192)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8926.26 rows=789 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45330.85..45729.85 rows=159601 width=172)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=408.03..31538.04 rows=159601 width=172)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166)
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=6)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=6)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=10)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=10)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
(38 rows)

query 2 run 3
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66859.59..66859.60 rows=1 width=192)
   ->  Sort  (cost=66859.59..66859.60 rows=1 width=192)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45330.85..66859.58 rows=1 width=192)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8926.26 rows=789 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45330.85..45729.85 rows=159601 width=172)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=408.03..31538.04 rows=159601 width=172)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166)
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=6)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=6)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=10)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=10)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
(38 rows)

query 3 run 1
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308615.55..308615.57 rows=10 width=24)
   ->  Sort  (cost=308615.55..309410.47 rows=317970 width=24)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=293000.16..301744.33 rows=317970 width=24)
               ->  Sort  (cost=293000.16..293795.08 rows=317970 width=24)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=60933.15..263940.03 rows=317970 width=24)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.46 rows=3266858 width=16)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59107.78..59107.78 rows=146030 width=12)
                                 ->  Hash Join  (cost=14403.54..59107.78 rows=146030 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8551.54..43689.35 rows=720545 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8371.40 rows=720545 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30400 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30400 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308615.55..308615.57 rows=10 width=24)
   ->  Sort  (cost=308615.55..309410.47 rows=317970 width=24)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=293000.16..301744.33 rows=317970 width=24)
               ->  Sort  (cost=293000.16..293795.08 rows=317970 width=24)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=60933.15..263940.03 rows=317970 width=24)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.46 rows=3266858 width=16)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59107.78..59107.78 rows=146030 width=12)
                                 ->  Hash Join  (cost=14403.54..59107.78 rows=146030 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8551.54..43689.35 rows=720545 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8371.40 rows=720545 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30400 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30400 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308615.55..308615.57 rows=10 width=24)
   ->  Sort  (cost=308615.55..309410.47 rows=317970 width=24)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=293000.16..301744.33 rows=317970 width=24)
               ->  Sort  (cost=293000.16..293795.08 rows=317970 width=24)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=60933.15..263940.03 rows=317970 width=24)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.46 rows=3266858 width=16)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59107.78..59107.78 rows=146030 width=12)
                                 ->  Hash Join  (cost=14403.54..59107.78 rows=146030 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8551.54..43689.35 rows=720545 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8371.40 rows=720545 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30400 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30400 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181187.71..181187.71 rows=1 width=16)
   ->  Sort  (cost=181187.71..181187.71 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=181187.69..181187.70 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=780.02..180916.37 rows=54264 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=780.02..27724.98 rows=54264 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..766.45 rows=54264 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.28 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(12 rows)

query 4 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181187.71..181187.71 rows=1 width=16)
   ->  Sort  (cost=181187.71..181187.71 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=181187.69..181187.70 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=780.02..180916.37 rows=54264 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=780.02..27724.98 rows=54264 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..766.45 rows=54264 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.28 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(12 rows)

query 4 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181187.71..181187.71 rows=1 width=16)
   ->  Sort  (cost=181187.71..181187.71 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=181187.69..181187.70 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=780.02..180916.37 rows=54264 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=780.02..27724.98 rows=54264 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..766.45 rows=54264 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.28 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(12 rows)

query 5 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=200630.03..200630.03 rows=1 width=38)
   ->  Sort  (cost=200630.03..200630.09 rows=25 width=38)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=200629.65..200629.90 rows=25 width=38)
               ->  Hash Join  (cost=10141.62..200555.45 rows=7420 width=38)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9668.62..194445.47 rows=185426 width=50)
                           ->  Hash Join  (cost=9668.62..40898.85 rows=46357 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3331.59..32939.33 rows=231783 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3273.64 rows=231783 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38)
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.26 rows=4 width=20)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(28 rows)

query 5 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=200630.03..200630.03 rows=1 width=38)
   ->  Sort  (cost=200630.03..200630.09 rows=25 width=38)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=200629.65..200629.90 rows=25 width=38)
               ->  Hash Join  (cost=10141.62..200555.45 rows=7420 width=38)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9668.62..194445.47 rows=185426 width=50)
                           ->  Hash Join  (cost=9668.62..40898.85 rows=46357 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3331.59..32939.33 rows=231783 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3273.64 rows=231783 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38)
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.26 rows=4 width=20)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(28 rows)

query 5 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=200630.03..200630.03 rows=1 width=38)
   ->  Sort  (cost=200630.03..200630.09 rows=25 width=38)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=200629.65..200629.90 rows=25 width=38)
               ->  Hash Join  (cost=10141.62..200555.45 rows=7420 width=38)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9668.62..194445.47 rows=185426 width=50)
                           ->  Hash Join  (cost=9668.62..40898.85 rows=46357 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3331.59..32939.33 rows=231783 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3273.64 rows=231783 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38)
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.26 rows=4 width=20)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(28 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109036.41..109036.42 rows=1 width=12)
   ->  Aggregate  (cost=109036.41..109036.42 rows=1 width=12)
         ->  Bitmap Heap Scan on lineitem  (cost=21200.76..108439.42 rows=119399 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21170.91 rows=119399 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 2
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109036.41..109036.42 rows=1 width=12)
   ->  Aggregate  (cost=109036.41..109036.42 rows=1 width=12)
         ->  Bitmap Heap Scan on lineitem  (cost=21200.76..108439.42 rows=119399 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21170.91 rows=119399 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 3
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109036.41..109036.42 rows=1 width=12)
   ->  Aggregate  (cost=109036.41..109036.42 rows=1 width=12)
         ->  Bitmap Heap Scan on lineitem  (cost=21200.76..108439.42 rows=119399 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21170.91 rows=119399 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238548.04..238548.04 rows=1 width=68)
   ->  Sort  (cost=238548.04..238562.74 rows=5878 width=68)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=238430.48..238518.65 rows=5878 width=68)
               ->  Hash Join  (cost=85341.30..238342.31 rows=5878 width=68)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=84868.30..233372.82 rows=146944 width=76)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29468.47..169608.54 rows=1838671 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29008.81 rows=1838671 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60)
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60)
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60)
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238548.04..238548.04 rows=1 width=68)
   ->  Sort  (cost=238548.04..238562.74 rows=5878 width=68)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=238430.48..238518.65 rows=5878 width=68)
               ->  Hash Join  (cost=85341.30..238342.31 rows=5878 width=68)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=84868.30..233372.82 rows=146944 width=76)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29468.47..169608.54 rows=1838671 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29008.81 rows=1838671 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60)
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60)
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60)
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238548.04..238548.04 rows=1 width=68)
   ->  Sort  (cost=238548.04..238562.74 rows=5878 width=68)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=238430.48..238518.65 rows=5878 width=68)
               ->  Hash Join  (cost=85341.30..238342.31 rows=5878 width=68)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=84868.30..233372.82 rows=146944 width=76)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29468.47..169608.54 rows=1838671 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29008.81 rows=1838671 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60)
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60)
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60)
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117961.45..117961.45 rows=1 width=42)
   ->  Sort  (cost=117961.45..117963.28 rows=731 width=42)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=117945.00..117957.80 rows=731 width=42)
               ->  Hash Join  (cost=50627.34..117896.48 rows=2426 width=42)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50625.78..117849.43 rows=2426 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50177.78..117340.78 rows=2426 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..66988.97 rows=39939 width=20)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1331 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..44.98 rows=31 width=24)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49038.72..49038.72 rows=91125 width=8)
                                       ->  Hash Join  (cost=12883.99..49038.72 rows=91125 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6546.96..39512.32 rows=455624 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6433.05 rows=455624 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117961.45..117961.45 rows=1 width=42)
   ->  Sort  (cost=117961.45..117963.28 rows=731 width=42)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=117945.00..117957.80 rows=731 width=42)
               ->  Hash Join  (cost=50627.34..117896.48 rows=2426 width=42)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50625.78..117849.43 rows=2426 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50177.78..117340.78 rows=2426 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..66988.97 rows=39939 width=20)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1331 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..44.98 rows=31 width=24)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49038.72..49038.72 rows=91125 width=8)
                                       ->  Hash Join  (cost=12883.99..49038.72 rows=91125 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6546.96..39512.32 rows=455624 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6433.05 rows=455624 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117961.45..117961.45 rows=1 width=42)
   ->  Sort  (cost=117961.45..117963.28 rows=731 width=42)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=117945.00..117957.80 rows=731 width=42)
               ->  Hash Join  (cost=50627.34..117896.48 rows=2426 width=42)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50625.78..117849.43 rows=2426 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50177.78..117340.78 rows=2426 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..66988.97 rows=39939 width=20)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1331 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..44.98 rows=31 width=24)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49038.72..49038.72 rows=91125 width=8)
                                       ->  Hash Join  (cost=12883.99..49038.72 rows=91125 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6546.96..39512.32 rows=455624 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6433.05 rows=455624 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73054.02..73054.05 rows=1 width=53)
   ->  GroupAggregate  (cost=73054.02..73055.73 rows=49 width=53)
         ->  Sort  (cost=73054.02..73054.14 rows=49 width=53)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=0.00..73052.64 rows=49 width=53)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..73032.71 rows=49 width=31)
                           ->  Nested Loop  (cost=0.00..72883.60 rows=49 width=31)
                                 ->  Nested Loop  (cost=0.00..72740.15 rows=49 width=35)
                                       ->  Nested Loop  (cost=0.00..19283.38 rows=16160 width=18)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.09 rows=4 width=14)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.29 rows=1 width=29)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.91 rows=1 width=8)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.03 rows=1 width=8)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(22 rows)

query 9 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73054.02..73054.05 rows=1 width=53)
   ->  GroupAggregate  (cost=73054.02..73055.73 rows=49 width=53)
         ->  Sort  (cost=73054.02..73054.14 rows=49 width=53)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=0.00..73052.64 rows=49 width=53)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..73032.71 rows=49 width=31)
                           ->  Nested Loop  (cost=0.00..72883.60 rows=49 width=31)
                                 ->  Nested Loop  (cost=0.00..72740.15 rows=49 width=35)
                                       ->  Nested Loop  (cost=0.00..19283.38 rows=16160 width=18)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.09 rows=4 width=14)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.29 rows=1 width=29)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.91 rows=1 width=8)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.03 rows=1 width=8)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(22 rows)

query 9 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73054.02..73054.05 rows=1 width=53)
   ->  GroupAggregate  (cost=73054.02..73055.73 rows=49 width=53)
         ->  Sort  (cost=73054.02..73054.14 rows=49 width=53)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=0.00..73052.64 rows=49 width=53)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..73032.71 rows=49 width=31)
                           ->  Nested Loop  (cost=0.00..72883.60 rows=49 width=31)
                                 ->  Nested Loop  (cost=0.00..72740.15 rows=49 width=35)
                                       ->  Nested Loop  (cost=0.00..19283.38 rows=16160 width=18)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.09 rows=4 width=14)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.29 rows=1 width=29)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.91 rows=1 width=8)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.03 rows=1 width=8)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(22 rows)

query 10 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=227499.24..227499.29 rows=20 width=181)
   ->  Sort  (cost=227499.24..227638.61 rows=55749 width=181)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=225458.29..226015.78 rows=55749 width=181)
               ->  Hash Join  (cost=7789.54..224064.57 rows=55749 width=181)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7787.98..223296.46 rows=55749 width=159)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=815.98..215000.42 rows=55749 width=16)
                                 ->  Bitmap Heap Scan on orders  (cost=815.98..27798.20 rows=56748 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..801.79 rows=56748 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.29 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=147)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=147)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(20 rows)

query 10 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=227499.24..227499.29 rows=20 width=181)
   ->  Sort  (cost=227499.24..227638.61 rows=55749 width=181)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=225458.29..226015.78 rows=55749 width=181)
               ->  Hash Join  (cost=7789.54..224064.57 rows=55749 width=181)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7787.98..223296.46 rows=55749 width=159)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=815.98..215000.42 rows=55749 width=16)
                                 ->  Bitmap Heap Scan on orders  (cost=815.98..27798.20 rows=56748 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..801.79 rows=56748 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.29 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=147)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=147)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(20 rows)

query 10 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=227499.24..227499.29 rows=20 width=181)
   ->  Sort  (cost=227499.24..227638.61 rows=55749 width=181)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=225458.29..226015.78 rows=55749 width=181)
               ->  Hash Join  (cost=7789.54..224064.57 rows=55749 width=181)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7787.98..223296.46 rows=55749 width=159)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=815.98..215000.42 rows=55749 width=16)
                                 ->  Bitmap Heap Scan on orders  (cost=815.98..27798.20 rows=56748 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..801.79 rows=56748 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.29 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=147)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=147)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(20 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22902.48..22902.48 rows=1 width=14)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=11012.33..11012.34 rows=1 width=10)
           ->  Nested Loop  (cost=0.00..10772.93 rows=31920 width=10)
                 ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=14)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=11890.13..11969.93 rows=31920 width=14)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11331.53..11730.53 rows=31920 width=14)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..10772.93 rows=31920 width=14)
                     ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=18)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 11 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22902.48..22902.48 rows=1 width=14)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=11012.33..11012.34 rows=1 width=10)
           ->  Nested Loop  (cost=0.00..10772.93 rows=31920 width=10)
                 ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=14)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=11890.13..11969.93 rows=31920 width=14)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11331.53..11730.53 rows=31920 width=14)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..10772.93 rows=31920 width=14)
                     ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=18)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 11 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22902.48..22902.48 rows=1 width=14)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=11012.33..11012.34 rows=1 width=10)
           ->  Nested Loop  (cost=0.00..10772.93 rows=31920 width=10)
                 ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=14)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=11890.13..11969.93 rows=31920 width=14)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11331.53..11730.53 rows=31920 width=14)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..10772.93 rows=31920 width=14)
                     ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=18)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309067.57..309067.58 rows=1 width=27)
   ->  Sort  (cost=309067.57..309067.58 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=309067.55..309067.56 rows=1 width=27)
               ->  Merge Join  (cost=249617.94..308586.28 rows=27501 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20)
                     ->  Sort  (cost=249617.93..249686.70 rows=27507 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..247589.63 rows=27507 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309067.57..309067.58 rows=1 width=27)
   ->  Sort  (cost=309067.57..309067.58 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=309067.55..309067.56 rows=1 width=27)
               ->  Merge Join  (cost=249617.94..308586.28 rows=27501 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20)
                     ->  Sort  (cost=249617.93..249686.70 rows=27507 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..247589.63 rows=27507 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309067.57..309067.58 rows=1 width=27)
   ->  Sort  (cost=309067.57..309067.58 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=309067.55..309067.56 rows=1 width=27)
               ->  Merge Join  (cost=249617.94..308586.28 rows=27501 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20)
                     ->  Sort  (cost=249617.93..249686.70 rows=27507 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..247589.63 rows=27507 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=97424.97..97424.98 rows=1 width=8)
   ->  Sort  (cost=97424.97..97425.47 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=97421.97..97423.97 rows=200 width=8)
               ->  HashAggregate  (cost=93671.97..95171.97 rows=150000 width=8)
                     ->  Hash Right Join  (cost=6972.00..86399.11 rows=1454573 width=8)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454573 width=8)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4)
(11 rows)

query 13 run 2
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=97424.97..97424.98 rows=1 width=8)
   ->  Sort  (cost=97424.97..97425.47 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=97421.97..97423.97 rows=200 width=8)
               ->  HashAggregate  (cost=93671.97..95171.97 rows=150000 width=8)
                     ->  Hash Right Join  (cost=6972.00..86399.11 rows=1454573 width=8)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454573 width=8)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4)
(11 rows)

query 13 run 3
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=97424.97..97424.98 rows=1 width=8)
   ->  Sort  (cost=97424.97..97425.47 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=97421.97..97423.97 rows=200 width=8)
               ->  HashAggregate  (cost=93671.97..95171.97 rows=150000 width=8)
                     ->  Hash Right Join  (cost=6972.00..86399.11 rows=1454573 width=8)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1454573 width=8)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4)
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4)
(11 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78887.76..78887.77 rows=1 width=33)
   ->  Aggregate  (cost=78887.76..78887.77 rows=1 width=33)
         ->  Hash Join  (cost=9818.71..77556.71 rows=76060 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1219.71..67436.51 rows=76060 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1200.70 rows=76060 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78887.76..78887.77 rows=1 width=33)
   ->  Aggregate  (cost=78887.76..78887.77 rows=1 width=33)
         ->  Hash Join  (cost=9818.71..77556.71 rows=76060 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1219.71..67436.51 rows=76060 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1200.70 rows=76060 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78887.76..78887.77 rows=1 width=33)
   ->  Aggregate  (cost=78887.76..78887.77 rows=1 width=33)
         ->  Hash Join  (cost=9818.71..77556.71 rows=76060 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1219.71..67436.51 rows=76060 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1200.70 rows=76060 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245495.15..245496.33 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121887.76..121887.77 rows=1 width=32)
           ->  HashAggregate  (cost=121879.25..121883.03 rows=378 width=16)
                 ->  Bitmap Heap Scan on lineitem  (cost=3641.13..119608.00 rows=227125 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3584.35 rows=227125 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123607.38..124056.80 rows=378 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..418.75 rows=10000 width=71)
         ->  Sort  (cost=123607.38..123608.32 rows=378 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=123582.69..123591.20 rows=378 width=36)
                     ->  HashAggregate  (cost=123582.69..123587.42 rows=378 width=16)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3641.13..119608.00 rows=227125 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3584.35 rows=227125 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245495.15..245496.33 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121887.76..121887.77 rows=1 width=32)
           ->  HashAggregate  (cost=121879.25..121883.03 rows=378 width=16)
                 ->  Bitmap Heap Scan on lineitem  (cost=3641.13..119608.00 rows=227125 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3584.35 rows=227125 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123607.38..124056.80 rows=378 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..418.75 rows=10000 width=71)
         ->  Sort  (cost=123607.38..123608.32 rows=378 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=123582.69..123591.20 rows=378 width=36)
                     ->  HashAggregate  (cost=123582.69..123587.42 rows=378 width=16)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3641.13..119608.00 rows=227125 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3584.35 rows=227125 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245495.15..245496.33 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121887.76..121887.77 rows=1 width=32)
           ->  HashAggregate  (cost=121879.25..121883.03 rows=378 width=16)
                 ->  Bitmap Heap Scan on lineitem  (cost=3641.13..119608.00 rows=227125 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3584.35 rows=227125 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123607.38..124056.80 rows=378 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..418.75 rows=10000 width=71)
         ->  Sort  (cost=123607.38..123608.32 rows=378 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=123582.69..123591.20 rows=378 width=36)
                     ->  HashAggregate  (cost=123582.69..123587.42 rows=378 width=16)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3641.13..119608.00 rows=227125 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3584.35 rows=227125 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47433.97..47433.97 rows=1 width=40)
   ->  Sort  (cost=47433.97..47440.84 rows=2750 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46705.22..47420.22 rows=2750 width=40)
               ->  Sort  (cost=46705.22..46842.72 rows=55000 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9790.75..42374.75 rows=55000 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=27500 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=27500 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47433.97..47433.97 rows=1 width=40)
   ->  Sort  (cost=47433.97..47440.84 rows=2750 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46705.22..47420.22 rows=2750 width=40)
               ->  Sort  (cost=46705.22..46842.72 rows=55000 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9790.75..42374.75 rows=55000 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=27500 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=27500 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47433.97..47433.97 rows=1 width=40)
   ->  Sort  (cost=47433.97..47440.84 rows=2750 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46705.22..47420.22 rows=2750 width=40)
               ->  Sort  (cost=46705.22..46842.72 rows=55000 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9790.75..42374.75 rows=55000 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=27500 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=27500 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=224512.67..224512.68 rows=1 width=8)
   ->  Aggregate  (cost=224512.67..224512.68 rows=1 width=8)
         ->  Nested Loop  (cost=209681.18..224507.90 rows=1905 width=8)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=209681.18..215328.60 rows=190 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202579.76..205525.25 rows=196366 width=9)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.17 rows=6001317 width=9)
                     ->  Hash  (cost=7099.00..7099.00 rows=194 width=4)
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=194 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.85 rows=31 width=17)
                     Index Cond: (l_partkey = part.p_partkey)
(13 rows)

query 17 run 2
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=224512.67..224512.68 rows=1 width=8)
   ->  Aggregate  (cost=224512.67..224512.68 rows=1 width=8)
         ->  Nested Loop  (cost=209681.18..224507.90 rows=1905 width=8)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=209681.18..215328.60 rows=190 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202579.76..205525.25 rows=196366 width=9)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.17 rows=6001317 width=9)
                     ->  Hash  (cost=7099.00..7099.00 rows=194 width=4)
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=194 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.85 rows=31 width=17)
                     Index Cond: (l_partkey = part.p_partkey)
(13 rows)

query 17 run 3
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=224512.67..224512.68 rows=1 width=8)
   ->  Aggregate  (cost=224512.67..224512.68 rows=1 width=8)
         ->  Nested Loop  (cost=209681.18..224507.90 rows=1905 width=8)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=209681.18..215328.60 rows=190 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202579.76..205525.25 rows=196366 width=9)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.17 rows=6001317 width=9)
                     ->  Hash  (cost=7099.00..7099.00 rows=194 width=4)
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=194 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.85 rows=31 width=17)
                     Index Cond: (l_partkey = part.p_partkey)
(13 rows)

query 18 run 1
SET
SET
                                                                   QUERY PLAN                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1106523.65..1106526.40 rows=100 width=44)
   ->  GroupAggregate  (cost=1106523.65..1189023.65 rows=3000000 width=44)
         ->  Sort  (cost=1106523.65..1114023.65 rows=3000000 width=44)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=6984.60..724447.68 rows=3000000 width=44)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=12.60..646225.68 rows=3000000 width=25)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..372090.99 rows=750000 width=24)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20)
                                 ->  Materialize  (cost=0.00..294781.06 rows=1500329 width=4)
                                       ->  GroupAggregate  (cost=0.00..276026.95 rows=1500329 width=9)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.25 rows=6001317 width=9)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.25 rows=6001317 width=9)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23)
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23)
(18 rows)

query 18 run 2
SET
SET
                                                                   QUERY PLAN                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1106523.65..1106526.40 rows=100 width=44)
   ->  GroupAggregate  (cost=1106523.65..1189023.65 rows=3000000 width=44)
         ->  Sort  (cost=1106523.65..1114023.65 rows=3000000 width=44)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=6984.60..724447.68 rows=3000000 width=44)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=12.60..646225.68 rows=3000000 width=25)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..372090.99 rows=750000 width=24)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20)
                                 ->  Materialize  (cost=0.00..294781.06 rows=1500329 width=4)
                                       ->  GroupAggregate  (cost=0.00..276026.95 rows=1500329 width=9)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.25 rows=6001317 width=9)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.25 rows=6001317 width=9)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23)
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23)
(18 rows)

query 18 run 3
SET
SET
                                                                   QUERY PLAN                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1106523.65..1106526.40 rows=100 width=44)
   ->  GroupAggregate  (cost=1106523.65..1189023.65 rows=3000000 width=44)
         ->  Sort  (cost=1106523.65..1114023.65 rows=3000000 width=44)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=6984.60..724447.68 rows=3000000 width=44)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=12.60..646225.68 rows=3000000 width=25)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..372090.99 rows=750000 width=24)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20)
                                 ->  Materialize  (cost=0.00..294781.06 rows=1500329 width=4)
                                       ->  GroupAggregate  (cost=0.00..276026.95 rows=1500329 width=9)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.25 rows=6001317 width=9)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.25 rows=6001317 width=9)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23)
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23)
(18 rows)

query 19 run 1
SET
SET


 Limit  (cost=308907.01..308907.02 rows=1 width=12)
   ->  Aggregate  (cost=308907.01..308907.02 rows=1 width=12)
         ->  Hash Join  (cost=9099.00..308906.17 rows=112 width=12)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292599.51 rows=110887 width=21)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6599.00..6599.00 rows=200000 width=30)
                     ->  Seq Scan on part  (cost=0.00..6599.00 rows=200000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET


 Limit  (cost=308907.01..308907.02 rows=1 width=12)
   ->  Aggregate  (cost=308907.01..308907.02 rows=1 width=12)
         ->  Hash Join  (cost=9099.00..308906.17 rows=112 width=12)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292599.51 rows=110887 width=21)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6599.00..6599.00 rows=200000 width=30)
                     ->  Seq Scan on part  (cost=0.00..6599.00 rows=200000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET
                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                   

 Limit  (cost=308907.01..308907.02 rows=1 width=12)
   ->  Aggregate  (cost=308907.01..308907.02 rows=1 width=12)
         ->  Hash Join  (cost=9099.00..308906.17 rows=112 width=12)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292599.51 rows=110887 width=21)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6599.00..6599.00 rows=200000 width=30)
                     ->  Seq Scan on part  (cost=0.00..6599.00 rows=200000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163884.42..163884.42 rows=1 width=51)
   ->  Sort  (cost=163884.42..163884.42 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=160839.00..163884.41 rows=1 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=6.35..230.54 rows=400 width=55)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=59)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=160832.65..163617.87 rows=6 width=8)
                     ->  Hash Join  (cost=160832.65..163617.84 rows=6 width=8)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=148329.17..149489.66 rows=92839 width=13)
                                 ->  Bitmap Heap Scan on lineitem  (cost=14880.53..141366.29 rows=928384 width=13)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14648.44 rows=928384 width=0)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12379.19..12379.19 rows=8286 width=16)
                                 ->  Nested Loop  (cost=6604.05..12379.19 rows=8286 width=16)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12)
                                             Index Cond: (ps_partkey = part.p_partkey)
(28 rows)

query 20 run 2
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163884.42..163884.42 rows=1 width=51)
   ->  Sort  (cost=163884.42..163884.42 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=160839.00..163884.41 rows=1 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=6.35..230.54 rows=400 width=55)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=59)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=160832.65..163617.87 rows=6 width=8)
                     ->  Hash Join  (cost=160832.65..163617.84 rows=6 width=8)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=148329.17..149489.66 rows=92839 width=13)
                                 ->  Bitmap Heap Scan on lineitem  (cost=14880.53..141366.29 rows=928384 width=13)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14648.44 rows=928384 width=0)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12379.19..12379.19 rows=8286 width=16)
                                 ->  Nested Loop  (cost=6604.05..12379.19 rows=8286 width=16)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12)
                                             Index Cond: (ps_partkey = part.p_partkey)
(28 rows)

query 20 run 3
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163884.42..163884.42 rows=1 width=51)
   ->  Sort  (cost=163884.42..163884.42 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=160839.00..163884.41 rows=1 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=6.35..230.54 rows=400 width=55)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=59)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=160832.65..163617.87 rows=6 width=8)
                     ->  Hash Join  (cost=160832.65..163617.84 rows=6 width=8)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=148329.17..149489.66 rows=92839 width=13)
                                 ->  Bitmap Heap Scan on lineitem  (cost=14880.53..141366.29 rows=928384 width=13)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14648.44 rows=928384 width=0)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12379.19..12379.19 rows=8286 width=16)
                                 ->  Nested Loop  (cost=6604.05..12379.19 rows=8286 width=16)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12)
                                             Index Cond: (ps_partkey = part.p_partkey)
(28 rows)

query 21 run 1
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=387223.61..387223.61 rows=1 width=26)
   ->  Sort  (cost=387223.61..387223.61 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=387223.59..387223.60 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=54224.04..387223.58 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54224.04..387216.67 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54224.04..251291.10 rows=38859 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.54..196113.83 rows=80018 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187576.46 rows=2000439 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=230.54..230.54 rows=400 width=30)
                                             ->  Nested Loop  (cost=6.35..230.54 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=34)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=728600 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=728600 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.44 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.45 rows=1 width=8)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
(30 rows)

query 21 run 2
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=387223.61..387223.61 rows=1 width=26)
   ->  Sort  (cost=387223.61..387223.61 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=387223.59..387223.60 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=54224.04..387223.58 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54224.04..387216.67 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54224.04..251291.10 rows=38859 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.54..196113.83 rows=80018 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187576.46 rows=2000439 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=230.54..230.54 rows=400 width=30)
                                             ->  Nested Loop  (cost=6.35..230.54 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=34)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=728600 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=728600 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.44 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.45 rows=1 width=8)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
(30 rows)

query 21 run 3
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=387223.61..387223.61 rows=1 width=26)
   ->  Sort  (cost=387223.61..387223.61 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=387223.59..387223.60 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=54224.04..387223.58 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54224.04..387216.67 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54224.04..251291.10 rows=38859 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.54..196113.83 rows=80018 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187576.46 rows=2000439 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=230.54..230.54 rows=400 width=30)
                                             ->  Nested Loop  (cost=6.35..230.54 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=34)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=728600 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=728600 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.44 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.45 rows=1 width=8)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
(30 rows)

query 22 run 1
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17926.98..17926.98 rows=1 width=22)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.28..7546.29 rows=1 width=6)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4711 width=6)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10380.69..10382.53 rows=737 width=22)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=10365.95..10377.00 rows=737 width=22)
               ->  Nested Loop Anti Join  (cost=0.00..10360.42 rows=737 width=22)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..18.52 rows=17 width=4)
                           Index Cond: (o_custkey = public.customer.c_custkey)
(13 rows)

query 22 run 2
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17926.98..17926.98 rows=1 width=22)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.28..7546.29 rows=1 width=6)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4711 width=6)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10380.69..10382.53 rows=737 width=22)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=10365.95..10377.00 rows=737 width=22)
               ->  Nested Loop Anti Join  (cost=0.00..10360.42 rows=737 width=22)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..18.52 rows=17 width=4)
                           Index Cond: (o_custkey = public.customer.c_custkey)
(13 rows)

query 22 run 3
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17926.98..17926.98 rows=1 width=22)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.28..7546.29 rows=1 width=6)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4711 width=6)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10380.69..10382.53 rows=737 width=22)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=10365.95..10377.00 rows=737 width=22)
               ->  Nested Loop Anti Join  (cost=0.00..10360.42 rows=737 width=22)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..18.52 rows=17 width=4)
                           Index Cond: (o_custkey = public.customer.c_custkey)
(13 rows)

