query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=4243167.62..4243167.62 rows=1 width=25)
   ->  Sort  (cost=4243167.62..4243167.63 rows=6 width=25)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=4243167.48..4243167.58 rows=6 width=25)
               ->  Seq Scan on lineitem  (cost=0.00..1874970.20 rows=59204932 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=4243167.62..4243167.62 rows=1 width=25)
   ->  Sort  (cost=4243167.62..4243167.63 rows=6 width=25)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=4243167.48..4243167.58 rows=6 width=25)
               ->  Seq Scan on lineitem  (cost=0.00..1874970.20 rows=59204932 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=4243167.62..4243167.62 rows=1 width=25)
   ->  Sort  (cost=4243167.62..4243167.63 rows=6 width=25)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=4243167.48..4243167.58 rows=6 width=25)
               ->  Seq Scan on lineitem  (cost=0.00..1874970.20 rows=59204932 width=25)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1059875.52..1059875.53 rows=1 width=192)
   ->  Sort  (cost=1059875.52..1059875.53 rows=1 width=192)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=550356.39..1059875.51 rows=1 width=192)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.43..89213.35 rows=8296 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=550345.21..558125.06 rows=1555970 width=172)
                     ->  Sort  (cost=550345.21..554235.13 rows=1555970 width=172)
                           Sort Key: partsupp.ps_partkey
                           ->  Hash Join  (cost=4048.53..304845.49 rows=1555970 width=172)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=14)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166)
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=63.29..63.30 rows=1 width=6)
                       ->  Nested Loop  (cost=2.29..63.28 rows=3 width=6)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=2.29..62.01 rows=17 width=10)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..60.21 rows=17 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.73 rows=17 width=10)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 2 run 2
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1059875.52..1059875.53 rows=1 width=192)
   ->  Sort  (cost=1059875.52..1059875.53 rows=1 width=192)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=550356.39..1059875.51 rows=1 width=192)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.43..89213.35 rows=8296 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=550345.21..558125.06 rows=1555970 width=172)
                     ->  Sort  (cost=550345.21..554235.13 rows=1555970 width=172)
                           Sort Key: partsupp.ps_partkey
                           ->  Hash Join  (cost=4048.53..304845.49 rows=1555970 width=172)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=14)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166)
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=63.29..63.30 rows=1 width=6)
                       ->  Nested Loop  (cost=2.29..63.28 rows=3 width=6)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=2.29..62.01 rows=17 width=10)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..60.21 rows=17 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.73 rows=17 width=10)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 2 run 3
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1059875.52..1059875.53 rows=1 width=192)
   ->  Sort  (cost=1059875.52..1059875.53 rows=1 width=192)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=550356.39..1059875.51 rows=1 width=192)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.43..89213.35 rows=8296 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=550345.21..558125.06 rows=1555970 width=172)
                     ->  Sort  (cost=550345.21..554235.13 rows=1555970 width=172)
                           Sort Key: partsupp.ps_partkey
                           ->  Hash Join  (cost=4048.53..304845.49 rows=1555970 width=172)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=14)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166)
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=63.29..63.30 rows=1 width=6)
                       ->  Nested Loop  (cost=2.29..63.28 rows=3 width=6)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=2.29..62.01 rows=17 width=10)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..60.21 rows=17 width=10)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.73 rows=17 width=10)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 3 run 1
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3527659.60..3527659.63 rows=10 width=24)
   ->  Sort  (cost=3527659.60..3535542.24 rows=3153057 width=24)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3372814.10..3459523.17 rows=3153057 width=24)
               ->  Sort  (cost=3372814.10..3380696.75 rows=3153057 width=24)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=636639.01..2990899.34 rows=3153057 width=24)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874970.20 rows=32604949 width=16)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=611424.06..611424.06 rows=1450556 width=12)
                                 ->  Hash Join  (cost=144723.78..611424.06 rows=1450556 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86286.78..438472.26 rows=7273399 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84468.43 rows=7273399 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.53..54697.53 rows=299158 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..54697.53 rows=299158 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3527659.60..3527659.63 rows=10 width=24)
   ->  Sort  (cost=3527659.60..3535542.24 rows=3153057 width=24)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3372814.10..3459523.17 rows=3153057 width=24)
               ->  Sort  (cost=3372814.10..3380696.75 rows=3153057 width=24)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=636639.01..2990899.34 rows=3153057 width=24)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874970.20 rows=32604949 width=16)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=611424.06..611424.06 rows=1450556 width=12)
                                 ->  Hash Join  (cost=144723.78..611424.06 rows=1450556 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86286.78..438472.26 rows=7273399 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84468.43 rows=7273399 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.53..54697.53 rows=299158 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..54697.53 rows=299158 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3527659.60..3527659.63 rows=10 width=24)
   ->  Sort  (cost=3527659.60..3535542.24 rows=3153057 width=24)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3372814.10..3459523.17 rows=3153057 width=24)
               ->  Sort  (cost=3372814.10..3380696.75 rows=3153057 width=24)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=636639.01..2990899.34 rows=3153057 width=24)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874970.20 rows=32604949 width=16)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=611424.06..611424.06 rows=1450556 width=12)
                                 ->  Hash Join  (cost=144723.78..611424.06 rows=1450556 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86286.78..438472.26 rows=7273399 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84468.43 rows=7273399 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.53..54697.53 rows=299158 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..54697.53 rows=299158 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1984788.61..1984788.61 rows=1 width=16)
   ->  Sort  (cost=1984788.61..1984788.61 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=1984788.59..1984788.60 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=7667.04..1982120.86 rows=533545 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=7666.47..276939.40 rows=533662 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7533.06 rows=533662 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(12 rows)

query 4 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1984788.61..1984788.61 rows=1 width=16)
   ->  Sort  (cost=1984788.61..1984788.61 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=1984788.59..1984788.60 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=7667.04..1982120.86 rows=533545 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=7666.47..276939.40 rows=533662 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7533.06 rows=533662 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(12 rows)

query 4 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1984788.61..1984788.61 rows=1 width=16)
   ->  Sort  (cost=1984788.61..1984788.61 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=1984788.59..1984788.60 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=7667.04..1982120.86 rows=533545 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=7666.47..276939.40 rows=533662 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7533.06 rows=533662 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=4)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
(12 rows)

query 5 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2111525.87..2111525.88 rows=1 width=38)
   ->  Sort  (cost=2111525.87..2111525.94 rows=25 width=38)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2111525.50..2111525.75 rows=25 width=38)
               ->  Hash Join  (cost=100757.89..2110796.81 rows=72869 width=38)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=96036.89..2068917.06 rows=1821503 width=50)
                           ->  Hash Join  (cost=96036.33..404559.88 rows=455475 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=32711.04..328139.68 rows=2277376 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32141.70 rows=2277376 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59575.19..59575.19 rows=300008 width=38)
                                       ->  Hash Join  (cost=2.53..59575.19 rows=300008 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=4 width=20)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
(28 rows)

query 5 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2111525.87..2111525.88 rows=1 width=38)
   ->  Sort  (cost=2111525.87..2111525.94 rows=25 width=38)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2111525.50..2111525.75 rows=25 width=38)
               ->  Hash Join  (cost=100757.89..2110796.81 rows=72869 width=38)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=96036.89..2068917.06 rows=1821503 width=50)
                           ->  Hash Join  (cost=96036.33..404559.88 rows=455475 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=32711.04..328139.68 rows=2277376 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32141.70 rows=2277376 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59575.19..59575.19 rows=300008 width=38)
                                       ->  Hash Join  (cost=2.53..59575.19 rows=300008 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=4 width=20)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
(28 rows)

query 5 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2111525.87..2111525.88 rows=1 width=38)
   ->  Sort  (cost=2111525.87..2111525.94 rows=25 width=38)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2111525.50..2111525.75 rows=25 width=38)
               ->  Hash Join  (cost=100757.89..2110796.81 rows=72869 width=38)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=96036.89..2068917.06 rows=1821503 width=50)
                           ->  Hash Join  (cost=96036.33..404559.88 rows=455475 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=32711.04..328139.68 rows=2277376 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32141.70 rows=2277376 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59575.19..59575.19 rows=300008 width=38)
                                       ->  Hash Join  (cost=2.53..59575.19 rows=300008 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=4 width=20)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
(28 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1089715.43..1089715.44 rows=1 width=12)
   ->  Aggregate  (cost=1089715.43..1089715.44 rows=1 width=12)
         ->  Bitmap Heap Scan on lineitem  (cost=209769.25..1083723.54 rows=1198378 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..209469.66 rows=1198378 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 2
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1089715.43..1089715.44 rows=1 width=12)
   ->  Aggregate  (cost=1089715.43..1089715.44 rows=1 width=12)
         ->  Bitmap Heap Scan on lineitem  (cost=209769.25..1083723.54 rows=1198378 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..209469.66 rows=1198378 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 3
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1089715.43..1089715.44 rows=1 width=12)
   ->  Aggregate  (cost=1089715.43..1089715.44 rows=1 width=12)
         ->  Bitmap Heap Scan on lineitem  (cost=209769.25..1083723.54 rows=1198378 width=12)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..209469.66 rows=1198378 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2595816.55..2595816.55 rows=1 width=68)
   ->  Sort  (cost=2595816.55..2595961.00 rows=57780 width=68)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2594660.95..2595527.65 rows=57780 width=68)
               ->  Hash Join  (cost=860978.29..2593794.25 rows=57780 width=68)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=856257.29..2559316.67 rows=1444494 width=76)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=289594.58..1685797.12 rows=18070636 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..285076.92 rows=18070636 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538793.88..538793.88 rows=1199026 width=60)
                                 ->  Hash Join  (cost=59288.10..538793.88 rows=1199026 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411266.23 rows=14999823 width=8)
                                       ->  Hash  (cost=57789.26..57789.26 rows=119907 width=60)
                                             ->  Hash Join  (cost=16.65..57789.26 rows=119907 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60)
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2595816.55..2595816.55 rows=1 width=68)
   ->  Sort  (cost=2595816.55..2595961.00 rows=57780 width=68)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2594660.95..2595527.65 rows=57780 width=68)
               ->  Hash Join  (cost=860978.29..2593794.25 rows=57780 width=68)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=856257.29..2559316.67 rows=1444494 width=76)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=289594.58..1685797.12 rows=18070636 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..285076.92 rows=18070636 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538793.88..538793.88 rows=1199026 width=60)
                                 ->  Hash Join  (cost=59288.10..538793.88 rows=1199026 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411266.23 rows=14999823 width=8)
                                       ->  Hash  (cost=57789.26..57789.26 rows=119907 width=60)
                                             ->  Hash Join  (cost=16.65..57789.26 rows=119907 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60)
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2595816.55..2595816.55 rows=1 width=68)
   ->  Sort  (cost=2595816.55..2595961.00 rows=57780 width=68)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2594660.95..2595527.65 rows=57780 width=68)
               ->  Hash Join  (cost=860978.29..2593794.25 rows=57780 width=68)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=856257.29..2559316.67 rows=1444494 width=76)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=289594.58..1685797.12 rows=18070636 width=24)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..285076.92 rows=18070636 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538793.88..538793.88 rows=1199026 width=60)
                                 ->  Hash Join  (cost=59288.10..538793.88 rows=1199026 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411266.23 rows=14999823 width=8)
                                       ->  Hash  (cost=57789.26..57789.26 rows=119907 width=60)
                                             ->  Hash Join  (cost=16.65..57789.26 rows=119907 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60)
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1265094.06..1265094.07 rows=1 width=42)
   ->  Sort  (cost=1265094.06..1265095.90 rows=735 width=42)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1265077.53..1265090.39 rows=735 width=42)
               ->  Nested Loop  (cost=504991.96..1264588.87 rows=24433 width=42)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=504991.96..1255303.01 rows=24433 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=500520.96..1250343.35 rows=24433 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.56..739810.94 rows=399919 width=20)
                                       ->  Seq Scan on part  (cost=0.00..65981.57 rows=13334 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.21 rows=32 width=24)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485485.23..485485.23 rows=916413 width=8)
                                       ->  Hash Join  (cost=129139.39..485485.23 rows=916413 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65814.10..395813.08 rows=4582065 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64668.58 rows=4582065 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59575.19..59575.19 rows=300008 width=4)
                                                   ->  Hash Join  (cost=2.53..59575.19 rows=300008 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1265094.06..1265094.07 rows=1 width=42)
   ->  Sort  (cost=1265094.06..1265095.90 rows=735 width=42)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1265077.53..1265090.39 rows=735 width=42)
               ->  Nested Loop  (cost=504991.96..1264588.87 rows=24433 width=42)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=504991.96..1255303.01 rows=24433 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=500520.96..1250343.35 rows=24433 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.56..739810.94 rows=399919 width=20)
                                       ->  Seq Scan on part  (cost=0.00..65981.57 rows=13334 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.21 rows=32 width=24)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485485.23..485485.23 rows=916413 width=8)
                                       ->  Hash Join  (cost=129139.39..485485.23 rows=916413 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65814.10..395813.08 rows=4582065 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64668.58 rows=4582065 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59575.19..59575.19 rows=300008 width=4)
                                                   ->  Hash Join  (cost=2.53..59575.19 rows=300008 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1265094.06..1265094.07 rows=1 width=42)
   ->  Sort  (cost=1265094.06..1265095.90 rows=735 width=42)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1265077.53..1265090.39 rows=735 width=42)
               ->  Nested Loop  (cost=504991.96..1264588.87 rows=24433 width=42)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=504991.96..1255303.01 rows=24433 width=20)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=500520.96..1250343.35 rows=24433 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.56..739810.94 rows=399919 width=20)
                                       ->  Seq Scan on part  (cost=0.00..65981.57 rows=13334 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.21 rows=32 width=24)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485485.23..485485.23 rows=916413 width=8)
                                       ->  Hash Join  (cost=129139.39..485485.23 rows=916413 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65814.10..395813.08 rows=4582065 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64668.58 rows=4582065 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59575.19..59575.19 rows=300008 width=4)
                                                   ->  Hash Join  (cost=2.53..59575.19 rows=300008 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                         QUERY PLAN                                                          
-----------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3242386.28..3242386.28 rows=1 width=53)
   ->  Sort  (cost=3242386.28..3242386.90 rows=250 width=53)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=3242381.28..3242385.03 rows=250 width=53)
               ->  Nested Loop  (cost=72978.89..3242376.90 rows=250 width=53)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=72978.89..3242280.59 rows=250 width=31)
                           ->  Nested Loop  (cost=72978.45..3241421.81 rows=250 width=31)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=72977.89..432244.42 rows=785845 width=26)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=68506.89..411833.03 rows=808194 width=18)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=14)
                                             ->  Hash  (cost=65981.57..65981.57 rows=202025 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..65981.57 rows=202025 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.43 rows=1 width=8)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(25 rows)

query 9 run 2
SET
SET
                                                         QUERY PLAN                                                          
-----------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3242386.28..3242386.28 rows=1 width=53)
   ->  Sort  (cost=3242386.28..3242386.90 rows=250 width=53)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=3242381.28..3242385.03 rows=250 width=53)
               ->  Nested Loop  (cost=72978.89..3242376.90 rows=250 width=53)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=72978.89..3242280.59 rows=250 width=31)
                           ->  Nested Loop  (cost=72978.45..3241421.81 rows=250 width=31)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=72977.89..432244.42 rows=785845 width=26)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=68506.89..411833.03 rows=808194 width=18)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=14)
                                             ->  Hash  (cost=65981.57..65981.57 rows=202025 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..65981.57 rows=202025 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.43 rows=1 width=8)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(25 rows)

query 9 run 3
SET
SET
                                                         QUERY PLAN                                                          
-----------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3242386.28..3242386.28 rows=1 width=53)
   ->  Sort  (cost=3242386.28..3242386.90 rows=250 width=53)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=3242381.28..3242385.03 rows=250 width=53)
               ->  Nested Loop  (cost=72978.89..3242376.90 rows=250 width=53)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=72978.89..3242280.59 rows=250 width=31)
                           ->  Nested Loop  (cost=72978.45..3241421.81 rows=250 width=31)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=72977.89..432244.42 rows=785845 width=26)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=68506.89..411833.03 rows=808194 width=18)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=14)
                                             ->  Hash  (cost=65981.57..65981.57 rows=202025 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..65981.57 rows=202025 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.43 rows=1 width=8)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(25 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2569518.82..2569518.87 rows=20 width=181)
   ->  Sort  (cost=2569518.82..2570884.38 rows=546224 width=181)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2534500.60..2554984.00 rows=546224 width=181)
               ->  Sort  (cost=2534500.60..2535866.16 rows=546224 width=181)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=109907.90..2451242.57 rows=546224 width=181)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Nested Loop  (cost=109906.34..2443730.42 rows=546224 width=159)
                                 ->  Hash Join  (cost=109905.77..425099.68 rows=555453 width=151)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7979.83..277579.62 rows=555453 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7840.97 rows=555453 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Hash  (cost=50947.42..50947.42 rows=1500042 width=147)
                                             ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=147)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(22 rows)

query 10 run 2
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2569518.82..2569518.87 rows=20 width=181)
   ->  Sort  (cost=2569518.82..2570884.38 rows=546224 width=181)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2534500.60..2554984.00 rows=546224 width=181)
               ->  Sort  (cost=2534500.60..2535866.16 rows=546224 width=181)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=109907.90..2451242.57 rows=546224 width=181)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Nested Loop  (cost=109906.34..2443730.42 rows=546224 width=159)
                                 ->  Hash Join  (cost=109905.77..425099.68 rows=555453 width=151)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7979.83..277579.62 rows=555453 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7840.97 rows=555453 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Hash  (cost=50947.42..50947.42 rows=1500042 width=147)
                                             ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=147)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(22 rows)

query 10 run 3
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2569518.82..2569518.87 rows=20 width=181)
   ->  Sort  (cost=2569518.82..2570884.38 rows=546224 width=181)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2534500.60..2554984.00 rows=546224 width=181)
               ->  Sort  (cost=2534500.60..2535866.16 rows=546224 width=181)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=109907.90..2451242.57 rows=546224 width=181)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Nested Loop  (cost=109906.34..2443730.42 rows=546224 width=159)
                                 ->  Hash Join  (cost=109905.77..425099.68 rows=555453 width=151)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7979.83..277579.62 rows=555453 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7840.97 rows=555453 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Hash  (cost=50947.42..50947.42 rows=1500042 width=147)
                                             ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=147)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=16)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(22 rows)

query 11 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=683749.88..683749.88 rows=1 width=14)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323010.78..323010.79 rows=1 width=10)
           ->  Hash Join  (cost=2323.46..320676.82 rows=311194 width=10)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255233.10 rows=8001110 width=14)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=360739.09..361517.08 rows=311194 width=14)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=349069.32..359183.12 rows=311194 width=14)
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=349069.32..349847.30 rows=311194 width=14)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=2323.46..320676.82 rows=311194 width=14)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=18)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
(31 rows)

query 11 run 2
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=683749.88..683749.88 rows=1 width=14)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323010.78..323010.79 rows=1 width=10)
           ->  Hash Join  (cost=2323.46..320676.82 rows=311194 width=10)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255233.10 rows=8001110 width=14)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=360739.09..361517.08 rows=311194 width=14)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=349069.32..359183.12 rows=311194 width=14)
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=349069.32..349847.30 rows=311194 width=14)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=2323.46..320676.82 rows=311194 width=14)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=18)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
(31 rows)

query 11 run 3
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=683749.88..683749.88 rows=1 width=14)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323010.78..323010.79 rows=1 width=10)
           ->  Hash Join  (cost=2323.46..320676.82 rows=311194 width=10)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255233.10 rows=8001110 width=14)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=360739.09..361517.08 rows=311194 width=14)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=349069.32..359183.12 rows=311194 width=14)
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=349069.32..349847.30 rows=311194 width=14)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=2323.46..320676.82 rows=311194 width=14)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255233.10 rows=8001110 width=18)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
(31 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3095573.57..3095573.57 rows=1 width=27)
   ->  Sort  (cost=3095573.57..3095573.57 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3095573.55..3095573.56 rows=1 width=27)
               ->  Merge Join  (cost=2500815.86..3090557.15 rows=286651 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..547962.78 rows=14999823 width=20)
                     ->  Sort  (cost=2500815.35..2501531.98 rows=286651 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2474831.96 rows=286651 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3095573.57..3095573.57 rows=1 width=27)
   ->  Sort  (cost=3095573.57..3095573.57 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3095573.55..3095573.56 rows=1 width=27)
               ->  Merge Join  (cost=2500815.86..3090557.15 rows=286651 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..547962.78 rows=14999823 width=20)
                     ->  Sort  (cost=2500815.35..2501531.98 rows=286651 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2474831.96 rows=286651 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3095573.57..3095573.57 rows=1 width=27)
   ->  Sort  (cost=3095573.57..3095573.57 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3095573.55..3095573.56 rows=1 width=27)
               ->  Merge Join  (cost=2500815.86..3090557.15 rows=286651 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..547962.78 rows=14999823 width=20)
                     ->  Sort  (cost=2500815.35..2501531.98 rows=286651 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2474831.96 rows=286651 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                        QUERY PLAN                                                         
---------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2704311.94..2704311.94 rows=1 width=8)
   ->  Sort  (cost=2704311.94..2704312.44 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2704308.94..2704310.94 rows=200 width=8)
               ->  GroupAggregate  (cost=2307109.85..2681808.31 rows=1500042 width=8)
                     ->  Merge Left Join  (cost=2307109.85..2594079.81 rows=14545616 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.06 rows=1500042 width=4)
                           ->  Materialize  (cost=2307106.37..2379834.45 rows=14545616 width=8)
                                 ->  Sort  (cost=2307106.37..2343470.41 rows=14545616 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..448765.79 rows=14545616 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 2
SET
SET
                                                        QUERY PLAN                                                         
---------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2704311.94..2704311.94 rows=1 width=8)
   ->  Sort  (cost=2704311.94..2704312.44 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2704308.94..2704310.94 rows=200 width=8)
               ->  GroupAggregate  (cost=2307109.85..2681808.31 rows=1500042 width=8)
                     ->  Merge Left Join  (cost=2307109.85..2594079.81 rows=14545616 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.06 rows=1500042 width=4)
                           ->  Materialize  (cost=2307106.37..2379834.45 rows=14545616 width=8)
                                 ->  Sort  (cost=2307106.37..2343470.41 rows=14545616 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..448765.79 rows=14545616 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 3
SET
SET
                                                        QUERY PLAN                                                         
---------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2704311.94..2704311.94 rows=1 width=8)
   ->  Sort  (cost=2704311.94..2704312.44 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2704308.94..2704310.94 rows=200 width=8)
               ->  GroupAggregate  (cost=2307109.85..2681808.31 rows=1500042 width=8)
                     ->  Merge Left Join  (cost=2307109.85..2594079.81 rows=14545616 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.06 rows=1500042 width=4)
                           ->  Materialize  (cost=2307106.37..2379834.45 rows=14545616 width=8)
                                 ->  Sort  (cost=2307106.37..2343470.41 rows=14545616 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..448765.79 rows=14545616 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=839285.73..839285.75 rows=1 width=33)
   ->  Aggregate  (cost=839285.73..839285.75 rows=1 width=33)
         ->  Hash Join  (cost=112206.42..825581.41 rows=783104 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12551.38..686985.54 rows=783104 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12355.61 rows=783104 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.46..60981.46 rows=2000046 width=25)
                     ->  Seq Scan on part  (cost=0.00..60981.46 rows=2000046 width=25)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=839285.73..839285.75 rows=1 width=33)
   ->  Aggregate  (cost=839285.73..839285.75 rows=1 width=33)
         ->  Hash Join  (cost=112206.42..825581.41 rows=783104 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12551.38..686985.54 rows=783104 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12355.61 rows=783104 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.46..60981.46 rows=2000046 width=25)
                     ->  Seq Scan on part  (cost=0.00..60981.46 rows=2000046 width=25)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=839285.73..839285.75 rows=1 width=33)
   ->  Aggregate  (cost=839285.73..839285.75 rows=1 width=33)
         ->  Hash Join  (cost=112206.42..825581.41 rows=783104 width=33)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12551.38..686985.54 rows=783104 width=16)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12355.61 rows=783104 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.46..60981.46 rows=2000046 width=25)
                     ->  Seq Scan on part  (cost=0.00..60981.46 rows=2000046 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2452301.99..2452303.19 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1217597.88..1217597.89 rows=1 width=32)
           ->  HashAggregate  (cost=1217514.54..1217551.58 rows=3704 width=16)
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36083.61..1194999.37 rows=2251517 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35520.74 rows=2251517 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1234704.10..1239145.16 rows=3704 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=71)
         ->  Sort  (cost=1234703.81..1234713.07 rows=3704 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=1234400.92..1234484.26 rows=3704 width=36)
                     ->  HashAggregate  (cost=1234400.92..1234447.22 rows=3704 width=16)
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=36083.61..1194999.37 rows=2251517 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35520.74 rows=2251517 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2452301.99..2452303.19 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1217597.88..1217597.89 rows=1 width=32)
           ->  HashAggregate  (cost=1217514.54..1217551.58 rows=3704 width=16)
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36083.61..1194999.37 rows=2251517 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35520.74 rows=2251517 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1234704.10..1239145.16 rows=3704 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=71)
         ->  Sort  (cost=1234703.81..1234713.07 rows=3704 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=1234400.92..1234484.26 rows=3704 width=36)
                     ->  HashAggregate  (cost=1234400.92..1234447.22 rows=3704 width=16)
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=36083.61..1194999.37 rows=2251517 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35520.74 rows=2251517 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2452301.99..2452303.19 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1217597.88..1217597.89 rows=1 width=32)
           ->  HashAggregate  (cost=1217514.54..1217551.58 rows=3704 width=16)
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36083.61..1194999.37 rows=2251517 width=16)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35520.74 rows=2251517 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1234704.10..1239145.16 rows=3704 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=71)
         ->  Sort  (cost=1234703.81..1234713.07 rows=3704 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan on revenue0  (cost=1234400.92..1234484.26 rows=3704 width=36)
                     ->  HashAggregate  (cost=1234400.92..1234447.22 rows=3704 width=16)
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=36083.61..1194999.37 rows=2251517 width=16)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35520.74 rows=2251517 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=378887.79..378887.79 rows=1 width=40)
   ->  Sort  (cost=378887.79..378958.49 rows=28278 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=370921.92..378746.40 rows=28278 width=40)
               ->  Sort  (cost=370921.92..372430.26 rows=603336 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3482.09..302387.31 rows=603336 width=40)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.43..109213.81 rows=301633 width=40)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176396.38 rows=4000555 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
(15 rows)

query 16 run 2
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=378887.79..378887.79 rows=1 width=40)
   ->  Sort  (cost=378887.79..378958.49 rows=28278 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=370921.92..378746.40 rows=28278 width=40)
               ->  Sort  (cost=370921.92..372430.26 rows=603336 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3482.09..302387.31 rows=603336 width=40)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.43..109213.81 rows=301633 width=40)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176396.38 rows=4000555 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
(15 rows)

query 16 run 3
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=378887.79..378887.79 rows=1 width=40)
   ->  Sort  (cost=378887.79..378958.49 rows=28278 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=370921.92..378746.40 rows=28278 width=40)
               ->  Sort  (cost=370921.92..372430.26 rows=603336 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3482.09..302387.31 rows=603336 width=40)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.43..109213.81 rows=301633 width=40)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176396.38 rows=4000555 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
(15 rows)

query 17 run 1
SET
SET
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10826270.94..10826270.95 rows=1 width=8)
   ->  Aggregate  (cost=10826270.94..10826270.95 rows=1 width=8)
         ->  Merge Join  (cost=10133687.34..10826223.96 rows=18791 width=8)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               ->  GroupAggregate  (cost=10133686.35..10611918.60 rows=1889062 width=9)
                     ->  Sort  (cost=10133686.35..10283651.79 rows=59986176 width=9)
                           Sort Key: lineitem_1.l_partkey
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725004.76 rows=59986176 width=9)
               ->  Materialize  (cost=0.99..189838.22 rows=59685 width=21)
                     ->  Nested Loop  (cost=0.99..189689.00 rows=59685 width=21)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89213.35 rows=1990 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.17 rows=32 width=17)
                                 Index Cond: (l_partkey = part.p_partkey)
(15 rows)

query 17 run 2
SET
SET
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10826270.94..10826270.95 rows=1 width=8)
   ->  Aggregate  (cost=10826270.94..10826270.95 rows=1 width=8)
         ->  Merge Join  (cost=10133687.34..10826223.96 rows=18791 width=8)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               ->  GroupAggregate  (cost=10133686.35..10611918.60 rows=1889062 width=9)
                     ->  Sort  (cost=10133686.35..10283651.79 rows=59986176 width=9)
                           Sort Key: lineitem_1.l_partkey
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725004.76 rows=59986176 width=9)
               ->  Materialize  (cost=0.99..189838.22 rows=59685 width=21)
                     ->  Nested Loop  (cost=0.99..189689.00 rows=59685 width=21)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89213.35 rows=1990 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.17 rows=32 width=17)
                                 Index Cond: (l_partkey = part.p_partkey)
(15 rows)

query 17 run 3
SET
SET
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10826270.94..10826270.95 rows=1 width=8)
   ->  Aggregate  (cost=10826270.94..10826270.95 rows=1 width=8)
         ->  Merge Join  (cost=10133687.34..10826223.96 rows=18791 width=8)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               ->  GroupAggregate  (cost=10133686.35..10611918.60 rows=1889062 width=9)
                     ->  Sort  (cost=10133686.35..10283651.79 rows=59986176 width=9)
                           Sort Key: lineitem_1.l_partkey
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725004.76 rows=59986176 width=9)
               ->  Materialize  (cost=0.99..189838.22 rows=59685 width=21)
                     ->  Nested Loop  (cost=0.99..189689.00 rows=59685 width=21)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89213.35 rows=1990 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.17 rows=32 width=17)
                                 Index Cond: (l_partkey = part.p_partkey)
(15 rows)

query 18 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11874782.86..11874785.61 rows=100 width=44)
   ->  GroupAggregate  (cost=11874782.86..12699592.78 rows=29993088 width=44)
         ->  Sort  (cost=11874782.86..11949765.58 rows=29993088 width=44)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=78620.91..7556795.26 rows=29993088 width=44)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=132.97..6459593.56 rows=29993088 width=25)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..3719420.32 rows=7499912 width=24)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547962.78 rows=14999823 width=20)
                                 ->  Materialize  (cost=0.56..2946501.18 rows=14996544 width=4)
                                       ->  GroupAggregate  (cost=0.56..2759044.38 rows=14996544 width=9)
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271656.70 rows=59986176 width=9)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271656.70 rows=59986176 width=9)
                     ->  Hash  (cost=50947.42..50947.42 rows=1500042 width=23)
                           ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=23)
(18 rows)

query 18 run 2
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11874782.86..11874785.61 rows=100 width=44)
   ->  GroupAggregate  (cost=11874782.86..12699592.78 rows=29993088 width=44)
         ->  Sort  (cost=11874782.86..11949765.58 rows=29993088 width=44)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=78620.91..7556795.26 rows=29993088 width=44)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=132.97..6459593.56 rows=29993088 width=25)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..3719420.32 rows=7499912 width=24)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547962.78 rows=14999823 width=20)
                                 ->  Materialize  (cost=0.56..2946501.18 rows=14996544 width=4)
                                       ->  GroupAggregate  (cost=0.56..2759044.38 rows=14996544 width=9)
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271656.70 rows=59986176 width=9)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271656.70 rows=59986176 width=9)
                     ->  Hash  (cost=50947.42..50947.42 rows=1500042 width=23)
                           ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=23)
(18 rows)

query 18 run 3
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11874782.86..11874785.61 rows=100 width=44)
   ->  GroupAggregate  (cost=11874782.86..12699592.78 rows=29993088 width=44)
         ->  Sort  (cost=11874782.86..11949765.58 rows=29993088 width=44)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=78620.91..7556795.26 rows=29993088 width=44)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=132.97..6459593.56 rows=29993088 width=25)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..3719420.32 rows=7499912 width=24)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547962.78 rows=14999823 width=20)
                                 ->  Materialize  (cost=0.56..2946501.18 rows=14996544 width=4)
                                       ->  GroupAggregate  (cost=0.56..2759044.38 rows=14996544 width=9)
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271656.70 rows=59986176 width=9)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271656.70 rows=59986176 width=9)
                     ->  Hash  (cost=50947.42..50947.42 rows=1500042 width=23)
                           ->  Seq Scan on customer  (cost=0.00..50947.42 rows=1500042 width=23)
(18 rows)

query 19 run 1
SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3130849.36..3130849.37 rows=1 width=12)
   ->  Aggregate  (cost=3130849.36..3130849.37 rows=1 width=12)
         ->  Hash Join  (cost=104655.15..3130841.07 rows=1106 width=12)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924728.28 rows=1108128 width=21)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=65981.57..65981.57 rows=2000046 width=30)
                     ->  Seq Scan on part  (cost=0.00..65981.57 rows=2000046 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET
                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                   

 Limit  (cost=3130849.36..3130849.37 rows=1 width=12)
   ->  Aggregate  (cost=3130849.36..3130849.37 rows=1 width=12)
         ->  Hash Join  (cost=104655.15..3130841.07 rows=1106 width=12)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924728.28 rows=1108128 width=21)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=65981.57..65981.57 rows=2000046 width=30)
                     ->  Seq Scan on part  (cost=0.00..65981.57 rows=2000046 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3130849.36..3130849.37 rows=1 width=12)
   ->  Aggregate  (cost=3130849.36..3130849.37 rows=1 width=12)
         ->  Hash Join  (cost=104655.15..3130841.07 rows=1106 width=12)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924728.28 rows=1108128 width=21)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=65981.57..65981.57 rows=2000046 width=30)
                     ->  Seq Scan on part  (cost=0.00..65981.57 rows=2000046 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2849122.55..2849122.55 rows=1 width=51)
   ->  Sort  (cost=2849122.55..2849127.55 rows=2000 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=2727188.81..2849112.55 rows=2000 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=55)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=59)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2727139.51..2845279.16 rows=26 width=8)
                     ->  Merge Join  (cost=2727139.51..2845279.03 rows=26 width=8)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2552638.15..2654558.47 rows=905959 width=13)
                                 ->  Sort  (cost=2552638.15..2575287.11 rows=9059584 width=13)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       ->  Bitmap Heap Scan on lineitem  (cost=145187.30..1406224.06 rows=9059584 width=13)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..142922.40 rows=9059584 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=174501.37..175377.93 rows=350626 width=16)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 ->  Nested Loop  (cost=0.43..142209.46 rows=350626 width=16)
                                       ->  Seq Scan on part  (cost=0.00..65981.57 rows=20202 width=4)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=17 width=12)
                                             Index Cond: (ps_partkey = part.p_partkey)
(30 rows)

query 20 run 2
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2849122.55..2849122.55 rows=1 width=51)
   ->  Sort  (cost=2849122.55..2849127.55 rows=2000 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=2727188.81..2849112.55 rows=2000 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=55)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=59)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2727139.51..2845279.16 rows=26 width=8)
                     ->  Merge Join  (cost=2727139.51..2845279.03 rows=26 width=8)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2552638.15..2654558.47 rows=905959 width=13)
                                 ->  Sort  (cost=2552638.15..2575287.11 rows=9059584 width=13)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       ->  Bitmap Heap Scan on lineitem  (cost=145187.30..1406224.06 rows=9059584 width=13)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..142922.40 rows=9059584 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=174501.37..175377.93 rows=350626 width=16)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 ->  Nested Loop  (cost=0.43..142209.46 rows=350626 width=16)
                                       ->  Seq Scan on part  (cost=0.00..65981.57 rows=20202 width=4)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=17 width=12)
                                             Index Cond: (ps_partkey = part.p_partkey)
(30 rows)

query 20 run 3
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2849122.55..2849122.55 rows=1 width=51)
   ->  Sort  (cost=2849122.55..2849127.55 rows=2000 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop Semi Join  (cost=2727188.81..2849112.55 rows=2000 width=51)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=55)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=59)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2727139.51..2845279.16 rows=26 width=8)
                     ->  Merge Join  (cost=2727139.51..2845279.03 rows=26 width=8)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2552638.15..2654558.47 rows=905959 width=13)
                                 ->  Sort  (cost=2552638.15..2575287.11 rows=9059584 width=13)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       ->  Bitmap Heap Scan on lineitem  (cost=145187.30..1406224.06 rows=9059584 width=13)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..142922.40 rows=9059584 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=174501.37..175377.93 rows=350626 width=16)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 ->  Nested Loop  (cost=0.43..142209.46 rows=350626 width=16)
                                       ->  Seq Scan on part  (cost=0.00..65981.57 rows=20202 width=4)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=17 width=12)
                                             Index Cond: (ps_partkey = part.p_partkey)
(30 rows)

query 21 run 1
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4022567.59..4022567.59 rows=1 width=26)
   ->  Sort  (cost=4022567.59..4022567.59 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=4022567.57..4022567.58 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=571355.55..4022567.56 rows=1 width=26)
                     ->  Nested Loop Semi Join  (cost=571354.99..4022560.83 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=571354.42..2583345.13 rows=390870 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.46..1960274.54 rows=799816 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874970.20 rows=19995392 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30)
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448765.79..448765.79 rows=7330414 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..448765.79 rows=7330414 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.63 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
(29 rows)

query 21 run 2
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4022567.59..4022567.59 rows=1 width=26)
   ->  Sort  (cost=4022567.59..4022567.59 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=4022567.57..4022567.58 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=571355.55..4022567.56 rows=1 width=26)
                     ->  Nested Loop Semi Join  (cost=571354.99..4022560.83 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=571354.42..2583345.13 rows=390870 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.46..1960274.54 rows=799816 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874970.20 rows=19995392 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30)
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448765.79..448765.79 rows=7330414 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..448765.79 rows=7330414 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.63 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
(29 rows)

query 21 run 3
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4022567.59..4022567.59 rows=1 width=26)
   ->  Sort  (cost=4022567.59..4022567.59 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=4022567.57..4022567.58 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=571355.55..4022567.56 rows=1 width=26)
                     ->  Nested Loop Semi Join  (cost=571354.99..4022560.83 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=571354.42..2583345.13 rows=390870 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.46..1960274.54 rows=799816 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874970.20 rows=19995392 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30)
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448765.79..448765.79 rows=7330414 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..448765.79 rows=7330414 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.63 rows=4 width=8)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
(29 rows)

query 22 run 1
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161539.91..161539.91 rows=1 width=22)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75442.47..75442.48 rows=1 width=6)
           ->  Seq Scan on customer customer_1  (cost=0.00..75323.10 rows=47744 width=6)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=86097.44..86115.25 rows=7125 width=22)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=85954.94..86061.81 rows=7125 width=22)
               ->  Nested Loop Anti Join  (cost=0.43..85901.50 rows=7125 width=22)
                     ->  Seq Scan on customer  (cost=0.00..75323.10 rows=17500 width=26)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4)
                           Index Cond: (o_custkey = customer.c_custkey)
(13 rows)

query 22 run 2
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161539.91..161539.91 rows=1 width=22)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75442.47..75442.48 rows=1 width=6)
           ->  Seq Scan on customer customer_1  (cost=0.00..75323.10 rows=47744 width=6)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=86097.44..86115.25 rows=7125 width=22)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=85954.94..86061.81 rows=7125 width=22)
               ->  Nested Loop Anti Join  (cost=0.43..85901.50 rows=7125 width=22)
                     ->  Seq Scan on customer  (cost=0.00..75323.10 rows=17500 width=26)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4)
                           Index Cond: (o_custkey = customer.c_custkey)
(13 rows)

query 22 run 3
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161539.91..161539.91 rows=1 width=22)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75442.47..75442.48 rows=1 width=6)
           ->  Seq Scan on customer customer_1  (cost=0.00..75323.10 rows=47744 width=6)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=86097.44..86115.25 rows=7125 width=22)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=85954.94..86061.81 rows=7125 width=22)
               ->  Nested Loop Anti Join  (cost=0.43..85901.50 rows=7125 width=22)
                     ->  Seq Scan on customer  (cost=0.00..75323.10 rows=17500 width=26)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4)
                           Index Cond: (o_custkey = customer.c_custkey)
(13 rows)

