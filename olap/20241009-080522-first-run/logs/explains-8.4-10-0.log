query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3417735.12..3417735.13 rows=1 width=33)
   ->  Sort  (cost=3417735.12..3417735.14 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3417734.83..3417735.10 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=59307433 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3417735.12..3417735.13 rows=1 width=33)
   ->  Sort  (cost=3417735.12..3417735.14 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3417734.83..3417735.10 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=59307433 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3417735.12..3417735.13 rows=1 width=33)
   ->  Sort  (cost=3417735.12..3417735.14 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3417734.83..3417735.10 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=59307433 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102912.31..1102912.32 rows=1 width=195)
   ->  Sort  (cost=1102912.31..1102912.32 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=564598.30..1102912.30 rows=1 width=195)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89792.07 rows=7639 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=564586.54..584587.79 rows=1600100 width=177)
                     ->  Sort  (cost=564586.54..568586.79 rows=1600100 width=177)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..308285.39 rows=1600100 width=177)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=169)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=169)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=147)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=69.45..69.46 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..69.43 rows=4 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..68.13 rows=19 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..66.31 rows=19 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=19 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 2 run 2
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102912.31..1102912.32 rows=1 width=195)
   ->  Sort  (cost=1102912.31..1102912.32 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=564598.30..1102912.30 rows=1 width=195)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89792.07 rows=7639 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=564586.54..584587.79 rows=1600100 width=177)
                     ->  Sort  (cost=564586.54..568586.79 rows=1600100 width=177)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..308285.39 rows=1600100 width=177)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=169)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=169)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=147)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=69.45..69.46 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..69.43 rows=4 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..68.13 rows=19 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..66.31 rows=19 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=19 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 2 run 3
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102912.31..1102912.32 rows=1 width=195)
   ->  Sort  (cost=1102912.31..1102912.32 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=564598.30..1102912.30 rows=1 width=195)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89792.07 rows=7639 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=564586.54..584587.79 rows=1600100 width=177)
                     ->  Sort  (cost=564586.54..568586.79 rows=1600100 width=177)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..308285.39 rows=1600100 width=177)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=169)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=169)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=147)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=69.45..69.46 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..69.43 rows=4 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..68.13 rows=19 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..66.31 rows=19 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=19 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 3 run 1
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3654558.37..3654558.39 rows=10 width=28)
   ->  Sort  (cost=3654558.37..3662280.78 rows=3088965 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3495138.00..3587806.95 rows=3088965 width=28)
               ->  Sort  (cost=3495138.00..3502860.41 rows=3088965 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=638440.55..3114656.77 rows=3088965 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=32538018 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=613686.53..613686.53 rows=1424002 width=12)
                                 ->  Hash Join  (cost=143582.31..613686.53 rows=1424002 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84778.05..442381.76 rows=7146217 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..82991.49 rows=7146217 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.01..55068.01 rows=298900 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.01 rows=298900 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3654558.37..3654558.39 rows=10 width=28)
   ->  Sort  (cost=3654558.37..3662280.78 rows=3088965 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3495138.00..3587806.95 rows=3088965 width=28)
               ->  Sort  (cost=3495138.00..3502860.41 rows=3088965 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=638440.55..3114656.77 rows=3088965 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=32538018 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=613686.53..613686.53 rows=1424002 width=12)
                                 ->  Hash Join  (cost=143582.31..613686.53 rows=1424002 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84778.05..442381.76 rows=7146217 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..82991.49 rows=7146217 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.01..55068.01 rows=298900 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.01 rows=298900 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3654558.37..3654558.39 rows=10 width=28)
   ->  Sort  (cost=3654558.37..3662280.78 rows=3088965 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3495138.00..3587806.95 rows=3088965 width=28)
               ->  Sort  (cost=3495138.00..3502860.41 rows=3088965 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=638440.55..3114656.77 rows=3088965 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=32538018 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=613686.53..613686.53 rows=1424002 width=12)
                                 ->  Hash Join  (cost=143582.31..613686.53 rows=1424002 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84778.05..442381.76 rows=7146217 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..82991.49 rows=7146217 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.01..55068.01 rows=298900 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.01 rows=298900 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=418427.69..418427.69 rows=1 width=16)
   ->  Sort  (cost=418427.69..418427.69 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=418427.67..418427.68 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=7908.72..418352.23 rows=15087 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=7908.72..284442.55 rows=550522 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7771.09 rows=550522 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..11.58 rows=49 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
(12 rows)

query 4 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=418427.69..418427.69 rows=1 width=16)
   ->  Sort  (cost=418427.69..418427.69 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=418427.67..418427.68 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=7908.72..418352.23 rows=15087 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=7908.72..284442.55 rows=550522 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7771.09 rows=550522 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..11.58 rows=49 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
(12 rows)

query 4 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=418427.69..418427.69 rows=1 width=16)
   ->  Sort  (cost=418427.69..418427.69 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=418427.67..418427.68 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=7908.72..418352.23 rows=15087 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=7908.72..284442.55 rows=550522 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7771.09 rows=550522 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..11.58 rows=49 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
(12 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2484465.68..2484465.68 rows=1 width=42)
   ->  Sort  (cost=2484465.68..2484465.74 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2484465.12..2484465.55 rows=25 width=42)
               ->  Hash Join  (cost=420158.64..2484116.34 rows=69755 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=415412.64..2443186.89 rows=1774295 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785084.40 rows=59985840 width=24)
                           ->  Hash  (cost=409866.69..409866.69 rows=443676 width=38)
                                 ->  Hash Join  (cost=95559.31..409866.69 rows=443676 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=31863.76..333415.46 rows=2218380 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31309.17 rows=2218380 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.55..59945.55 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.55 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 5 run 2
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2484465.68..2484465.68 rows=1 width=42)
   ->  Sort  (cost=2484465.68..2484465.74 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2484465.12..2484465.55 rows=25 width=42)
               ->  Hash Join  (cost=420158.64..2484116.34 rows=69755 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=415412.64..2443186.89 rows=1774295 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785084.40 rows=59985840 width=24)
                           ->  Hash  (cost=409866.69..409866.69 rows=443676 width=38)
                                 ->  Hash Join  (cost=95559.31..409866.69 rows=443676 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=31863.76..333415.46 rows=2218380 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31309.17 rows=2218380 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.55..59945.55 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.55 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 5 run 3
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2484465.68..2484465.68 rows=1 width=42)
   ->  Sort  (cost=2484465.68..2484465.74 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2484465.12..2484465.55 rows=25 width=42)
               ->  Hash Join  (cost=420158.64..2484116.34 rows=69755 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=415412.64..2443186.89 rows=1774295 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785084.40 rows=59985840 width=24)
                           ->  Hash  (cost=409866.69..409866.69 rows=443676 width=38)
                                 ->  Hash Join  (cost=95559.31..409866.69 rows=443676 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=31863.76..333415.46 rows=2218380 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31309.17 rows=2218380 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.55..59945.55 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.55 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1114041.44..1114041.45 rows=1 width=16)
   ->  Aggregate  (cost=1114041.44..1114041.45 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=222680.72..1111083.85 rows=1183037 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..222384.96 rows=1183037 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 2
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1114041.44..1114041.45 rows=1 width=16)
   ->  Aggregate  (cost=1114041.44..1114041.45 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=222680.72..1111083.85 rows=1183037 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..222384.96 rows=1183037 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 3
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1114041.44..1114041.45 rows=1 width=16)
   ->  Aggregate  (cost=1114041.44..1114041.45 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=222680.72..1111083.85 rows=1183037 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..222384.96 rows=1183037 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2729999.33..2729999.33 rows=1 width=72)
   ->  Sort  (cost=2729999.33..2730141.92 rows=57036 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2728430.84..2729714.15 rows=57036 width=72)
               ->  Hash Join  (cost=897015.58..2727860.48 rows=57036 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=892269.58..2693246.83 rows=1450607 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=318222.43..1775654.97 rows=18147103 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..313685.65 rows=18147103 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=546178.24..546178.24 rows=1199033 width=60)
                                 ->  Hash Join  (cost=59663.11..546178.24 rows=1199033 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418275.13 rows=14999913 width=8)
                                       ->  Hash  (cost=58164.31..58164.31 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.31 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2729999.33..2729999.33 rows=1 width=72)
   ->  Sort  (cost=2729999.33..2730141.92 rows=57036 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2728430.84..2729714.15 rows=57036 width=72)
               ->  Hash Join  (cost=897015.58..2727860.48 rows=57036 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=892269.58..2693246.83 rows=1450607 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=318222.43..1775654.97 rows=18147103 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..313685.65 rows=18147103 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=546178.24..546178.24 rows=1199033 width=60)
                                 ->  Hash Join  (cost=59663.11..546178.24 rows=1199033 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418275.13 rows=14999913 width=8)
                                       ->  Hash  (cost=58164.31..58164.31 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.31 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2729999.33..2729999.33 rows=1 width=72)
   ->  Sort  (cost=2729999.33..2730141.92 rows=57036 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2728430.84..2729714.15 rows=57036 width=72)
               ->  Hash Join  (cost=897015.58..2727860.48 rows=57036 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=892269.58..2693246.83 rows=1450607 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=318222.43..1775654.97 rows=18147103 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..313685.65 rows=18147103 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=546178.24..546178.24 rows=1199033 width=60)
                                 ->  Hash Join  (cost=59663.11..546178.24 rows=1199033 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418275.13 rows=14999913 width=8)
                                       ->  Hash  (cost=58164.31..58164.31 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.31 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1275683.96..1275683.96 rows=1 width=46)
   ->  Sort  (cost=1275683.96..1275685.83 rows=748 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1275654.04..1275680.22 rows=748 width=46)
               ->  Hash Join  (cost=515300.05..1275470.95 rows=24412 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=515298.49..1275011.66 rows=24412 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=510802.49..1270023.18 rows=24836 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..749145.67 rows=399908 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66560.09 rows=13334 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.80 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=495519.23..495519.23 rows=931541 width=8)
                                       ->  Hash Join  (cost=130595.88..495519.23 rows=931541 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=66900.33..405041.89 rows=4657704 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..65735.91 rows=4657704 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.55..59945.55 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.55 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1275683.96..1275683.96 rows=1 width=46)
   ->  Sort  (cost=1275683.96..1275685.83 rows=748 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1275654.04..1275680.22 rows=748 width=46)
               ->  Hash Join  (cost=515300.05..1275470.95 rows=24412 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=515298.49..1275011.66 rows=24412 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=510802.49..1270023.18 rows=24836 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..749145.67 rows=399908 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66560.09 rows=13334 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.80 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=495519.23..495519.23 rows=931541 width=8)
                                       ->  Hash Join  (cost=130595.88..495519.23 rows=931541 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=66900.33..405041.89 rows=4657704 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..65735.91 rows=4657704 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.55..59945.55 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.55 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1275683.96..1275683.96 rows=1 width=46)
   ->  Sort  (cost=1275683.96..1275685.83 rows=748 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1275654.04..1275680.22 rows=748 width=46)
               ->  Hash Join  (cost=515300.05..1275470.95 rows=24412 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=515298.49..1275011.66 rows=24412 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=510802.49..1270023.18 rows=24836 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..749145.67 rows=399908 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66560.09 rows=13334 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.80 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=495519.23..495519.23 rows=931541 width=8)
                                       ->  Hash Join  (cost=130595.88..495519.23 rows=931541 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=66900.33..405041.89 rows=4657704 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..65735.91 rows=4657704 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.55..59945.55 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.55 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2724512.64..2724512.65 rows=1 width=61)
   ->  Sort  (cost=2724512.64..2724512.95 rows=123 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2724508.65..2724512.03 rows=123 width=61)
               ->  Hash Join  (cost=67824.32..2724507.72 rows=123 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=67822.76..2724503.86 rows=123 width=39)
                           ->  Nested Loop  (cost=67822.76..2724028.05 rows=123 width=39)
                                 ->  Nested Loop  (cost=67822.76..2723621.32 rows=125 width=43)
                                       ->  Hash Join  (cost=67822.76..410077.38 rows=404064 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                                             ->  Hash  (cost=66560.09..66560.09 rows=101014 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66560.09 rows=101014 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 9 run 2
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2724512.64..2724512.65 rows=1 width=61)
   ->  Sort  (cost=2724512.64..2724512.95 rows=123 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2724508.65..2724512.03 rows=123 width=61)
               ->  Hash Join  (cost=67824.32..2724507.72 rows=123 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=67822.76..2724503.86 rows=123 width=39)
                           ->  Nested Loop  (cost=67822.76..2724028.05 rows=123 width=39)
                                 ->  Nested Loop  (cost=67822.76..2723621.32 rows=125 width=43)
                                       ->  Hash Join  (cost=67822.76..410077.38 rows=404064 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                                             ->  Hash  (cost=66560.09..66560.09 rows=101014 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66560.09 rows=101014 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 9 run 3
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2724512.64..2724512.65 rows=1 width=61)
   ->  Sort  (cost=2724512.64..2724512.95 rows=123 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2724508.65..2724512.03 rows=123 width=61)
               ->  Hash Join  (cost=67824.32..2724507.72 rows=123 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=67822.76..2724503.86 rows=123 width=39)
                           ->  Nested Loop  (cost=67822.76..2724028.05 rows=123 width=39)
                                 ->  Nested Loop  (cost=67822.76..2723621.32 rows=125 width=43)
                                       ->  Hash Join  (cost=67822.76..410077.38 rows=404064 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                                             ->  Hash  (cost=66560.09..66560.09 rows=101014 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66560.09 rows=101014 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2712811.51..2712811.56 rows=20 width=187)
   ->  Sort  (cost=2712811.51..2714178.49 rows=546792 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2676389.89..2698261.57 rows=546792 width=187)
               ->  Sort  (cost=2676389.89..2677756.87 rows=546792 width=187)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=393902.99..2591838.39 rows=546792 width=187)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=393901.43..2584318.43 rows=546792 width=165)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=291606.40..2434503.04 rows=546792 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=14718525 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=284640.83..284640.83 rows=557246 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8006.14..284640.83 rows=557246 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7866.83 rows=557246 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.01..51318.01 rows=1500001 width=149)
                                       ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=149)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 2
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2712811.51..2712811.56 rows=20 width=187)
   ->  Sort  (cost=2712811.51..2714178.49 rows=546792 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2676389.89..2698261.57 rows=546792 width=187)
               ->  Sort  (cost=2676389.89..2677756.87 rows=546792 width=187)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=393902.99..2591838.39 rows=546792 width=187)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=393901.43..2584318.43 rows=546792 width=165)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=291606.40..2434503.04 rows=546792 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=14718525 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=284640.83..284640.83 rows=557246 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8006.14..284640.83 rows=557246 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7866.83 rows=557246 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.01..51318.01 rows=1500001 width=149)
                                       ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=149)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 3
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2712811.51..2712811.56 rows=20 width=187)
   ->  Sort  (cost=2712811.51..2714178.49 rows=546792 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2676389.89..2698261.57 rows=546792 width=187)
               ->  Sort  (cost=2676389.89..2677756.87 rows=546792 width=187)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=393902.99..2591838.39 rows=546792 width=187)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=393901.43..2584318.43 rows=546792 width=165)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=291606.40..2434503.04 rows=546792 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935049.00 rows=14718525 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=284640.83..284640.83 rows=557246 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8006.14..284640.83 rows=557246 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7866.83 rows=557246 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.01..51318.01 rows=1500001 width=149)
                                       ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=149)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 11 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691164.38..691164.38 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=324550.63..324550.64 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323750.57 rows=320020 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=366613.74..367413.79 rows=320020 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=353012.89..365013.64 rows=320020 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=353012.89..353812.94 rows=320020 width=16)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=2337.64..323750.57 rows=320020 width=16)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=20)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                             Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(31 rows)

query 11 run 2
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691164.38..691164.38 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=324550.63..324550.64 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323750.57 rows=320020 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=366613.74..367413.79 rows=320020 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=353012.89..365013.64 rows=320020 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=353012.89..353812.94 rows=320020 width=16)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=2337.64..323750.57 rows=320020 width=16)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=20)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                             Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(31 rows)

query 11 run 3
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691164.38..691164.38 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=324550.63..324550.64 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323750.57 rows=320020 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=366613.74..367413.79 rows=320020 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=353012.89..365013.64 rows=320020 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=353012.89..353812.94 rows=320020 width=16)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=2337.64..323750.57 rows=320020 width=16)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..258208.99 rows=8000499 width=20)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                             Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(31 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3157697.76..3157697.76 rows=1 width=27)
   ->  Sort  (cost=3157697.76..3157697.76 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3157697.72..3157697.75 rows=1 width=27)
               ->  Merge Join  (cost=2559279.25..3155676.18 rows=269539 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554972.56 rows=14999913 width=20)
                     ->  Sort  (cost=2559220.00..2559893.85 rows=269539 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534907.40 rows=269539 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3157697.76..3157697.76 rows=1 width=27)
   ->  Sort  (cost=3157697.76..3157697.76 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3157697.72..3157697.75 rows=1 width=27)
               ->  Merge Join  (cost=2559279.25..3155676.18 rows=269539 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554972.56 rows=14999913 width=20)
                     ->  Sort  (cost=2559220.00..2559893.85 rows=269539 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534907.40 rows=269539 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3157697.76..3157697.76 rows=1 width=27)
   ->  Sort  (cost=3157697.76..3157697.76 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3157697.72..3157697.75 rows=1 width=27)
               ->  Merge Join  (cost=2559279.25..3155676.18 rows=269539 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554972.56 rows=14999913 width=20)
                     ->  Sort  (cost=2559220.00..2559893.85 rows=269539 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534907.40 rows=269539 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910467.14..2910467.15 rows=1 width=8)
   ->  Sort  (cost=2910467.14..2910467.64 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2910463.64..2910466.14 rows=200 width=8)
               ->  GroupAggregate  (cost=2355026.18..2887963.63 rows=1500001 width=8)
                     ->  Merge Left Join  (cost=2355026.18..2794971.22 rows=14848480 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.83 rows=1500001 width=4)
                           ->  Materialize  (cost=2355016.39..2540622.39 rows=14848480 width=8)
                                 ->  Sort  (cost=2355016.39..2392137.59 rows=14848480 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455774.91 rows=14848480 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 2
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910467.14..2910467.15 rows=1 width=8)
   ->  Sort  (cost=2910467.14..2910467.64 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2910463.64..2910466.14 rows=200 width=8)
               ->  GroupAggregate  (cost=2355026.18..2887963.63 rows=1500001 width=8)
                     ->  Merge Left Join  (cost=2355026.18..2794971.22 rows=14848480 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.83 rows=1500001 width=4)
                           ->  Materialize  (cost=2355016.39..2540622.39 rows=14848480 width=8)
                                 ->  Sort  (cost=2355016.39..2392137.59 rows=14848480 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455774.91 rows=14848480 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 3
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910467.14..2910467.15 rows=1 width=8)
   ->  Sort  (cost=2910467.14..2910467.64 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2910463.64..2910466.14 rows=200 width=8)
               ->  GroupAggregate  (cost=2355026.18..2887963.63 rows=1500001 width=8)
                     ->  Merge Left Join  (cost=2355026.18..2794971.22 rows=14848480 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.83 rows=1500001 width=4)
                           ->  Materialize  (cost=2355016.39..2540622.39 rows=14848480 width=8)
                                 ->  Sort  (cost=2355016.39..2392137.59 rows=14848480 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455774.91 rows=14848480 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=813899.01..813899.04 rows=1 width=37)
   ->  Aggregate  (cost=813899.01..813899.04 rows=1 width=37)
         ->  Hash Join  (cost=113091.50..810234.17 rows=732968 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12857.54..671245.43 rows=732968 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12674.30 rows=732968 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.87..61559.87 rows=2000087 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.87 rows=2000087 width=25)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=813899.01..813899.04 rows=1 width=37)
   ->  Aggregate  (cost=813899.01..813899.04 rows=1 width=37)
         ->  Hash Join  (cost=113091.50..810234.17 rows=732968 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12857.54..671245.43 rows=732968 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12674.30 rows=732968 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.87..61559.87 rows=2000087 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.87 rows=2000087 width=25)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=813899.01..813899.04 rows=1 width=37)
   ->  Aggregate  (cost=813899.01..813899.04 rows=1 width=37)
         ->  Hash Join  (cost=113091.50..810234.17 rows=732968 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12857.54..671245.43 rows=732968 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12674.30 rows=732968 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.87..61559.87 rows=2000087 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.87 rows=2000087 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2526238.00..2526239.14 rows=1 width=104)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1260102.36..1260102.37 rows=1 width=32)
           ->  HashAggregate  (cost=1259984.90..1260053.42 rows=3915 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=40479.33..1248444.31 rows=2308118 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39902.30 rows=2308118 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1266135.64..1270605.11 rows=3915 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=72)
         ->  Sort  (cost=1266135.64..1266145.42 rows=3915 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1265755.20..1265902.01 rows=3915 width=36)
                     ->  HashAggregate  (cost=1265755.20..1265862.86 rows=3915 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=40479.33..1248444.31 rows=2308118 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39902.30 rows=2308118 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2526238.00..2526239.14 rows=1 width=104)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1260102.36..1260102.37 rows=1 width=32)
           ->  HashAggregate  (cost=1259984.90..1260053.42 rows=3915 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=40479.33..1248444.31 rows=2308118 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39902.30 rows=2308118 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1266135.64..1270605.11 rows=3915 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=72)
         ->  Sort  (cost=1266135.64..1266145.42 rows=3915 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1265755.20..1265902.01 rows=3915 width=36)
                     ->  HashAggregate  (cost=1265755.20..1265862.86 rows=3915 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=40479.33..1248444.31 rows=2308118 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39902.30 rows=2308118 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2526238.00..2526239.14 rows=1 width=104)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1260102.36..1260102.37 rows=1 width=32)
           ->  HashAggregate  (cost=1259984.90..1260053.42 rows=3915 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=40479.33..1248444.31 rows=2308118 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39902.30 rows=2308118 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1266135.64..1270605.11 rows=3915 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=72)
         ->  Sort  (cost=1266135.64..1266145.42 rows=3915 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1265755.20..1265902.01 rows=3915 width=36)
                     ->  HashAggregate  (cost=1265755.20..1265862.86 rows=3915 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=40479.33..1248444.31 rows=2308118 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39902.30 rows=2308118 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501458.13..501458.13 rows=1 width=40)
   ->  Sort  (cost=501458.13..501522.43 rows=25721 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=494148.76..501329.52 rows=25721 width=40)
               ->  Sort  (cost=494148.76..495520.61 rows=548740 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98489.26..432190.03 rows=548740 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3498.53..281708.76 rows=4000250 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=1010 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91561.18..91561.18 rows=274365 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91561.18 rows=274365 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501458.13..501458.13 rows=1 width=40)
   ->  Sort  (cost=501458.13..501522.43 rows=25721 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=494148.76..501329.52 rows=25721 width=40)
               ->  Sort  (cost=494148.76..495520.61 rows=548740 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98489.26..432190.03 rows=548740 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3498.53..281708.76 rows=4000250 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=1010 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91561.18..91561.18 rows=274365 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91561.18 rows=274365 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501458.13..501458.13 rows=1 width=40)
   ->  Sort  (cost=501458.13..501522.43 rows=25721 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=494148.76..501329.52 rows=25721 width=40)
               ->  Sort  (cost=494148.76..495520.61 rows=548740 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98489.26..432190.03 rows=548740 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3498.53..281708.76 rows=4000250 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=1010 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91561.18..91561.18 rows=274365 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91561.18 rows=274365 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=10865152.69..10865152.70 rows=1 width=10)
   ->  Aggregate  (cost=10865152.69..10865152.70 rows=1 width=10)
         ->  Nested Loop  (cost=10265385.37..10865102.80 rows=19954 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10265385.37..10767705.67 rows=1901 width=40)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10193715.66..10672189.92 rows=1905364 width=11)
                           ->  Sort  (cost=10193715.66..10343680.26 rows=59985840 width=11)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..1785084.40 rows=59985840 width=11)
                     ->  Sort  (cost=71669.71..71674.70 rows=1996 width=4)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..71560.30 rows=1996 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.77 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 17 run 2
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=10865152.69..10865152.70 rows=1 width=10)
   ->  Aggregate  (cost=10865152.69..10865152.70 rows=1 width=10)
         ->  Nested Loop  (cost=10265385.37..10865102.80 rows=19954 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10265385.37..10767705.67 rows=1901 width=40)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10193715.66..10672189.92 rows=1905364 width=11)
                           ->  Sort  (cost=10193715.66..10343680.26 rows=59985840 width=11)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..1785084.40 rows=59985840 width=11)
                     ->  Sort  (cost=71669.71..71674.70 rows=1996 width=4)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..71560.30 rows=1996 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.77 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 17 run 3
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=10865152.69..10865152.70 rows=1 width=10)
   ->  Aggregate  (cost=10865152.69..10865152.70 rows=1 width=10)
         ->  Nested Loop  (cost=10265385.37..10865102.80 rows=19954 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10265385.37..10767705.67 rows=1901 width=40)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10193715.66..10672189.92 rows=1905364 width=11)
                           ->  Sort  (cost=10193715.66..10343680.26 rows=59985840 width=11)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..1785084.40 rows=59985840 width=11)
                     ->  Sort  (cost=71669.71..71674.70 rows=1996 width=4)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..71560.30 rows=1996 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.77 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 18 run 1
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11459245.77..11459248.77 rows=100 width=48)
   ->  GroupAggregate  (cost=11459245.77..12359033.31 rows=29992918 width=48)
         ->  Sort  (cost=11459245.77..11534228.06 rows=29992918 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=79184.27..7141285.00 rows=29992918 width=48)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.24..6043718.62 rows=29992918 width=29)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3243664.38 rows=7499956 width=26)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..554972.56 rows=14999913 width=22)
                                 ->  Materialize  (cost=0.00..2646053.61 rows=411074 width=4)
                                       ->  GroupAggregate  (cost=0.00..2637832.13 rows=411074 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331736.82 rows=59985840 width=11)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331736.82 rows=59985840 width=11)
                     ->  Hash  (cost=51318.01..51318.01 rows=1500001 width=23)
                           ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=23)
(18 rows)

query 18 run 2
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11459245.77..11459248.77 rows=100 width=48)
   ->  GroupAggregate  (cost=11459245.77..12359033.31 rows=29992918 width=48)
         ->  Sort  (cost=11459245.77..11534228.06 rows=29992918 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=79184.27..7141285.00 rows=29992918 width=48)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.24..6043718.62 rows=29992918 width=29)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3243664.38 rows=7499956 width=26)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..554972.56 rows=14999913 width=22)
                                 ->  Materialize  (cost=0.00..2646053.61 rows=411074 width=4)
                                       ->  GroupAggregate  (cost=0.00..2637832.13 rows=411074 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331736.82 rows=59985840 width=11)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331736.82 rows=59985840 width=11)
                     ->  Hash  (cost=51318.01..51318.01 rows=1500001 width=23)
                           ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=23)
(18 rows)

query 18 run 3
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11459245.77..11459248.77 rows=100 width=48)
   ->  GroupAggregate  (cost=11459245.77..12359033.31 rows=29992918 width=48)
         ->  Sort  (cost=11459245.77..11534228.06 rows=29992918 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=79184.27..7141285.00 rows=29992918 width=48)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.24..6043718.62 rows=29992918 width=29)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3243664.38 rows=7499956 width=26)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..554972.56 rows=14999913 width=22)
                                 ->  Materialize  (cost=0.00..2646053.61 rows=411074 width=4)
                                       ->  GroupAggregate  (cost=0.00..2637832.13 rows=411074 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331736.82 rows=59985840 width=11)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331736.82 rows=59985840 width=11)
                     ->  Hash  (cost=51318.01..51318.01 rows=1500001 width=23)
                           ->  Seq Scan on customer  (cost=0.00..51318.01 rows=1500001 width=23)
(18 rows)

query 19 run 1
SET
SET


 Limit  (cost=3197118.11..3197118.12 rows=1 width=16)
   ->  Aggregate  (cost=3197118.11..3197118.12 rows=1 width=16)
         ->  Hash Join  (cost=105234.17..3197115.37 rows=1096 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984801.20 rows=1150711 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66560.09..66560.09 rows=2000087 width=30)
                     ->  Seq Scan on part  (cost=0.00..66560.09 rows=2000087 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET


 Limit  (cost=3197118.11..3197118.12 rows=1 width=16)
   ->  Aggregate  (cost=3197118.11..3197118.12 rows=1 width=16)
         ->  Hash Join  (cost=105234.17..3197115.37 rows=1096 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984801.20 rows=1150711 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66560.09..66560.09 rows=2000087 width=30)
                     ->  Seq Scan on part  (cost=0.00..66560.09 rows=2000087 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET


 Limit  (cost=3197118.11..3197118.12 rows=1 width=16)
   ->  Aggregate  (cost=3197118.11..3197118.12 rows=1 width=16)
         ->  Hash Join  (cost=105234.17..3197115.37 rows=1096 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984801.20 rows=1150711 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66560.09..66560.09 rows=2000087 width=30)
                     ->  Seq Scan on part  (cost=0.00..66560.09 rows=2000087 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910730.42..2910730.42 rows=1 width=52)
   ->  Sort  (cost=2910730.42..2910730.42 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=2910720.50..2910730.41 rows=1 width=52)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=2910719.18..2910729.06 rows=3 width=56)
                     ->  HashAggregate  (cost=2910719.18..2910719.21 rows=3 width=8)
                           ->  Merge Join  (cost=2791456.45..2910719.17 rows=3 width=8)
                                 Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  GroupAggregate  (cost=2609274.93..2712275.35 rows=895656 width=15)
                                       ->  Sort  (cost=2609274.93..2631666.33 rows=8956558 width=15)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Bitmap Heap Scan on lineitem  (cost=157062.34..1476636.71 rows=8956558 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..154823.20 rows=8956558 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=182181.51..183123.96 rows=376979 width=16)
                                       Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                       ->  Nested Loop  (cost=66610.60..147265.48 rows=376979 width=16)
                                             ->  HashAggregate  (cost=66610.60..66812.62 rows=20203 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66560.09 rows=20203 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.74 rows=19 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
(30 rows)

query 20 run 2
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910730.42..2910730.42 rows=1 width=52)
   ->  Sort  (cost=2910730.42..2910730.42 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=2910720.50..2910730.41 rows=1 width=52)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=2910719.18..2910729.06 rows=3 width=56)
                     ->  HashAggregate  (cost=2910719.18..2910719.21 rows=3 width=8)
                           ->  Merge Join  (cost=2791456.45..2910719.17 rows=3 width=8)
                                 Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  GroupAggregate  (cost=2609274.93..2712275.35 rows=895656 width=15)
                                       ->  Sort  (cost=2609274.93..2631666.33 rows=8956558 width=15)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Bitmap Heap Scan on lineitem  (cost=157062.34..1476636.71 rows=8956558 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..154823.20 rows=8956558 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=182181.51..183123.96 rows=376979 width=16)
                                       Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                       ->  Nested Loop  (cost=66610.60..147265.48 rows=376979 width=16)
                                             ->  HashAggregate  (cost=66610.60..66812.62 rows=20203 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66560.09 rows=20203 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.74 rows=19 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
(30 rows)

query 20 run 3
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910730.42..2910730.42 rows=1 width=52)
   ->  Sort  (cost=2910730.42..2910730.42 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=2910720.50..2910730.41 rows=1 width=52)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=2910719.18..2910729.06 rows=3 width=56)
                     ->  HashAggregate  (cost=2910719.18..2910719.21 rows=3 width=8)
                           ->  Merge Join  (cost=2791456.45..2910719.17 rows=3 width=8)
                                 Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  GroupAggregate  (cost=2609274.93..2712275.35 rows=895656 width=15)
                                       ->  Sort  (cost=2609274.93..2631666.33 rows=8956558 width=15)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Bitmap Heap Scan on lineitem  (cost=157062.34..1476636.71 rows=8956558 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..154823.20 rows=8956558 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=182181.51..183123.96 rows=376979 width=16)
                                       Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                       ->  Nested Loop  (cost=66610.60..147265.48 rows=376979 width=16)
                                             ->  HashAggregate  (cost=66610.60..66812.62 rows=20203 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66560.09 rows=20203 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.74 rows=19 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'IRAQ'::bpchar)
(30 rows)

query 21 run 1
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5038436.54..5038436.55 rows=1 width=26)
   ->  Sort  (cost=5038436.54..5038436.55 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=5038436.52..5038436.53 rows=1 width=26)
               ->  Nested Loop  (cost=2771565.04..5038436.51 rows=1 width=26)
                     ->  Nested Loop Anti Join  (cost=2771565.04..5038432.61 rows=1 width=34)
                           Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                           ->  Hash Semi Join  (cost=2771565.04..5038420.27 rows=1 width=38)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=2337.64..2020230.42 rows=786148 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1935049.00 rows=19995280 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                             ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1785084.40..1785084.40 rows=59985840 width=8)
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1785084.40 rows=59985840 width=8)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..11.61 rows=49 width=8)
                                 Index Cond: (l3.l_orderkey = l1.l_orderkey)
                                 Filter: (l3.l_receiptdate > l3.l_commitdate)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.89 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(30 rows)

query 21 run 2
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5038436.54..5038436.55 rows=1 width=26)
   ->  Sort  (cost=5038436.54..5038436.55 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=5038436.52..5038436.53 rows=1 width=26)
               ->  Nested Loop  (cost=2771565.04..5038436.51 rows=1 width=26)
                     ->  Nested Loop Anti Join  (cost=2771565.04..5038432.61 rows=1 width=34)
                           Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                           ->  Hash Semi Join  (cost=2771565.04..5038420.27 rows=1 width=38)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=2337.64..2020230.42 rows=786148 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1935049.00 rows=19995280 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                             ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1785084.40..1785084.40 rows=59985840 width=8)
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1785084.40 rows=59985840 width=8)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..11.61 rows=49 width=8)
                                 Index Cond: (l3.l_orderkey = l1.l_orderkey)
                                 Filter: (l3.l_receiptdate > l3.l_commitdate)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.89 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(30 rows)

query 21 run 3
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5038436.54..5038436.55 rows=1 width=26)
   ->  Sort  (cost=5038436.54..5038436.55 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=5038436.52..5038436.53 rows=1 width=26)
               ->  Nested Loop  (cost=2771565.04..5038436.51 rows=1 width=26)
                     ->  Nested Loop Anti Join  (cost=2771565.04..5038432.61 rows=1 width=34)
                           Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                           ->  Hash Semi Join  (cost=2771565.04..5038420.27 rows=1 width=38)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=2337.64..2020230.42 rows=786148 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1935049.00 rows=19995280 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                             ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1785084.40..1785084.40 rows=59985840 width=8)
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1785084.40 rows=59985840 width=8)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..11.61 rows=49 width=8)
                                 Index Cond: (l3.l_orderkey = l1.l_orderkey)
                                 Filter: (l3.l_receiptdate > l3.l_commitdate)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.89 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(30 rows)

query 22 run 1
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191025.08..191025.08 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75810.65..75810.66 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.03 rows=47050 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=115214.42..115236.69 rows=8910 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=114991.67..115169.87 rows=8910 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..114924.84 rows=8910 width=24)
                     ->  Seq Scan on customer  (cost=0.00..75693.03 rows=17240 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..32.70 rows=21 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

query 22 run 2
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191025.08..191025.08 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75810.65..75810.66 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.03 rows=47050 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=115214.42..115236.69 rows=8910 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=114991.67..115169.87 rows=8910 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..114924.84 rows=8910 width=24)
                     ->  Seq Scan on customer  (cost=0.00..75693.03 rows=17240 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..32.70 rows=21 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

query 22 run 3
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191025.08..191025.08 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75810.65..75810.66 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.03 rows=47050 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=115214.42..115236.69 rows=8910 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=114991.67..115169.87 rows=8910 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..114924.84 rows=8910 width=24)
                     ->  Seq Scan on customer  (cost=0.00..75693.03 rows=17240 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..32.70 rows=21 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

