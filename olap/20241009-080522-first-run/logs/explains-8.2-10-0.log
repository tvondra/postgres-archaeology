query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3828621.07..3828621.08 rows=1 width=51)
   ->  Sort  (cost=3828621.07..3828621.09 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3828620.72..3828620.99 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59980163 width=51)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3828621.07..3828621.08 rows=1 width=51)
   ->  Sort  (cost=3828621.07..3828621.09 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3828620.72..3828620.99 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59980163 width=51)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3828621.07..3828621.08 rows=1 width=51)
   ->  Sort  (cost=3828621.07..3828621.09 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3828620.72..3828620.99 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59980163 width=51)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246796.62..246796.62 rows=1 width=215)
   ->  Sort  (cost=246796.62..246796.62 rows=1 width=215)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..246796.61 rows=1 width=215)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.00..246795.53 rows=1 width=219)
                     ->  Nested Loop  (cost=0.00..246794.50 rows=1 width=190)
                           ->  Nested Loop  (cost=0.00..246791.42 rows=1 width=37)
                                 Join Filter: (partsupp.ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.00 rows=2 width=33)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..10.88 rows=160 width=19)
                                       Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=517.75..517.76 rows=1 width=11)
                                         ->  Nested Loop  (cost=1.56..517.67 rows=32 width=11)
                                               Join Filter: (nation.n_regionkey = region.r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.56..514.60 rows=160 width=15)
                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..510.84 rows=160 width=15)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..9.38 rows=160 width=15)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.12 rows=1 width=8)
                                                                 Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.07 rows=1 width=161)
                                 Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=37)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                     Filter: (r_name = 'AMERICA'::bpchar)
(34 rows)

query 2 run 2
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246796.62..246796.62 rows=1 width=215)
   ->  Sort  (cost=246796.62..246796.62 rows=1 width=215)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..246796.61 rows=1 width=215)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.00..246795.53 rows=1 width=219)
                     ->  Nested Loop  (cost=0.00..246794.50 rows=1 width=190)
                           ->  Nested Loop  (cost=0.00..246791.42 rows=1 width=37)
                                 Join Filter: (partsupp.ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.00 rows=2 width=33)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..10.88 rows=160 width=19)
                                       Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=517.75..517.76 rows=1 width=11)
                                         ->  Nested Loop  (cost=1.56..517.67 rows=32 width=11)
                                               Join Filter: (nation.n_regionkey = region.r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.56..514.60 rows=160 width=15)
                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..510.84 rows=160 width=15)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..9.38 rows=160 width=15)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.12 rows=1 width=8)
                                                                 Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.07 rows=1 width=161)
                                 Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=37)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                     Filter: (r_name = 'AMERICA'::bpchar)
(34 rows)

query 2 run 3
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246796.62..246796.62 rows=1 width=215)
   ->  Sort  (cost=246796.62..246796.62 rows=1 width=215)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..246796.61 rows=1 width=215)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.00..246795.53 rows=1 width=219)
                     ->  Nested Loop  (cost=0.00..246794.50 rows=1 width=190)
                           ->  Nested Loop  (cost=0.00..246791.42 rows=1 width=37)
                                 Join Filter: (partsupp.ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.00 rows=2 width=33)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..10.88 rows=160 width=19)
                                       Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=517.75..517.76 rows=1 width=11)
                                         ->  Nested Loop  (cost=1.56..517.67 rows=32 width=11)
                                               Join Filter: (nation.n_regionkey = region.r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.56..514.60 rows=160 width=15)
                                                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..510.84 rows=160 width=15)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..9.38 rows=160 width=15)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.12 rows=1 width=8)
                                                                 Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.07 rows=1 width=161)
                                 Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=37)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                     Filter: (r_name = 'AMERICA'::bpchar)
(34 rows)

query 3 run 1
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4570377.42..4570377.44 rows=10 width=34)
   ->  Sort  (cost=4570377.42..4578192.45 rows=3126012 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4077545.82..4171326.18 rows=3126012 width=34)
               ->  Sort  (cost=4077545.82..4085360.85 rows=3126012 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=699830.84..3678494.59 rows=3126012 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=31460794 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=672467.44..672467.44 rows=1490432 width=12)
                                 ->  Hash Join  (cost=150065.87..672467.44 rows=1490432 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85280.37..493934.63 rows=7188581 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83483.22 rows=7188581 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=311000 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=311000 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4570377.42..4570377.44 rows=10 width=34)
   ->  Sort  (cost=4570377.42..4578192.45 rows=3126012 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4077545.82..4171326.18 rows=3126012 width=34)
               ->  Sort  (cost=4077545.82..4085360.85 rows=3126012 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=699830.84..3678494.59 rows=3126012 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=31460794 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=672467.44..672467.44 rows=1490432 width=12)
                                 ->  Hash Join  (cost=150065.87..672467.44 rows=1490432 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85280.37..493934.63 rows=7188581 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83483.22 rows=7188581 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=311000 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=311000 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4570377.42..4570377.44 rows=10 width=34)
   ->  Sort  (cost=4570377.42..4578192.45 rows=3126012 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4077545.82..4171326.18 rows=3126012 width=34)
               ->  Sort  (cost=4077545.82..4085360.85 rows=3126012 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=699830.84..3678494.59 rows=3126012 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=31460794 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=672467.44..672467.44 rows=1490432 width=12)
                                 ->  Hash Join  (cost=150065.87..672467.44 rows=1490432 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85280.37..493934.63 rows=7188581 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83483.22 rows=7188581 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=311000 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=311000 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393451.20..393451.20 rows=1 width=19)
   ->  Sort  (cost=393451.20..393451.20 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=393451.17..393451.19 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=7429.89..392146.85 rows=260865 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7364.68 rows=521731 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..120.32 rows=760 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 2
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393451.20..393451.20 rows=1 width=19)
   ->  Sort  (cost=393451.20..393451.20 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=393451.17..393451.19 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=7429.89..392146.85 rows=260865 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7364.68 rows=521731 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..120.32 rows=760 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 3
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393451.20..393451.20 rows=1 width=19)
   ->  Sort  (cost=393451.20..393451.20 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=393451.17..393451.19 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=7429.89..392146.85 rows=260865 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7364.68 rows=521731 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..120.32 rows=760 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2926648.98..2926648.98 rows=1 width=51)
   ->  Sort  (cost=2926648.98..2926649.04 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=2926647.96..2926648.40 rows=25 width=51)
               ->  Hash Join  (cost=471645.75..2926317.22 rows=66147 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Hash Join  (cost=466562.75..2887298.89 rows=1663693 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=30)
                           ->  Hash  (cost=461362.50..461362.50 rows=416020 width=41)
                                 ->  Hash Join  (cost=99403.42..461362.50 rows=416020 width=41)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=29877.89..379876.39 rows=2080100 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..29357.87 rows=2080100 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=65775.53..65775.53 rows=300000 width=41)
                                             ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=41)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(29 rows)

query 5 run 2
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2926648.98..2926648.98 rows=1 width=51)
   ->  Sort  (cost=2926648.98..2926649.04 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=2926647.96..2926648.40 rows=25 width=51)
               ->  Hash Join  (cost=471645.75..2926317.22 rows=66147 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Hash Join  (cost=466562.75..2887298.89 rows=1663693 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=30)
                           ->  Hash  (cost=461362.50..461362.50 rows=416020 width=41)
                                 ->  Hash Join  (cost=99403.42..461362.50 rows=416020 width=41)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=29877.89..379876.39 rows=2080100 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..29357.87 rows=2080100 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=65775.53..65775.53 rows=300000 width=41)
                                             ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=41)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(29 rows)

query 5 run 3
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2926648.98..2926648.98 rows=1 width=51)
   ->  Sort  (cost=2926648.98..2926649.04 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=2926647.96..2926648.40 rows=25 width=51)
               ->  Hash Join  (cost=471645.75..2926317.22 rows=66147 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Hash Join  (cost=466562.75..2887298.89 rows=1663693 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=30)
                           ->  Hash  (cost=461362.50..461362.50 rows=416020 width=41)
                                 ->  Hash Join  (cost=99403.42..461362.50 rows=416020 width=41)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=29877.89..379876.39 rows=2080100 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..29357.87 rows=2080100 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=65775.53..65775.53 rows=300000 width=41)
                                             ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=41)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8.65..8.67 rows=1 width=22)
   ->  Aggregate  (cost=8.65..8.67 rows=1 width=22)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..8.65 rows=1 width=22)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8.65..8.67 rows=1 width=22)
   ->  Aggregate  (cost=8.65..8.67 rows=1 width=22)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..8.65 rows=1 width=22)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8.65..8.67 rows=1 width=22)
   ->  Aggregate  (cost=8.65..8.67 rows=1 width=22)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..8.65 rows=1 width=22)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3277896.24..3277896.27 rows=1 width=84)
   ->  GroupAggregate  (cost=3277896.24..3279893.65 rows=57069 width=84)
         ->  Sort  (cost=3277896.24..3278038.91 rows=57069 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=982661.06..3273387.67 rows=57069 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=977578.06..3238742.52 rows=1435307 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=344836.56..2193463.07 rows=17955701 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..340347.63 rows=17955701 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=602530.50..602530.50 rows=1199040 width=66)
                                 ->  Hash Join  (cost=65493.10..602530.50 rows=1199040 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..468797.00 rows=15000000 width=8)
                                       ->  Hash  (cost=63994.30..63994.30 rows=119904 width=66)
                                             ->  Hash Join  (cost=21.30..63994.30 rows=119904 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3277896.24..3277896.27 rows=1 width=84)
   ->  GroupAggregate  (cost=3277896.24..3279893.65 rows=57069 width=84)
         ->  Sort  (cost=3277896.24..3278038.91 rows=57069 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=982661.06..3273387.67 rows=57069 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=977578.06..3238742.52 rows=1435307 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=344836.56..2193463.07 rows=17955701 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..340347.63 rows=17955701 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=602530.50..602530.50 rows=1199040 width=66)
                                 ->  Hash Join  (cost=65493.10..602530.50 rows=1199040 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..468797.00 rows=15000000 width=8)
                                       ->  Hash  (cost=63994.30..63994.30 rows=119904 width=66)
                                             ->  Hash Join  (cost=21.30..63994.30 rows=119904 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3277896.24..3277896.27 rows=1 width=84)
   ->  GroupAggregate  (cost=3277896.24..3279893.65 rows=57069 width=84)
         ->  Sort  (cost=3277896.24..3278038.91 rows=57069 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=982661.06..3273387.67 rows=57069 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=977578.06..3238742.52 rows=1435307 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=344836.56..2193463.07 rows=17955701 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..340347.63 rows=17955701 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=602530.50..602530.50 rows=1199040 width=66)
                                 ->  Hash Join  (cost=65493.10..602530.50 rows=1199040 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..468797.00 rows=15000000 width=8)
                                       ->  Hash  (cost=63994.30..63994.30 rows=119904 width=66)
                                             ->  Hash Join  (cost=21.30..63994.30 rows=119904 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216347.86..216347.91 rows=1 width=55)
   ->  GroupAggregate  (cost=216347.86..216381.37 rows=735 width=55)
         ->  Sort  (cost=216347.86..216349.81 rows=779 width=55)
               Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=1.56..216310.45 rows=779 width=55)
                     ->  Nested Loop  (cost=1.56..215504.13 rows=779 width=30)
                           ->  Nested Loop  (cost=1.56..212952.17 rows=784 width=30)
                                 Join Filter: (n1.n_regionkey = region.r_regionkey)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                 ->  Hash Join  (cost=1.56..212902.11 rows=3920 width=34)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=0.00..212846.64 rows=3920 width=34)
                                             ->  Nested Loop  (cost=0.00..199843.86 rows=3920 width=34)
                                                   ->  Nested Loop  (cost=0.00..149894.18 rows=12881 width=30)
                                                         ->  Seq Scan on part  (cost=0.00..76082.00 rows=12881 width=4)
                                                               Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=34)
                                                               Index Cond: (part.p_partkey = lineitem.l_partkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..3.87 rows=1 width=12)
                                                         Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..3.30 rows=1 width=8)
                                                   Index Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = n2.n_nationkey)
(30 rows)

query 8 run 2
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216347.86..216347.91 rows=1 width=55)
   ->  GroupAggregate  (cost=216347.86..216381.37 rows=735 width=55)
         ->  Sort  (cost=216347.86..216349.81 rows=779 width=55)
               Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=1.56..216310.45 rows=779 width=55)
                     ->  Nested Loop  (cost=1.56..215504.13 rows=779 width=30)
                           ->  Nested Loop  (cost=1.56..212952.17 rows=784 width=30)
                                 Join Filter: (n1.n_regionkey = region.r_regionkey)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                 ->  Hash Join  (cost=1.56..212902.11 rows=3920 width=34)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=0.00..212846.64 rows=3920 width=34)
                                             ->  Nested Loop  (cost=0.00..199843.86 rows=3920 width=34)
                                                   ->  Nested Loop  (cost=0.00..149894.18 rows=12881 width=30)
                                                         ->  Seq Scan on part  (cost=0.00..76082.00 rows=12881 width=4)
                                                               Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=34)
                                                               Index Cond: (part.p_partkey = lineitem.l_partkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..3.87 rows=1 width=12)
                                                         Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..3.30 rows=1 width=8)
                                                   Index Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = n2.n_nationkey)
(30 rows)

query 8 run 3
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216347.86..216347.91 rows=1 width=55)
   ->  GroupAggregate  (cost=216347.86..216381.37 rows=735 width=55)
         ->  Sort  (cost=216347.86..216349.81 rows=779 width=55)
               Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=1.56..216310.45 rows=779 width=55)
                     ->  Nested Loop  (cost=1.56..215504.13 rows=779 width=30)
                           ->  Nested Loop  (cost=1.56..212952.17 rows=784 width=30)
                                 Join Filter: (n1.n_regionkey = region.r_regionkey)
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                       Filter: (r_name = 'AMERICA'::bpchar)
                                 ->  Hash Join  (cost=1.56..212902.11 rows=3920 width=34)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=0.00..212846.64 rows=3920 width=34)
                                             ->  Nested Loop  (cost=0.00..199843.86 rows=3920 width=34)
                                                   ->  Nested Loop  (cost=0.00..149894.18 rows=12881 width=30)
                                                         ->  Seq Scan on part  (cost=0.00..76082.00 rows=12881 width=4)
                                                               Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=34)
                                                               Index Cond: (part.p_partkey = lineitem.l_partkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..3.87 rows=1 width=12)
                                                         Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..3.30 rows=1 width=8)
                                                   Index Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation n2  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = n2.n_nationkey)
(30 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225243.28..225243.32 rows=1 width=76)
   ->  GroupAggregate  (cost=225243.28..225243.32 rows=1 width=76)
         ->  Sort  (cost=225243.28..225243.29 rows=1 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..225243.27 rows=1 width=76)
                     ->  Nested Loop  (cost=0.00..225242.24 rows=1 width=51)
                           ->  Nested Loop  (cost=0.00..225238.95 rows=1 width=55)
                                 ->  Nested Loop  (cost=0.00..225235.08 rows=1 width=55)
                                       ->  Nested Loop  (cost=0.00..167764.20 rows=16000 width=48)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=16000 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=44)
                                                   Index Cond: (part.p_partkey = lineitem.l_partkey)
                                       ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.58 rows=1 width=19)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 9 run 2
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225243.28..225243.32 rows=1 width=76)
   ->  GroupAggregate  (cost=225243.28..225243.32 rows=1 width=76)
         ->  Sort  (cost=225243.28..225243.29 rows=1 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..225243.27 rows=1 width=76)
                     ->  Nested Loop  (cost=0.00..225242.24 rows=1 width=51)
                           ->  Nested Loop  (cost=0.00..225238.95 rows=1 width=55)
                                 ->  Nested Loop  (cost=0.00..225235.08 rows=1 width=55)
                                       ->  Nested Loop  (cost=0.00..167764.20 rows=16000 width=48)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=16000 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=44)
                                                   Index Cond: (part.p_partkey = lineitem.l_partkey)
                                       ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.58 rows=1 width=19)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 9 run 3
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=225243.28..225243.32 rows=1 width=76)
   ->  GroupAggregate  (cost=225243.28..225243.32 rows=1 width=76)
         ->  Sort  (cost=225243.28..225243.29 rows=1 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..225243.27 rows=1 width=76)
                     ->  Nested Loop  (cost=0.00..225242.24 rows=1 width=51)
                           ->  Nested Loop  (cost=0.00..225238.95 rows=1 width=55)
                                 ->  Nested Loop  (cost=0.00..225235.08 rows=1 width=55)
                                       ->  Nested Loop  (cost=0.00..167764.20 rows=16000 width=48)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=16000 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=44)
                                                   Index Cond: (part.p_partkey = lineitem.l_partkey)
                                       ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.58 rows=1 width=19)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3222583.08..3222583.13 rows=20 width=210)
   ->  Sort  (cost=3222583.08..3223904.41 rows=528532 width=210)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3115198.27..3136339.55 rows=528532 width=210)
               ->  Sort  (cost=3115198.27..3116519.60 rows=528532 width=210)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=438610.20..3028954.74 rows=528532 width=210)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=438608.64..3021685.87 rows=528532 width=185)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=326088.64..2855695.22 rows=528532 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14196699 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=319108.16..319108.16 rows=558438 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8022.86..319108.16 rows=558438 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7883.25 rows=558438 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=163)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=163)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 10 run 2
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3222583.08..3222583.13 rows=20 width=210)
   ->  Sort  (cost=3222583.08..3223904.41 rows=528532 width=210)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3115198.27..3136339.55 rows=528532 width=210)
               ->  Sort  (cost=3115198.27..3116519.60 rows=528532 width=210)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=438610.20..3028954.74 rows=528532 width=210)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=438608.64..3021685.87 rows=528532 width=185)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=326088.64..2855695.22 rows=528532 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14196699 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=319108.16..319108.16 rows=558438 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8022.86..319108.16 rows=558438 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7883.25 rows=558438 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=163)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=163)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 10 run 3
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3222583.08..3222583.13 rows=20 width=210)
   ->  Sort  (cost=3222583.08..3223904.41 rows=528532 width=210)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3115198.27..3136339.55 rows=528532 width=210)
               ->  Sort  (cost=3115198.27..3116519.60 rows=528532 width=210)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=438610.20..3028954.74 rows=528532 width=210)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=438608.64..3021685.87 rows=528532 width=185)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=326088.64..2855695.22 rows=528532 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14196699 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=319108.16..319108.16 rows=558438 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8022.86..319108.16 rows=558438 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7883.25 rows=558438 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=163)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=163)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 11 run 1
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=618383.66..618383.66 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=305758.59..305758.60 rows=1 width=15)
           ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=15)
                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19)
                 ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8)
                                   Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
   ->  Sort  (cost=312625.06..312749.81 rows=49903 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=307358.58..308730.92 rows=49903 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=19)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23)
                     ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4)
                           ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8)
                                       Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(29 rows)

query 11 run 2
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=618383.66..618383.66 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=305758.59..305758.60 rows=1 width=15)
           ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=15)
                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19)
                 ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8)
                                   Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
   ->  Sort  (cost=312625.06..312749.81 rows=49903 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=307358.58..308730.92 rows=49903 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=19)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23)
                     ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4)
                           ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8)
                                       Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(29 rows)

query 11 run 3
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=618383.66..618383.66 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=305758.59..305758.60 rows=1 width=15)
           ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=15)
                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19)
                 ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8)
                                   Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
   ->  Sort  (cost=312625.06..312749.81 rows=49903 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=307358.58..308730.92 rows=49903 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=19)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23)
                     ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4)
                           ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8)
                                       Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(29 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3600547.79..3600547.80 rows=1 width=33)
   ->  Sort  (cost=3600547.79..3600547.80 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3600547.76..3600547.78 rows=1 width=33)
               ->  Merge Join  (cost=2951879.06..3598635.05 rows=255028 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=23)
                     ->  Sort  (cost=2951879.06..2952516.63 rows=255028 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2928977.17 rows=255028 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3600547.79..3600547.80 rows=1 width=33)
   ->  Sort  (cost=3600547.79..3600547.80 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3600547.76..3600547.78 rows=1 width=33)
               ->  Merge Join  (cost=2951879.06..3598635.05 rows=255028 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=23)
                     ->  Sort  (cost=2951879.06..2952516.63 rows=255028 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2928977.17 rows=255028 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3600547.79..3600547.80 rows=1 width=33)
   ->  Sort  (cost=3600547.79..3600547.80 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3600547.76..3600547.78 rows=1 width=33)
               ->  Merge Join  (cost=2951879.06..3598635.05 rows=255028 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=23)
                     ->  Sort  (cost=2951879.06..2952516.63 rows=255028 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2928977.17 rows=255028 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2874800.78..2874800.78 rows=1 width=8)
   ->  Sort  (cost=2874800.78..2874801.28 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=2874790.63..2874793.13 rows=200 width=8)
               ->  GroupAggregate  (cost=2458978.19..2852290.63 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2458978.19..2758540.63 rows=15000000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..70822.81 rows=1500000 width=4)
                           ->  Sort  (cost=2458978.19..2496478.19 rows=15000000 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..506297.00 rows=15000000 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 13 run 2
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2874800.78..2874800.78 rows=1 width=8)
   ->  Sort  (cost=2874800.78..2874801.28 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=2874790.63..2874793.13 rows=200 width=8)
               ->  GroupAggregate  (cost=2458978.19..2852290.63 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2458978.19..2758540.63 rows=15000000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..70822.81 rows=1500000 width=4)
                           ->  Sort  (cost=2458978.19..2496478.19 rows=15000000 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..506297.00 rows=15000000 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 13 run 3
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2874800.78..2874800.78 rows=1 width=8)
   ->  Sort  (cost=2874800.78..2874801.28 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=2874790.63..2874793.13 rows=200 width=8)
               ->  GroupAggregate  (cost=2458978.19..2852290.63 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2458978.19..2758540.63 rows=15000000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..70822.81 rows=1500000 width=4)
                           ->  Sort  (cost=2458978.19..2496478.19 rows=15000000 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..506297.00 rows=15000000 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=853732.03..853732.06 rows=1 width=46)
   ->  Aggregate  (cost=853732.03..853732.06 rows=1 width=46)
         ->  Hash Join  (cost=125043.12..853616.32 rows=23142 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=13336.12..706530.68 rows=694097 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13162.59 rows=694097 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=71082.00..71082.00 rows=2000000 width=28)
                     ->  Seq Scan on part  (cost=0.00..71082.00 rows=2000000 width=28)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=853732.03..853732.06 rows=1 width=46)
   ->  Aggregate  (cost=853732.03..853732.06 rows=1 width=46)
         ->  Hash Join  (cost=125043.12..853616.32 rows=23142 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=13336.12..706530.68 rows=694097 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13162.59 rows=694097 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=71082.00..71082.00 rows=2000000 width=28)
                     ->  Seq Scan on part  (cost=0.00..71082.00 rows=2000000 width=28)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=853732.03..853732.06 rows=1 width=46)
   ->  Aggregate  (cost=853732.03..853732.06 rows=1 width=46)
         ->  Hash Join  (cost=125043.12..853616.32 rows=23142 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=13336.12..706530.68 rows=694097 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13162.59 rows=694097 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=71082.00..71082.00 rows=2000000 width=28)
                     ->  Seq Scan on part  (cost=0.00..71082.00 rows=2000000 width=28)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2898710.55..2898711.84 rows=1 width=112)
   InitPlan
     ->  Aggregate  (cost=1446472.06..1446472.07 rows=1 width=32)
           ->  HashAggregate  (cost=1446360.97..1446425.77 rows=3703 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=42402.65..1435322.67 rows=2207661 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41850.73 rows=2207661 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1452238.47..1457041.77 rows=3703 width=112)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4497.75 rows=100000 width=80)
         ->  Sort  (cost=1452238.47..1452247.73 rows=3703 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1451880.12..1452018.99 rows=3703 width=36)
                     ->  HashAggregate  (cost=1451880.12..1451981.96 rows=3703 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=42402.65..1435322.67 rows=2207661 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41850.73 rows=2207661 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2898710.55..2898711.84 rows=1 width=112)
   InitPlan
     ->  Aggregate  (cost=1446472.06..1446472.07 rows=1 width=32)
           ->  HashAggregate  (cost=1446360.97..1446425.77 rows=3703 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=42402.65..1435322.67 rows=2207661 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41850.73 rows=2207661 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1452238.47..1457041.77 rows=3703 width=112)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4497.75 rows=100000 width=80)
         ->  Sort  (cost=1452238.47..1452247.73 rows=3703 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1451880.12..1452018.99 rows=3703 width=36)
                     ->  HashAggregate  (cost=1451880.12..1451981.96 rows=3703 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=42402.65..1435322.67 rows=2207661 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41850.73 rows=2207661 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2898710.55..2898711.84 rows=1 width=112)
   InitPlan
     ->  Aggregate  (cost=1446472.06..1446472.07 rows=1 width=32)
           ->  HashAggregate  (cost=1446360.97..1446425.77 rows=3703 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=42402.65..1435322.67 rows=2207661 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41850.73 rows=2207661 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1452238.47..1457041.77 rows=3703 width=112)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4497.75 rows=100000 width=80)
         ->  Sort  (cost=1452238.47..1452247.73 rows=3703 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1451880.12..1452018.99 rows=3703 width=36)
                     ->  HashAggregate  (cost=1451880.12..1451981.96 rows=3703 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=42402.65..1435322.67 rows=2207661 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41850.73 rows=2207661 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=533296.18..533296.18 rows=1 width=46)
   ->  Sort  (cost=533296.18..533361.82 rows=26255 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=524039.58..531369.02 rows=26255 width=46)
               ->  Sort  (cost=524039.58..525439.83 rows=560100 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=108415.63..458255.63 rows=560100 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3833.00..293072.00 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=101082.00..101082.00 rows=280050 width=46)
                                 ->  Seq Scan on part  (cost=0.00..101082.00 rows=280050 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=533296.18..533296.18 rows=1 width=46)
   ->  Sort  (cost=533296.18..533361.82 rows=26255 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=524039.58..531369.02 rows=26255 width=46)
               ->  Sort  (cost=524039.58..525439.83 rows=560100 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=108415.63..458255.63 rows=560100 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3833.00..293072.00 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=101082.00..101082.00 rows=280050 width=46)
                                 ->  Seq Scan on part  (cost=0.00..101082.00 rows=280050 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=533296.18..533296.18 rows=1 width=46)
   ->  Sort  (cost=533296.18..533361.82 rows=26255 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=524039.58..531369.02 rows=26255 width=46)
               ->  Sort  (cost=524039.58..525439.83 rows=560100 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=108415.63..458255.63 rows=560100 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3833.00..293072.00 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=101082.00..101082.00 rows=280050 width=46)
                                 ->  Seq Scan on part  (cost=0.00..101082.00 rows=280050 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12911748.08..12911748.09 rows=1 width=13)
   ->  Aggregate  (cost=12911748.08..12911748.09 rows=1 width=13)
         ->  Merge Join  (cost=10812199.86..12911746.42 rows=662 width=13)
               Merge Cond: (part_agg.agg_partkey = public.lineitem.l_partkey)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  GroupAggregate  (cost=10719618.94..12069305.11 rows=59986052 width=14)
                     ->  Sort  (cost=10719618.94..10869584.07 rows=59986052 width=14)
                           Sort Key: public.lineitem.l_partkey
                           ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
               ->  Sort  (cost=92580.92..92585.88 rows=1985 width=31)
                     Sort Key: public.lineitem.l_partkey
                     ->  Nested Loop  (cost=0.00..92472.19 rows=1985 width=31)
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=1985 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.73 rows=1 width=27)
                                 Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(16 rows)

query 17 run 2
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12911748.08..12911748.09 rows=1 width=13)
   ->  Aggregate  (cost=12911748.08..12911748.09 rows=1 width=13)
         ->  Merge Join  (cost=10812199.86..12911746.42 rows=662 width=13)
               Merge Cond: (part_agg.agg_partkey = public.lineitem.l_partkey)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  GroupAggregate  (cost=10719618.94..12069305.11 rows=59986052 width=14)
                     ->  Sort  (cost=10719618.94..10869584.07 rows=59986052 width=14)
                           Sort Key: public.lineitem.l_partkey
                           ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
               ->  Sort  (cost=92580.92..92585.88 rows=1985 width=31)
                     Sort Key: public.lineitem.l_partkey
                     ->  Nested Loop  (cost=0.00..92472.19 rows=1985 width=31)
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=1985 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.73 rows=1 width=27)
                                 Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(16 rows)

query 17 run 3
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12911748.08..12911748.09 rows=1 width=13)
   ->  Aggregate  (cost=12911748.08..12911748.09 rows=1 width=13)
         ->  Merge Join  (cost=10812199.86..12911746.42 rows=662 width=13)
               Merge Cond: (part_agg.agg_partkey = public.lineitem.l_partkey)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  GroupAggregate  (cost=10719618.94..12069305.11 rows=59986052 width=14)
                     ->  Sort  (cost=10719618.94..10869584.07 rows=59986052 width=14)
                           Sort Key: public.lineitem.l_partkey
                           ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
               ->  Sort  (cost=92580.92..92585.88 rows=1985 width=31)
                     Sort Key: public.lineitem.l_partkey
                     ->  Nested Loop  (cost=0.00..92472.19 rows=1985 width=31)
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=1985 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.73 rows=1 width=27)
                                 Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(16 rows)

query 18 run 1
SET
SET
                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5083152.44..5083155.44 rows=100 width=57)
   ->  GroupAggregate  (cost=5083152.44..5086309.04 rows=105220 width=57)
         ->  Sort  (cost=5083152.44..5083415.49 rows=105220 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=2669224.07..5074375.48 rows=105220 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
                     ->  Hash  (cost=2668895.18..2668895.18 rows=26311 width=51)
                           ->  Nested Loop  (cost=2479081.78..2668895.18 rows=26311 width=51)
                                 ->  Nested Loop  (cost=2479081.78..2581639.60 rows=26311 width=29)
                                       ->  HashAggregate  (cost=2479081.78..2479476.44 rows=26311 width=14)
                                             Filter: (sum(l_quantity) > 313::numeric)
                                             ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=25)
                                             Index Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..3.30 rows=1 width=26)
                                       Index Cond: (customer.c_custkey = orders.o_custkey)
(17 rows)

query 18 run 2
SET
SET
                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5083152.44..5083155.44 rows=100 width=57)
   ->  GroupAggregate  (cost=5083152.44..5086309.04 rows=105220 width=57)
         ->  Sort  (cost=5083152.44..5083415.49 rows=105220 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=2669224.07..5074375.48 rows=105220 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
                     ->  Hash  (cost=2668895.18..2668895.18 rows=26311 width=51)
                           ->  Nested Loop  (cost=2479081.78..2668895.18 rows=26311 width=51)
                                 ->  Nested Loop  (cost=2479081.78..2581639.60 rows=26311 width=29)
                                       ->  HashAggregate  (cost=2479081.78..2479476.44 rows=26311 width=14)
                                             Filter: (sum(l_quantity) > 313::numeric)
                                             ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=25)
                                             Index Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..3.30 rows=1 width=26)
                                       Index Cond: (customer.c_custkey = orders.o_custkey)
(17 rows)

query 18 run 3
SET
SET
                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5083152.44..5083155.44 rows=100 width=57)
   ->  GroupAggregate  (cost=5083152.44..5086309.04 rows=105220 width=57)
         ->  Sort  (cost=5083152.44..5083415.49 rows=105220 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=2669224.07..5074375.48 rows=105220 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
                     ->  Hash  (cost=2668895.18..2668895.18 rows=26311 width=51)
                           ->  Nested Loop  (cost=2479081.78..2668895.18 rows=26311 width=51)
                                 ->  Nested Loop  (cost=2479081.78..2581639.60 rows=26311 width=29)
                                       ->  HashAggregate  (cost=2479081.78..2479476.44 rows=26311 width=14)
                                             Filter: (sum(l_quantity) > 313::numeric)
                                             ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=25)
                                             Index Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..3.30 rows=1 width=26)
                                       Index Cond: (customer.c_custkey = orders.o_custkey)
(17 rows)

query 19 run 1
SET
SET


 Limit  (cost=3542507.84..3542507.85 rows=1 width=22)
   ->  Aggregate  (cost=3542507.84..3542507.85 rows=1 width=22)
         ->  Hash Join  (cost=118656.75..3542507.76 rows=30 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..3378872.56 rows=1018197 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=76082.00..76082.00 rows=1999820 width=36)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=1999820 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET


 Limit  (cost=3542507.84..3542507.85 rows=1 width=22)
   ->  Aggregate  (cost=3542507.84..3542507.85 rows=1 width=22)
         ->  Hash Join  (cost=118656.75..3542507.76 rows=30 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..3378872.56 rows=1018197 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=76082.00..76082.00 rows=1999820 width=36)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=1999820 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3542507.84..3542507.85 rows=1 width=22)
   ->  Aggregate  (cost=3542507.84..3542507.85 rows=1 width=22)
         ->  Hash Join  (cost=118656.75..3542507.76 rows=30 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..3378872.56 rows=1018197 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=76082.00..76082.00 rows=1999820 width=36)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=1999820 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3412307.38..3412307.38 rows=1 width=57)
   ->  Sort  (cost=3412307.38..3412307.38 rows=1 width=57)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=3412303.04..3412307.37 rows=1 width=57)
               ->  Nested Loop  (cost=3412303.04..3412306.33 rows=1 width=61)
                     ->  HashAggregate  (cost=3412303.04..3412303.05 rows=1 width=8)
                           ->  Nested Loop  (cost=3086668.56..3412303.04 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Merge Join  (cost=3086668.56..3412288.56 rows=4 width=44)
                                       Merge Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=3010586.54..3227666.49 rows=8683198 width=18)
                                             ->  Sort  (cost=3010586.54..3032294.54 rows=8683198 width=18)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=166762.40..1876301.37 rows=8683198 width=18)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..164591.60 rows=8683198 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=76082.02..76082.03 rows=1 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=76082.00..76082.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..76082.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.60 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(29 rows)

query 20 run 2
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3412307.38..3412307.38 rows=1 width=57)
   ->  Sort  (cost=3412307.38..3412307.38 rows=1 width=57)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=3412303.04..3412307.37 rows=1 width=57)
               ->  Nested Loop  (cost=3412303.04..3412306.33 rows=1 width=61)
                     ->  HashAggregate  (cost=3412303.04..3412303.05 rows=1 width=8)
                           ->  Nested Loop  (cost=3086668.56..3412303.04 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Merge Join  (cost=3086668.56..3412288.56 rows=4 width=44)
                                       Merge Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=3010586.54..3227666.49 rows=8683198 width=18)
                                             ->  Sort  (cost=3010586.54..3032294.54 rows=8683198 width=18)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=166762.40..1876301.37 rows=8683198 width=18)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..164591.60 rows=8683198 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=76082.02..76082.03 rows=1 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=76082.00..76082.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..76082.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.60 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(29 rows)

query 20 run 3
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3412307.38..3412307.38 rows=1 width=57)
   ->  Sort  (cost=3412307.38..3412307.38 rows=1 width=57)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=3412303.04..3412307.37 rows=1 width=57)
               ->  Nested Loop  (cost=3412303.04..3412306.33 rows=1 width=61)
                     ->  HashAggregate  (cost=3412303.04..3412303.05 rows=1 width=8)
                           ->  Nested Loop  (cost=3086668.56..3412303.04 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Merge Join  (cost=3086668.56..3412288.56 rows=4 width=44)
                                       Merge Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=3010586.54..3227666.49 rows=8683198 width=18)
                                             ->  Sort  (cost=3010586.54..3032294.54 rows=8683198 width=18)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=166762.40..1876301.37 rows=8683198 width=18)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..164591.60 rows=8683198 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=76082.02..76082.03 rows=1 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=76082.00..76082.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..76082.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.60 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(29 rows)

query 21 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16243912.01..16243912.26 rows=100 width=29)
   ->  Sort  (cost=16243912.01..16244152.49 rows=96195 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=16234747.67..16235950.10 rows=96195 width=29)
               ->  Nested Loop  (cost=2519.58..16234266.69 rows=96195 width=29)
                     ->  Hash Join  (cost=2519.58..15464288.99 rows=198749 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..15441036.28 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..126.02 rows=760 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..120.32 rows=2280 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=33)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 21 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16243912.01..16243912.26 rows=100 width=29)
   ->  Sort  (cost=16243912.01..16244152.49 rows=96195 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=16234747.67..16235950.10 rows=96195 width=29)
               ->  Nested Loop  (cost=2519.58..16234266.69 rows=96195 width=29)
                     ->  Hash Join  (cost=2519.58..15464288.99 rows=198749 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..15441036.28 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..126.02 rows=760 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..120.32 rows=2280 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=33)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 21 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16243912.01..16243912.26 rows=100 width=29)
   ->  Sort  (cost=16243912.01..16244152.49 rows=96195 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=16234747.67..16235950.10 rows=96195 width=29)
               ->  Nested Loop  (cost=2519.58..16234266.69 rows=96195 width=29)
                     ->  Hash Join  (cost=2519.58..15464288.99 rows=198749 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..15441036.28 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..126.02 rows=760 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..120.32 rows=2280 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=33)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 22 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2587604.41..2587604.44 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=81640.02..81640.03 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..81523.00 rows=46808 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=2505964.37..2506222.97 rows=8620 width=30)
         ->  Sort  (cost=2505964.37..2505985.92 rows=8620 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2505400.91 rows=8620 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..38.78 rows=24 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 2
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2587604.41..2587604.44 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=81640.02..81640.03 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..81523.00 rows=46808 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=2505964.37..2506222.97 rows=8620 width=30)
         ->  Sort  (cost=2505964.37..2505985.92 rows=8620 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2505400.91 rows=8620 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..38.78 rows=24 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 3
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2587604.41..2587604.44 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=81640.02..81640.03 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..81523.00 rows=46808 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=2505964.37..2506222.97 rows=8620 width=30)
         ->  Sort  (cost=2505964.37..2505985.92 rows=8620 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2505400.91 rows=8620 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..38.78 rows=24 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

