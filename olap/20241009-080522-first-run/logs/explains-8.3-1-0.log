query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=343598.14..343598.14 rows=1 width=33)
   ->  Sort  (cost=343598.14..343598.15 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=343597.84..343598.11 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=6000626 width=33)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=343598.14..343598.14 rows=1 width=33)
   ->  Sort  (cost=343598.14..343598.15 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=343597.84..343598.11 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=6000626 width=33)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=343598.14..343598.14 rows=1 width=33)
   ->  Sort  (cost=343598.14..343598.15 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=343597.84..343598.11 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=6000626 width=33)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8816.27..8816.27 rows=1 width=195)
   ->  Sort  (cost=8816.27..8816.27 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..8816.26 rows=1 width=195)
               ->  Nested Loop  (cost=0.00..8815.79 rows=1 width=199)
                     ->  Nested Loop  (cost=0.00..8815.51 rows=1 width=173)
                           ->  Nested Loop  (cost=0.00..8814.49 rows=1 width=34)
                                 Join Filter: ((subplan) = public.partsupp.ps_supplycost)
                                 ->  Seq Scan on part  (cost=0.00..7157.00 rows=1 width=30)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.69 rows=23 width=16)
                                       Index Cond: (public.partsupp.ps_partkey = part.p_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=71.88..71.89 rows=1 width=8)
                                         ->  Nested Loop  (cost=1.56..71.86 rows=5 width=8)
                                               Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.56..70.51 rows=23 width=12)
                                                     Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..68.64 rows=23 width=12)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.69 rows=23 width=12)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.81 rows=1 width=8)
                                                                 Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..1.01 rows=1 width=147)
                                 Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=34)
                           Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
               ->  Index Scan using region_pkey on region  (cost=0.00..0.45 rows=1 width=4)
                     Index Cond: (public.region.r_regionkey = public.nation.n_regionkey)
                     Filter: (public.region.r_name = 'AMERICA'::bpchar)
(34 rows)

query 2 run 2
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8816.27..8816.27 rows=1 width=195)
   ->  Sort  (cost=8816.27..8816.27 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..8816.26 rows=1 width=195)
               ->  Nested Loop  (cost=0.00..8815.79 rows=1 width=199)
                     ->  Nested Loop  (cost=0.00..8815.51 rows=1 width=173)
                           ->  Nested Loop  (cost=0.00..8814.49 rows=1 width=34)
                                 Join Filter: ((subplan) = public.partsupp.ps_supplycost)
                                 ->  Seq Scan on part  (cost=0.00..7157.00 rows=1 width=30)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.69 rows=23 width=16)
                                       Index Cond: (public.partsupp.ps_partkey = part.p_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=71.88..71.89 rows=1 width=8)
                                         ->  Nested Loop  (cost=1.56..71.86 rows=5 width=8)
                                               Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.56..70.51 rows=23 width=12)
                                                     Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..68.64 rows=23 width=12)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.69 rows=23 width=12)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.81 rows=1 width=8)
                                                                 Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..1.01 rows=1 width=147)
                                 Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=34)
                           Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
               ->  Index Scan using region_pkey on region  (cost=0.00..0.45 rows=1 width=4)
                     Index Cond: (public.region.r_regionkey = public.nation.n_regionkey)
                     Filter: (public.region.r_name = 'AMERICA'::bpchar)
(34 rows)

query 2 run 3
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8816.27..8816.27 rows=1 width=195)
   ->  Sort  (cost=8816.27..8816.27 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..8816.26 rows=1 width=195)
               ->  Nested Loop  (cost=0.00..8815.79 rows=1 width=199)
                     ->  Nested Loop  (cost=0.00..8815.51 rows=1 width=173)
                           ->  Nested Loop  (cost=0.00..8814.49 rows=1 width=34)
                                 Join Filter: ((subplan) = public.partsupp.ps_supplycost)
                                 ->  Seq Scan on part  (cost=0.00..7157.00 rows=1 width=30)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.69 rows=23 width=16)
                                       Index Cond: (public.partsupp.ps_partkey = part.p_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=71.88..71.89 rows=1 width=8)
                                         ->  Nested Loop  (cost=1.56..71.86 rows=5 width=8)
                                               Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                               ->  Hash Join  (cost=1.56..70.51 rows=23 width=12)
                                                     Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                                     ->  Nested Loop  (cost=0.00..68.64 rows=23 width=12)
                                                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.69 rows=23 width=12)
                                                                 Index Cond: ($0 = ps_partkey)
                                                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.81 rows=1 width=8)
                                                                 Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..1.01 rows=1 width=147)
                                 Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=34)
                           Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
               ->  Index Scan using region_pkey on region  (cost=0.00..0.45 rows=1 width=4)
                     Index Cond: (public.region.r_regionkey = public.nation.n_regionkey)
                     Filter: (public.region.r_name = 'AMERICA'::bpchar)
(34 rows)

query 3 run 1
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=317282.22..317282.24 rows=10 width=28)
   ->  Sort  (cost=317282.22..318081.80 rows=319832 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=300775.80..310370.76 rows=319832 width=28)
               ->  Sort  (cost=300775.80..301575.38 rows=319832 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=62601.90..271532.04 rows=319832 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=3239900 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60750.97..60750.97 rows=148075 width=12)
                                 ->  Hash Join  (cost=14437.77..60750.97 rows=148075 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8544.14..44376.87 rows=719978 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8364.15 rows=719978 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30850 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30850 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=317282.22..317282.24 rows=10 width=28)
   ->  Sort  (cost=317282.22..318081.80 rows=319832 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=300775.80..310370.76 rows=319832 width=28)
               ->  Sort  (cost=300775.80..301575.38 rows=319832 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=62601.90..271532.04 rows=319832 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=3239900 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60750.97..60750.97 rows=148075 width=12)
                                 ->  Hash Join  (cost=14437.77..60750.97 rows=148075 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8544.14..44376.87 rows=719978 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8364.15 rows=719978 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30850 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30850 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=317282.22..317282.24 rows=10 width=28)
   ->  Sort  (cost=317282.22..318081.80 rows=319832 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=300775.80..310370.76 rows=319832 width=28)
               ->  Sort  (cost=300775.80..301575.38 rows=319832 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=62601.90..271532.04 rows=319832 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=3239900 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60750.97..60750.97 rows=148075 width=12)
                                 ->  Hash Join  (cost=14437.77..60750.97 rows=148075 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8544.14..44376.87 rows=719978 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8364.15 rows=719978 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30850 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30850 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=37759.27..37759.28 rows=1 width=16)
   ->  Sort  (cost=37759.27..37759.28 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=37759.25..37759.26 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=745.74..37628.53 rows=26144 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..739.20 rows=52289 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..9.66 rows=53 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 2
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=37759.27..37759.28 rows=1 width=16)
   ->  Sort  (cost=37759.27..37759.28 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=37759.25..37759.26 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=745.74..37628.53 rows=26144 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..739.20 rows=52289 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..9.66 rows=53 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 3
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=37759.27..37759.28 rows=1 width=16)
   ->  Sort  (cost=37759.27..37759.28 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=37759.25..37759.26 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=745.74..37628.53 rows=26144 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..739.20 rows=52289 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..9.66 rows=53 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251432.63..251432.63 rows=1 width=42)
   ->  Sort  (cost=251432.63..251432.69 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251432.07..251432.51 rows=25 width=42)
               ->  Hash Join  (cost=42759.98..251394.69 rows=7476 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42284.98..245237.75 rows=186906 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=24)
                           ->  Hash  (cost=41701.02..41701.02 rows=46717 width=38)
                                 ->  Hash Join  (cost=9729.11..41701.02 rows=46717 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3356.08..33692.88 rows=233587 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3297.68 rows=233587 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(29 rows)

query 5 run 2
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251432.63..251432.63 rows=1 width=42)
   ->  Sort  (cost=251432.63..251432.69 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251432.07..251432.51 rows=25 width=42)
               ->  Hash Join  (cost=42759.98..251394.69 rows=7476 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42284.98..245237.75 rows=186906 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=24)
                           ->  Hash  (cost=41701.02..41701.02 rows=46717 width=38)
                                 ->  Hash Join  (cost=9729.11..41701.02 rows=46717 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3356.08..33692.88 rows=233587 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3297.68 rows=233587 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(29 rows)

query 5 run 3
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=251432.63..251432.63 rows=1 width=42)
   ->  Sort  (cost=251432.63..251432.69 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251432.07..251432.51 rows=25 width=42)
               ->  Hash Join  (cost=42759.98..251394.69 rows=7476 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=42284.98..245237.75 rows=186906 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=24)
                           ->  Hash  (cost=41701.02..41701.02 rows=46717 width=38)
                                 ->  Hash Join  (cost=9729.11..41701.02 rows=46717 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3356.08..33692.88 rows=233587 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3297.68 rows=233587 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                             ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3.72..3.73 rows=1 width=16)
   ->  Aggregate  (cost=3.72..3.73 rows=1 width=16)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..3.71 rows=1 width=16)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3.72..3.73 rows=1 width=16)
   ->  Aggregate  (cost=3.72..3.73 rows=1 width=16)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..3.71 rows=1 width=16)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3.72..3.73 rows=1 width=16)
   ->  Aggregate  (cost=3.72..3.73 rows=1 width=16)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..3.71 rows=1 width=16)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246664.29..246664.29 rows=1 width=72)
   ->  Sort  (cost=246664.29..246678.69 rows=5761 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=246505.86..246635.49 rows=5761 width=72)
               ->  Hash Join  (cost=88230.96..246448.25 rows=5761 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87755.96..241563.87 rows=144098 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=31613.48..177220.43 rows=1802663 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31162.82 rows=1802663 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246664.29..246664.29 rows=1 width=72)
   ->  Sort  (cost=246664.29..246678.69 rows=5761 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=246505.86..246635.49 rows=5761 width=72)
               ->  Hash Join  (cost=88230.96..246448.25 rows=5761 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87755.96..241563.87 rows=144098 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=31613.48..177220.43 rows=1802663 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31162.82 rows=1802663 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246664.29..246664.29 rows=1 width=72)
   ->  Sort  (cost=246664.29..246678.69 rows=5761 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=246505.86..246635.49 rows=5761 width=72)
               ->  Hash Join  (cost=88230.96..246448.25 rows=5761 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87755.96..241563.87 rows=144098 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=31613.48..177220.43 rows=1802663 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31162.82 rows=1802663 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=126294.38..126294.38 rows=1 width=46)
   ->  Sort  (cost=126294.38..126296.25 rows=749 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=126264.42..126290.64 rows=749 width=46)
               ->  Hash Join  (cost=51819.89..126246.39 rows=2404 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51818.33..126199.75 rows=2404 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51368.33..125689.65 rows=2404 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..74152.58 rows=38588 width=24)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1286 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.03 rows=36 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50200.17..50200.17 rows=93453 width=8)
                                       ->  Hash Join  (cost=13087.32..50200.17 rows=93453 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6714.29..40556.28 rows=467266 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6597.47 rows=467266 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=126294.38..126294.38 rows=1 width=46)
   ->  Sort  (cost=126294.38..126296.25 rows=749 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=126264.42..126290.64 rows=749 width=46)
               ->  Hash Join  (cost=51819.89..126246.39 rows=2404 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51818.33..126199.75 rows=2404 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51368.33..125689.65 rows=2404 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..74152.58 rows=38588 width=24)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1286 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.03 rows=36 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50200.17..50200.17 rows=93453 width=8)
                                       ->  Hash Join  (cost=13087.32..50200.17 rows=93453 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6714.29..40556.28 rows=467266 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6597.47 rows=467266 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=126294.38..126294.38 rows=1 width=46)
   ->  Sort  (cost=126294.38..126296.25 rows=749 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=126264.42..126290.64 rows=749 width=46)
               ->  Hash Join  (cost=51819.89..126246.39 rows=2404 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51818.33..126199.75 rows=2404 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51368.33..125689.65 rows=2404 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..74152.58 rows=38588 width=24)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1286 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.03 rows=36 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=50200.17..50200.17 rows=93453 width=8)
                                       ->  Hash Join  (cost=13087.32..50200.17 rows=93453 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6714.29..40556.28 rows=467266 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6597.47 rows=467266 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34460.84..34460.87 rows=1 width=61)
   ->  GroupAggregate  (cost=34460.84..34461.70 rows=23 width=61)
         ->  Sort  (cost=34460.84..34460.89 rows=23 width=61)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=0.00..34460.32 rows=23 width=61)
                     ->  Nested Loop  (cost=0.00..34436.50 rows=23 width=39)
                           ->  Nested Loop  (cost=0.00..34367.85 rows=23 width=43)
                                 ->  Nested Loop  (cost=0.00..34297.58 rows=23 width=43)
                                       ->  Nested Loop  (cost=0.00..12697.20 rows=6400 width=20)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=1600 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.49 rows=23 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.36 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
(21 rows)

query 9 run 2
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34460.84..34460.87 rows=1 width=61)
   ->  GroupAggregate  (cost=34460.84..34461.70 rows=23 width=61)
         ->  Sort  (cost=34460.84..34460.89 rows=23 width=61)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=0.00..34460.32 rows=23 width=61)
                     ->  Nested Loop  (cost=0.00..34436.50 rows=23 width=39)
                           ->  Nested Loop  (cost=0.00..34367.85 rows=23 width=43)
                                 ->  Nested Loop  (cost=0.00..34297.58 rows=23 width=43)
                                       ->  Nested Loop  (cost=0.00..12697.20 rows=6400 width=20)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=1600 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.49 rows=23 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.36 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
(21 rows)

query 9 run 3
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34460.84..34460.87 rows=1 width=61)
   ->  GroupAggregate  (cost=34460.84..34461.70 rows=23 width=61)
         ->  Sort  (cost=34460.84..34460.89 rows=23 width=61)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=0.00..34460.32 rows=23 width=61)
                     ->  Nested Loop  (cost=0.00..34436.50 rows=23 width=39)
                           ->  Nested Loop  (cost=0.00..34367.85 rows=23 width=43)
                                 ->  Nested Loop  (cost=0.00..34297.58 rows=23 width=43)
                                       ->  Nested Loop  (cost=0.00..12697.20 rows=6400 width=20)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=1600 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.49 rows=23 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.36 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
(21 rows)

query 10 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253137.21..253137.26 rows=20 width=187)
   ->  Sort  (cost=253137.21..253279.51 rows=56922 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=250626.40..251622.53 rows=56922 width=187)
               ->  Hash Join  (cost=36211.03..249487.96 rows=56922 width=187)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36209.47..248703.72 rows=56922 width=165)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29201.47..240343.82 rows=56922 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=1510306 width=20)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28494.80..28494.80 rows=56534 width=8)
                                       ->  Bitmap Heap Scan on orders  (cost=813.79..28494.80 rows=56534 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..799.65 rows=56534 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=149)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=149)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(21 rows)

query 10 run 2
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253137.21..253137.26 rows=20 width=187)
   ->  Sort  (cost=253137.21..253279.51 rows=56922 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=250626.40..251622.53 rows=56922 width=187)
               ->  Hash Join  (cost=36211.03..249487.96 rows=56922 width=187)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36209.47..248703.72 rows=56922 width=165)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29201.47..240343.82 rows=56922 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=1510306 width=20)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28494.80..28494.80 rows=56534 width=8)
                                       ->  Bitmap Heap Scan on orders  (cost=813.79..28494.80 rows=56534 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..799.65 rows=56534 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=149)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=149)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(21 rows)

query 10 run 3
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253137.21..253137.26 rows=20 width=187)
   ->  Sort  (cost=253137.21..253279.51 rows=56922 width=187)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=250626.40..251622.53 rows=56922 width=187)
               ->  Hash Join  (cost=36211.03..249487.96 rows=56922 width=187)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=36209.47..248703.72 rows=56922 width=165)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=29201.47..240343.82 rows=56922 width=20)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=1510306 width=20)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=28494.80..28494.80 rows=56534 width=8)
                                       ->  Bitmap Heap Scan on orders  (cost=813.79..28494.80 rows=56534 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..799.65 rows=56534 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=149)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=149)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(21 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24050.49..24050.50 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=11427.34..11427.36 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..11347.62 rows=31888 width=12)
                 ->  Nested Loop  (cost=0.00..326.01 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..319.70 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.55 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12623.14..12702.86 rows=31888 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11586.78..12463.70 rows=31888 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11347.62 rows=31888 width=16)
                     ->  Nested Loop  (cost=0.00..326.01 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..319.70 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.55 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 11 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24050.49..24050.50 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=11427.34..11427.36 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..11347.62 rows=31888 width=12)
                 ->  Nested Loop  (cost=0.00..326.01 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..319.70 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.55 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12623.14..12702.86 rows=31888 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11586.78..12463.70 rows=31888 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11347.62 rows=31888 width=16)
                     ->  Nested Loop  (cost=0.00..326.01 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..319.70 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.55 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 11 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24050.49..24050.50 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=11427.34..11427.36 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..11347.62 rows=31888 width=12)
                 ->  Nested Loop  (cost=0.00..326.01 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..319.70 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.55 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12623.14..12702.86 rows=31888 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11586.78..12463.70 rows=31888 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11347.62 rows=31888 width=16)
                     ->  Nested Loop  (cost=0.00..326.01 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..319.70 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.55 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315266.79..315266.79 rows=1 width=27)
   ->  Sort  (cost=315266.79..315266.79 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=315266.75..315266.78 rows=1 width=27)
               ->  Merge Join  (cost=255451.60..315076.90 rows=25313 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20)
                     ->  Sort  (cost=255445.68..255508.96 rows=25313 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..253594.34 rows=25313 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315266.79..315266.79 rows=1 width=27)
   ->  Sort  (cost=315266.79..315266.79 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=315266.75..315266.78 rows=1 width=27)
               ->  Merge Join  (cost=255451.60..315076.90 rows=25313 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20)
                     ->  Sort  (cost=255445.68..255508.96 rows=25313 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..253594.34 rows=25313 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315266.79..315266.79 rows=1 width=27)
   ->  Sort  (cost=315266.79..315266.79 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=315266.75..315266.78 rows=1 width=27)
               ->  Merge Join  (cost=255451.60..315076.90 rows=25313 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20)
                     ->  Sort  (cost=255445.68..255508.96 rows=25313 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..253594.34 rows=25313 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253648.47..253648.47 rows=1 width=8)
   ->  Sort  (cost=253648.47..253648.97 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=253644.97..253647.47 rows=200 width=8)
               ->  GroupAggregate  (cost=212644.46..251394.97 rows=150000 width=8)
                     ->  Merge Left Join  (cost=212644.46..242019.97 rows=1500000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..6504.76 rows=150000 width=4)
                           ->  Materialize  (cost=212641.98..231391.98 rows=1500000 width=8)
                                 ->  Sort  (cost=212641.98..216391.98 rows=1500000 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1500000 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 2
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253648.47..253648.47 rows=1 width=8)
   ->  Sort  (cost=253648.47..253648.97 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=253644.97..253647.47 rows=200 width=8)
               ->  GroupAggregate  (cost=212644.46..251394.97 rows=150000 width=8)
                     ->  Merge Left Join  (cost=212644.46..242019.97 rows=1500000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..6504.76 rows=150000 width=4)
                           ->  Materialize  (cost=212641.98..231391.98 rows=1500000 width=8)
                                 ->  Sort  (cost=212641.98..216391.98 rows=1500000 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1500000 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 3
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253648.47..253648.47 rows=1 width=8)
   ->  Sort  (cost=253648.47..253648.97 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=253644.97..253647.47 rows=200 width=8)
               ->  GroupAggregate  (cost=212644.46..251394.97 rows=150000 width=8)
                     ->  Merge Left Join  (cost=212644.46..242019.97 rows=1500000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..6504.76 rows=150000 width=4)
                           ->  Materialize  (cost=212641.98..231391.98 rows=1500000 width=8)
                                 ->  Sort  (cost=212641.98..216391.98 rows=1500000 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1500000 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78374.33..78374.36 rows=1 width=37)
   ->  Aggregate  (cost=78374.33..78374.36 rows=1 width=37)
         ->  Hash Join  (cost=9964.22..78001.87 rows=74491 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1307.22..67855.05 rows=74491 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1288.60 rows=74491 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78374.33..78374.36 rows=1 width=37)
   ->  Aggregate  (cost=78374.33..78374.36 rows=1 width=37)
         ->  Hash Join  (cost=9964.22..78001.87 rows=74491 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1307.22..67855.05 rows=74491 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1288.60 rows=74491 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78374.33..78374.36 rows=1 width=37)
   ->  Aggregate  (cost=78374.33..78374.36 rows=1 width=37)
         ->  Hash Join  (cost=9964.22..78001.87 rows=74491 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1307.22..67855.05 rows=74491 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1288.60 rows=74491 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243768.67..243770.03 rows=1 width=104)
   InitPlan
     ->  Aggregate  (cost=121610.54..121610.55 rows=1 width=32)
           ->  HashAggregate  (cost=121600.58..121606.39 rows=332 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=3728.06..120538.20 rows=212475 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.94 rows=212475 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122158.12..122608.85 rows=332 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=72)
         ->  Sort  (cost=122158.12..122158.95 rows=332 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=122131.76..122144.21 rows=332 width=36)
                     ->  HashAggregate  (cost=122131.76..122140.89 rows=332 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3728.06..120538.20 rows=212475 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.94 rows=212475 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243768.67..243770.03 rows=1 width=104)
   InitPlan
     ->  Aggregate  (cost=121610.54..121610.55 rows=1 width=32)
           ->  HashAggregate  (cost=121600.58..121606.39 rows=332 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=3728.06..120538.20 rows=212475 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.94 rows=212475 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122158.12..122608.85 rows=332 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=72)
         ->  Sort  (cost=122158.12..122158.95 rows=332 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=122131.76..122144.21 rows=332 width=36)
                     ->  HashAggregate  (cost=122131.76..122140.89 rows=332 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3728.06..120538.20 rows=212475 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.94 rows=212475 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243768.67..243770.03 rows=1 width=104)
   InitPlan
     ->  Aggregate  (cost=121610.54..121610.55 rows=1 width=32)
           ->  HashAggregate  (cost=121600.58..121606.39 rows=332 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=3728.06..120538.20 rows=212475 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.94 rows=212475 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122158.12..122608.85 rows=332 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=72)
         ->  Sort  (cost=122158.12..122158.95 rows=332 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=122131.76..122144.21 rows=332 width=36)
                     ->  HashAggregate  (cost=122131.76..122140.89 rows=332 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3728.06..120538.20 rows=212475 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.94 rows=212475 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48068.71..48068.71 rows=1 width=40)
   ->  Sort  (cost=48068.71..48075.88 rows=2866 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=47302.23..48054.38 rows=2866 width=40)
               ->  Sort  (cost=47302.23..47445.50 rows=57306 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9865.17..42773.22 rows=57306 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=28653 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=28653 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48068.71..48068.71 rows=1 width=40)
   ->  Sort  (cost=48068.71..48075.88 rows=2866 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=47302.23..48054.38 rows=2866 width=40)
               ->  Sort  (cost=47302.23..47445.50 rows=57306 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9865.17..42773.22 rows=57306 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=28653 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=28653 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48068.71..48068.71 rows=1 width=40)
   ->  Sort  (cost=48068.71..48075.88 rows=2866 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=47302.23..48054.38 rows=2866 width=40)
               ->  Sort  (cost=47302.23..47445.50 rows=57306 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9865.17..42773.22 rows=57306 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=28653 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=28653 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=229818.13..229818.15 rows=1 width=10)
   ->  Aggregate  (cost=229818.13..229818.15 rows=1 width=10)
         ->  Nested Loop  (cost=215744.71..229813.16 rows=1990 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.71..220543.25 rows=166 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208585.23..211087.95 rows=166848 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=199 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=199 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..55.30 rows=36 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(13 rows)

query 17 run 2
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=229818.13..229818.15 rows=1 width=10)
   ->  Aggregate  (cost=229818.13..229818.15 rows=1 width=10)
         ->  Nested Loop  (cost=215744.71..229813.16 rows=1990 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.71..220543.25 rows=166 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208585.23..211087.95 rows=166848 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=199 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=199 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..55.30 rows=36 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(13 rows)

query 17 run 3
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=229818.13..229818.15 rows=1 width=10)
   ->  Aggregate  (cost=229818.13..229818.15 rows=1 width=10)
         ->  Nested Loop  (cost=215744.71..229813.16 rows=1990 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.71..220543.25 rows=166 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208585.23..211087.95 rows=166848 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=199 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=199 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..55.30 rows=36 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(13 rows)

query 18 run 1
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=493263.66..493263.91 rows=100 width=48)
   ->  Sort  (cost=493263.66..493644.37 rows=152283 width=48)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  HashAggregate  (cost=485539.97..487443.51 rows=152283 width=48)
               ->  Hash Join  (cost=280649.19..483255.73 rows=152283 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                     ->  Hash  (cost=280173.41..280173.41 rows=38063 width=45)
                           ->  Hash Join  (cost=219440.65..280173.41 rows=38063 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=212432.65..272261.41 rows=38063 width=26)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22)
                                       ->  Sort  (cost=212432.65..212527.81 rows=38063 width=4)
                                             Sort Key: public.lineitem.l_orderkey
                                             ->  HashAggregate  (cost=208585.23..209156.17 rows=38063 width=11)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(20 rows)

query 18 run 2
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=493263.66..493263.91 rows=100 width=48)
   ->  Sort  (cost=493263.66..493644.37 rows=152283 width=48)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  HashAggregate  (cost=485539.97..487443.51 rows=152283 width=48)
               ->  Hash Join  (cost=280649.19..483255.73 rows=152283 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                     ->  Hash  (cost=280173.41..280173.41 rows=38063 width=45)
                           ->  Hash Join  (cost=219440.65..280173.41 rows=38063 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=212432.65..272261.41 rows=38063 width=26)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22)
                                       ->  Sort  (cost=212432.65..212527.81 rows=38063 width=4)
                                             Sort Key: public.lineitem.l_orderkey
                                             ->  HashAggregate  (cost=208585.23..209156.17 rows=38063 width=11)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(20 rows)

query 18 run 3
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=493263.66..493263.91 rows=100 width=48)
   ->  Sort  (cost=493263.66..493644.37 rows=152283 width=48)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  HashAggregate  (cost=485539.97..487443.51 rows=152283 width=48)
               ->  Hash Join  (cost=280649.19..483255.73 rows=152283 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                     ->  Hash  (cost=280173.41..280173.41 rows=38063 width=45)
                           ->  Hash Join  (cost=219440.65..280173.41 rows=38063 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=212432.65..272261.41 rows=38063 width=26)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22)
                                       ->  Sort  (cost=212432.65..212527.81 rows=38063 width=4)
                                             Sort Key: public.lineitem.l_orderkey
                                             ->  HashAggregate  (cost=208585.23..209156.17 rows=38063 width=11)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(20 rows)

query 19 run 1
SET
SET


 Limit  (cost=313991.22..313991.24 rows=1 width=16)
   ->  Aggregate  (cost=313991.22..313991.24 rows=1 width=16)
         ->  Hash Join  (cost=9156.75..313991.00 rows=86 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298603.45 rows=95867 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=199980 width=30)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=199980 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET


 Limit  (cost=313991.22..313991.24 rows=1 width=16)
   ->  Aggregate  (cost=313991.22..313991.24 rows=1 width=16)
         ->  Hash Join  (cost=9156.75..313991.00 rows=86 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298603.45 rows=95867 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=199980 width=30)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=199980 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET


 Limit  (cost=313991.22..313991.24 rows=1 width=16)
   ->  Aggregate  (cost=313991.22..313991.24 rows=1 width=16)
         ->  Hash Join  (cost=9156.75..313991.00 rows=86 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298603.45 rows=95867 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=199980 width=30)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=199980 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161873.59..161873.59 rows=1 width=52)
   ->  Sort  (cost=161873.59..161873.59 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=161870.01..161873.58 rows=1 width=52)
               ->  Nested Loop  (cost=161870.01..161873.30 rows=1 width=56)
                     ->  HashAggregate  (cost=161870.01..161870.02 rows=1 width=8)
                           ->  Nested Loop  (cost=159411.71..161870.00 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=159411.71..161866.68 rows=1 width=44)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=152754.68..154035.53 rows=85390 width=15)
                                             ->  Bitmap Heap Scan on lineitem  (cost=14975.09..146350.49 rows=853893 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14761.62 rows=853893 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6657.01..6657.01 rows=1 width=4)
                                             ->  HashAggregate  (cost=6657.00..6657.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.30 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 20 run 2
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161873.59..161873.59 rows=1 width=52)
   ->  Sort  (cost=161873.59..161873.59 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=161870.01..161873.58 rows=1 width=52)
               ->  Nested Loop  (cost=161870.01..161873.30 rows=1 width=56)
                     ->  HashAggregate  (cost=161870.01..161870.02 rows=1 width=8)
                           ->  Nested Loop  (cost=159411.71..161870.00 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=159411.71..161866.68 rows=1 width=44)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=152754.68..154035.53 rows=85390 width=15)
                                             ->  Bitmap Heap Scan on lineitem  (cost=14975.09..146350.49 rows=853893 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14761.62 rows=853893 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6657.01..6657.01 rows=1 width=4)
                                             ->  HashAggregate  (cost=6657.00..6657.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.30 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 20 run 3
SET
SET
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161873.59..161873.59 rows=1 width=52)
   ->  Sort  (cost=161873.59..161873.59 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=161870.01..161873.58 rows=1 width=52)
               ->  Nested Loop  (cost=161870.01..161873.30 rows=1 width=56)
                     ->  HashAggregate  (cost=161870.01..161870.02 rows=1 width=8)
                           ->  Nested Loop  (cost=159411.71..161870.00 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=159411.71..161866.68 rows=1 width=44)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=152754.68..154035.53 rows=85390 width=15)
                                             ->  Bitmap Heap Scan on lineitem  (cost=14975.09..146350.49 rows=853893 width=15)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14761.62 rows=853893 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6657.01..6657.01 rows=1 width=4)
                                             ->  HashAggregate  (cost=6657.00..6657.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.30 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 21 run 1
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1761738.28..1761738.53 rows=100 width=26)
   ->  Sort  (cost=1761738.28..1761762.44 rows=9662 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=1761248.23..1761369.01 rows=9662 width=26)
               ->  Nested Loop  (cost=236.77..1761199.92 rows=9662 width=26)
                     ->  Hash Join  (cost=236.77..1700860.93 rows=20004 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..1698548.74 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..10.05 rows=53 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..9.66 rows=158 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=231.77..231.77 rows=400 width=30)
                                 ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.00 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(27 rows)

query 21 run 2
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1761738.28..1761738.53 rows=100 width=26)
   ->  Sort  (cost=1761738.28..1761762.44 rows=9662 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=1761248.23..1761369.01 rows=9662 width=26)
               ->  Nested Loop  (cost=236.77..1761199.92 rows=9662 width=26)
                     ->  Hash Join  (cost=236.77..1700860.93 rows=20004 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..1698548.74 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..10.05 rows=53 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..9.66 rows=158 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=231.77..231.77 rows=400 width=30)
                                 ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.00 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(27 rows)

query 21 run 3
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1761738.28..1761738.53 rows=100 width=26)
   ->  Sort  (cost=1761738.28..1761762.44 rows=9662 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=1761248.23..1761369.01 rows=9662 width=26)
               ->  Nested Loop  (cost=236.77..1761199.92 rows=9662 width=26)
                     ->  Hash Join  (cost=236.77..1700860.93 rows=20004 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..1698548.74 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..10.05 rows=53 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..9.66 rows=158 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=231.77..231.77 rows=400 width=30)
                                 ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.00 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(27 rows)

query 22 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=257890.29..257890.29 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4704 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=250308.02..250310.17 rows=862 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=250286.47..250303.71 rows=862 width=24)
               ->  Seq Scan on customer  (cost=0.00..250280.00 rows=862 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..29.12 rows=18 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 2
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=257890.29..257890.29 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4704 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=250308.02..250310.17 rows=862 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=250286.47..250303.71 rows=862 width=24)
               ->  Seq Scan on customer  (cost=0.00..250280.00 rows=862 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..29.12 rows=18 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 3
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=257890.29..257890.29 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=7582.26..7582.27 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4704 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=250308.02..250310.17 rows=862 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=250286.47..250303.71 rows=862 width=24)
               ->  Seq Scan on customer  (cost=0.00..250280.00 rows=862 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..29.12 rows=18 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

