query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=341808.25..341808.25 rows=1 width=33)
   ->  Sort  (cost=341808.25..341808.27 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=341807.95..341808.22 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193581.45 rows=5929060 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=341808.25..341808.25 rows=1 width=33)
   ->  Sort  (cost=341808.25..341808.27 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=341807.95..341808.22 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193581.45 rows=5929060 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=341808.25..341808.25 rows=1 width=33)
   ->  Sort  (cost=341808.25..341808.27 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=341807.95..341808.22 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..193581.45 rows=5929060 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69030.84..69030.84 rows=1 width=194)
   ->  Sort  (cost=69030.84..69030.84 rows=1 width=194)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45589.39..69030.83 rows=1 width=194)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=916 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45589.39..45987.32 rows=159172 width=176)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=410.03..31836.75 rows=159172 width=176)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
(38 rows)

query 2 run 2
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69030.84..69030.84 rows=1 width=194)
   ->  Sort  (cost=69030.84..69030.84 rows=1 width=194)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45589.39..69030.83 rows=1 width=194)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=916 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45589.39..45987.32 rows=159172 width=176)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=410.03..31836.75 rows=159172 width=176)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
(38 rows)

query 2 run 3
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=69030.84..69030.84 rows=1 width=194)
   ->  Sort  (cost=69030.84..69030.84 rows=1 width=194)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=45589.39..69030.83 rows=1 width=194)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=916 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45589.39..45987.32 rows=159172 width=176)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=410.03..31836.75 rows=159172 width=176)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
(38 rows)

query 3 run 1
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316199.92..316199.95 rows=10 width=28)
   ->  Sort  (cost=316199.92..316994.14 rows=317689 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=299804.11..309334.78 rows=317689 width=28)
               ->  Sort  (cost=299804.11..300598.33 rows=317689 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=61714.98..270771.69 rows=317689 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193581.45 rows=3279566 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59898.68..59898.68 rows=145304 width=12)
                                 ->  Hash Join  (cost=14457.87..59898.68 rows=145304 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8572.68..44434.51 rows=722306 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8392.11 rows=722306 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30175 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30175 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316199.92..316199.95 rows=10 width=28)
   ->  Sort  (cost=316199.92..316994.14 rows=317689 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=299804.11..309334.78 rows=317689 width=28)
               ->  Sort  (cost=299804.11..300598.33 rows=317689 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=61714.98..270771.69 rows=317689 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193581.45 rows=3279566 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59898.68..59898.68 rows=145304 width=12)
                                 ->  Hash Join  (cost=14457.87..59898.68 rows=145304 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8572.68..44434.51 rows=722306 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8392.11 rows=722306 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30175 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30175 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316199.92..316199.95 rows=10 width=28)
   ->  Sort  (cost=316199.92..316994.14 rows=317689 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=299804.11..309334.78 rows=317689 width=28)
               ->  Sort  (cost=299804.11..300598.33 rows=317689 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=61714.98..270771.69 rows=317689 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193581.45 rows=3279566 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59898.68..59898.68 rows=145304 width=12)
                                 ->  Hash Join  (cost=14457.87..59898.68 rows=145304 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8572.68..44434.51 rows=722306 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8392.11 rows=722306 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30175 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30175 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76810.60..76810.61 rows=1 width=16)
   ->  Sort  (cost=76810.60..76810.61 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=76810.58..76810.59 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=853.42..76736.86 rows=14743 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=853.42..28577.06 rows=59376 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..838.57 rows=59376 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.53 rows=5 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
(12 rows)

query 4 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76810.60..76810.61 rows=1 width=16)
   ->  Sort  (cost=76810.60..76810.61 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=76810.58..76810.59 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=853.42..76736.86 rows=14743 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=853.42..28577.06 rows=59376 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..838.57 rows=59376 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.53 rows=5 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
(12 rows)

query 4 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76810.60..76810.61 rows=1 width=16)
   ->  Sort  (cost=76810.60..76810.61 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=76810.58..76810.59 rows=1 width=16)
               ->  Nested Loop Semi Join  (cost=853.42..76736.86 rows=14743 width=16)
                     ->  Bitmap Heap Scan on orders  (cost=853.42..28577.06 rows=59376 width=20)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..838.57 rows=59376 width=0)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.53 rows=5 width=4)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
(12 rows)

query 5 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=206684.21..206684.21 rows=1 width=42)
   ->  Sort  (cost=206684.21..206684.27 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=206683.65..206684.09 rows=25 width=42)
               ->  Hash Join  (cost=9964.92..206648.95 rows=6940 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9489.92..200899.52 rows=173501 width=54)
                           ->  Hash Join  (cost=9489.92..41093.33 rows=43367 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3116.89..33202.45 rows=216837 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3062.68 rows=216837 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 5 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=206684.21..206684.21 rows=1 width=42)
   ->  Sort  (cost=206684.21..206684.27 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=206683.65..206684.09 rows=25 width=42)
               ->  Hash Join  (cost=9964.92..206648.95 rows=6940 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9489.92..200899.52 rows=173501 width=54)
                           ->  Hash Join  (cost=9489.92..41093.33 rows=43367 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3116.89..33202.45 rows=216837 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3062.68 rows=216837 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 5 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=206684.21..206684.21 rows=1 width=42)
   ->  Sort  (cost=206684.21..206684.27 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=206683.65..206684.09 rows=25 width=42)
               ->  Hash Join  (cost=9964.92..206648.95 rows=6940 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9489.92..200899.52 rows=173501 width=54)
                           ->  Hash Join  (cost=9489.92..41093.33 rows=43367 width=38)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3116.89..33202.45 rows=216837 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3062.68 rows=216837 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111146.92..111146.93 rows=1 width=16)
   ->  Aggregate  (cost=111146.92..111146.93 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=22161.99..110852.14 rows=117909 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22132.51 rows=117909 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 2
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111146.92..111146.93 rows=1 width=16)
   ->  Aggregate  (cost=111146.92..111146.93 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=22161.99..110852.14 rows=117909 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22132.51 rows=117909 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 6 run 3
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111146.92..111146.93 rows=1 width=16)
   ->  Aggregate  (cost=111146.92..111146.93 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=22161.99..110852.14 rows=117909 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22132.51 rows=117909 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246803.75..246803.75 rows=1 width=72)
   ->  Sort  (cost=246803.75..246818.18 rows=5772 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=246645.02..246774.89 rows=5772 width=72)
               ->  Hash Join  (cost=88292.56..246587.30 rows=5772 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87817.56..241694.32 rows=144379 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=31675.08..177334.86 rows=1806185 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31223.54 rows=1806185 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246803.75..246803.75 rows=1 width=72)
   ->  Sort  (cost=246803.75..246818.18 rows=5772 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=246645.02..246774.89 rows=5772 width=72)
               ->  Hash Join  (cost=88292.56..246587.30 rows=5772 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87817.56..241694.32 rows=144379 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=31675.08..177334.86 rows=1806185 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31223.54 rows=1806185 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246803.75..246803.75 rows=1 width=72)
   ->  Sort  (cost=246803.75..246818.18 rows=5772 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=246645.02..246774.89 rows=5772 width=72)
               ->  Hash Join  (cost=88292.56..246587.30 rows=5772 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87817.56..241694.32 rows=144379 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=31675.08..177334.86 rows=1806185 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31223.54 rows=1806185 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=119045.93..119045.94 rows=1 width=46)
   ->  Sort  (cost=119045.93..119047.76 rows=731 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=119016.69..119042.28 rows=731 width=46)
               ->  Hash Join  (cost=51360.90..118998.48 rows=2429 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51359.33..118951.37 rows=2429 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50909.33..118440.64 rows=2429 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..67357.03 rows=39998 width=24)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..45.15 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49770.63..49770.63 rows=91096 width=8)
                                       ->  Hash Join  (cost=12917.03..49770.63 rows=91096 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6544.00..40209.23 rows=455482 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6430.13 rows=455482 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=119045.93..119045.94 rows=1 width=46)
   ->  Sort  (cost=119045.93..119047.76 rows=731 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=119016.69..119042.28 rows=731 width=46)
               ->  Hash Join  (cost=51360.90..118998.48 rows=2429 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51359.33..118951.37 rows=2429 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50909.33..118440.64 rows=2429 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..67357.03 rows=39998 width=24)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..45.15 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49770.63..49770.63 rows=91096 width=8)
                                       ->  Hash Join  (cost=12917.03..49770.63 rows=91096 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6544.00..40209.23 rows=455482 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6430.13 rows=455482 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=119045.93..119045.94 rows=1 width=46)
   ->  Sort  (cost=119045.93..119047.76 rows=731 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=119016.69..119042.28 rows=731 width=46)
               ->  Hash Join  (cost=51360.90..118998.48 rows=2429 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51359.33..118951.37 rows=2429 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50909.33..118440.64 rows=2429 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..67357.03 rows=39998 width=24)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..45.15 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49770.63..49770.63 rows=91096 width=8)
                                       ->  Hash Join  (cost=12917.03..49770.63 rows=91096 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6544.00..40209.23 rows=455482 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6430.13 rows=455482 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=201176.76..201176.76 rows=1 width=61)
   ->  Sort  (cost=201176.76..201177.14 rows=150 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=201171.89..201176.01 rows=150 width=61)
               ->  Hash Join  (cost=6810.07..201170.76 rows=150 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=6808.51..201166.39 rows=150 width=39)
                           ->  Nested Loop  (cost=6808.51..200718.63 rows=150 width=43)
                                 ->  Nested Loop  (cost=6808.51..200260.31 rows=150 width=43)
                                       ->  Hash Join  (cost=6808.51..41128.35 rows=48484 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                                             ->  Hash  (cost=6657.00..6657.00 rows=12121 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=12121 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.27 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 9 run 2
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=201176.76..201176.76 rows=1 width=61)
   ->  Sort  (cost=201176.76..201177.14 rows=150 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=201171.89..201176.01 rows=150 width=61)
               ->  Hash Join  (cost=6810.07..201170.76 rows=150 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=6808.51..201166.39 rows=150 width=39)
                           ->  Nested Loop  (cost=6808.51..200718.63 rows=150 width=43)
                                 ->  Nested Loop  (cost=6808.51..200260.31 rows=150 width=43)
                                       ->  Hash Join  (cost=6808.51..41128.35 rows=48484 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                                             ->  Hash  (cost=6657.00..6657.00 rows=12121 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=12121 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.27 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 9 run 3
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=201176.76..201176.76 rows=1 width=61)
   ->  Sort  (cost=201176.76..201177.14 rows=150 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=201171.89..201176.01 rows=150 width=61)
               ->  Hash Join  (cost=6810.07..201170.76 rows=150 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=6808.51..201166.39 rows=150 width=39)
                           ->  Nested Loop  (cost=6808.51..200718.63 rows=150 width=43)
                                 ->  Nested Loop  (cost=6808.51..200260.31 rows=150 width=43)
                                       ->  Hash Join  (cost=6808.51..41128.35 rows=48484 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16)
                                             ->  Hash  (cost=6657.00..6657.00 rows=12121 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=12121 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.27 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=254125.41..254125.46 rows=20 width=188)
   ->  Sort  (cost=254125.41..254271.31 rows=58361 width=188)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251551.13..252572.44 rows=58361 width=188)
               ->  Hash Join  (cost=7861.85..250383.91 rows=58361 width=188)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7860.29..249579.88 rows=58361 width=166)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=852.29..241185.81 rows=58361 width=20)
                                 ->  Bitmap Heap Scan on orders  (cost=852.29..28574.28 rows=59266 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..837.47 rows=59266 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(20 rows)

query 10 run 2
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=254125.41..254125.46 rows=20 width=188)
   ->  Sort  (cost=254125.41..254271.31 rows=58361 width=188)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251551.13..252572.44 rows=58361 width=188)
               ->  Hash Join  (cost=7861.85..250383.91 rows=58361 width=188)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7860.29..249579.88 rows=58361 width=166)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=852.29..241185.81 rows=58361 width=20)
                                 ->  Bitmap Heap Scan on orders  (cost=852.29..28574.28 rows=59266 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..837.47 rows=59266 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(20 rows)

query 10 run 3
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=254125.41..254125.46 rows=20 width=188)
   ->  Sort  (cost=254125.41..254271.31 rows=58361 width=188)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=251551.13..252572.44 rows=58361 width=188)
               ->  Hash Join  (cost=7861.85..250383.91 rows=58361 width=188)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7860.29..249579.88 rows=58361 width=166)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=852.29..241185.81 rows=58361 width=20)
                                 ->  Bitmap Heap Scan on orders  (cost=852.29..28574.28 rows=59266 width=8)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..837.47 rows=59266 width=0)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(20 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24050.39..24050.39 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=11428.30..11428.32 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..11348.71 rows=31834 width=12)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12622.07..12701.66 rows=31834 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11587.47..12462.90 rows=31834 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11348.71 rows=31834 width=16)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 11 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24050.39..24050.39 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=11428.30..11428.32 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..11348.71 rows=31834 width=12)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12622.07..12701.66 rows=31834 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11587.47..12462.90 rows=31834 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11348.71 rows=31834 width=16)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 11 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24050.39..24050.39 rows=1 width=16)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=11428.30..11428.32 rows=1 width=12)
           ->  Nested Loop  (cost=0.00..11348.71 rows=31834 width=12)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12622.07..12701.66 rows=31834 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=11587.47..12462.90 rows=31834 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11348.71 rows=31834 width=16)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315397.49..315397.49 rows=1 width=27)
   ->  Sort  (cost=315397.49..315397.49 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=315397.45..315397.48 rows=1 width=27)
               ->  Merge Join  (cost=255553.19..315198.02 rows=26591 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20)
                     ->  Sort  (cost=255547.27..255613.75 rows=26591 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..253593.01 rows=26591 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315397.49..315397.49 rows=1 width=27)
   ->  Sort  (cost=315397.49..315397.49 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=315397.45..315397.48 rows=1 width=27)
               ->  Merge Join  (cost=255553.19..315198.02 rows=26591 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20)
                     ->  Sort  (cost=255547.27..255613.75 rows=26591 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..253593.01 rows=26591 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315397.49..315397.49 rows=1 width=27)
   ->  Sort  (cost=315397.49..315397.49 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=315397.45..315397.48 rows=1 width=27)
               ->  Merge Join  (cost=255553.19..315198.02 rows=26591 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20)
                     ->  Sort  (cost=255547.27..255613.75 rows=26591 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..253593.01 rows=26591 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=156230.38..156230.38 rows=1 width=8)
   ->  Sort  (cost=156230.38..156230.88 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=156226.88..156229.38 rows=200 width=8)
               ->  HashAggregate  (cost=152101.88..153976.88 rows=150000 width=8)
                     ->  Hash Left Join  (cost=70190.12..144602.62 rows=1499850 width=8)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4)
                           ->  Hash  (cost=45583.00..45583.00 rows=1499850 width=8)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1499850 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(11 rows)

query 13 run 2
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=156230.38..156230.38 rows=1 width=8)
   ->  Sort  (cost=156230.38..156230.88 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=156226.88..156229.38 rows=200 width=8)
               ->  HashAggregate  (cost=152101.88..153976.88 rows=150000 width=8)
                     ->  Hash Left Join  (cost=70190.12..144602.62 rows=1499850 width=8)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4)
                           ->  Hash  (cost=45583.00..45583.00 rows=1499850 width=8)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1499850 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(11 rows)

query 13 run 3
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=156230.38..156230.38 rows=1 width=8)
   ->  Sort  (cost=156230.38..156230.88 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=156226.88..156229.38 rows=200 width=8)
               ->  HashAggregate  (cost=152101.88..153976.88 rows=150000 width=8)
                     ->  Hash Left Join  (cost=70190.12..144602.62 rows=1499850 width=8)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4)
                           ->  Hash  (cost=45583.00..45583.00 rows=1499850 width=8)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1499850 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(11 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79518.14..79518.17 rows=1 width=37)
   ->  Aggregate  (cost=79518.14..79518.17 rows=1 width=37)
         ->  Hash Join  (cost=9996.60..79136.47 rows=76333 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1339.60..68952.81 rows=76333 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1320.52 rows=76333 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79518.14..79518.17 rows=1 width=37)
   ->  Aggregate  (cost=79518.14..79518.17 rows=1 width=37)
         ->  Hash Join  (cost=9996.60..79136.47 rows=76333 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1339.60..68952.81 rows=76333 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1320.52 rows=76333 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79518.14..79518.17 rows=1 width=37)
   ->  Aggregate  (cost=79518.14..79518.17 rows=1 width=37)
         ->  Hash Join  (cost=9996.60..79136.47 rows=76333 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1339.60..68952.81 rows=76333 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1320.52 rows=76333 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253365.51..253366.67 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=126382.58..126382.59 rows=1 width=32)
           ->  HashAggregate  (cost=126370.93..126377.72 rows=388 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=4075.27..125209.43 rows=232301 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.20 rows=232301 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126982.92..127434.49 rows=388 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71)
         ->  Sort  (cost=126982.92..126983.89 rows=388 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=126951.69..126966.24 rows=388 width=36)
                     ->  HashAggregate  (cost=126951.69..126962.36 rows=388 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4075.27..125209.43 rows=232301 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.20 rows=232301 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253365.51..253366.67 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=126382.58..126382.59 rows=1 width=32)
           ->  HashAggregate  (cost=126370.93..126377.72 rows=388 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=4075.27..125209.43 rows=232301 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.20 rows=232301 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126982.92..127434.49 rows=388 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71)
         ->  Sort  (cost=126982.92..126983.89 rows=388 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=126951.69..126966.24 rows=388 width=36)
                     ->  HashAggregate  (cost=126951.69..126962.36 rows=388 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4075.27..125209.43 rows=232301 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.20 rows=232301 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=253365.51..253366.67 rows=1 width=103)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=126382.58..126382.59 rows=1 width=32)
           ->  HashAggregate  (cost=126370.93..126377.72 rows=388 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=4075.27..125209.43 rows=232301 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.20 rows=232301 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126982.92..127434.49 rows=388 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71)
         ->  Sort  (cost=126982.92..126983.89 rows=388 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=126951.69..126966.24 rows=388 width=36)
                     ->  HashAggregate  (cost=126951.69..126962.36 rows=388 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4075.27..125209.43 rows=232301 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.20 rows=232301 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47641.56..47641.56 rows=1 width=40)
   ->  Sort  (cost=47641.56..47648.26 rows=2681 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46924.49..47628.15 rows=2681 width=40)
               ->  Sort  (cost=46924.49..47058.52 rows=53612 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9842.08..42713.20 rows=53612 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=26806 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=26806 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47641.56..47641.56 rows=1 width=40)
   ->  Sort  (cost=47641.56..47648.26 rows=2681 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46924.49..47628.15 rows=2681 width=40)
               ->  Sort  (cost=46924.49..47058.52 rows=53612 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9842.08..42713.20 rows=53612 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=26806 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=26806 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47641.56..47641.56 rows=1 width=40)
   ->  Sort  (cost=47641.56..47648.26 rows=2681 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=46924.49..47628.15 rows=2681 width=40)
               ->  Sort  (cost=46924.49..47058.52 rows=53612 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=9842.08..42713.20 rows=53612 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=26806 width=40)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=26806 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=230562.62..230562.63 rows=1 width=10)
   ->  Aggregate  (cost=230562.62..230562.63 rows=1 width=10)
         ->  Nested Loop  (cost=215743.84..230557.62 rows=2000 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215743.84..221271.86 rows=192 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208584.34..211467.52 rows=192212 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.56 rows=6001156 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=200 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=200 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.90 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(13 rows)

query 17 run 2
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=230562.62..230562.63 rows=1 width=10)
   ->  Aggregate  (cost=230562.62..230562.63 rows=1 width=10)
         ->  Nested Loop  (cost=215743.84..230557.62 rows=2000 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215743.84..221271.86 rows=192 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208584.34..211467.52 rows=192212 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.56 rows=6001156 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=200 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=200 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.90 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(13 rows)

query 17 run 3
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=230562.62..230562.63 rows=1 width=10)
   ->  Aggregate  (cost=230562.62..230562.63 rows=1 width=10)
         ->  Nested Loop  (cost=215743.84..230557.62 rows=2000 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215743.84..221271.86 rows=192 width=40)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208584.34..211467.52 rows=192212 width=11)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.56 rows=6001156 width=11)
                     ->  Hash  (cost=7157.00..7157.00 rows=200 width=4)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=200 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.90 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(13 rows)

query 18 run 1
SET
SET
                                                                    QUERY PLAN                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1080771.92..1080774.92 rows=100 width=48)
   ->  GroupAggregate  (cost=1080771.92..1170789.26 rows=3000578 width=48)
         ->  Sort  (cost=1080771.92..1088273.36 rows=3000578 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=7042.21..698618.35 rows=3000578 width=48)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=34.21..620346.62 rows=3000578 width=29)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..340226.33 rows=750000 width=26)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22)
                                 ->  Materialize  (cost=0.00..276312.75 rows=372461 width=4)
                                       ->  GroupAggregate  (cost=0.00..268863.53 rows=372461 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233270.84 rows=6001156 width=11)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233270.84 rows=6001156 width=11)
                     ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(18 rows)

query 18 run 2
SET
SET
                                                                    QUERY PLAN                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1080771.92..1080774.92 rows=100 width=48)
   ->  GroupAggregate  (cost=1080771.92..1170789.26 rows=3000578 width=48)
         ->  Sort  (cost=1080771.92..1088273.36 rows=3000578 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=7042.21..698618.35 rows=3000578 width=48)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=34.21..620346.62 rows=3000578 width=29)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..340226.33 rows=750000 width=26)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22)
                                 ->  Materialize  (cost=0.00..276312.75 rows=372461 width=4)
                                       ->  GroupAggregate  (cost=0.00..268863.53 rows=372461 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233270.84 rows=6001156 width=11)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233270.84 rows=6001156 width=11)
                     ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(18 rows)

query 18 run 3
SET
SET
                                                                    QUERY PLAN                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1080771.92..1080774.92 rows=100 width=48)
   ->  GroupAggregate  (cost=1080771.92..1170789.26 rows=3000578 width=48)
         ->  Sort  (cost=1080771.92..1088273.36 rows=3000578 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=7042.21..698618.35 rows=3000578 width=48)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=34.21..620346.62 rows=3000578 width=29)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..340226.33 rows=750000 width=26)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22)
                                 ->  Materialize  (cost=0.00..276312.75 rows=372461 width=4)
                                       ->  GroupAggregate  (cost=0.00..268863.53 rows=372461 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233270.84 rows=6001156 width=11)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233270.84 rows=6001156 width=11)
                     ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23)
(18 rows)

query 19 run 1
SET
SET


 Limit  (cost=315169.09..315169.11 rows=1 width=16)
   ->  Aggregate  (cost=315169.09..315169.11 rows=1 width=16)
         ->  Hash Join  (cost=9157.00..315168.81 rows=113 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298601.68 rows=114002 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET
                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                   

 Limit  (cost=315169.09..315169.11 rows=1 width=16)
   ->  Aggregate  (cost=315169.09..315169.11 rows=1 width=16)
         ->  Hash Join  (cost=9157.00..315168.81 rows=113 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298601.68 rows=114002 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET


 Limit  (cost=315169.09..315169.11 rows=1 width=16)
   ->  Aggregate  (cost=315169.09..315169.11 rows=1 width=16)
         ->  Hash Join  (cost=9157.00..315168.81 rows=113 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298601.68 rows=114002 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170327.38..170327.38 rows=1 width=51)
   ->  Sort  (cost=170327.38..170327.38 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=170323.79..170327.37 rows=1 width=51)
               ->  Nested Loop  (cost=170323.79..170327.08 rows=1 width=55)
                     ->  HashAggregate  (cost=170323.79..170323.80 rows=1 width=8)
                           ->  Hash Join  (cost=167381.32..170323.79 rows=1 width=8)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=154815.55..156173.61 rows=90537 width=15)
                                       ->  Bitmap Heap Scan on lineitem  (cost=15877.73..148025.28 rows=905370 width=15)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15651.39 rows=905370 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=12440.19..12440.19 rows=8372 width=16)
                                       ->  Nested Loop  (cost=6662.05..12440.19 rows=8372 width=16)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 20 run 2
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170327.38..170327.38 rows=1 width=51)
   ->  Sort  (cost=170327.38..170327.38 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=170323.79..170327.37 rows=1 width=51)
               ->  Nested Loop  (cost=170323.79..170327.08 rows=1 width=55)
                     ->  HashAggregate  (cost=170323.79..170323.80 rows=1 width=8)
                           ->  Hash Join  (cost=167381.32..170323.79 rows=1 width=8)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=154815.55..156173.61 rows=90537 width=15)
                                       ->  Bitmap Heap Scan on lineitem  (cost=15877.73..148025.28 rows=905370 width=15)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15651.39 rows=905370 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=12440.19..12440.19 rows=8372 width=16)
                                       ->  Nested Loop  (cost=6662.05..12440.19 rows=8372 width=16)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 20 run 3
SET
SET
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170327.38..170327.38 rows=1 width=51)
   ->  Sort  (cost=170327.38..170327.38 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=170323.79..170327.37 rows=1 width=51)
               ->  Nested Loop  (cost=170323.79..170327.08 rows=1 width=55)
                     ->  HashAggregate  (cost=170323.79..170323.80 rows=1 width=8)
                           ->  Hash Join  (cost=167381.32..170323.79 rows=1 width=8)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=154815.55..156173.61 rows=90537 width=15)
                                       ->  Bitmap Heap Scan on lineitem  (cost=15877.73..148025.28 rows=905370 width=15)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15651.39 rows=905370 width=0)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=12440.19..12440.19 rows=8372 width=16)
                                       ->  Nested Loop  (cost=6662.05..12440.19 rows=8372 width=16)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(26 rows)

query 21 run 1
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=409391.65..409391.66 rows=1 width=26)
   ->  Sort  (cost=409391.65..409391.66 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=409391.63..409391.64 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=54931.02..409391.62 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54931.02..409387.85 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54931.02..258002.83 rows=38878 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=236.77..202119.73 rows=80007 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..193581.45 rows=2000385 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=231.77..231.77 rows=400 width=30)
                                             ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=728900 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=728900 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.65 rows=16 width=8)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.69 rows=5 width=8)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
(30 rows)

query 21 run 2
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=409391.65..409391.66 rows=1 width=26)
   ->  Sort  (cost=409391.65..409391.66 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=409391.63..409391.64 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=54931.02..409391.62 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54931.02..409387.85 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54931.02..258002.83 rows=38878 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=236.77..202119.73 rows=80007 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..193581.45 rows=2000385 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=231.77..231.77 rows=400 width=30)
                                             ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=728900 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=728900 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.65 rows=16 width=8)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.69 rows=5 width=8)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
(30 rows)

query 21 run 3
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=409391.65..409391.66 rows=1 width=26)
   ->  Sort  (cost=409391.65..409391.66 rows=1 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=409391.63..409391.64 rows=1 width=26)
               ->  Nested Loop Anti Join  (cost=54931.02..409391.62 rows=1 width=26)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54931.02..409387.85 rows=1 width=34)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54931.02..258002.83 rows=38878 width=38)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=236.77..202119.73 rows=80007 width=34)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..193581.45 rows=2000385 width=8)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=231.77..231.77 rows=400 width=30)
                                             ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=728900 width=4)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=728900 width=4)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.65 rows=16 width=8)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.69 rows=5 width=8)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
(30 rows)

query 22 run 1
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18081.98..18081.98 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.27..7582.28 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4709 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10499.70..10501.54 rows=739 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=10481.22..10496.00 rows=739 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..10475.68 rows=739 width=24)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..19.51 rows=18 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

query 22 run 2
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18081.98..18081.98 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.27..7582.28 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4709 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10499.70..10501.54 rows=739 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=10481.22..10496.00 rows=739 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..10475.68 rows=739 width=24)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..19.51 rows=18 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

query 22 run 3
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18081.98..18081.98 rows=1 width=24)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.27..7582.28 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4709 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10499.70..10501.54 rows=739 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=10481.22..10496.00 rows=739 width=24)
               ->  Nested Loop Anti Join  (cost=0.00..10475.68 rows=739 width=24)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..19.51 rows=18 width=4)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
(13 rows)

