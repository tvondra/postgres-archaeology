query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=383026.19..383026.19 rows=1 width=51)
   ->  Sort  (cost=383026.19..383026.20 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=383025.84..383026.11 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=6000626 width=51)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=383026.19..383026.19 rows=1 width=51)
   ->  Sort  (cost=383026.19..383026.20 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=383025.84..383026.11 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=6000626 width=51)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=383026.19..383026.19 rows=1 width=51)
   ->  Sort  (cost=383026.19..383026.20 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=383025.84..383026.11 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=6000626 width=51)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47343.41..47343.41 rows=1 width=216)
   ->  Sort  (cost=47343.41..47343.41 rows=1 width=216)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=8553.46..47343.40 rows=1 width=216)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=444.03..32961.90 rows=158087 width=198)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19)
                     ->  Hash  (cost=419.03..419.03 rows=2000 width=187)
                           ->  Hash Join  (cost=2.53..419.03 rows=2000 width=187)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=162)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=8108.00..8108.00 rows=114 width=33)
                     ->  Seq Scan on part  (cost=0.00..8108.00 rows=114 width=33)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=63.08..63.09 rows=1 width=11)
                       ->  Nested Loop  (cost=1.56..63.07 rows=4 width=11)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..61.77 rows=19 width=15)
                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..59.94 rows=19 width=15)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.62 rows=19 width=15)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.95 rows=1 width=8)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(38 rows)

query 2 run 2
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47343.41..47343.41 rows=1 width=216)
   ->  Sort  (cost=47343.41..47343.41 rows=1 width=216)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=8553.46..47343.40 rows=1 width=216)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=444.03..32961.90 rows=158087 width=198)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19)
                     ->  Hash  (cost=419.03..419.03 rows=2000 width=187)
                           ->  Hash Join  (cost=2.53..419.03 rows=2000 width=187)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=162)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=8108.00..8108.00 rows=114 width=33)
                     ->  Seq Scan on part  (cost=0.00..8108.00 rows=114 width=33)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=63.08..63.09 rows=1 width=11)
                       ->  Nested Loop  (cost=1.56..63.07 rows=4 width=11)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..61.77 rows=19 width=15)
                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..59.94 rows=19 width=15)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.62 rows=19 width=15)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.95 rows=1 width=8)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(38 rows)

query 2 run 3
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47343.41..47343.41 rows=1 width=216)
   ->  Sort  (cost=47343.41..47343.41 rows=1 width=216)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=8553.46..47343.40 rows=1 width=216)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=444.03..32961.90 rows=158087 width=198)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19)
                     ->  Hash  (cost=419.03..419.03 rows=2000 width=187)
                           ->  Hash Join  (cost=2.53..419.03 rows=2000 width=187)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=162)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=8108.00..8108.00 rows=114 width=33)
                     ->  Seq Scan on part  (cost=0.00..8108.00 rows=114 width=33)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=63.08..63.09 rows=1 width=11)
                       ->  Nested Loop  (cost=1.56..63.07 rows=4 width=11)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..61.77 rows=19 width=15)
                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..59.94 rows=19 width=15)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.62 rows=19 width=15)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.95 rows=1 width=8)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(38 rows)

query 3 run 1
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=388348.96..388348.99 rows=10 width=34)
   ->  Sort  (cost=388348.96..389183.52 rows=333823 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=347708.14..357722.83 rows=333823 width=34)
               ->  Sort  (cost=347708.14..348542.70 rows=333823 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=68541.89..317082.01 rows=333823 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=3251121 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=66616.65..66616.65 rows=154019 width=12)
                                 ->  Hash Join  (cost=15085.81..66616.65 rows=154019 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8595.06..49532.89 rows=724226 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8414.01 rows=724226 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=31900 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=31900 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=388348.96..388348.99 rows=10 width=34)
   ->  Sort  (cost=388348.96..389183.52 rows=333823 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=347708.14..357722.83 rows=333823 width=34)
               ->  Sort  (cost=347708.14..348542.70 rows=333823 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=68541.89..317082.01 rows=333823 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=3251121 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=66616.65..66616.65 rows=154019 width=12)
                                 ->  Hash Join  (cost=15085.81..66616.65 rows=154019 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8595.06..49532.89 rows=724226 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8414.01 rows=724226 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=31900 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=31900 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=388348.96..388348.99 rows=10 width=34)
   ->  Sort  (cost=388348.96..389183.52 rows=333823 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=347708.14..357722.83 rows=333823 width=34)
               ->  Sort  (cost=347708.14..348542.70 rows=333823 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=68541.89..317082.01 rows=333823 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=3251121 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=66616.65..66616.65 rows=154019 width=12)
                                 ->  Hash Join  (cost=15085.81..66616.65 rows=154019 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8595.06..49532.89 rows=724226 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8414.01 rows=724226 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=31900 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=31900 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43719.26..43719.27 rows=1 width=19)
   ->  Sort  (cost=43719.26..43719.27 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=43719.24..43719.25 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=824.68..43574.58 rows=28932 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..817.45 rows=57864 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..12.36 rows=64 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 2
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43719.26..43719.27 rows=1 width=19)
   ->  Sort  (cost=43719.26..43719.27 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=43719.24..43719.25 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=824.68..43574.58 rows=28932 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..817.45 rows=57864 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..12.36 rows=64 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 3
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=43719.26..43719.27 rows=1 width=19)
   ->  Sort  (cost=43719.26..43719.27 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=43719.24..43719.25 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=824.68..43574.58 rows=28932 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..817.45 rows=57864 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..12.36 rows=64 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295799.06..295799.06 rows=1 width=51)
   ->  Sort  (cost=295799.06..295799.12 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=295798.04..295798.48 rows=25 width=51)
               ->  Hash Join  (cost=48031.73..295762.56 rows=7096 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Hash Join  (cost=47522.73..289821.48 rows=178704 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=30)
                           ->  Hash  (cost=46964.40..46964.40 rows=44667 width=41)
                                 ->  Hash Join  (cost=10166.03..46964.40 rows=44667 width=41)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3209.00..38444.02 rows=223335 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3153.16 rows=223335 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=6582.03..6582.03 rows=30000 width=41)
                                             ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=41)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(29 rows)

query 5 run 2
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295799.06..295799.06 rows=1 width=51)
   ->  Sort  (cost=295799.06..295799.12 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=295798.04..295798.48 rows=25 width=51)
               ->  Hash Join  (cost=48031.73..295762.56 rows=7096 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Hash Join  (cost=47522.73..289821.48 rows=178704 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=30)
                           ->  Hash  (cost=46964.40..46964.40 rows=44667 width=41)
                                 ->  Hash Join  (cost=10166.03..46964.40 rows=44667 width=41)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3209.00..38444.02 rows=223335 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3153.16 rows=223335 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=6582.03..6582.03 rows=30000 width=41)
                                             ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=41)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(29 rows)

query 5 run 3
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295799.06..295799.06 rows=1 width=51)
   ->  Sort  (cost=295799.06..295799.12 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=295798.04..295798.48 rows=25 width=51)
               ->  Hash Join  (cost=48031.73..295762.56 rows=7096 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Hash Join  (cost=47522.73..289821.48 rows=178704 width=63)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=30)
                           ->  Hash  (cost=46964.40..46964.40 rows=44667 width=41)
                                 ->  Hash Join  (cost=10166.03..46964.40 rows=44667 width=41)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3209.00..38444.02 rows=223335 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3153.16 rows=223335 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=6582.03..6582.03 rows=30000 width=41)
                                             ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=41)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3.82..3.83 rows=1 width=22)
   ->  Aggregate  (cost=3.82..3.83 rows=1 width=22)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..3.81 rows=1 width=22)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3.82..3.83 rows=1 width=22)
   ->  Aggregate  (cost=3.82..3.83 rows=1 width=22)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..3.81 rows=1 width=22)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3.82..3.83 rows=1 width=22)
   ->  Aggregate  (cost=3.82..3.83 rows=1 width=22)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..3.81 rows=1 width=22)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295721.09..295721.12 rows=1 width=84)
   ->  GroupAggregate  (cost=295721.09..295923.42 rows=5781 width=84)
         ->  Sort  (cost=295721.09..295735.54 rows=5781 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=97284.69..295359.86 rows=5781 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=96775.69..290394.26 rows=145662 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=34997.22..220325.77 rows=1822237 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..34541.66 rows=1822237 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=60279.68..60279.68 rows=119904 width=66)
                                 ->  Hash Join  (cost=6570.68..60279.68 rows=119904 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..46885.00 rows=1500000 width=8)
                                       ->  Hash  (cost=6420.80..6420.80 rows=11990 width=66)
                                             ->  Hash Join  (cost=21.30..6420.80 rows=11990 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295721.09..295721.12 rows=1 width=84)
   ->  GroupAggregate  (cost=295721.09..295923.42 rows=5781 width=84)
         ->  Sort  (cost=295721.09..295735.54 rows=5781 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=97284.69..295359.86 rows=5781 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=96775.69..290394.26 rows=145662 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=34997.22..220325.77 rows=1822237 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..34541.66 rows=1822237 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=60279.68..60279.68 rows=119904 width=66)
                                 ->  Hash Join  (cost=6570.68..60279.68 rows=119904 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..46885.00 rows=1500000 width=8)
                                       ->  Hash  (cost=6420.80..6420.80 rows=11990 width=66)
                                             ->  Hash Join  (cost=21.30..6420.80 rows=11990 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295721.09..295721.12 rows=1 width=84)
   ->  GroupAggregate  (cost=295721.09..295923.42 rows=5781 width=84)
         ->  Sort  (cost=295721.09..295735.54 rows=5781 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=97284.69..295359.86 rows=5781 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=96775.69..290394.26 rows=145662 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=34997.22..220325.77 rows=1822237 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..34541.66 rows=1822237 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=60279.68..60279.68 rows=119904 width=66)
                                 ->  Hash Join  (cost=6570.68..60279.68 rows=119904 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..46885.00 rows=1500000 width=8)
                                       ->  Hash  (cost=6420.80..6420.80 rows=11990 width=66)
                                             ->  Hash Join  (cost=21.30..6420.80 rows=11990 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131502.38..131502.39 rows=1 width=55)
   ->  Sort  (cost=131502.38..131504.13 rows=697 width=55)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=131445.07..131469.47 rows=697 width=55)
               ->  Hash Join  (cost=56609.49..131428.04 rows=2271 width=55)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=56607.93..131383.90 rows=2271 width=30)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=56123.93..130842.87 rows=2288 width=30)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..74551.35 rows=38588 width=30)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1286 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..51.62 rows=35 width=34)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=55012.41..55012.41 rows=88921 width=8)
                                       ->  Hash Join  (cost=13346.06..55012.41 rows=88921 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6389.03..44943.14 rows=444607 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6277.88 rows=444607 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=6582.03..6582.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131502.38..131502.39 rows=1 width=55)
   ->  Sort  (cost=131502.38..131504.13 rows=697 width=55)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=131445.07..131469.47 rows=697 width=55)
               ->  Hash Join  (cost=56609.49..131428.04 rows=2271 width=55)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=56607.93..131383.90 rows=2271 width=30)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=56123.93..130842.87 rows=2288 width=30)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..74551.35 rows=38588 width=30)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1286 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..51.62 rows=35 width=34)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=55012.41..55012.41 rows=88921 width=8)
                                       ->  Hash Join  (cost=13346.06..55012.41 rows=88921 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6389.03..44943.14 rows=444607 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6277.88 rows=444607 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=6582.03..6582.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=131502.38..131502.39 rows=1 width=55)
   ->  Sort  (cost=131502.38..131504.13 rows=697 width=55)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=131445.07..131469.47 rows=697 width=55)
               ->  Hash Join  (cost=56609.49..131428.04 rows=2271 width=55)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=56607.93..131383.90 rows=2271 width=30)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=56123.93..130842.87 rows=2288 width=30)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..74551.35 rows=38588 width=30)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1286 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..51.62 rows=35 width=34)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=55012.41..55012.41 rows=88921 width=8)
                                       ->  Hash Join  (cost=13346.06..55012.41 rows=88921 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6389.03..44943.14 rows=444607 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6277.88 rows=444607 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=6582.03..6582.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35437.66..35437.70 rows=1 width=76)
   ->  GroupAggregate  (cost=35437.66..35438.37 rows=19 width=76)
         ->  Sort  (cost=35437.66..35437.71 rows=19 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..35437.26 rows=19 width=76)
                     ->  Nested Loop  (cost=0.00..35417.59 rows=19 width=51)
                           ->  Nested Loop  (cost=0.00..35360.29 rows=19 width=55)
                                 ->  Nested Loop  (cost=0.00..35301.08 rows=19 width=55)
                                       ->  Nested Loop  (cost=0.00..13504.20 rows=6400 width=23)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=1600 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.45 rows=19 width=19)
                                                   Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.39 rows=1 width=44)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.10 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.00 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 9 run 2
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35437.66..35437.70 rows=1 width=76)
   ->  GroupAggregate  (cost=35437.66..35438.37 rows=19 width=76)
         ->  Sort  (cost=35437.66..35437.71 rows=19 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..35437.26 rows=19 width=76)
                     ->  Nested Loop  (cost=0.00..35417.59 rows=19 width=51)
                           ->  Nested Loop  (cost=0.00..35360.29 rows=19 width=55)
                                 ->  Nested Loop  (cost=0.00..35301.08 rows=19 width=55)
                                       ->  Nested Loop  (cost=0.00..13504.20 rows=6400 width=23)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=1600 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.45 rows=19 width=19)
                                                   Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.39 rows=1 width=44)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.10 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.00 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 9 run 3
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35437.66..35437.70 rows=1 width=76)
   ->  GroupAggregate  (cost=35437.66..35438.37 rows=19 width=76)
         ->  Sort  (cost=35437.66..35437.71 rows=19 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..35437.26 rows=19 width=76)
                     ->  Nested Loop  (cost=0.00..35417.59 rows=19 width=51)
                           ->  Nested Loop  (cost=0.00..35360.29 rows=19 width=55)
                                 ->  Nested Loop  (cost=0.00..35301.08 rows=19 width=55)
                                       ->  Nested Loop  (cost=0.00..13504.20 rows=6400 width=23)
                                             ->  Seq Scan on part  (cost=0.00..7608.00 rows=1600 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.45 rows=19 width=19)
                                                   Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.39 rows=1 width=44)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.10 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.00 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=300422.56..300422.61 rows=20 width=212)
   ->  Sort  (cost=300422.56..300555.06 rows=53003 width=212)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=294143.35..296263.47 rows=53003 width=212)
               ->  Sort  (cost=294143.35..294275.85 rows=53003 width=212)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=39093.32..289984.26 rows=53003 width=212)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=39091.76..289253.90 rows=53003 width=187)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=31499.76..280403.08 rows=53003 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=1536311 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=30852.88..30852.88 rows=51750 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=745.25..30852.88 rows=51750 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..732.31 rows=51750 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=165)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=165)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 10 run 2
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=300422.56..300422.61 rows=20 width=212)
   ->  Sort  (cost=300422.56..300555.06 rows=53003 width=212)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=294143.35..296263.47 rows=53003 width=212)
               ->  Sort  (cost=294143.35..294275.85 rows=53003 width=212)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=39093.32..289984.26 rows=53003 width=212)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=39091.76..289253.90 rows=53003 width=187)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=31499.76..280403.08 rows=53003 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=1536311 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=30852.88..30852.88 rows=51750 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=745.25..30852.88 rows=51750 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..732.31 rows=51750 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=165)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=165)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 10 run 3
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=300422.56..300422.61 rows=20 width=212)
   ->  Sort  (cost=300422.56..300555.06 rows=53003 width=212)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=294143.35..296263.47 rows=53003 width=212)
               ->  Sort  (cost=294143.35..294275.85 rows=53003 width=212)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=39093.32..289984.26 rows=53003 width=212)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=39091.76..289253.90 rows=53003 width=187)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=31499.76..280403.08 rows=53003 width=26)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=1536311 width=26)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=30852.88..30852.88 rows=51750 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=745.25..30852.88 rows=51750 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..732.31 rows=51750 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=165)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=165)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(23 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30046.92..30046.92 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=13328.11..13328.13 rows=1 width=15)
           ->  Nested Loop  (cost=0.00..13249.07 rows=31617 width=15)
                 ->  Nested Loop  (cost=0.00..351.67 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.36 rows=400 width=8)
                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.26 rows=79 width=19)
                       Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
   ->  Sort  (cost=16718.78..16797.83 rows=31617 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=13486.20..14355.66 rows=31617 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..13249.07 rows=31617 width=19)
                     ->  Nested Loop  (cost=0.00..351.67 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.36 rows=400 width=8)
                                 Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.26 rows=79 width=23)
                           Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
(23 rows)

query 11 run 2
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30046.92..30046.92 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=13328.11..13328.13 rows=1 width=15)
           ->  Nested Loop  (cost=0.00..13249.07 rows=31617 width=15)
                 ->  Nested Loop  (cost=0.00..351.67 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.36 rows=400 width=8)
                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.26 rows=79 width=19)
                       Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
   ->  Sort  (cost=16718.78..16797.83 rows=31617 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=13486.20..14355.66 rows=31617 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..13249.07 rows=31617 width=19)
                     ->  Nested Loop  (cost=0.00..351.67 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.36 rows=400 width=8)
                                 Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.26 rows=79 width=23)
                           Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
(23 rows)

query 11 run 3
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30046.92..30046.92 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=13328.11..13328.13 rows=1 width=15)
           ->  Nested Loop  (cost=0.00..13249.07 rows=31617 width=15)
                 ->  Nested Loop  (cost=0.00..351.67 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.36 rows=400 width=8)
                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.26 rows=79 width=19)
                       Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
   ->  Sort  (cost=16718.78..16797.83 rows=31617 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=13486.20..14355.66 rows=31617 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..13249.07 rows=31617 width=19)
                     ->  Nested Loop  (cost=0.00..351.67 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.36 rows=400 width=8)
                                 Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.26 rows=79 width=23)
                           Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359992.42..359992.42 rows=1 width=33)
   ->  Sort  (cost=359992.42..359992.42 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=359992.38..359992.41 rows=1 width=33)
               ->  Merge Join  (cost=295092.04..359782.25 rows=28018 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=23)
                     ->  Sort  (cost=295092.04..295162.08 rows=28018 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..293022.34 rows=28018 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359992.42..359992.42 rows=1 width=33)
   ->  Sort  (cost=359992.42..359992.42 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=359992.38..359992.41 rows=1 width=33)
               ->  Merge Join  (cost=295092.04..359782.25 rows=28018 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=23)
                     ->  Sort  (cost=295092.04..295162.08 rows=28018 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..293022.34 rows=28018 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359992.42..359992.42 rows=1 width=33)
   ->  Sort  (cost=359992.42..359992.42 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=359992.38..359992.41 rows=1 width=33)
               ->  Merge Join  (cost=295092.04..359782.25 rows=28018 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=23)
                     ->  Sort  (cost=295092.04..295162.08 rows=28018 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..293022.34 rows=28018 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262584.44..262584.44 rows=1 width=8)
   ->  Sort  (cost=262584.44..262584.94 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=262574.29..262576.79 rows=200 width=8)
               ->  GroupAggregate  (cost=220990.23..260324.29 rows=150000 width=8)
                     ->  Merge Left Join  (cost=220990.23..250949.29 rows=1500000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..7088.76 rows=150000 width=4)
                           ->  Sort  (cost=220990.23..224740.23 rows=1500000 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..50635.00 rows=1500000 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 13 run 2
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262584.44..262584.44 rows=1 width=8)
   ->  Sort  (cost=262584.44..262584.94 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=262574.29..262576.79 rows=200 width=8)
               ->  GroupAggregate  (cost=220990.23..260324.29 rows=150000 width=8)
                     ->  Merge Left Join  (cost=220990.23..250949.29 rows=1500000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..7088.76 rows=150000 width=4)
                           ->  Sort  (cost=220990.23..224740.23 rows=1500000 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..50635.00 rows=1500000 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 13 run 3
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262584.44..262584.44 rows=1 width=8)
   ->  Sort  (cost=262584.44..262584.94 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=262574.29..262576.79 rows=200 width=8)
               ->  GroupAggregate  (cost=220990.23..260324.29 rows=150000 width=8)
                     ->  Merge Left Join  (cost=220990.23..250949.29 rows=1500000 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..7088.76 rows=150000 width=4)
                           ->  Sort  (cost=220990.23..224740.23 rows=1500000 width=8)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..50635.00 rows=1500000 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(12 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87194.97..87195.00 rows=1 width=46)
   ->  Aggregate  (cost=87194.97..87195.00 rows=1 width=46)
         ->  Hash Join  (cost=11075.49..86813.16 rows=76361 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1467.49..75677.94 rows=76361 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1448.40 rows=76361 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=7108.00..7108.00 rows=200000 width=28)
                     ->  Seq Scan on part  (cost=0.00..7108.00 rows=200000 width=28)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87194.97..87195.00 rows=1 width=46)
   ->  Aggregate  (cost=87194.97..87195.00 rows=1 width=46)
         ->  Hash Join  (cost=11075.49..86813.16 rows=76361 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1467.49..75677.94 rows=76361 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1448.40 rows=76361 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=7108.00..7108.00 rows=200000 width=28)
                     ->  Seq Scan on part  (cost=0.00..7108.00 rows=200000 width=28)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87194.97..87195.00 rows=1 width=46)
   ->  Aggregate  (cost=87194.97..87195.00 rows=1 width=46)
         ->  Hash Join  (cost=11075.49..86813.16 rows=76361 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1467.49..75677.94 rows=76361 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1448.40 rows=76361 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=7108.00..7108.00 rows=200000 width=28)
                     ->  Seq Scan on part  (cost=0.00..7108.00 rows=200000 width=28)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=296187.97..296189.22 rows=1 width=113)
   InitPlan
     ->  Aggregate  (cost=147795.93..147795.94 rows=1 width=32)
           ->  HashAggregate  (cost=147784.28..147791.07 rows=388 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=4430.01..146631.25 rows=230607 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4372.36 rows=230607 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=148392.03..148877.60 rows=388 width=113)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..454.75 rows=10000 width=81)
         ->  Sort  (cost=148392.03..148393.00 rows=388 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=148360.80..148375.35 rows=388 width=36)
                     ->  HashAggregate  (cost=148360.80..148371.47 rows=388 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4430.01..146631.25 rows=230607 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4372.36 rows=230607 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=296187.97..296189.22 rows=1 width=113)
   InitPlan
     ->  Aggregate  (cost=147795.93..147795.94 rows=1 width=32)
           ->  HashAggregate  (cost=147784.28..147791.07 rows=388 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=4430.01..146631.25 rows=230607 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4372.36 rows=230607 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=148392.03..148877.60 rows=388 width=113)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..454.75 rows=10000 width=81)
         ->  Sort  (cost=148392.03..148393.00 rows=388 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=148360.80..148375.35 rows=388 width=36)
                     ->  HashAggregate  (cost=148360.80..148371.47 rows=388 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4430.01..146631.25 rows=230607 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4372.36 rows=230607 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=296187.97..296189.22 rows=1 width=113)
   InitPlan
     ->  Aggregate  (cost=147795.93..147795.94 rows=1 width=32)
           ->  HashAggregate  (cost=147784.28..147791.07 rows=388 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=4430.01..146631.25 rows=230607 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4372.36 rows=230607 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=148392.03..148877.60 rows=388 width=113)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..454.75 rows=10000 width=81)
         ->  Sort  (cost=148392.03..148393.00 rows=388 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=148360.80..148375.35 rows=388 width=36)
                     ->  HashAggregate  (cost=148360.80..148371.47 rows=388 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4430.01..146631.25 rows=230607 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4372.36 rows=230607 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=50425.34..50425.34 rows=1 width=46)
   ->  Sort  (cost=50425.34..50432.63 rows=2916 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=49492.20..50257.53 rows=2916 width=46)
               ->  Sort  (cost=49492.20..49637.98 rows=58310 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=10856.44..44876.54 rows=58310 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=384.00..29321.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=10108.00..10108.00 rows=29155 width=46)
                                 ->  Seq Scan on part  (cost=0.00..10108.00 rows=29155 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=50425.34..50425.34 rows=1 width=46)
   ->  Sort  (cost=50425.34..50432.63 rows=2916 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=49492.20..50257.53 rows=2916 width=46)
               ->  Sort  (cost=49492.20..49637.98 rows=58310 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=10856.44..44876.54 rows=58310 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=384.00..29321.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=10108.00..10108.00 rows=29155 width=46)
                                 ->  Seq Scan on part  (cost=0.00..10108.00 rows=29155 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=50425.34..50425.34 rows=1 width=46)
   ->  Sort  (cost=50425.34..50432.63 rows=2916 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=49492.20..50257.53 rows=2916 width=46)
               ->  Sort  (cost=49492.20..49637.98 rows=58310 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=10856.44..44876.54 rows=58310 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=384.00..29321.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=10108.00..10108.00 rows=29155 width=46)
                                 ->  Seq Scan on part  (cost=0.00..10108.00 rows=29155 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=270461.46..270461.47 rows=1 width=13)
   ->  Aggregate  (cost=270461.46..270461.47 rows=1 width=13)
         ->  Nested Loop  (cost=256123.69..270456.53 rows=1970 width=13)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Hash Join  (cost=256123.69..261110.24 rows=171 width=40)
                     Hash Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=248013.23..250614.01 rows=173386 width=14)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=8108.00..8108.00 rows=197 width=4)
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=197 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..54.13 rows=35 width=27)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(13 rows)

query 17 run 2
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=270461.46..270461.47 rows=1 width=13)
   ->  Aggregate  (cost=270461.46..270461.47 rows=1 width=13)
         ->  Nested Loop  (cost=256123.69..270456.53 rows=1970 width=13)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Hash Join  (cost=256123.69..261110.24 rows=171 width=40)
                     Hash Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=248013.23..250614.01 rows=173386 width=14)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=8108.00..8108.00 rows=197 width=4)
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=197 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..54.13 rows=35 width=27)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(13 rows)

query 17 run 3
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=270461.46..270461.47 rows=1 width=13)
   ->  Aggregate  (cost=270461.46..270461.47 rows=1 width=13)
         ->  Nested Loop  (cost=256123.69..270456.53 rows=1970 width=13)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Hash Join  (cost=256123.69..261110.24 rows=171 width=40)
                     Hash Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=248013.23..250614.01 rows=173386 width=14)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=8108.00..8108.00 rows=197 width=4)
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=197 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..54.13 rows=35 width=27)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(13 rows)

query 18 run 1
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=576925.92..576928.92 rows=100 width=57)
   ->  GroupAggregate  (cost=576925.92..580665.75 rows=124661 width=57)
         ->  Sort  (cost=576925.92..577237.58 rows=124661 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=324616.52..566374.83 rows=124661 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=324227.03..324227.03 rows=31159 width=51)
                           ->  Hash Join  (cost=258709.81..324227.03 rows=31159 width=51)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=251117.81..315895.00 rows=31159 width=29)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=25)
                                       ->  Sort  (cost=251117.81..251195.71 rows=31159 width=4)
                                             Sort Key: "IN_subquery".l_orderkey
                                             ->  HashAggregate  (cost=248013.23..248480.61 rows=31159 width=14)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26)
(20 rows)

query 18 run 2
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=576925.92..576928.92 rows=100 width=57)
   ->  GroupAggregate  (cost=576925.92..580665.75 rows=124661 width=57)
         ->  Sort  (cost=576925.92..577237.58 rows=124661 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=324616.52..566374.83 rows=124661 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=324227.03..324227.03 rows=31159 width=51)
                           ->  Hash Join  (cost=258709.81..324227.03 rows=31159 width=51)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=251117.81..315895.00 rows=31159 width=29)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=25)
                                       ->  Sort  (cost=251117.81..251195.71 rows=31159 width=4)
                                             Sort Key: "IN_subquery".l_orderkey
                                             ->  HashAggregate  (cost=248013.23..248480.61 rows=31159 width=14)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26)
(20 rows)

query 18 run 3
SET
SET
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=576925.92..576928.92 rows=100 width=57)
   ->  GroupAggregate  (cost=576925.92..580665.75 rows=124661 width=57)
         ->  Sort  (cost=576925.92..577237.58 rows=124661 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=324616.52..566374.83 rows=124661 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=324227.03..324227.03 rows=31159 width=51)
                           ->  Hash Join  (cost=258709.81..324227.03 rows=31159 width=51)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=251117.81..315895.00 rows=31159 width=29)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=25)
                                       ->  Sort  (cost=251117.81..251195.71 rows=31159 width=4)
                                             Sort Key: "IN_subquery".l_orderkey
                                             ->  HashAggregate  (cost=248013.23..248480.61 rows=31159 width=14)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26)
(20 rows)

query 19 run 1
SET
SET


 Limit  (cost=354747.97..354747.99 rows=1 width=22)
   ->  Aggregate  (cost=354747.97..354747.99 rows=1 width=22)
         ->  Hash Join  (cost=10107.77..354747.73 rows=95 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..338031.45 rows=101677 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=7608.00..7608.00 rows=199982 width=36)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=199982 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET


 Limit  (cost=354747.97..354747.99 rows=1 width=22)
   ->  Aggregate  (cost=354747.97..354747.99 rows=1 width=22)
         ->  Hash Join  (cost=10107.77..354747.73 rows=95 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..338031.45 rows=101677 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=7608.00..7608.00 rows=199982 width=36)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=199982 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET


 Limit  (cost=354747.97..354747.99 rows=1 width=22)
   ->  Aggregate  (cost=354747.97..354747.99 rows=1 width=22)
         ->  Hash Join  (cost=10107.77..354747.73 rows=95 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..338031.45 rows=101677 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=7608.00..7608.00 rows=199982 width=36)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=199982 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=207561.60..207561.60 rows=1 width=58)
   ->  Sort  (cost=207561.60..207561.60 rows=1 width=58)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=207558.01..207561.59 rows=1 width=58)
               ->  Nested Loop  (cost=207558.01..207561.30 rows=1 width=62)
                     ->  HashAggregate  (cost=207558.01..207558.02 rows=1 width=8)
                           ->  Nested Loop  (cost=204849.22..207558.01 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Hash Join  (cost=204849.22..207554.69 rows=1 width=44)
                                       Hash Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=197241.19..198652.74 rows=94103 width=18)
                                             ->  Bitmap Heap Scan on lineitem  (cost=18073.24..190183.54 rows=941020 width=18)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..17837.99 rows=941020 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=7608.01..7608.01 rows=1 width=4)
                                             ->  HashAggregate  (cost=7608.00..7608.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..7608.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.30 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=66)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(26 rows)

query 20 run 2
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=207561.60..207561.60 rows=1 width=58)
   ->  Sort  (cost=207561.60..207561.60 rows=1 width=58)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=207558.01..207561.59 rows=1 width=58)
               ->  Nested Loop  (cost=207558.01..207561.30 rows=1 width=62)
                     ->  HashAggregate  (cost=207558.01..207558.02 rows=1 width=8)
                           ->  Nested Loop  (cost=204849.22..207558.01 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Hash Join  (cost=204849.22..207554.69 rows=1 width=44)
                                       Hash Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=197241.19..198652.74 rows=94103 width=18)
                                             ->  Bitmap Heap Scan on lineitem  (cost=18073.24..190183.54 rows=941020 width=18)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..17837.99 rows=941020 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=7608.01..7608.01 rows=1 width=4)
                                             ->  HashAggregate  (cost=7608.00..7608.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..7608.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.30 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=66)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(26 rows)

query 20 run 3
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=207561.60..207561.60 rows=1 width=58)
   ->  Sort  (cost=207561.60..207561.60 rows=1 width=58)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=207558.01..207561.59 rows=1 width=58)
               ->  Nested Loop  (cost=207558.01..207561.30 rows=1 width=62)
                     ->  HashAggregate  (cost=207558.01..207558.02 rows=1 width=8)
                           ->  Nested Loop  (cost=204849.22..207558.01 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Hash Join  (cost=204849.22..207554.69 rows=1 width=44)
                                       Hash Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=197241.19..198652.74 rows=94103 width=18)
                                             ->  Bitmap Heap Scan on lineitem  (cost=18073.24..190183.54 rows=941020 width=18)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..17837.99 rows=941020 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=7608.01..7608.01 rows=1 width=4)
                                             ->  HashAggregate  (cost=7608.00..7608.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..7608.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.30 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=66)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(26 rows)

query 21 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1885687.48..1885687.73 rows=100 width=29)
   ->  Sort  (cost=1885687.48..1885711.47 rows=9598 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=1884932.66..1885052.64 rows=9598 width=29)
               ->  Nested Loop  (cost=255.11..1884884.67 rows=9598 width=29)
                     ->  Hash Join  (cost=255.11..1823501.24 rows=19857 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..1821172.19 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.84 rows=64 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..12.36 rows=193 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=250.11..250.11 rows=400 width=33)
                                 ->  Nested Loop  (cost=6.35..250.11 rows=400 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..243.79 rows=400 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.08 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 21 run 2
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1885687.48..1885687.73 rows=100 width=29)
   ->  Sort  (cost=1885687.48..1885711.47 rows=9598 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=1884932.66..1885052.64 rows=9598 width=29)
               ->  Nested Loop  (cost=255.11..1884884.67 rows=9598 width=29)
                     ->  Hash Join  (cost=255.11..1823501.24 rows=19857 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..1821172.19 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.84 rows=64 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..12.36 rows=193 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=250.11..250.11 rows=400 width=33)
                                 ->  Nested Loop  (cost=6.35..250.11 rows=400 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..243.79 rows=400 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.08 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 21 run 3
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1885687.48..1885687.73 rows=100 width=29)
   ->  Sort  (cost=1885687.48..1885711.47 rows=9598 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=1884932.66..1885052.64 rows=9598 width=29)
               ->  Nested Loop  (cost=255.11..1884884.67 rows=9598 width=29)
                     ->  Hash Join  (cost=255.11..1823501.24 rows=19857 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..1821172.19 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.84 rows=64 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..12.36 rows=193 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=250.11..250.11 rows=400 width=33)
                                 ->  Nested Loop  (cost=6.35..250.11 rows=400 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..243.79 rows=400 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.08 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 22 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=258034.16..258034.19 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=8166.29..8166.30 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..8154.50 rows=4715 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=249867.86..249893.72 rows=862 width=30)
         ->  Sort  (cost=249867.86..249870.02 rows=862 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..249825.83 rows=862 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..30.61 rows=19 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 2
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=258034.16..258034.19 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=8166.29..8166.30 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..8154.50 rows=4715 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=249867.86..249893.72 rows=862 width=30)
         ->  Sort  (cost=249867.86..249870.02 rows=862 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..249825.83 rows=862 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..30.61 rows=19 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 3
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=258034.16..258034.19 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=8166.29..8166.30 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..8154.50 rows=4715 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=249867.86..249893.72 rows=862 width=30)
         ->  Sort  (cost=249867.86..249870.02 rows=862 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..249825.83 rows=862 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..30.61 rows=19 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

