query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3434556.08..3434556.08 rows=1 width=33)
   ->  Sort  (cost=3434556.08..3434556.09 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3434555.78..3434556.05 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=59980165 width=33)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 2
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3434556.08..3434556.08 rows=1 width=33)
   ->  Sort  (cost=3434556.08..3434556.09 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3434555.78..3434556.05 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=59980165 width=33)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 1 run 3
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3434556.08..3434556.08 rows=1 width=33)
   ->  Sort  (cost=3434556.08..3434556.09 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3434555.78..3434556.05 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=59980165 width=33)
                     Filter: (l_shipdate <= '1998-12-01 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1214343.93..1214343.93 rows=1 width=195)
   ->  Sort  (cost=1214343.93..1214343.93 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=552917.46..1214343.92 rows=1 width=195)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using part_pkey on part  (cost=0.00..89790.33 rows=1496 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=552913.22..572091.62 rows=1534272 width=177)
                     ->  Sort  (cost=552913.22..556748.90 rows=1534272 width=177)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..307620.25 rows=1534272 width=177)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=169)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=169)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=147)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=491.29..491.30 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..491.21 rows=29 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..488.31 rows=147 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..484.73 rows=147 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..9.26 rows=153 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.10 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 2 run 2
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1214343.93..1214343.93 rows=1 width=195)
   ->  Sort  (cost=1214343.93..1214343.93 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=552917.46..1214343.92 rows=1 width=195)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using part_pkey on part  (cost=0.00..89790.33 rows=1496 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=552913.22..572091.62 rows=1534272 width=177)
                     ->  Sort  (cost=552913.22..556748.90 rows=1534272 width=177)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..307620.25 rows=1534272 width=177)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=169)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=169)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=147)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=491.29..491.30 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..491.21 rows=29 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..488.31 rows=147 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..484.73 rows=147 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..9.26 rows=153 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.10 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 2 run 3
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1214343.93..1214343.93 rows=1 width=195)
   ->  Sort  (cost=1214343.93..1214343.93 rows=1 width=195)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=552917.46..1214343.92 rows=1 width=195)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using part_pkey on part  (cost=0.00..89790.33 rows=1496 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=552913.22..572091.62 rows=1534272 width=177)
                     ->  Sort  (cost=552913.22..556748.90 rows=1534272 width=177)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..307620.25 rows=1534272 width=177)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=169)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=169)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=147)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=491.29..491.30 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..491.21 rows=29 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..488.31 rows=147 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..484.73 rows=147 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..9.26 rows=153 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.10 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 3 run 1
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3484640.47..3484640.50 rows=10 width=28)
   ->  Sort  (cost=3484640.47..3490444.68 rows=2321681 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3364819.35..3434469.78 rows=2321681 width=28)
               ->  Sort  (cost=3364819.35..3370623.56 rows=2321681 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=629930.36..3083629.70 rows=2321681 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=31680769 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=610821.68..610821.68 rows=1099254 width=12)
                                 ->  Hash Join  (cost=143715.07..610821.68 rows=1099254 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84890.82..442613.52 rows=7155736 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83101.89 rows=7155736 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.00..55068.00 rows=300500 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.00 rows=300500 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 2
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3484640.47..3484640.50 rows=10 width=28)
   ->  Sort  (cost=3484640.47..3490444.68 rows=2321681 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3364819.35..3434469.78 rows=2321681 width=28)
               ->  Sort  (cost=3364819.35..3370623.56 rows=2321681 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=629930.36..3083629.70 rows=2321681 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=31680769 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=610821.68..610821.68 rows=1099254 width=12)
                                 ->  Hash Join  (cost=143715.07..610821.68 rows=1099254 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84890.82..442613.52 rows=7155736 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83101.89 rows=7155736 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.00..55068.00 rows=300500 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.00 rows=300500 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 3 run 3
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3484640.47..3484640.50 rows=10 width=28)
   ->  Sort  (cost=3484640.47..3490444.68 rows=2321681 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3364819.35..3434469.78 rows=2321681 width=28)
               ->  Sort  (cost=3364819.35..3370623.56 rows=2321681 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=629930.36..3083629.70 rows=2321681 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=31680769 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=610821.68..610821.68 rows=1099254 width=12)
                                 ->  Hash Join  (cost=143715.07..610821.68 rows=1099254 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84890.82..442613.52 rows=7155736 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83101.89 rows=7155736 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.00..55068.00 rows=300500 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.00 rows=300500 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358511.34..358511.35 rows=1 width=16)
   ->  Sort  (cost=358511.34..358511.35 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=358511.32..358511.33 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=7564.04..357183.50 rows=265564 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7497.65 rows=531128 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..66.82 rows=477 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 2
SET
SET
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358511.34..358511.35 rows=1 width=16)
   ->  Sort  (cost=358511.34..358511.35 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=358511.32..358511.33 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=7564.04..357183.50 rows=265564 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7497.65 rows=531128 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..66.82 rows=477 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 4 run 3
SET
SET
                                                     QUERY PLAN                                                      
---------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358511.34..358511.35 rows=1 width=16)
   ->  Sort  (cost=358511.34..358511.35 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=358511.32..358511.33 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=7564.04..357183.50 rows=265564 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7497.65 rows=531128 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..66.82 rows=477 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2473499.78..2473499.79 rows=1 width=42)
   ->  Sort  (cost=2473499.78..2473499.85 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2473499.22..2473499.66 rows=25 width=42)
               ->  Hash Join  (cost=420478.52..2473219.92 rows=55860 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=415732.52..2439816.26 rows=1404953 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=24)
                           ->  Hash  (cost=411341.02..411341.02 rows=351320 width=38)
                                 ->  Hash Join  (cost=96599.82..411341.02 rows=351320 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32904.29..335541.89 rows=2290773 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32331.60 rows=2290773 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.53..59945.53 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 5 run 2
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2473499.78..2473499.79 rows=1 width=42)
   ->  Sort  (cost=2473499.78..2473499.85 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2473499.22..2473499.66 rows=25 width=42)
               ->  Hash Join  (cost=420478.52..2473219.92 rows=55860 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=415732.52..2439816.26 rows=1404953 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=24)
                           ->  Hash  (cost=411341.02..411341.02 rows=351320 width=38)
                                 ->  Hash Join  (cost=96599.82..411341.02 rows=351320 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32904.29..335541.89 rows=2290773 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32331.60 rows=2290773 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.53..59945.53 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 5 run 3
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2473499.78..2473499.79 rows=1 width=42)
   ->  Sort  (cost=2473499.78..2473499.85 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2473499.22..2473499.66 rows=25 width=42)
               ->  Hash Join  (cost=420478.52..2473219.92 rows=55860 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=415732.52..2439816.26 rows=1404953 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=24)
                           ->  Hash  (cost=411341.02..411341.02 rows=351320 width=38)
                                 ->  Hash Join  (cost=96599.82..411341.02 rows=351320 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32904.29..335541.89 rows=2290773 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32331.60 rows=2290773 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.53..59945.53 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7.65..7.67 rows=1 width=16)
   ->  Aggregate  (cost=7.65..7.67 rows=1 width=16)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..7.65 rows=1 width=16)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7.65..7.67 rows=1 width=16)
   ->  Aggregate  (cost=7.65..7.67 rows=1 width=16)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..7.65 rows=1 width=16)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 6 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7.65..7.67 rows=1 width=16)
   ->  Aggregate  (cost=7.65..7.67 rows=1 width=16)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..7.65 rows=1 width=16)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1993-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(4 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2680501.77..2680501.77 rows=1 width=72)
   ->  Sort  (cost=2680501.77..2680609.24 rows=42990 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2679319.54..2680286.82 rows=42990 width=72)
               ->  Hash Join  (cost=878812.77..2678889.64 rows=42990 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=874066.77..2651874.65 rows=1081208 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=309313.22..1759125.47 rows=17639083 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..304903.45 rows=17639083 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=543383.52..543383.52 rows=919442 width=60)
                                 ->  Hash Join  (cost=59663.10..543383.52 rows=919442 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418276.00 rows=15000000 width=8)
                                       ->  Hash  (cost=58164.30..58164.30 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.30 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 7 run 2
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2680501.77..2680501.77 rows=1 width=72)
   ->  Sort  (cost=2680501.77..2680609.24 rows=42990 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2679319.54..2680286.82 rows=42990 width=72)
               ->  Hash Join  (cost=878812.77..2678889.64 rows=42990 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=874066.77..2651874.65 rows=1081208 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=309313.22..1759125.47 rows=17639083 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..304903.45 rows=17639083 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=543383.52..543383.52 rows=919442 width=60)
                                 ->  Hash Join  (cost=59663.10..543383.52 rows=919442 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418276.00 rows=15000000 width=8)
                                       ->  Hash  (cost=58164.30..58164.30 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.30 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 7 run 3
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2680501.77..2680501.77 rows=1 width=72)
   ->  Sort  (cost=2680501.77..2680609.24 rows=42990 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2679319.54..2680286.82 rows=42990 width=72)
               ->  Hash Join  (cost=878812.77..2678889.64 rows=42990 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=874066.77..2651874.65 rows=1081208 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=309313.22..1759125.47 rows=17639083 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..304903.45 rows=17639083 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=543383.52..543383.52 rows=919442 width=60)
                                 ->  Hash Join  (cost=59663.10..543383.52 rows=919442 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418276.00 rows=15000000 width=8)
                                       ->  Hash  (cost=58164.30..58164.30 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.30 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1172416.30..1172416.30 rows=1 width=46)
   ->  Sort  (cost=1172416.30..1172418.08 rows=710 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1172387.90..1172412.75 rows=710 width=46)
               ->  Hash Join  (cost=498818.56..1172266.44 rows=16195 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=498817.00..1171961.22 rows=16195 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=494321.00..1167140.34 rows=16293 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..671310.55 rows=358897 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66559.00 rows=12967 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.29 rows=28 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485809.14..485809.14 rows=680949 width=8)
                                       ->  Hash Join  (cost=127471.55..485809.14 rows=680949 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=63776.01..398653.69 rows=4440112 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..62665.99 rows=4440112 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.53..59945.53 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 2
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1172416.30..1172416.30 rows=1 width=46)
   ->  Sort  (cost=1172416.30..1172418.08 rows=710 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1172387.90..1172412.75 rows=710 width=46)
               ->  Hash Join  (cost=498818.56..1172266.44 rows=16195 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=498817.00..1171961.22 rows=16195 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=494321.00..1167140.34 rows=16293 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..671310.55 rows=358897 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66559.00 rows=12967 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.29 rows=28 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485809.14..485809.14 rows=680949 width=8)
                                       ->  Hash Join  (cost=127471.55..485809.14 rows=680949 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=63776.01..398653.69 rows=4440112 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..62665.99 rows=4440112 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.53..59945.53 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 8 run 3
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1172416.30..1172416.30 rows=1 width=46)
   ->  Sort  (cost=1172416.30..1172418.08 rows=710 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1172387.90..1172412.75 rows=710 width=46)
               ->  Hash Join  (cost=498818.56..1172266.44 rows=16195 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=498817.00..1171961.22 rows=16195 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=494321.00..1167140.34 rows=16293 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..671310.55 rows=358897 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66559.00 rows=12967 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.29 rows=28 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485809.14..485809.14 rows=680949 width=8)
                                       ->  Hash Join  (cost=127471.55..485809.14 rows=680949 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=63776.01..398653.69 rows=4440112 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..62665.99 rows=4440112 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.53..59945.53 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625398.35..625398.38 rows=1 width=61)
   ->  GroupAggregate  (cost=625398.35..625398.98 rows=17 width=61)
         ->  Sort  (cost=625398.35..625398.39 rows=17 width=61)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Hash Join  (cost=4497.56..625398.00 rows=17 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=4496.00..625396.12 rows=17 width=39)
                           ->  Nested Loop  (cost=4496.00..625330.36 rows=17 width=39)
                                 ->  Hash Join  (cost=4496.00..273870.59 rows=61371 width=28)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Nested Loop  (cost=0.00..268120.88 rows=64000 width=20)
                                             ->  Seq Scan on part  (cost=0.00..66559.00 rows=16000 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..10.69 rows=153 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                       Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 9 run 2
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625398.35..625398.38 rows=1 width=61)
   ->  GroupAggregate  (cost=625398.35..625398.98 rows=17 width=61)
         ->  Sort  (cost=625398.35..625398.39 rows=17 width=61)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Hash Join  (cost=4497.56..625398.00 rows=17 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=4496.00..625396.12 rows=17 width=39)
                           ->  Nested Loop  (cost=4496.00..625330.36 rows=17 width=39)
                                 ->  Hash Join  (cost=4496.00..273870.59 rows=61371 width=28)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Nested Loop  (cost=0.00..268120.88 rows=64000 width=20)
                                             ->  Seq Scan on part  (cost=0.00..66559.00 rows=16000 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..10.69 rows=153 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                       Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 9 run 3
SET
SET
                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625398.35..625398.38 rows=1 width=61)
   ->  GroupAggregate  (cost=625398.35..625398.98 rows=17 width=61)
         ->  Sort  (cost=625398.35..625398.39 rows=17 width=61)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Hash Join  (cost=4497.56..625398.00 rows=17 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=4496.00..625396.12 rows=17 width=39)
                           ->  Nested Loop  (cost=4496.00..625330.36 rows=17 width=39)
                                 ->  Hash Join  (cost=4496.00..273870.59 rows=61371 width=28)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Nested Loop  (cost=0.00..268120.88 rows=64000 width=20)
                                             ->  Seq Scan on part  (cost=0.00..66559.00 rows=16000 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..10.69 rows=153 width=16)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                       Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2648238.04..2648238.09 rows=20 width=189)
   ->  Sort  (cost=2648238.04..2649214.53 rows=390596 width=189)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2622220.58..2637844.42 rows=390596 width=189)
               ->  Sort  (cost=2622220.58..2623197.07 rows=390596 width=189)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=391010.05..2562770.61 rows=390596 width=189)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=391008.49..2557398.35 rows=390596 width=167)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=288713.49..2409816.80 rows=509374 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=14476634 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=282116.13..282116.13 rows=527789 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=7582.70..282116.13 rows=527789 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7450.76 rows=527789 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=151)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=151)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 2
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2648238.04..2648238.09 rows=20 width=189)
   ->  Sort  (cost=2648238.04..2649214.53 rows=390596 width=189)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2622220.58..2637844.42 rows=390596 width=189)
               ->  Sort  (cost=2622220.58..2623197.07 rows=390596 width=189)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=391010.05..2562770.61 rows=390596 width=189)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=391008.49..2557398.35 rows=390596 width=167)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=288713.49..2409816.80 rows=509374 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=14476634 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=282116.13..282116.13 rows=527789 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=7582.70..282116.13 rows=527789 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7450.76 rows=527789 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=151)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=151)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 3
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2648238.04..2648238.09 rows=20 width=189)
   ->  Sort  (cost=2648238.04..2649214.53 rows=390596 width=189)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2622220.58..2637844.42 rows=390596 width=189)
               ->  Sort  (cost=2622220.58..2623197.07 rows=390596 width=189)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=391010.05..2562770.61 rows=390596 width=189)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=391008.49..2557398.35 rows=390596 width=167)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=288713.49..2409816.80 rows=509374 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=14476634 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=282116.13..282116.13 rows=527789 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=7582.70..282116.13 rows=527789 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7450.76 rows=527789 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=151)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=151)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 11 run 1
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=651991.31..651991.31 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=324377.32..324377.34 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323610.18 rows=306854 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=327613.97..327744.92 rows=52381 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=325911.59..327352.06 rows=52381 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Hash Join  (cost=2337.64..323610.18 rows=306854 width=16)
                     Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=20)
                     ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                           ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                       Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(29 rows)

query 11 run 2
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=651991.31..651991.31 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=324377.32..324377.34 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323610.18 rows=306854 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=327613.97..327744.92 rows=52381 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=325911.59..327352.06 rows=52381 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Hash Join  (cost=2337.64..323610.18 rows=306854 width=16)
                     Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=20)
                     ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                           ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                       Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(29 rows)

query 11 run 3
SET
SET
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=651991.31..651991.31 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=324377.32..324377.34 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323610.18 rows=306854 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=327613.97..327744.92 rows=52381 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  HashAggregate  (cost=325911.59..327352.06 rows=52381 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Hash Join  (cost=2337.64..323610.18 rows=306854 width=16)
                     Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=20)
                     ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                           ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                       Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(29 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3159552.65..3159552.65 rows=1 width=27)
   ->  Sort  (cost=3159552.65..3159552.65 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3159552.61..3159552.64 rows=1 width=27)
               ->  Merge Join  (cost=2561583.05..3157402.28 rows=286711 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554973.87 rows=15000000 width=20)
                     ->  Sort  (cost=2560901.43..2561618.21 rows=286711 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534912.17 rows=286711 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 2
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3159552.65..3159552.65 rows=1 width=27)
   ->  Sort  (cost=3159552.65..3159552.65 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3159552.61..3159552.64 rows=1 width=27)
               ->  Merge Join  (cost=2561583.05..3157402.28 rows=286711 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554973.87 rows=15000000 width=20)
                     ->  Sort  (cost=2560901.43..2561618.21 rows=286711 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534912.17 rows=286711 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 12 run 3
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3159552.65..3159552.65 rows=1 width=27)
   ->  Sort  (cost=3159552.65..3159552.65 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3159552.61..3159552.64 rows=1 width=27)
               ->  Merge Join  (cost=2561583.05..3157402.28 rows=286711 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554973.87 rows=15000000 width=20)
                     ->  Sort  (cost=2560901.43..2561618.21 rows=286711 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534912.17 rows=286711 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2733016.68..2733016.69 rows=1 width=8)
   ->  Sort  (cost=2733016.68..2733017.18 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2733013.18..2733015.68 rows=200 width=8)
               ->  GroupAggregate  (cost=2375520.39..2710513.18 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2375520.39..2634252.05 rows=11502227 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.81 rows=1500000 width=4)
                           ->  Materialize  (cost=2375496.94..2562996.94 rows=15000000 width=8)
                                 ->  Sort  (cost=2375496.94..2412996.94 rows=15000000 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455776.00 rows=15000000 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 2
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2733016.68..2733016.69 rows=1 width=8)
   ->  Sort  (cost=2733016.68..2733017.18 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2733013.18..2733015.68 rows=200 width=8)
               ->  GroupAggregate  (cost=2375520.39..2710513.18 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2375520.39..2634252.05 rows=11502227 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.81 rows=1500000 width=4)
                           ->  Materialize  (cost=2375496.94..2562996.94 rows=15000000 width=8)
                                 ->  Sort  (cost=2375496.94..2412996.94 rows=15000000 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455776.00 rows=15000000 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 13 run 3
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2733016.68..2733016.69 rows=1 width=8)
   ->  Sort  (cost=2733016.68..2733017.18 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2733013.18..2733015.68 rows=200 width=8)
               ->  GroupAggregate  (cost=2375520.39..2710513.18 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2375520.39..2634252.05 rows=11502227 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.81 rows=1500000 width=4)
                           ->  Materialize  (cost=2375496.94..2562996.94 rows=15000000 width=8)
                                 ->  Sort  (cost=2375496.94..2412996.94 rows=15000000 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455776.00 rows=15000000 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=866252.85..866252.87 rows=1 width=37)
   ->  Aggregate  (cost=866252.85..866252.87 rows=1 width=37)
         ->  Hash Join  (cost=114585.91..862477.09 rows=755150 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14354.91..721203.58 rows=818321 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14150.33 rows=818321 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.00..61559.00 rows=2000000 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.00 rows=2000000 width=25)
(10 rows)

query 14 run 2
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=866252.85..866252.87 rows=1 width=37)
   ->  Aggregate  (cost=866252.85..866252.87 rows=1 width=37)
         ->  Hash Join  (cost=114585.91..862477.09 rows=755150 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14354.91..721203.58 rows=818321 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14150.33 rows=818321 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.00..61559.00 rows=2000000 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.00 rows=2000000 width=25)
(10 rows)

query 14 run 3
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=866252.85..866252.87 rows=1 width=37)
   ->  Aggregate  (cost=866252.85..866252.87 rows=1 width=37)
         ->  Hash Join  (cost=114585.91..862477.09 rows=755150 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14354.91..721203.58 rows=818321 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14150.33 rows=818321 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.00..61559.00 rows=2000000 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.00 rows=2000000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2501445.72..2501446.90 rows=1 width=104)
   InitPlan
     ->  Aggregate  (cost=1247776.90..1247776.91 rows=1 width=32)
           ->  HashAggregate  (cost=1247663.41..1247729.61 rows=3783 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=39555.90..1236385.95 rows=2255491 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38992.03 rows=2255491 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1253668.81..1258136.31 rows=3783 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=72)
         ->  Sort  (cost=1253668.81..1253678.26 rows=3783 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1253302.13..1253444.00 rows=3783 width=36)
                     ->  HashAggregate  (cost=1253302.13..1253406.17 rows=3783 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=39555.90..1236385.95 rows=2255491 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38992.03 rows=2255491 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 2
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2501445.72..2501446.90 rows=1 width=104)
   InitPlan
     ->  Aggregate  (cost=1247776.90..1247776.91 rows=1 width=32)
           ->  HashAggregate  (cost=1247663.41..1247729.61 rows=3783 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=39555.90..1236385.95 rows=2255491 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38992.03 rows=2255491 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1253668.81..1258136.31 rows=3783 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=72)
         ->  Sort  (cost=1253668.81..1253678.26 rows=3783 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1253302.13..1253444.00 rows=3783 width=36)
                     ->  HashAggregate  (cost=1253302.13..1253406.17 rows=3783 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=39555.90..1236385.95 rows=2255491 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38992.03 rows=2255491 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 15 run 3
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2501445.72..2501446.90 rows=1 width=104)
   InitPlan
     ->  Aggregate  (cost=1247776.90..1247776.91 rows=1 width=32)
           ->  HashAggregate  (cost=1247663.41..1247729.61 rows=3783 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=39555.90..1236385.95 rows=2255491 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38992.03 rows=2255491 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1253668.81..1258136.31 rows=3783 width=104)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=72)
         ->  Sort  (cost=1253668.81..1253678.26 rows=3783 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1253302.13..1253444.00 rows=3783 width=36)
                     ->  HashAggregate  (cost=1253302.13..1253406.17 rows=3783 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=39555.90..1236385.95 rows=2255491 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..38992.03 rows=2255491 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=509407.97..509407.97 rows=1 width=40)
   ->  Sort  (cost=509407.97..509474.59 rows=26650 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=501834.94..509274.72 rows=26650 width=40)
               ->  Sort  (cost=501834.94..503256.27 rows=568532 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98608.33..437497.65 rows=568532 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3496.00..281700.00 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91559.00..91559.00 rows=284266 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91559.00 rows=284266 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 2
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=509407.97..509407.97 rows=1 width=40)
   ->  Sort  (cost=509407.97..509474.59 rows=26650 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=501834.94..509274.72 rows=26650 width=40)
               ->  Sort  (cost=501834.94..503256.27 rows=568532 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98608.33..437497.65 rows=568532 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3496.00..281700.00 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91559.00..91559.00 rows=284266 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91559.00 rows=284266 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 16 run 3
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=509407.97..509407.97 rows=1 width=40)
   ->  Sort  (cost=509407.97..509474.59 rows=26650 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=501834.94..509274.72 rows=26650 width=40)
               ->  Sort  (cost=501834.94..503256.27 rows=568532 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98608.33..437497.65 rows=568532 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3496.00..281700.00 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91559.00..91559.00 rows=284266 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91559.00 rows=284266 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10872787.02..10872787.03 rows=1 width=10)
   ->  Aggregate  (cost=10872787.02..10872787.03 rows=1 width=10)
         ->  Merge Join  (cost=10362202.50..10872741.21 rows=18323 width=10)
               Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  GroupAggregate  (cost=10193748.94..10676153.92 rows=2167306 width=11)
                     ->  Sort  (cost=10193748.94..10343714.07 rows=59986052 width=11)
                           Sort Key: public.lineitem.l_partkey
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
               ->  Sort  (cost=168453.56..168590.98 rows=54968 width=25)
                     Sort Key: part.p_partkey
                     ->  Nested Loop  (cost=0.00..164125.84 rows=54968 width=25)
                           ->  Seq Scan on part  (cost=0.00..71559.00 rows=1986 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.26 rows=28 width=21)
                                 Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 17 run 2
SET
SET
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10872787.02..10872787.03 rows=1 width=10)
   ->  Aggregate  (cost=10872787.02..10872787.03 rows=1 width=10)
         ->  Merge Join  (cost=10362202.50..10872741.21 rows=18323 width=10)
               Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  GroupAggregate  (cost=10193748.94..10676153.92 rows=2167306 width=11)
                     ->  Sort  (cost=10193748.94..10343714.07 rows=59986052 width=11)
                           Sort Key: public.lineitem.l_partkey
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
               ->  Sort  (cost=168453.56..168590.98 rows=54968 width=25)
                     Sort Key: part.p_partkey
                     ->  Nested Loop  (cost=0.00..164125.84 rows=54968 width=25)
                           ->  Seq Scan on part  (cost=0.00..71559.00 rows=1986 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.26 rows=28 width=21)
                                 Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 17 run 3
SET
SET
                                                       QUERY PLAN                                                       
------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10872787.02..10872787.03 rows=1 width=10)
   ->  Aggregate  (cost=10872787.02..10872787.03 rows=1 width=10)
         ->  Merge Join  (cost=10362202.50..10872741.21 rows=18323 width=10)
               Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  GroupAggregate  (cost=10193748.94..10676153.92 rows=2167306 width=11)
                     ->  Sort  (cost=10193748.94..10343714.07 rows=59986052 width=11)
                           Sort Key: public.lineitem.l_partkey
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
               ->  Sort  (cost=168453.56..168590.98 rows=54968 width=25)
                     Sort Key: part.p_partkey
                     ->  Nested Loop  (cost=0.00..164125.84 rows=54968 width=25)
                           ->  Seq Scan on part  (cost=0.00..71559.00 rows=1986 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.26 rows=28 width=21)
                                 Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 18 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4357334.24..4357334.49 rows=100 width=48)
   ->  Sort  (cost=4357334.24..4357655.79 rows=128622 width=48)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  HashAggregate  (cost=4350810.62..4352418.40 rows=128622 width=48)
               ->  Hash Join  (cost=2337560.86..4348881.29 rows=128622 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                     ->  Hash  (cost=2337158.82..2337158.82 rows=32163 width=45)
                           ->  Hash Join  (cost=2163874.78..2337158.82 rows=32163 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=2085016.78..2248195.76 rows=41943 width=26)
                                       ->  HashAggregate  (cost=2085016.78..2085645.92 rows=41943 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..3.85 rows=1 width=22)
                                             Index Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=23)
(18 rows)

query 18 run 2
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4357334.24..4357334.49 rows=100 width=48)
   ->  Sort  (cost=4357334.24..4357655.79 rows=128622 width=48)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  HashAggregate  (cost=4350810.62..4352418.40 rows=128622 width=48)
               ->  Hash Join  (cost=2337560.86..4348881.29 rows=128622 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                     ->  Hash  (cost=2337158.82..2337158.82 rows=32163 width=45)
                           ->  Hash Join  (cost=2163874.78..2337158.82 rows=32163 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=2085016.78..2248195.76 rows=41943 width=26)
                                       ->  HashAggregate  (cost=2085016.78..2085645.92 rows=41943 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..3.85 rows=1 width=22)
                                             Index Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=23)
(18 rows)

query 18 run 3
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4357334.24..4357334.49 rows=100 width=48)
   ->  Sort  (cost=4357334.24..4357655.79 rows=128622 width=48)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  HashAggregate  (cost=4350810.62..4352418.40 rows=128622 width=48)
               ->  Hash Join  (cost=2337560.86..4348881.29 rows=128622 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                     ->  Hash  (cost=2337158.82..2337158.82 rows=32163 width=45)
                           ->  Hash Join  (cost=2163874.78..2337158.82 rows=32163 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=2085016.78..2248195.76 rows=41943 width=26)
                                       ->  HashAggregate  (cost=2085016.78..2085645.92 rows=41943 width=11)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..3.85 rows=1 width=22)
                                             Index Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=23)
(18 rows)

query 19 run 1
SET
SET


 Limit  (cost=3184922.19..3184922.21 rows=1 width=16)
   ->  Aggregate  (cost=3184922.19..3184922.21 rows=1 width=16)
         ->  Hash Join  (cost=105227.57..3184919.91 rows=912 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984807.56 rows=1055786 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66559.00..66559.00 rows=1999806 width=30)
                     ->  Seq Scan on part  (cost=0.00..66559.00 rows=1999806 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 2
SET
SET


 Limit  (cost=3184922.19..3184922.21 rows=1 width=16)
   ->  Aggregate  (cost=3184922.19..3184922.21 rows=1 width=16)
         ->  Hash Join  (cost=105227.57..3184919.91 rows=912 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984807.56 rows=1055786 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66559.00..66559.00 rows=1999806 width=30)
                     ->  Seq Scan on part  (cost=0.00..66559.00 rows=1999806 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 19 run 3
SET
SET


 Limit  (cost=3184922.19..3184922.21 rows=1 width=16)
   ->  Aggregate  (cost=3184922.19..3184922.21 rows=1 width=16)
         ->  Hash Join  (cost=105227.57..3184919.91 rows=912 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984807.56 rows=1055786 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66559.00..66559.00 rows=1999806 width=30)
                     ->  Seq Scan on part  (cost=0.00..66559.00 rows=1999806 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750348.55..2750348.56 rows=1 width=52)
   ->  Sort  (cost=2750348.55..2750348.56 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=2750344.22..2750348.54 rows=1 width=52)
               ->  Nested Loop  (cost=2750344.22..2750347.51 rows=1 width=56)
                     ->  HashAggregate  (cost=2750344.22..2750344.23 rows=1 width=8)
                           ->  Nested Loop  (cost=2638973.46..2750344.21 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Merge Join  (cost=2638973.46..2750340.59 rows=1 width=44)
                                       Merge Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=2572414.43..2672863.20 rows=873468 width=15)
                                             ->  Sort  (cost=2572414.43..2594251.12 rows=8734675 width=15)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=153171.04..1469417.16 rows=8734675 width=15)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..150987.37 rows=8734675 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=66559.02..66559.03 rows=1 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=66559.00..66559.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66559.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.60 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(29 rows)

query 20 run 2
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750348.55..2750348.56 rows=1 width=52)
   ->  Sort  (cost=2750348.55..2750348.56 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=2750344.22..2750348.54 rows=1 width=52)
               ->  Nested Loop  (cost=2750344.22..2750347.51 rows=1 width=56)
                     ->  HashAggregate  (cost=2750344.22..2750344.23 rows=1 width=8)
                           ->  Nested Loop  (cost=2638973.46..2750344.21 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Merge Join  (cost=2638973.46..2750340.59 rows=1 width=44)
                                       Merge Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=2572414.43..2672863.20 rows=873468 width=15)
                                             ->  Sort  (cost=2572414.43..2594251.12 rows=8734675 width=15)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=153171.04..1469417.16 rows=8734675 width=15)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..150987.37 rows=8734675 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=66559.02..66559.03 rows=1 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=66559.00..66559.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66559.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.60 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(29 rows)

query 20 run 3
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2750348.55..2750348.56 rows=1 width=52)
   ->  Sort  (cost=2750348.55..2750348.56 rows=1 width=52)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=2750344.22..2750348.54 rows=1 width=52)
               ->  Nested Loop  (cost=2750344.22..2750347.51 rows=1 width=56)
                     ->  HashAggregate  (cost=2750344.22..2750344.23 rows=1 width=8)
                           ->  Nested Loop  (cost=2638973.46..2750344.21 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Merge Join  (cost=2638973.46..2750340.59 rows=1 width=44)
                                       Merge Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=2572414.43..2672863.20 rows=873468 width=15)
                                             ->  Sort  (cost=2572414.43..2594251.12 rows=8734675 width=15)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=153171.04..1469417.16 rows=8734675 width=15)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..150987.37 rows=8734675 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=66559.02..66559.03 rows=1 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=66559.00..66559.01 rows=1 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66559.00 rows=1 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.60 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=60)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(29 rows)

query 21 run 1
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14227922.65..14227922.90 rows=100 width=26)
   ->  Sort  (cost=14227922.65..14228163.30 rows=96261 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=14223040.36..14224243.62 rows=96261 width=26)
               ->  Hash Join  (cost=577305.14..14222559.05 rows=96261 width=26)
                     Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                     ->  Hash Join  (cost=2337.64..13613296.02 rows=198749 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..13590225.24 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..70.39 rows=477 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..66.82 rows=1430 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash  (cost=455776.00..455776.00 rows=7265000 width=4)
                           ->  Seq Scan on orders  (cost=0.00..455776.00 rows=7265000 width=4)
                                 Filter: (o_orderstatus = 'F'::bpchar)
(28 rows)

query 21 run 2
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14227922.65..14227922.90 rows=100 width=26)
   ->  Sort  (cost=14227922.65..14228163.30 rows=96261 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=14223040.36..14224243.62 rows=96261 width=26)
               ->  Hash Join  (cost=577305.14..14222559.05 rows=96261 width=26)
                     Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                     ->  Hash Join  (cost=2337.64..13613296.02 rows=198749 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..13590225.24 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..70.39 rows=477 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..66.82 rows=1430 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash  (cost=455776.00..455776.00 rows=7265000 width=4)
                           ->  Seq Scan on orders  (cost=0.00..455776.00 rows=7265000 width=4)
                                 Filter: (o_orderstatus = 'F'::bpchar)
(28 rows)

query 21 run 3
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14227922.65..14227922.90 rows=100 width=26)
   ->  Sort  (cost=14227922.65..14228163.30 rows=96261 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=14223040.36..14224243.62 rows=96261 width=26)
               ->  Hash Join  (cost=577305.14..14222559.05 rows=96261 width=26)
                     Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                     ->  Hash Join  (cost=2337.64..13613296.02 rows=198749 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..13590225.24 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..70.39 rows=477 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..66.82 rows=1430 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash  (cost=455776.00..455776.00 rows=7265000 width=4)
                           ->  Seq Scan on orders  (cost=0.00..455776.00 rows=7265000 width=4)
                                 Filter: (o_orderstatus = 'F'::bpchar)
(28 rows)

query 22 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2871803.27..2871803.27 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=75809.40..75809.41 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.00 rows=46559 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=2795993.86..2796015.41 rows=8620 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=2795778.36..2795950.76 rows=8620 width=24)
               ->  Seq Scan on customer  (cost=0.00..2795713.71 rows=8620 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..14.51 rows=8 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 2
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2871803.27..2871803.27 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=75809.40..75809.41 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.00 rows=46559 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=2795993.86..2796015.41 rows=8620 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=2795778.36..2795950.76 rows=8620 width=24)
               ->  Seq Scan on customer  (cost=0.00..2795713.71 rows=8620 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..14.51 rows=8 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

query 22 run 3
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2871803.27..2871803.27 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=75809.40..75809.41 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.00 rows=46559 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=2795993.86..2796015.41 rows=8620 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=2795778.36..2795950.76 rows=8620 width=24)
               ->  Seq Scan on customer  (cost=0.00..2795713.71 rows=8620 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..14.51 rows=8 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

