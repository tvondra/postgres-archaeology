query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3416215.85..3416215.85 rows=1 width=33) (actual time=163077.945..163077.945 rows=1 loops=1)
   ->  Sort  (cost=3416215.85..3416215.86 rows=6 width=33) (actual time=163077.944..163077.944 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3416215.55..3416215.82 rows=6 width=33) (actual time=163077.912..163077.918 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1935052.75 rows=59246512 width=33) (actual time=0.437..13315.217 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 163078.036 ms
(8 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3416215.85..3416215.85 rows=1 width=33) (actual time=162047.675..162047.675 rows=1 loops=1)
   ->  Sort  (cost=3416215.85..3416215.86 rows=6 width=33) (actual time=162047.674..162047.674 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3416215.55..3416215.82 rows=6 width=33) (actual time=162047.646..162047.652 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1935052.75 rows=59246512 width=33) (actual time=0.021..11443.314 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 162047.728 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1044960.07..1044960.08 rows=1 width=194) (actual time=6807.323..6807.334 rows=100 loops=1)
   ->  Sort  (cost=1044960.07..1044960.08 rows=1 width=194) (actual time=6807.322..6807.326 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 52kB
         ->  Merge Join  (cost=561052.49..1044960.06 rows=1 width=194) (actual time=4748.432..6803.727 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89790.67 rows=6995 width=30) (actual time=1.266..792.075 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=561039.65..581039.35 rows=1599976 width=176) (actual time=4744.413..5157.759 rows=1603828 loops=1)
                     ->  Sort  (cost=561039.65..565039.59 rows=1599976 width=176) (actual time=4744.410..5022.587 rows=1603828 loops=1)
                           Sort Key: public.partsupp.ps_partkey
                           Sort Method:  external sort  Disk: 299432kB
                           ->  Hash Join  (cost=4073.53..308275.67 rows=1599976 width=176) (actual time=43.370..3285.078 rows=1604080 loops=1)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258202.82 rows=7999882 width=16) (actual time=0.449..1006.303 rows=8000000 loops=1)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=168) (actual time=42.893..42.893 rows=20051 loops=1)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=168) (actual time=0.676..37.639 rows=20051 loops=1)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=146) (actual time=0.265..25.247 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.404..0.404 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.394..0.403 rows=5 loops=1)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.188..0.190 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.198..0.198 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.195..0.196 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=66.12..66.13 rows=1 width=8) (actual time=0.103..0.103 rows=1 loops=6398)
                       ->  Nested Loop  (cost=1.56..66.11 rows=4 width=8) (actual time=0.092..0.101 rows=2 loops=6398)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..64.82 rows=18 width=12) (actual time=0.086..0.099 rows=4 loops=6398)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..63.01 rows=18 width=12) (actual time=0.085..0.097 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.89 rows=18 width=12) (actual time=0.082..0.083 rows=4 loops=6398)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 6845.238 ms
(43 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1044960.07..1044960.08 rows=1 width=194) (actual time=5452.337..5452.344 rows=100 loops=1)
   ->  Sort  (cost=1044960.07..1044960.08 rows=1 width=194) (actual time=5452.336..5452.340 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 52kB
         ->  Merge Join  (cost=561052.49..1044960.06 rows=1 width=194) (actual time=4189.248..5449.795 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89790.67 rows=6995 width=30) (actual time=0.034..565.408 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=561039.65..581039.35 rows=1599976 width=176) (actual time=4189.104..4591.569 rows=1603828 loops=1)
                     ->  Sort  (cost=561039.65..565039.59 rows=1599976 width=176) (actual time=4189.101..4458.686 rows=1603828 loops=1)
                           Sort Key: public.partsupp.ps_partkey
                           Sort Method:  external sort  Disk: 299432kB
                           ->  Hash Join  (cost=4073.53..308275.67 rows=1599976 width=176) (actual time=29.781..2737.757 rows=1604080 loops=1)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258202.82 rows=7999882 width=16) (actual time=0.026..721.486 rows=8000000 loops=1)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=168) (actual time=29.740..29.740 rows=20051 loops=1)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=168) (actual time=0.028..24.877 rows=20051 loops=1)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=146) (actual time=0.004..5.954 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.021..0.021 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.018 rows=5 loops=1)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.005 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=66.12..66.13 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=6398)
                       ->  Nested Loop  (cost=1.56..66.11 rows=4 width=8) (actual time=0.010..0.015 rows=2 loops=6398)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..64.82 rows=18 width=12) (actual time=0.006..0.013 rows=4 loops=6398)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..63.01 rows=18 width=12) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.89 rows=18 width=12) (actual time=0.003..0.004 rows=4 loops=6398)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
 Total runtime: 5489.997 ms
(43 rows)

query 3 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3661244.91..3661244.93 rows=10 width=28) (actual time=31199.530..31199.531 rows=10 loops=1)
   ->  Sort  (cost=3661244.91..3669027.36 rows=3112982 width=28) (actual time=31199.528..31199.528 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3500585.02..3593974.48 rows=3112982 width=28) (actual time=30994.424..31180.435 rows=113934 loops=1)
               ->  Sort  (cost=3500585.02..3508367.48 rows=3112982 width=28) (actual time=30994.409..31018.825 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  external sort  Disk: 12096kB
                     ->  Hash Join  (cost=644877.81..3116969.75 rows=3112982 width=28) (actual time=11148.130..30767.391 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935052.75 rows=32248100 width=20) (actual time=0.433..12081.821 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=619706.92..619706.92 rows=1447991 width=12) (actual time=11144.690..11144.690 rows=1451805 loops=1)
                                 ->  Hash Join  (cost=145369.38..619706.92 rows=1447991 width=12) (actual time=1929.436..10857.608 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86582.56..446087.91 rows=7298348 width=16) (actual time=1414.057..5292.461 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84757.98 rows=7298348 width=0) (actual time=1356.138..1356.138 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55067.01..55067.01 rows=297584 width=4) (actual time=515.287..515.287 rows=300276 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..55067.01 rows=297584 width=4) (actual time=0.406..469.640 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 31201.229 ms
(23 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3661244.91..3661244.93 rows=10 width=28) (actual time=26418.334..26418.334 rows=10 loops=1)
   ->  Sort  (cost=3661244.91..3669027.36 rows=3112982 width=28) (actual time=26418.333..26418.333 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3500585.02..3593974.48 rows=3112982 width=28) (actual time=26211.132..26399.458 rows=113934 loops=1)
               ->  Sort  (cost=3500585.02..3508367.48 rows=3112982 width=28) (actual time=26211.118..26235.623 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  external sort  Disk: 12096kB
                     ->  Hash Join  (cost=644877.81..3116969.75 rows=3112982 width=28) (actual time=8580.719..25986.169 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935052.75 rows=32248100 width=20) (actual time=0.013..10021.213 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=619706.92..619706.92 rows=1447991 width=12) (actual time=8579.827..8579.827 rows=1451805 loops=1)
                                 ->  Hash Join  (cost=145369.38..619706.92 rows=1447991 width=12) (actual time=1701.893..8340.426 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86582.56..446087.91 rows=7298348 width=16) (actual time=1319.224..3084.290 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84757.98 rows=7298348 width=0) (actual time=1261.893..1261.893 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55067.01..55067.01 rows=297584 width=4) (actual time=382.628..382.628 rows=300276 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..55067.01 rows=297584 width=4) (actual time=0.014..341.389 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 26420.211 ms
(23 rows)

query 4 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=423121.70..423121.71 rows=1 width=16) (actual time=20254.872..20254.872 rows=1 loops=1)
   ->  Sort  (cost=423121.70..423121.71 rows=1 width=16) (actual time=20254.872..20254.872 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=423121.68..423121.69 rows=1 width=16) (actual time=20254.843..20254.843 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=8148.14..423044.50 rows=15436 width=16) (actual time=167.069..20034.231 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=8148.14..284931.38 rows=567149 width=20) (actual time=165.222..5209.096 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8006.36 rows=567149 width=0) (actual time=114.889..114.889 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..11.60 rows=49 width=4) (actual time=0.026..0.026 rows=1 loops=560424)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
 Total runtime: 20254.934 ms
(14 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=423121.70..423121.71 rows=1 width=16) (actual time=4483.111..4483.112 rows=1 loops=1)
   ->  Sort  (cost=423121.70..423121.71 rows=1 width=16) (actual time=4483.109..4483.109 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=423121.68..423121.69 rows=1 width=16) (actual time=4483.082..4483.082 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=8148.14..423044.50 rows=15436 width=16) (actual time=162.245..4336.110 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=8148.14..284931.38 rows=567149 width=20) (actual time=162.188..1190.214 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8006.36 rows=567149 width=0) (actual time=112.721..112.721 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..11.60 rows=49 width=4) (actual time=0.005..0.005 rows=1 loops=560424)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
 Total runtime: 4483.168 ms
(14 rows)

query 5 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3006926.40..3006926.41 rows=1 width=42) (actual time=23381.414..23381.415 rows=1 loops=1)
   ->  Sort  (cost=3006926.40..3006926.47 rows=25 width=42) (actual time=23381.412..23381.412 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3006925.84..3006926.28 rows=25 width=42) (actual time=23381.404..23381.406 rows=5 loops=1)
               ->  Hash Join  (cost=460080.11..3006561.88 rows=72792 width=42) (actual time=7304.655..23292.780 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Merge Join  (cost=455334.11..2964488.52 rows=1829972 width=54) (actual time=7260.681..22214.031 rows=1815327 loops=1)
                           Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331741.32 rows=59986140 width=24) (actual time=1.522..10709.964 rows=59986036 loops=1)
                           ->  Sort  (cost=455333.19..456477.20 rows=457601 width=38) (actual time=7258.322..7537.639 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method:  external sort  Disk: 23936kB
                                 ->  Hash Join  (cost=96558.02..412310.16 rows=457601 width=38) (actual time=1089.130..6896.553 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32863.94..335460.04 rows=2288007 width=8) (actual time=503.364..4496.306 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32291.94 rows=2288007 width=0) (actual time=446.008..446.008 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59944.29..59944.29 rows=299984 width=38) (actual time=585.576..585.576 rows=299436 loops=1)
                                             ->  Hash Join  (cost=2.53..59944.29 rows=299984 width=38) (actual time=1.292..528.778 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=8) (actual time=0.612..356.726 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.670..0.670 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.664..0.667 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.333..0.333 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.325..0.325 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.320..0.321 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8) (actual time=42.294..42.294 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8) (actual time=0.309..29.356 rows=100000 loops=1)
 Total runtime: 23384.826 ms
(33 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3006926.40..3006926.41 rows=1 width=42) (actual time=20544.050..20544.050 rows=1 loops=1)
   ->  Sort  (cost=3006926.40..3006926.47 rows=25 width=42) (actual time=20544.049..20544.049 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3006925.84..3006926.28 rows=25 width=42) (actual time=20544.040..20544.040 rows=5 loops=1)
               ->  Hash Join  (cost=460080.11..3006561.88 rows=72792 width=42) (actual time=7065.376..20467.624 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Merge Join  (cost=455334.11..2964488.52 rows=1829972 width=54) (actual time=7021.336..19450.284 rows=1815327 loops=1)
                           Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331741.32 rows=59986140 width=24) (actual time=1.481..8323.324 rows=59986036 loops=1)
                           ->  Sort  (cost=455333.19..456477.20 rows=457601 width=38) (actual time=7019.103..7283.016 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 Sort Method:  external sort  Disk: 23936kB
                                 ->  Hash Join  (cost=96558.02..412310.16 rows=457601 width=38) (actual time=1031.157..6641.512 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32863.94..335460.04 rows=2288007 width=8) (actual time=493.449..4255.177 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32291.94 rows=2288007 width=0) (actual time=436.379..436.379 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59944.29..59944.29 rows=299984 width=38) (actual time=537.508..537.508 rows=299436 loops=1)
                                             ->  Hash Join  (cost=2.53..59944.29 rows=299984 width=38) (actual time=0.746..479.529 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=8) (actual time=0.287..308.080 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.450..0.450 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.439..0.448 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.213..0.216 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.215..0.215 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.210..0.212 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8) (actual time=42.200..42.200 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8) (actual time=0.257..28.570 rows=100000 loops=1)
 Total runtime: 20547.805 ms
(33 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1131519.26..1131519.28 rows=1 width=16) (actual time=14174.193..14174.193 rows=1 loops=1)
   ->  Aggregate  (cost=1131519.26..1131519.28 rows=1 width=16) (actual time=14174.192..14174.192 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=231465.61..1128509.56 rows=1203881 width=16) (actual time=1409.235..13513.354 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231164.64 rows=1203881 width=0) (actual time=1353.872..1353.872 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 14174.223 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1131519.26..1131519.28 rows=1 width=16) (actual time=8266.561..8266.562 rows=1 loops=1)
   ->  Aggregate  (cost=1131519.26..1131519.28 rows=1 width=16) (actual time=8266.560..8266.560 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=231465.61..1128509.56 rows=1203881 width=16) (actual time=1228.024..7786.819 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..231164.64 rows=1203881 width=0) (actual time=1173.462..1173.462 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 8266.590 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2723766.71..2723766.71 rows=1 width=72) (actual time=42437.268..42437.268 rows=1 loops=1)
   ->  Sort  (cost=2723766.71..2723910.04 rows=57332 width=72) (actual time=42437.268..42437.268 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2722190.08..2723480.05 rows=57332 width=72) (actual time=42437.158..42437.231 rows=4 loops=1)
               ->  Hash Join  (cost=894923.52..2721616.76 rows=57332 width=72) (actual time=11974.730..42351.346 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=890177.52..2687189.49 rows=1441066 width=80) (actual time=11928.822..41576.022 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=316129.06..1771771.31 rows=18027750 width=28) (actual time=3412.411..26801.216 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..311622.12 rows=18027750 width=0) (actual time=3338.813..3338.813 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=546179.39..546179.39 rows=1199046 width=60) (actual time=8515.714..8515.714 rows=1191175 loops=1)
                                 ->  Hash Join  (cost=59661.88..546179.39 rows=1199046 width=60) (actual time=529.119..8238.477 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418276.74 rows=15000074 width=8) (actual time=0.714..1534.770 rows=15000000 loops=1)
                                       ->  Hash  (cost=58163.15..58163.15 rows=119898 width=60) (actual time=528.381..528.381 rows=119622 loops=1)
                                             ->  Hash Join  (cost=21.30..58163.15 rows=119898 width=60) (actual time=1.126..500.642 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=8) (actual time=0.693..351.804 rows=1500000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.426..0.426 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.382..0.425 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.301..0.303 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.001 rows=25 loops=1)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8) (actual time=42.037..42.037 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8) (actual time=0.270..28.987 rows=100000 loops=1)
 Total runtime: 42437.901 ms
(30 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2723766.71..2723766.71 rows=1 width=72) (actual time=28234.945..28234.945 rows=1 loops=1)
   ->  Sort  (cost=2723766.71..2723910.04 rows=57332 width=72) (actual time=28234.944..28234.944 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2722190.08..2723480.05 rows=57332 width=72) (actual time=28234.837..28234.908 rows=4 loops=1)
               ->  Hash Join  (cost=894923.52..2721616.76 rows=57332 width=72) (actual time=10563.754..28164.846 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=890177.52..2687189.49 rows=1441066 width=80) (actual time=10520.400..27422.267 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=316129.06..1771771.31 rows=18027750 width=28) (actual time=3003.656..14376.526 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..311622.12 rows=18027750 width=0) (actual time=2930.641..2930.641 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=546179.39..546179.39 rows=1199046 width=60) (actual time=7516.417..7516.417 rows=1191175 loops=1)
                                 ->  Hash Join  (cost=59661.88..546179.39 rows=1199046 width=60) (actual time=387.388..7250.004 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418276.74 rows=15000074 width=8) (actual time=0.010..1132.058 rows=15000000 loops=1)
                                       ->  Hash  (cost=58163.15..58163.15 rows=119898 width=60) (actual time=387.356..387.356 rows=119622 loops=1)
                                             ->  Hash Join  (cost=21.30..58163.15 rows=119898 width=60) (actual time=0.139..363.316 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=8) (actual time=0.007..221.138 rows=1500000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.128..0.128 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.086..0.126 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.011 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.004 rows=25 loops=1)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8) (actual time=41.238..41.238 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8) (actual time=0.278..27.609 rows=100000 loops=1)
 Total runtime: 28235.130 ms
(30 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1290431.90..1290431.90 rows=1 width=46) (actual time=63272.556..63272.557 rows=1 loops=1)
   ->  Sort  (cost=1290431.90..1290433.71 rows=726 width=46) (actual time=63272.554..63272.554 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1290402.86..1290428.27 rows=726 width=46) (actual time=63272.544..63272.545 rows=2 loops=1)
               ->  Hash Join  (cost=510049.30..1290223.05 rows=23974 width=46) (actual time=8900.868..63215.526 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510047.74..1289771.98 rows=23974 width=24) (actual time=8900.621..63189.145 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=505551.74..1284795.19 rows=24105 width=24) (actual time=8859.807..63127.432 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..769281.79 rows=399894 width=24) (actual time=3.557..53789.950 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..66559.21 rows=13333 width=4) (actual time=1.718..496.832 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.31 rows=32 width=28) (actual time=0.304..4.077 rows=30 loops=13011)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=490716.33..490716.33 rows=904193 width=8) (actual time=8844.113..8844.113 rows=910360 loops=1)
                                       ->  Hash Join  (cost=128630.33..490716.33 rows=904193 width=8) (actual time=1591.131..8646.883 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=64936.25..401026.71 rows=4520964 width=12) (actual time=1027.361..4780.734 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..63806.01 rows=4520964 width=0) (actual time=969.721..969.721 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59944.29..59944.29 rows=299984 width=4) (actual time=563.521..563.521 rows=299436 loops=1)
                                                   ->  Hash Join  (cost=2.53..59944.29 rows=299984 width=4) (actual time=0.724..519.704 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=8) (actual time=0.475..355.855 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.240..0.240 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.230..0.239 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.221..0.221 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.217..0.218 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8) (actual time=40.796..40.796 rows=100000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8) (actual time=0.345..29.024 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.232..0.232 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.217..0.222 rows=25 loops=1)
 Total runtime: 63272.639 ms
(39 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1290431.90..1290431.90 rows=1 width=46) (actual time=8120.376..8120.377 rows=1 loops=1)
   ->  Sort  (cost=1290431.90..1290433.71 rows=726 width=46) (actual time=8120.374..8120.374 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1290402.86..1290428.27 rows=726 width=46) (actual time=8120.364..8120.366 rows=2 loops=1)
               ->  Hash Join  (cost=510049.30..1290223.05 rows=23974 width=46) (actual time=6303.609..8093.492 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510047.74..1289771.98 rows=23974 width=24) (actual time=6303.574..8080.819 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=505551.74..1284795.19 rows=24105 width=24) (actual time=6269.181..8030.068 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..769281.79 rows=399894 width=24) (actual time=0.106..1527.094 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..66559.21 rows=13333 width=4) (actual time=0.061..275.420 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.31 rows=32 width=28) (actual time=0.008..0.091 rows=30 loops=13011)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=490716.33..490716.33 rows=904193 width=8) (actual time=6268.604..6268.604 rows=910360 loops=1)
                                       ->  Hash Join  (cost=128630.33..490716.33 rows=904193 width=8) (actual time=1327.552..6097.489 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=64936.25..401026.71 rows=4520964 width=12) (actual time=894.590..2499.927 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..63806.01 rows=4520964 width=0) (actual time=837.848..837.848 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59944.29..59944.29 rows=299984 width=4) (actual time=432.724..432.724 rows=299436 loops=1)
                                                   ->  Hash Join  (cost=2.53..59944.29 rows=299984 width=4) (actual time=0.035..391.993 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=8) (actual time=0.011..234.008 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.021..0.021 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.015..0.019 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8) (actual time=34.385..34.385 rows=100000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8) (actual time=0.012..22.670 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.021 rows=25 loops=1)
 Total runtime: 8120.464 ms
(39 rows)

query 9 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3218330.52..3218330.52 rows=1 width=61) (actual time=204164.317..204164.318 rows=1 loops=1)
   ->  Sort  (cost=3218330.52..3218330.90 rows=153 width=61) (actual time=204164.315..204164.315 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3218325.55..3218329.76 rows=153 width=61) (actual time=204164.220..204164.251 rows=175 loops=1)
               ->  Nested Loop  (cost=9.13..3218324.40 rows=153 width=61) (actual time=7.664..197303.094 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=9.13..3218166.04 rows=153 width=39) (actual time=7.137..190985.149 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=9.13..3217574.19 rows=153 width=39) (actual time=5.740..138032.743 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=9.13..3217073.06 rows=154 width=43) (actual time=5.024..130136.186 rows=3248192 loops=1)
                                       ->  Merge Join  (cost=9.13..441042.16 rows=484841 width=20) (actual time=3.309..3401.359 rows=433248 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..84790.63 rows=121213 width=4) (actual time=1.552..838.513 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..331108.81 rows=7999882 width=16) (actual time=1.667..1814.490 rows=7999981 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35) (actual time=0.043..0.290 rows=7 loops=433248)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=3248192)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=3248192)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 204164.400 ms
(23 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3218330.52..3218330.52 rows=1 width=61) (actual time=78834.064..78834.064 rows=1 loops=1)
   ->  Sort  (cost=3218330.52..3218330.90 rows=153 width=61) (actual time=78834.063..78834.063 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3218325.55..3218329.76 rows=153 width=61) (actual time=78833.968..78833.991 rows=175 loops=1)
               ->  Nested Loop  (cost=9.13..3218324.40 rows=153 width=61) (actual time=4.705..73507.514 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=9.13..3218166.04 rows=153 width=39) (actual time=4.351..68775.821 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=9.13..3217574.19 rows=153 width=39) (actual time=4.020..45912.139 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=9.13..3217073.06 rows=154 width=43) (actual time=3.637..40052.273 rows=3248192 loops=1)
                                       ->  Merge Join  (cost=9.13..441042.16 rows=484841 width=20) (actual time=2.590..3044.836 rows=433248 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..84790.63 rows=121213 width=4) (actual time=1.141..732.847 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..331108.81 rows=7999882 width=16) (actual time=1.378..1654.458 rows=7999981 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35) (actual time=0.015..0.083 rows=7 loops=433248)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=3248192)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=3248192)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 78834.143 ms
(23 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2732406.41..2732406.46 rows=20 width=188) (actual time=30891.971..30891.973 rows=20 loops=1)
   ->  Sort  (cost=2732406.41..2733901.70 rows=598116 width=188) (actual time=30891.970..30891.972 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2692566.12..2716490.76 rows=598116 width=188) (actual time=29189.401..30790.153 rows=381205 loops=1)
               ->  Sort  (cost=2692566.12..2694061.41 rows=598116 width=188) (actual time=29189.379..29795.552 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method:  external merge  Disk: 224936kB
                     ->  Hash Join  (cost=395662.10..2599691.94 rows=598116 width=188) (actual time=5909.390..23533.074 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=395660.53..2591466.28 rows=598116 width=166) (actual time=5909.187..23316.501 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=293369.31..2440220.67 rows=598116 width=20) (actual time=4963.619..21456.050 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935052.75 rows=14968542 width=20) (actual time=0.660..11068.120 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=285877.11..285877.11 rows=599376 width=8) (actual time=4962.222..4962.222 rows=573160 loops=1)
                                             ->  Bitmap Heap Scan on orders  (cost=8610.47..285877.11 rows=599376 width=8) (actual time=164.933..4809.100 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8460.63 rows=599376 width=0) (actual time=114.623..114.623 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51317.21..51317.21 rows=1499921 width=150) (actual time=943.458..943.458 rows=1500000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=150) (actual time=0.415..491.818 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.197..0.197 rows=25 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.182..0.189 rows=25 loops=1)
 Total runtime: 30928.682 ms
(26 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2732406.41..2732406.46 rows=20 width=188) (actual time=25029.485..25029.488 rows=20 loops=1)
   ->  Sort  (cost=2732406.41..2733901.70 rows=598116 width=188) (actual time=25029.484..25029.486 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2692566.12..2716490.76 rows=598116 width=188) (actual time=23320.353..24927.269 rows=381205 loops=1)
               ->  Sort  (cost=2692566.12..2694061.41 rows=598116 width=188) (actual time=23320.332..23928.457 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method:  external merge  Disk: 224936kB
                     ->  Hash Join  (cost=395662.10..2599691.94 rows=598116 width=188) (actual time=2387.607..17660.738 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=395660.53..2591466.28 rows=598116 width=166) (actual time=2387.581..17445.199 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=293369.31..2440220.67 rows=598116 width=20) (actual time=1573.107..15733.525 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935052.75 rows=14968542 width=20) (actual time=0.020..9007.639 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=285877.11..285877.11 rows=599376 width=8) (actual time=1572.962..1572.962 rows=573160 loops=1)
                                             ->  Bitmap Heap Scan on orders  (cost=8610.47..285877.11 rows=599376 width=8) (actual time=152.495..1457.456 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8460.63 rows=599376 width=0) (actual time=102.736..102.736 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51317.21..51317.21 rows=1499921 width=150) (actual time=813.270..813.270 rows=1500000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=150) (actual time=0.013..368.309 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.015 rows=25 loops=1)
 Total runtime: 25067.750 ms
(26 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691138.70..691138.70 rows=1 width=16) (actual time=4019.700..4019.700 rows=0 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=324539.52..324539.53 rows=1 width=12) (actual time=1686.151..1686.151 rows=1 loops=1)
           ->  Hash Join  (cost=2337.64..323739.53 rows=319995 width=12) (actual time=2.612..1552.677 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258202.82 rows=7999882 width=16) (actual time=0.023..644.608 rows=8000000 loops=1)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4) (actual time=2.555..2.555 rows=4010 loops=1)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4) (actual time=0.499..2.247 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8) (actual time=0.487..1.902 rows=4010 loops=1)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.311..0.311 rows=4010 loops=1)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=366599.16..367399.15 rows=319995 width=16) (actual time=4019.699..4019.699 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=352999.37..364999.19 rows=319995 width=16) (actual time=4019.690..4019.690 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=352999.37..353799.36 rows=319995 width=16) (actual time=2164.237..2189.381 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 9408kB
                     ->  Hash Join  (cost=2337.64..323739.53 rows=319995 width=16) (actual time=40.123..1977.211 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..258202.82 rows=7999882 width=20) (actual time=0.459..966.519 rows=8000000 loops=1)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4) (actual time=39.580..39.580 rows=4010 loops=1)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4) (actual time=2.400..38.707 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.185..0.189 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8) (actual time=2.210..37.724 rows=4010 loops=1)
                                             Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=1.874..1.874 rows=4010 loops=1)
                                                   Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
 Total runtime: 4021.043 ms
(34 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691138.70..691138.70 rows=1 width=16) (actual time=3595.594..3595.594 rows=0 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=324539.52..324539.53 rows=1 width=12) (actual time=1692.815..1692.815 rows=1 loops=1)
           ->  Hash Join  (cost=2337.64..323739.53 rows=319995 width=12) (actual time=2.606..1558.250 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258202.82 rows=7999882 width=16) (actual time=0.023..646.423 rows=8000000 loops=1)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4) (actual time=2.549..2.549 rows=4010 loops=1)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4) (actual time=0.498..2.226 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8) (actual time=0.487..1.872 rows=4010 loops=1)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.311..0.311 rows=4010 loops=1)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=366599.16..367399.15 rows=319995 width=16) (actual time=3595.594..3595.594 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=352999.37..364999.19 rows=319995 width=16) (actual time=3595.585..3595.585 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=352999.37..353799.36 rows=319995 width=16) (actual time=1733.423..1758.408 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 9408kB
                     ->  Hash Join  (cost=2337.64..323739.53 rows=319995 width=16) (actual time=7.608..1553.100 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..258202.82 rows=7999882 width=20) (actual time=0.023..642.809 rows=8000000 loops=1)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4) (actual time=7.560..7.560 rows=4010 loops=1)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4) (actual time=0.570..7.088 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8) (actual time=0.556..6.691 rows=4010 loops=1)
                                             Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.368..0.368 rows=4010 loops=1)
                                                   Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
 Total runtime: 3596.884 ms
(34 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3157854.36..3157854.37 rows=1 width=27) (actual time=20616.961..20616.961 rows=1 loops=1)
   ->  Sort  (cost=3157854.36..3157854.37 rows=1 width=27) (actual time=20616.960..20616.960 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=3157854.33..3157854.35 rows=1 width=27) (actual time=20616.933..20616.933 rows=2 loops=1)
               ->  Merge Join  (cost=2559405.45..3155823.59 rows=270765 width=27) (actual time=15874.256..20456.088 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554974.98 rows=15000074 width=20) (actual time=1.126..3552.962 rows=14999967 loops=1)
                     ->  Sort  (cost=2559346.20..2560023.11 rows=270765 width=15) (actual time=15873.031..15903.985 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 26879kB
                           ->  Seq Scan on lineitem  (cost=0.00..2534914.15 rows=270765 width=15) (actual time=1.356..15808.225 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 20617.029 ms
(14 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3157854.36..3157854.37 rows=1 width=27) (actual time=17347.242..17347.242 rows=1 loops=1)
   ->  Sort  (cost=3157854.36..3157854.37 rows=1 width=27) (actual time=17347.242..17347.242 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=3157854.33..3157854.35 rows=1 width=27) (actual time=17347.216..17347.217 rows=2 loops=1)
               ->  Merge Join  (cost=2559405.45..3155823.59 rows=270765 width=27) (actual time=13667.799..17197.582 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554974.98 rows=15000074 width=20) (actual time=0.046..2544.300 rows=14999967 loops=1)
                     ->  Sort  (cost=2559346.20..2560023.11 rows=270765 width=15) (actual time=13667.713..13694.178 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 26879kB
                           ->  Seq Scan on lineitem  (cost=0.00..2534914.15 rows=270765 width=15) (actual time=0.101..13607.559 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 17347.315 ms
(14 rows)

query 13 run 1
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910483.09..2910483.10 rows=1 width=8) (actual time=25372.452..25372.452 rows=1 loops=1)
   ->  Sort  (cost=2910483.09..2910483.59 rows=200 width=8) (actual time=25372.451..25372.451 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2910479.59..2910482.09 rows=200 width=8) (actual time=25372.436..25372.441 rows=46 loops=1)
               ->  GroupAggregate  (cost=2355040.74..2887980.78 rows=1499921 width=8) (actual time=15375.238..25172.063 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2355040.74..2794988.57 rows=14848639 width=8) (actual time=15375.222..23941.400 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64991.63 rows=1499921 width=4) (actual time=1.479..523.374 rows=1500000 loops=1)
                           ->  Materialize  (cost=2355040.74..2540648.72 rows=14848639 width=8) (actual time=15373.737..21470.991 rows=14837583 loops=1)
                                 ->  Sort  (cost=2355040.74..2392162.33 rows=14848639 width=8) (actual time=15373.735..20189.183 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method:  external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..455776.93 rows=14848639 width=8) (actual time=0.451..5205.377 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 25404.648 ms
(16 rows)

SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2910483.09..2910483.10 rows=1 width=8) (actual time=24470.911..24470.911 rows=1 loops=1)
   ->  Sort  (cost=2910483.09..2910483.59 rows=200 width=8) (actual time=24470.909..24470.909 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2910479.59..2910482.09 rows=200 width=8) (actual time=24470.893..24470.897 rows=46 loops=1)
               ->  GroupAggregate  (cost=2355040.74..2887980.78 rows=1499921 width=8) (actual time=14692.469..24277.449 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2355040.74..2794988.57 rows=14848639 width=8) (actual time=14692.452..23056.958 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64991.63 rows=1499921 width=4) (actual time=0.019..375.548 rows=1500000 loops=1)
                           ->  Materialize  (cost=2355040.74..2540648.72 rows=14848639 width=8) (actual time=14692.428..20730.773 rows=14837583 loops=1)
                                 ->  Sort  (cost=2355040.74..2392162.33 rows=14848639 width=8) (actual time=14692.426..19447.072 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method:  external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..455776.93 rows=14848639 width=8) (actual time=0.028..4725.585 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 24505.671 ms
(16 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=861169.89..861169.92 rows=1 width=37) (actual time=9609.579..9609.580 rows=1 loops=1)
   ->  Aggregate  (cost=861169.89..861169.92 rows=1 width=37) (actual time=9609.577..9609.577 rows=1 loops=1)
         ->  Hash Join  (cost=114412.27..857128.05 rows=808368 width=37) (actual time=1111.216..9000.646 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14180.89..715562.38 rows=808368 width=20) (actual time=266.862..7197.227 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13978.80 rows=808368 width=0) (actual time=222.152..222.152 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.17..61559.17 rows=2000017 width=25) (actual time=843.578..843.578 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..61559.17 rows=2000017 width=25) (actual time=0.687..530.914 rows=2000000 loops=1)
 Total runtime: 9609.698 ms
(11 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=861169.89..861169.92 rows=1 width=37) (actual time=5939.716..5939.717 rows=1 loops=1)
   ->  Aggregate  (cost=861169.89..861169.92 rows=1 width=37) (actual time=5939.714..5939.714 rows=1 loops=1)
         ->  Hash Join  (cost=114412.27..857128.05 rows=808368 width=37) (actual time=945.778..5394.793 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14180.89..715562.38 rows=808368 width=20) (actual time=253.127..3832.973 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..13978.80 rows=808368 width=0) (actual time=209.205..209.205 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.17..61559.17 rows=2000017 width=25) (actual time=692.225..692.225 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..61559.17 rows=2000017 width=25) (actual time=0.011..385.531 rows=2000000 loops=1)
 Total runtime: 5939.816 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2515001.34..2515002.50 rows=1 width=103) (actual time=24971.170..24971.171 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1254517.22..1254517.23 rows=1 width=32) (actual time=7793.392..7793.392 rows=1 loops=1)
           ->  HashAggregate  (cost=1254402.34..1254469.35 rows=3829 width=20) (actual time=7765.635..7787.900 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=40057.86..1242981.74 rows=2284121 width=20) (actual time=550.780..5825.682 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39486.83 rows=2284121 width=0) (actual time=495.020..495.020 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1260484.11..1264952.30 rows=3829 width=103) (actual time=24971.168..24971.168 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=71) (actual time=0.674..16.733 rows=69998 loops=1)
         ->  Sort  (cost=1260484.11..1260493.68 rows=3829 width=36) (actual time=24950.331..24950.331 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=1260112.65..1260256.23 rows=3829 width=36) (actual time=24938.148..24950.322 rows=1 loops=1)
                     ->  HashAggregate  (cost=1260112.65..1260217.94 rows=3829 width=20) (actual time=24938.147..24950.320 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=40057.86..1242981.74 rows=2284121 width=20) (actual time=636.081..14172.856 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39486.83 rows=2284121 width=0) (actual time=579.287..579.287 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 24971.586 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2515001.34..2515002.50 rows=1 width=103) (actual time=16150.859..16150.860 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1254517.22..1254517.23 rows=1 width=32) (actual time=7787.725..7787.725 rows=1 loops=1)
           ->  HashAggregate  (cost=1254402.34..1254469.35 rows=3829 width=20) (actual time=7759.907..7782.163 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=40057.86..1242981.74 rows=2284121 width=20) (actual time=545.943..5820.968 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39486.83 rows=2284121 width=0) (actual time=490.080..490.080 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1260484.11..1264952.30 rows=3829 width=103) (actual time=16150.858..16150.858 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=71) (actual time=0.036..10.180 rows=69998 loops=1)
         ->  Sort  (cost=1260484.11..1260493.68 rows=3829 width=36) (actual time=16136.687..16136.687 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=1260112.65..1260256.23 rows=3829 width=36) (actual time=16124.768..16136.682 rows=1 loops=1)
                     ->  HashAggregate  (cost=1260112.65..1260217.94 rows=3829 width=20) (actual time=16124.767..16136.680 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=40057.86..1242981.74 rows=2284121 width=20) (actual time=582.508..6371.701 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39486.83 rows=2284121 width=0) (actual time=526.616..526.616 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 16151.044 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501675.46..501675.46 rows=1 width=40) (actual time=20646.518..20646.518 rows=1 loops=1)
   ->  Sort  (cost=501675.46..501739.95 rows=25796 width=40) (actual time=20646.518..20646.518 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=494345.29..501546.48 rows=25796 width=40) (actual time=18310.244..20641.623 rows=27838 loops=1)
               ->  Sort  (cost=494345.29..495721.04 rows=550299 width=40) (actual time=18310.097..20291.407 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  external merge  Disk: 60504kB
                     ->  Hash Join  (cost=98494.90..432199.68 rows=550299 width=40) (actual time=938.999..4654.355 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3496.03..281698.55 rows=3999941 width=8) (actual time=37.286..1733.822 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=10 width=4) (actual time=0.968..36.675 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91559.43..91559.43 rows=275156 width=40) (actual time=901.665..901.665 rows=296733 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..91559.43 rows=275156 width=40) (actual time=0.454..837.190 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20654.483 ms
(19 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501675.46..501675.46 rows=1 width=40) (actual time=20033.195..20033.195 rows=1 loops=1)
   ->  Sort  (cost=501675.46..501739.95 rows=25796 width=40) (actual time=20033.195..20033.195 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=494345.29..501546.48 rows=25796 width=40) (actual time=17699.769..20028.247 rows=27838 loops=1)
               ->  Sort  (cost=494345.29..495721.04 rows=550299 width=40) (actual time=17699.636..19681.389 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  external merge  Disk: 60504kB
                     ->  Hash Join  (cost=98494.90..432199.68 rows=550299 width=40) (actual time=718.678..4114.434 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3496.03..281698.55 rows=3999941 width=8) (actual time=25.820..1431.317 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=10 width=4) (actual time=0.113..25.768 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91559.43..91559.43 rows=275156 width=40) (actual time=692.803..692.803 rows=296733 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..91559.43 rows=275156 width=40) (actual time=0.020..638.671 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20041.696 ms
(19 rows)

query 17 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10859806.98..10859807.00 rows=1 width=10) (actual time=97909.101..97909.102 rows=1 loops=1)
   ->  Aggregate  (cost=10859806.98..10859807.00 rows=1 width=10) (actual time=97909.100..97909.100 rows=1 loops=1)
         ->  Nested Loop  (cost=10265425.20..10859760.14 rows=18736 width=10) (actual time=51185.731..97905.070 rows=5319 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10265425.20..10766966.54 rows=1759 width=40) (actual time=51183.871..96644.699 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10193764.08..10671815.58 rows=1877030 width=11) (actual time=50666.248..96026.710 rows=1999333 loops=1)
                           ->  Sort  (cost=10193764.08..10343729.43 rows=59986140 width=11) (actual time=50666.213..72188.466 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 Sort Method:  external merge  Disk: 1230496kB
                                 ->  Seq Scan on lineitem  (cost=0.00..1785087.40 rows=59986140 width=11) (actual time=0.459..9407.831 rows=59986052 loops=1)
                     ->  Sort  (cost=71661.12..71665.81 rows=1874 width=4) (actual time=505.728..506.283 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method:  quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..71559.26 rows=1874 width=4) (actual time=1.430..505.003 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.27 rows=32 width=21) (actual time=0.362..0.618 rows=30 loops=1996)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
 Total runtime: 98047.468 ms
(19 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10859806.98..10859807.00 rows=1 width=10) (actual time=93408.840..93408.840 rows=1 loops=1)
   ->  Aggregate  (cost=10859806.98..10859807.00 rows=1 width=10) (actual time=93408.840..93408.840 rows=1 loops=1)
         ->  Nested Loop  (cost=10265425.20..10859760.14 rows=18736 width=10) (actual time=48378.986..93406.644 rows=5319 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10265425.20..10766966.54 rows=1759 width=40) (actual time=48378.955..93334.836 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10193764.08..10671815.58 rows=1877030 width=11) (actual time=48053.595..92907.839 rows=1999333 loops=1)
                           ->  Sort  (cost=10193764.08..10343729.43 rows=59986140 width=11) (actual time=48053.559..69242.620 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 Sort Method:  external merge  Disk: 1230496kB
                                 ->  Seq Scan on lineitem  (cost=0.00..1785087.40 rows=59986140 width=11) (actual time=0.032..7910.232 rows=59986052 loops=1)
                     ->  Sort  (cost=71661.12..71665.81 rows=1874 width=4) (actual time=313.506..313.818 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method:  quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..71559.26 rows=1874 width=4) (actual time=0.118..313.165 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..52.27 rows=32 width=21) (actual time=0.015..0.030 rows=30 loops=1996)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
 Total runtime: 93545.800 ms
(19 rows)

query 18 run 1
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11459150.52..11459153.52 rows=100 width=48) (actual time=39444.284..39444.571 rows=99 loops=1)
   ->  GroupAggregate  (cost=11459150.52..12358942.62 rows=29993070 width=48) (actual time=39444.282..39444.564 rows=99 loops=1)
         ->  Sort  (cost=11459150.52..11534133.19 rows=29993070 width=48) (actual time=39444.273..39444.287 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 122kB
               ->  Hash Join  (cost=79181.45..7141167.53 rows=29993070 width=48) (actual time=6469.231..39443.271 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.23..6043599.91 rows=29993070 width=29) (actual time=959.888..38728.128 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3243538.67 rows=7500037 width=26) (actual time=754.593..28927.442 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..554974.98 rows=15000074 width=22) (actual time=1.032..2679.832 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.00..2645960.49 rows=408242 width=4) (actual time=650.554..25373.381 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.00..2637795.65 rows=408242 width=11) (actual time=650.550..25373.197 rows=99 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331741.32 rows=59986140 width=11) (actual time=1.185..11328.773 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331741.32 rows=59986140 width=11) (actual time=0.007..6536.010 rows=59916431 loops=1)
                     ->  Hash  (cost=51317.21..51317.21 rows=1499921 width=23) (actual time=646.445..646.445 rows=1500000 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=23) (actual time=0.785..411.138 rows=1500000 loops=1)
 Total runtime: 39444.647 ms
(20 rows)

SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11459150.52..11459153.52 rows=100 width=48) (actual time=38580.208..38580.495 rows=99 loops=1)
   ->  GroupAggregate  (cost=11459150.52..12358942.62 rows=29993070 width=48) (actual time=38580.208..38580.485 rows=99 loops=1)
         ->  Sort  (cost=11459150.52..11534133.19 rows=29993070 width=48) (actual time=38580.198..38580.216 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 122kB
               ->  Hash Join  (cost=79181.45..7141167.53 rows=29993070 width=48) (actual time=6025.000..38579.185 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=326.23..6043599.91 rows=29993070 width=29) (actual time=907.307..37919.794 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3243538.67 rows=7500037 width=26) (actual time=701.147..28129.759 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..554974.98 rows=15000074 width=22) (actual time=0.698..2516.165 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.00..2645960.49 rows=408242 width=4) (actual time=607.216..24740.155 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.00..2637795.65 rows=408242 width=11) (actual time=607.213..24739.987 rows=99 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331741.32 rows=59986140 width=11) (actual time=0.854..10675.487 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331741.32 rows=59986140 width=11) (actual time=0.007..6524.111 rows=59916431 loops=1)
                     ->  Hash  (cost=51317.21..51317.21 rows=1499921 width=23) (actual time=591.280..591.280 rows=1500000 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..51317.21 rows=1499921 width=23) (actual time=0.441..356.146 rows=1500000 loops=1)
 Total runtime: 38580.564 ms
(20 rows)

query 19 run 1
SET
SET


 Limit  (cost=3192681.04..3192681.05 rows=1 width=16) (actual time=18081.501..18081.501 rows=1 loops=1)
   ->  Aggregate  (cost=3192681.04..3192681.05 rows=1 width=16) (actual time=18081.501..18081.501 rows=1 loops=1)
         ->  Hash Join  (cost=105231.42..3192678.41 rows=1050 width=16) (actual time=1041.678..18080.028 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984810.20 rows=1095982 width=27) (actual time=0.714..15970.129 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66559.21..66559.21 rows=2000017 width=30) (actual time=975.343..975.343 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..66559.21 rows=2000017 width=30) (actual time=0.806..620.427 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 18081.541 ms
(11 rows)

SET
SET


 Limit  (cost=3192681.04..3192681.05 rows=1 width=16) (actual time=15604.005..15604.005 rows=1 loops=1)
   ->  Aggregate  (cost=3192681.04..3192681.05 rows=1 width=16) (actual time=15604.003..15604.003 rows=1 loops=1)
         ->  Hash Join  (cost=105231.42..3192678.41 rows=1050 width=16) (actual time=825.972..15602.663 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984810.20 rows=1095982 width=27) (actual time=0.085..13730.165 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66559.21..66559.21 rows=2000017 width=30) (actual time=771.557..771.557 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..66559.21 rows=2000017 width=30) (actual time=0.009..432.917 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 15604.044 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3041171.44..3041171.45 rows=1 width=51) (actual time=41246.834..41246.834 rows=1 loops=1)
   ->  Sort  (cost=3041171.44..3041171.45 rows=1 width=51) (actual time=41246.833..41246.833 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Hash Join  (cost=3041154.93..3041171.43 rows=1 width=51) (actual time=40771.545..41245.492 rows=1821 loops=1)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=3041153.61..3041170.08 rows=5 width=55) (actual time=40761.739..41241.177 rows=44712 loops=1)
                     ->  HashAggregate  (cost=3041153.61..3041153.66 rows=5 width=8) (actual time=40760.606..40769.455 rows=44712 loops=1)
                           ->  Merge Join  (cost=2918304.10..3041153.60 rows=5 width=8) (actual time=34142.762..40738.083 rows=59002 loops=1)
                                 Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  GroupAggregate  (cost=2622628.67..2726552.93 rows=903690 width=15) (actual time=28708.042..34974.335 rows=5448473 loops=1)
                                       ->  Sort  (cost=2622628.67..2645220.90 rows=9036891 width=15) (actual time=28708.029..31910.305 rows=9123091 loops=1)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             Sort Method:  external merge  Disk: 222888kB
                                             ->  Bitmap Heap Scan on lineitem  (cost=158470.75..1479250.12 rows=9036891 width=15) (actual time=1932.682..20805.063 rows=9123688 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..156211.53 rows=9036891 width=0) (actual time=1880.019..1880.019 rows=9123688 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=295675.43..297465.32 rows=715955 width=16) (actual time=5434.366..5442.856 rows=86872 loops=1)
                                       Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                       Sort Method:  quicksort  Memory: 7145kB
                                       ->  Nested Loop  (cost=66660.22..226050.56 rows=715955 width=16) (actual time=334.743..5384.878 rows=86872 loops=1)
                                             ->  HashAggregate  (cost=66660.22..67064.26 rows=40404 width=4) (actual time=333.294..341.975 rows=21718 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..66559.21 rows=40404 width=4) (actual time=0.564..326.989 rows=21718 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.71 rows=18 width=12) (actual time=0.213..0.231 rows=4 loops=21718)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59) (actual time=0.010..0.010 rows=1 loops=44712)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.166..0.166 rows=1 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.163..0.165 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 41276.432 ms
(34 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3041171.44..3041171.45 rows=1 width=51) (actual time=26131.079..26131.080 rows=1 loops=1)
   ->  Sort  (cost=3041171.44..3041171.45 rows=1 width=51) (actual time=26131.078..26131.078 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Hash Join  (cost=3041154.93..3041171.43 rows=1 width=51) (actual time=26042.428..26129.964 rows=1821 loops=1)
               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
               ->  Nested Loop  (cost=3041153.61..3041170.08 rows=5 width=55) (actual time=26042.206..26126.585 rows=44712 loops=1)
                     ->  HashAggregate  (cost=3041153.61..3041153.66 rows=5 width=8) (actual time=26042.176..26050.428 rows=44712 loops=1)
                           ->  Merge Join  (cost=2918304.10..3041153.60 rows=5 width=8) (actual time=19426.266..26020.777 rows=59002 loops=1)
                                 Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  GroupAggregate  (cost=2622628.67..2726552.93 rows=903690 width=15) (actual time=18970.246..25222.414 rows=5448473 loops=1)
                                       ->  Sort  (cost=2622628.67..2645220.90 rows=9036891 width=15) (actual time=18970.233..22170.898 rows=9123091 loops=1)
                                             Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                             Sort Method:  external merge  Disk: 222888kB
                                             ->  Bitmap Heap Scan on lineitem  (cost=158470.75..1479250.12 rows=9036891 width=15) (actual time=1706.395..11976.326 rows=9123688 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..156211.53 rows=9036891 width=0) (actual time=1654.317..1654.317 rows=9123688 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=295675.43..297465.32 rows=715955 width=16) (actual time=455.667..464.160 rows=86872 loops=1)
                                       Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                       Sort Method:  quicksort  Memory: 7145kB
                                       ->  Nested Loop  (cost=66660.22..226050.56 rows=715955 width=16) (actual time=251.281..422.183 rows=86872 loops=1)
                                             ->  HashAggregate  (cost=66660.22..67064.26 rows=40404 width=4) (actual time=251.254..256.266 rows=21718 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..66559.21 rows=40404 width=4) (actual time=0.028..245.649 rows=21718 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.71 rows=18 width=12) (actual time=0.006..0.007 rows=4 loops=21718)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59) (actual time=0.001..0.002 rows=1 loops=44712)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.021 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 26163.155 ms
(34 rows)

query 21 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5038716.54..5038716.55 rows=1 width=26) (actual time=72826.268..72826.276 rows=100 loops=1)
   ->  Sort  (cost=5038716.54..5038716.55 rows=1 width=26) (actual time=72826.266..72826.271 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=5038716.52..5038716.53 rows=1 width=26) (actual time=72824.096..72824.841 rows=3991 loops=1)
               ->  Nested Loop  (cost=2771572.79..5038716.52 rows=1 width=26) (actual time=17141.567..72757.115 rows=39281 loops=1)
                     ->  Nested Loop Anti Join  (cost=2771572.79..5038712.62 rows=1 width=34) (actual time=17128.005..57491.467 rows=80214 loops=1)
                           Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                           ->  Hash Semi Join  (cost=2771572.79..5038700.25 rows=1 width=38) (actual time=16911.507..36309.137 rows=1460326 loops=1)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=2337.64..2020327.71 rows=795464 width=34) (actual time=24.451..14455.767 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1935052.75 rows=19995380 width=8) (actual time=0.455..10388.960 rows=37929348 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30) (actual time=23.902..23.902 rows=3991 loops=1)
                                             ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30) (actual time=2.531..23.111 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.210..0.213 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34) (actual time=2.316..22.280 rows=3991 loops=1)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=1.867..1.867 rows=3991 loops=1)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1785087.40..1785087.40 rows=59986140 width=8) (actual time=16885.554..16885.554 rows=59986052 loops=1)
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1785087.40 rows=59986140 width=8) (actual time=0.002..8998.563 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..11.63 rows=49 width=8) (actual time=0.014..0.014 rows=1 loops=1460326)
                                 Index Cond: (l3.l_orderkey = l1.l_orderkey)
                                 Filter: (l3.l_receiptdate > l3.l_commitdate)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.89 rows=1 width=4) (actual time=0.189..0.190 rows=0 loops=80214)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
 Total runtime: 72826.389 ms
(32 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5038716.54..5038716.55 rows=1 width=26) (actual time=45237.581..45237.590 rows=100 loops=1)
   ->  Sort  (cost=5038716.54..5038716.55 rows=1 width=26) (actual time=45237.580..45237.584 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=5038716.52..5038716.53 rows=1 width=26) (actual time=45235.455..45236.154 rows=3991 loops=1)
               ->  Nested Loop  (cost=2771572.79..5038716.52 rows=1 width=26) (actual time=15378.070..45205.668 rows=39281 loops=1)
                     ->  Nested Loop Anti Join  (cost=2771572.79..5038712.62 rows=1 width=34) (actual time=15378.038..44546.233 rows=80214 loops=1)
                           Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                           ->  Hash Semi Join  (cost=2771572.79..5038700.25 rows=1 width=38) (actual time=15311.716..34535.042 rows=1460326 loops=1)
                                 Hash Cond: (l1.l_orderkey = l2.l_orderkey)
                                 Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                 ->  Hash Join  (cost=2337.64..2020327.71 rows=795464 width=34) (actual time=16.207..14492.851 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1935052.75 rows=19995380 width=8) (actual time=0.013..10571.762 rows=37929348 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30) (actual time=16.160..16.160 rows=3991 loops=1)
                                             ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30) (actual time=0.642..15.515 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34) (actual time=0.625..14.917 rows=3991 loops=1)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.432..0.432 rows=3991 loops=1)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=1785087.40..1785087.40 rows=59986140 width=8) (actual time=15292.912..15292.912 rows=59986052 loops=1)
                                       ->  Seq Scan on lineitem l2  (cost=0.00..1785087.40 rows=59986140 width=8) (actual time=0.002..7623.622 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..11.63 rows=49 width=8) (actual time=0.007..0.007 rows=1 loops=1460326)
                                 Index Cond: (l3.l_orderkey = l1.l_orderkey)
                                 Filter: (l3.l_receiptdate > l3.l_commitdate)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.89 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=80214)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
 Total runtime: 45237.694 ms
(32 rows)

query 22 run 1
SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193069.80..193069.80 rows=1 width=24) (actual time=9305.155..9305.155 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75808.05..75808.06 rows=1 width=8) (actual time=1138.820..1138.820 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75690.93 rows=46847 width=8) (actual time=0.009..990.675 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=117261.74..117280.67 rows=7570 width=24) (actual time=9305.154..9305.154 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=117072.49..117223.89 rows=7570 width=24) (actual time=9305.120..9305.130 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..117015.72 rows=7570 width=24) (actual time=1140.046..9240.553 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75690.93 rows=17239 width=28) (actual time=1139.381..2036.248 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..28.36 rows=18 width=4) (actual time=0.037..0.037 rows=1 loops=191129)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
 Total runtime: 9305.226 ms
(15 rows)

SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193069.80..193069.80 rows=1 width=24) (actual time=2122.480..2122.480 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75808.05..75808.06 rows=1 width=8) (actual time=969.140..969.140 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75690.93 rows=46847 width=8) (actual time=0.008..822.869 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=117261.74..117280.67 rows=7570 width=24) (actual time=2122.478..2122.478 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=117072.49..117223.89 rows=7570 width=24) (actual time=2122.447..2122.458 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..117015.72 rows=7570 width=24) (actual time=969.189..2092.890 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75690.93 rows=17239 width=28) (actual time=969.169..1506.166 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..28.36 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
 Total runtime: 2122.542 ms
(15 rows)

