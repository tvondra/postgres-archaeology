query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191602.00..191602.67 rows=1 width=236) (actual time=2143.159..2143.228 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191602.00..191606.05 rows=6 width=236) (actual time=2143.157..2143.225 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191602.00..191604.87 rows=24 width=236) (actual time=2143.118..2143.190 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190601.94..190601.95 rows=6 width=236) (actual time=2134.321..2134.322 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190601.70..190601.86 rows=6 width=236) (actual time=2134.292..2134.299 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.82 rows=1482147 width=25) (actual time=0.105..520.055 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 15.495 ms
 Execution Time: 2144.993 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191602.00..191602.67 rows=1 width=236) (actual time=1915.810..1916.249 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191602.00..191606.05 rows=6 width=236) (actual time=1915.808..1916.248 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191602.00..191604.87 rows=24 width=236) (actual time=1915.781..1916.222 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190601.94..190601.95 rows=6 width=236) (actual time=1911.080..1911.081 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190601.70..190601.86 rows=6 width=236) (actual time=1911.053..1911.061 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.82 rows=1482147 width=25) (actual time=0.027..267.883 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.740 ms
 Execution Time: 1916.333 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54433.22..54433.23 rows=1 width=192) (actual time=502.727..502.809 rows=100 loops=1)
   ->  Sort  (cost=54433.22..54433.23 rows=1 width=192) (actual time=502.726..502.802 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37829.03..54433.21 rows=1 width=192) (actual time=390.440..502.377 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6427.70 rows=787 width=30) (actual time=0.669..1.016 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=328 width=30) (actual time=0.803..38.790 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30538.02..30538.02 rows=159601 width=172) (actual time=388.925..388.928 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30538.02 rows=159601 width=172) (actual time=6.409..318.287 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.452..195.689 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=5.946..5.948 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.733..5.436 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.309..3.789 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.416..0.417 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.404..0.413 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.164..0.167 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.231..0.232 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.225..0.227 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.075..0.075 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.067..0.073 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.058..0.071 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.057..0.066 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.054..0.056 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 15.908 ms
 Execution Time: 503.870 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54433.22..54433.23 rows=1 width=192) (actual time=282.941..283.028 rows=100 loops=1)
   ->  Sort  (cost=54433.22..54433.23 rows=1 width=192) (actual time=282.940..283.014 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=37829.03..54433.21 rows=1 width=192) (actual time=247.084..282.626 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6427.70 rows=787 width=30) (actual time=0.286..0.482 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=328 width=30) (actual time=0.024..14.136 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30538.02..30538.02 rows=159601 width=172) (actual time=246.335..246.338 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30538.02 rows=159601 width=172) (actual time=2.810..180.468 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..50.580 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.797..2.800 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.031..2.317 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.006..0.687 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.021..0.023 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.015..0.021 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.704 ms
 Execution Time: 283.345 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234677.91..234677.93 rows=10 width=44) (actual time=1109.808..1111.188 rows=10 loops=1)
   ->  Sort  (cost=234677.91..235467.56 rows=315861 width=44) (actual time=1109.807..1111.186 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179964.83..227852.27 rows=315861 width=44) (actual time=1091.204..1108.683 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179964.83..219955.75 rows=315860 width=44) (actual time=1091.199..1099.715 rows=12050 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178964.77..181333.72 rows=78965 width=44) (actual time=1080.109..1084.809 rows=2410 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178964.77..179162.19 rows=78965 width=24) (actual time=1080.096..1080.373 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 735kB
                                 Worker 0:  Sort Method: quicksort  Memory: 642kB
                                 Worker 1:  Sort Method: quicksort  Memory: 670kB
                                 Worker 2:  Sort Method: quicksort  Memory: 644kB
                                 Worker 3:  Sort Method: quicksort  Memory: 657kB
                                 ->  Parallel Hash Join  (cost=37909.97..172541.40 rows=78965 width=24) (actual time=214.529..1078.149 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.82 rows=816235 width=16) (actual time=0.594..794.090 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37324.64..37324.64 rows=46826 width=12) (actual time=211.954..211.957 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                             ->  Parallel Hash Join  (cost=4535.82..37324.64 rows=46826 width=12) (actual time=23.963..202.505 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232156 width=16) (actual time=0.247..147.528 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12606 width=4) (actual time=23.612..23.613 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12606 width=4) (actual time=0.402..21.766 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 16.680 ms
 Execution Time: 1112.422 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234677.91..234677.93 rows=10 width=44) (actual time=454.736..456.137 rows=10 loops=1)
   ->  Sort  (cost=234677.91..235467.56 rows=315861 width=44) (actual time=454.734..456.135 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=179964.83..227852.27 rows=315861 width=44) (actual time=437.633..453.583 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179964.83..219955.75 rows=315860 width=44) (actual time=437.626..444.472 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=178964.77..181333.72 rows=78965 width=44) (actual time=431.265..435.588 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=178964.77..179162.19 rows=78965 width=24) (actual time=431.253..431.539 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 531kB
                                 Worker 0:  Sort Method: quicksort  Memory: 747kB
                                 Worker 1:  Sort Method: quicksort  Memory: 644kB
                                 Worker 2:  Sort Method: quicksort  Memory: 784kB
                                 Worker 3:  Sort Method: quicksort  Memory: 641kB
                                 ->  Parallel Hash Join  (cost=37909.97..172541.40 rows=78965 width=24) (actual time=102.914..429.636 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.82 rows=816235 width=16) (actual time=0.047..237.042 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37324.64..37324.64 rows=46826 width=12) (actual time=101.097..101.100 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                             ->  Parallel Hash Join  (cost=4535.82..37324.64 rows=46826 width=12) (actual time=8.432..92.094 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232156 width=16) (actual time=0.008..56.584 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12606 width=4) (actual time=8.358..8.358 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12606 width=4) (actual time=0.011..6.439 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 0.942 ms
 Execution Time: 456.207 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78132.32..78132.70 rows=1 width=24) (actual time=2111.974..2122.516 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=78132.32..78134.22 rows=5 width=24) (actual time=2111.973..2122.515 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=78132.32..78134.09 rows=15 width=24) (actual time=2111.965..2122.508 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=77132.28..77132.29 rows=5 width=24) (actual time=2105.009..2105.011 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=77132.17..77132.22 rows=5 width=24) (actual time=2104.990..2104.991 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=787.71..77043.99 rows=17635 width=16) (actual time=8.196..2093.128 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=787.27..27182.80 rows=17635 width=20) (actual time=7.801..269.082 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5863
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..773.61 rows=54668 width=0) (actual time=10.633..10.634 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.129..0.129 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 13.470 ms
 Execution Time: 2123.327 ms
(26 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78132.32..78132.70 rows=1 width=24) (actual time=96.074..110.862 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=78132.32..78134.22 rows=5 width=24) (actual time=96.073..110.861 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=78132.32..78134.09 rows=15 width=24) (actual time=96.066..110.855 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=77132.28..77132.29 rows=5 width=24) (actual time=92.649..92.651 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=77132.17..77132.22 rows=5 width=24) (actual time=92.629..92.631 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=787.71..77043.99 rows=17635 width=16) (actual time=7.438..88.295 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=787.27..27182.80 rows=17635 width=20) (actual time=7.413..26.011 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5832
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..773.61 rows=54668 width=0) (actual time=6.879..6.880 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 0.655 ms
 Execution Time: 110.928 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83618.53..83618.53 rows=1 width=58) (actual time=2308.435..2318.880 rows=1 loops=1)
   ->  Sort  (cost=83618.53..83618.59 rows=25 width=58) (actual time=2308.434..2318.878 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83579.88..83618.40 rows=25 width=58) (actual time=2307.719..2318.865 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83579.88..83617.53 rows=75 width=58) (actual time=2307.536..2318.841 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82579.84..82608.68 rows=25 width=58) (actual time=2300.591..2301.269 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82579.84..82585.54 rows=2282 width=38) (actual time=2300.407..2300.488 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 203kB
                                 Worker 0:  Sort Method: quicksort  Memory: 197kB
                                 Worker 1:  Sort Method: quicksort  Memory: 194kB
                                 Worker 2:  Sort Method: quicksort  Memory: 188kB
                                 ->  Hash Join  (cost=8395.54..82452.55 rows=2282 width=38) (actual time=67.957..2298.558 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7922.54..81679.76 rows=57103 width=50) (actual time=62.048..2280.999 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7922.11..35450.93 rows=14276 width=38) (actual time=61.638..404.425 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3181.98..30383.65 rows=71378 width=8) (actual time=30.457..347.037 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6544
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3126.66 rows=221273 width=0) (actual time=26.330..26.330 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=31.043..31.045 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.204..28.675 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.092..24.053 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.107..0.108 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.101..0.106 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.047..0.048 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.156..0.164 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.876..3.876 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.083..2.090 rows=10000 loops=4)
 Planning Time: 21.477 ms
 Execution Time: 2319.541 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83618.53..83618.53 rows=1 width=58) (actual time=153.169..168.117 rows=1 loops=1)
   ->  Sort  (cost=83618.53..83618.59 rows=25 width=58) (actual time=153.168..168.115 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83579.88..83618.40 rows=25 width=58) (actual time=152.474..168.104 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83579.88..83617.53 rows=75 width=58) (actual time=152.295..168.078 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82579.84..82608.68 rows=25 width=58) (actual time=148.353..149.046 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82579.84..82585.54 rows=2282 width=38) (actual time=148.180..148.261 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 190kB
                                 Worker 0:  Sort Method: quicksort  Memory: 199kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 196kB
                                 ->  Hash Join  (cost=8395.54..82452.55 rows=2282 width=38) (actual time=36.473..147.378 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7922.54..81679.76 rows=57103 width=50) (actual time=33.372..136.554 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7922.11..35450.93 rows=14276 width=38) (actual time=33.347..74.244 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3181.98..30383.65 rows=71378 width=8) (actual time=21.729..48.890 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6488
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3126.66 rows=221273 width=0) (actual time=17.736..17.737 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.483..11.485 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.037..9.334 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.346 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.027..0.028 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.021..0.026 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.003..3.003 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.403 rows=10000 loops=4)
 Planning Time: 3.118 ms
 Execution Time: 168.202 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106577.81..106577.82 rows=1 width=32) (actual time=1093.755..1096.295 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106577.81..106577.82 rows=1 width=32) (actual time=1093.754..1096.293 rows=1 loops=1)
         ->  Gather  (cost=106577.37..106577.78 rows=4 width=32) (actual time=1087.220..1096.260 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105577.37..105577.38 rows=1 width=32) (actual time=1079.260..1079.261 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20803.50..105430.08 rows=29459 width=12) (actual time=133.781..1062.670 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13002
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20774.04 rows=117835 width=0) (actual time=129.429..129.430 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 12.495 ms
 Execution Time: 1097.668 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106577.81..106577.82 rows=1 width=32) (actual time=208.691..217.548 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106577.81..106577.82 rows=1 width=32) (actual time=208.690..217.546 rows=1 loops=1)
         ->  Gather  (cost=106577.37..106577.78 rows=4 width=32) (actual time=208.157..217.533 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105577.37..105577.38 rows=1 width=32) (actual time=204.584..204.584 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20803.50..105430.08 rows=29459 width=12) (actual time=110.992..196.965 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12495
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20774.04 rows=117835 width=0) (actual time=102.263..102.263 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.410 ms
 Execution Time: 217.594 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163964.63..163964.78 rows=1 width=92) (actual time=1480.827..1496.504 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163964.63..164914.96 rows=6146 width=92) (actual time=1480.826..1496.502 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163964.63..164733.04 rows=5949 width=92) (actual time=1480.624..1496.492 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162964.59..163033.99 rows=1983 width=92) (actual time=1473.277..1473.686 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162964.59..162969.54 rows=1983 width=72) (actual time=1473.068..1473.126 rows=1043 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 252kB
                           Worker 0:  Sort Method: quicksort  Memory: 244kB
                           Worker 1:  Sort Method: quicksort  Memory: 253kB
                           Worker 2:  Sort Method: quicksort  Memory: 251kB
                           ->  Hash Join  (cost=4843.31..162855.98 rows=1983 width=72) (actual time=37.248..1471.462 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162225.92 rows=47688 width=46) (actual time=31.726..1457.044 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=31.186..247.484 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.234..138.202 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=30.825..30.826 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.109..29.889 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.084..25.855 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.016 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.014 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.040..0.040 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.969..2.971 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.155..2.843 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.081..1.537 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.069..0.070 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.063..0.065 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 18.741 ms
 Execution Time: 1498.030 ms
(48 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163964.63..163964.78 rows=1 width=92) (actual time=265.202..284.912 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163964.63..164914.96 rows=6146 width=92) (actual time=265.201..284.910 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163964.63..164733.04 rows=5949 width=92) (actual time=265.014..284.902 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162964.59..163033.99 rows=1983 width=92) (actual time=260.888..261.249 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162964.59..162969.54 rows=1983 width=72) (actual time=260.682..260.734 rows=948 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 253kB
                           Worker 0:  Sort Method: quicksort  Memory: 253kB
                           Worker 1:  Sort Method: quicksort  Memory: 241kB
                           Worker 2:  Sort Method: quicksort  Memory: 253kB
                           ->  Hash Join  (cost=4843.31..162855.98 rows=1983 width=72) (actual time=13.626..259.753 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162225.92 rows=47688 width=46) (actual time=9.990..249.911 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=9.944..109.825 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.005..33.872 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=9.829..9.830 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.025..8.681 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.213 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=3.449..3.451 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.035..3.339 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.033 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.019..0.019 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.013..0.015 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.264 ms
 Execution Time: 285.237 ms
(48 rows)

query 8 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70295.64..70295.79 rows=1 width=40) (actual time=2292.571..2303.134 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70295.64..70651.11 rows=2406 width=40) (actual time=2292.570..2303.133 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70295.64..70571.72 rows=2020 width=72) (actual time=2292.369..2303.122 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=69295.62..69338.54 rows=1010 width=72) (actual time=2286.531..2286.733 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69295.62..69298.14 rows=1010 width=46) (actual time=2286.325..2286.365 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 89kB
                           Worker 0:  Sort Method: quicksort  Memory: 93kB
                           Worker 1:  Sort Method: quicksort  Memory: 86kB
                           ->  Hash Join  (cost=64732.67..69245.22 rows=1010 width=46) (actual time=2255.711..2286.050 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64731.10..69235.51 rows=1010 width=20) (actual time=2255.608..2285.527 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=64283.10..68784.85 rows=1011 width=20) (actual time=2251.495..2281.089 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=64280.59..68753.28 rows=5055 width=24) (actual time=2251.227..2280.538 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.398..22.022 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=64231.67..64231.67 rows=3914 width=24) (actual time=2250.674..2250.677 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=30271.24..64231.67 rows=3914 width=24) (actual time=2016.446..2248.469 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148014 width=12) (actual time=0.238..204.751 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=30064.62..30064.62 rows=16530 width=20) (actual time=2016.000..2016.001 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..30064.62 rows=16530 width=20) (actual time=0.989..2001.209 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=551 width=4) (actual time=0.304..22.737 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.329..4.480 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.080..0.082 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.075..0.080 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.067..0.068 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.065..0.066 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.922..3.922 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.103..2.581 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.074..0.075 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.061..0.064 rows=25 loops=3)
 Planning Time: 22.763 ms
 Execution Time: 2303.802 ms
(55 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70295.64..70295.79 rows=1 width=40) (actual time=150.522..164.482 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70295.64..70651.11 rows=2406 width=40) (actual time=150.521..164.480 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70295.64..70571.72 rows=2020 width=72) (actual time=150.322..164.470 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=69295.62..69338.54 rows=1010 width=72) (actual time=147.683..147.883 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69295.62..69298.14 rows=1010 width=46) (actual time=147.480..147.522 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 87kB
                           Worker 0:  Sort Method: quicksort  Memory: 89kB
                           Worker 1:  Sort Method: quicksort  Memory: 92kB
                           ->  Hash Join  (cost=64732.67..69245.22 rows=1010 width=46) (actual time=134.545..147.299 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64731.10..69235.51 rows=1010 width=20) (actual time=134.496..146.962 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=64283.10..68784.85 rows=1011 width=20) (actual time=131.483..143.672 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=64280.59..68753.28 rows=5055 width=24) (actual time=131.400..143.250 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..4.088 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=64231.67..64231.67 rows=3914 width=24) (actual time=131.196..131.199 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=30271.24..64231.67 rows=3914 width=24) (actual time=36.662..129.619 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148014 width=12) (actual time=0.014..71.678 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=30064.62..30064.62 rows=16530 width=20) (actual time=36.524..36.525 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                                     ->  Nested Loop  (cost=0.43..30064.62 rows=16530 width=20) (actual time=0.049..32.558 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=551 width=4) (actual time=0.029..9.035 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.004..0.048 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.032..0.033 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.026..0.032 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.798..2.798 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.028..1.468 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.024 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.015 rows=25 loops=3)
 Planning Time: 3.379 ms
 Execution Time: 164.569 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102209.50..102209.66 rows=1 width=66) (actual time=4760.262..4790.253 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=102209.50..102243.17 rows=220 width=66) (actual time=4760.261..4790.251 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=102209.50..102237.19 rows=213 width=66) (actual time=4759.821..4790.240 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=101209.46..101212.12 rows=71 width=66) (actual time=4750.742..4751.979 rows=4 loops=4)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=101209.46..101209.64 rows=71 width=57) (actual time=4750.464..4750.642 rows=1740 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14610kB
                           Worker 0:  Sort Method: quicksort  Memory: 14540kB
                           Worker 1:  Sort Method: quicksort  Memory: 14593kB
                           Worker 2:  Sort Method: quicksort  Memory: 14381kB
                           ->  Hash Join  (cost=5238.07..101207.28 rows=71 width=57) (actual time=34.723..4664.067 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=5236.51..101205.14 rows=71 width=31) (actual time=34.621..4603.506 rows=81482 loops=4)
                                       ->  Nested Loop  (cost=5236.08..100981.75 rows=71 width=31) (actual time=34.041..3552.370 rows=81482 loops=4)
                                             ->  Nested Loop  (cost=5235.80..100772.46 rows=71 width=35) (actual time=33.887..3363.540 rows=81482 loops=4)
                                                   ->  Parallel Hash Join  (cost=5235.37..26027.44 rows=23461 width=18) (actual time=33.258..148.692 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.527..90.472 rows=200000 loops=4)
                                                         ->  Parallel Hash  (cost=5140.67..5140.67 rows=7576 width=4) (actual time=31.220..31.220 rows=2720 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 736kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=7576 width=4) (actual time=0.117..30.345 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.048..0.293 rows=7 loops=43520)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=325928)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.071..0.071 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.059..0.062 rows=25 loops=4)
 Planning Time: 27.614 ms
 Execution Time: 4791.364 ms
(38 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102209.50..102209.66 rows=1 width=66) (actual time=745.439..772.152 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=102209.50..102243.17 rows=220 width=66) (actual time=745.438..772.150 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=102209.50..102237.19 rows=213 width=66) (actual time=744.990..772.141 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=101209.46..101212.12 rows=71 width=66) (actual time=740.240..741.384 rows=4 loops=4)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=101209.46..101209.64 rows=71 width=57) (actual time=739.963..740.130 rows=1645 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14523kB
                           Worker 0:  Sort Method: quicksort  Memory: 14579kB
                           Worker 1:  Sort Method: quicksort  Memory: 14518kB
                           Worker 2:  Sort Method: quicksort  Memory: 14504kB
                           ->  Hash Join  (cost=5238.07..101207.28 rows=71 width=57) (actual time=17.173..664.181 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=5236.51..101205.14 rows=71 width=31) (actual time=17.123..623.203 rows=81482 loops=4)
                                       ->  Nested Loop  (cost=5236.08..100981.75 rows=71 width=31) (actual time=17.107..357.488 rows=81482 loops=4)
                                             ->  Nested Loop  (cost=5235.80..100772.46 rows=71 width=35) (actual time=17.089..220.050 rows=81482 loops=4)
                                                   ->  Parallel Hash Join  (cost=5235.37..26027.44 rows=23461 width=18) (actual time=17.065..65.659 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.010..18.111 rows=200000 loops=4)
                                                         ->  Parallel Hash  (cost=5140.67..5140.67 rows=7576 width=4) (actual time=15.897..15.898 rows=2720 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 768kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=7576 width=4) (actual time=0.010..14.220 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.012 rows=7 loops=43520)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.023 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=4)
 Planning Time: 4.564 ms
 Execution Time: 772.256 ms
(38 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101014.08..101014.13 rows=20 width=201) (actual time=2037.132..2043.325 rows=20 loops=1)
   ->  Sort  (cost=101014.08..101153.84 rows=55904 width=201) (actual time=2037.130..2043.322 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98827.70..99526.50 rows=55904 width=201) (actual time=2004.767..2031.053 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6823.27..98128.90 rows=55904 width=181) (actual time=66.669..1895.837 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5823.27..91538.50 rows=18034 width=181) (actual time=58.887..1944.035 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5821.71..91481.57 rows=18034 width=159) (actual time=58.755..1933.214 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=818.46..86430.98 rows=18034 width=16) (actual time=16.251..1869.242 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=818.02..27223.82 rows=18319 width=8) (actual time=15.611..264.085 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5028
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..803.83 rows=56790 width=0) (actual time=11.817..11.817 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.108..0.111 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=147) (actual time=42.031..42.032 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=147) (actual time=0.094..21.235 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.065..0.065 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.052..0.055 rows=25 loops=4)
 Planning Time: 19.286 ms
 Execution Time: 2044.323 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101014.08..101014.13 rows=20 width=201) (actual time=232.510..236.454 rows=20 loops=1)
   ->  Sort  (cost=101014.08..101153.84 rows=55904 width=201) (actual time=232.509..236.451 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98827.70..99526.50 rows=55904 width=201) (actual time=200.235..224.258 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6823.27..98128.90 rows=55904 width=181) (actual time=43.836..119.253 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5823.27..91538.50 rows=18034 width=181) (actual time=40.538..156.313 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5821.71..91481.57 rows=18034 width=159) (actual time=40.462..149.141 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=818.46..86430.98 rows=18034 width=16) (actual time=12.200..106.645 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=818.02..27223.82 rows=18319 width=8) (actual time=12.158..29.079 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2280
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..803.83 rows=56790 width=0) (actual time=8.573..8.573 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=147) (actual time=27.789..27.789 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=147) (actual time=0.007..7.725 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
 Planning Time: 1.519 ms
 Execution Time: 236.617 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22723.35..22723.35 rows=1 width=36) (actual time=778.934..778.939 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10896.17..10896.18 rows=1 width=32) (actual time=26.748..26.751 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10656.77 rows=31920 width=10) (actual time=0.056..19.120 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.049..0.286 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.227 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.025..0.025 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.27 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11827.17..11853.77 rows=10640 width=36) (actual time=778.933..778.935 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11215.37..11773.97 rows=10640 width=36) (actual time=768.312..778.786 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10656.77 rows=31920 width=14) (actual time=1.331..709.995 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.956..4.464 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.187..0.190 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.762..4.167 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.555..0.555 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.27 rows=80 width=18) (actual time=0.130..1.698 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 11.911 ms
 Execution Time: 779.959 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22723.35..22723.35 rows=1 width=36) (actual time=83.436..83.441 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10896.17..10896.18 rows=1 width=32) (actual time=26.322..26.324 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10656.77 rows=31920 width=10) (actual time=0.054..18.718 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.048..0.282 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.037..0.222 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.27 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11827.17..11853.77 rows=10640 width=36) (actual time=83.435..83.437 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11215.37..11773.97 rows=10640 width=36) (actual time=72.916..83.289 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10656.77 rows=31920 width=14) (actual time=0.065..28.305 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.058..0.480 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.047..0.416 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.030..0.030 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.27 rows=80 width=18) (actual time=0.004..0.058 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.995 ms
 Execution Time: 83.790 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170004.22..170025.15 rows=1 width=27) (actual time=1103.700..1103.786 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170004.22..170150.71 rows=7 width=27) (actual time=1103.698..1103.784 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170004.22..170150.43 rows=28 width=27) (actual time=1102.660..1103.774 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169004.17..169147.04 rows=7 width=27) (actual time=1089.077..1090.060 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169004.17..169022.02 rows=7140 width=27) (actual time=1088.113..1088.360 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 676kB
                           Worker 0:  Sort Method: quicksort  Memory: 680kB
                           Worker 1:  Sort Method: quicksort  Memory: 681kB
                           Worker 2:  Sort Method: quicksort  Memory: 667kB
                           Worker 3:  Sort Method: quicksort  Memory: 677kB
                           ->  Nested Loop  (cost=0.43..168547.14 rows=7140 width=27) (actual time=0.598..1083.709 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.47 rows=7143 width=15) (actual time=0.535..686.952 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.063..0.063 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 12.908 ms
 Execution Time: 1104.992 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170004.22..170025.15 rows=1 width=27) (actual time=398.638..400.072 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170004.22..170150.71 rows=7 width=27) (actual time=398.637..400.070 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170004.22..170150.43 rows=28 width=27) (actual time=397.417..400.060 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169004.17..169147.04 rows=7 width=27) (actual time=390.515..391.485 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169004.17..169022.02 rows=7140 width=27) (actual time=389.554..389.801 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 801kB
                           Worker 0:  Sort Method: quicksort  Memory: 568kB
                           Worker 1:  Sort Method: quicksort  Memory: 578kB
                           Worker 2:  Sort Method: quicksort  Memory: 734kB
                           Worker 3:  Sort Method: quicksort  Memory: 700kB
                           ->  Nested Loop  (cost=0.43..168547.14 rows=7140 width=27) (actual time=0.938..387.395 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.47 rows=7143 width=15) (actual time=0.919..351.655 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.005..0.005 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.686 ms
 Execution Time: 400.160 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1455.960..1455.963 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1455.959..1455.961 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1455.934..1455.940 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1413.169..1437.915 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=35.332..1062.634 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.405..630.693 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=34.549..34.550 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..16.455 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.391 ms
 Execution Time: 1457.752 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1262.446..1262.449 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1262.444..1262.446 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1262.419..1262.426 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1219.525..1244.363 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=30.902..881.365 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.011..477.212 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=30.473..30.474 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.378 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.656 ms
 Execution Time: 1263.558 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75857.06..75857.07 rows=1 width=32) (actual time=539.392..542.935 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=75857.06..75857.07 rows=1 width=32) (actual time=539.390..542.933 rows=1 loops=1)
         ->  Gather  (cost=75856.60..75857.01 rows=4 width=64) (actual time=535.259..542.911 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=74856.60..74856.61 rows=1 width=64) (actual time=527.857..527.859 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7249.86..74508.77 rows=19876 width=33) (actual time=58.810..512.493 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1275.87..68482.60 rows=19876 width=16) (actual time=21.607..459.675 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8168
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1255.99 rows=79506 width=0) (actual time=14.195..14.195 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=36.761..36.761 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.097..23.476 rows=40000 loops=5)
 Planning Time: 13.176 ms
 Execution Time: 543.813 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75857.06..75857.07 rows=1 width=32) (actual time=110.636..115.816 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=75857.06..75857.07 rows=1 width=32) (actual time=110.635..115.814 rows=1 loops=1)
         ->  Gather  (cost=75856.60..75857.01 rows=4 width=64) (actual time=110.618..115.799 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=74856.60..74856.61 rows=1 width=64) (actual time=104.571..104.573 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7249.86..74508.77 rows=19876 width=33) (actual time=39.207..96.224 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1275.87..68482.60 rows=19876 width=16) (actual time=15.414..64.393 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9739
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1255.99 rows=79506 width=0) (actual time=8.517..8.518 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.347..23.347 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.007..7.364 rows=40000 loops=5)
 Planning Time: 0.725 ms
 Execution Time: 115.921 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239733.38..239845.27 rows=1 width=103) (actual time=1280.098..1287.455 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121171.29..121171.30 rows=1 width=32) (actual time=235.408..235.409 rows=1 loops=1)
           ->  HashAggregate  (cost=120921.04..121046.16 rows=10010 width=36) (actual time=232.145..234.802 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3549.85..118707.95 rows=221309 width=16) (actual time=27.733..118.204 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.52 rows=221309 width=0) (actual time=18.764..18.764 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118562.08..124156.77 rows=50 width=103) (actual time=1280.097..1287.452 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118561.80..124031.65 rows=50 width=36) (actual time=1279.419..1286.773 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118561.80..123355.97 rows=40040 width=36) (actual time=1016.222..1031.334 rows=41777 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117561.74..117586.76 rows=10010 width=36) (actual time=1005.493..1006.266 rows=8884 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1155kB
                           Worker 2:  Sort Method: quicksort  Memory: 1157kB
                           Worker 3:  Sort Method: quicksort  Memory: 1159kB
                           ->  Partial HashAggregate  (cost=116771.49..116896.62 rows=10010 width=36) (actual time=997.419..1003.101 rows=9889 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3549.85..116218.22 rows=55327 width=16) (actual time=43.197..945.615 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13225
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.52 rows=221309 width=0) (actual time=37.481..37.481 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.673..0.673 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 10.414 ms
 Execution Time: 1287.890 ms
(36 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239733.38..239845.27 rows=1 width=103) (actual time=414.133..423.200 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121171.29..121171.30 rows=1 width=32) (actual time=217.954..217.955 rows=1 loops=1)
           ->  HashAggregate  (cost=120921.04..121046.16 rows=10010 width=36) (actual time=214.734..217.345 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3549.85..118707.95 rows=221309 width=16) (actual time=27.608..103.211 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.52 rows=221309 width=0) (actual time=18.625..18.626 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118562.08..124156.77 rows=50 width=103) (actual time=414.132..423.197 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118561.80..124031.65 rows=50 width=36) (actual time=414.111..423.175 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118561.80..123355.97 rows=40040 width=36) (actual time=168.723..185.463 rows=41802 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117561.74..117586.76 rows=10010 width=36) (actual time=160.005..160.798 rows=8896 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1161kB
                           Worker 0:  Sort Method: quicksort  Memory: 1159kB
                           Worker 1:  Sort Method: quicksort  Memory: 1158kB
                           Worker 2:  Sort Method: quicksort  Memory: 1155kB
                           Worker 3:  Sort Method: quicksort  Memory: 1154kB
                           ->  Partial HashAggregate  (cost=116771.49..116896.62 rows=10010 width=36) (actual time=151.207..157.668 rows=9893 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3549.85..116218.22 rows=55327 width=16) (actual time=33.246..116.133 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14556
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.52 rows=221309 width=0) (actual time=26.842..26.842 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.017..0.017 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.694 ms
 Execution Time: 423.357 ms
(36 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29106.23..29106.23 rows=1 width=44) (actual time=425.685..426.448 rows=1 loops=1)
   ->  Sort  (cost=29106.23..29145.82 rows=15835 width=44) (actual time=425.684..426.446 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28142.68..29027.06 rows=15835 width=44) (actual time=377.615..423.334 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28142.68..28287.89 rows=58082 width=40) (actual time=377.593..386.161 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7682.01..23546.71 rows=58082 width=40) (actual time=40.113..112.184 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6682.01..16738.51 rows=14520 width=40) (actual time=33.750..104.596 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=5.892..58.572 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.409..4.621 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12100 width=40) (actual time=27.705..27.706 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12100 width=40) (actual time=0.213..25.250 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 12.710 ms
 Execution Time: 427.323 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29106.23..29106.23 rows=1 width=44) (actual time=395.779..396.230 rows=1 loops=1)
   ->  Sort  (cost=29106.23..29145.82 rows=15835 width=44) (actual time=395.777..396.228 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28142.68..29027.06 rows=15835 width=44) (actual time=347.857..393.135 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28142.68..28287.89 rows=58082 width=40) (actual time=347.833..355.981 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7682.01..23546.71 rows=58082 width=40) (actual time=21.614..80.809 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6682.01..16738.51 rows=14520 width=40) (actual time=18.269..73.790 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.846..38.440 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.087..2.643 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12100 width=40) (actual time=15.231..15.231 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12100 width=40) (actual time=0.015..11.166 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.754 ms
 Execution Time: 396.278 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=427322.07..427322.08 rows=1 width=32) (actual time=2293.659..2298.864 rows=1 loops=1)
   ->  Aggregate  (cost=427322.07..427322.08 rows=1 width=32) (actual time=2293.658..2298.862 rows=1 loops=1)
         ->  Merge Join  (cost=299976.38..427317.37 rows=1879 width=8) (actual time=1162.336..2298.765 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298975.50..412035.05 rows=190670 width=36) (actual time=1152.841..2264.792 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298975.50..403454.90 rows=762680 width=36) (actual time=1152.822..1722.841 rows=993616 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297975.44..311612.30 rows=190670 width=36) (actual time=1126.380..1524.549 rows=199254 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297975.44..301726.60 rows=1500465 width=9) (actual time=1126.358..1248.298 rows=1199131 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 21000kB
                                       Worker 0:  Sort Method: external merge  Disk: 20976kB
                                       Worker 1:  Sort Method: external merge  Disk: 24392kB
                                       Worker 2:  Sort Method: external merge  Disk: 21032kB
                                       Worker 3:  Sort Method: external merge  Disk: 24248kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127564.65 rows=1500465 width=9) (actual time=0.096..622.346 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12813.71 rows=5912 width=21) (actual time=5.770..15.644 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12798.93 rows=5912 width=21) (actual time=5.765..14.878 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11116.52 rows=2463 width=21) (actual time=2.576..98.159 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=82 width=4) (actual time=0.682..28.273 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.74 rows=31 width=17) (actual time=0.695..0.998 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 11.993 ms
 Execution Time: 2302.122 ms
(33 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=427322.07..427322.08 rows=1 width=32) (actual time=1943.707..1951.206 rows=1 loops=1)
   ->  Aggregate  (cost=427322.07..427322.08 rows=1 width=32) (actual time=1943.707..1951.205 rows=1 loops=1)
         ->  Merge Join  (cost=299976.38..427317.37 rows=1879 width=8) (actual time=796.017..1951.120 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298975.50..412035.05 rows=190670 width=36) (actual time=788.830..1926.982 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298975.50..403454.90 rows=762680 width=36) (actual time=788.809..1405.065 rows=992666 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297975.44..311612.30 rows=190670 width=36) (actual time=745.870..1137.019 rows=199070 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297975.44..301726.60 rows=1500465 width=9) (actual time=745.854..865.501 rows=1199021 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 25224kB
                                       Worker 0:  Sort Method: external merge  Disk: 24248kB
                                       Worker 1:  Sort Method: external merge  Disk: 25224kB
                                       Worker 2:  Sort Method: external merge  Disk: 16952kB
                                       Worker 3:  Sort Method: external merge  Disk: 20016kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127564.65 rows=1500465 width=9) (actual time=0.035..223.320 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12813.71 rows=5912 width=21) (actual time=3.506..5.848 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12798.93 rows=5912 width=21) (actual time=3.501..5.127 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11116.52 rows=2463 width=21) (actual time=0.144..18.614 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=82 width=4) (actual time=0.123..15.360 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.74 rows=31 width=17) (actual time=0.006..0.041 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.763 ms
 Execution Time: 1954.732 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894817.90..894818.15 rows=100 width=71) (actual time=3967.510..3988.327 rows=9 loops=1)
   ->  Sort  (cost=894817.90..899819.45 rows=2000620 width=71) (actual time=3967.509..3988.325 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523795.08..818355.65 rows=2000620 width=71) (actual time=3967.476..3988.305 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523795.08..773341.70 rows=2000620 width=71) (actual time=3967.469..3988.288 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522795.02..534048.51 rows=500155 width=71) (actual time=3958.236..3958.244 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522795.02..524045.41 rows=500155 width=44) (actual time=3958.222..3958.227 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 Worker 0:  Sort Method: quicksort  Memory: 25kB
                                 Worker 1:  Sort Method: quicksort  Memory: 26kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=330754.51..465559.31 rows=500155 width=44) (actual time=3787.387..3958.171 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127564.65 rows=1500465 width=9) (actual time=0.015..91.864 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328737.76..328737.76 rows=161340 width=43) (actual time=3688.565..3688.568 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=296074.36..328737.76 rows=161340 width=43) (actual time=3569.683..3688.202 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291071.11..323310.99 rows=161340 width=24) (actual time=3543.686..3662.133 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.715..181.210 rows=300000 loops=5)
                                                         ->  Hash  (cost=284819.18..284819.18 rows=500155 width=4) (actual time=3435.573..3435.574 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279817.63 rows=500155 width=4) (actual time=731.838..3435.556 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227301.35 rows=6001861 width=9) (actual time=0.549..2000.991 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=25.681..25.682 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10368kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.079..16.544 rows=30000 loops=5)
 Planning Time: 21.688 ms
 Execution Time: 3988.718 ms
(40 rows)

SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894817.90..894818.15 rows=100 width=71) (actual time=3375.729..3392.358 rows=9 loops=1)
   ->  Sort  (cost=894817.90..899819.45 rows=2000620 width=71) (actual time=3375.729..3392.356 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523795.08..818355.65 rows=2000620 width=71) (actual time=3375.689..3392.335 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523795.08..773341.70 rows=2000620 width=71) (actual time=3375.676..3392.313 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522795.02..534048.51 rows=500155 width=71) (actual time=3366.503..3366.511 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522795.02..524045.41 rows=500155 width=44) (actual time=3366.489..3366.495 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 26kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=330754.51..465559.31 rows=500155 width=44) (actual time=3226.463..3366.440 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127564.65 rows=1500465 width=9) (actual time=0.011..94.038 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328737.76..328737.76 rows=161340 width=43) (actual time=3100.306..3100.310 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4192kB
                                             ->  Parallel Hash Join  (cost=296074.36..328737.76 rows=161340 width=43) (actual time=2969.581..3017.485 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291071.11..323310.99 rows=161340 width=24) (actual time=2949.012..2996.908 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.021..28.001 rows=300000 loops=5)
                                                         ->  Hash  (cost=284819.18..284819.18 rows=500155 width=4) (actual time=2905.005..2905.006 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279817.63 rows=500155 width=4) (actual time=631.581..2904.981 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227301.35 rows=6001861 width=9) (actual time=0.037..1140.023 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=19.760..19.761 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.010..7.360 rows=30000 loops=5)
 Planning Time: 1.175 ms
 Execution Time: 3392.426 ms
(40 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18260.95..18260.96 rows=1 width=32) (actual time=890.513..893.469 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18260.95..18260.96 rows=1 width=32) (actual time=890.512..893.467 rows=1 loops=1)
         ->  Gather  (cost=18260.73..18260.94 rows=2 width=32) (actual time=886.071..893.453 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17260.73..17260.74 rows=1 width=32) (actual time=882.539..882.540 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17260.37 rows=47 width=12) (actual time=30.519..882.435 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.610..29.285 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.09 rows=1 width=21) (actual time=4.508..5.047 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.871 ms
 Execution Time: 894.160 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18260.95..18260.96 rows=1 width=32) (actual time=29.245..33.058 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18260.95..18260.96 rows=1 width=32) (actual time=29.245..33.056 rows=1 loops=1)
         ->  Gather  (cost=18260.73..18260.94 rows=2 width=32) (actual time=29.105..33.040 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17260.73..17260.74 rows=1 width=32) (actual time=26.485..26.486 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17260.37 rows=47 width=12) (actual time=0.426..26.448 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.120..16.982 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.09 rows=1 width=21) (actual time=0.049..0.055 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.907 ms
 Execution Time: 33.101 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277382.37..277382.38 rows=1 width=51) (actual time=3405.578..3405.653 rows=1 loops=1)
   ->  Sort  (cost=277382.37..277382.38 rows=1 width=51) (actual time=3405.577..3405.652 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243476.89..277382.36 rows=1 width=51) (actual time=3229.749..3405.456 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.557..3.828 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.174..0.177 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.375..2.905 rows=10000 loops=1)
               ->  Materialize  (cost=243476.89..276927.05 rows=1 width=8) (actual time=6.068..7.523 rows=4371 loops=438)
                     ->  Merge Join  (cost=243476.89..276927.05 rows=1 width=8) (actual time=2657.716..3226.206 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=242476.02..258984.95 rows=486702 width=40) (actual time=2648.534..3166.304 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=242476.02..244778.12 rows=920840 width=13) (actual time=2648.476..2745.884 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14764.04..141136.64 rows=920840 width=13) (actual time=126.762..2244.689 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14533.83 rows=920840 width=0) (actual time=110.160..110.160 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11431.60 rows=8080 width=16) (actual time=8.833..27.595 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11411.40 rows=8080 width=16) (actual time=8.829..25.739 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.75 rows=3367 width=16) (actual time=0.519..212.337 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.276..33.196 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.228..0.244 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 18.149 ms
 Execution Time: 3408.666 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277382.37..277382.38 rows=1 width=51) (actual time=1427.671..1427.750 rows=1 loops=1)
   ->  Sort  (cost=277382.37..277382.38 rows=1 width=51) (actual time=1427.669..1427.748 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243476.89..277382.36 rows=1 width=51) (actual time=1253.250..1427.584 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.016..1.739 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.674 rows=10000 loops=1)
               ->  Materialize  (cost=243476.89..276927.05 rows=1 width=8) (actual time=1.641..3.012 rows=4371 loops=438)
                     ->  Merge Join  (cost=243476.89..276927.05 rows=1 width=8) (actual time=718.584..1250.452 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=242476.02..258984.95 rows=486702 width=40) (actual time=714.954..1212.164 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=242476.02..244778.12 rows=920840 width=13) (actual time=714.940..808.299 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14764.04..141136.64 rows=920840 width=13) (actual time=92.643..342.644 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14533.83 rows=920840 width=0) (actual time=76.505..76.505 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11431.60 rows=8080 width=16) (actual time=3.278..6.979 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11411.40 rows=8080 width=16) (actual time=3.275..5.237 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.75 rows=3367 width=16) (actual time=0.068..15.549 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.044..12.272 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.004 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.431 ms
 Execution Time: 1430.597 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194174.30..194174.30 rows=1 width=34) (actual time=1490.098..1490.211 rows=100 loops=1)
   ->  Sort  (cost=194174.30..194174.30 rows=1 width=34) (actual time=1490.097..1490.204 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194174.27..194174.29 rows=1 width=34) (actual time=1489.020..1489.783 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194174.27..194174.27 rows=1 width=26) (actual time=1489.012..1489.272 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..194174.26 rows=1 width=26) (actual time=10.049..1474.730 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..194170.86 rows=1 width=38) (actual time=9.655..1388.888 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..194167.55 rows=1 width=34) (actual time=8.507..12.710 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..193167.45 rows=1 width=34) (actual time=2.749..636.451 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133626.83 rows=19986 width=34) (actual time=1.698..460.960 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.82 rows=500155 width=8) (actual time=0.101..394.185 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.500..1.501 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.348..1.406 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.126..0.128 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.218..1.223 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.146..0.146 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.096..0.096 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.012 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 16.481 ms
 Execution Time: 1491.218 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194174.30..194174.30 rows=1 width=34) (actual time=507.924..508.026 rows=100 loops=1)
   ->  Sort  (cost=194174.30..194174.30 rows=1 width=34) (actual time=507.923..508.019 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194174.27..194174.29 rows=1 width=34) (actual time=506.896..507.612 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194174.27..194174.27 rows=1 width=26) (actual time=506.884..507.133 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..194174.26 rows=1 width=26) (actual time=1.403..493.457 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..194170.86 rows=1 width=38) (actual time=1.363..471.118 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..194167.55 rows=1 width=34) (actual time=1.355..426.188 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..193167.45 rows=1 width=34) (actual time=0.711..470.227 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133626.83 rows=19986 width=34) (actual time=0.561..349.595 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.82 rows=500155 width=8) (actual time=0.027..276.838 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.447..0.449 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.068..0.363 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.053..0.297 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.031..0.031 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.706 ms
 Execution Time: 508.132 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12912.13..12912.26 rows=1 width=72) (actual time=108.017..110.400 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=47.044..47.114 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=46.910..47.094 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=40.281..40.282 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1992 width=6) (actual time=0.111..38.979 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6669.29..6768.61 rows=745 width=72) (actual time=108.016..110.328 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6669.29..6749.38 rows=620 width=72) (actual time=107.935..110.319 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5669.26..5677.79 rows=310 width=72) (actual time=58.413..58.583 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5669.26..5670.04 rows=310 width=38) (actual time=58.340..58.383 rows=1121 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 197kB
                           Worker 0:  Sort Method: quicksort  Memory: 194kB
                           Worker 1:  Sort Method: quicksort  Memory: 198kB
                           ->  Nested Loop Anti Join  (cost=0.43..5656.44 rows=310 width=38) (actual time=0.043..57.477 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.014..21.429 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.005..0.005 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 11.580 ms
 Execution Time: 111.039 ms
(32 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12912.13..12912.26 rows=1 width=72) (actual time=68.870..71.109 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=30.017..30.092 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=29.902..30.075 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=27.663..27.664 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1992 width=6) (actual time=0.015..26.479 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6669.29..6768.61 rows=745 width=72) (actual time=68.869..71.032 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6669.29..6749.38 rows=620 width=72) (actual time=68.791..71.024 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5669.26..5677.79 rows=310 width=72) (actual time=36.218..36.439 rows=5 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5669.26..5670.04 rows=310 width=38) (actual time=36.145..36.197 rows=1370 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 207kB
                           Worker 0:  Sort Method: quicksort  Memory: 142kB
                           Worker 1:  Sort Method: quicksort  Memory: 193kB
                           ->  Nested Loop Anti Join  (cost=0.43..5656.44 rows=310 width=38) (actual time=0.043..35.433 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.014..19.682 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.628 ms
 Execution Time: 71.165 ms
(32 rows)

