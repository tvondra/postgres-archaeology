query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184180.52..184181.16 rows=1 width=236) (actual time=1793.548..1796.511 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184180.52..184184.34 rows=6 width=236) (actual time=1793.547..1796.510 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184180.52..184183.40 rows=24 width=236) (actual time=1793.527..1796.491 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183180.46..183180.48 rows=6 width=236) (actual time=1782.446..1782.447 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183180.25..183180.39 rows=6 width=236) (actual time=1782.392..1782.398 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.68 rows=1481902 width=25) (actual time=0.125..443.720 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 12.644 ms
 Execution Time: 1797.231 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184180.52..184181.16 rows=1 width=236) (actual time=1631.738..1631.813 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184180.52..184184.34 rows=6 width=236) (actual time=1631.737..1631.811 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184180.52..184183.40 rows=24 width=236) (actual time=1631.717..1631.794 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183180.46..183180.48 rows=6 width=236) (actual time=1625.640..1625.641 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183180.25..183180.39 rows=6 width=236) (actual time=1625.592..1625.598 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.68 rows=1481902 width=25) (actual time=0.031..251.901 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.940 ms
 Execution Time: 1631.882 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46929.50..46929.50 rows=1 width=192) (actual time=383.223..383.312 rows=0 loops=1)
   ->  Sort  (cost=46929.50..46929.50 rows=1 width=192) (actual time=383.222..383.310 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=33935.61..46929.49 rows=1 width=192) (actual time=383.200..383.288 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6430.90 rows=819 width=30) (actual time=1.776..2.064 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=341 width=30) (actual time=0.764..34.225 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30539.45..30539.45 rows=159744 width=172) (actual time=328.485..328.488 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30539.45 rows=159744 width=172) (actual time=6.742..270.600 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.501..158.300 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.236..6.238 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.622..5.502 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.286..4.011 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.332..0.334 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.327..0.333 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.165..0.167 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.156..0.157 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.152..0.153 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.065..0.065 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.056..0.063 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.046..0.061 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.045..0.055 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.042..0.043 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 18.887 ms
 Execution Time: 383.482 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46929.50..46929.50 rows=1 width=192) (actual time=240.055..240.144 rows=0 loops=1)
   ->  Sort  (cost=46929.50..46929.50 rows=1 width=192) (actual time=240.054..240.142 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=33935.61..46929.49 rows=1 width=192) (actual time=240.032..240.121 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6430.90 rows=819 width=30) (actual time=0.273..0.488 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=341 width=30) (actual time=0.035..13.129 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30539.45..30539.45 rows=159744 width=172) (actual time=224.608..224.612 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30539.45 rows=159744 width=172) (actual time=2.869..169.610 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.006..51.843 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.858..2.861 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.034..2.177 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.003..0.722 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.028..0.030 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.016..0.029 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.007 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.018..0.018 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.013..0.016 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.006..0.015 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.720 ms
 Execution Time: 240.289 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234477.91..234477.93 rows=10 width=44) (actual time=1158.925..1161.885 rows=10 loops=1)
   ->  Sort  (cost=234477.91..235282.89 rows=321995 width=44) (actual time=1158.924..1161.883 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180110.89..227519.71 rows=321995 width=44) (actual time=1137.947..1159.741 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180110.89..218664.85 rows=321995 width=24) (actual time=1137.935..1145.110 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179110.83..179312.08 rows=80499 width=24) (actual time=1125.753..1126.013 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 456kB
                           Worker 0:  Sort Method: quicksort  Memory: 484kB
                           Worker 1:  Sort Method: quicksort  Memory: 460kB
                           Worker 2:  Sort Method: quicksort  Memory: 457kB
                           Worker 3:  Sort Method: quicksort  Memory: 479kB
                           ->  Parallel Hash Join  (cost=37935.79..172551.50 rows=80499 width=24) (actual time=216.788..1124.039 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.68 rows=811296 width=16) (actual time=0.635..842.141 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37335.54..37335.54 rows=48020 width=12) (actual time=214.072..214.074 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4537.41..37335.54 rows=48020 width=12) (actual time=21.714..205.573 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=235702 width=16) (actual time=0.432..156.201 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12733 width=4) (actual time=21.172..21.173 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12733 width=4) (actual time=0.826..19.525 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 16.141 ms
 Execution Time: 1162.241 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234477.91..234477.93 rows=10 width=44) (actual time=419.728..421.111 rows=10 loops=1)
   ->  Sort  (cost=234477.91..235282.89 rows=321995 width=44) (actual time=419.727..421.109 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180110.89..227519.71 rows=321995 width=44) (actual time=398.547..418.968 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180110.89..218664.85 rows=321995 width=24) (actual time=398.533..404.195 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179110.83..179312.08 rows=80499 width=24) (actual time=393.808..394.081 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 442kB
                           Worker 0:  Sort Method: quicksort  Memory: 484kB
                           Worker 1:  Sort Method: quicksort  Memory: 424kB
                           Worker 2:  Sort Method: quicksort  Memory: 516kB
                           Worker 3:  Sort Method: quicksort  Memory: 469kB
                           ->  Parallel Hash Join  (cost=37935.79..172551.50 rows=80499 width=24) (actual time=91.554..392.478 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.68 rows=811296 width=16) (actual time=0.052..225.759 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37335.54..37335.54 rows=48020 width=12) (actual time=90.390..90.392 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4537.41..37335.54 rows=48020 width=12) (actual time=9.205..82.252 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=235702 width=16) (actual time=0.014..46.858 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12733 width=4) (actual time=7.977..7.978 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1568kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12733 width=4) (actual time=0.012..6.003 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.105 ms
 Execution Time: 421.174 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29376.95..62956.14 rows=1 width=24) (actual time=3214.808..3219.767 rows=1 loops=1)
   ->  GroupAggregate  (cost=29376.95..197272.93 rows=5 width=24) (actual time=3214.807..3219.765 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29376.95..196987.12 rows=57151 width=16) (actual time=668.979..3211.347 rows=10479 loops=1)
               ->  Gather Merge  (cost=29376.51..36137.85 rows=57151 width=20) (actual time=668.249..685.265 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28376.47..28422.56 rows=18436 width=20) (actual time=660.107..660.564 rows=3811 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 947kB
                           Worker 0:  Sort Method: quicksort  Memory: 926kB
                           Worker 1:  Sort Method: quicksort  Memory: 927kB
                           Worker 2:  Sort Method: quicksort  Memory: 924kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=662.73..27070.26 rows=18436 width=20) (actual time=4.672..654.000 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5985
                                 Worker 0:  Heap Blocks: exact=5778
                                 Worker 1:  Heap Blocks: exact=5752
                                 Worker 2:  Heap Blocks: exact=5671
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..648.44 rows=57151 width=0) (actual time=7.059..7.059 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.220..0.220 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 15.344 ms
 Execution Time: 3220.343 ms
(27 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29376.95..62956.14 rows=1 width=24) (actual time=78.591..83.990 rows=1 loops=1)
   ->  GroupAggregate  (cost=29376.95..197272.93 rows=5 width=24) (actual time=78.590..83.988 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29376.95..196987.12 rows=57151 width=16) (actual time=33.756..82.631 rows=10479 loops=1)
               ->  Gather Merge  (cost=29376.51..36137.85 rows=57151 width=20) (actual time=33.717..42.099 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28376.47..28422.56 rows=18436 width=20) (actual time=30.564..30.816 rows=3787 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 917kB
                           Worker 0:  Sort Method: quicksort  Memory: 947kB
                           Worker 1:  Sort Method: quicksort  Memory: 912kB
                           Worker 2:  Sort Method: quicksort  Memory: 949kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=662.73..27070.26 rows=18436 width=20) (actual time=5.999..27.148 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5618
                                 Worker 0:  Heap Blocks: exact=5922
                                 Worker 1:  Heap Blocks: exact=5602
                                 Worker 2:  Heap Blocks: exact=6044
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..648.44 rows=57151 width=0) (actual time=5.388..5.388 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.831 ms
 Execution Time: 84.046 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84378.55..84378.56 rows=1 width=58) (actual time=2427.866..2437.528 rows=1 loops=1)
   ->  Sort  (cost=84378.55..84378.62 rows=25 width=58) (actual time=2427.865..2437.526 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84338.60..84378.43 rows=25 width=58) (actual time=2427.372..2437.510 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84338.60..84377.53 rows=78 width=58) (actual time=2427.188..2437.492 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83338.56..83368.33 rows=25 width=58) (actual time=2417.478..2418.100 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83338.56..83344.45 rows=2356 width=38) (actual time=2417.323..2417.411 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 155kB
                                 Worker 0:  Sort Method: quicksort  Memory: 151kB
                                 Worker 1:  Sort Method: quicksort  Memory: 151kB
                                 Worker 2:  Sort Method: quicksort  Memory: 149kB
                                 ->  Hash Join  (cost=7857.53..83206.60 rows=2356 width=38) (actual time=56.700..2415.557 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7384.53..82424.43 rows=58890 width=50) (actual time=51.688..2398.554 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7384.10..34956.68 rows=14723 width=38) (actual time=51.131..544.878 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2643.97..29879.16 rows=73613 width=8) (actual time=20.026..486.832 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6665
                                                         Worker 0:  Heap Blocks: exact=6565
                                                         Worker 1:  Heap Blocks: exact=6451
                                                         Worker 2:  Heap Blocks: exact=6446
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2586.92 rows=228199 width=0) (actual time=15.960..15.961 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=30.939..30.941 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.264..28.640 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.127..24.070 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.132..0.133 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.125..0.131 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.063..0.065 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.053..0.054 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.154..0.162 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.593..3.594 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.103..2.241 rows=10000 loops=4)
 Planning Time: 22.018 ms
 Execution Time: 2437.613 ms
(52 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84378.55..84378.56 rows=1 width=58) (actual time=144.602..158.111 rows=1 loops=1)
   ->  Sort  (cost=84378.55..84378.62 rows=25 width=58) (actual time=144.601..158.109 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84338.60..84378.43 rows=25 width=58) (actual time=144.101..158.098 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84338.60..84377.53 rows=78 width=58) (actual time=143.940..158.081 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83338.56..83368.33 rows=25 width=58) (actual time=139.769..140.380 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83338.56..83344.45 rows=2356 width=38) (actual time=139.613..139.697 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 154kB
                                 Worker 0:  Sort Method: quicksort  Memory: 152kB
                                 Worker 1:  Sort Method: quicksort  Memory: 151kB
                                 Worker 2:  Sort Method: quicksort  Memory: 149kB
                                 ->  Hash Join  (cost=7857.53..83206.60 rows=2356 width=38) (actual time=30.331..138.747 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7384.53..82424.43 rows=58890 width=50) (actual time=27.508..128.256 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7384.10..34956.68 rows=14723 width=38) (actual time=27.483..67.501 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2643.97..29879.16 rows=73613 width=8) (actual time=16.537..42.885 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6523
                                                         Worker 0:  Heap Blocks: exact=6572
                                                         Worker 1:  Heap Blocks: exact=6501
                                                         Worker 2:  Heap Blocks: exact=6531
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2586.92 rows=228199 width=0) (actual time=12.822..12.822 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=10.831..10.834 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.048..8.977 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.598 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.035 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.028..0.033 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.015..0.016 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.774..2.775 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.017..1.475 rows=10000 loops=4)
 Planning Time: 4.238 ms
 Execution Time: 158.196 ms
(52 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107151.61..107151.62 rows=1 width=32) (actual time=1753.135..1759.890 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107151.61..107151.62 rows=1 width=32) (actual time=1753.133..1759.888 rows=1 loops=1)
         ->  Gather  (cost=107151.18..107151.59 rows=4 width=32) (actual time=1752.657..1759.873 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106151.18..106151.19 rows=1 width=32) (actual time=1743.767..1743.768 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21194.96..106003.29 rows=29577 width=12) (actual time=134.399..1726.528 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13258
                           Worker 0:  Heap Blocks: exact=13284
                           Worker 1:  Heap Blocks: exact=13409
                           Worker 2:  Heap Blocks: exact=13097
                           Worker 3:  Heap Blocks: exact=13095
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21165.38 rows=118309 width=0) (actual time=130.104..130.104 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.195 ms
 Execution Time: 1761.309 ms
(17 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107151.61..107151.62 rows=1 width=32) (actual time=187.855..197.487 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107151.61..107151.62 rows=1 width=32) (actual time=187.853..197.485 rows=1 loops=1)
         ->  Gather  (cost=107151.18..107151.59 rows=4 width=32) (actual time=187.506..197.473 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106151.18..106151.19 rows=1 width=32) (actual time=183.966..183.967 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21194.96..106003.29 rows=29577 width=12) (actual time=104.848..177.047 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12179
                           Worker 0:  Heap Blocks: exact=18346
                           Worker 1:  Heap Blocks: exact=9959
                           Worker 2:  Heap Blocks: exact=13385
                           Worker 3:  Heap Blocks: exact=12274
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21165.38 rows=118309 width=0) (actual time=96.614..96.614 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.476 ms
 Execution Time: 197.537 ms
(17 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141481.64..141640.03 rows=1 width=116) (actual time=3137.647..3141.086 rows=1 loops=1)
   ->  GroupAggregate  (cost=141481.64..1113803.42 rows=6139 width=116) (actual time=3137.646..3141.085 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141481.64..1113619.25 rows=6139 width=96) (actual time=902.472..3138.876 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32748
               ->  Nested Loop  (cost=141481.22..637240.75 rows=153473 width=76) (actual time=885.372..2585.316 rows=34107 loops=1)
                     ->  Gather Merge  (cost=141480.79..159860.42 rows=153503 width=76) (actual time=883.988..921.282 rows=34107 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140480.74..140576.68 rows=38376 width=76) (actual time=870.088..870.906 rows=7214 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3708kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3697kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3787kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3704kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3645kB
                                 ->  Hash Join  (cost=381.77..137558.80 rows=38376 width=76) (actual time=5.057..846.367 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.42 rows=461068 width=24) (actual time=1.861..798.745 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.174..3.177 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.393..3.040 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.096..1.520 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.292..0.294 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.069..0.077 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.054..0.056 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.009 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.048..0.048 rows=1 loops=34107)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=34107)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 20.528 ms
 Execution Time: 3141.396 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141481.64..141640.03 rows=1 width=116) (actual time=497.004..498.334 rows=1 loops=1)
   ->  GroupAggregate  (cost=141481.64..1113803.42 rows=6139 width=116) (actual time=497.003..498.331 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141481.64..1113619.25 rows=6139 width=96) (actual time=316.736..497.300 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32683
               ->  Nested Loop  (cost=141481.22..637240.75 rows=153473 width=76) (actual time=316.335..416.156 rows=34042 loops=1)
                     ->  Gather Merge  (cost=141480.79..159860.42 rows=153503 width=76) (actual time=316.289..334.520 rows=34042 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140480.74..140576.68 rows=38376 width=76) (actual time=307.867..308.473 rows=7209 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3083kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5075kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4914kB
                                 Worker 2:  Sort Method: quicksort  Memory: 2897kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4875kB
                                 ->  Hash Join  (cost=381.77..137558.80 rows=38376 width=76) (actual time=3.244..283.233 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.42 rows=461068 width=24) (actual time=0.052..231.015 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.181..3.183 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.235..3.042 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.757 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.223..0.224 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.022..0.030 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.012..0.014 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34042)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34042)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.998 ms
 Execution Time: 498.420 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41933.47..42308.57 rows=1 width=64) (actual time=4718.176..4723.669 rows=1 loops=1)
   ->  GroupAggregate  (cost=41933.47..936922.45 rows=2386 width=64) (actual time=4718.175..4723.666 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41933.47..936827.01 rows=2386 width=70) (actual time=387.533..4721.234 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14804
               ->  Nested Loop  (cost=41933.47..935957.87 rows=2386 width=20) (actual time=387.502..4716.887 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41933.19..928956.54 rows=2386 width=20) (actual time=387.252..4678.114 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41932.76..341857.80 rows=358299 width=24) (actual time=243.906..3627.450 rows=182896 loops=1)
                                 ->  Gather Merge  (cost=41932.33..52529.63 rows=89575 width=8) (actual time=243.104..281.137 rows=45638 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40932.29..41004.52 rows=28895 width=8) (actual time=233.574..234.670 rows=12476 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1449kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1505kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1485kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1485kB
                                             ->  Parallel Hash Join  (cost=4740.13..38791.38 rows=28895 width=8) (actual time=25.725..227.808 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=144475 width=12) (actual time=0.432..175.219 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=25.157..25.160 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.313..23.394 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.147..18.943 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.161..0.163 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.155..0.161 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.079..0.081 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.071..0.072 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.068..0.069 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.068..0.072 rows=4 loops=45638)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=182896)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62920  Misses: 119976  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=119976)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.031..0.031 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     Storage: Memory  Maximum Storage: 18kB
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.021 rows=25 loops=1)
 Planning Time: 24.733 ms
 Execution Time: 4723.998 ms
(55 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41933.47..42308.57 rows=1 width=64) (actual time=647.880..652.103 rows=1 loops=1)
   ->  GroupAggregate  (cost=41933.47..936922.45 rows=2386 width=64) (actual time=647.879..652.101 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41933.47..936827.01 rows=2386 width=70) (actual time=94.535..651.014 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14789
               ->  Nested Loop  (cost=41933.47..935957.87 rows=2386 width=20) (actual time=94.515..648.563 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41933.19..928956.54 rows=2386 width=20) (actual time=94.506..644.956 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41932.76..341857.80 rows=358299 width=24) (actual time=93.254..285.832 rows=182937 loops=1)
                                 ->  Gather Merge  (cost=41932.33..52529.63 rows=89575 width=8) (actual time=93.211..113.485 rows=45647 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40932.29..41004.52 rows=28895 width=8) (actual time=89.696..90.446 rows=12446 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1472kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1487kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1483kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1482kB
                                             ->  Parallel Hash Join  (cost=4740.13..38791.38 rows=28895 width=8) (actual time=10.732..84.170 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=144475 width=12) (actual time=0.012..52.105 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.572..10.575 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.045..9.065 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.685 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.034..0.036 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.029..0.034 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.012 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45647)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182937)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62938  Misses: 119999  Evictions: 0  Overflows: 0  Memory Usage: 7998kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119999)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     Storage: Memory  Maximum Storage: 18kB
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=1)
 Planning Time: 4.764 ms
 Execution Time: 652.418 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30911.67..31961.87 rows=1 width=90) (actual time=4805.146..4810.387 rows=1 loops=1)
   ->  GroupAggregate  (cost=30911.67..184241.15 rows=146 width=90) (actual time=4805.145..4810.386 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=30911.67..184236.40 rows=146 width=81) (actual time=4804.366..4809.656 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=24523.23..184232.22 rows=146 width=81) (actual time=254.975..4785.001 rows=13629 loops=1)
                     ->  Nested Loop  (cost=24522.81..183772.49 rows=146 width=53) (actual time=254.080..2599.013 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=24522.37..30160.17 rows=48407 width=48) (actual time=252.768..260.329 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=23522.35..23572.77 rows=20170 width=48) (actual time=245.389..245.508 rows=1029 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1434kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1408kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1371kB
                                       ->  Hash Join  (cost=449.99..22080.20 rows=20170 width=48) (actual time=5.424..236.167 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..22016.72 rows=20170 width=26) (actual time=5.334..233.214 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..21515.66 rows=20202 width=18) (actual time=1.504..223.814 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.116..43.882 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.047..0.049 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.806..3.807 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.118..2.440 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.086..0.087 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.079..0.081 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.293..1.283 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.157..0.157 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 28.533 ms
 Execution Time: 4810.485 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30911.67..31961.87 rows=1 width=90) (actual time=131.552..135.157 rows=1 loops=1)
   ->  GroupAggregate  (cost=30911.67..184241.15 rows=146 width=90) (actual time=131.551..135.155 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=30911.67..184236.40 rows=146 width=81) (actual time=130.795..134.446 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=24523.23..184232.22 rows=146 width=81) (actual time=50.963..127.011 rows=13629 loops=1)
                     ->  Nested Loop  (cost=24522.81..183772.49 rows=146 width=53) (actual time=50.949..76.916 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=24522.37..30160.17 rows=48407 width=48) (actual time=50.915..55.324 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=23522.35..23572.77 rows=20170 width=48) (actual time=48.059..48.148 rows=1102 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1473kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1374kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1367kB
                                       ->  Hash Join  (cost=449.99..22080.20 rows=20170 width=48) (actual time=2.849..40.041 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..22016.72 rows=20170 width=26) (actual time=2.820..37.574 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..21515.66 rows=20202 width=18) (actual time=0.039..30.694 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.015..12.994 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.765..2.766 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.440 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.025 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.019 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.005..0.010 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.361 ms
 Execution Time: 135.244 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103583.45..103583.50 rows=20 width=202) (actual time=2200.997..2206.270 rows=20 loops=1)
   ->  Sort  (cost=103583.45..103729.52 rows=58429 width=202) (actual time=2200.996..2206.267 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=101298.31..102028.67 rows=58429 width=202) (actual time=2170.024..2194.807 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6692.58..100567.95 rows=58429 width=182) (actual time=60.707..2075.358 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5692.58..93725.05 rows=18848 width=182) (actual time=50.803..2117.293 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5691.01..93665.62 rows=18848 width=160) (actual time=50.722..2107.440 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=687.76..88612.89 rows=18848 width=16) (actual time=14.205..2049.627 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=687.33..27105.07 rows=19116 width=8) (actual time=13.015..395.941 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5082
                                             Worker 0:  Heap Blocks: exact=6178
                                             Worker 1:  Heap Blocks: exact=5967
                                             Worker 2:  Heap Blocks: exact=6150
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..672.52 rows=59259 width=0) (actual time=9.250..9.250 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.111..0.115 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.107..36.107 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29280kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.121..15.776 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.077..0.077 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.067..0.069 rows=25 loops=4)
 Planning Time: 19.441 ms
 Execution Time: 2206.908 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103583.45..103583.50 rows=20 width=202) (actual time=217.672..221.770 rows=20 loops=1)
   ->  Sort  (cost=103583.45..103729.52 rows=58429 width=202) (actual time=217.670..221.767 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=101298.31..102028.67 rows=58429 width=202) (actual time=186.182..210.196 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6692.58..100567.95 rows=58429 width=182) (actual time=41.945..113.535 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5692.58..93725.05 rows=18848 width=182) (actual time=38.331..151.201 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5691.01..93665.62 rows=18848 width=160) (actual time=38.303..144.799 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=687.76..88612.89 rows=18848 width=16) (actual time=10.621..103.594 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=687.33..27105.07 rows=19116 width=8) (actual time=10.584..27.817 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2620
                                             Worker 0:  Heap Blocks: exact=6892
                                             Worker 1:  Heap Blocks: exact=6923
                                             Worker 2:  Heap Blocks: exact=6942
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..672.52 rows=59259 width=0) (actual time=7.312..7.312 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.292..27.293 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.577 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.024 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=4)
 Planning Time: 1.520 ms
 Execution Time: 222.145 ms
(35 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15990.66..15990.66 rows=1 width=36) (actual time=726.070..726.075 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.14..7689.16 rows=1 width=32) (actual time=26.655..26.657 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.52 rows=31949 width=10) (actual time=0.056..19.985 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.049..0.298 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.038..0.245 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.50..8328.12 rows=10650 width=36) (actual time=726.069..726.070 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.01..8248.25 rows=10650 width=36) (actual time=715.782..725.923 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.52 rows=31949 width=14) (actual time=1.171..659.362 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.731..4.516 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.221..0.224 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.506..4.193 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.293..0.293 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.046..1.576 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.091 ms
 Execution Time: 726.465 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15990.66..15990.66 rows=1 width=36) (actual time=83.930..83.935 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7689.14..7689.16 rows=1 width=32) (actual time=26.823..26.825 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.52 rows=31949 width=10) (actual time=0.055..19.996 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.299 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.246 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.50..8328.12 rows=10650 width=36) (actual time=83.929..83.931 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.01..8248.25 rows=10650 width=36) (actual time=73.594..83.786 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.52 rows=31949 width=14) (actual time=0.071..29.860 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.060..0.463 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.043..0.397 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.062 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.423 ms
 Execution Time: 84.278 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147763.96..160755.42 rows=1 width=27) (actual time=1751.043..1754.431 rows=1 loops=1)
   ->  GroupAggregate  (cost=147763.96..238704.18 rows=7 width=27) (actual time=1751.042..1754.429 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147763.96..238214.39 rows=27984 width=27) (actual time=834.662..1745.026 rows=15492 loops=1)
               ->  Gather Merge  (cost=147763.53..151114.78 rows=27989 width=15) (actual time=834.219..845.300 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146763.47..146780.97 rows=6997 width=15) (actual time=821.449..821.769 rows=4213 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 384kB
                           Worker 0:  Sort Method: quicksort  Memory: 377kB
                           Worker 1:  Sort Method: quicksort  Memory: 391kB
                           Worker 2:  Sort Method: quicksort  Memory: 390kB
                           Worker 3:  Sort Method: quicksort  Memory: 388kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146316.63 rows=6997 width=15) (actual time=0.445..819.777 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.057..0.057 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 16.497 ms
 Execution Time: 1754.850 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147763.96..160755.42 rows=1 width=27) (actual time=388.495..389.752 rows=1 loops=1)
   ->  GroupAggregate  (cost=147763.96..238704.18 rows=7 width=27) (actual time=388.494..389.750 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147763.96..238214.39 rows=27984 width=27) (actual time=340.027..385.802 rows=15492 loops=1)
               ->  Gather Merge  (cost=147763.53..151114.78 rows=27989 width=15) (actual time=339.990..344.873 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146763.47..146780.97 rows=6997 width=15) (actual time=335.277..335.480 rows=4276 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 376kB
                           Worker 0:  Sort Method: quicksort  Memory: 425kB
                           Worker 1:  Sort Method: quicksort  Memory: 327kB
                           Worker 2:  Sort Method: quicksort  Memory: 381kB
                           Worker 3:  Sort Method: quicksort  Memory: 421kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146316.63 rows=6997 width=15) (actual time=0.108..333.203 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.870 ms
 Execution Time: 389.803 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1391.784..1391.787 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1391.782..1391.785 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1391.757..1391.764 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1353.068..1375.205 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=33.842..1003.521 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.791..571.597 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.738..32.739 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.016..16.682 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.698 ms
 Execution Time: 1392.873 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1254.294..1254.297 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1254.292..1254.295 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1254.266..1254.274 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1215.266..1237.679 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=30.015..877.092 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.018..469.046 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.596..29.597 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.495 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.739 ms
 Execution Time: 1255.438 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73236.05..73236.06 rows=1 width=32) (actual time=892.163..898.995 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=73236.05..73236.06 rows=1 width=32) (actual time=892.161..898.993 rows=1 loops=1)
         ->  Gather  (cost=73235.59..73236.00 rows=4 width=64) (actual time=891.258..898.979 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=72235.59..72235.60 rows=1 width=64) (actual time=880.250..880.252 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7174.86..71908.23 rows=18706 width=33) (actual time=55.141..866.077 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1200.87..65885.13 rows=18706 width=16) (actual time=20.477..815.562 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8314
                                 Worker 0:  Heap Blocks: exact=8322
                                 Worker 1:  Heap Blocks: exact=8468
                                 Worker 2:  Heap Blocks: exact=8133
                                 Worker 3:  Heap Blocks: exact=8444
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1182.16 rows=74823 width=0) (actual time=13.498..13.499 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=34.247..34.247 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.079..16.902 rows=40000 loops=5)
 Planning Time: 14.950 ms
 Execution Time: 899.052 ms
(22 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73236.05..73236.06 rows=1 width=32) (actual time=106.252..116.500 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=73236.05..73236.06 rows=1 width=32) (actual time=106.251..116.498 rows=1 loops=1)
         ->  Gather  (cost=73235.59..73236.00 rows=4 width=64) (actual time=106.236..116.486 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=72235.59..72235.60 rows=1 width=64) (actual time=100.532..100.535 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7174.86..71908.23 rows=18706 width=33) (actual time=40.310..90.998 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1200.87..65885.13 rows=18706 width=16) (actual time=14.567..55.705 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=6140
                                 Worker 0:  Heap Blocks: exact=9395
                                 Worker 1:  Heap Blocks: exact=8643
                                 Worker 2:  Heap Blocks: exact=7508
                                 Worker 3:  Heap Blocks: exact=9995
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1182.16 rows=74823 width=0) (actual time=8.231..8.231 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=25.363..25.363 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.010..6.295 rows=40000 loops=5)
 Planning Time: 0.766 ms
 Execution Time: 116.537 ms
(22 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240070.03..240177.19 rows=1 width=103) (actual time=1930.363..1937.451 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=121347.44..121347.45 rows=1 width=32) (actual time=230.684..230.686 rows=1 loops=1)
           ->  HashAggregate  (cost=121097.74..121222.59 rows=9988 width=36) (actual time=227.390..230.098 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3562.17..118877.02 rows=222072 width=16) (actual time=27.615..121.344 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3506.65 rows=222072 width=0) (actual time=17.084..17.084 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118722.58..124080.52 rows=50 width=103) (actual time=1930.362..1937.447 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118722.30..123955.40 rows=50 width=36) (actual time=1929.758..1936.841 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118722.30..123505.94 rows=39952 width=36) (actual time=1676.711..1691.215 rows=41784 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117722.24..117747.21 rows=9988 width=36) (actual time=1665.502..1666.276 rows=8786 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1236kB
                           Worker 0:  Sort Method: quicksort  Memory: 1235kB
                           Worker 1:  Sort Method: quicksort  Memory: 1234kB
                           Worker 2:  Sort Method: quicksort  Memory: 1233kB
                           Worker 3:  Sort Method: quicksort  Memory: 1235kB
                           ->  Partial HashAggregate  (cost=116933.89..117058.74 rows=9988 width=36) (actual time=1658.464..1663.427 rows=9891 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3562.17..116378.71 rows=55518 width=16) (actual time=40.164..1607.130 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13294
                                       Worker 0:  Heap Blocks: exact=13520
                                       Worker 1:  Heap Blocks: exact=13000
                                       Worker 2:  Heap Blocks: exact=13467
                                       Worker 3:  Heap Blocks: exact=13547
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3506.65 rows=222072 width=0) (actual time=35.211..35.211 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.598..0.599 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.515 ms
 Execution Time: 1938.445 ms
(46 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240070.03..240177.19 rows=1 width=103) (actual time=394.954..404.157 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=121347.44..121347.45 rows=1 width=32) (actual time=213.965..213.966 rows=1 loops=1)
           ->  HashAggregate  (cost=121097.74..121222.59 rows=9988 width=36) (actual time=210.711..213.379 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3562.17..118877.02 rows=222072 width=16) (actual time=27.810..106.850 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3506.65 rows=222072 width=0) (actual time=17.246..17.246 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118722.58..124080.52 rows=50 width=103) (actual time=394.953..404.154 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118722.30..123955.40 rows=50 width=36) (actual time=394.926..404.126 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118722.30..123505.94 rows=39952 width=36) (actual time=158.760..175.309 rows=41775 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117722.24..117747.21 rows=9988 width=36) (actual time=150.582..151.318 rows=8822 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1236kB
                           Worker 0:  Sort Method: quicksort  Memory: 1232kB
                           Worker 1:  Sort Method: quicksort  Memory: 1238kB
                           Worker 2:  Sort Method: quicksort  Memory: 1234kB
                           Worker 3:  Sort Method: quicksort  Memory: 1231kB
                           ->  Partial HashAggregate  (cost=116933.89..117058.74 rows=9988 width=36) (actual time=142.646..147.703 rows=9889 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3562.17..116378.71 rows=55518 width=16) (actual time=31.214..108.756 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13758
                                       Worker 0:  Heap Blocks: exact=12780
                                       Worker 1:  Heap Blocks: exact=15052
                                       Worker 2:  Heap Blocks: exact=13384
                                       Worker 3:  Heap Blocks: exact=11854
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3506.65 rows=222072 width=0) (actual time=25.291..25.291 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.023..0.023 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.789 ms
 Execution Time: 404.548 ms
(46 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26601.27..26601.27 rows=1 width=44) (actual time=289.823..290.515 rows=1 loops=1)
   ->  Sort  (cost=26601.27..26641.02 rows=15903 width=44) (actual time=289.822..290.513 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18754.56..26521.75 rows=15903 width=44) (actual time=213.996..287.237 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18754.56..25776.28 rows=58644 width=40) (actual time=213.982..268.941 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17754.50..17791.16 rows=14661 width=40) (actual time=182.087..183.399 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2140kB
                           Worker 0:  Sort Method: quicksort  Memory: 2040kB
                           Worker 1:  Sort Method: quicksort  Memory: 2180kB
                           Worker 2:  Sort Method: quicksort  Memory: 2226kB
                           Worker 3:  Sort Method: quicksort  Memory: 2216kB
                           ->  Parallel Hash Join  (cost=6683.49..16739.99 rows=14661 width=40) (actual time=37.700..104.290 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.877..56.161 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.671..6.152 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12218 width=40) (actual time=30.660..30.661 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12218 width=40) (actual time=0.099..28.439 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.260 ms
 Execution Time: 290.597 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26601.27..26601.27 rows=1 width=44) (actual time=250.332..250.759 rows=1 loops=1)
   ->  Sort  (cost=26601.27..26641.02 rows=15903 width=44) (actual time=250.331..250.757 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18754.56..26521.75 rows=15903 width=44) (actual time=174.922..247.527 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18754.56..25776.28 rows=58644 width=40) (actual time=174.907..229.280 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17754.50..17791.16 rows=14661 width=40) (actual time=150.806..152.104 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2262kB
                           Worker 0:  Sort Method: quicksort  Memory: 2074kB
                           Worker 1:  Sort Method: quicksort  Memory: 1883kB
                           Worker 2:  Sort Method: quicksort  Memory: 2127kB
                           Worker 3:  Sort Method: quicksort  Memory: 2455kB
                           ->  Parallel Hash Join  (cost=6683.49..16739.99 rows=14661 width=40) (actual time=17.964..75.560 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.122..41.510 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.088..2.019 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12218 width=40) (actual time=15.205..15.207 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12218 width=40) (actual time=0.016..13.590 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.283 ms
 Execution Time: 250.825 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217674.27..217674.28 rows=1 width=32) (actual time=4078.098..4081.882 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217674.27..217674.28 rows=1 width=32) (actual time=4078.097..4081.880 rows=1 loops=1)
         ->  Gather  (cost=217674.04..217674.25 rows=2 width=32) (actual time=4072.616..4081.868 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216674.04..216674.05 rows=1 width=32) (actual time=4061.062..4061.065 rows=1 loops=3)
                     ->  Nested Loop  (cost=207700.20..216671.97 rows=827 width=8) (actual time=3996.920..4060.982 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207699.76..213049.00 rows=82 width=40) (actual time=3995.068..4011.745 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=89 width=4) (actual time=0.451..17.037 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205371.54..205371.54 rows=186258 width=36) (actual time=3994.100..3994.101 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202577.67..205371.54 rows=186258 width=36) (actual time=3493.624..3959.287 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172571.78 rows=6001178 width=9) (actual time=0.248..828.350 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.05 rows=11 width=17) (actual time=0.548..0.708 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 12.895 ms
 Execution Time: 4088.659 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217674.27..217674.28 rows=1 width=32) (actual time=3711.937..3715.090 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217674.27..217674.28 rows=1 width=32) (actual time=3711.935..3715.087 rows=1 loops=1)
         ->  Gather  (cost=217674.04..217674.25 rows=2 width=32) (actual time=3705.996..3715.076 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216674.04..216674.05 rows=1 width=32) (actual time=3701.814..3701.817 rows=1 loops=3)
                     ->  Nested Loop  (cost=207700.20..216671.97 rows=827 width=8) (actual time=3691.156..3701.783 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207699.76..213049.00 rows=82 width=40) (actual time=3691.113..3699.916 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=89 width=4) (actual time=0.101..8.864 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205371.54..205371.54 rows=186258 width=36) (actual time=3690.479..3690.480 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202577.67..205371.54 rows=186258 width=36) (actual time=3192.946..3655.778 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172571.78 rows=6001178 width=9) (actual time=0.063..556.288 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.05 rows=11 width=17) (actual time=0.011..0.026 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 0.934 ms
 Execution Time: 3721.797 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794663.98..794664.23 rows=100 width=71) (actual time=4333.985..4333.991 rows=9 loops=1)
   ->  Sort  (cost=794663.98..799664.96 rows=2000393 width=71) (actual time=4333.983..4333.988 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658042.33..718210.40 rows=2000393 width=71) (actual time=4333.242..4333.941 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335206.65..550286.78 rows=2000393 width=44) (actual time=3607.674..4333.163 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172571.78 rows=6001178 width=9) (actual time=0.699..307.701 rows=6001215 loops=1)
                     ->  Hash  (cost=328955.43..328955.43 rows=500098 width=43) (actual time=3412.847..3412.850 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282574.13..328955.43 rows=500098 width=43) (actual time=3102.735..3412.825 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275602.13..320670.64 rows=500098 width=24) (actual time=3041.302..3351.381 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.593..228.913 rows=1500000 loops=1)
                                       ->  Hash  (cost=269350.90..269350.90 rows=500098 width=4) (actual time=2953.137..2953.138 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269350.90 rows=500098 width=4) (actual time=630.709..2953.115 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216840.60 rows=6001178 width=9) (actual time=0.019..1634.140 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=61.095..61.096 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.608..36.330 rows=150000 loops=1)
 Planning Time: 20.166 ms
 Execution Time: 4335.378 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794663.98..794664.23 rows=100 width=71) (actual time=3312.375..3312.381 rows=9 loops=1)
   ->  Sort  (cost=794663.98..799664.96 rows=2000393 width=71) (actual time=3312.374..3312.379 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658042.33..718210.40 rows=2000393 width=71) (actual time=3311.623..3312.331 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335206.65..550286.78 rows=2000393 width=44) (actual time=2587.092..3311.545 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172571.78 rows=6001178 width=9) (actual time=0.019..306.818 rows=6001215 loops=1)
                     ->  Hash  (cost=328955.43..328955.43 rows=500098 width=43) (actual time=2393.487..2393.490 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282574.13..328955.43 rows=500098 width=43) (actual time=2188.095..2393.469 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275602.13..320670.64 rows=500098 width=24) (actual time=2144.640..2350.005 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..84.168 rows=1500000 loops=1)
                                       ->  Hash  (cost=269350.90..269350.90 rows=500098 width=4) (actual time=2088.990..2088.991 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269350.90 rows=500098 width=4) (actual time=442.853..2088.974 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216840.60 rows=6001178 width=9) (actual time=0.017..842.281 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.097..43.097 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.020..18.659 rows=150000 loops=1)
 Planning Time: 1.478 ms
 Execution Time: 3313.523 ms
(29 rows)

query 19 run 1
SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18861.54..18861.55 rows=1 width=32) (actual time=838.977..841.624 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18861.54..18861.55 rows=1 width=32) (actual time=838.976..841.622 rows=1 loops=1)
         ->  Gather  (cost=18861.31..18861.52 rows=2 width=32) (actual time=831.619..841.609 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17861.31..17861.32 rows=1 width=32) (actual time=826.885..826.886 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17860.93 rows=51 width=12) (actual time=14.196..826.780 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=207 width=30) (actual time=0.655..26.748 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.36 rows=1 width=21) (actual time=4.238..4.732 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.090 ms
 Execution Time: 842.731 ms
(16 rows)

SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18861.54..18861.55 rows=1 width=32) (actual time=29.010..32.513 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18861.54..18861.55 rows=1 width=32) (actual time=29.010..32.512 rows=1 loops=1)
         ->  Gather  (cost=18861.31..18861.52 rows=2 width=32) (actual time=28.874..32.504 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17861.31..17861.32 rows=1 width=32) (actual time=26.132..26.133 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17860.93 rows=51 width=12) (actual time=0.662..26.098 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=207 width=30) (actual time=0.104..17.416 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.36 rows=1 width=21) (actual time=0.046..0.051 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.994 ms
 Execution Time: 32.568 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=209980.06..209980.06 rows=1 width=51) (actual time=4660.723..4660.809 rows=1 loops=1)
   ->  Sort  (cost=209980.06..209980.06 rows=1 width=51) (actual time=4660.722..4660.806 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185206.91..209980.05 rows=1 width=51) (actual time=4491.979..4660.613 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.580..3.157 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.245..0.247 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.330..2.187 rows=10000 loops=1)
               ->  Materialize  (cost=185206.91..209524.74 rows=1 width=8) (actual time=7.873..10.397 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=185206.91..209524.73 rows=1 width=8) (actual time=3448.281..4485.187 rows=5898 loops=1)
                           ->  Hash Join  (cost=185206.49..202567.85 rows=4881 width=44) (actual time=3447.694..3987.729 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178838.57..194931.42 rows=483234 width=40) (actual time=3414.524..3904.257 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14521.46..140666.37 rows=905661 width=13) (actual time=124.555..2889.228 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14295.04 rows=905661 width=0) (actual time=105.046..105.047 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=33.151..33.233 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=2.026..32.815 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.207..19.431 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.083..0.083 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.563 ms
 Execution Time: 4665.518 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=209980.06..209980.06 rows=1 width=51) (actual time=1362.189..1362.278 rows=1 loops=1)
   ->  Sort  (cost=209980.06..209980.06 rows=1 width=51) (actual time=1362.187..1362.276 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185206.91..209980.05 rows=1 width=51) (actual time=1197.652..1362.089 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.036..1.586 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.005..0.660 rows=10000 loops=1)
               ->  Materialize  (cost=185206.91..209524.74 rows=1 width=8) (actual time=1.593..2.879 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=185206.91..209524.73 rows=1 width=8) (actual time=697.856..1194.319 rows=5898 loops=1)
                           ->  Hash Join  (cost=185206.49..202567.85 rows=4881 width=44) (actual time=697.831..1171.495 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178838.57..194931.42 rows=483234 width=40) (actual time=686.725..1121.314 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14521.46..140666.37 rows=905661 width=13) (actual time=87.836..301.272 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14295.04 rows=905661 width=0) (actual time=68.878..68.878 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.087..11.173 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.332..10.888 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.027..8.144 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.911 ms
 Execution Time: 1366.503 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194181.11..194181.12 rows=1 width=34) (actual time=1314.738..1314.856 rows=100 loops=1)
   ->  Sort  (cost=194181.11..194181.12 rows=1 width=34) (actual time=1314.737..1314.848 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194181.08..194181.10 rows=1 width=34) (actual time=1313.729..1314.423 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194181.08..194181.09 rows=1 width=26) (actual time=1313.720..1313.994 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194181.07 rows=1 width=26) (actual time=16.612..1300.435 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194177.68 rows=1 width=38) (actual time=16.293..1220.338 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194174.37 rows=1 width=34) (actual time=11.470..31.400 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193174.27 rows=1 width=34) (actual time=5.853..635.611 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.16 rows=20004 width=34) (actual time=3.170..520.250 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.68 rows=500098 width=8) (actual time=1.286..460.817 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.862..1.863 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.473..1.790 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.205..0.207 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.265..1.529 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.134..0.134 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.083..0.083 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.799 ms
 Execution Time: 1315.211 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194181.11..194181.12 rows=1 width=34) (actual time=475.148..475.257 rows=100 loops=1)
   ->  Sort  (cost=194181.11..194181.12 rows=1 width=34) (actual time=475.147..475.249 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194181.08..194181.10 rows=1 width=34) (actual time=474.116..474.813 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194181.08..194181.09 rows=1 width=26) (actual time=474.107..474.373 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194181.07 rows=1 width=26) (actual time=1.591..460.995 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194177.68 rows=1 width=38) (actual time=1.103..419.130 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194174.37 rows=1 width=34) (actual time=1.011..352.168 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193174.27 rows=1 width=34) (actual time=0.960..429.751 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.16 rows=20004 width=34) (actual time=0.731..325.825 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.68 rows=500098 width=8) (actual time=0.038..263.781 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.675..0.677 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.063..0.619 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.050..0.563 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.026..0.027 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.005..0.005 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.709 ms
 Execution Time: 475.347 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.17 rows=1 width=72) (actual time=155.714..157.506 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=41.697..41.781 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=41.565..41.765 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=33.796..33.796 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1984 width=6) (actual time=0.177..32.491 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7458.94 rows=738 width=72) (actual time=155.713..157.419 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.49 rows=738 width=38) (actual time=65.795..156.908 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=65.343..68.480 rows=2736 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.878..21.036 rows=1613 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 530kB
                           Worker 0:  Sort Method: quicksort  Memory: 464kB
                           Worker 1:  Sort Method: quicksort  Memory: 478kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.022..18.979 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.032..0.032 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.244 ms
 Execution Time: 158.117 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.17 rows=1 width=72) (actual time=57.099..58.709 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=27.688..27.767 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=27.563..27.757 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=25.336..25.337 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1984 width=6) (actual time=0.014..24.134 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7458.94 rows=738 width=72) (actual time=57.098..58.628 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.49 rows=738 width=38) (actual time=50.680..58.417 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=50.627..52.844 rows=2737 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.198..20.274 rows=1538 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 549kB
                           Worker 0:  Sort Method: quicksort  Memory: 456kB
                           Worker 1:  Sort Method: quicksort  Memory: 467kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..18.273 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.801 ms
 Execution Time: 58.980 ms
(29 rows)

