query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4247776.50..4247776.50 rows=1 width=25) (actual time=106018.175..106018.176 rows=1 loops=1)
   ->  Sort  (cost=4247776.50..4247776.51 rows=6 width=25) (actual time=106018.174..106018.174 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4247776.30..4247776.47 rows=6 width=25) (actual time=106018.146..106018.153 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=59321805 width=25) (actual time=0.364..12379.340 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 9.686 ms
 Execution time: 106018.229 ms
(11 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4247776.50..4247776.50 rows=1 width=25) (actual time=103158.657..103158.658 rows=1 loops=1)
   ->  Sort  (cost=4247776.50..4247776.51 rows=6 width=25) (actual time=103158.656..103158.656 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4247776.30..4247776.47 rows=6 width=25) (actual time=103158.631..103158.636 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=59321805 width=25) (actual time=0.019..10679.407 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning time: 0.383 ms
 Execution time: 103158.705 ms
(11 rows)

query 2 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102215.86..1102215.87 rows=1 width=192) (actual time=5671.896..5671.912 rows=100 loops=1)
   ->  Sort  (cost=1102215.86..1102215.87 rows=1 width=192) (actual time=5671.894..5671.908 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=555130.80..1102215.85 rows=1 width=192) (actual time=3604.684..5668.782 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.83 rows=8047 width=30) (actual time=0.014..799.611 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=555129.46..563046.45 rows=1583398 width=172) (actual time=3603.730..4029.667 rows=1603828 loops=1)
                     ->  Sort  (cost=555129.46..559087.95 rows=1583398 width=172) (actual time=3603.728..3898.392 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external sort  Disk: 293160kB
                           ->  Hash Join  (cost=4048.53..305101.77 rows=1583398 width=172) (actual time=41.495..2417.640 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255220.01 rows=7999801 width=14) (actual time=0.001..1056.679 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166) (actual time=41.470..41.470 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166) (actual time=0.013..36.383 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..25.049 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.011..0.011 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.008 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.98..69.99 rows=1 width=6) (actual time=0.103..0.103 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.97 rows=4 width=6) (actual time=0.091..0.101 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.67 rows=19 width=10) (actual time=0.085..0.098 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.84 rows=19 width=10) (actual time=0.084..0.097 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.080..0.081 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.009 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
 Planning time: 22.584 ms
 Execution time: 5710.038 ms
(53 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102215.86..1102215.87 rows=1 width=192) (actual time=4381.635..4381.649 rows=100 loops=1)
   ->  Sort  (cost=1102215.86..1102215.87 rows=1 width=192) (actual time=4381.633..4381.643 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=555130.80..1102215.85 rows=1 width=192) (actual time=3182.049..4379.406 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.83 rows=8047 width=30) (actual time=0.015..505.294 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=555129.46..563046.45 rows=1583398 width=172) (actual time=3181.948..3594.495 rows=1603828 loops=1)
                     ->  Sort  (cost=555129.46..559087.95 rows=1583398 width=172) (actual time=3181.946..3465.547 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external sort  Disk: 293160kB
                           ->  Hash Join  (cost=4048.53..305101.77 rows=1583398 width=172) (actual time=24.337..2030.345 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255220.01 rows=7999801 width=14) (actual time=0.001..762.714 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166) (actual time=24.317..24.317 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166) (actual time=0.014..19.565 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.000..5.525 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.012..0.012 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.012 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.98..69.99 rows=1 width=6) (actual time=0.016..0.016 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.97 rows=4 width=6) (actual time=0.009..0.015 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.67 rows=19 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.84 rows=19 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.002..0.003 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
 Planning time: 1.910 ms
 Execution time: 4418.135 ms
(53 rows)

query 3 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3457959.65..3457959.67 rows=10 width=24) (actual time=27706.702..27706.703 rows=10 loops=1)
   ->  Sort  (cost=3457959.65..3465799.75 rows=3136040 width=24) (actual time=27706.702..27706.703 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3296109.75..3390190.95 rows=3136040 width=24) (actual time=27519.751..27687.395 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3296109.75..3303949.85 rows=3136040 width=24) (actual time=27519.736..27535.932 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=562668.55..2916377.00 rows=3136040 width=24) (actual time=9099.735..27425.194 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=32583986 width=16) (actual time=0.003..12078.210 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=537570.70..537570.70 rows=1443828 width=12) (actual time=9096.764..9096.764 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144279.19..537570.70 rows=1443828 width=12) (actual time=1920.336..8751.132 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85839.54..437557.72 rows=7236014 width=16) (actual time=1402.429..6228.886 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84030.54 rows=7236014 width=0) (actual time=1345.395..1345.395 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54698.16..54698.16 rows=299319 width=4) (actual time=517.130..517.130 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54698.16 rows=299319 width=4) (actual time=0.010..467.031 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 16.201 ms
 Execution time: 27706.831 ms
(30 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3457959.65..3457959.67 rows=10 width=24) (actual time=21821.876..21821.876 rows=10 loops=1)
   ->  Sort  (cost=3457959.65..3465799.75 rows=3136040 width=24) (actual time=21821.875..21821.875 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3296109.75..3390190.95 rows=3136040 width=24) (actual time=21634.306..21801.459 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3296109.75..3303949.85 rows=3136040 width=24) (actual time=21634.291..21650.811 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=562668.55..2916377.00 rows=3136040 width=24) (actual time=5234.580..21542.726 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=32583986 width=16) (actual time=0.003..10192.011 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=537570.70..537570.70 rows=1443828 width=12) (actual time=5232.753..5232.753 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144279.19..537570.70 rows=1443828 width=12) (actual time=1693.538..5001.245 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85839.54..437557.72 rows=7236014 width=16) (actual time=1306.061..3101.997 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84030.54 rows=7236014 width=0) (actual time=1249.173..1249.173 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54698.16..54698.16 rows=299319 width=4) (actual time=386.670..386.670 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54698.16 rows=299319 width=4) (actual time=0.010..338.965 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning time: 1.096 ms
 Execution time: 21822.007 ms
(30 rows)

query 4 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2042036.91..2042036.92 rows=1 width=16) (actual time=19336.620..19336.620 rows=1 loops=1)
   ->  Sort  (cost=2042036.91..2042036.92 rows=1 width=16) (actual time=19336.619..19336.619 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2042036.89..2042036.90 rows=1 width=16) (actual time=19336.598..19336.599 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=7941.63..2039273.86 rows=552606 width=16) (actual time=163.814..19113.551 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=7941.07..277501.70 rows=552842 width=20) (actual time=163.719..5130.447 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7802.86 rows=552842 width=0) (actual time=114.251..114.251 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 16.587 ms
 Execution time: 19336.679 ms
(18 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2042036.91..2042036.92 rows=1 width=16) (actual time=4714.706..4714.706 rows=1 loops=1)
   ->  Sort  (cost=2042036.91..2042036.92 rows=1 width=16) (actual time=4714.705..4714.705 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2042036.89..2042036.90 rows=1 width=16) (actual time=4714.684..4714.685 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=7941.63..2039273.86 rows=552606 width=16) (actual time=161.946..4559.094 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=7941.07..277501.70 rows=552842 width=20) (actual time=161.909..1235.314 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7802.86 rows=552842 width=0) (actual time=112.624..112.624 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 0.952 ms
 Execution time: 4714.764 ms
(18 rows)

query 5 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2062780.63..2062780.63 rows=1 width=38) (actual time=22525.228..22525.228 rows=1 loops=1)
   ->  Sort  (cost=2062780.63..2062780.69 rows=25 width=38) (actual time=22525.227..22525.227 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2062780.19..2062780.51 rows=25 width=38) (actual time=22525.211..22525.212 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=100358.46..2062062.67 rows=71752 width=38) (actual time=1124.153..22401.886 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=95637.46..2043132.41 rows=1798899 width=50) (actual time=1081.260..21949.367 rows=1815327 loops=1)
                           ->  Hash Join  (cost=95636.90..403583.75 rows=449917 width=38) (actual time=1079.822..7175.486 rows=453399 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=32310.66..327322.41 rows=2249583 width=8) (actual time=497.935..5953.753 rows=2276638 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=261246
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31748.27 rows=2249583 width=0) (actual time=441.797..441.797 rows=2276638 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59576.00..59576.00 rows=300019 width=38) (actual time=581.166..581.166 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.53..59576.00 rows=300019 width=38) (actual time=0.030..520.964 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=8) (actual time=0.003..360.832 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.020..0.020 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.018 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.029..0.031 rows=4 loops=453399)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.216..42.216 rows=100000 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..27.841 rows=100000 loops=1)
 Planning time: 25.657 ms
 Execution time: 22526.071 ms
(38 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2062780.63..2062780.63 rows=1 width=38) (actual time=6374.383..6374.383 rows=1 loops=1)
   ->  Sort  (cost=2062780.63..2062780.69 rows=25 width=38) (actual time=6374.383..6374.383 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2062780.19..2062780.51 rows=25 width=38) (actual time=6374.366..6374.368 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=100358.46..2062062.67 rows=71752 width=38) (actual time=976.407..6295.052 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=95637.46..2043132.41 rows=1798899 width=50) (actual time=938.630..5892.041 rows=1815327 loops=1)
                           ->  Hash Join  (cost=95636.90..403583.75 rows=449917 width=38) (actual time=938.608..2740.909 rows=453399 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=32310.66..327322.41 rows=2249583 width=8) (actual time=468.602..1735.758 rows=2276638 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=261246
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31748.27 rows=2249583 width=0) (actual time=412.445..412.445 rows=2276638 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=59576.00..59576.00 rows=300019 width=38) (actual time=469.368..469.368 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                       ->  Hash Join  (cost=2.53..59576.00 rows=300019 width=38) (actual time=0.030..412.079 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=8) (actual time=0.003..257.587 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.005..0.006 rows=4 loops=453399)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=37.469..37.469 rows=100000 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..21.319 rows=100000 loops=1)
 Planning time: 3.280 ms
 Execution time: 6374.527 ms
(38 rows)

query 6 run 1
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1074761.49..1074761.50 rows=1 width=12) (actual time=16916.223..16916.224 rows=1 loops=1)
   ->  Aggregate  (cost=1074761.49..1074761.50 rows=1 width=12) (actual time=16916.221..16916.221 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=208777.50..1068941.97 rows=1163903 width=12) (actual time=1410.026..16091.201 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..208486.52 rows=1163903 width=0) (actual time=1357.413..1357.413 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 9.568 ms
 Execution time: 16916.260 ms
(10 rows)

SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1074761.49..1074761.50 rows=1 width=12) (actual time=8616.987..8616.988 rows=1 loops=1)
   ->  Aggregate  (cost=1074761.49..1074761.50 rows=1 width=12) (actual time=8616.985..8616.985 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=208777.50..1068941.97 rows=1163903 width=12) (actual time=1272.103..8189.995 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 21866393
               Heap Blocks: exact=238202 lossy=424766
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..208486.52 rows=1163903 width=0) (actual time=1220.463..1220.463 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.577 ms
 Execution time: 8617.021 ms
(10 rows)

query 7 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2391622.80..2391622.80 rows=1 width=68) (actual time=33894.761..33894.761 rows=1 loops=1)
   ->  Sort  (cost=2391622.80..2391630.51 rows=3084 width=68) (actual time=33894.760..33894.760 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2391553.41..2391607.38 rows=3084 width=68) (actual time=33894.716..33894.723 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=861953.53..2390633.25 rows=61344 width=68) (actual time=8057.612..33821.844 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=299930.60..1786300.49 rows=1474038 width=46) (actual time=3156.724..28085.823 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=296153.20..1698485.41 rows=18479281 width=24) (actual time=3122.918..25373.245 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 Heap Blocks: exact=274040 lossy=846026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..291533.38 rows=18479281 width=0) (actual time=3063.102..3063.102 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=33.741..33.741 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.013..32.455 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..23.287 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=538816.32..538816.32 rows=1200129 width=30) (actual time=4896.327..4896.327 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=59274.84..538816.32 rows=1200129 width=30) (actual time=517.599..4639.341 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411284.17 rows=15001617 width=8) (actual time=0.005..1616.757 rows=15000000 loops=1)
                                 ->  Hash  (cost=57774.75..57774.75 rows=120007 width=30) (actual time=517.537..517.537 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..57774.75 rows=120007 width=30) (actual time=0.016..492.985 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=8) (actual time=0.001..355.089 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 22.659 ms
 Execution time: 33895.816 ms
(45 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2391622.80..2391622.80 rows=1 width=68) (actual time=20747.160..20747.160 rows=1 loops=1)
   ->  Sort  (cost=2391622.80..2391630.51 rows=3084 width=68) (actual time=20747.159..20747.159 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2391553.41..2391607.38 rows=3084 width=68) (actual time=20747.121..20747.128 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=861953.53..2390633.25 rows=61344 width=68) (actual time=6902.057..20688.824 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=299930.60..1786300.49 rows=1474038 width=46) (actual time=2793.597..15904.117 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=296153.20..1698485.41 rows=18479281 width=24) (actual time=2767.685..13776.874 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Index Recheck: 30957726
                                 Heap Blocks: exact=274040 lossy=846026
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..291533.38 rows=18479281 width=0) (actual time=2707.856..2707.856 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=3677.40..3677.40 rows=8000 width=30) (actual time=25.879..25.879 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3677.40 rows=8000 width=30) (actual time=0.013..24.596 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..15.639 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=538816.32..538816.32 rows=1200129 width=30) (actual time=4105.949..4105.949 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=59274.84..538816.32 rows=1200129 width=30) (actual time=391.189..3862.817 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411284.17 rows=15001617 width=8) (actual time=0.004..1203.103 rows=15000000 loops=1)
                                 ->  Hash  (cost=57774.75..57774.75 rows=120007 width=30) (actual time=391.130..391.130 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..57774.75 rows=120007 width=30) (actual time=0.016..368.521 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=8) (actual time=0.001..234.875 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 2.296 ms
 Execution time: 20747.588 ms
(45 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1222041.36..1222041.37 rows=1 width=42) (actual time=60739.037..60739.037 rows=1 loops=1)
   ->  Sort  (cost=1222041.36..1222043.19 rows=730 width=42) (actual time=60739.035..60739.035 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1222021.29..1222037.71 rows=730 width=42) (actual time=60739.018..60739.020 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=503673.65..1221537.83 rows=24173 width=42) (actual time=7659.979..60684.003 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 572208
                     ->  Hash Join  (cost=503673.65..1212350.78 rows=24173 width=20) (actual time=7659.282..60568.354 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=499202.65..1207547.13 rows=24244 width=20) (actual time=7617.638..60513.874 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.56..698364.13 rows=399859 width=20) (actual time=1.418..52472.775 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65981.25 rows=13333 width=4) (actual time=0.764..514.393 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.13 rows=30 width=24) (actual time=0.299..3.973 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=484279.61..484279.61 rows=909558 width=8) (actual time=7603.977..7603.977 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=128645.00..484279.61 rows=909558 width=8) (actual time=1505.904..7359.786 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65318.76..394803.58 rows=4547788 width=12) (actual time=935.617..5579.179 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64181.81 rows=4547788 width=0) (actual time=879.441..879.441 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59576.00..59576.00 rows=300019 width=4) (actual time=569.592..569.592 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.53..59576.00 rows=300019 width=4) (actual time=0.036..520.522 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=8) (actual time=0.007..362.975 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.021..0.021 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.015..0.020 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.598..41.598 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..27.684 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.011 rows=25 loops=1)
 Planning time: 26.045 ms
 Execution time: 60739.424 ms
(50 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1222041.36..1222041.37 rows=1 width=42) (actual time=6001.788..6001.788 rows=1 loops=1)
   ->  Sort  (cost=1222041.36..1222043.19 rows=730 width=42) (actual time=6001.788..6001.788 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1222021.29..1222037.71 rows=730 width=42) (actual time=6001.769..6001.771 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=503673.65..1221537.83 rows=24173 width=42) (actual time=4133.056..5975.774 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 572208
                     ->  Hash Join  (cost=503673.65..1212350.78 rows=24173 width=20) (actual time=4133.030..5901.752 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=499202.65..1207547.13 rows=24244 width=20) (actual time=4097.240..5856.940 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.56..698364.13 rows=399859 width=20) (actual time=0.082..1588.071 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65981.25 rows=13333 width=4) (actual time=0.056..279.948 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 1986989
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.13 rows=30 width=24) (actual time=0.008..0.095 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=484279.61..484279.61 rows=909558 width=8) (actual time=4095.391..4095.391 rows=910360 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 25982kB
                                       ->  Hash Join  (cost=128645.00..484279.61 rows=909558 width=8) (actual time=1312.734..3927.722 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65318.76..394803.58 rows=4547788 width=12) (actual time=876.686..2524.173 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=261268
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64181.81 rows=4547788 width=0) (actual time=820.538..820.538 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59576.00..59576.00 rows=300019 width=4) (actual time=435.258..435.258 rows=299436 loops=1)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                                   ->  Hash Join  (cost=2.53..59576.00 rows=300019 width=4) (actual time=0.037..388.721 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=8) (actual time=0.005..238.292 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.020..0.020 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.015..0.019 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=35.743..35.743 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..21.047 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.004 rows=25 loops=1)
 Planning time: 3.157 ms
 Execution time: 6002.186 ms
(50 rows)

query 9 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=801420.12..801420.15 rows=1 width=53) (actual time=215505.355..215505.355 rows=1 loops=1)
   ->  GroupAggregate  (cost=801420.12..801421.92 rows=48 width=53) (actual time=215505.354..215505.354 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=801420.12..801420.24 rows=48 width=53) (actual time=215489.138..215496.497 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 239496kB
               ->  Nested Loop  (cost=1.73..801418.78 rows=48 width=53) (actual time=0.838..199381.958 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 77956608
                     ->  Nested Loop  (cost=1.73..801399.22 rows=48 width=31) (actual time=0.805..185826.473 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=1.29..801234.46 rows=48 width=31) (actual time=0.251..134352.688 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=1.00..801073.34 rows=49 width=35) (actual time=0.244..125508.222 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.43..224574.57 rows=161610 width=18) (actual time=0.060..2554.782 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..65981.25 rows=40404 width=4) (actual time=0.007..702.414 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.74 rows=19 width=14) (actual time=0.014..0.016 rows=4 loops=108312)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.042..0.281 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.009 rows=25 loops=1)
 Planning time: 28.607 ms
 Execution time: 215533.459 ms
(28 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=801420.12..801420.15 rows=1 width=53) (actual time=91382.938..91382.938 rows=1 loops=1)
   ->  GroupAggregate  (cost=801420.12..801421.92 rows=48 width=53) (actual time=91382.937..91382.937 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=801420.12..801420.24 rows=48 width=53) (actual time=91366.872..91374.159 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 239496kB
               ->  Nested Loop  (cost=1.73..801418.78 rows=48 width=53) (actual time=0.141..77072.890 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 77956608
                     ->  Nested Loop  (cost=1.73..801399.22 rows=48 width=31) (actual time=0.123..65763.093 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=1.29..801234.46 rows=48 width=31) (actual time=0.107..43452.807 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=1.00..801073.34 rows=49 width=35) (actual time=0.103..36780.749 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.43..224574.57 rows=161610 width=18) (actual time=0.075..2047.722 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..65981.25 rows=40404 width=4) (actual time=0.009..601.802 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 1891688
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.74 rows=19 width=14) (actual time=0.011..0.012 rows=4 loops=108312)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.014..0.078 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.005 rows=25 loops=1)
 Planning time: 16.800 ms
 Execution time: 91411.389 ms
(28 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2509855.84..2509855.89 rows=20 width=182) (actual time=23010.565..23010.568 rows=20 loops=1)
   ->  Sort  (cost=2509855.84..2511335.40 rows=591824 width=182) (actual time=23010.564..23010.565 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2470434.65..2494107.61 rows=591824 width=182) (actual time=21598.210..22910.900 rows=381205 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=2470434.65..2471914.21 rows=591824 width=182) (actual time=21598.188..22081.823 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218232kB
                     ->  Hash Join  (cost=388127.38..2379883.34 rows=591824 width=182) (actual time=5912.159..20093.117 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388125.81..2371744.20 rows=591824 width=160) (actual time=5912.140..19903.178 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286197.72..2222929.75 rows=591824 width=16) (actual time=4975.055..18113.396 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=14909250 width=16) (actual time=0.007..11417.034 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278754.08..278754.08 rows=595491 width=8) (actual time=4972.671..4972.671 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8553.72..278754.08 rows=595491 width=8) (actual time=168.063..4820.661 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8404.84 rows=595491 width=0) (actual time=116.937..116.937 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.93..50947.93 rows=1500093 width=148) (actual time=936.522..936.522 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=148) (actual time=0.002..493.854 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.005 rows=25 loops=1)
 Planning time: 17.485 ms
 Execution time: 23046.890 ms
(33 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2509855.84..2509855.89 rows=20 width=182) (actual time=17321.987..17321.992 rows=20 loops=1)
   ->  Sort  (cost=2509855.84..2511335.40 rows=591824 width=182) (actual time=17321.986..17321.990 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2470434.65..2494107.61 rows=591824 width=182) (actual time=15901.960..17222.882 rows=381205 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=2470434.65..2471914.21 rows=591824 width=182) (actual time=15901.937..16388.715 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218232kB
                     ->  Hash Join  (cost=388127.38..2379883.34 rows=591824 width=182) (actual time=2397.943..14397.738 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388125.81..2371744.20 rows=591824 width=160) (actual time=2397.928..14210.413 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286197.72..2222929.75 rows=591824 width=16) (actual time=1596.047..12581.543 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874904.10 rows=14909250 width=16) (actual time=0.007..9338.264 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278754.08..278754.08 rows=595491 width=8) (actual time=1594.707..1594.707 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8553.72..278754.08 rows=595491 width=8) (actual time=155.073..1472.925 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8404.84 rows=595491 width=0) (actual time=103.694..103.694 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.93..50947.93 rows=1500093 width=148) (actual time=801.332..801.332 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=148) (actual time=0.002..366.366 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.011..0.011 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
 Planning time: 1.322 ms
 Execution time: 17357.904 ms
(33 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=626186.00..626186.00 rows=1 width=14) (actual time=3460.870..3460.870 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293084.63..293084.64 rows=1 width=10) (actual time=1473.870..1473.870 rows=1 loops=1)
           ->  Hash Join  (cost=2323.46..290709.52 rows=316680 width=10) (actual time=2.791..1357.653 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255220.01 rows=7999801 width=14) (actual time=0.033..692.179 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=2.727..2.727 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.514..2.359 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.503..1.948 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.324..0.324 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=333101.36..333893.06 rows=316680 width=14) (actual time=3460.870..3460.870 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319642.46..331517.96 rows=316680 width=14) (actual time=3460.860..3460.860 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319642.46..320434.16 rows=316680 width=14) (actual time=1801.770..1817.857 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.46..290709.52 rows=316680 width=14) (actual time=23.053..1755.792 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255220.01 rows=7999801 width=18) (actual time=0.329..1020.324 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=22.636..22.636 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=2.023..21.870 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.016 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=2.005..21.269 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.770..1.770 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 11.269 ms
 Execution time: 3460.942 ms
(43 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=626186.00..626186.00 rows=1 width=14) (actual time=3056.705..3056.705 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293084.63..293084.64 rows=1 width=10) (actual time=1475.522..1475.522 rows=1 loops=1)
           ->  Hash Join  (cost=2323.46..290709.52 rows=316680 width=10) (actual time=2.766..1359.189 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255220.01 rows=7999801 width=14) (actual time=0.032..695.224 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=2.707..2.707 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.486..2.371 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.476..1.948 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.296..0.296 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=333101.36..333893.06 rows=316680 width=14) (actual time=3056.705..3056.705 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319642.46..331517.96 rows=316680 width=14) (actual time=3056.696..3056.696 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319642.46..320434.16 rows=316680 width=14) (actual time=1395.146..1411.144 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.46..290709.52 rows=316680 width=14) (actual time=3.543..1351.488 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255220.01 rows=7999801 width=18) (actual time=0.032..692.170 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=3.487..3.487 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.501..3.121 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.493..2.715 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.310..0.310 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning time: 1.071 ms
 Execution time: 3056.770 ms
(43 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3095323.59..3095323.60 rows=1 width=27) (actual time=20520.480..20520.480 rows=1 loops=1)
   ->  Sort  (cost=3095323.59..3095323.60 rows=1 width=27) (actual time=20520.478..20520.478 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=3095323.57..3095323.58 rows=1 width=27) (actual time=20520.459..20520.459 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=2500626.54..3090327.93 rows=285465 width=27) (actual time=15694.707..20329.531 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..547989.69 rows=15001617 width=20) (actual time=0.004..3652.812 rows=14999967 loops=1)
                     ->  Sort  (cost=2500580.33..2501293.99 rows=285465 width=15) (actual time=15694.609..15733.730 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 25513kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474712.98 rows=285465 width=15) (actual time=0.502..15628.719 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning time: 11.629 ms
 Execution time: 20520.567 ms
(17 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3095323.59..3095323.60 rows=1 width=27) (actual time=17555.362..17555.362 rows=1 loops=1)
   ->  Sort  (cost=3095323.59..3095323.60 rows=1 width=27) (actual time=17555.361..17555.361 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=3095323.57..3095323.58 rows=1 width=27) (actual time=17555.343..17555.343 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=2500626.54..3090327.93 rows=285465 width=27) (actual time=13736.248..17373.097 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..547989.69 rows=15001617 width=20) (actual time=0.004..2687.003 rows=14999967 loops=1)
                     ->  Sort  (cost=2500580.33..2501293.99 rows=285465 width=15) (actual time=13736.201..13770.323 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 25513kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474712.98 rows=285465 width=15) (actual time=0.088..13676.503 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning time: 0.850 ms
 Execution time: 17555.456 ms
(17 rows)

query 13 run 1
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2728468.60..2728468.60 rows=1 width=8) (actual time=23228.912..23228.913 rows=1 loops=1)
   ->  Sort  (cost=2728468.60..2728469.10 rows=200 width=8) (actual time=23228.910..23228.910 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2728465.60..2728467.60 rows=200 width=8) (actual time=23228.893..23228.898 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2327814.27..2705964.21 rows=1500093 width=8) (actual time=13738.419..23021.481 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2327814.27..2617469.19 rows=14698817 width=8) (actual time=13738.403..21713.713 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.82 rows=1500093 width=4) (actual time=0.241..194.317 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2327813.84..2401307.92 rows=14698817 width=8) (actual time=13738.157..19630.737 rows=14837583 loops=1)
                                 ->  Sort  (cost=2327813.84..2364560.88 rows=14698817 width=8) (actual time=13738.153..18517.965 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260888kB
                                       ->  Seq Scan on orders  (cost=0.00..448788.21 rows=14698817 width=8) (actual time=0.334..5316.379 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 10.599 ms
 Execution time: 23264.380 ms
(21 rows)

SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2728468.60..2728468.60 rows=1 width=8) (actual time=22612.922..22612.923 rows=1 loops=1)
   ->  Sort  (cost=2728468.60..2728469.10 rows=200 width=8) (actual time=22612.920..22612.920 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2728465.60..2728467.60 rows=200 width=8) (actual time=22612.903..22612.907 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2327814.27..2705964.21 rows=1500093 width=8) (actual time=13119.720..22406.916 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Merge Left Join  (cost=2327814.27..2617469.19 rows=14698817 width=8) (actual time=13119.704..21114.142 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.82 rows=1500093 width=4) (actual time=0.017..156.260 rows=1500000 loops=1)
                                 Heap Fetches: 0
                           ->  Materialize  (cost=2327813.84..2401307.92 rows=14698817 width=8) (actual time=13119.683..19060.147 rows=14837583 loops=1)
                                 ->  Sort  (cost=2327813.84..2364560.88 rows=14698817 width=8) (actual time=13119.681..17929.617 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260888kB
                                       ->  Seq Scan on orders  (cost=0.00..448788.21 rows=14698817 width=8) (actual time=0.031..4850.754 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                             Rows Removed by Filter: 162417
 Planning time: 0.517 ms
 Execution time: 22648.691 ms
(21 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=817736.61..817736.63 rows=1 width=33) (actual time=8005.643..8005.644 rows=1 loops=1)
   ->  Aggregate  (cost=817736.61..817736.63 rows=1 width=33) (actual time=8005.641..8005.641 rows=1 loops=1)
         ->  Hash Join  (cost=111793.31..804483.05 rows=757346 width=33) (actual time=1125.101..7494.933 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12138.86..672399.41 rows=757346 width=16) (actual time=283.171..5964.638 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11949.52 rows=757346 width=0) (actual time=185.889..185.889 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.20..60981.20 rows=2000020 width=25) (actual time=840.590..840.590 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60981.20 rows=2000020 width=25) (actual time=0.005..531.191 rows=2000000 loops=1)
 Planning time: 14.607 ms
 Execution time: 8006.328 ms
(14 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=817736.61..817736.63 rows=1 width=33) (actual time=4099.068..4099.068 rows=1 loops=1)
   ->  Aggregate  (cost=817736.61..817736.63 rows=1 width=33) (actual time=4099.068..4099.068 rows=1 loops=1)
         ->  Hash Join  (cost=111793.31..804483.05 rows=757346 width=33) (actual time=958.355..3622.356 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=12138.86..672399.41 rows=757346 width=16) (actual time=272.772..2331.419 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=416569
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11949.52 rows=757346 width=0) (actual time=175.837..175.837 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.20..60981.20 rows=2000020 width=25) (actual time=684.828..684.828 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60981.20 rows=2000020 width=25) (actual time=0.006..384.169 rows=2000000 loops=1)
 Planning time: 0.788 ms
 Execution time: 4099.140 ms
(14 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2456164.62..2456165.78 rows=1 width=103) (actual time=22313.288..22313.288 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1219360.19..1219360.20 rows=1 width=32) (actual time=8103.244..8103.244 rows=1 loops=1)
           ->  HashAggregate  (cost=1219264.29..1219312.24 rows=3836 width=16) (actual time=8063.405..8096.624 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36767.94..1196322.95 rows=2294134 width=16) (actual time=538.303..6179.225 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.40 rows=2294134 width=0) (actual time=484.394..484.394 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1236804.42..1241247.46 rows=3836 width=103) (actual time=22313.288..22313.288 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=71) (actual time=0.661..17.873 rows=69998 loops=1)
         ->  Sort  (cost=1236804.13..1236813.72 rows=3836 width=36) (actual time=22291.451..22291.451 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1236470.29..1236575.78 rows=3836 width=36) (actual time=22272.778..22291.442 rows=1 loops=1)
                     ->  HashAggregate  (cost=1236470.29..1236537.42 rows=3836 width=16) (actual time=22272.776..22291.440 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=36767.94..1196322.95 rows=2294134 width=16) (actual time=603.422..11925.293 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 21153354
                                 Heap Blocks: exact=243444 lossy=424814
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.40 rows=2294134 width=0) (actual time=549.365..549.365 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 12.071 ms
 Execution time: 22314.324 ms
(30 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2456164.62..2456165.78 rows=1 width=103) (actual time=16896.647..16896.647 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1219360.19..1219360.20 rows=1 width=32) (actual time=8158.410..8158.410 rows=1 loops=1)
           ->  HashAggregate  (cost=1219264.29..1219312.24 rows=3836 width=16) (actual time=8118.494..8151.818 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36767.94..1196322.95 rows=2294134 width=16) (actual time=540.343..6219.488 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 21153354
                       Heap Blocks: exact=243444 lossy=424814
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.40 rows=2294134 width=0) (actual time=486.851..486.851 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1236804.42..1241247.46 rows=3836 width=103) (actual time=16896.647..16896.647 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=71) (actual time=0.029..10.716 rows=69998 loops=1)
         ->  Sort  (cost=1236804.13..1236813.72 rows=3836 width=36) (actual time=16882.112..16882.112 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1236470.29..1236575.78 rows=3836 width=36) (actual time=16863.302..16882.106 rows=1 loops=1)
                     ->  HashAggregate  (cost=1236470.29..1236537.42 rows=3836 width=16) (actual time=16863.302..16882.105 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=36767.94..1196322.95 rows=2294134 width=16) (actual time=569.176..6758.708 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 21153354
                                 Heap Blocks: exact=243444 lossy=424814
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.40 rows=2294134 width=0) (actual time=515.594..515.594 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.840 ms
 Execution time: 16896.957 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=367059.83..367059.83 rows=1 width=40) (actual time=11239.818..11239.818 rows=1 loops=1)
   ->  Sort  (cost=367059.83..367129.28 rows=27782 width=40) (actual time=11239.817..11239.817 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=359234.81..366920.92 rows=27782 width=40) (actual time=10415.542..11234.410 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=359234.81..360716.47 rows=592663 width=40) (actual time=10415.486..10936.243 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=98159.73..291988.01 rows=592663 width=40) (actual time=935.082..3171.761 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..176375.98 rows=3999900 width=8) (actual time=38.181..1444.451 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=1.039..37.517 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90981.50..90981.50 rows=296342 width=40) (actual time=896.223..896.223 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90981.50 rows=296342 width=40) (actual time=0.014..832.496 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 12.627 ms
 Execution time: 11248.800 ms
(26 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=367059.83..367059.83 rows=1 width=40) (actual time=10690.389..10690.390 rows=1 loops=1)
   ->  Sort  (cost=367059.83..367129.28 rows=27782 width=40) (actual time=10690.387..10690.387 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=359234.81..366920.92 rows=27782 width=40) (actual time=9866.393..10685.076 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=359234.81..360716.47 rows=592663 width=40) (actual time=9866.338..10385.401 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=98159.73..291988.01 rows=592663 width=40) (actual time=637.491..2658.782 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..176375.98 rows=3999900 width=8) (actual time=22.199..1235.606 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=0.086..22.148 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90981.50..90981.50 rows=296342 width=40) (actual time=614.667..614.667 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90981.50 rows=296342 width=40) (actual time=0.013..558.409 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning time: 0.651 ms
 Execution time: 10699.018 ms
(26 rows)

query 17 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10820601.21..10820601.22 rows=1 width=8) (actual time=76828.348..76828.348 rows=1 loops=1)
   ->  Aggregate  (cost=10820601.21..10820601.22 rows=1 width=8) (actual time=76828.347..76828.347 rows=1 loops=1)
         ->  Merge Join  (cost=10132854.66..10820552.60 rows=19443 width=8) (actual time=43764.937..76825.476 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10132853.66..10612373.57 rows=1977550 width=9) (actual time=43756.340..74649.275 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10132853.66..10282805.88 rows=59980888 width=9) (actual time=43756.313..64591.965 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1113328kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724951.88 rows=59980888 width=9) (actual time=0.218..9411.309 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..182583.07 rows=58991 width=21) (actual time=1.326..2053.177 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..182435.59 rows=58991 width=21) (actual time=1.323..2033.345 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89212.83 rows=1967 width=4) (actual time=0.970..653.789 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.09 rows=30 width=17) (actual time=0.423..0.681 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 15.014 ms
 Execution time: 76952.920 ms
(21 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10820601.21..10820601.22 rows=1 width=8) (actual time=72551.162..72551.162 rows=1 loops=1)
   ->  Aggregate  (cost=10820601.21..10820601.22 rows=1 width=8) (actual time=72551.161..72551.161 rows=1 loops=1)
         ->  Merge Join  (cost=10132854.66..10820552.60 rows=19443 width=8) (actual time=41368.660..72549.316 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10132853.66..10612373.57 rows=1977550 width=9) (actual time=41361.303..71985.867 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10132853.66..10282805.88 rows=59980888 width=9) (actual time=41361.275..61970.336 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1113328kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724951.88 rows=59980888 width=9) (actual time=0.035..7693.630 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..182583.07 rows=58991 width=21) (actual time=0.154..453.443 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..182435.59 rows=58991 width=21) (actual time=0.152..443.654 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89212.83 rows=1967 width=4) (actual time=0.140..379.096 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.09 rows=30 width=17) (actual time=0.006..0.026 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.687 ms
 Execution time: 72702.510 ms
(21 rows)

query 18 run 1
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11761537.20..11761540.20 rows=100 width=44) (actual time=40149.647..40149.921 rows=99 loops=1)
   ->  GroupAggregate  (cost=11761537.20..12661250.52 rows=29990444 width=44) (actual time=40149.645..40149.915 rows=99 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=11761537.20..11836513.31 rows=29990444 width=44) (actual time=40149.636..40149.672 rows=693 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78786.12..7443951.03 rows=29990444 width=44) (actual time=4202.314..40148.917 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=297.03..6496789.28 rows=29990444 width=25) (actual time=960.966..39391.870 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..3756784.44 rows=7500808 width=24) (actual time=745.142..28931.034 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547989.69 rows=15001617 width=20) (actual time=0.004..2836.329 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.56..2983850.43 rows=14995222 width=4) (actual time=642.426..25261.652 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796410.16 rows=14995222 width=9) (actual time=642.424..25261.477 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271577.38 rows=59980888 width=9) (actual time=0.003..11824.946 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271577.38 rows=59980888 width=9) (actual time=0.008..7226.627 rows=59916431 loops=1)
                     ->  Hash  (cost=50947.93..50947.93 rows=1500093 width=23) (actual time=650.916..650.916 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=23) (actual time=0.006..412.474 rows=1500000 loops=1)
 Planning time: 16.128 ms
 Execution time: 40150.046 ms
(25 rows)

SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11761537.20..11761540.20 rows=100 width=44) (actual time=36780.719..36780.993 rows=99 loops=1)
   ->  GroupAggregate  (cost=11761537.20..12661250.52 rows=29990444 width=44) (actual time=36780.718..36780.986 rows=99 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=11761537.20..11836513.31 rows=29990444 width=44) (actual time=36780.708..36780.739 rows=693 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78786.12..7443951.03 rows=29990444 width=44) (actual time=3618.400..36780.204 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=297.03..6496789.28 rows=29990444 width=25) (actual time=833.504..36154.724 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=1.00..3756784.44 rows=7500808 width=24) (actual time=613.191..25688.152 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547989.69 rows=15001617 width=20) (actual time=0.004..2215.835 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.56..2983850.43 rows=14995222 width=4) (actual time=538.454..22663.634 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796410.16 rows=14995222 width=9) (actual time=538.450..22663.458 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271577.38 rows=59980888 width=9) (actual time=0.003..9388.619 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271577.38 rows=59980888 width=9) (actual time=0.007..7242.273 rows=59916431 loops=1)
                     ->  Hash  (cost=50947.93..50947.93 rows=1500093 width=23) (actual time=519.452..519.452 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50947.93 rows=1500093 width=23) (actual time=0.004..287.344 rows=1500000 loops=1)
 Planning time: 1.380 ms
 Execution time: 36781.113 ms
(25 rows)

query 19 run 1
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=359564.60..359564.61 rows=1 width=12) (actual time=23021.110..23021.111 rows=1 loops=1)
   ->  Aggregate  (cost=359564.60..359564.61 rows=1 width=12) (actual time=23021.109..23021.109 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..359556.26 rows=1112 width=12) (actual time=59.364..23017.503 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125981.85 rows=4766 width=30) (actual time=0.945..922.214 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..49.00 rows=1 width=21) (actual time=4.169..4.620 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 13.360 ms
 Execution time: 23021.150 ms
(12 rows)

SET
SET


 Limit  (cost=359564.60..359564.61 rows=1 width=12) (actual time=732.642..732.642 rows=1 loops=1)
   ->  Aggregate  (cost=359564.60..359564.61 rows=1 width=12) (actual time=732.641..732.641 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..359556.26 rows=1112 width=12) (actual time=1.747..731.765 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125981.85 rows=4766 width=30) (actual time=0.257..567.471 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..49.00 rows=1 width=21) (actual time=0.031..0.034 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 0.834 ms
 Execution time: 732.681 ms
(12 rows)

query 20 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2884580.86..2884580.86 rows=1 width=51) (actual time=56749.546..56749.546 rows=1 loops=1)
   ->  Sort  (cost=2884580.86..2884585.86 rows=2000 width=51) (actual time=56749.545..56749.545 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2757871.17..2884570.86 rows=2000 width=51) (actual time=33971.880..56747.597 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=55) (actual time=2.327..25.067 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=59) (actual time=2.320..24.066 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1865
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.383..1.383 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2757821.88..2880617.47 rows=28 width=8) (actual time=8.012..11.009 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2757821.88..2880617.33 rows=28 width=8) (actual time=32809.930..39312.505 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  GroupAggregate  (cost=2580695.41..2686837.64 rows=922976 width=13) (actual time=28318.253..34507.926 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2580695.41..2603769.81 rows=9229759 width=13) (actual time=28318.238..31375.099 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205048kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=147918.59..1411507.98 rows=9229759 width=13) (actual time=1920.157..21121.831 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 27869248
                                             Heap Blocks: exact=412819 lossy=635976
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..145611.15 rows=9229759 width=0) (actual time=1824.648..1824.648 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=177126.47..178062.62 rows=374462 width=16) (actual time=4491.333..4500.495 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=0.43..142461.66 rows=374462 width=16) (actual time=0.305..4452.429 rows=86872 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65981.25 rows=20202 width=4) (actual time=0.090..487.714 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.167..0.181 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 17.097 ms
 Execution time: 56777.710 ms
(43 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2884580.86..2884580.86 rows=1 width=51) (actual time=41423.608..41423.609 rows=1 loops=1)
   ->  Sort  (cost=2884580.86..2884585.86 rows=2000 width=51) (actual time=41423.607..41423.607 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2757871.17..2884570.86 rows=2000 width=51) (actual time=18686.735..41421.795 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=55) (actual time=0.595..10.512 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=59) (actual time=0.588..9.772 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=1865
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.394..0.394 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2757821.88..2880617.47 rows=28 width=8) (actual time=4.279..7.284 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2757821.88..2880617.33 rows=28 width=8) (actual time=17521.222..24054.134 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  GroupAggregate  (cost=2580695.41..2686837.64 rows=922976 width=13) (actual time=17081.721..23306.828 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=2580695.41..2603769.81 rows=9229759 width=13) (actual time=17081.705..20178.597 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205048kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=147918.59..1411507.98 rows=9229759 width=13) (actual time=1714.806..11241.047 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 27869248
                                             Heap Blocks: exact=412819 lossy=635976
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..145611.15 rows=9229759 width=0) (actual time=1619.732..1619.732 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=177126.47..178062.62 rows=374462 width=16) (actual time=439.158..448.376 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=0.43..142461.66 rows=374462 width=16) (actual time=0.057..417.467 rows=86872 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65981.25 rows=20202 width=4) (actual time=0.030..262.253 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.006..0.006 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.613 ms
 Execution time: 41449.988 ms
(43 rows)

query 21 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4006659.27..4006659.28 rows=1 width=26) (actual time=32138.582..32138.593 rows=100 loops=1)
   ->  Sort  (cost=4006659.27..4006659.28 rows=1 width=26) (actual time=32138.582..32138.588 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=4006659.25..4006659.26 rows=1 width=26) (actual time=32136.518..32137.149 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=570818.38..4006659.25 rows=1 width=26) (actual time=3477.085..32105.003 rows=39281 loops=1)
                     ->  Nested Loop Semi Join  (cost=570817.81..4006652.52 rows=1 width=34) (actual time=3460.465..30472.030 rows=704306 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 183320
                           ->  Hash Join  (cost=570817.25..2582482.94 rows=387837 width=38) (actual time=3455.288..20761.518 rows=730985 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.46..1960177.84 rows=797417 width=34) (actual time=40.875..15893.996 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874904.10 rows=19993629 width=8) (actual time=0.004..12600.079 rows=37929348 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                             Rows Removed by Filter: 22056704
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30) (actual time=40.805..40.805 rows=3991 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30) (actual time=1.775..39.756 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.007 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34) (actual time=1.768..38.994 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1865
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.583..1.583 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448788.21..448788.21 rows=7296286 width=4) (actual time=3409.862..3409.862 rows=7309184 loops=1)
                                       Buckets: 1048576  Batches: 16  Memory Usage: 24248kB
                                       ->  Seq Scan on orders  (cost=0.00..448788.21 rows=7296286 width=4) (actual time=0.010..2542.460 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.013..0.013 rows=1 loops=730985)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 18.480 ms
 Execution time: 32139.620 ms
(41 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4006659.27..4006659.28 rows=1 width=26) (actual time=23487.086..23487.097 rows=100 loops=1)
   ->  Sort  (cost=4006659.27..4006659.28 rows=1 width=26) (actual time=23487.085..23487.090 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=4006659.25..4006659.26 rows=1 width=26) (actual time=23485.012..23485.712 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=570818.38..4006659.25 rows=1 width=26) (actual time=2932.369..23456.508 rows=39281 loops=1)
                     ->  Nested Loop Semi Join  (cost=570817.81..4006652.52 rows=1 width=34) (actual time=2919.710..21937.528 rows=704306 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 183320
                           ->  Hash Join  (cost=570817.25..2582482.94 rows=387837 width=38) (actual time=2919.688..17730.112 rows=730985 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.46..1960177.84 rows=797417 width=34) (actual time=15.034..13433.682 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874904.10 rows=19993629 width=8) (actual time=0.004..10624.793 rows=37929348 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                             Rows Removed by Filter: 22056704
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30) (actual time=14.995..14.995 rows=3991 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30) (actual time=0.584..13.946 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.006 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34) (actual time=0.578..13.382 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1865
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.385..0.385 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448788.21..448788.21 rows=7296286 width=4) (actual time=2901.151..2901.151 rows=7309184 loops=1)
                                       Buckets: 1048576  Batches: 16  Memory Usage: 24248kB
                                       ->  Seq Scan on orders  (cost=0.00..448788.21 rows=7296286 width=4) (actual time=0.010..2069.006 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.005..0.005 rows=1 loops=730985)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 2.168 ms
 Execution time: 23487.242 ms
(41 rows)

query 22 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161329.42..161329.43 rows=1 width=22) (actual time=2334.757..2334.757 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75443.53..75443.54 rows=1 width=6) (actual time=1041.370..1041.370 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75324.44 rows=47636 width=6) (actual time=0.008..985.475 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  Sort  (cost=85885.88..85905.81 rows=7972 width=22) (actual time=2334.756..2334.756 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=85706.51..85846.02 rows=7972 width=22) (actual time=2334.521..2334.532 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..85646.72 rows=7972 width=22) (actual time=1041.418..2303.646 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75324.44 rows=17501 width=26) (actual time=1041.397..1618.823 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 12.748 ms
 Execution time: 2334.813 ms
(20 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161329.42..161329.43 rows=1 width=22) (actual time=1705.819..1705.819 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75443.53..75443.54 rows=1 width=6) (actual time=789.210..789.210 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75324.44 rows=47636 width=6) (actual time=0.007..738.243 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  Sort  (cost=85885.88..85905.81 rows=7972 width=22) (actual time=1705.818..1705.818 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=85706.51..85846.02 rows=7972 width=22) (actual time=1705.791..1705.800 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..85646.72 rows=7972 width=22) (actual time=789.248..1682.012 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75324.44 rows=17501 width=26) (actual time=789.235..1329.231 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.546 ms
 Execution time: 1705.868 ms
(20 rows)

