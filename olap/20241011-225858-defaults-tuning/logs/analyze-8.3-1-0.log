query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341852.21..341852.22 rows=1 width=33) (actual time=16419.321..16419.321 rows=1 loops=1)
   ->  Sort  (cost=341852.21..341852.23 rows=6 width=33) (actual time=16419.320..16419.320 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341851.91..341852.18 rows=6 width=33) (actual time=16419.285..16419.290 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=5930789 width=33) (actual time=0.567..1227.955 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 16419.411 ms
(8 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341852.21..341852.22 rows=1 width=33) (actual time=16156.556..16156.556 rows=1 loops=1)
   ->  Sort  (cost=341852.21..341852.23 rows=6 width=33) (actual time=16156.556..16156.556 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341851.91..341852.18 rows=6 width=33) (actual time=16156.526..16156.530 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=5930789 width=33) (actual time=0.022..1039.048 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 16156.608 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68041.83..68041.83 rows=1 width=194) (actual time=666.433..666.446 rows=100 loops=1)
   ->  Sort  (cost=68041.83..68041.83 rows=1 width=194) (actual time=666.432..666.441 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45647.01..68041.82 rows=1 width=194) (actual time=463.912..665.795 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=855 width=30) (actual time=1.279..81.547 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45647.01..46046.33 rows=159728 width=176) (actual time=460.349..488.925 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 32072kB
                     ->  Hash Join  (cost=410.03..31842.31 rows=159728 width=176) (actual time=6.909..322.677 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.348..190.565 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=6.543..6.543 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.712..6.076 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.268..4.378 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.438..0.438 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.427..0.435 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.238..0.240 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.182..0.182 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.178..0.180 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8) (actual time=0.122..0.122 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8) (actual time=0.111..0.120 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12) (actual time=0.105..0.118 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12) (actual time=0.104..0.113 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12) (actual time=0.100..0.101 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 670.838 ms
(41 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68041.83..68041.83 rows=1 width=194) (actual time=459.560..459.570 rows=100 loops=1)
   ->  Sort  (cost=68041.83..68041.83 rows=1 width=194) (actual time=459.560..459.565 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45647.01..68041.82 rows=1 width=194) (actual time=347.847..459.089 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=855 width=30) (actual time=0.033..57.121 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45647.01..46046.33 rows=159728 width=176) (actual time=347.720..375.287 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 32072kB
                     ->  Hash Join  (cost=410.03..31842.31 rows=159728 width=176) (actual time=3.158..214.463 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.007..99.965 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=3.145..3.145 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.026..2.730 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.006..1.474 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.018 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.005..0.005 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8) (actual time=0.010..0.016 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12) (actual time=0.007..0.014 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12) (actual time=0.006..0.011 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12) (actual time=0.004..0.005 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 463.783 ms
(41 rows)

query 3 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=318488.34..318488.37 rows=10 width=28) (actual time=2522.545..2522.546 rows=10 loops=1)
   ->  Sort  (cost=318488.34..319302.33 rows=325594 width=28) (actual time=2522.544..2522.544 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=301684.55..311452.37 rows=325594 width=28) (actual time=2503.563..2520.600 rows=11612 loops=1)
               ->  Sort  (cost=301684.55..302498.54 rows=325594 width=28) (actual time=2503.549..2504.648 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62815.23..271872.00 rows=325594 width=28) (actual time=654.548..2495.244 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=3258306 width=20) (actual time=0.461..1143.900 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60941.59..60941.59 rows=149891 width=12) (actual time=652.953..652.953 rows=146063 loops=1)
                                 ->  Hash Join  (cost=14495.18..60941.59 rows=149891 width=12) (actual time=131.728..628.643 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8599.31..44489.56 rows=724580 width=16) (actual time=76.755..338.938 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8418.16 rows=724580 width=0) (actual time=73.005..73.005 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=31030 width=4) (actual time=54.953..54.953 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=31030 width=4) (actual time=0.245..51.005 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2522.594 ms
(23 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=318488.34..318488.37 rows=10 width=28) (actual time=1988.659..1988.659 rows=10 loops=1)
   ->  Sort  (cost=318488.34..319302.33 rows=325594 width=28) (actual time=1988.659..1988.659 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=301684.55..311452.37 rows=325594 width=28) (actual time=1969.849..1986.722 rows=11612 loops=1)
               ->  Sort  (cost=301684.55..302498.54 rows=325594 width=28) (actual time=1969.836..1970.956 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62815.23..271872.00 rows=325594 width=28) (actual time=389.663..1962.325 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193582.19 rows=3258306 width=20) (actual time=0.032..925.371 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60941.59..60941.59 rows=149891 width=12) (actual time=389.399..389.399 rows=146063 loops=1)
                                 ->  Hash Join  (cost=14495.18..60941.59 rows=149891 width=12) (actual time=91.444..370.372 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8599.31..44489.56 rows=724580 width=16) (actual time=57.392..186.452 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8418.16 rows=724580 width=0) (actual time=54.054..54.054 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=31030 width=4) (actual time=34.037..34.037 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=31030 width=4) (actual time=0.008..30.684 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 1988.712 ms
(23 rows)

query 4 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70820.81..70820.82 rows=1 width=16) (actual time=1990.150..1990.151 rows=1 loops=1)
   ->  Sort  (cost=70820.81..70820.82 rows=1 width=16) (actual time=1990.148..1990.148 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=70820.79..70820.80 rows=1 width=16) (actual time=1990.122..1990.124 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=788.45..70682.49 rows=27661 width=16) (actual time=14.003..1963.246 rows=51398 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..781.53 rows=55322 width=0) (actual time=9.826..9.826 rows=55973 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.82 rows=5 width=125) (actual time=0.030..0.030 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 1990.203 ms
(15 rows)

SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70820.81..70820.82 rows=1 width=16) (actual time=339.720..339.721 rows=1 loops=1)
   ->  Sort  (cost=70820.81..70820.82 rows=1 width=16) (actual time=339.719..339.719 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=70820.79..70820.80 rows=1 width=16) (actual time=339.693..339.695 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=788.45..70682.49 rows=27661 width=16) (actual time=9.634..322.531 rows=51398 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..781.53 rows=55322 width=0) (actual time=6.392..6.392 rows=55973 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.82 rows=5 width=125) (actual time=0.004..0.004 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 339.768 ms
(15 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215679.63..215679.64 rows=1 width=42) (actual time=2420.616..2420.616 rows=1 loops=1)
   ->  Sort  (cost=215679.63..215679.70 rows=25 width=42) (actual time=2420.615..2420.615 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=215679.07..215679.51 rows=25 width=42) (actual time=2420.605..2420.606 rows=5 loops=1)
               ->  Hash Join  (cost=10125.64..215642.57 rows=7300 width=42) (actual time=102.681..2408.352 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9650.64..209618.46 rows=182537 width=54) (actual time=95.847..2293.462 rows=182435 loops=1)
                           ->  Hash Join  (cost=9650.64..41502.43 rows=45625 width=38) (actual time=94.833..490.291 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3277.61..33532.52 rows=228127 width=8) (actual time=33.280..285.001 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3220.58 rows=228127 width=0) (actual time=29.427..29.427 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=61.535..61.535 rows=29952 loops=1)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=1.011..56.426 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.417..38.963 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.586..0.586 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.581..0.585 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.302..0.302 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.273..0.273 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.271..0.272 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24) (actual time=0.036..0.039 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=6.559..6.559 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.378..5.137 rows=10000 loops=1)
 Total runtime: 2420.681 ms
(30 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215679.63..215679.64 rows=1 width=42) (actual time=546.594..546.594 rows=1 loops=1)
   ->  Sort  (cost=215679.63..215679.70 rows=25 width=42) (actual time=546.593..546.593 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=215679.07..215679.51 rows=25 width=42) (actual time=546.583..546.583 rows=5 loops=1)
               ->  Hash Join  (cost=10125.64..215642.57 rows=7300 width=42) (actual time=67.693..539.456 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9650.64..209618.46 rows=182537 width=54) (actual time=64.196..496.904 rows=182435 loops=1)
                           ->  Hash Join  (cost=9650.64..41502.43 rows=45625 width=38) (actual time=64.179..250.416 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3277.61..33532.52 rows=228127 width=8) (actual time=24.204..136.176 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3220.58 rows=228127 width=0) (actual time=20.832..20.832 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=39.958..39.958 rows=29952 loops=1)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=0.032..35.453 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.005..18.944 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.022..0.022 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.018..0.022 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.004..0.006 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24) (actual time=0.004..0.005 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.476..3.476 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.011..2.021 rows=10000 loops=1)
 Total runtime: 546.664 ms
(30 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=113324.25..113324.26 rows=1 width=16) (actual time=1383.906..1383.906 rows=1 loops=1)
   ->  Aggregate  (cost=113324.25..113324.26 rows=1 width=16) (actual time=1383.906..1383.906 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=23066.74..113021.84 rows=120960 width=16) (actual time=136.667..1323.644 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23036.50 rows=120960 width=0) (actual time=125.273..125.273 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1383.937 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=113324.25..113324.26 rows=1 width=16) (actual time=322.115..322.115 rows=1 loops=1)
   ->  Aggregate  (cost=113324.25..113324.26 rows=1 width=16) (actual time=322.114..322.114 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=23066.74..113021.84 rows=120960 width=16) (actual time=107.308..275.859 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..23036.50 rows=120960 width=0) (actual time=96.558..96.558 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 322.143 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=248123.47..248123.47 rows=1 width=72) (actual time=2548.652..2548.652 rows=1 loops=1)
   ->  Sort  (cost=248123.47..248138.17 rows=5879 width=72) (actual time=2548.651..2548.651 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=247961.80..248094.07 rows=5879 width=72) (actual time=2548.611..2548.621 rows=4 loops=1)
               ->  Hash Join  (cost=88876.55..247903.01 rows=5879 width=72) (actual time=964.072..2539.443 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=88401.55..242928.65 rows=147038 width=80) (actual time=957.117..2440.103 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32259.07..178417.85 rows=1839452 width=28) (actual time=337.702..1383.523 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31799.21 rows=1839452 width=0) (actual time=314.673..314.673 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=619.374..619.374 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=56.458..593.936 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.430..286.372 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=56.017..56.017 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.840..53.733 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.419..38.498 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.415..0.415 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.373..0.413 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.292..0.293 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.005 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.979..5.979 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.288..4.733 rows=10000 loops=1)
 Total runtime: 2548.726 ms
(30 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=248123.47..248123.47 rows=1 width=72) (actual time=1563.559..1563.559 rows=1 loops=1)
   ->  Sort  (cost=248123.47..248138.17 rows=5879 width=72) (actual time=1563.559..1563.559 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=247961.80..248094.07 rows=5879 width=72) (actual time=1563.520..1563.530 rows=4 loops=1)
               ->  Hash Join  (cost=88876.55..247903.01 rows=5879 width=72) (actual time=685.799..1557.349 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=88401.55..242928.65 rows=147038 width=80) (actual time=682.472..1500.764 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32259.07..178417.85 rows=1839452 width=28) (actual time=256.524..707.166 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31799.21 rows=1839452 width=0) (actual time=234.459..234.459 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=425.920..425.920 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=33.900..404.767 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.005..154.277 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=33.889..33.889 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.132..32.010 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.004..17.856 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.125..0.125 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.084..0.124 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.215..3.215 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.011..1.982 rows=10000 loops=1)
 Total runtime: 1563.639 ms
(30 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117329.45..117329.46 rows=1 width=46) (actual time=6356.904..6356.904 rows=1 loops=1)
   ->  Sort  (cost=117329.45..117331.29 rows=736 width=46) (actual time=6356.904..6356.904 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117300.01..117325.77 rows=736 width=46) (actual time=6356.893..6356.894 rows=2 loops=1)
               ->  Hash Join  (cost=51490.02..117281.66 rows=2447 width=46) (actual time=572.356..6346.773 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51488.46..117234.22 rows=2447 width=24) (actual time=572.148..6341.773 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51038.46..116723.04 rows=2447 width=24) (actual time=566.188..6332.613 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..65510.12 rows=39998 width=24) (actual time=2.089..5731.408 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4) (actual time=1.028..75.669 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..43.78 rows=30 width=28) (actual time=0.311..4.265 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49891.44..49891.44 rows=91762 width=8) (actual time=560.355..560.355 rows=91179 loops=1)
                                       ->  Hash Join  (cost=12964.64..49891.44 rows=91762 width=8) (actual time=114.111..542.914 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6591.60..40306.74 rows=458809 width=12) (actual time=54.382..307.810 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6476.90 rows=458809 width=0) (actual time=50.591..50.591 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=59.712..59.712 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.531..55.819 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.267..39.141 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.257..0.257 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.246..0.254 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.238..0.238 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.234..0.235 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.952..5.952 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.302..4.606 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.191..0.191 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.177..0.182 rows=25 loops=1)
 Total runtime: 6356.976 ms
(39 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117329.45..117329.46 rows=1 width=46) (actual time=457.574..457.575 rows=1 loops=1)
   ->  Sort  (cost=117329.45..117331.29 rows=736 width=46) (actual time=457.573..457.573 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117300.01..117325.77 rows=736 width=46) (actual time=457.564..457.566 rows=2 loops=1)
               ->  Hash Join  (cost=51490.02..117281.66 rows=2447 width=46) (actual time=309.470..454.831 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51488.46..117234.22 rows=2447 width=24) (actual time=309.441..453.464 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=51038.46..116723.04 rows=2447 width=24) (actual time=306.107..448.233 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..65510.12 rows=39998 width=24) (actual time=0.079..124.301 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4) (actual time=0.055..32.343 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..43.78 rows=30 width=28) (actual time=0.006..0.065 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49891.44..49891.44 rows=91762 width=8) (actual time=305.965..305.965 rows=91179 loops=1)
                                       ->  Hash Join  (cost=12964.64..49891.44 rows=91762 width=8) (actual time=80.534..292.459 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6591.60..40306.74 rows=458809 width=12) (actual time=41.577..156.635 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6476.90 rows=458809 width=0) (actual time=38.217..38.217 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=38.945..38.945 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.025..35.492 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.006..19.652 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.015..0.015 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.011..0.014 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.330..3.330 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.006..1.971 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.013 rows=25 loops=1)
 Total runtime: 457.647 ms
(39 rows)

query 9 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=137429.40..137429.40 rows=1 width=61) (actual time=17352.305..17352.305 rows=1 loops=1)
   ->  Sort  (cost=137429.40..137429.63 rows=94 width=61) (actual time=17352.304..17352.304 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=137426.34..137428.93 rows=94 width=61) (actual time=17352.213..17352.242 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..137425.64 rows=94 width=61) (actual time=4.485..16781.273 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..137328.32 rows=94 width=39) (actual time=4.008..16258.991 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..137047.67 rows=94 width=43) (actual time=3.372..15762.008 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..136760.45 rows=94 width=43) (actual time=2.303..11854.749 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..31964.66 rows=31841 width=20) (actual time=1.303..329.538 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=8081 width=4) (actual time=0.412..86.455 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.08 rows=4 width=16) (actual time=0.019..0.021 rows=4 loops=10880)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.28 rows=1 width=35) (actual time=0.040..0.262 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=325928)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 17352.361 ms
(23 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=137429.40..137429.40 rows=1 width=61) (actual time=2764.457..2764.457 rows=1 loops=1)
   ->  Sort  (cost=137429.40..137429.63 rows=94 width=61) (actual time=2764.455..2764.455 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=137426.34..137428.93 rows=94 width=61) (actual time=2764.366..2764.384 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..137425.64 rows=94 width=61) (actual time=0.102..2388.409 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..137328.32 rows=94 width=39) (actual time=0.089..2028.560 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..137047.67 rows=94 width=43) (actual time=0.076..1670.448 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..136760.45 rows=94 width=43) (actual time=0.055..743.228 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..31964.66 rows=31841 width=20) (actual time=0.036..111.426 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=8081 width=4) (actual time=0.016..51.732 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.08 rows=4 width=16) (actual time=0.004..0.005 rows=4 loops=10880)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.28 rows=1 width=35) (actual time=0.003..0.013 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30) (actual time=0.000..0.001 rows=1 loops=325928)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 2764.528 ms
(23 rows)

query 10 run 1
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245332.25..245332.30 rows=20 width=188) (actual time=2402.486..2402.489 rows=20 loops=1)
   ->  Sort  (cost=245332.25..245472.08 rows=55931 width=188) (actual time=2402.485..2402.486 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=242865.15..243843.94 rows=55931 width=188) (actual time=2376.711..2392.138 rows=38076 loops=1)
               ->  Hash Join  (cost=7828.51..241746.53 rows=55931 width=188) (actual time=102.933..2192.270 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7826.94..240975.92 rows=55931 width=166) (actual time=102.746..2163.700 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=818.94..232639.56 rows=55931 width=20) (actual time=14.432..1994.772 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=818.94..28505.31 rows=56891 width=8) (actual time=12.699..237.674 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..804.72 rows=56891 width=0) (actual time=9.417..9.417 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20) (actual time=0.029..0.030 rows=2 loops=57111)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150) (actual time=88.287..88.287 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150) (actual time=0.238..52.659 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.182..0.182 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.167..0.171 rows=25 loops=1)
 Total runtime: 2402.791 ms
(22 rows)

SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245332.25..245332.30 rows=20 width=188) (actual time=740.994..740.997 rows=20 loops=1)
   ->  Sort  (cost=245332.25..245472.08 rows=55931 width=188) (actual time=740.993..740.995 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=242865.15..243843.94 rows=55931 width=188) (actual time=715.172..730.766 rows=38076 loops=1)
               ->  Hash Join  (cost=7828.51..241746.53 rows=55931 width=188) (actual time=77.219..561.064 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7826.94..240975.92 rows=55931 width=166) (actual time=77.196..536.056 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=818.94..232639.56 rows=55931 width=20) (actual time=9.801..398.297 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=818.94..28505.31 rows=56891 width=8) (actual time=9.748..82.114 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..804.72 rows=56891 width=0) (actual time=6.547..6.547 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20) (actual time=0.004..0.005 rows=2 loops=57111)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150) (actual time=67.373..67.373 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150) (actual time=0.007..33.090 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.016 rows=25 loops=1)
 Total runtime: 741.316 ms
(22 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24055.92..24055.92 rows=1 width=16) (actual time=724.118..724.118 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=11428.97..11428.98 rows=1 width=12) (actual time=28.244..28.244 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..11349.10 rows=31946 width=12) (actual time=0.013..16.844 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.010..0.183 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.003..0.127 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12626.94..12706.80 rows=31946 width=16) (actual time=724.118..724.118 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11588.69..12467.21 rows=31946 width=16) (actual time=718.669..724.007 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11349.10 rows=31946 width=16) (actual time=1.743..664.921 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.865..5.557 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.176..0.178 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.686..5.292 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20) (actual time=0.084..1.587 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 724.187 ms
(25 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24055.92..24055.92 rows=1 width=16) (actual time=102.822..102.822 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=11428.97..11428.98 rows=1 width=12) (actual time=27.996..27.996 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..11349.10 rows=31946 width=12) (actual time=0.013..16.677 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.009..0.164 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.003..0.106 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16) (actual time=0.003..0.032 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12626.94..12706.80 rows=31946 width=16) (actual time=102.822..102.822 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11588.69..12467.21 rows=31946 width=16) (actual time=97.442..102.696 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11349.10 rows=31946 width=16) (actual time=0.049..53.091 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.030..0.601 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.013..0.015 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.015..0.534 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20) (actual time=0.007..0.118 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 102.893 ms
(25 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315438.26..315438.26 rows=1 width=27) (actual time=2158.647..2158.648 rows=1 loops=1)
   ->  Sort  (cost=315438.26..315438.26 rows=1 width=27) (actual time=2158.646..2158.646 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=315438.22..315438.25 rows=1 width=27) (actual time=2158.622..2158.623 rows=2 loops=1)
               ->  Merge Join  (cost=255585.37..315235.93 rows=26973 width=27) (actual time=1650.276..2140.108 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20) (actual time=0.745..385.255 rows=1499957 loops=1)
                     ->  Sort  (cost=255579.45..255646.88 rows=26973 width=15) (actual time=1649.446..1652.322 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..253594.34 rows=26973 width=15) (actual time=1.230..1642.938 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 2158.716 ms
(14 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315438.26..315438.26 rows=1 width=27) (actual time=1765.802..1765.802 rows=1 loops=1)
   ->  Sort  (cost=315438.26..315438.26 rows=1 width=27) (actual time=1765.802..1765.802 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=315438.22..315438.25 rows=1 width=27) (actual time=1765.779..1765.780 rows=2 loops=1)
               ->  Merge Join  (cost=255585.37..315235.93 rows=26973 width=27) (actual time=1409.329..1751.486 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20) (actual time=0.020..240.991 rows=1499957 loops=1)
                     ->  Sort  (cost=255579.45..255646.88 rows=26973 width=15) (actual time=1409.289..1411.323 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..253594.34 rows=26973 width=15) (actual time=0.116..1403.426 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 1765.858 ms
(14 rows)

query 13 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155702.34..155702.35 rows=1 width=8) (actual time=1573.042..1573.042 rows=1 loops=1)
   ->  Sort  (cost=155702.34..155702.84 rows=200 width=8) (actual time=1573.040..1573.040 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=155698.84..155701.34 rows=200 width=8) (actual time=1573.022..1573.029 rows=42 loops=1)
               ->  HashAggregate  (cost=151573.84..153448.84 rows=150000 width=8) (actual time=1524.593..1553.128 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69944.84..144149.51 rows=1484867 width=8) (actual time=857.844..1307.141 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.315..39.353 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1484867 width=8) (actual time=857.229..857.229 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1484867 width=8) (actual time=0.389..640.100 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1573.789 ms
(13 rows)

SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=155702.34..155702.35 rows=1 width=8) (actual time=1404.824..1404.824 rows=1 loops=1)
   ->  Sort  (cost=155702.34..155702.84 rows=200 width=8) (actual time=1404.823..1404.823 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=155698.84..155701.34 rows=200 width=8) (actual time=1404.804..1404.807 rows=42 loops=1)
               ->  HashAggregate  (cost=151573.84..153448.84 rows=150000 width=8) (actual time=1356.755..1385.455 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69944.84..144149.51 rows=1484867 width=8) (actual time=711.884..1140.965 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.012..21.203 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1484867 width=8) (actual time=711.534..711.534 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1484867 width=8) (actual time=0.013..507.667 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1405.588 ms
(13 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81001.65..81001.68 rows=1 width=37) (actual time=1836.924..1836.925 rows=1 loops=1)
   ->  Aggregate  (cost=81001.65..81001.68 rows=1 width=37) (actual time=1836.923..1836.923 rows=1 loops=1)
         ->  Hash Join  (cost=10039.51..80607.83 rows=78763 width=37) (actual time=108.145..1761.647 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1382.51..70375.57 rows=78763 width=20) (actual time=23.011..1598.978 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1362.82 rows=78763 width=0) (actual time=16.096..16.096 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=85.071..85.071 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.353..57.971 rows=200000 loops=1)
 Total runtime: 1836.955 ms
(11 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81001.65..81001.68 rows=1 width=37) (actual time=300.977..300.977 rows=1 loops=1)
   ->  Aggregate  (cost=81001.65..81001.68 rows=1 width=37) (actual time=300.976..300.976 rows=1 loops=1)
         ->  Hash Join  (cost=10039.51..80607.83 rows=78763 width=37) (actual time=78.328..244.062 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1382.51..70375.57 rows=78763 width=20) (actual time=16.738..127.177 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1362.82 rows=78763 width=0) (actual time=10.522..10.522 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=61.550..61.550 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.007..36.312 rows=200000 loops=1)
 Total runtime: 301.010 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252476.26..252477.44 rows=1 width=103) (actual time=1522.839..1522.839 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=125940.47..125940.48 rows=1 width=32) (actual time=218.780..218.780 rows=1 loops=1)
           ->  HashAggregate  (cost=125928.94..125935.66 rows=384 width=20) (actual time=217.046..218.220 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4042.13..124777.02 rows=230385 width=20) (actual time=33.246..83.207 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3984.54 rows=230385 width=0) (actual time=23.302..23.302 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126535.79..126987.30 rows=384 width=103) (actual time=1522.838..1522.838 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71) (actual time=0.645..4.965 rows=8449 loops=1)
         ->  Sort  (cost=126535.79..126536.75 rows=384 width=36) (actual time=1517.352..1517.352 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=126504.91..126519.31 rows=384 width=36) (actual time=1515.762..1517.345 rows=1 loops=1)
                     ->  HashAggregate  (cost=126504.91..126515.47 rows=384 width=20) (actual time=1515.761..1517.344 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4042.13..124777.02 rows=230385 width=20) (actual time=55.912..1089.881 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3984.54 rows=230385 width=0) (actual time=43.668..43.668 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1522.908 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252476.26..252477.44 rows=1 width=103) (actual time=592.430..592.431 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=125940.47..125940.48 rows=1 width=32) (actual time=220.078..220.078 rows=1 loops=1)
           ->  HashAggregate  (cost=125928.94..125935.66 rows=384 width=20) (actual time=218.331..219.513 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4042.13..124777.02 rows=230385 width=20) (actual time=33.332..83.290 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3984.54 rows=230385 width=0) (actual time=23.365..23.365 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=126535.79..126987.30 rows=384 width=103) (actual time=592.430..592.430 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71) (actual time=0.019..1.533 rows=8449 loops=1)
         ->  Sort  (cost=126535.79..126536.75 rows=384 width=36) (actual time=590.402..590.402 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=126504.91..126519.31 rows=384 width=36) (actual time=588.826..590.399 rows=1 loops=1)
                     ->  HashAggregate  (cost=126504.91..126515.47 rows=384 width=20) (actual time=588.824..590.397 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4042.13..124777.02 rows=230385 width=20) (actual time=40.641..224.663 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3984.54 rows=230385 width=0) (actual time=29.363..29.363 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 592.499 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47729.17..47729.17 rows=1 width=40) (actual time=1315.465..1315.466 rows=1 loops=1)
   ->  Sort  (cost=47729.17..47736.06 rows=2758 width=40) (actual time=1315.465..1315.465 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=47001.90..47715.38 rows=2758 width=40) (actual time=1262.560..1312.303 rows=18220 loops=1)
               ->  Sort  (cost=47001.90..47137.70 rows=54320 width=40) (actual time=1262.539..1270.241 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9851.65..42729.85 rows=54320 width=40) (actual time=100.668..496.722 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=6.205..260.385 rows=799680 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=1.071..5.865 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27572 width=40) (actual time=94.439..94.439 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27572 width=40) (actual time=0.301..88.962 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1315.536 ms
(19 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47729.17..47729.17 rows=1 width=40) (actual time=1170.352..1170.352 rows=1 loops=1)
   ->  Sort  (cost=47729.17..47736.06 rows=2758 width=40) (actual time=1170.351..1170.351 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=47001.90..47715.38 rows=2758 width=40) (actual time=1116.928..1167.190 rows=18220 loops=1)
               ->  Sort  (cost=47001.90..47137.70 rows=54320 width=40) (actual time=1116.908..1124.581 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9851.65..42729.85 rows=54320 width=40) (actual time=70.390..352.551 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=2.802..168.989 rows=799680 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=0.110..2.788 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27572 width=40) (actual time=67.566..67.566 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27572 width=40) (actual time=0.010..62.745 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1170.408 ms
(19 rows)

query 17 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=230924.25..230924.26 rows=1 width=10) (actual time=5436.210..5436.211 rows=1 loops=1)
   ->  Aggregate  (cost=230924.25..230924.26 rows=1 width=10) (actual time=5436.209..5436.209 rows=1 loops=1)
         ->  Nested Loop  (cost=215744.76..230919.17 rows=2030 width=10) (actual time=5167.201..5435.917 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.76..221457.08 rows=202 width=40) (actual time=5166.123..5321.527 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208585.23..211564.51 rows=198619 width=11) (actual time=5108.741..5252.607 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11) (actual time=0.805..711.746 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=203 width=4) (actual time=57.357..57.357 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=203 width=4) (actual time=1.181..57.257 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.39 rows=30 width=21) (actual time=0.276..0.537 rows=30 loops=208)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
 Total runtime: 5436.832 ms
(14 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=230924.25..230924.26 rows=1 width=10) (actual time=5062.629..5062.629 rows=1 loops=1)
   ->  Aggregate  (cost=230924.25..230924.26 rows=1 width=10) (actual time=5062.628..5062.628 rows=1 loops=1)
         ->  Nested Loop  (cost=215744.76..230919.17 rows=2030 width=10) (actual time=4908.606..5062.472 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.76..221457.08 rows=202 width=40) (actual time=4908.582..5057.584 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208585.23..211564.51 rows=198619 width=11) (actual time=4874.641..5012.437 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11) (actual time=0.027..533.317 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=203 width=4) (actual time=33.917..33.917 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=203 width=4) (actual time=0.133..33.853 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.39 rows=30 width=21) (actual time=0.006..0.019 rows=30 loops=208)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
 Total runtime: 5063.257 ms
(14 rows)

query 18 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=758321.61..758324.61 rows=100 width=48) (actual time=4152.974..4152.997 rows=9 loops=1)
   ->  GroupAggregate  (cost=758321.61..802832.73 rows=1483704 width=48) (actual time=4152.973..4152.994 rows=9 loops=1)
         ->  Sort  (cost=758321.61..762030.87 rows=1483704 width=48) (actual time=4152.963..4152.964 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=360973.23..576893.98 rows=1483704 width=48) (actual time=3561.578..4152.825 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11) (actual time=0.495..342.181 rows=6001215 loops=1)
                     ->  Hash  (cost=356337.59..356337.59 rows=370851 width=45) (actual time=3403.494..3403.494 rows=9 loops=1)
                           ->  Hash Join  (cost=279927.92..356337.59 rows=370851 width=45) (actual time=804.161..3403.478 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=272919.92..340521.88 rows=370851 width=26) (actual time=739.401..3338.697 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22) (actual time=1.092..302.028 rows=1201687 loops=1)
                                       ->  Materialize  (cost=272919.92..276628.43 rows=370851 width=4) (actual time=635.184..2965.323 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..268840.56 rows=370851 width=11) (actual time=635.180..2965.296 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233271.72 rows=6001215 width=11) (actual time=0.596..1585.992 rows=6001215 loops=1)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=64.747..64.747 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.273..44.969 rows=150000 loops=1)
 Total runtime: 4153.061 ms
(21 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=758321.61..758324.61 rows=100 width=48) (actual time=3414.265..3414.289 rows=9 loops=1)
   ->  GroupAggregate  (cost=758321.61..802832.73 rows=1483704 width=48) (actual time=3414.264..3414.288 rows=9 loops=1)
         ->  Sort  (cost=758321.61..762030.87 rows=1483704 width=48) (actual time=3414.254..3414.258 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=360973.23..576893.98 rows=1483704 width=48) (actual time=2808.324..3414.119 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..178579.15 rows=6001215 width=11) (actual time=0.007..360.798 rows=6001215 loops=1)
                     ->  Hash  (cost=356337.59..356337.59 rows=370851 width=45) (actual time=2646.942..2646.942 rows=9 loops=1)
                           ->  Hash Join  (cost=279927.92..356337.59 rows=370851 width=45) (actual time=609.068..2646.933 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=272919.92..340521.88 rows=370851 width=26) (actual time=562.742..2600.583 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22) (actual time=0.015..190.379 rows=1201687 loops=1)
                                       ->  Materialize  (cost=272919.92..276628.43 rows=370851 width=4) (actual time=494.711..2342.057 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..268840.56 rows=370851 width=11) (actual time=494.708..2342.043 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233271.72 rows=6001215 width=11) (actual time=0.011..994.174 rows=6001215 loops=1)
                                 ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=46.315..46.315 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.009..26.511 rows=150000 loops=1)
 Total runtime: 3414.349 ms
(21 rows)

query 19 run 1
SET
SET


 Limit  (cost=314933.67..314933.69 rows=1 width=16) (actual time=1850.118..1850.119 rows=1 loops=1)
   ->  Aggregate  (cost=314933.67..314933.69 rows=1 width=16) (actual time=1850.116..1850.116 rows=1 loops=1)
         ->  Hash Join  (cost=9157.00..314933.39 rows=111 width=16) (actual time=100.397..1849.776 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298603.45 rows=110353 width=27) (actual time=0.541..1664.578 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30) (actual time=99.815..99.815 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30) (actual time=0.736..67.991 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1850.158 ms
(11 rows)

SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=314933.67..314933.69 rows=1 width=16) (actual time=1590.459..1590.459 rows=1 loops=1)
   ->  Aggregate  (cost=314933.67..314933.69 rows=1 width=16) (actual time=1590.459..1590.459 rows=1 loops=1)
         ->  Hash Join  (cost=9157.00..314933.39 rows=111 width=16) (actual time=75.350..1590.189 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298603.45 rows=110353 width=27) (actual time=0.076..1432.493 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30) (actual time=75.246..75.246 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30) (actual time=0.009..45.422 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1590.498 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=167689.02..167689.03 rows=1 width=51) (actual time=2821.726..2821.726 rows=1 loops=1)
   ->  Sort  (cost=167689.02..167689.03 rows=1 width=51) (actual time=2821.726..2821.726 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=167685.44..167689.01 rows=1 width=51) (actual time=2785.286..2821.522 rows=196 loops=1)
               ->  Nested Loop  (cost=167685.44..167688.73 rows=1 width=55) (actual time=2779.808..2817.497 rows=4421 loops=1)
                     ->  HashAggregate  (cost=167685.44..167685.45 rows=1 width=8) (actual time=2779.177..2779.972 rows=4421 loops=1)
                           ->  Nested Loop  (cost=162106.79..167685.44 rows=1 width=8) (actual time=1797.399..2774.721 rows=5898 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=162106.79..164875.93 rows=929 width=44) (actual time=1795.716..2124.232 rows=5914 loops=1)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=155399.29..156779.21 rows=91995 width=15) (actual time=1741.081..2011.163 rows=544869 loops=1)
                                             ->  Bitmap Heap Scan on lineitem  (cost=16133.59..148499.72 rows=919942 width=15) (actual time=178.665..1229.814 rows=913487 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15903.61 rows=919942 width=0) (actual time=158.327..158.327 rows=913487 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6682.25..6682.25 rows=2020 width=4) (actual time=54.560..54.560 rows=2187 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=54.095..54.345 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.404..53.092 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.00 rows=1 width=12) (actual time=0.108..0.109 rows=1 loops=5914)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59) (actual time=0.008..0.008 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 2822.169 ms
(28 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=167689.02..167689.03 rows=1 width=51) (actual time=1288.993..1288.993 rows=1 loops=1)
   ->  Sort  (cost=167689.02..167689.03 rows=1 width=51) (actual time=1288.991..1288.991 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=167685.44..167689.01 rows=1 width=51) (actual time=1279.473..1288.832 rows=196 loops=1)
               ->  Nested Loop  (cost=167685.44..167688.73 rows=1 width=55) (actual time=1279.355..1285.827 rows=4421 loops=1)
                     ->  HashAggregate  (cost=167685.44..167685.45 rows=1 width=8) (actual time=1279.343..1279.977 rows=4421 loops=1)
                           ->  Nested Loop  (cost=162106.79..167685.44 rows=1 width=8) (actual time=983.186..1277.387 rows=5898 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Hash Join  (cost=162106.79..164875.93 rows=929 width=44) (actual time=983.164..1251.237 rows=5914 loops=1)
                                       Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=155399.29..156779.21 rows=91995 width=15) (actual time=951.501..1175.519 rows=544869 loops=1)
                                             ->  Bitmap Heap Scan on lineitem  (cost=16133.59..148499.72 rows=919942 width=15) (actual time=131.190..490.937 rows=913487 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..15903.61 rows=919942 width=0) (actual time=111.647..111.647 rows=913487 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=6682.25..6682.25 rows=2020 width=4) (actual time=31.587..31.587 rows=2187 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=31.139..31.393 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.033..30.315 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.00 rows=1 width=12) (actual time=0.004..0.004 rows=1 loops=5914)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59) (actual time=0.001..0.001 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 1289.430 ms
(28 rows)

query 21 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6372242.77..6372243.02 rows=100 width=26) (actual time=12453.146..12453.157 rows=100 loops=1)
   ->  Sort  (cost=6372242.77..6372267.14 rows=9748 width=26) (actual time=12453.146..12453.149 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=6371748.36..6371870.21 rows=9748 width=26) (actual time=12452.600..12452.676 rows=421 loops=1)
               ->  Nested Loop  (cost=236.77..6371699.62 rows=9748 width=26) (actual time=11.135..12448.661 rows=4227 loops=1)
                     ->  Hash Join  (cost=236.77..6311360.63 rows=20004 width=30) (actual time=9.836..11928.673 rows=8678 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l1  (cost=0.00..6309048.44 rows=500101 width=8) (actual time=1.149..11889.729 rows=202092 loops=1)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.86 rows=5 width=125) (actual time=0.001..0.001 rows=1 loops=3657708)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.82 rows=16 width=125) (actual time=0.001..0.001 rows=1 loops=3793296)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=231.77..231.77 rows=400 width=30) (actual time=5.671..5.671 rows=421 loops=1)
                                 ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30) (actual time=1.432..5.583 rows=421 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.155..0.158 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34) (actual time=1.273..5.346 rows=421 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.862..0.862 rows=421 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.00 rows=1 width=4) (actual time=0.059..0.060 rows=0 loops=8678)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
 Total runtime: 12453.246 ms
(29 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6372242.77..6372243.02 rows=100 width=26) (actual time=11173.809..11173.818 rows=100 loops=1)
   ->  Sort  (cost=6372242.77..6372267.14 rows=9748 width=26) (actual time=11173.808..11173.811 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=6371748.36..6371870.21 rows=9748 width=26) (actual time=11173.268..11173.354 rows=421 loops=1)
               ->  Nested Loop  (cost=236.77..6371699.62 rows=9748 width=26) (actual time=3.670..11170.873 rows=4227 loops=1)
                     ->  Hash Join  (cost=236.77..6311360.63 rows=20004 width=30) (actual time=3.653..11136.169 rows=8678 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l1  (cost=0.00..6309048.44 rows=500101 width=8) (actual time=0.123..11111.294 rows=202092 loops=1)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.86 rows=5 width=125) (actual time=0.001..0.001 rows=1 loops=3657708)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.82 rows=16 width=125) (actual time=0.001..0.001 rows=1 loops=3793296)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=231.77..231.77 rows=400 width=30) (actual time=0.919..0.919 rows=421 loops=1)
                                 ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30) (actual time=0.084..0.858 rows=421 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34) (actual time=0.073..0.801 rows=421 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.052..0.052 rows=421 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.00 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=8678)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
 Total runtime: 11173.901 ms
(29 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=258795.73..258795.74 rows=1 width=24) (actual time=844.049..844.050 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=7582.23..7582.24 rows=1 width=8) (actual time=116.930..116.930 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4693 width=8) (actual time=0.233..102.119 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=251213.49..251215.64 rows=862 width=24) (actual time=844.048..844.048 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=251191.94..251209.18 rows=862 width=24) (actual time=844.021..844.023 rows=7 loops=1)
               ->  Seq Scan on customer  (cost=0.00..251185.47 rows=862 width=24) (actual time=118.071..837.764 rows=6397 loops=1)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..27.61 rows=17 width=109) (actual time=0.033..0.033 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 844.130 ms
(15 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=258795.73..258795.74 rows=1 width=24) (actual time=212.868..212.868 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=7582.23..7582.24 rows=1 width=8) (actual time=97.649..97.650 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4693 width=8) (actual time=0.007..83.822 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=251213.49..251215.64 rows=862 width=24) (actual time=212.868..212.868 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=251191.94..251209.18 rows=862 width=24) (actual time=212.843..212.844 rows=7 loops=1)
               ->  Seq Scan on customer  (cost=0.00..251185.47 rows=862 width=24) (actual time=97.698..209.570 rows=6397 loops=1)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..27.61 rows=17 width=109) (actual time=0.003..0.003 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 212.919 ms
(15 rows)

