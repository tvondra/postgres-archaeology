query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191618.98..191619.66 rows=1 width=236) (actual time=2076.951..2077.020 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191618.98..191623.04 rows=6 width=236) (actual time=2076.950..2077.018 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191618.98..191621.85 rows=24 width=236) (actual time=2076.923..2076.993 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190618.92..190618.94 rows=6 width=236) (actual time=2068.163..2068.164 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190618.68..190618.84 rows=6 width=236) (actual time=2068.134..2068.142 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.28 rows=1482610 width=25) (actual time=0.295..508.541 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 12.312 ms
 Execution Time: 2077.375 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191618.98..191619.66 rows=1 width=236) (actual time=1867.828..1867.893 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191618.98..191623.04 rows=6 width=236) (actual time=1867.827..1867.891 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191618.98..191621.85 rows=24 width=236) (actual time=1867.801..1867.867 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190618.92..190618.94 rows=6 width=236) (actual time=1863.108..1863.109 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190618.68..190618.84 rows=6 width=236) (actual time=1863.081..1863.089 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.28 rows=1482610 width=25) (actual time=0.027..265.755 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.762 ms
 Execution Time: 1867.963 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55421.63..55421.63 rows=1 width=192) (actual time=445.465..445.551 rows=100 loops=1)
   ->  Sort  (cost=55421.63..55421.63 rows=1 width=192) (actual time=445.463..445.536 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37820.66..55421.62 rows=1 width=192) (actual time=381.540..445.159 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6438.40 rows=894 width=30) (actual time=0.605..0.872 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=372 width=30) (actual time=0.696..30.284 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30536.27..30536.27 rows=159426 width=172) (actual time=380.081..380.085 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30536.27 rows=159426 width=172) (actual time=6.856..312.513 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.462..194.525 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.381..6.384 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.660..5.875 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.283..4.262 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.368..0.369 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.355..0.365 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.171..0.175 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.175..0.176 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.168..0.170 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.038..0.038 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.032..0.036 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.026..0.035 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.025..0.031 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.022..0.023 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 18.654 ms
 Execution Time: 446.523 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55421.63..55421.63 rows=1 width=192) (actual time=271.473..271.557 rows=100 loops=1)
   ->  Sort  (cost=55421.63..55421.63 rows=1 width=192) (actual time=271.472..271.549 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37820.66..55421.62 rows=1 width=192) (actual time=237.369..271.188 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6438.40 rows=894 width=30) (actual time=0.291..0.520 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=372 width=30) (actual time=0.025..14.144 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30536.27..30536.27 rows=159426 width=172) (actual time=236.624..236.628 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30536.27 rows=159426 width=172) (actual time=2.771..174.495 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..48.965 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.759..2.762 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.036..2.285 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.009..0.689 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.024..0.026 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.018..0.024 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.752 ms
 Execution Time: 271.881 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234196.59..234196.61 rows=10 width=44) (actual time=1096.870..1098.375 rows=10 loops=1)
   ->  Sort  (cost=234196.59..234997.55 rows=320384 width=44) (actual time=1096.869..1098.372 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180101.58..227273.20 rows=320384 width=44) (actual time=1073.316..1096.043 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180101.58..218462.64 rows=320384 width=24) (actual time=1073.301..1079.591 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179101.52..179301.76 rows=80096 width=24) (actual time=1065.553..1065.834 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 647kB
                           Worker 0:  Sort Method: quicksort  Memory: 675kB
                           Worker 1:  Sort Method: quicksort  Memory: 664kB
                           Worker 2:  Sort Method: quicksort  Memory: 675kB
                           Worker 3:  Sort Method: quicksort  Memory: 686kB
                           ->  Parallel Hash Join  (cost=37914.40..172577.93 rows=80096 width=24) (actual time=213.385..1063.717 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.28 rows=824233 width=16) (actual time=0.584..781.092 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.50..37326.50 rows=47032 width=12) (actual time=209.805..209.808 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4536.11..37326.50 rows=47032 width=12) (actual time=22.651..200.738 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232752 width=16) (actual time=0.569..147.742 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12629 width=4) (actual time=21.932..21.933 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12629 width=4) (actual time=0.086..19.944 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 17.415 ms
 Execution Time: 1098.743 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234196.59..234196.61 rows=10 width=44) (actual time=462.673..465.912 rows=10 loops=1)
   ->  Sort  (cost=234196.59..234997.55 rows=320384 width=44) (actual time=462.671..465.909 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180101.58..227273.20 rows=320384 width=44) (actual time=439.002..463.512 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180101.58..218462.64 rows=320384 width=24) (actual time=438.990..447.046 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179101.52..179301.76 rows=80096 width=24) (actual time=434.544..434.818 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 599kB
                           Worker 0:  Sort Method: quicksort  Memory: 666kB
                           Worker 1:  Sort Method: quicksort  Memory: 758kB
                           Worker 2:  Sort Method: quicksort  Memory: 555kB
                           Worker 3:  Sort Method: quicksort  Memory: 769kB
                           ->  Parallel Hash Join  (cost=37914.40..172577.93 rows=80096 width=24) (actual time=102.987..433.073 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131314.28 rows=824233 width=16) (actual time=0.049..250.648 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.50..37326.50 rows=47032 width=12) (actual time=102.176..102.178 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4536.11..37326.50 rows=47032 width=12) (actual time=9.067..90.504 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232752 width=16) (actual time=0.012..57.420 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12629 width=4) (actual time=8.959..8.959 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12629 width=4) (actual time=0.015..6.392 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 0.996 ms
 Execution Time: 465.975 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29353.13..62587.26 rows=1 width=24) (actual time=3081.784..3085.137 rows=1 loops=1)
   ->  GroupAggregate  (cost=29353.13..195523.79 rows=5 width=24) (actual time=3081.782..3085.134 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29353.13..195240.94 rows=56560 width=16) (actual time=660.288..3077.031 rows=10479 loops=1)
               ->  Gather Merge  (cost=29352.69..36044.11 rows=56560 width=20) (actual time=659.533..673.710 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28352.65..28398.27 rows=18245 width=20) (actual time=652.618..653.080 rows=3612 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1449kB
                           Worker 0:  Sort Method: quicksort  Memory: 1510kB
                           Worker 1:  Sort Method: quicksort  Memory: 1462kB
                           Worker 2:  Sort Method: quicksort  Memory: 1490kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=656.67..27061.34 rows=18245 width=20) (actual time=5.235..646.315 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5617
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..642.53 rows=56560 width=0) (actual time=7.200..7.201 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.210..0.210 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 14.114 ms
 Execution Time: 3086.094 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29353.13..62587.26 rows=1 width=24) (actual time=77.107..82.547 rows=1 loops=1)
   ->  GroupAggregate  (cost=29353.13..195523.79 rows=5 width=24) (actual time=77.106..82.545 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29353.13..195240.94 rows=56560 width=16) (actual time=33.686..81.021 rows=10479 loops=1)
               ->  Gather Merge  (cost=29352.69..36044.11 rows=56560 width=20) (actual time=33.637..42.086 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28352.65..28398.27 rows=18245 width=20) (actual time=30.531..30.835 rows=3557 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1458kB
                           Worker 0:  Sort Method: quicksort  Memory: 1479kB
                           Worker 1:  Sort Method: quicksort  Memory: 1486kB
                           Worker 2:  Sort Method: quicksort  Memory: 1487kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=656.67..27061.34 rows=18245 width=20) (actual time=6.335..26.909 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5672
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..642.53 rows=56560 width=0) (actual time=5.477..5.477 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.693 ms
 Execution Time: 82.607 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83700.02..83700.02 rows=1 width=58) (actual time=2296.252..2306.727 rows=1 loops=1)
   ->  Sort  (cost=83700.02..83700.08 rows=25 width=58) (actual time=2296.251..2306.725 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83660.82..83699.90 rows=25 width=58) (actual time=2295.559..2306.713 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83660.82..83699.02 rows=75 width=58) (actual time=2295.364..2306.682 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82660.78..82690.17 rows=25 width=58) (actual time=2287.578..2288.279 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82660.78..82666.60 rows=2326 width=38) (actual time=2287.396..2287.478 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 199kB
                                 Worker 0:  Sort Method: quicksort  Memory: 194kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 193kB
                                 ->  Hash Join  (cost=7822.55..82530.71 rows=2326 width=38) (actual time=56.907..2285.693 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7349.55..81752.57 rows=58123 width=50) (actual time=52.742..2267.536 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7349.12..34902.90 rows=14531 width=38) (actual time=52.408..545.668 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2608.98..29829.78 rows=72653 width=8) (actual time=20.199..486.508 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6632
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2552.68 rows=225225 width=0) (actual time=15.905..15.906 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=32.070..32.073 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.526..29.770 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.086..24.698 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.433..0.435 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.424..0.432 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.049..0.050 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.060..0.061 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.057..0.058 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.143..0.150 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.660..3.661 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.077..2.229 rows=10000 loops=4)
 Planning Time: 22.777 ms
 Execution Time: 2306.818 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83700.02..83700.02 rows=1 width=58) (actual time=142.761..156.117 rows=1 loops=1)
   ->  Sort  (cost=83700.02..83700.08 rows=25 width=58) (actual time=142.760..156.115 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83660.82..83699.90 rows=25 width=58) (actual time=142.024..156.103 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83660.82..83699.02 rows=75 width=58) (actual time=141.831..156.074 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82660.78..82690.17 rows=25 width=58) (actual time=137.950..138.667 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82660.78..82666.60 rows=2326 width=38) (actual time=137.766..137.853 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 197kB
                                 Worker 0:  Sort Method: quicksort  Memory: 195kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 194kB
                                 ->  Hash Join  (cost=7822.55..82530.71 rows=2326 width=38) (actual time=31.366..136.977 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7349.55..81752.57 rows=58123 width=50) (actual time=28.424..126.173 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7349.12..34902.90 rows=14531 width=38) (actual time=28.400..68.625 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2608.98..29829.78 rows=72653 width=8) (actual time=16.572..43.005 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6525
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2552.68 rows=225225 width=0) (actual time=12.702..12.702 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.690..11.693 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.224..9.521 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.324 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.211..0.213 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.205..0.211 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.854..2.854 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.442 rows=10000 loops=4)
 Planning Time: 3.301 ms
 Execution Time: 156.202 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=105328.19..105328.20 rows=1 width=32) (actual time=1744.039..1750.076 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=105328.19..105328.20 rows=1 width=32) (actual time=1744.037..1750.074 rows=1 loops=1)
         ->  Gather  (cost=105327.75..105328.16 rows=4 width=32) (actual time=1739.420..1750.055 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=104327.75..104327.76 rows=1 width=32) (actual time=1732.271..1732.272 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20819.44..104184.51 rows=28648 width=12) (actual time=137.426..1713.752 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13192
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20790.79 rows=114592 width=0) (actual time=132.698..132.698 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.183 ms
 Execution Time: 1751.381 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=105328.19..105328.20 rows=1 width=32) (actual time=211.582..216.026 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=105328.19..105328.20 rows=1 width=32) (actual time=211.581..216.024 rows=1 loops=1)
         ->  Gather  (cost=105327.75..105328.16 rows=4 width=32) (actual time=207.591..216.005 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=104327.75..104327.76 rows=1 width=32) (actual time=203.709..203.710 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20819.44..104184.51 rows=28648 width=12) (actual time=115.003..196.245 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=14497
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20790.79 rows=114592 width=0) (actual time=106.134..106.134 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.497 ms
 Execution Time: 216.072 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141428.26..141586.66 rows=1 width=92) (actual time=3146.756..3147.872 rows=1 loops=1)
   ->  GroupAggregate  (cost=141428.26..1103860.45 rows=6076 width=92) (actual time=3146.754..3147.870 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141428.26..1103662.98 rows=6076 width=72) (actual time=855.302..3145.271 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32682
               ->  Nested Loop  (cost=141427.84..632136.34 rows=151905 width=76) (actual time=854.694..2595.259 rows=34041 loops=1)
                     ->  Gather Merge  (cost=141427.41..159619.77 rows=151939 width=76) (actual time=853.326..880.099 rows=34041 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140427.35..140522.32 rows=37985 width=76) (actual time=841.182..842.095 rows=7161 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 4659kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4779kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4841kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4833kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5081kB
                                 ->  Hash Join  (cost=381.77..137538.00 rows=37985 width=76) (actual time=3.818..819.803 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135065.13 rows=456372 width=24) (actual time=0.441..766.879 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.037..3.040 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.181..2.888 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.090..1.493 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.086..0.088 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.080..0.085 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.069..0.070 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.050..0.050 rows=1 loops=34041)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=34041)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.108 ms
 Execution Time: 3148.269 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141428.26..141586.66 rows=1 width=92) (actual time=514.070..515.203 rows=1 loops=1)
   ->  GroupAggregate  (cost=141428.26..1103860.45 rows=6076 width=92) (actual time=514.069..515.201 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141428.26..1103662.98 rows=6076 width=72) (actual time=340.639..514.049 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32724
               ->  Nested Loop  (cost=141427.84..632136.34 rows=151905 width=76) (actual time=340.312..438.727 rows=34083 loops=1)
                     ->  Gather Merge  (cost=141427.41..159619.77 rows=151939 width=76) (actual time=340.274..354.576 rows=34083 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140427.35..140522.32 rows=37985 width=76) (actual time=332.409..333.098 rows=7190 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 5293kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6272kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4489kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4893kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4015kB
                                 ->  Hash Join  (cost=381.77..137538.00 rows=37985 width=76) (actual time=2.194..307.749 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135065.13 rows=456372 width=24) (actual time=0.036..249.394 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.080..2.082 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.036..1.941 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..0.666 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.023..0.025 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.017..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34083)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34083)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.715 ms
 Execution Time: 515.294 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42031.74..42641.17 rows=1 width=40) (actual time=5200.677..5204.654 rows=1 loops=1)
   ->  GroupAggregate  (cost=42031.74..1508326.17 rows=2406 width=40) (actual time=5200.676..5204.652 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=42031.74..1508222.90 rows=2457 width=46) (actual time=280.497..5201.814 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14812
               ->  Nested Loop  (cost=42031.74..1507321.85 rows=2457 width=20) (actual time=280.469..5197.403 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42031.45..1500112.18 rows=2457 width=20) (actual time=280.207..5164.625 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42031.03..351722.71 rows=369974 width=24) (actual time=223.649..4102.791 rows=182893 loops=1)
                                 ->  Gather Merge  (cost=42030.60..52973.24 rows=92494 width=8) (actual time=222.538..254.116 rows=45637 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41030.56..41105.15 rows=29837 width=8) (actual time=215.762..217.215 rows=12320 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 1882kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1776kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1829kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1861kB
                                             ->  Parallel Hash Join  (cost=4740.13..38812.95 rows=29837 width=8) (actual time=23.958..211.565 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149183 width=12) (actual time=0.520..158.919 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=23.236..23.240 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.230..21.443 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.108..16.903 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.116..0.118 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.111..0.117 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.057..0.058 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.077..0.083 rows=4 loops=45637)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=182893)
                                 Index Cond: (p_partkey = lineitem.l_partkey)
                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.026..0.026 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.023 rows=25 loops=1)
 Planning Time: 22.688 ms
 Execution Time: 5204.744 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42031.74..42641.17 rows=1 width=40) (actual time=633.354..639.863 rows=1 loops=1)
   ->  GroupAggregate  (cost=42031.74..1508326.17 rows=2406 width=40) (actual time=633.352..639.861 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=42031.74..1508222.90 rows=2457 width=46) (actual time=99.901..638.742 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14804
               ->  Nested Loop  (cost=42031.74..1507321.85 rows=2457 width=20) (actual time=99.884..636.450 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42031.45..1500112.18 rows=2457 width=20) (actual time=99.868..633.362 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42031.03..351722.71 rows=369974 width=24) (actual time=98.606..282.187 rows=182942 loops=1)
                                 ->  Gather Merge  (cost=42030.60..52973.24 rows=92494 width=8) (actual time=98.562..115.516 rows=45648 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41030.56..41105.15 rows=29837 width=8) (actual time=94.217..95.085 rows=12254 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 1830kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1847kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1841kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1831kB
                                             ->  Parallel Hash Join  (cost=4740.13..38812.95 rows=29837 width=8) (actual time=11.070..90.748 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149183 width=12) (actual time=0.006..57.964 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.866..10.869 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.044..9.142 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.009..3.324 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.031..0.033 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.025..0.032 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.008 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45648)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182942)
                                 Index Cond: (p_partkey = lineitem.l_partkey)
                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.009 rows=25 loops=1)
 Planning Time: 3.645 ms
 Execution Time: 639.947 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14680.87..15743.40 rows=1 width=66) (actual time=4748.760..4751.832 rows=1 loops=1)
   ->  GroupAggregate  (cost=14680.87..65682.34 rows=48 width=66) (actual time=4748.758..4751.829 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=14680.87..65680.66 rows=48 width=57) (actual time=4747.827..4751.010 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=12555.93..65678.95 rows=48 width=57) (actual time=332.640..4729.522 rows=13629 loops=1)
                     ->  Nested Loop  (cost=12555.50..65527.68 rows=48 width=53) (actual time=331.906..2623.162 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=12555.07..14430.41 rows=16102 width=48) (actual time=330.865..336.589 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=11555.05..11571.82 rows=6709 width=48) (actual time=324.031..324.190 rows=1076 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2424kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2481kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2369kB
                                       ->  Hash Join  (cost=449.99..11128.63 rows=6709 width=48) (actual time=4.486..314.299 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..11106.47 rows=6709 width=26) (actual time=4.327..310.889 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..10640.79 rows=6733 width=18) (actual time=0.253..300.600 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=1683 width=4) (actual time=0.120..30.271 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.23 rows=4 width=14) (actual time=0.069..0.073 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.049..4.050 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.096..2.474 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.089..0.090 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.077..0.082 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.287..1.254 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.152..0.152 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 27.315 ms
 Execution Time: 4753.034 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14680.87..15743.40 rows=1 width=66) (actual time=123.142..126.817 rows=1 loops=1)
   ->  GroupAggregate  (cost=14680.87..65682.34 rows=48 width=66) (actual time=123.140..126.815 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=14680.87..65680.66 rows=48 width=57) (actual time=122.236..126.014 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=12555.93..65678.95 rows=48 width=57) (actual time=51.823..120.386 rows=13629 loops=1)
                     ->  Nested Loop  (cost=12555.50..65527.68 rows=48 width=53) (actual time=51.813..75.527 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=12555.07..14430.41 rows=16102 width=48) (actual time=51.775..56.255 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=11555.05..11571.82 rows=6709 width=48) (actual time=49.279..49.381 rows=1090 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2527kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2385kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2361kB
                                       ->  Hash Join  (cost=449.99..11128.63 rows=6709 width=48) (actual time=3.107..41.041 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..11106.47 rows=6709 width=26) (actual time=3.015..38.397 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..10640.79 rows=6733 width=18) (actual time=0.030..31.096 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=1683 width=4) (actual time=0.011..15.519 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.23 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.964..2.964 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.442 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.023 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.015 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 4.418 ms
 Execution Time: 126.905 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100783.54..100783.59 rows=20 width=202) (actual time=2148.415..2153.191 rows=20 loops=1)
   ->  Sort  (cost=100783.54..100921.80 rows=55303 width=202) (actual time=2148.414..2153.188 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98620.66..99311.95 rows=55303 width=202) (actual time=2116.705..2141.499 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6666.88..97929.37 rows=55303 width=182) (actual time=57.905..2010.094 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5666.88..91399.07 rows=17840 width=182) (actual time=50.494..2056.761 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5665.32..91342.73 rows=17840 width=160) (actual time=50.347..2046.393 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=662.07..86292.65 rows=17840 width=16) (actual time=13.839..1988.278 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=661.64..27068.66 rows=18402 width=8) (actual time=13.193..449.552 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5135
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..647.38 rows=57045 width=0) (actual time=9.207..9.207 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.103..0.107 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.017..36.018 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.093..15.487 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.070..0.071 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.059..0.062 rows=25 loops=4)
 Planning Time: 20.234 ms
 Execution Time: 2154.169 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100783.54..100783.59 rows=20 width=202) (actual time=221.746..225.673 rows=20 loops=1)
   ->  Sort  (cost=100783.54..100921.80 rows=55303 width=202) (actual time=221.745..225.670 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98620.66..99311.95 rows=55303 width=202) (actual time=189.670..213.976 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6666.88..97929.37 rows=55303 width=182) (actual time=42.958..110.651 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5666.88..91399.07 rows=17840 width=182) (actual time=39.145..146.514 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5665.32..91342.73 rows=17840 width=160) (actual time=38.989..139.972 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=662.07..86292.65 rows=17840 width=16) (actual time=10.810..98.672 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=661.64..27068.66 rows=18402 width=8) (actual time=10.749..26.618 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1978
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..647.38 rows=57045 width=0) (actual time=7.196..7.197 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.734..27.734 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.008..7.848 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=4)
 Planning Time: 1.635 ms
 Execution Time: 225.801 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16305.31..16305.31 rows=1 width=36) (actual time=695.291..695.295 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7687.66..7687.67 rows=1 width=32) (actual time=25.471..25.473 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7448.52 rows=31885 width=10) (actual time=0.052..17.664 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.046..0.271 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.217 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8617.63..8644.20 rows=10628 width=36) (actual time=695.289..695.291 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8006.51..8564.49 rows=10628 width=36) (actual time=684.814..695.150 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7448.52 rows=31885 width=14) (actual time=1.028..629.731 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.670..4.292 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.201..0.204 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.463..3.965 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.228..0.229 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.051..1.504 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 12.665 ms
 Execution Time: 696.333 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16305.31..16305.31 rows=1 width=36) (actual time=80.554..80.559 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7687.66..7687.67 rows=1 width=32) (actual time=25.820..25.823 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7448.52 rows=31885 width=10) (actual time=0.051..17.917 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.268 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.034..0.214 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8617.63..8644.20 rows=10628 width=36) (actual time=80.553..80.555 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8006.51..8564.49 rows=10628 width=36) (actual time=69.872..80.412 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7448.52 rows=31885 width=14) (actual time=0.063..26.513 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.057..0.393 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.045..0.326 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.028..0.028 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.007 ms
 Execution Time: 80.960 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147771.65..160934.53 rows=1 width=27) (actual time=2153.562..2154.556 rows=1 loops=1)
   ->  GroupAggregate  (cost=147771.65..239911.86 rows=7 width=27) (actual time=2153.561..2154.554 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147771.65..239415.59 rows=28354 width=27) (actual time=798.298..2141.695 rows=15492 loops=1)
               ->  Gather Merge  (cost=147771.22..151166.89 rows=28360 width=15) (actual time=797.320..809.273 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146771.16..146788.89 rows=7090 width=15) (actual time=787.813..788.190 rows=4066 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 467kB
                           Worker 0:  Sort Method: quicksort  Memory: 513kB
                           Worker 1:  Sort Method: quicksort  Memory: 514kB
                           Worker 2:  Sort Method: quicksort  Memory: 457kB
                           Worker 3:  Sort Method: quicksort  Memory: 463kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.70 rows=7090 width=15) (actual time=0.468..785.710 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.085..0.085 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 11.434 ms
 Execution Time: 2155.565 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147771.65..160934.53 rows=1 width=27) (actual time=407.849..408.807 rows=1 loops=1)
   ->  GroupAggregate  (cost=147771.65..239911.86 rows=7 width=27) (actual time=407.848..408.805 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147771.65..239415.59 rows=28354 width=27) (actual time=357.799..404.649 rows=15492 loops=1)
               ->  Gather Merge  (cost=147771.22..151166.89 rows=28360 width=15) (actual time=357.764..362.501 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146771.16..146788.89 rows=7090 width=15) (actual time=354.011..354.240 rows=4081 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 533kB
                           Worker 0:  Sort Method: quicksort  Memory: 429kB
                           Worker 1:  Sort Method: quicksort  Memory: 552kB
                           Worker 2:  Sort Method: quicksort  Memory: 277kB
                           Worker 3:  Sort Method: quicksort  Memory: 527kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.70 rows=7090 width=15) (actual time=0.112..351.528 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.672 ms
 Execution Time: 408.864 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1459.990..1459.993 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1459.988..1459.991 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1459.963..1459.970 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1420.326..1443.387 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=33.667..1069.474 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.850..634.866 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.451..32.452 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..15.794 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.544 ms
 Execution Time: 1461.801 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1256.351..1256.354 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1256.350..1256.352 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1256.325..1256.332 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1216.411..1239.542 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=28.575..879.680 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.016..475.520 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.142..28.143 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..12.536 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.758 ms
 Execution Time: 1257.499 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71159.78..71159.79 rows=1 width=32) (actual time=914.122..916.505 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=71159.78..71159.79 rows=1 width=32) (actual time=914.120..916.502 rows=1 loops=1)
         ->  Gather  (cost=71159.32..71159.73 rows=4 width=64) (actual time=914.101..916.487 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=70159.32..70159.33 rows=1 width=64) (actual time=900.607..900.609 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7117.21..69847.61 rows=17812 width=33) (actual time=58.470..884.175 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1143.21..63826.86 rows=17812 width=16) (actual time=21.590..831.330 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8270
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1125.40 rows=71247 width=0) (actual time=14.209..14.209 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=36.433..36.433 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14176kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.085..23.487 rows=40000 loops=5)
 Planning Time: 12.224 ms
 Execution Time: 917.116 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=71159.78..71159.79 rows=1 width=32) (actual time=111.902..115.933 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=71159.78..71159.79 rows=1 width=32) (actual time=111.900..115.930 rows=1 loops=1)
         ->  Gather  (cost=71159.32..71159.73 rows=4 width=64) (actual time=107.148..115.905 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=70159.32..70159.33 rows=1 width=64) (actual time=103.443..103.445 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7117.21..69847.61 rows=17812 width=33) (actual time=42.468..94.455 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1143.21..63826.86 rows=17812 width=16) (actual time=15.353..59.209 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8235
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1125.40 rows=71247 width=0) (actual time=8.829..8.829 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=26.399..26.399 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..7.609 rows=40000 loops=5)
 Planning Time: 0.658 ms
 Execution Time: 115.977 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239744.35..239855.81 rows=1 width=103) (actual time=1967.691..1975.407 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121178.34..121178.35 rows=1 width=32) (actual time=228.805..228.806 rows=1 loops=1)
           ->  HashAggregate  (cost=120929.09..121053.71 rows=9970 width=36) (actual time=225.618..228.230 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3550.22..118715.64 rows=221345 width=16) (actual time=28.244..117.602 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.88 rows=221345 width=0) (actual time=19.043..19.044 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118566.01..124138.84 rows=50 width=103) (actual time=1967.690..1975.403 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118565.72..124013.72 rows=50 width=36) (actual time=1967.010..1974.722 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118565.72..123340.74 rows=39880 width=36) (actual time=1710.637..1725.920 rows=41789 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117565.67..117590.59 rows=9970 width=36) (actual time=1699.030..1699.823 rows=8886 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1158kB
                           Worker 2:  Sort Method: quicksort  Memory: 1157kB
                           Worker 3:  Sort Method: quicksort  Memory: 1158kB
                           ->  Partial HashAggregate  (cost=116778.86..116903.49 rows=9970 width=36) (actual time=1691.304..1696.744 rows=9895 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3550.22..116225.50 rows=55336 width=16) (actual time=42.868..1638.348 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13143
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.88 rows=221345 width=0) (actual time=37.448..37.448 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.674..0.675 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 10.511 ms
 Execution Time: 1975.948 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=239744.35..239855.81 rows=1 width=103) (actual time=414.705..425.102 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121178.34..121178.35 rows=1 width=32) (actual time=215.045..215.046 rows=1 loops=1)
           ->  HashAggregate  (cost=120929.09..121053.71 rows=9970 width=36) (actual time=211.876..214.470 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3550.22..118715.64 rows=221345 width=16) (actual time=27.778..105.530 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.88 rows=221345 width=0) (actual time=18.749..18.750 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118566.01..124138.84 rows=50 width=103) (actual time=414.704..425.099 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118565.72..124013.72 rows=50 width=36) (actual time=414.682..425.076 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118565.72..123340.74 rows=39880 width=36) (actual time=171.558..189.442 rows=41728 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117565.67..117590.59 rows=9970 width=36) (actual time=162.099..162.905 rows=8873 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1151kB
                           Worker 0:  Sort Method: quicksort  Memory: 1156kB
                           Worker 1:  Sort Method: quicksort  Memory: 1152kB
                           Worker 2:  Sort Method: quicksort  Memory: 1161kB
                           Worker 3:  Sort Method: quicksort  Memory: 1161kB
                           ->  Partial HashAggregate  (cost=116778.86..116903.49 rows=9970 width=36) (actual time=154.270..159.834 rows=9878 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3550.22..116225.50 rows=55336 width=16) (actual time=33.036..121.120 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=11817
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3494.88 rows=221345 width=0) (actual time=26.880..26.880 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.017..0.018 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.742 ms
 Execution Time: 425.265 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26752.92..26752.92 rows=1 width=44) (actual time=273.830..274.445 rows=1 loops=1)
   ->  Sort  (cost=26752.92..26792.97 rows=16020 width=44) (actual time=273.829..274.443 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18776.03..26672.82 rows=16020 width=44) (actual time=183.542..270.145 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18776.03..25916.28 rows=59634 width=40) (actual time=183.515..232.262 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17775.97..17813.24 rows=14908 width=40) (actual time=161.549..163.418 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2892kB
                           Worker 0:  Sort Method: quicksort  Memory: 2624kB
                           Worker 1:  Sort Method: quicksort  Memory: 2385kB
                           Worker 2:  Sort Method: quicksort  Memory: 2561kB
                           Worker 3:  Sort Method: quicksort  Memory: 2594kB
                           ->  Parallel Hash Join  (cost=6686.06..16742.56 rows=14908 width=40) (actual time=33.521..99.300 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.395..55.596 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.858..6.749 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12424 width=40) (actual time=25.946..25.947 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12424 width=40) (actual time=0.252..23.325 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.851 ms
 Execution Time: 275.124 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26752.92..26752.92 rows=1 width=44) (actual time=243.125..243.527 rows=1 loops=1)
   ->  Sort  (cost=26752.92..26792.97 rows=16020 width=44) (actual time=243.124..243.525 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18776.03..26672.82 rows=16020 width=44) (actual time=153.219..239.247 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18776.03..25916.28 rows=59634 width=40) (actual time=153.195..200.872 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17775.97..17813.24 rows=14908 width=40) (actual time=136.177..137.941 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2588kB
                           Worker 0:  Sort Method: quicksort  Memory: 2322kB
                           Worker 1:  Sort Method: quicksort  Memory: 2539kB
                           Worker 2:  Sort Method: quicksort  Memory: 2835kB
                           Worker 3:  Sort Method: quicksort  Memory: 2772kB
                           ->  Parallel Hash Join  (cost=6686.06..16742.56 rows=14908 width=40) (actual time=19.473..74.228 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.099..38.943 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..3.044 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12424 width=40) (actual time=15.994..15.994 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2496kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12424 width=40) (actual time=0.014..12.254 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.783 ms
 Execution Time: 243.588 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=337890.54..337890.56 rows=1 width=32) (actual time=2340.464..2344.745 rows=1 loops=1)
   ->  Aggregate  (cost=337890.54..337890.56 rows=1 width=32) (actual time=2340.462..2344.742 rows=1 loops=1)
         ->  Merge Join  (cost=222957.19..337885.79 rows=1902 width=8) (actual time=1621.908..2344.641 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221956.32..322582.38 rows=192057 width=36) (actual time=1614.098..2318.491 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221956.32..313939.82 rows=768228 width=36) (actual time=1614.078..1805.077 rows=993705 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220956.26..221436.40 rows=192057 width=36) (actual time=1553.620..1576.272 rows=199296 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 21743kB
                                 Worker 0:  Sort Method: quicksort  Memory: 21706kB
                                 Worker 1:  Sort Method: quicksort  Memory: 21708kB
                                 Worker 2:  Sort Method: quicksort  Memory: 21732kB
                                 Worker 3:  Sort Method: quicksort  Memory: 21748kB
                                 ->  Partial HashAggregate  (cost=187049.64..204102.13 rows=192057 width=36) (actual time=1116.101..1496.802 rows=199464 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 34865kB  Disk Usage: 21280kB
                                       Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19336kB
                                       Worker 1:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19440kB
                                       Worker 2:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19656kB
                                       Worker 3:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 23328kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.42 rows=1500342 width=9) (actual time=0.146..454.590 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12816.52 rows=5941 width=21) (actual time=5.428..14.194 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12801.67 rows=5941 width=21) (actual time=5.423..13.397 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11115.91 rows=2475 width=21) (actual time=2.025..72.407 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=82 width=4) (actual time=1.300..32.537 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.73 rows=31 width=17) (actual time=0.332..0.565 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 13.999 ms
 Execution Time: 2348.717 ms
(38 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=337890.54..337890.56 rows=1 width=32) (actual time=2062.823..2067.637 rows=1 loops=1)
   ->  Aggregate  (cost=337890.54..337890.56 rows=1 width=32) (actual time=2062.822..2067.635 rows=1 loops=1)
         ->  Merge Join  (cost=222957.19..337885.79 rows=1902 width=8) (actual time=1350.038..2067.544 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221956.32..322582.38 rows=192057 width=36) (actual time=1344.169..2049.935 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221956.32..313939.82 rows=768228 width=36) (actual time=1344.151..1533.745 rows=993729 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220956.26..221436.40 rows=192057 width=36) (actual time=1304.658..1327.018 rows=199307 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 21746kB
                                 Worker 0:  Sort Method: quicksort  Memory: 21722kB
                                 Worker 1:  Sort Method: quicksort  Memory: 21699kB
                                 Worker 2:  Sort Method: quicksort  Memory: 21731kB
                                 Worker 3:  Sort Method: quicksort  Memory: 21742kB
                                 ->  Partial HashAggregate  (cost=187049.64..204102.13 rows=192057 width=36) (actual time=859.503..1250.438 rows=199469 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 34865kB  Disk Usage: 23344kB
                                       Worker 0:  Batches: 5  Memory Usage: 32817kB  Disk Usage: 20096kB
                                       Worker 1:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 17168kB
                                       Worker 2:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19488kB
                                       Worker 3:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 20048kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.42 rows=1500342 width=9) (actual time=0.060..166.951 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12816.52 rows=5941 width=21) (actual time=3.341..5.827 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12801.67 rows=5941 width=21) (actual time=3.336..5.075 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11115.91 rows=2475 width=21) (actual time=0.147..17.057 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=82 width=4) (actual time=0.129..14.294 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.73 rows=31 width=17) (actual time=0.005..0.035 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.815 ms
 Execution Time: 2071.464 ms
(38 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803619.56..803619.81 rows=100 width=71) (actual time=4520.401..4520.407 rows=9 loops=1)
   ->  Sort  (cost=803619.56..808620.70 rows=2000456 width=71) (actual time=4520.400..4520.404 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=666993.61..727163.57 rows=2000456 width=71) (actual time=4520.014..4520.366 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338899.94..559234.67 rows=2000456 width=44) (actual time=3788.198..4519.945 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331927.94..547011.33 rows=2000456 width=25) (actual time=3718.464..4450.191 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.69 rows=6001369 width=9) (actual time=0.820..328.373 rows=6001215 loops=1)
                           ->  Hash  (cost=325676.52..325676.52 rows=500114 width=24) (actual time=3522.072..3522.074 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280608.01..325676.52 rows=500114 width=24) (actual time=3163.256..3522.047 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.835..279.596 rows=1500000 loops=1)
                                       ->  Hash  (cost=274356.58..274356.58 rows=500114 width=4) (actual time=3062.993..3062.994 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269355.44 rows=500114 width=4) (actual time=653.533..3062.968 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216843.47 rows=6001369 width=9) (actual time=0.018..1658.990 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.398..69.399 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.430..43.421 rows=150000 loops=1)
 Planning Time: 18.125 ms
 Execution Time: 4521.351 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803619.56..803619.81 rows=100 width=71) (actual time=3442.209..3442.215 rows=9 loops=1)
   ->  Sort  (cost=803619.56..808620.70 rows=2000456 width=71) (actual time=3442.208..3442.212 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=666993.61..727163.57 rows=2000456 width=71) (actual time=3441.802..3442.172 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338899.94..559234.67 rows=2000456 width=44) (actual time=2701.237..3441.734 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331927.94..547011.33 rows=2000456 width=25) (actual time=2656.685..3397.161 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.69 rows=6001369 width=9) (actual time=0.009..327.530 rows=6001215 loops=1)
                           ->  Hash  (cost=325676.52..325676.52 rows=500114 width=24) (actual time=2458.671..2458.673 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280608.01..325676.52 rows=500114 width=24) (actual time=2241.978..2458.652 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..82.002 rows=1500000 loops=1)
                                       ->  Hash  (cost=274356.58..274356.58 rows=500114 width=4) (actual time=2183.219..2183.220 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269355.44 rows=500114 width=4) (actual time=461.632..2183.200 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216843.47 rows=6001369 width=9) (actual time=0.016..860.767 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.169..44.170 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.017..19.441 rows=150000 loops=1)
 Planning Time: 1.304 ms
 Execution Time: 3442.913 ms
(29 rows)

query 19 run 1
SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18255.62..18255.63 rows=1 width=32) (actual time=848.209..851.045 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18255.62..18255.63 rows=1 width=32) (actual time=848.208..851.044 rows=1 loops=1)
         ->  Gather  (cost=18255.40..18255.61 rows=2 width=32) (actual time=845.974..851.033 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17255.40..17255.41 rows=1 width=32) (actual time=840.336..840.337 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17255.04 rows=48 width=12) (actual time=30.171..840.228 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.682..28.982 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=4.274..4.799 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 15.727 ms
 Execution Time: 851.730 ms
(16 rows)

SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18255.62..18255.63 rows=1 width=32) (actual time=28.665..32.506 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18255.62..18255.63 rows=1 width=32) (actual time=28.664..32.504 rows=1 loops=1)
         ->  Gather  (cost=18255.40..18255.61 rows=2 width=32) (actual time=28.581..32.496 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17255.40..17255.41 rows=1 width=32) (actual time=26.164..26.165 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17255.04 rows=48 width=12) (actual time=0.401..26.127 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.125..17.043 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=0.047..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.906 ms
 Execution Time: 32.764 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215337.39..215337.39 rows=1 width=51) (actual time=4773.302..4773.382 rows=1 loops=1)
   ->  Sort  (cost=215337.39..215337.39 rows=1 width=51) (actual time=4773.300..4773.380 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185622.26..215337.38 rows=1 width=51) (actual time=4605.080..4773.159 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.536..3.854 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.228..0.230 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.300..2.843 rows=10000 loops=1)
               ->  Materialize  (cost=185622.26..214882.07 rows=1 width=8) (actual time=7.971..10.652 rows=4356 loops=438)
                     ->  Nested Loop  (cost=185622.26..214882.06 rows=1 width=8) (actual time=3491.259..4598.448 rows=5898 loops=1)
                           ->  Hash Join  (cost=185621.84..207906.97 rows=4894 width=44) (actual time=3490.776..4103.311 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179253.92..195421.74 rows=484538 width=40) (actual time=3458.387..4022.177 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14612.61..140842.62 rows=911334 width=13) (actual time=129.415..2932.613 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14384.77 rows=911334 width=0) (actual time=112.792..112.792 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=32.370..32.447 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=1.211..31.927 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.160..23.008 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.083..0.083 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 19.160 ms
 Execution Time: 4778.530 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215337.39..215337.39 rows=1 width=51) (actual time=1444.065..1444.149 rows=1 loops=1)
   ->  Sort  (cost=215337.39..215337.39 rows=1 width=51) (actual time=1444.063..1444.147 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185622.26..215337.38 rows=1 width=51) (actual time=1277.902..1443.964 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.025..1.712 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.012..0.612 rows=10000 loops=1)
               ->  Materialize  (cost=185622.26..214882.07 rows=1 width=8) (actual time=1.605..3.058 rows=4356 loops=438)
                     ->  Nested Loop  (cost=185622.26..214882.06 rows=1 width=8) (actual time=703.004..1274.693 rows=5898 loops=1)
                           ->  Hash Join  (cost=185621.84..207906.97 rows=4894 width=44) (actual time=702.981..1251.989 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179253.92..195421.74 rows=484538 width=40) (actual time=691.215..1202.203 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14612.61..140842.62 rows=911334 width=13) (actual time=91.044..296.078 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14384.77 rows=911334 width=0) (actual time=74.907..74.907 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.750..11.831 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.348..11.454 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.021..8.933 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.598 ms
 Execution Time: 1448.869 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194181.79..194181.79 rows=1 width=34) (actual time=1471.622..1471.752 rows=100 loops=1)
   ->  Sort  (cost=194181.79..194181.79 rows=1 width=34) (actual time=1471.621..1471.741 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194181.76..194181.78 rows=1 width=34) (actual time=1470.593..1471.328 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194181.76..194181.76 rows=1 width=26) (actual time=1470.585..1470.854 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194181.75 rows=1 width=26) (actual time=14.996..1456.652 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194178.36 rows=1 width=38) (actual time=14.975..1371.809 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194175.04 rows=1 width=34) (actual time=11.979..16.509 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193174.94 rows=1 width=34) (actual time=4.201..635.787 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.83 rows=20004 width=34) (actual time=2.899..483.059 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.28 rows=500114 width=8) (actual time=0.380..413.086 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=2.366..2.368 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.265..1.997 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.052..0.055 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.209..1.880 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.134..0.134 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.094..0.094 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 16.595 ms
 Execution Time: 1472.917 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194181.79..194181.79 rows=1 width=34) (actual time=498.190..498.288 rows=100 loops=1)
   ->  Sort  (cost=194181.79..194181.79 rows=1 width=34) (actual time=498.189..498.281 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194181.76..194181.78 rows=1 width=34) (actual time=497.134..497.864 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194181.76..194181.76 rows=1 width=26) (actual time=497.122..497.366 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194181.75 rows=1 width=26) (actual time=1.552..484.526 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194178.36 rows=1 width=38) (actual time=1.516..467.741 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194175.04 rows=1 width=34) (actual time=1.509..419.452 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193174.94 rows=1 width=34) (actual time=1.051..461.248 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.83 rows=20004 width=34) (actual time=0.774..357.709 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131314.28 rows=500114 width=8) (actual time=0.027..275.473 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.624..0.626 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.069..0.369 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.056..0.309 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.033..0.033 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.667 ms
 Execution Time: 498.389 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.19 rows=1 width=72) (actual time=164.375..166.123 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=42.461..42.538 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=42.375..42.526 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=36.896..36.897 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.114..35.533 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.95 rows=733 width=72) (actual time=164.374..166.044 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7441.62 rows=733 width=38) (actual time=68.663..165.546 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=67.679..70.761 rows=2735 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.275..22.422 rows=1539 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 753kB
                           Worker 0:  Sort Method: quicksort  Memory: 629kB
                           Worker 1:  Sort Method: quicksort  Memory: 685kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..20.172 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.034..0.034 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.001 ms
 Execution Time: 166.453 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.19 rows=1 width=72) (actual time=59.353..60.867 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.854..28.925 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=28.718..28.907 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=26.735..26.736 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.015..25.480 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.95 rows=733 width=72) (actual time=59.352..60.793 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7441.62 rows=733 width=38) (actual time=53.014..60.566 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=52.980..55.113 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.728..21.809 rows=1549 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 762kB
                           Worker 0:  Sort Method: quicksort  Memory: 650kB
                           Worker 1:  Sort Method: quicksort  Memory: 655kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..19.743 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.736 ms
 Execution Time: 60.923 ms
(30 rows)

