query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424883.95..424883.96 rows=1 width=25) (actual time=10675.107..10675.107 rows=1 loops=1)
   ->  Sort  (cost=424883.95..424883.97 rows=6 width=25) (actual time=10675.106..10675.106 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424883.76..424883.92 rows=6 width=25) (actual time=10675.066..10675.070 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.04 rows=5932768 width=25) (actual time=0.311..1207.711 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 8.668 ms
 Execution time: 10676.197 ms
(11 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424883.95..424883.96 rows=1 width=25) (actual time=10386.974..10386.974 rows=1 loops=1)
   ->  Sort  (cost=424883.95..424883.97 rows=6 width=25) (actual time=10386.973..10386.973 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424883.76..424883.92 rows=6 width=25) (actual time=10386.942..10386.947 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187573.04 rows=5932768 width=25) (actual time=0.021..1018.852 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 0.347 ms
 Execution time: 10387.027 ms
(11 rows)

query 2 run 1
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67278.90..67278.90 rows=1 width=192) (actual time=622.591..622.601 rows=100 loops=1)
   ->  Sort  (cost=67278.90..67278.90 rows=1 width=192) (actual time=622.590..622.596 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=45372.65..67278.89 rows=1 width=192) (actual time=423.572..621.994 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=835 width=30) (actual time=0.013..82.307 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=45372.20..45772.20 rows=160000 width=172) (actual time=423.124..449.707 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..31542.03 rows=160000 width=172) (actual time=5.453..307.061 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.001..185.831 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=5.447..5.447 rows=2036 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 403kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.012..4.809 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.000..3.569 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.010..0.010 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.005..0.008 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.002 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.54..18.55 rows=1 width=6) (actual time=0.115..0.115 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.54 rows=1 width=6) (actual time=0.101..0.113 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.43 rows=4 width=10) (actual time=0.095..0.110 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.76 rows=4 width=10) (actual time=0.094..0.105 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.091..0.092 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 19.050 ms
 Execution time: 627.144 ms
(50 rows)

SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67278.90..67278.90 rows=1 width=192) (actual time=381.670..381.682 rows=100 loops=1)
   ->  Sort  (cost=67278.90..67278.90 rows=1 width=192) (actual time=381.670..381.676 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=45372.65..67278.89 rows=1 width=192) (actual time=279.001..381.263 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=835 width=30) (actual time=0.014..51.240 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=45372.20..45772.20 rows=160000 width=172) (actual time=278.916..304.615 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..31542.03 rows=160000 width=172) (actual time=2.611..169.221 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.001..42.398 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=2.605..2.605 rows=2036 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 403kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.013..1.987 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.000..0.514 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.011..0.011 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.005..0.010 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.54..18.55 rows=1 width=6) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.54 rows=1 width=6) (actual time=0.009..0.015 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.43 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.76 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.449 ms
 Execution time: 385.766 ms
(50 rows)

query 3 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308397.43..308397.45 rows=10 width=24) (actual time=2740.009..2740.010 rows=10 loops=1)
   ->  Sort  (cost=308397.43..309174.51 rows=310831 width=24) (actual time=2740.009..2740.009 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=292355.55..301680.48 rows=310831 width=24) (actual time=2721.992..2738.120 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=292355.55..293132.63 rows=310831 width=24) (actual time=2721.978..2723.144 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=61129.98..263998.80 rows=310831 width=24) (actual time=826.047..2715.697 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187573.04 rows=3249991 width=16) (actual time=0.004..1178.195 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=59336.41..59336.41 rows=143486 width=12) (actual time=825.180..825.180 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=14480.88..59336.41 rows=143486 width=12) (actual time=129.474..796.042 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8639.32..43870.14 rows=727986 width=16) (actual time=76.081..509.704 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8457.32 rows=727986 width=0) (actual time=72.888..72.888 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29565 width=4) (actual time=53.318..53.318 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29565 width=4) (actual time=0.001..49.493 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 15.086 ms
 Execution time: 2740.076 ms
(30 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308397.43..308397.45 rows=10 width=24) (actual time=1993.828..1993.829 rows=10 loops=1)
   ->  Sort  (cost=308397.43..309174.51 rows=310831 width=24) (actual time=1993.827..1993.828 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=292355.55..301680.48 rows=310831 width=24) (actual time=1975.823..1991.832 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=292355.55..293132.63 rows=310831 width=24) (actual time=1975.809..1976.922 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=61129.98..263998.80 rows=310831 width=24) (actual time=339.783..1970.156 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187573.04 rows=3249991 width=16) (actual time=0.003..965.971 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=59336.41..59336.41 rows=143486 width=12) (actual time=339.550..339.550 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=14480.88..59336.41 rows=143486 width=12) (actual time=79.835..320.384 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8639.32..43870.14 rows=727986 width=16) (actual time=53.584..144.659 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8457.32 rows=727986 width=0) (actual time=50.386..50.386 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29565 width=4) (actual time=26.233..26.233 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29565 width=4) (actual time=0.001..23.042 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 0.712 ms
 Execution time: 1994.114 ms
(30 rows)

query 4 run 1
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189837.45..189837.46 rows=1 width=16) (actual time=2131.186..2131.187 rows=1 loops=1)
   ->  Sort  (cost=189837.45..189837.46 rows=1 width=16) (actual time=2131.186..2131.186 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=189837.43..189837.44 rows=1 width=16) (actual time=2131.157..2131.158 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=821.10..189552.19 rows=57048 width=16) (actual time=12.284..2108.325 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=820.67..27807.39 rows=57048 width=20) (actual time=12.210..544.871 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..806.41 rows=57048 width=0) (actual time=9.075..9.075 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.23 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 12.713 ms
 Execution time: 2131.255 ms
(18 rows)

SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189837.45..189837.46 rows=1 width=16) (actual time=197.890..197.891 rows=1 loops=1)
   ->  Sort  (cost=189837.45..189837.46 rows=1 width=16) (actual time=197.890..197.890 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=189837.43..189837.44 rows=1 width=16) (actual time=197.862..197.864 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=821.10..189552.19 rows=57048 width=16) (actual time=9.231..185.853 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=820.67..27807.39 rows=57048 width=20) (actual time=9.212..40.269 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..806.41 rows=57048 width=0) (actual time=5.711..5.711 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.23 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 0.519 ms
 Execution time: 197.934 ms
(18 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=195130.62..195130.62 rows=1 width=38) (actual time=2468.299..2468.299 rows=1 loops=1)
   ->  Sort  (cost=195130.62..195130.68 rows=25 width=38) (actual time=2468.298..2468.298 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=195130.18..195130.49 rows=25 width=38) (actual time=2468.280..2468.282 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=10090.84..195057.12 rows=7306 width=38) (actual time=97.162..2455.638 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9617.84..189033.33 rows=182591 width=50) (actual time=91.312..2342.807 rows=182435 loops=1)
                           ->  Hash Join  (cost=9617.41..40769.67 rows=45648 width=38) (actual time=91.241..772.228 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3280.38..32834.96 rows=228239 width=8) (actual time=31.537..566.762 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=26127
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3223.32 rows=228239 width=0) (actual time=28.267..28.267 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=59.676..59.676 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.023..54.665 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..38.249 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=4 width=20) (actual time=0.032..0.034 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.800..5.800 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.383 rows=10000 loops=1)
 Planning time: 26.627 ms
 Execution time: 2468.372 ms
(38 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=195130.62..195130.62 rows=1 width=38) (actual time=379.952..379.953 rows=1 loops=1)
   ->  Sort  (cost=195130.62..195130.68 rows=25 width=38) (actual time=379.950..379.950 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=195130.18..195130.49 rows=25 width=38) (actual time=379.933..379.933 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=10090.84..195057.12 rows=7306 width=38) (actual time=57.679..373.481 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9617.84..189033.33 rows=182591 width=50) (actual time=55.140..334.249 rows=182435 loops=1)
                           ->  Hash Join  (cost=9617.41..40769.67 rows=45648 width=38) (actual time=55.127..179.715 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3280.38..32834.96 rows=228239 width=8) (actual time=22.480..76.452 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=26127
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3223.32 rows=228239 width=0) (actual time=19.250..19.250 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=32.426..32.426 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.024..28.167 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..7.781 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.522..2.522 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.380 rows=10000 loops=1)
 Planning time: 2.122 ms
 Execution time: 380.019 ms
(38 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109398.38..109398.39 rows=1 width=12) (actual time=1313.779..1313.779 rows=1 loops=1)
   ->  Aggregate  (cost=109398.38..109398.39 rows=1 width=12) (actual time=1313.777..1313.777 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21225.46..108797.16 rows=120242 width=12) (actual time=135.557..1239.126 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21195.40 rows=120242 width=0) (actual time=124.247..124.247 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Planning time: 8.275 ms
 Execution time: 1313.810 ms
(9 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109398.38..109398.39 rows=1 width=12) (actual time=222.055..222.056 rows=1 loops=1)
   ->  Aggregate  (cost=109398.38..109398.39 rows=1 width=12) (actual time=222.055..222.055 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21225.46..108797.16 rows=120242 width=12) (actual time=105.905..182.352 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21195.40 rows=120242 width=0) (actual time=95.683..95.683 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Planning time: 0.316 ms
 Execution time: 222.084 ms
(9 rows)

query 7 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243151.26..243151.26 rows=1 width=68) (actual time=3384.480..3384.480 rows=1 loops=1)
   ->  Sort  (cost=243151.26..243158.84 rows=3032 width=68) (actual time=3384.478..3384.478 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=243083.04..243136.10 rows=3032 width=68) (actual time=3384.438..3384.441 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=94192.12..242992.55 rows=6033 width=68) (actual time=909.180..3374.021 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=93812.22..241806.86 rows=144977 width=46) (actual time=902.781..3341.796 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29050.32..168798.21 rows=1812526 width=24) (actual time=303.582..2300.224 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28597.19 rows=1812526 width=0) (actual time=283.372..283.372 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=63261.90..63261.90 rows=120000 width=30) (actual time=599.002..599.002 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 7174kB
                                 ->  Hash Join  (cost=5930.90..63261.90 rows=120000 width=30) (actual time=54.117..576.125 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.003..283.731 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=54.107..54.107 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 721kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.018..52.038 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..38.061 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=5.171..5.171 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 49kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.011..5.052 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..4.087 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.008 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 22.323 ms
 Execution time: 3384.558 ms
(44 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=243151.26..243151.26 rows=1 width=68) (actual time=1238.308..1238.308 rows=1 loops=1)
   ->  Sort  (cost=243151.26..243158.84 rows=3032 width=68) (actual time=1238.306..1238.306 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=243083.04..243136.10 rows=3032 width=68) (actual time=1238.266..1238.273 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=94192.12..242992.55 rows=6033 width=68) (actual time=609.208..1232.295 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=93812.22..241806.86 rows=144977 width=46) (actual time=607.161..1213.911 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29050.32..168798.21 rows=1812526 width=24) (actual time=219.975..481.692 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28597.19 rows=1812526 width=0) (actual time=200.328..200.328 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=63261.90..63261.90 rows=120000 width=30) (actual time=387.147..387.147 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 7174kB
                                 ->  Hash Join  (cost=5930.90..63261.90 rows=120000 width=30) (actual time=26.916..371.234 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..75.226 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=26.906..26.906 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 721kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.017..25.457 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..7.705 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.950..1.950 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 49kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.013..1.854 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.567 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 1.702 ms
 Execution time: 1238.618 ms
(44 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120524.37..120524.38 rows=1 width=42) (actual time=6633.024..6633.024 rows=1 loops=1)
   ->  Sort  (cost=120524.37..120526.19 rows=725 width=42) (actual time=6633.024..6633.024 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=120504.44..120520.75 rows=725 width=42) (actual time=6632.528..6632.529 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=50475.06..120456.26 rows=2409 width=42) (actual time=737.551..6623.121 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 59640
                     ->  Hash Join  (cost=50475.06..119539.52 rows=2409 width=20) (actual time=737.532..6605.311 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50027.06..119031.30 rows=2409 width=20) (actual time=732.104..6596.627 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..68830.59 rows=39997 width=20) (actual time=1.725..5828.534 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.740..75.536 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.37 rows=32 width=24) (actual time=0.323..4.339 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48897.27..48897.27 rows=90349 width=8) (actual time=727.171..727.171 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=12827.86..48897.27 rows=90349 width=8) (actual time=110.239..707.381 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6490.82..39398.01 rows=451746 width=12) (actual time=52.919..475.348 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6377.89 rows=451746 width=0) (actual time=49.678..49.678 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=57.261..57.261 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.044..53.378 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..37.309 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.038..0.038 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.027..0.034 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.407..5.407 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..4.102 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.002 rows=25 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.005 rows=25 loops=1)
 Planning time: 28.854 ms
 Execution time: 6633.112 ms
(50 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=120524.37..120524.38 rows=1 width=42) (actual time=341.044..341.045 rows=1 loops=1)
   ->  Sort  (cost=120524.37..120526.19 rows=725 width=42) (actual time=341.043..341.043 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=120504.44..120520.75 rows=725 width=42) (actual time=341.024..341.025 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=50475.06..120456.26 rows=2409 width=42) (actual time=245.392..338.394 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 59640
                     ->  Hash Join  (cost=50475.06..119539.52 rows=2409 width=20) (actual time=245.377..330.556 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50027.06..119031.30 rows=2409 width=20) (actual time=242.716..326.046 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..68830.59 rows=39997 width=20) (actual time=0.051..66.431 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.039..24.475 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.37 rows=32 width=24) (actual time=0.003..0.027 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48897.27..48897.27 rows=90349 width=8) (actual time=242.624..242.624 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=12827.86..48897.27 rows=90349 width=8) (actual time=69.328..230.887 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6490.82..39398.01 rows=451746 width=12) (actual time=38.022..108.112 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6377.89 rows=451746 width=0) (actual time=34.790..34.790 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=31.292..31.292 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.016..27.954 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..8.028 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.013..0.013 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.008..0.012 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.651..2.651 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.405 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Planning time: 2.439 ms
 Execution time: 341.126 ms
(50 rows)

query 9 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247770.33..247770.33 rows=1 width=53) (actual time=18162.134..18162.134 rows=1 loops=1)
   ->  Sort  (cost=247770.33..247770.80 rows=191 width=53) (actual time=18162.133..18162.133 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=247766.03..247769.37 rows=191 width=53) (actual time=18162.038..18162.069 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=3.30..247762.69 rows=191 width=53) (actual time=1.725..17600.865 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=3.30..247688.79 rows=191 width=31) (actual time=0.921..16304.617 rows=325928 loops=1)
                           ->  Nested Loop  (cost=2.87..247085.46 rows=191 width=31) (actual time=0.334..12425.099 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=2.58..246520.04 rows=191 width=35) (actual time=0.330..11702.293 rows=325928 loops=1)
                                       ->  Merge Join  (cost=2.15..43930.66 rows=63491 width=18) (actual time=0.079..430.722 rows=43520 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.42..8426.42 rows=16162 width=4) (actual time=0.011..103.507 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..32828.93 rows=800000 width=14) (actual time=0.004..260.027 rows=799985 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.038..0.256 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.009 rows=25 loops=1)
 Planning time: 26.385 ms
 Execution time: 18162.426 ms
(28 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247770.33..247770.33 rows=1 width=53) (actual time=3293.536..3293.537 rows=1 loops=1)
   ->  Sort  (cost=247770.33..247770.80 rows=191 width=53) (actual time=3293.536..3293.536 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=247766.03..247769.37 rows=191 width=53) (actual time=3293.438..3293.466 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=3.30..247762.69 rows=191 width=53) (actual time=0.073..2935.266 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=3.30..247688.79 rows=191 width=31) (actual time=0.055..1934.299 rows=325928 loops=1)
                           ->  Nested Loop  (cost=2.87..247085.46 rows=191 width=31) (actual time=0.040..1055.137 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=2.58..246520.04 rows=191 width=35) (actual time=0.038..639.886 rows=325928 loops=1)
                                       ->  Merge Join  (cost=2.15..43930.66 rows=63491 width=18) (actual time=0.031..240.774 rows=43520 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.42..8426.42 rows=16162 width=4) (actual time=0.013..57.979 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..32828.93 rows=800000 width=14) (actual time=0.004..127.201 rows=799985 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.002..0.008 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.005 rows=25 loops=1)
 Planning time: 3.219 ms
 Execution time: 3293.833 ms
(28 rows)

query 10 run 1
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=236462.27..236462.32 rows=20 width=182) (actual time=2324.474..2324.477 rows=20 loops=1)
   ->  Sort  (cost=236462.27..236614.60 rows=60933 width=182) (actual time=2324.472..2324.474 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=234079.20..234840.86 rows=60933 width=182) (actual time=2299.790..2314.939 rows=38076 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Nested Loop  (cost=7841.48..232555.87 rows=60933 width=182) (actual time=95.493..2123.384 rows=114347 loops=1)
                     ->  Hash Join  (cost=7841.04..37137.69 rows=60298 width=174) (actual time=94.664..661.744 rows=57111 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7839.48..36307.03 rows=60298 width=152) (actual time=94.651..645.365 rows=57111 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=867.48..27902.95 rows=60298 width=8) (actual time=12.056..484.430 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..852.41 rows=60298 width=0) (actual time=9.114..9.114 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=82.575..82.575 rows=150000 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.003..49.913 rows=150000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.23 rows=1 width=16) (actual time=0.023..0.025 rows=2 loops=57111)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_returnflag = 'R'::bpchar)
                           Rows Removed by Filter: 2
 Planning time: 18.526 ms
 Execution time: 2324.826 ms
(28 rows)

SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=236462.27..236462.32 rows=20 width=182) (actual time=534.866..534.868 rows=20 loops=1)
   ->  Sort  (cost=236462.27..236614.60 rows=60933 width=182) (actual time=534.865..534.866 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=234079.20..234840.86 rows=60933 width=182) (actual time=510.329..525.474 rows=38076 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Nested Loop  (cost=7841.48..232555.87 rows=60933 width=182) (actual time=63.292..374.715 rows=114347 loops=1)
                     ->  Hash Join  (cost=7841.04..37137.69 rows=60298 width=174) (actual time=63.260..167.352 rows=57111 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7839.48..36307.03 rows=60298 width=152) (actual time=63.247..155.821 rows=57111 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=867.48..27902.95 rows=60298 width=8) (actual time=9.000..42.246 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..852.41 rows=60298 width=0) (actual time=5.949..5.949 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=54.219..54.219 rows=150000 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.003..23.298 rows=150000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.23 rows=1 width=16) (actual time=0.002..0.003 rows=2 loops=57111)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_returnflag = 'R'::bpchar)
                           Rows Removed by Filter: 2
 Planning time: 0.969 ms
 Execution time: 535.221 ms
(28 rows)

query 11 run 1
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22984.48..22984.48 rows=1 width=14) (actual time=724.108..724.108 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10972.24..10972.25 rows=1 width=10) (actual time=29.438..29.438 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10732.23 rows=32000 width=10) (actual time=0.062..18.893 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.058..0.268 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.049..0.222 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.034..0.034 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.45 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=12012.23..12092.23 rows=32000 width=14) (actual time=724.108..724.108 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11292.23..11852.23 rows=32000 width=14) (actual time=716.436..723.964 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10732.23 rows=32000 width=14) (actual time=1.042..655.362 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.508..2.588 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.499..2.511 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.438..0.438 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.45 rows=80 width=18) (actual time=0.098..1.571 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 10.743 ms
 Execution time: 724.396 ms
(36 rows)

SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22984.48..22984.48 rows=1 width=14) (actual time=83.864..83.865 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10972.24..10972.25 rows=1 width=10) (actual time=29.310..29.310 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10732.23 rows=32000 width=10) (actual time=0.062..18.601 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.058..0.270 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.048..0.212 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.033..0.033 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.45 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=12012.23..12092.23 rows=32000 width=14) (actual time=83.864..83.864 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11292.23..11852.23 rows=32000 width=14) (actual time=76.229..83.729 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10732.23 rows=32000 width=14) (actual time=0.075..27.877 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.067..0.483 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.060..0.441 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.041..0.041 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.45 rows=80 width=18) (actual time=0.004..0.057 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.763 ms
 Execution time: 83.942 ms
(36 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309186.84..309186.84 rows=1 width=27) (actual time=2097.597..2097.598 rows=1 loops=1)
   ->  Sort  (cost=309186.84..309186.84 rows=1 width=27) (actual time=2097.597..2097.597 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=309186.82..309186.83 rows=1 width=27) (actual time=2096.687..2096.688 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=249704.49..308686.23 rows=28605 width=27) (actual time=1586.482..2078.338 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.010..390.444 rows=1499957 loops=1)
                     ->  Sort  (cost=249701.21..249772.74 rows=28610 width=15) (actual time=1586.390..1589.162 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247583.47 rows=28610 width=15) (actual time=0.691..1580.080 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 11.913 ms
 Execution time: 2097.677 ms
(17 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309186.84..309186.84 rows=1 width=27) (actual time=1657.065..1657.066 rows=1 loops=1)
   ->  Sort  (cost=309186.84..309186.84 rows=1 width=27) (actual time=1657.064..1657.064 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=309186.82..309186.83 rows=1 width=27) (actual time=1657.041..1657.041 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=249704.49..308686.23 rows=28605 width=27) (actual time=1357.606..1643.227 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..191.974 rows=1499957 loops=1)
                     ->  Sort  (cost=249701.21..249772.74 rows=28610 width=15) (actual time=1357.585..1359.578 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247583.47 rows=28610 width=15) (actual time=0.114..1351.817 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 0.505 ms
 Execution time: 1657.114 ms
(17 rows)

query 13 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96501.11..96501.11 rows=1 width=8) (actual time=2232.249..2232.250 rows=1 loops=1)
   ->  Sort  (cost=96501.11..96501.61 rows=200 width=8) (actual time=2232.247..2232.247 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=96498.11..96500.11 rows=200 width=8) (actual time=2232.225..2232.227 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=92748.11..94248.11 rows=150000 width=8) (actual time=2185.397..2212.846 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..85248.86 rows=1499850 width=8) (actual time=31.995..1715.418 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.554..637.669 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=31.430..31.430 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.388..16.721 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 12.190 ms
 Execution time: 2232.907 ms
(19 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96501.11..96501.11 rows=1 width=8) (actual time=2020.292..2020.293 rows=1 loops=1)
   ->  Sort  (cost=96501.11..96501.61 rows=200 width=8) (actual time=2020.291..2020.291 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=96498.11..96500.11 rows=200 width=8) (actual time=2020.269..2020.273 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=92748.11..94248.11 rows=150000 width=8) (actual time=1973.080..2000.882 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..85248.86 rows=1499850 width=8) (actual time=27.635..1513.065 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.009..504.763 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=27.616..27.616 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.043..13.149 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.519 ms
 Execution time: 2020.971 ms
(19 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83278.64..83278.66 rows=1 width=33) (actual time=1062.178..1062.179 rows=1 loops=1)
   ->  Aggregate  (cost=83278.64..83278.66 rows=1 width=33) (actual time=1062.177..1062.177 rows=1 loops=1)
         ->  Hash Join  (cost=9938.24..81817.51 rows=83493 width=33) (actual time=98.763..967.439 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1339.24..71548.65 rows=83493 width=16) (actual time=19.946..787.291 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1318.36 rows=83493 width=0) (actual time=14.112..14.112 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=78.747..78.747 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.004..53.126 rows=200000 loops=1)
 Planning time: 13.074 ms
 Execution time: 1062.249 ms
(14 rows)

SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83278.64..83278.66 rows=1 width=33) (actual time=218.583..218.583 rows=1 loops=1)
   ->  Aggregate  (cost=83278.64..83278.66 rows=1 width=33) (actual time=218.582..218.582 rows=1 loops=1)
         ->  Hash Join  (cost=9938.24..81817.51 rows=83493 width=33) (actual time=65.467..169.225 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1339.24..71548.65 rows=83493 width=16) (actual time=14.772..64.540 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1318.36 rows=83493 width=0) (actual time=9.260..9.260 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=50.643..50.643 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.003..26.648 rows=200000 loops=1)
 Planning time: 0.702 ms
 Execution time: 218.618 ms
(14 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244456.47..244457.68 rows=1 width=103) (actual time=1498.368..1498.368 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121382.44..121382.45 rows=1 width=32) (actual time=225.062..225.062 rows=1 loops=1)
           ->  HashAggregate  (cost=121373.16..121377.80 rows=371 width=16) (actual time=222.920..224.433 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3578.97..119140.44 rows=223272 width=16) (actual time=32.579..93.998 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3523.15 rows=223272 width=0) (actual time=23.140..23.140 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123074.02..123523.09 rows=371 width=103) (actual time=1498.368..1498.368 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.412..4.552 rows=8449 loops=1)
         ->  Sort  (cost=123073.74..123074.67 rows=371 width=36) (actual time=1493.247..1493.247 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123047.70..123057.91 rows=371 width=36) (actual time=1492.560..1493.241 rows=1 loops=1)
                     ->  HashAggregate  (cost=123047.70..123054.20 rows=371 width=16) (actual time=1492.559..1493.240 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3578.97..119140.44 rows=223272 width=16) (actual time=46.358..1044.703 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3523.15 rows=223272 width=0) (actual time=36.270..36.270 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 9.917 ms
 Execution time: 1498.440 ms
(28 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244456.47..244457.68 rows=1 width=103) (actual time=485.214..485.215 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121382.44..121382.45 rows=1 width=32) (actual time=224.535..224.535 rows=1 loops=1)
           ->  HashAggregate  (cost=121373.16..121377.80 rows=371 width=16) (actual time=222.415..223.924 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3578.97..119140.44 rows=223272 width=16) (actual time=33.347..94.374 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3523.15 rows=223272 width=0) (actual time=22.920..22.920 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123074.02..123523.09 rows=371 width=103) (actual time=485.213..485.213 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.011..1.223 rows=8449 loops=1)
         ->  Sort  (cost=123073.74..123074.67 rows=371 width=36) (actual time=483.502..483.502 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123047.70..123057.91 rows=371 width=36) (actual time=482.794..483.497 rows=1 loops=1)
                     ->  HashAggregate  (cost=123047.70..123054.20 rows=371 width=16) (actual time=482.794..483.497 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3578.97..119140.44 rows=223272 width=16) (actual time=34.298..122.586 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3523.15 rows=223272 width=0) (actual time=24.896..24.896 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.561 ms
 Execution time: 485.286 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35616.53..35616.53 rows=1 width=40) (actual time=1112.618..1112.619 rows=1 loops=1)
   ->  Sort  (cost=35616.53..35623.96 rows=2970 width=40) (actual time=1112.616..1112.616 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34842.92..35601.68 rows=2970 width=40) (actual time=1062.384..1109.853 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34842.92..34988.73 rows=58325 width=40) (actual time=1062.363..1069.573 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Merge Join  (cost=349.53..30225.96 rows=58325 width=40) (actual time=6.168..298.860 rows=117930 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..10926.42 rows=29694 width=40) (actual time=0.016..106.680 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 170508
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.141..143.588 rows=799673 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.017..5.696 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
 Planning time: 12.221 ms
 Execution time: 1112.692 ms
(24 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35616.53..35616.53 rows=1 width=40) (actual time=1055.508..1055.508 rows=1 loops=1)
   ->  Sort  (cost=35616.53..35623.96 rows=2970 width=40) (actual time=1055.507..1055.507 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34842.92..35601.68 rows=2970 width=40) (actual time=1005.205..1052.816 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34842.92..34988.73 rows=58325 width=40) (actual time=1005.186..1012.657 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Merge Join  (cost=349.53..30225.96 rows=58325 width=40) (actual time=2.196..241.443 rows=117930 loops=1)
                           Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..10926.42 rows=29694 width=40) (actual time=0.010..72.061 rows=29492 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                 Rows Removed by Filter: 170508
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.176..122.838 rows=799673 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.084..2.153 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
 Planning time: 0.586 ms
 Execution time: 1055.556 ms
(24 rows)

query 17 run 1
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=983982.18..983982.19 rows=1 width=8) (actual time=7805.685..7805.686 rows=1 loops=1)
   ->  Aggregate  (cost=983982.18..983982.19 rows=1 width=8) (actual time=7805.685..7805.685 rows=1 loops=1)
         ->  Merge Join  (cost=914121.66..983977.09 rows=2034 width=8) (actual time=4458.552..7805.439 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914120.81..961979.91 rows=190085 width=9) (actual time=4449.346..7577.372 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914120.81..929123.42 rows=6001043 width=9) (actual time=4449.318..6261.025 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111392kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.43 rows=6001043 width=9) (actual time=0.306..945.843 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..19528.78 rows=6421 width=21) (actual time=1.766..215.233 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..19512.73 rows=6421 width=21) (actual time=1.762..213.193 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=214 width=4) (actual time=0.838..67.433 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.15 rows=32 width=17) (actual time=0.433..0.692 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 13.601 ms
 Execution time: 7820.370 ms
(21 rows)

SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=983982.18..983982.19 rows=1 width=8) (actual time=7307.193..7307.193 rows=1 loops=1)
   ->  Aggregate  (cost=983982.18..983982.19 rows=1 width=8) (actual time=7307.192..7307.192 rows=1 loops=1)
         ->  Merge Join  (cost=914121.66..983977.09 rows=2034 width=8) (actual time=4185.125..7307.005 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914120.81..961979.91 rows=190085 width=9) (actual time=4177.651..7250.274 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914120.81..929123.42 rows=6001043 width=9) (actual time=4177.623..5945.621 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111392kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.43 rows=6001043 width=9) (actual time=0.028..757.741 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..19528.78 rows=6421 width=21) (actual time=0.148..45.303 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..19512.73 rows=6421 width=21) (actual time=0.146..44.302 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=214 width=4) (actual time=0.135..37.762 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.15 rows=32 width=17) (actual time=0.005..0.026 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.589 ms
 Execution time: 7321.544 ms
(21 rows)

query 18 run 1
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1110254.44..1110257.44 rows=100 width=44) (actual time=4130.857..4130.878 rows=9 loops=1)
   ->  GroupAggregate  (cost=1110254.44..1200254.44 rows=3000000 width=44) (actual time=4130.856..4130.877 rows=9 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=1110254.44..1117754.44 rows=3000000 width=44) (actual time=4130.849..4130.851 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6991.93..728178.47 rows=3000000 width=44) (actual time=995.850..4130.707 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=19.93..649956.47 rows=3000000 width=25) (actual time=933.885..4068.704 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..375833.66 rows=750000 width=24) (actual time=724.363..3270.014 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..309.463 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..298524.47 rows=1500261 width=4) (actual time=619.557..2891.679 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..279771.21 rows=1500261 width=9) (actual time=619.554..2891.660 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227262.08 rows=6001043 width=9) (actual time=0.003..1633.075 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227262.08 rows=6001043 width=9) (actual time=0.007..542.206 rows=4807580 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=61.942..61.942 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..42.571 rows=150000 loops=1)
 Planning time: 16.352 ms
 Execution time: 4130.944 ms
(25 rows)

SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1110254.44..1110257.44 rows=100 width=44) (actual time=3099.077..3099.099 rows=9 loops=1)
   ->  GroupAggregate  (cost=1110254.44..1200254.44 rows=3000000 width=44) (actual time=3099.076..3099.097 rows=9 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=1110254.44..1117754.44 rows=3000000 width=44) (actual time=3099.070..3099.071 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6991.93..728178.47 rows=3000000 width=44) (actual time=738.187..3098.939 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=19.93..649956.47 rows=3000000 width=25) (actual time=702.581..3063.297 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..375833.66 rows=750000 width=24) (actual time=493.353..2265.313 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.003..149.279 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..298524.47 rows=1500261 width=4) (actual time=436.148..2048.557 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..279771.21 rows=1500261 width=9) (actual time=436.145..2048.539 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > 313::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227262.08 rows=6001043 width=9) (actual time=0.003..825.300 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227262.08 rows=6001043 width=9) (actual time=0.006..542.927 rows=4807580 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=35.584..35.584 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..17.667 rows=150000 loops=1)
 Planning time: 0.888 ms
 Execution time: 3099.161 ms
(25 rows)

query 19 run 1
SET
SET


 Limit  (cost=36655.88..36655.89 rows=1 width=12) (actual time=701.126..701.126 rows=1 loops=1)
   ->  Aggregate  (cost=36655.88..36655.89 rows=1 width=12) (actual time=701.125..701.125 rows=1 loops=1)
         ->  Nested Loop  (cost=2.15..36655.00 rows=117 width=12) (actual time=3.450..700.856 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=487 width=30) (actual time=0.818..86.242 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Bitmap Heap Scan on lineitem  (cost=2.15..49.39 rows=1 width=21) (actual time=1.170..1.210 rows=0 loops=507)
                     Recheck Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
                     Heap Blocks: exact=15316
                     ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..2.15 rows=32 width=0) (actual time=0.247..0.247 rows=30 loops=507)
                           Index Cond: (l_partkey = part.p_partkey)
 Planning time: 13.113 ms
 Execution time: 701.166 ms
(15 rows)

SET
SET


 Limit  (cost=36655.88..36655.89 rows=1 width=12) (actual time=79.137..79.137 rows=1 loops=1)
   ->  Aggregate  (cost=36655.88..36655.89 rows=1 width=12) (actual time=79.136..79.136 rows=1 loops=1)
         ->  Nested Loop  (cost=2.15..36655.00 rows=117 width=12) (actual time=0.411..79.032 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=487 width=30) (actual time=0.277..57.648 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Bitmap Heap Scan on lineitem  (cost=2.15..49.39 rows=1 width=21) (actual time=0.038..0.041 rows=0 loops=507)
                     Recheck Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
                     Heap Blocks: exact=15316
                     ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..2.15 rows=32 width=0) (actual time=0.005..0.005 rows=30 loops=507)
                           Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.743 ms
 Execution time: 79.176 ms
(15 rows)

query 20 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=168326.29..168326.29 rows=1 width=51) (actual time=3468.451..3468.451 rows=1 loops=1)
   ->  Sort  (cost=168326.29..168326.79 rows=200 width=51) (actual time=3468.449..3468.449 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=164699.05..168325.29 rows=200 width=51) (actual time=3275.155..3468.243 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1972713
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.393..3.680 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.383..2.820 rows=10000 loops=1)
               ->  Materialize  (cost=164699.05..167839.99 rows=6 width=8) (actual time=6.752..7.618 rows=4504 loops=438)
                     ->  Hash Join  (cost=164699.05..167839.96 rows=6 width=8) (actual time=2957.357..3272.261 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  HashAggregate  (cost=147134.18..148480.28 rows=89740 width=13) (actual time=2454.223..2712.263 rows=544869 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Bitmap Heap Scan on lineitem  (cost=14382.75..140403.71 rows=897397 width=13) (actual time=163.249..1903.348 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Heap Blocks: exact=104951
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14158.40 rows=897397 width=0) (actual time=143.346..143.346 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=17326.80..17326.80 rows=15871 width=16) (actual time=503.073..503.073 rows=8748 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 411kB
                                 ->  Nested Loop  (cost=0.42..17326.80 rows=15871 width=16) (actual time=0.329..499.386 rows=8748 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4) (actual time=0.061..74.463 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.62 rows=4 width=12) (actual time=0.179..0.192 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 17.425 ms
 Execution time: 3469.143 ms
(36 rows)

SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=168326.29..168326.29 rows=1 width=51) (actual time=1320.473..1320.473 rows=1 loops=1)
   ->  Sort  (cost=168326.29..168326.79 rows=200 width=51) (actual time=1320.471..1320.471 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=164699.05..168325.29 rows=200 width=51) (actual time=1129.010..1320.284 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1972713
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.011..1.674 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.001..0.564 rows=10000 loops=1)
               ->  Materialize  (cost=164699.05..167839.99 rows=6 width=8) (actual time=1.854..2.719 rows=4504 loops=438)
                     ->  Hash Join  (cost=164699.05..167839.96 rows=6 width=8) (actual time=811.860..1126.563 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  HashAggregate  (cost=147134.18..148480.28 rows=89740 width=13) (actual time=779.368..1036.164 rows=544869 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Bitmap Heap Scan on lineitem  (cost=14382.75..140403.71 rows=897397 width=13) (actual time=115.056..306.453 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Heap Blocks: exact=104951
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14158.40 rows=897397 width=0) (actual time=96.162..96.162 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=17326.80..17326.80 rows=15871 width=16) (actual time=32.435..32.435 rows=8748 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 411kB
                                 ->  Nested Loop  (cost=0.42..17326.80 rows=15871 width=16) (actual time=0.023..31.115 rows=8748 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4) (actual time=0.018..23.214 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.62 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.340 ms
 Execution time: 1321.150 ms
(36 rows)

query 21 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=386004.09..386004.10 rows=1 width=26) (actual time=2505.599..2505.609 rows=100 loops=1)
   ->  Sort  (cost=386004.09..386004.10 rows=1 width=26) (actual time=2505.599..2505.604 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=386004.07..386004.08 rows=1 width=26) (actual time=2504.880..2504.931 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=54306.82..386004.07 rows=1 width=26) (actual time=479.856..2501.773 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=54306.38..385997.70 rows=1 width=34) (actual time=477.925..2372.805 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 19078
                           ->  Hash Join  (cost=54305.95..251372.65 rows=39208 width=38) (actual time=477.911..2089.083 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.58..196110.06 rows=80014 width=34) (actual time=5.032..1517.875 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187573.04 rows=2000348 width=8) (actual time=0.003..1257.215 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                             Rows Removed by Filter: 2207919
                                       ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=4.970..4.970 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                             ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.628..4.852 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.006 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.622..4.790 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=184
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.585..0.585 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=735150 width=4) (actual time=472.799..472.799 rows=729413 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 25644kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=735150 width=4) (actual time=0.003..369.691 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 15.984 ms
 Execution time: 2505.706 ms
(41 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=386004.09..386004.10 rows=1 width=26) (actual time=1944.263..1944.273 rows=100 loops=1)
   ->  Sort  (cost=386004.09..386004.10 rows=1 width=26) (actual time=1944.262..1944.267 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=386004.07..386004.08 rows=1 width=26) (actual time=1943.751..1943.798 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=54306.82..386004.07 rows=1 width=26) (actual time=295.014..1941.309 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=54306.38..385997.70 rows=1 width=34) (actual time=294.467..1822.396 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 19078
                           ->  Hash Join  (cost=54305.95..251372.65 rows=39208 width=38) (actual time=294.455..1673.015 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.58..196110.06 rows=80014 width=34) (actual time=0.482..1285.661 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187573.04 rows=2000348 width=8) (actual time=0.003..1039.198 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                             Rows Removed by Filter: 2207919
                                       ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.426..0.426 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                             ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.069..0.380 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.062..0.325 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=184
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.044..0.044 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=735150 width=4) (actual time=293.924..293.924 rows=729413 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 25644kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=735150 width=4) (actual time=0.002..202.740 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 1.771 ms
 Execution time: 1944.356 ms
(41 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16103.49..16103.50 rows=1 width=22) (actual time=238.834..238.834 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.42..7546.43 rows=1 width=6) (actual time=109.091..109.091 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4768 width=6) (actual time=0.006..103.070 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8557.06..8558.98 rows=766 width=22) (actual time=238.833..238.833 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8539.83..8553.23 rows=766 width=22) (actual time=238.803..238.807 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..8534.08 rows=766 width=22) (actual time=109.137..235.806 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=109.116..167.138 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.98 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 10.727 ms
 Execution time: 238.893 ms
(20 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16103.49..16103.50 rows=1 width=22) (actual time=169.855..169.855 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.42..7546.43 rows=1 width=6) (actual time=81.528..81.528 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4768 width=6) (actual time=0.007..76.108 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8557.06..8558.98 rows=766 width=22) (actual time=169.855..169.855 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8539.83..8553.23 rows=766 width=22) (actual time=169.827..169.829 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..8534.08 rows=766 width=22) (actual time=81.563..167.625 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=81.552..135.690 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.98 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.506 ms
 Execution time: 169.898 ms
(20 rows)

