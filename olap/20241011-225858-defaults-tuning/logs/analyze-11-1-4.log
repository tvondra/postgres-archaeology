query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191611.96..191612.64 rows=1 width=236) (actual time=2081.098..2081.167 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191611.96..191616.02 rows=6 width=236) (actual time=2081.097..2081.166 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191611.96..191614.84 rows=24 width=236) (actual time=2081.061..2081.136 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190611.91..190611.92 rows=6 width=236) (actual time=2073.152..2073.153 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190611.66..190611.83 rows=6 width=236) (actual time=2073.112..2073.120 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.98 rows=1482442 width=25) (actual time=0.134..469.203 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 12.931 ms
 Execution Time: 2082.917 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191611.96..191612.64 rows=1 width=236) (actual time=1877.253..1878.019 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191611.96..191616.02 rows=6 width=236) (actual time=1877.252..1878.017 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191611.96..191614.84 rows=24 width=236) (actual time=1877.193..1877.981 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190611.91..190611.92 rows=6 width=236) (actual time=1873.538..1873.539 rows=3 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190611.66..190611.83 rows=6 width=236) (actual time=1873.500..1873.508 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.98 rows=1482442 width=25) (actual time=0.029..285.555 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.579 ms
 Execution Time: 1878.318 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54883.24..54883.25 rows=1 width=192) (actual time=518.040..518.125 rows=100 loops=1)
   ->  Sort  (cost=54883.24..54883.25 rows=1 width=192) (actual time=518.039..518.117 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..54883.23 rows=1 width=192) (actual time=383.522..517.706 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6432.20 rows=832 width=30) (actual time=0.756..1.113 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=347 width=30) (actual time=0.320..35.727 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=382.009..382.013 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=7.051..313.969 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.453..194.268 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.584..6.587 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.640..6.080 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.258..4.437 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.374..0.375 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.362..0.372 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.178..0.181 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.177..0.177 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.171..0.172 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.092..0.093 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.084..0.090 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.075..0.088 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.074..0.083 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.071..0.073 rows=4 loops=1288)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 17.701 ms
 Execution Time: 519.560 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54883.24..54883.25 rows=1 width=192) (actual time=270.607..270.691 rows=100 loops=1)
   ->  Sort  (cost=54883.24..54883.25 rows=1 width=192) (actual time=270.606..270.677 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=37849.01..54883.23 rows=1 width=192) (actual time=236.309..270.323 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6432.20 rows=832 width=30) (actual time=0.504..0.735 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=347 width=30) (actual time=0.026..13.643 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=235.315..235.318 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.681..173.728 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.006..47.355 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.668..2.670 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.032..2.206 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.010..0.630 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.019..0.020 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.013..0.019 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.638 ms
 Execution Time: 270.796 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235591.51..235591.54 rows=10 width=44) (actual time=1115.010..1116.568 rows=10 loops=1)
   ->  Sort  (cost=235591.51..236392.72 rows=320484 width=44) (actual time=1115.009..1116.566 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=180077.50..228665.97 rows=320484 width=44) (actual time=1097.324..1114.074 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180077.50..220653.87 rows=320484 width=44) (actual time=1097.319..1105.554 rows=12052 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=179077.45..181481.08 rows=80121 width=44) (actual time=1088.285..1092.191 rows=2410 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=179077.45..179277.75 rows=80121 width=24) (actual time=1088.264..1088.540 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 719kB
                                 Worker 0:  Sort Method: quicksort  Memory: 669kB
                                 Worker 1:  Sort Method: quicksort  Memory: 617kB
                                 Worker 2:  Sort Method: quicksort  Memory: 635kB
                                 Worker 3:  Sort Method: quicksort  Memory: 708kB
                                 ->  Parallel Hash Join  (cost=37927.49..172551.63 rows=80121 width=24) (actual time=248.446..1086.162 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.98 rows=813788 width=16) (actual time=0.634..771.054 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37331.88..37331.88 rows=47649 width=12) (actual time=244.812..244.814 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 9024kB
                                             ->  Parallel Hash Join  (cost=4537.02..37331.88 rows=47649 width=12) (actual time=21.547..235.804 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234456 width=16) (actual time=0.273..184.581 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12702 width=4) (actual time=21.165..21.165 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12702 width=4) (actual time=0.096..19.603 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 17.392 ms
 Execution Time: 1117.460 ms
(37 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235591.51..235591.54 rows=10 width=44) (actual time=461.067..466.041 rows=10 loops=1)
   ->  Sort  (cost=235591.51..236392.72 rows=320484 width=44) (actual time=461.066..466.039 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=180077.50..228665.97 rows=320484 width=44) (actual time=444.834..463.601 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180077.50..220653.87 rows=320484 width=44) (actual time=444.828..455.065 rows=12054 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=179077.45..181481.08 rows=80121 width=44) (actual time=439.849..443.712 rows=2411 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=179077.45..179277.75 rows=80121 width=24) (actual time=439.834..440.109 rows=6107 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 536kB
                                 Worker 0:  Sort Method: quicksort  Memory: 710kB
                                 Worker 1:  Sort Method: quicksort  Memory: 747kB
                                 Worker 2:  Sort Method: quicksort  Memory: 735kB
                                 Worker 3:  Sort Method: quicksort  Memory: 620kB
                                 ->  Parallel Hash Join  (cost=37927.49..172551.63 rows=80121 width=24) (actual time=99.683..438.154 rows=6107 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.98 rows=813788 width=16) (actual time=0.268..262.992 rows=652375 loops=5)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 547868
                                       ->  Parallel Hash  (cost=37331.88..37331.88 rows=47649 width=12) (actual time=98.585..98.588 rows=29213 loops=5)
                                             Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                             ->  Parallel Hash Join  (cost=4537.02..37331.88 rows=47649 width=12) (actual time=9.514..87.927 rows=29213 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=234456 width=16) (actual time=0.014..51.921 rows=144455 loops=5)
                                                         Filter: (o_orderdate < '1995-03-07'::date)
                                                         Rows Removed by Filter: 155545
                                                   ->  Parallel Hash  (cost=4378.25..4378.25 rows=12702 width=4) (actual time=8.443..8.444 rows=6028 loops=5)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12702 width=4) (actual time=0.010..6.350 rows=6028 loops=5)
                                                               Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                               Rows Removed by Filter: 23972
 Planning Time: 1.092 ms
 Execution Time: 466.108 ms
(37 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79404.56..79404.94 rows=1 width=24) (actual time=2115.328..2125.391 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79404.56..79406.46 rows=5 width=24) (actual time=2115.327..2125.389 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=79404.56..79406.34 rows=15 width=24) (actual time=2115.319..2125.383 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=78404.52..78404.53 rows=5 width=24) (actual time=2107.702..2107.703 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=78404.41..78404.46 rows=5 width=24) (actual time=2107.683..2107.685 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=806.30..78314.02 rows=18078 width=16) (actual time=7.901..2098.089 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=805.87..27208.04 rows=18078 width=20) (actual time=7.540..239.714 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5895
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..791.86 rows=56043 width=0) (actual time=10.922..10.922 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.132..0.132 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 13.903 ms
 Execution Time: 2126.372 ms
(26 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79404.56..79404.94 rows=1 width=24) (actual time=94.156..107.859 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=79404.56..79406.46 rows=5 width=24) (actual time=94.155..107.857 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=79404.56..79406.34 rows=15 width=24) (actual time=94.149..107.852 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Sort  (cost=78404.52..78404.53 rows=5 width=24) (actual time=90.834..90.836 rows=4 loops=4)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=78404.41..78404.46 rows=5 width=24) (actual time=90.814..90.816 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=806.30..78314.02 rows=18078 width=16) (actual time=7.432..86.767 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=805.87..27208.04 rows=18078 width=20) (actual time=7.406..25.937 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5804
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..791.86 rows=56043 width=0) (actual time=6.712..6.712 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 0.609 ms
 Execution Time: 107.926 ms
(26 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85673.39..85673.39 rows=1 width=58) (actual time=2450.645..2460.610 rows=1 loops=1)
   ->  Sort  (cost=85673.39..85673.45 rows=25 width=58) (actual time=2450.643..2460.608 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=85633.71..85673.26 rows=25 width=58) (actual time=2449.930..2460.596 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=85633.71..85672.39 rows=75 width=58) (actual time=2449.746..2460.574 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=84633.67..84663.54 rows=25 width=58) (actual time=2443.281..2443.953 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=84633.67..84639.58 rows=2364 width=38) (actual time=2443.112..2443.191 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 194kB
                                 Worker 0:  Sort Method: quicksort  Memory: 199kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 193kB
                                 ->  Hash Join  (cost=8521.33..84501.21 rows=2364 width=38) (actual time=63.213..2441.373 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=8048.33..83716.35 rows=59401 width=50) (actual time=59.068..2422.629 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=8047.90..35632.99 rows=14850 width=38) (actual time=58.720..259.637 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3307.76..30552.53 rows=74251 width=8) (actual time=30.379..205.478 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6455
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3250.22 rows=230179 width=0) (actual time=26.342..26.343 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=27.891..27.894 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.174..25.557 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.073..20.846 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.096..0.098 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.090..0.096 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.039..0.041 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.179..0.189 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.487..3.488 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.070..2.109 rows=10000 loops=4)
 Planning Time: 24.179 ms
 Execution Time: 2461.377 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85673.39..85673.39 rows=1 width=58) (actual time=151.330..165.198 rows=1 loops=1)
   ->  Sort  (cost=85673.39..85673.45 rows=25 width=58) (actual time=151.329..165.196 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=85633.71..85673.26 rows=25 width=58) (actual time=150.652..165.185 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=85633.71..85672.39 rows=75 width=58) (actual time=150.482..165.164 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=84633.67..84663.54 rows=25 width=58) (actual time=146.819..147.485 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=84633.67..84639.58 rows=2364 width=38) (actual time=146.651..146.732 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 190kB
                                 Worker 0:  Sort Method: quicksort  Memory: 195kB
                                 Worker 1:  Sort Method: quicksort  Memory: 200kB
                                 Worker 2:  Sort Method: quicksort  Memory: 198kB
                                 ->  Hash Join  (cost=8521.33..84501.21 rows=2364 width=38) (actual time=35.126..145.855 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=8048.33..83716.35 rows=59401 width=50) (actual time=32.257..133.932 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=8047.90..35632.99 rows=14850 width=38) (actual time=32.233..71.867 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3307.76..30552.53 rows=74251 width=8) (actual time=20.859..46.550 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6577
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3250.22 rows=230179 width=0) (actual time=16.904..16.904 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.055..11.058 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.035..9.103 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.005..3.283 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.026..0.027 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.020..0.025 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.748..2.749 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.373 rows=10000 loops=4)
 Planning Time: 3.139 ms
 Execution Time: 165.283 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108124.39..108124.40 rows=1 width=32) (actual time=1069.215..1073.398 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=108124.39..108124.40 rows=1 width=32) (actual time=1069.213..1073.395 rows=1 loops=1)
         ->  Gather  (cost=108123.96..108124.37 rows=4 width=32) (actual time=1065.244..1073.379 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=107123.96..107123.97 rows=1 width=32) (actual time=1057.377..1057.378 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21400.76..106973.55 rows=30081 width=12) (actual time=133.272..1038.969 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13460
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21370.67 rows=120323 width=0) (actual time=128.348..128.348 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.352 ms
 Execution Time: 1074.175 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108124.39..108124.40 rows=1 width=32) (actual time=202.963..213.196 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=108124.39..108124.40 rows=1 width=32) (actual time=202.961..213.194 rows=1 loops=1)
         ->  Gather  (cost=108123.96..108124.37 rows=4 width=32) (actual time=202.618..213.185 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=107123.96..107123.97 rows=1 width=32) (actual time=199.070..199.071 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21400.76..106973.55 rows=30081 width=12) (actual time=103.520..190.868 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13840
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21370.67 rows=120323 width=0) (actual time=94.582..94.582 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.405 ms
 Execution Time: 213.238 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163952.94..163953.10 rows=1 width=92) (actual time=1456.131..1471.594 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163952.94..164881.25 rows=6005 width=92) (actual time=1456.129..1471.592 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163952.94..164703.53 rows=5811 width=92) (actual time=1455.946..1471.582 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162952.90..163020.70 rows=1937 width=92) (actual time=1449.276..1449.612 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162952.90..162957.74 rows=1937 width=72) (actual time=1449.091..1449.137 rows=952 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 247kB
                           Worker 0:  Sort Method: quicksort  Memory: 255kB
                           Worker 1:  Sort Method: quicksort  Memory: 253kB
                           Worker 2:  Sort Method: quicksort  Memory: 245kB
                           ->  Hash Join  (cost=4843.31..162847.15 rows=1937 width=72) (actual time=34.163..1447.568 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162222.40 rows=46796 width=46) (actual time=27.628..1432.564 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=27.052..274.657 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.224..171.698 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=26.715..26.717 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.097..25.799 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.076..21.740 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.012 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.038..0.038 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.880..2.881 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.138..2.763 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.084..1.502 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.051..0.052 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.047..0.049 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 22.554 ms
 Execution Time: 1472.409 ms
(48 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=163952.94..163953.10 rows=1 width=92) (actual time=255.485..274.641 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=163952.94..164881.25 rows=6005 width=92) (actual time=255.484..274.639 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=163952.94..164703.53 rows=5811 width=92) (actual time=255.311..274.630 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=162952.90..163020.70 rows=1937 width=92) (actual time=251.220..251.537 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=162952.90..162957.74 rows=1937 width=72) (actual time=251.037..251.078 rows=948 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 251kB
                           Worker 0:  Sort Method: quicksort  Memory: 248kB
                           Worker 1:  Sort Method: quicksort  Memory: 250kB
                           Worker 2:  Sort Method: quicksort  Memory: 251kB
                           ->  Hash Join  (cost=4843.31..162847.15 rows=1937 width=72) (actual time=13.259..250.094 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=4478.21..162222.40 rows=46796 width=46) (actual time=9.641..239.046 rows=36276 loops=4)
                                       ->  Parallel Hash Join  (cost=4477.77..37423.29 rows=38710 width=30) (actual time=9.601..104.631 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.006..31.961 rows=375000 loops=4)
                                             ->  Parallel Hash  (cost=4415.27..4415.27 rows=5000 width=30) (actual time=9.486..9.487 rows=2974 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 960kB
                                                   ->  Hash Join  (cost=1.40..4415.27 rows=5000 width=30) (actual time=0.026..8.365 rows=2974 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.078 rows=37500 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=3.445..3.446 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.040..3.342 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.018..1.645 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.018..0.019 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.015..0.016 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.538 ms
 Execution Time: 274.736 ms
(48 rows)

query 8 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70208.72..70208.87 rows=1 width=40) (actual time=2240.155..2250.713 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70208.72..70563.29 rows=2406 width=40) (actual time=2240.154..2250.712 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70208.72..70483.98 rows=2014 width=72) (actual time=2239.961..2250.702 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=69208.70..69251.49 rows=1007 width=72) (actual time=2234.132..2234.325 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69208.70..69211.21 rows=1007 width=46) (actual time=2233.930..2233.972 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 91kB
                           Worker 0:  Sort Method: quicksort  Memory: 92kB
                           Worker 1:  Sort Method: quicksort  Memory: 85kB
                           ->  Hash Join  (cost=64645.89..69158.47 rows=1007 width=46) (actual time=2194.805..2233.662 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64644.33..69148.78 rows=1007 width=20) (actual time=2194.045..2232.508 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=64196.33..68698.13 rows=1012 width=20) (actual time=2190.553..2228.702 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=64193.82..68666.52 rows=5061 width=24) (actual time=2190.065..2228.007 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.367..31.003 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=64144.85..64144.85 rows=3918 width=24) (actual time=2189.535..2189.537 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=30181.65..64144.85 rows=3918 width=24) (actual time=1950.176..2187.342 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148748 width=12) (actual time=0.278..210.745 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=29975.82..29975.82 rows=16466 width=20) (actual time=1949.697..1949.698 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..29975.82 rows=16466 width=20) (actual time=0.690..1936.301 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=549 width=4) (actual time=0.285..22.135 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.93 rows=31 width=24) (actual time=0.319..4.330 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.239..0.241 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.234..0.239 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.066..0.067 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.477..3.478 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.086..2.285 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.085..0.086 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.067..0.078 rows=25 loops=3)
 Planning Time: 26.473 ms
 Execution Time: 2251.168 ms
(55 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70208.72..70208.87 rows=1 width=40) (actual time=145.616..159.082 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70208.72..70563.29 rows=2406 width=40) (actual time=145.615..159.080 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=70208.72..70483.98 rows=2014 width=72) (actual time=145.409..159.070 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=69208.70..69251.49 rows=1007 width=72) (actual time=142.692..142.885 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=69208.70..69211.21 rows=1007 width=46) (actual time=142.495..142.538 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 89kB
                           Worker 0:  Sort Method: quicksort  Memory: 92kB
                           Worker 1:  Sort Method: quicksort  Memory: 87kB
                           ->  Hash Join  (cost=64645.89..69158.47 rows=1007 width=46) (actual time=130.067..142.312 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=64644.33..69148.78 rows=1007 width=20) (actual time=130.012..141.957 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=64196.33..68698.13 rows=1012 width=20) (actual time=127.348..139.019 rows=828 loops=3)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Parallel Hash Join  (cost=64193.82..68666.52 rows=5061 width=24) (actual time=127.090..138.464 rows=4032 loops=3)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.903 rows=50000 loops=3)
                                                   ->  Parallel Hash  (cost=64144.85..64144.85 rows=3918 width=24) (actual time=126.917..126.920 rows=4032 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 896kB
                                                         ->  Parallel Hash Join  (cost=30181.65..64144.85 rows=3918 width=24) (actual time=36.164..125.369 rows=4032 loops=3)
                                                               Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                               ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148748 width=12) (actual time=0.016..68.236 rows=152421 loops=3)
                                                                     Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                     Rows Removed by Filter: 347579
                                                               ->  Parallel Hash  (cost=29975.82..29975.82 rows=16466 width=20) (actual time=36.034..36.035 rows=13231 loops=3)
                                                                     Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                                     ->  Nested Loop  (cost=0.43..29975.82 rows=16466 width=20) (actual time=0.055..31.898 rows=13231 loops=3)
                                                                           ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=549 width=4) (actual time=0.036..8.494 rows=440 loops=3)
                                                                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                 Rows Removed by Filter: 66227
                                                                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.93 rows=31 width=24) (actual time=0.004..0.048 rows=30 loops=1320)
                                                                                 Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.196..0.197 rows=5 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.191..0.196 rows=5 loops=3)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=3)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=3)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.646..2.647 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.467 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.023 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.018 rows=25 loops=3)
 Planning Time: 3.529 ms
 Execution Time: 159.175 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46737.86..46738.00 rows=1 width=66) (actual time=5913.008..5943.066 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=46737.86..46747.79 rows=73 width=66) (actual time=5913.007..5943.065 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=46737.86..46745.91 rows=60 width=66) (actual time=5912.441..5943.057 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=45737.84..45738.96 rows=30 width=66) (actual time=5905.915..5907.378 rows=4 loops=3)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=45737.84..45737.91 rows=30 width=57) (actual time=5905.585..5905.810 rows=2267 loops=3)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 18401kB
                           Worker 0:  Sort Method: quicksort  Memory: 18312kB
                           Worker 1:  Sort Method: quicksort  Memory: 18338kB
                           ->  Hash Join  (cost=3.13..45737.10 rows=30 width=57) (actual time=1.352..5795.779 rows=108643 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=1.57..45735.30 rows=30 width=31) (actual time=1.259..5717.090 rows=108643 loops=3)
                                       ->  Nested Loop  (cost=1.14..45640.91 rows=30 width=31) (actual time=0.758..4371.943 rows=108643 loops=3)
                                             ->  Nested Loop  (cost=0.86..45552.47 rows=30 width=35) (actual time=0.639..4139.046 rows=108643 loops=3)
                                                   ->  Nested Loop  (cost=0.42..13369.16 rows=10102 width=18) (actual time=0.395..178.565 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=2525 width=4) (actual time=0.123..29.820 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.038..0.040 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.042..0.270 rows=7 loops=43520)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=325928)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.065..0.065 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.056..0.060 rows=25 loops=3)
 Planning Time: 28.732 ms
 Execution Time: 5943.851 ms
(35 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46737.86..46738.00 rows=1 width=66) (actual time=847.775..875.244 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=46737.86..46747.79 rows=73 width=66) (actual time=847.773..875.242 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=46737.86..46745.91 rows=60 width=66) (actual time=847.283..875.235 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=45737.84..45738.96 rows=30 width=66) (actual time=841.827..845.303 rows=8 loops=3)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=45737.84..45737.91 rows=30 width=57) (actual time=841.497..841.974 rows=4834 loops=3)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 18325kB
                           Worker 0:  Sort Method: quicksort  Memory: 18350kB
                           Worker 1:  Sort Method: quicksort  Memory: 18376kB
                           ->  Hash Join  (cost=3.13..45737.10 rows=30 width=57) (actual time=0.113..743.334 rows=108643 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=1.57..45735.30 rows=30 width=31) (actual time=0.058..691.485 rows=108643 loops=3)
                                       ->  Nested Loop  (cost=1.14..45640.91 rows=30 width=31) (actual time=0.046..367.110 rows=108643 loops=3)
                                             ->  Nested Loop  (cost=0.86..45552.47 rows=30 width=35) (actual time=0.036..201.215 rows=108643 loops=3)
                                                   ->  Nested Loop  (cost=0.42..13369.16 rows=10102 width=18) (actual time=0.026..33.066 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=2525 width=4) (actual time=0.010..15.859 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.010 rows=7 loops=43520)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.024 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.019 rows=25 loops=3)
 Planning Time: 4.132 ms
 Execution Time: 875.567 ms
(35 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100578.01..100578.06 rows=20 width=202) (actual time=2034.499..2039.202 rows=20 loops=1)
   ->  Sort  (cost=100578.01..100717.74 rows=55891 width=202) (actual time=2034.497..2039.199 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98392.14..99090.77 rows=55891 width=202) (actual time=2001.869..2027.464 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6816.07..97693.50 rows=55891 width=182) (actual time=60.587..1903.233 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5816.07..91104.40 rows=18029 width=182) (actual time=53.233..1950.270 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5814.51..91047.49 rows=18029 width=160) (actual time=53.113..1939.654 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=811.26..85996.91 rows=18029 width=16) (actual time=16.090..1882.538 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=810.82..27214.63 rows=18187 width=8) (actual time=15.542..261.557 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4920
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..796.73 rows=56380 width=0) (actual time=11.814..11.814 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.109..0.112 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.491..36.491 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.079..15.797 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.061..0.062 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.053..0.056 rows=25 loops=4)
 Planning Time: 21.325 ms
 Execution Time: 2040.238 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100578.01..100578.06 rows=20 width=202) (actual time=221.764..225.679 rows=20 loops=1)
   ->  Sort  (cost=100578.01..100717.74 rows=55891 width=202) (actual time=221.763..225.676 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98392.14..99090.77 rows=55891 width=202) (actual time=189.133..213.977 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=6816.07..97693.50 rows=55891 width=182) (actual time=43.902..114.903 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5816.07..91104.40 rows=18029 width=182) (actual time=40.432..151.481 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5814.51..91047.49 rows=18029 width=160) (actual time=40.353..144.419 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=811.26..85996.91 rows=18029 width=16) (actual time=11.812..102.591 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=810.82..27214.63 rows=18187 width=8) (actual time=11.778..27.249 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2234
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..796.73 rows=56380 width=0) (actual time=8.261..8.261 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.097..28.098 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.008..7.961 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=4)
 Planning Time: 1.528 ms
 Execution Time: 226.061 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22718.12..22718.12 rows=1 width=36) (actual time=727.363..727.368 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.39..10892.40 rows=1 width=32) (actual time=26.393..26.395 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.39 rows=32000 width=10) (actual time=0.056..18.802 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.050..0.279 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.041..0.220 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.025..0.026 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11825.72..11852.39 rows=10667 width=36) (actual time=727.362..727.364 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.39..11772.39 rows=10667 width=36) (actual time=716.460..727.205 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.39 rows=32000 width=14) (actual time=1.371..659.593 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.993..4.487 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.188..0.191 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.799..4.197 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.585..0.585 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.081..1.576 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.899 ms
 Execution Time: 728.363 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22718.12..22718.12 rows=1 width=36) (actual time=81.830..81.834 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.39..10892.40 rows=1 width=32) (actual time=26.235..26.237 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.39 rows=32000 width=10) (actual time=0.054..18.637 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.048..0.277 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.037..0.213 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11825.72..11852.39 rows=10667 width=36) (actual time=81.828..81.830 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.39..11772.39 rows=10667 width=36) (actual time=70.867..81.674 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.39 rows=32000 width=14) (actual time=0.059..27.072 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.053..0.398 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.044..0.334 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.027..0.027 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.914 ms
 Execution Time: 82.223 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170207.29..170228.41 rows=1 width=27) (actual time=1134.605..1134.691 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170207.29..170355.12 rows=7 width=27) (actual time=1134.604..1134.689 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170207.29..170354.84 rows=28 width=27) (actual time=1133.630..1134.682 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169207.24..169351.45 rows=7 width=27) (actual time=1120.337..1121.253 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169207.24..169225.25 rows=7207 width=27) (actual time=1119.456..1119.700 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 680kB
                           Worker 0:  Sort Method: quicksort  Memory: 669kB
                           Worker 1:  Sort Method: quicksort  Memory: 652kB
                           Worker 2:  Sort Method: quicksort  Memory: 678kB
                           Worker 3:  Sort Method: quicksort  Memory: 703kB
                           ->  Nested Loop  (cost=0.43..168745.44 rows=7207 width=27) (actual time=0.602..1115.393 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.17 rows=7208 width=15) (actual time=0.426..737.654 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.060..0.060 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.605 ms
 Execution Time: 1135.540 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170207.29..170228.41 rows=1 width=27) (actual time=401.191..401.289 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170207.29..170355.12 rows=7 width=27) (actual time=401.190..401.287 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170207.29..170354.84 rows=28 width=27) (actual time=400.184..401.278 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169207.24..169351.45 rows=7 width=27) (actual time=392.561..393.471 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169207.24..169225.25 rows=7207 width=27) (actual time=391.683..391.926 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 700kB
                           Worker 0:  Sort Method: quicksort  Memory: 629kB
                           Worker 1:  Sort Method: quicksort  Memory: 743kB
                           Worker 2:  Sort Method: quicksort  Memory: 734kB
                           Worker 3:  Sort Method: quicksort  Memory: 575kB
                           ->  Nested Loop  (cost=0.43..168745.44 rows=7207 width=27) (actual time=0.490..389.679 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.17 rows=7208 width=15) (actual time=0.470..360.832 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.886 ms
 Execution Time: 401.351 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1457.597..1457.600 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1457.595..1457.597 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1457.571..1457.578 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1416.897..1439.923 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=34.039..1056.916 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.379..629.202 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.341..33.342 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..16.225 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 12.714 ms
 Execution Time: 1459.466 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1250.482..1250.485 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1250.481..1250.483 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1250.457..1250.464 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1210.158..1233.337 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=28.921..869.281 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.011..470.984 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.550..28.551 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.012..12.847 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.607 ms
 Execution Time: 1251.603 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68522.45..68522.46 rows=1 width=32) (actual time=529.002..532.714 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=68522.45..68522.46 rows=1 width=32) (actual time=529.001..532.711 rows=1 loops=1)
         ->  Gather  (cost=68521.99..68522.40 rows=4 width=64) (actual time=525.821..532.690 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=67521.99..67522.00 rows=1 width=64) (actual time=518.180..518.183 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7046.84..67229.44 rows=16717 width=33) (actual time=54.477..503.726 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1072.84..61211.56 rows=16717 width=16) (actual time=20.784..455.101 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=7976
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1056.12 rows=66869 width=0) (actual time=13.406..13.406 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.273..33.274 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.084..19.192 rows=40000 loops=5)
 Planning Time: 13.237 ms
 Execution Time: 533.498 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68522.45..68522.46 rows=1 width=32) (actual time=119.024..124.608 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=68522.45..68522.46 rows=1 width=32) (actual time=119.023..124.606 rows=1 loops=1)
         ->  Gather  (cost=68521.99..68522.40 rows=4 width=64) (actual time=119.006..124.594 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=67521.99..67522.00 rows=1 width=64) (actual time=112.609..112.611 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7046.84..67229.44 rows=16717 width=33) (actual time=39.570..105.711 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1072.84..61211.56 rows=16717 width=16) (actual time=14.745..73.240 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=6898
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1056.12 rows=66869 width=0) (actual time=8.483..8.483 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.791..23.792 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.010..7.198 rows=40000 loops=5)
 Planning Time: 0.562 ms
 Execution Time: 124.662 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240244.76..240357.12 rows=1 width=103) (actual time=1265.767..1273.601 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121436.44..121436.45 rows=1 width=32) (actual time=229.320..229.321 rows=1 loops=1)
           ->  HashAggregate  (cost=121185.12..121310.78 rows=10053 width=36) (actual time=226.059..228.690 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3566.14..118960.53 rows=222459 width=16) (actual time=27.322..114.387 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3510.52 rows=222459 width=0) (actual time=18.468..18.469 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118808.31..124426.50 rows=50 width=103) (actual time=1265.766..1273.598 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118808.02..124301.37 rows=50 width=36) (actual time=1265.059..1272.891 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118808.02..123622.79 rows=40212 width=36) (actual time=1009.151..1025.281 rows=41805 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117807.96..117833.10 rows=10053 width=36) (actual time=999.842..1000.614 rows=8888 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1158kB
                           Worker 0:  Sort Method: quicksort  Memory: 1156kB
                           Worker 1:  Sort Method: quicksort  Memory: 1158kB
                           Worker 2:  Sort Method: quicksort  Memory: 1158kB
                           Worker 3:  Sort Method: quicksort  Memory: 1158kB
                           ->  Partial HashAggregate  (cost=117014.01..117139.67 rows=10053 width=36) (actual time=991.249..997.460 rows=9894 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3566.14..116457.86 rows=55615 width=16) (actual time=43.104..941.092 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13361
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3510.52 rows=222459 width=0) (actual time=36.802..36.802 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.702..0.702 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 11.085 ms
 Execution Time: 1274.355 ms
(36 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240244.76..240357.12 rows=1 width=103) (actual time=421.901..431.275 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=121436.44..121436.45 rows=1 width=32) (actual time=214.318..214.319 rows=1 loops=1)
           ->  HashAggregate  (cost=121185.12..121310.78 rows=10053 width=36) (actual time=211.097..213.686 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3566.14..118960.53 rows=222459 width=16) (actual time=26.829..101.414 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3510.52 rows=222459 width=0) (actual time=18.010..18.010 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118808.31..124426.50 rows=50 width=103) (actual time=421.900..431.272 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118808.02..124301.37 rows=50 width=36) (actual time=421.874..431.244 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118808.02..123622.79 rows=40212 width=36) (actual time=181.384..198.984 rows=41801 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117807.96..117833.10 rows=10053 width=36) (actual time=170.098..170.883 rows=8883 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1156kB
                           Worker 0:  Sort Method: quicksort  Memory: 1157kB
                           Worker 1:  Sort Method: quicksort  Memory: 1158kB
                           Worker 2:  Sort Method: quicksort  Memory: 1159kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=117014.01..117139.67 rows=10053 width=36) (actual time=161.652..167.192 rows=9893 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3566.14..116457.86 rows=55615 width=16) (actual time=32.447..128.086 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12698
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3510.52 rows=222459 width=0) (actual time=25.918..25.918 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.023..0.023 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.941 ms
 Execution Time: 431.404 ms
(36 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29210.32..29210.33 rows=1 width=44) (actual time=426.259..426.927 rows=1 loops=1)
   ->  Sort  (cost=29210.32..29250.07 rows=15897 width=44) (actual time=426.258..426.925 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28239.44..29130.84 rows=15897 width=44) (actual time=377.450..423.171 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28239.44..28385.93 rows=58594 width=40) (actual time=377.428..386.272 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7683.35..23599.25 rows=58594 width=40) (actual time=42.367..109.671 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6683.35..16739.85 rows=14648 width=40) (actual time=35.028..101.578 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.013..55.934 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.569..6.172 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12207 width=40) (actual time=27.836..27.837 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12207 width=40) (actual time=0.152..25.692 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.876 ms
 Execution Time: 427.670 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29210.32..29210.33 rows=1 width=44) (actual time=393.960..394.402 rows=1 loops=1)
   ->  Sort  (cost=29210.32..29250.07 rows=15897 width=44) (actual time=393.958..394.400 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=28239.44..29130.84 rows=15897 width=44) (actual time=345.497..390.617 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=28239.44..28385.93 rows=58594 width=40) (actual time=345.476..353.918 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=7683.35..23599.25 rows=58594 width=40) (actual time=21.153..79.032 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=6683.35..16739.85 rows=14648 width=40) (actual time=17.674..73.378 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.108..41.861 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.085..3.046 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12207 width=40) (actual time=14.266..14.266 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12207 width=40) (actual time=0.016..11.668 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.851 ms
 Execution Time: 394.523 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=429219.07..429219.08 rows=1 width=32) (actual time=2174.569..2181.777 rows=1 loops=1)
   ->  Aggregate  (cost=429219.07..429219.08 rows=1 width=32) (actual time=2174.567..2181.776 rows=1 loops=1)
         ->  Merge Join  (cost=299956.63..429214.37 rows=1876 width=8) (actual time=1107.669..2181.685 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298955.75..413994.06 rows=194378 width=36) (actual time=1099.035..2149.123 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298955.75..405247.05 rows=777512 width=36) (actual time=1099.017..1668.215 rows=993415 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297955.70..311637.81 rows=194378 width=36) (actual time=1030.794..1426.508 rows=199216 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297955.70..301706.49 rows=1500319 width=9) (actual time=1030.772..1175.846 rows=1199128 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 21232kB
                                       Worker 0:  Sort Method: external merge  Disk: 25224kB
                                       Worker 1:  Sort Method: external merge  Disk: 19384kB
                                       Worker 2:  Sort Method: external merge  Disk: 25224kB
                                       Worker 3:  Sort Method: external merge  Disk: 20608kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.19 rows=1500319 width=9) (actual time=0.124..542.649 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12705.77 rows=5791 width=21) (actual time=4.586..15.047 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12691.29 rows=5791 width=21) (actual time=4.580..14.444 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11022.84 rows=2413 width=21) (actual time=1.053..92.567 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=80 width=4) (actual time=0.687..28.864 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.77 rows=31 width=17) (actual time=0.592..0.908 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 14.144 ms
 Execution Time: 2185.581 ms
(33 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=429219.07..429219.08 rows=1 width=32) (actual time=1894.944..1903.434 rows=1 loops=1)
   ->  Aggregate  (cost=429219.07..429219.08 rows=1 width=32) (actual time=1894.943..1903.432 rows=1 loops=1)
         ->  Merge Join  (cost=299956.63..429214.37 rows=1876 width=8) (actual time=792.637..1903.350 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298955.75..413994.06 rows=194378 width=36) (actual time=785.467..1879.896 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298955.75..405247.05 rows=777512 width=36) (actual time=785.454..1403.483 rows=993513 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297955.70..311637.81 rows=194378 width=36) (actual time=741.924..1137.781 rows=199240 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297955.70..301706.49 rows=1500319 width=9) (actual time=741.902..885.844 rows=1199012 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 25224kB
                                       Worker 0:  Sort Method: external merge  Disk: 24184kB
                                       Worker 1:  Sort Method: external merge  Disk: 21168kB
                                       Worker 2:  Sort Method: external merge  Disk: 19272kB
                                       Worker 3:  Sort Method: external merge  Disk: 21808kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.19 rows=1500319 width=9) (actual time=0.031..243.137 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12705.77 rows=5791 width=21) (actual time=3.205..5.592 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12691.29 rows=5791 width=21) (actual time=3.202..5.012 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11022.84 rows=2413 width=21) (actual time=0.133..17.149 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=80 width=4) (actual time=0.116..14.433 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.77 rows=31 width=17) (actual time=0.006..0.034 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.691 ms
 Execution Time: 1906.850 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894732.16..894732.41 rows=100 width=71) (actual time=3867.034..3889.403 rows=9 loops=1)
   ->  Sort  (cost=894732.16..899733.22 rows=2000424 width=71) (actual time=3867.032..3889.400 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523745.69..818277.40 rows=2000424 width=71) (actual time=3866.999..3889.384 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523745.69..773267.86 rows=2000424 width=71) (actual time=3866.994..3889.367 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522745.63..533998.01 rows=500106 width=71) (actual time=3858.294..3858.301 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522745.63..523995.89 rows=500106 width=44) (actual time=3858.272..3858.277 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 Worker 0:  Sort Method: quicksort  Memory: 25kB
                                 Worker 1:  Sort Method: quicksort  Memory: 26kB
                                 Worker 2:  Sort Method: quicksort  Memory: 26kB
                                 Worker 3:  Sort Method: quicksort  Memory: 25kB
                                 ->  Parallel Hash Join  (cost=330712.28..465514.91 rows=500106 width=44) (actual time=3692.625..3858.223 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127563.19 rows=1500319 width=9) (actual time=0.017..94.317 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328695.71..328695.71 rows=161325 width=43) (actual time=3599.187..3599.190 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=296032.35..328695.71 rows=161325 width=43) (actual time=3499.108..3598.836 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291029.10..323268.97 rows=161325 width=24) (actual time=3468.781..3568.436 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.773..181.068 rows=300000 loops=5)
                                                         ->  Hash  (cost=284777.78..284777.78 rows=500106 width=4) (actual time=3342.963..3342.964 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279776.72 rows=500106 width=4) (actual time=712.121..3342.947 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227265.56 rows=6001275 width=9) (actual time=0.536..1959.350 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=30.010..30.011 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10368kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.077..21.118 rows=30000 loops=5)
 Planning Time: 18.943 ms
 Execution Time: 3890.562 ms
(40 rows)

SET
SET
SET
                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=894732.16..894732.41 rows=100 width=71) (actual time=3234.339..3251.916 rows=9 loops=1)
   ->  Sort  (cost=894732.16..899733.22 rows=2000424 width=71) (actual time=3234.338..3251.914 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=523745.69..818277.40 rows=2000424 width=71) (actual time=3234.312..3251.897 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=523745.69..773267.86 rows=2000424 width=71) (actual time=3234.305..3251.882 rows=11 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=522745.63..533998.01 rows=500106 width=71) (actual time=3226.532..3226.539 rows=2 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=522745.63..523995.89 rows=500106 width=44) (actual time=3226.515..3226.520 rows=13 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 25kB
                                 Worker 0:  Sort Method: quicksort  Memory: 26kB
                                 Worker 1:  Sort Method: quicksort  Memory: 25kB
                                 Worker 2:  Sort Method: quicksort  Memory: 25kB
                                 Worker 3:  Sort Method: quicksort  Memory: 27kB
                                 ->  Parallel Hash Join  (cost=330712.28..465514.91 rows=500106 width=44) (actual time=3105.791..3226.465 rows=13 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..127563.19 rows=1500319 width=9) (actual time=0.008..94.611 rows=1200243 loops=5)
                                       ->  Parallel Hash  (cost=328695.71..328695.71 rows=161325 width=43) (actual time=2962.344..2962.348 rows=2 loops=5)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4160kB
                                             ->  Parallel Hash Join  (cost=296032.35..328695.71 rows=161325 width=43) (actual time=2827.649..2873.533 rows=2 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Hash Join  (cost=291029.10..323268.97 rows=161325 width=24) (actual time=2805.414..2851.289 rows=2 loops=5)
                                                         Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=20) (actual time=0.008..20.582 rows=300000 loops=5)
                                                         ->  Hash  (cost=284777.78..284777.78 rows=500106 width=4) (actual time=2780.241..2780.242 rows=9 loops=5)
                                                               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                                               ->  GroupAggregate  (cost=0.43..279776.72 rows=500106 width=4) (actual time=594.471..2780.220 rows=9 loops=5)
                                                                     Group Key: lineitem_1.l_orderkey
                                                                     Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                                     Rows Removed by Filter: 1499991
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227265.56 rows=6001275 width=9) (actual time=0.049..1074.415 rows=6001215 loops=5)
                                                   ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=23) (actual time=21.253..21.253 rows=30000 loops=5)
                                                         Buckets: 262144  Batches: 1  Memory Usage: 10336kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=23) (actual time=0.013..6.139 rows=30000 loops=5)
 Planning Time: 1.092 ms
 Execution Time: 3252.215 ms
(40 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18216.38..18216.39 rows=1 width=32) (actual time=857.963..860.945 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18216.38..18216.39 rows=1 width=32) (actual time=857.961..860.943 rows=1 loops=1)
         ->  Gather  (cost=18216.16..18216.37 rows=2 width=32) (actual time=855.432..860.933 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17216.16..17216.17 rows=1 width=32) (actual time=850.552..850.553 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17215.80 rows=47 width=12) (actual time=18.645..850.444 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=199 width=30) (actual time=0.573..27.266 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.11 rows=1 width=21) (actual time=4.349..4.869 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 16.300 ms
 Execution Time: 861.559 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18216.38..18216.39 rows=1 width=32) (actual time=27.026..30.780 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18216.38..18216.39 rows=1 width=32) (actual time=27.025..30.779 rows=1 loops=1)
         ->  Gather  (cost=18216.16..18216.37 rows=2 width=32) (actual time=26.898..30.771 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17216.16..17216.17 rows=1 width=32) (actual time=24.578..24.579 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17215.80 rows=47 width=12) (actual time=0.554..24.542 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=199 width=30) (actual time=0.173..15.335 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.11 rows=1 width=21) (actual time=0.048..0.054 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.075 ms
 Execution Time: 30.827 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=272397.84..272397.85 rows=1 width=51) (actual time=3302.801..3302.880 rows=1 loops=1)
   ->  Sort  (cost=272397.84..272397.85 rows=1 width=51) (actual time=3302.800..3302.878 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=238993.44..272397.83 rows=1 width=51) (actual time=3133.697..3302.679 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.533..3.888 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.202..0.204 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.324..2.803 rows=10000 loops=1)
               ->  Materialize  (cost=238993.44..271942.52 rows=1 width=8) (actual time=5.971..7.295 rows=4371 loops=438)
                     ->  Merge Join  (cost=238993.44..271942.52 rows=1 width=8) (actual time=2615.209..3130.615 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=237992.57..254094.96 rows=479743 width=40) (actual time=2606.446..3070.225 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=237992.57..240219.13 rows=890625 width=13) (actual time=2606.433..2717.794 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14274.34..140193.71 rows=890625 width=13) (actual time=127.176..2197.690 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14051.68 rows=890625 width=0) (actual time=110.781..110.781 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=8.449..31.058 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=8.446..29.528 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.490..200.034 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.257..30.026 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.216..0.232 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 18.969 ms
 Execution Time: 3306.368 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=272397.84..272397.85 rows=1 width=51) (actual time=1369.190..1369.291 rows=1 loops=1)
   ->  Sort  (cost=272397.84..272397.85 rows=1 width=51) (actual time=1369.189..1369.289 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=238993.44..272397.83 rows=1 width=51) (actual time=1202.641..1369.131 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.020..1.698 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.009..0.606 rows=10000 loops=1)
               ->  Materialize  (cost=238993.44..271942.52 rows=1 width=8) (actual time=1.643..2.887 rows=4371 loops=438)
                     ->  Merge Join  (cost=238993.44..271942.52 rows=1 width=8) (actual time=719.691..1200.300 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=237992.57..254094.96 rows=479743 width=40) (actual time=716.127..1165.501 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=237992.57..240219.13 rows=890625 width=13) (actual time=716.115..823.513 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14274.34..140193.71 rows=890625 width=13) (actual time=91.387..335.457 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14051.68 rows=890625 width=0) (actual time=75.358..75.358 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=3.243..6.564 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=3.240..5.135 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.069..14.973 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.046..11.694 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.004 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.371 ms
 Execution Time: 1372.187 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193912.57..193912.58 rows=1 width=34) (actual time=1457.360..1457.471 rows=100 loops=1)
   ->  Sort  (cost=193912.57..193912.58 rows=1 width=34) (actual time=1457.359..1457.464 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=193912.54..193912.56 rows=1 width=34) (actual time=1456.334..1457.059 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=193912.54..193912.55 rows=1 width=26) (actual time=1456.326..1456.589 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..193912.53 rows=1 width=26) (actual time=10.103..1443.007 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..193909.14 rows=1 width=38) (actual time=10.095..1354.441 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..193905.83 rows=1 width=34) (actual time=9.292..13.586 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..192905.73 rows=1 width=34) (actual time=2.327..691.398 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133623.95 rows=19899 width=34) (actual time=1.669..499.894 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.98 rows=500106 width=8) (actual time=0.126..433.972 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.466..1.467 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.393..1.396 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.188..0.190 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.201..1.149 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.125..0.126 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.093..0.093 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.012..0.012 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.060 ms
 Execution Time: 1458.212 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193912.57..193912.58 rows=1 width=34) (actual time=508.165..508.270 rows=100 loops=1)
   ->  Sort  (cost=193912.57..193912.58 rows=1 width=34) (actual time=508.164..508.263 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=193912.54..193912.56 rows=1 width=34) (actual time=507.136..507.861 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=193912.54..193912.55 rows=1 width=26) (actual time=507.126..507.396 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1236.87..193912.53 rows=1 width=26) (actual time=1.640..494.259 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1236.44..193909.14 rows=1 width=38) (actual time=1.597..476.947 rows=6909 loops=1)
                                 ->  Gather  (cost=1236.01..193905.83 rows=1 width=34) (actual time=1.580..429.611 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=236.01..192905.73 rows=1 width=34) (actual time=0.806..472.786 rows=2858 loops=5)
                                             ->  Hash Join  (cost=235.58..133623.95 rows=19899 width=34) (actual time=0.523..365.607 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.98 rows=500106 width=8) (actual time=0.031..287.239 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.416..0.417 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.060..0.351 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.046..0.284 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.025..0.025 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.089 ms
 Execution Time: 508.347 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12912.46..12912.59 rows=1 width=72) (actual time=109.983..112.356 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=50.530..50.604 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=50.408..50.595 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=44.425..44.426 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.101..43.055 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6669.63..6768.61 rows=741 width=72) (actual time=109.982..112.280 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6669.63..6749.46 rows=618 width=72) (actual time=109.905..112.272 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5669.61..5678.10 rows=309 width=72) (actual time=56.699..56.861 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5669.61..5670.38 rows=309 width=38) (actual time=56.629..56.671 rows=1105 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 201kB
                           Worker 0:  Sort Method: quicksort  Memory: 143kB
                           Worker 1:  Sort Method: quicksort  Memory: 197kB
                           ->  Nested Loop Anti Join  (cost=0.43..5656.83 rows=309 width=38) (actual time=0.072..55.777 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..21.881 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.005..0.005 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 15.360 ms
 Execution Time: 113.132 ms
(32 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12912.46..12912.59 rows=1 width=72) (actual time=68.315..70.496 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=30.176..30.255 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=30.066..30.246 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=27.930..27.931 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.014..26.758 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  Finalize GroupAggregate  (cost=6669.63..6768.61 rows=741 width=72) (actual time=68.315..70.415 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=6669.63..6749.46 rows=618 width=72) (actual time=68.241..70.408 rows=4 loops=1)
               Workers Planned: 2
               Params Evaluated: $1
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=5669.61..5678.10 rows=309 width=72) (actual time=35.438..35.637 rows=4 loops=3)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=5669.61..5670.38 rows=309 width=38) (actual time=35.367..35.418 rows=1281 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 207kB
                           Worker 0:  Sort Method: quicksort  Memory: 144kB
                           Worker 1:  Sort Method: quicksort  Memory: 143kB
                           ->  Nested Loop Anti Join  (cost=0.43..5656.83 rows=309 width=38) (actual time=0.047..34.666 rows=2132 loops=3)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.015..19.890 rows=6359 loops=3)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 43641
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.677 ms
 Execution Time: 70.555 ms
(32 rows)

