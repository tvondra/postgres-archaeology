query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394778.79..394778.79 rows=1 width=236) (actual time=6656.185..6656.186 rows=1 loops=1)
   ->  Sort  (cost=394778.79..394778.81 rows=6 width=236) (actual time=6656.184..6656.185 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394778.60..394778.76 rows=6 width=236) (actual time=6656.147..6656.153 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187574.54 rows=5920116 width=25) (actual time=0.715..1061.216 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 11.810 ms
 Execution Time: 6656.624 ms
(12 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394778.79..394778.79 rows=1 width=236) (actual time=6494.732..6494.734 rows=1 loops=1)
   ->  Sort  (cost=394778.79..394778.81 rows=6 width=236) (actual time=6494.731..6494.732 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394778.60..394778.76 rows=6 width=236) (actual time=6494.700..6494.706 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187574.54 rows=5920116 width=25) (actual time=0.029..873.548 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.733 ms
 Execution Time: 6494.785 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47808.41..47808.42 rows=1 width=192) (actual time=425.672..425.689 rows=100 loops=1)
   ->  Sort  (cost=47808.41..47808.42 rows=1 width=192) (actual time=425.671..425.682 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=32934.03..47808.40 rows=1 width=192) (actual time=323.489..425.280 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=842 width=30) (actual time=0.383..57.345 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30538.82..30538.82 rows=159681 width=172) (actual time=322.347..322.350 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30538.82 rows=159681 width=172) (actual time=8.063..265.361 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.618..153.420 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=7.439..7.442 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=1.659..6.995 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.319..4.537 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=1.335..1.337 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=1.330..1.335 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.219..0.221 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=1.104..1.104 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.234..0.236 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.034..0.034 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.027..0.032 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.019..0.030 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.018..0.026 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.015..0.016 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.731 ms
 Execution Time: 425.838 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47808.41..47808.42 rows=1 width=192) (actual time=281.361..281.377 rows=100 loops=1)
   ->  Sort  (cost=47808.41..47808.42 rows=1 width=192) (actual time=281.360..281.370 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=32934.03..47808.40 rows=1 width=192) (actual time=221.868..281.019 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=842 width=30) (actual time=0.021..35.905 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30538.82..30538.82 rows=159681 width=172) (actual time=221.424..221.428 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30538.82 rows=159681 width=172) (actual time=2.488..166.952 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..50.539 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.477..2.479 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.032..2.015 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.668 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.027..0.028 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.021..0.027 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.011..0.016 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.006..0.014 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 2.121 ms
 Execution Time: 281.517 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285544.12..285544.14 rows=10 width=44) (actual time=2217.613..2217.617 rows=10 loops=1)
   ->  Sort  (cost=285544.12..286336.67 rows=317020 width=44) (actual time=2217.611..2217.615 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=271015.60..278693.43 rows=317020 width=44) (actual time=2210.949..2215.418 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51389.80..254347.28 rows=317020 width=24) (actual time=905.018..2190.570 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187574.54 rows=3256732 width=16) (actual time=0.740..1003.472 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49564.26..49564.26 rows=146043 width=12) (actual time=903.062..903.064 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12445.45..49564.26 rows=146043 width=12) (actual time=87.886..870.073 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6596.52..41808.30 rows=726463 width=16) (actual time=42.288..687.057 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6414.90 rows=726463 width=0) (actual time=37.991..37.992 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30155 width=4) (actual time=45.520..45.520 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30155 width=4) (actual time=0.553..41.772 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 20.127 ms
 Execution Time: 2219.680 ms
(28 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285544.12..285544.14 rows=10 width=44) (actual time=1369.213..1369.219 rows=10 loops=1)
   ->  Sort  (cost=285544.12..286336.67 rows=317020 width=44) (actual time=1369.212..1369.216 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=271015.60..278693.43 rows=317020 width=44) (actual time=1362.553..1367.003 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51389.80..254347.28 rows=317020 width=24) (actual time=282.897..1344.023 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187574.54 rows=3256732 width=16) (actual time=0.055..788.460 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49564.26..49564.26 rows=146043 width=12) (actual time=282.349..282.351 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12445.45..49564.26 rows=146043 width=12) (actual time=59.766..258.603 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6596.52..41808.30 rows=726463 width=16) (actual time=33.785..135.878 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6414.90 rows=726463 width=0) (actual time=30.234..30.235 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30155 width=4) (actual time=25.956..25.956 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30155 width=4) (actual time=0.012..22.548 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 0.961 ms
 Execution Time: 1370.289 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181235.76..181235.76 rows=1 width=24) (actual time=2188.820..2188.821 rows=1 loops=1)
   ->  Sort  (cost=181235.76..181235.77 rows=5 width=24) (actual time=2188.818..2188.819 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=181235.69..181235.74 rows=5 width=24) (actual time=2188.782..2188.784 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=632.79..180963.28 rows=54481 width=16) (actual time=9.152..2156.369 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=632.36..27580.57 rows=54481 width=20) (actual time=8.673..666.112 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..618.74 rows=54481 width=0) (actual time=4.961..4.962 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 13.594 ms
 Execution Time: 2189.767 ms
(19 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=181235.76..181235.76 rows=1 width=24) (actual time=205.621..205.623 rows=1 loops=1)
   ->  Sort  (cost=181235.76..181235.77 rows=5 width=24) (actual time=205.620..205.621 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=181235.69..181235.74 rows=5 width=24) (actual time=205.592..205.594 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=632.79..180963.28 rows=54481 width=16) (actual time=6.599..189.270 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=632.36..27580.57 rows=54481 width=20) (actual time=6.578..40.164 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..618.74 rows=54481 width=0) (actual time=3.322..3.322 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 0.992 ms
 Execution Time: 205.928 ms
(19 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189673.77..189673.77 rows=1 width=58) (actual time=2368.982..2368.987 rows=1 loops=1)
   ->  Sort  (cost=189673.77..189673.83 rows=25 width=58) (actual time=2368.981..2368.986 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=189581.80..189673.65 rows=25 width=58) (actual time=2366.503..2368.971 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=189581.80..189600.10 rows=7323 width=38) (actual time=2365.883..2366.180 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 605kB
                     ->  Hash Join  (cost=9466.27..189111.73 rows=7323 width=38) (actual time=79.128..2360.336 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8993.27..187676.03 rows=183368 width=50) (actual time=72.490..2312.112 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8992.84..39879.95 rows=45842 width=38) (actual time=72.003..884.290 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2655.83..32224.98 rows=229210 width=8) (actual time=17.515..754.826 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2598.53 rows=229210 width=0) (actual time=13.484..13.484 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=54.446..54.449 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=1.058..49.103 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.516..32.808 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.534..0.536 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.523..0.532 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.230..0.233 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.278..0.279 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.270..0.272 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.028..0.030 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.133..6.134 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.368..4.911 rows=10000 loops=1)
 Planning Time: 21.350 ms
 Execution Time: 2369.898 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189673.77..189673.77 rows=1 width=58) (actual time=337.603..337.608 rows=1 loops=1)
   ->  Sort  (cost=189673.77..189673.83 rows=25 width=58) (actual time=337.602..337.607 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=189581.80..189673.65 rows=25 width=58) (actual time=335.165..337.593 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=189581.80..189600.10 rows=7323 width=38) (actual time=334.561..334.851 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 605kB
                     ->  Hash Join  (cost=9466.27..189111.73 rows=7323 width=38) (actual time=51.545..331.844 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8993.27..187676.03 rows=183368 width=50) (actual time=48.662..306.468 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8992.84..39879.95 rows=45842 width=38) (actual time=48.641..147.187 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2655.83..32224.98 rows=229210 width=8) (actual time=14.152..69.710 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2598.53 rows=229210 width=0) (actual time=10.626..10.626 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=34.455..34.458 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.033..29.634 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..9.769 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.022..0.025 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.017..0.022 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.637..2.637 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.413 rows=10000 loops=1)
 Planning Time: 3.317 ms
 Execution Time: 337.683 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107469.81..107469.82 rows=1 width=32) (actual time=2047.769..2047.770 rows=1 loops=1)
   ->  Aggregate  (cost=107469.81..107469.82 rows=1 width=32) (actual time=2047.767..2047.768 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20770.99..106886.83 rows=116596 width=12) (actual time=131.428..1975.585 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20741.85 rows=116596 width=0) (actual time=120.156..120.157 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.726 ms
 Execution Time: 2048.807 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107469.81..107469.82 rows=1 width=32) (actual time=208.350..208.351 rows=1 loops=1)
   ->  Aggregate  (cost=107469.81..107469.82 rows=1 width=32) (actual time=208.349..208.350 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20770.99..106886.83 rows=116596 width=12) (actual time=102.387..179.763 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20741.85 rows=116596 width=0) (actual time=91.816..91.817 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.434 ms
 Execution Time: 208.388 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234644.26..234644.30 rows=1 width=116) (actual time=4147.968..4147.974 rows=1 loops=1)
   ->  GroupAggregate  (cost=234644.26..234842.68 rows=6105 width=116) (actual time=4147.967..4147.973 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234644.26..234659.53 rows=6105 width=96) (actual time=4147.228..4147.286 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 685kB
               ->  Hash Join  (cost=84985.96..234260.39 rows=6105 width=96) (actual time=681.668..4142.463 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=29821.06..178295.29 rows=146724 width=46) (actual time=212.693..3632.996 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29455.96..169573.55 rows=1837173 width=24) (actual time=206.953..3382.330 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28996.66 rows=1837173 width=0) (actual time=185.700..185.700 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.614..5.615 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.519..5.514 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.293..4.374 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.217..0.218 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.208..0.212 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=468.609..468.611 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=47.948..447.907 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.490..234.094 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=47.436..47.437 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.503..45.592 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.468..31.948 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.026..0.027 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.017..0.021 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 20.217 ms
 Execution Time: 4148.721 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234644.26..234644.30 rows=1 width=116) (actual time=942.060..942.066 rows=1 loops=1)
   ->  GroupAggregate  (cost=234644.26..234842.68 rows=6105 width=116) (actual time=942.059..942.064 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234644.26..234659.53 rows=6105 width=96) (actual time=941.339..941.396 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 685kB
               ->  Hash Join  (cost=84985.96..234260.39 rows=6105 width=96) (actual time=439.487..938.156 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=29821.06..178295.29 rows=146724 width=46) (actual time=144.231..613.699 rows=144718 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29455.96..169573.55 rows=1837173 width=24) (actual time=142.200..433.843 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28996.66 rows=1837173 width=0) (actual time=122.022..122.022 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.001..2.003 rows=794 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.020..1.903 rows=794 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..0.675 rows=10000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=295.103..295.105 rows=118477 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                           ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=28.143..276.188 rows=118477 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.005..84.940 rows=1500000 loops=1)
                                 ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=28.125..28.126 rows=11896 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                       ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.019..26.510 rows=11896 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..9.206 rows=150000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.327 ms
 Execution Time: 942.159 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114018.51..114018.55 rows=1 width=64) (actual time=6472.038..6472.045 rows=1 loops=1)
   ->  GroupAggregate  (cost=114018.51..114120.34 rows=2396 width=64) (actual time=6472.037..6472.043 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114018.51..114024.50 rows=2396 width=70) (actual time=6471.424..6471.477 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 252kB
               ->  Nested Loop  (cost=79024.12..113884.01 rows=2396 width=70) (actual time=5669.442..6469.707 rows=2485 loops=1)
                     ->  Hash Join  (cost=79023.98..113796.64 rows=2396 width=20) (actual time=5669.425..6465.604 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78575.98..113342.34 rows=2400 width=20) (actual time=5663.449..6458.414 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72238.97..106936.33 rows=12001 width=24) (actual time=5611.650..6403.211 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5217.77..38105.85 rows=450472 width=12) (actual time=29.100..745.302 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5105.15 rows=450472 width=0) (actual time=24.956..24.957 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66521.60..66521.60 rows=39968 width=20) (actual time=5582.413..5582.414 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66521.60 rows=39968 width=20) (actual time=1.761..5534.167 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1332 width=4) (actual time=1.203..58.970 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24) (actual time=0.247..4.127 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=51.776..51.779 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=1.126..47.963 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.594..32.122 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.522..0.524 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.512..0.521 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.260..0.264 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.239..0.240 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.234..0.236 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.967..5.968 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.354..4.827 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 24.600 ms
 Execution Time: 6472.357 ms
(52 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114018.51..114018.55 rows=1 width=64) (actual time=272.225..272.231 rows=1 loops=1)
   ->  GroupAggregate  (cost=114018.51..114120.34 rows=2396 width=64) (actual time=272.223..272.229 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114018.51..114024.50 rows=2396 width=70) (actual time=271.606..271.658 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 252kB
               ->  Nested Loop  (cost=79024.12..113884.01 rows=2396 width=70) (actual time=134.878..270.750 rows=2485 loops=1)
                     ->  Hash Join  (cost=79023.98..113796.64 rows=2396 width=20) (actual time=134.866..268.872 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78575.98..113342.34 rows=2400 width=20) (actual time=132.343..265.458 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72238.97..106936.33 rows=12001 width=24) (actual time=99.135..229.497 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5217.77..38105.85 rows=450472 width=12) (actual time=23.258..101.495 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5105.15 rows=450472 width=0) (actual time=19.718..19.718 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66521.60..66521.60 rows=39968 width=20) (actual time=75.828..75.829 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66521.60 rows=39968 width=20) (actual time=0.057..67.335 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1332 width=4) (actual time=0.042..22.062 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24) (actual time=0.004..0.030 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=33.183..33.185 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.032..29.540 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..10.021 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.023..0.024 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.018..0.023 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.008 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.514..2.515 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.403 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 4.038 ms
 Execution Time: 272.350 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=134937.54..134937.57 rows=1 width=90) (actual time=16704.323..16704.327 rows=1 loops=1)
   ->  GroupAggregate  (cost=134937.54..134940.90 rows=96 width=90) (actual time=16704.322..16704.325 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=134937.54..134937.78 rows=96 width=81) (actual time=16703.376..16703.497 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: quicksort  Memory: 32525kB
               ->  Nested Loop  (cost=1.57..134934.38 rows=96 width=81) (actual time=2.874..16353.750 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 3898820
                     ->  Nested Loop  (cost=1.57..134898.21 rows=96 width=31) (actual time=2.628..15650.551 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..134596.16 rows=96 width=31) (actual time=1.869..11788.610 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..134313.17 rows=96 width=35) (actual time=1.534..10925.342 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..32852.34 rows=31998 width=18) (actual time=0.891..290.744 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.384..73.833 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.016..0.019 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.035..0.242 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.219..0.225 rows=25 loops=1)
 Planning Time: 29.512 ms
 Execution Time: 16704.906 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=134937.54..134937.57 rows=1 width=90) (actual time=2658.893..2658.897 rows=1 loops=1)
   ->  GroupAggregate  (cost=134937.54..134940.90 rows=96 width=90) (actual time=2658.892..2658.895 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=134937.54..134937.78 rows=96 width=81) (actual time=2657.935..2658.054 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: quicksort  Memory: 32525kB
               ->  Nested Loop  (cost=1.57..134934.38 rows=96 width=81) (actual time=0.063..2362.033 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 3898820
                     ->  Nested Loop  (cost=1.57..134898.21 rows=96 width=31) (actual time=0.047..1851.282 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..134596.16 rows=96 width=31) (actual time=0.041..961.820 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..134313.17 rows=96 width=35) (actual time=0.037..472.112 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..32852.34 rows=31998 width=18) (actual time=0.030..84.623 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.018..40.017 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.002..0.008 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 4.938 ms
 Execution Time: 2659.201 ms
(28 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231413.51..231413.56 rows=20 width=202) (actual time=2467.224..2467.231 rows=20 loops=1)
   ->  Sort  (cost=231413.51..231563.87 rows=60142 width=202) (actual time=2467.223..2467.228 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=229061.38..229813.15 rows=60142 width=202) (actual time=2437.408..2456.213 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 25617kB
               ->  Nested Loop  (cost=7664.07..228309.60 rows=60142 width=182) (actual time=95.388..2310.876 rows=114347 loops=1)
                     ->  Nested Loop  (cost=7663.93..226816.55 rows=60142 width=160) (actual time=95.001..2238.146 rows=114347 loops=1)
                           ->  Hash Join  (cost=7663.49..34846.09 rows=59665 width=152) (actual time=93.679..836.521 rows=57111 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=691.49..27717.47 rows=59665 width=8) (actual time=9.389..705.454 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..676.58 rows=59665 width=0) (actual time=5.692..5.692 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=83.855..83.855 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.565..42.863 rows=150000 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.022..0.024 rows=2 loops=57111)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_returnflag = 'R'::bpchar)
                                 Rows Removed by Filter: 2
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.016..0.016 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 20.669 ms
 Execution Time: 2468.194 ms
(31 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231413.51..231413.56 rows=20 width=202) (actual time=517.931..517.938 rows=20 loops=1)
   ->  Sort  (cost=231413.51..231563.87 rows=60142 width=202) (actual time=517.929..517.935 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 34kB
         ->  HashAggregate  (cost=229061.38..229813.15 rows=60142 width=202) (actual time=488.846..507.098 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 25617kB
               ->  Nested Loop  (cost=7664.07..228309.60 rows=60142 width=182) (actual time=70.611..402.240 rows=114347 loops=1)
                     ->  Nested Loop  (cost=7663.93..226816.55 rows=60142 width=160) (actual time=70.602..356.044 rows=114347 loops=1)
                           ->  Hash Join  (cost=7663.49..34846.09 rows=59665 width=152) (actual time=70.570..137.013 rows=57111 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=691.49..27717.47 rows=59665 width=8) (actual time=6.886..43.212 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..676.58 rows=59665 width=0) (actual time=3.584..3.584 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=63.216..63.217 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.013..24.490 rows=150000 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_returnflag = 'R'::bpchar)
                                 Rows Removed by Filter: 2
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 1.366 ms
 Execution Time: 518.621 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15989.29..15989.29 rows=1 width=36) (actual time=701.828..701.833 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7688.59..7688.60 rows=1 width=32) (actual time=24.875..24.877 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.07 rows=31936 width=10) (actual time=0.056..17.924 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.279 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.226 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8300.69..8327.30 rows=10645 width=36) (actual time=701.827..701.829 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.43..8247.47 rows=10645 width=36) (actual time=691.471..701.682 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.07 rows=31936 width=14) (actual time=1.050..636.892 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.675..4.145 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.213..0.217 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.457..3.835 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.241..0.241 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.045..1.522 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.380 ms
 Execution Time: 702.223 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15989.29..15989.29 rows=1 width=36) (actual time=79.000..79.005 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7688.59..7688.60 rows=1 width=32) (actual time=24.824..24.826 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.07 rows=31936 width=10) (actual time=0.055..17.872 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.276 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.222 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8300.69..8327.30 rows=10645 width=36) (actual time=78.999..79.001 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.43..8247.47 rows=10645 width=36) (actual time=68.834..78.860 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.07 rows=31936 width=14) (actual time=0.057..26.319 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.051..0.420 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.039..0.354 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.921 ms
 Execution Time: 79.358 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302817.60..302901.80 rows=1 width=27) (actual time=1914.386..1914.389 rows=1 loops=1)
   ->  GroupAggregate  (cost=302817.60..303406.99 rows=7 width=27) (actual time=1914.385..1914.387 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302817.60..302891.27 rows=29466 width=27) (actual time=1909.861..1910.444 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2219kB
               ->  Hash Join  (cost=247954.57..300630.23 rows=29466 width=27) (actual time=1485.351..1904.376 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.584..229.609 rows=1500000 loops=1)
                     ->  Hash  (cost=247586.17..247586.17 rows=29472 width=15) (actual time=1484.648..1484.649 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247586.17 rows=29472 width=15) (actual time=1.563..1477.270 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 15.994 ms
 Execution Time: 1915.454 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302817.60..302901.80 rows=1 width=27) (actual time=1523.271..1523.274 rows=1 loops=1)
   ->  GroupAggregate  (cost=302817.60..303406.99 rows=7 width=27) (actual time=1523.270..1523.272 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302817.60..302891.27 rows=29466 width=27) (actual time=1518.726..1519.307 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2219kB
               ->  Hash Join  (cost=247954.57..300630.23 rows=29466 width=27) (actual time=1260.537..1513.326 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..84.167 rows=1500000 loops=1)
                     ->  Hash  (cost=247586.17..247586.17 rows=29472 width=15) (actual time=1260.485..1260.486 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247586.17 rows=29472 width=15) (actual time=0.114..1253.458 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 0.784 ms
 Execution Time: 1523.324 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1379.046..1379.908 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1379.044..1379.047 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1379.019..1379.027 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1338.658..1361.268 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=34.727..996.995 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.754..576.739 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.574..33.575 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.016..16.611 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.779 ms
 Execution Time: 1381.654 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1249.103..1249.114 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1249.101..1249.104 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1249.075..1249.082 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1207.891..1230.541 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=30.182..877.346 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.015..478.575 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.722..29.723 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.017..13.458 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.859 ms
 Execution Time: 1250.405 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80538.87..80538.88 rows=1 width=32) (actual time=1204.409..1204.412 rows=1 loops=1)
   ->  Aggregate  (cost=80538.87..80538.88 rows=1 width=32) (actual time=1204.408..1204.410 rows=1 loops=1)
         ->  Hash Join  (cost=9902.66..79117.98 rows=81193 width=33) (actual time=99.461..1144.548 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1303.66..70305.85 rows=81193 width=16) (actual time=19.223..1016.002 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1283.36 rows=81193 width=0) (actual time=12.612..12.612 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=80.050..80.051 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.284..47.241 rows=200000 loops=1)
 Planning Time: 17.232 ms
 Execution Time: 1205.134 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80538.87..80538.88 rows=1 width=32) (actual time=179.012..179.014 rows=1 loops=1)
   ->  Aggregate  (cost=80538.87..80538.88 rows=1 width=32) (actual time=179.010..179.013 rows=1 loops=1)
         ->  Hash Join  (cost=9902.66..79117.98 rows=81193 width=33) (actual time=70.172..149.504 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1303.66..70305.85 rows=81193 width=16) (actual time=13.365..64.880 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1283.36 rows=81193 width=0) (actual time=7.276..7.277 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=56.613..56.614 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..26.352 rows=200000 loops=1)
 Planning Time: 0.725 ms
 Execution Time: 179.296 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244082.55..244091.44 rows=1 width=103) (actual time=2229.314..2229.317 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122090.26..122090.27 rows=1 width=32) (actual time=208.170..208.171 rows=1 loops=1)
           ->  HashAggregate  (cost=121839.83..121965.04 rows=10017 width=36) (actual time=205.023..207.585 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3626.36..119578.44 rows=226139 width=16) (actual time=28.276..99.529 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3569.82 rows=226139 width=0) (actual time=17.668..17.668 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=121992.28..122436.53 rows=50 width=103) (actual time=2229.312..2229.314 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.362..5.290 rows=8449 loops=1)
         ->  Sort  (cost=121992.00..121992.12 rows=50 width=36) (actual time=2223.486..2223.487 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=121839.83..121990.59 rows=50 width=36) (actual time=2221.123..2223.480 rows=1 loops=1)
                     ->  HashAggregate  (cost=121839.83..121990.09 rows=50 width=36) (actual time=2221.122..2223.478 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3626.36..119578.44 rows=226139 width=16) (actual time=40.613..1818.083 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3569.82 rows=226139 width=0) (actual time=29.252..29.252 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 11.715 ms
 Execution Time: 2229.933 ms
(30 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244082.55..244091.44 rows=1 width=103) (actual time=449.063..449.066 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122090.26..122090.27 rows=1 width=32) (actual time=208.273..208.274 rows=1 loops=1)
           ->  HashAggregate  (cost=121839.83..121965.04 rows=10017 width=36) (actual time=205.098..207.684 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3626.36..119578.44 rows=226139 width=16) (actual time=27.797..99.468 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3569.82 rows=226139 width=0) (actual time=17.179..17.180 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=121992.28..122436.53 rows=50 width=103) (actual time=449.062..449.063 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.015..1.313 rows=8449 loops=1)
         ->  Sort  (cost=121992.00..121992.12 rows=50 width=36) (actual time=447.272..447.273 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=121839.83..121990.59 rows=50 width=36) (actual time=444.913..447.267 rows=1 loops=1)
                     ->  HashAggregate  (cost=121839.83..121990.09 rows=50 width=36) (actual time=444.912..447.266 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3626.36..119578.44 rows=226139 width=16) (actual time=29.437..127.198 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3569.82 rows=226139 width=0) (actual time=18.755..18.756 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.684 ms
 Execution Time: 449.404 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33706.77..33706.77 rows=1 width=44) (actual time=662.261..662.264 rows=1 loops=1)
   ->  Sort  (cost=33706.77..33746.50 rows=15893 width=44) (actual time=662.260..662.262 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32743.75..33627.31 rows=15893 width=44) (actual time=627.728..659.403 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32743.75..32888.68 rows=57970 width=40) (actual time=627.715..633.873 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10033kB
                     ->  Hash Join  (cost=9813.43..28157.45 rows=57970 width=40) (actual time=80.419..292.960 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.077..145.643 rows=799680 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.170..5.793 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29280 width=40) (actual time=74.300..74.301 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29280 width=40) (actual time=0.443..68.404 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 15.501 ms
 Execution Time: 662.322 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33706.77..33706.77 rows=1 width=44) (actual time=616.238..616.241 rows=1 loops=1)
   ->  Sort  (cost=33706.77..33746.50 rows=15893 width=44) (actual time=616.237..616.240 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32743.75..33627.31 rows=15893 width=44) (actual time=581.840..613.372 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32743.75..32888.68 rows=57970 width=40) (actual time=581.827..588.047 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10033kB
                     ->  Hash Join  (cost=9813.43..28157.45 rows=57970 width=40) (actual time=53.730..247.514 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.113..125.190 rows=799680 loops=1)
                                 Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.085..2.095 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29280 width=40) (actual time=51.580..51.581 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29280 width=40) (actual time=0.008..46.237 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.849 ms
 Execution Time: 616.291 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222903.57..222903.58 rows=1 width=32) (actual time=3547.402..3547.404 rows=1 loops=1)
   ->  Aggregate  (cost=222903.57..222903.58 rows=1 width=32) (actual time=3547.400..3547.402 rows=1 loops=1)
         ->  Nested Loop  (cost=207915.93..222898.96 rows=1844 width=8) (actual time=3380.949..3547.189 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=207915.50..215015.00 rows=184 width=40) (actual time=3380.482..3425.577 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=190 width=4) (actual time=1.391..46.269 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205489.11..205489.11 rows=194111 width=36) (actual time=3378.676..3378.677 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202577.45..205489.11 rows=194111 width=36) (actual time=3024.694..3346.237 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172571.63 rows=6001163 width=9) (actual time=0.661..648.836 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.437..0.583 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 13.702 ms
 Execution Time: 3555.017 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222903.57..222903.58 rows=1 width=32) (actual time=3170.116..3170.119 rows=1 loops=1)
   ->  Aggregate  (cost=222903.57..222903.58 rows=1 width=32) (actual time=3170.115..3170.117 rows=1 loops=1)
         ->  Nested Loop  (cost=207915.93..222898.96 rows=1844 width=8) (actual time=3140.946..3170.038 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=207915.50..215015.00 rows=184 width=40) (actual time=3140.907..3165.857 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=190 width=4) (actual time=0.111..24.955 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205489.11..205489.11 rows=194111 width=36) (actual time=3140.465..3140.466 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202577.45..205489.11 rows=194111 width=36) (actual time=2785.525..3107.916 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172571.63 rows=6001163 width=9) (actual time=0.038..458.068 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.008..0.019 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 0.834 ms
 Execution Time: 3176.756 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794662.74..794662.99 rows=100 width=71) (actual time=4436.837..4436.843 rows=9 loops=1)
   ->  Sort  (cost=794662.74..799663.71 rows=2000388 width=71) (actual time=4436.836..4436.841 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658041.43..718209.35 rows=2000388 width=71) (actual time=4436.091..4436.791 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335206.28..550286.15 rows=2000388 width=44) (actual time=3708.233..4436.015 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172571.63 rows=6001163 width=9) (actual time=0.563..297.928 rows=6001215 loops=1)
                     ->  Hash  (cost=328955.07..328955.07 rows=500097 width=43) (actual time=3513.205..3513.208 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282573.77..328955.07 rows=500097 width=43) (actual time=3202.665..3513.182 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275601.77..320670.28 rows=500097 width=24) (actual time=3139.649..3450.156 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.517..224.814 rows=1500000 loops=1)
                                       ->  Hash  (cost=269350.56..269350.56 rows=500097 width=4) (actual time=3052.256..3052.257 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269350.56 rows=500097 width=4) (actual time=650.444..3052.232 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216840.38 rows=6001163 width=9) (actual time=0.018..1682.919 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=62.699..62.700 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.529..37.510 rows=150000 loops=1)
 Planning Time: 17.842 ms
 Execution Time: 4438.780 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794662.74..794662.99 rows=100 width=71) (actual time=3379.962..3379.968 rows=9 loops=1)
   ->  Sort  (cost=794662.74..799663.71 rows=2000388 width=71) (actual time=3379.961..3379.966 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658041.43..718209.35 rows=2000388 width=71) (actual time=3379.221..3379.920 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335206.28..550286.15 rows=2000388 width=44) (actual time=2654.112..3379.146 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172571.63 rows=6001163 width=9) (actual time=0.018..297.110 rows=6001215 loops=1)
                     ->  Hash  (cost=328955.07..328955.07 rows=500097 width=43) (actual time=2460.544..2460.547 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282573.77..328955.07 rows=500097 width=43) (actual time=2258.705..2460.525 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275601.77..320670.28 rows=500097 width=24) (actual time=2214.700..2416.511 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..81.895 rows=1500000 loops=1)
                                       ->  Hash  (cost=269350.56..269350.56 rows=500097 width=4) (actual time=2160.048..2160.049 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269350.56 rows=500097 width=4) (actual time=456.041..2160.030 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216840.38 rows=6001163 width=9) (actual time=0.016..874.459 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.632..43.632 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.012..19.008 rows=150000 loops=1)
 Planning Time: 1.114 ms
 Execution Time: 3381.070 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=35673.96..35673.97 rows=1 width=32) (actual time=2459.090..2459.091 rows=1 loops=1)
   ->  Aggregate  (cost=35673.96..35673.97 rows=1 width=32) (actual time=2459.089..2459.089 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35673.12 rows=111 width=12) (actual time=13.639..2458.724 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=480 width=30) (actual time=2.157..83.094 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=4.181..4.684 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 14.615 ms
 Execution Time: 2459.738 ms
(12 rows)

SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=35673.96..35673.97 rows=1 width=32) (actual time=64.767..64.768 rows=1 loops=1)
   ->  Aggregate  (cost=35673.96..35673.97 rows=1 width=32) (actual time=64.766..64.767 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35673.12 rows=111 width=12) (actual time=0.346..64.685 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=480 width=30) (actual time=0.218..46.562 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.06 rows=1 width=21) (actual time=0.032..0.035 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 1.224 ms
 Execution Time: 64.811 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=211630.14..211630.15 rows=1 width=51) (actual time=4665.823..4665.827 rows=1 loops=1)
   ->  Sort  (cost=211630.14..211630.15 rows=1 width=51) (actual time=4665.821..4665.825 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186595.29..211630.13 rows=1 width=51) (actual time=4502.636..4665.636 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.735..3.335 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.359..0.362 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.367..2.257 rows=10000 loops=1)
               ->  Materialize  (cost=186595.29..211174.82 rows=1 width=8) (actual time=7.863..10.418 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186595.29..211174.82 rows=1 width=8) (actual time=3443.963..4495.985 rows=5898 loops=1)
                           ->  Hash Join  (cost=186594.87..204168.87 rows=4916 width=44) (actual time=3443.365..4002.306 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179970.62..196266.93 rows=486732 width=40) (actual time=3399.107..3903.719 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14769.93..141146.76 rows=921122 width=13) (actual time=125.331..2871.594 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14539.65 rows=921122 width=0) (actual time=105.622..105.622 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=44.232..44.233 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.473..43.534 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.083..0.083 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 21.796 ms
 Execution Time: 4670.529 ms
(37 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=211630.14..211630.15 rows=1 width=51) (actual time=1410.999..1411.003 rows=1 loops=1)
   ->  Sort  (cost=211630.14..211630.15 rows=1 width=51) (actual time=1410.998..1411.001 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186595.29..211630.13 rows=1 width=51) (actual time=1249.101..1410.809 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.023..1.555 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.005..0.639 rows=10000 loops=1)
               ->  Materialize  (cost=186595.29..211174.82 rows=1 width=8) (actual time=1.645..2.992 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186595.29..211174.82 rows=1 width=8) (actual time=720.582..1245.802 rows=5898 loops=1)
                           ->  Hash Join  (cost=186594.87..204168.87 rows=4916 width=44) (actual time=720.562..1223.546 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179970.62..196266.93 rows=486732 width=40) (actual time=698.695..1158.081 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14769.93..141146.76 rows=921122 width=13) (actual time=87.057..299.523 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14539.65 rows=921122 width=0) (actual time=67.876..67.876 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=21.846..21.846 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.023..21.226 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.617 ms
 Execution Time: 1415.221 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=361296.92..361296.92 rows=1 width=34) (actual time=2528.866..2528.880 rows=100 loops=1)
   ->  Sort  (cost=361296.92..361296.92 rows=1 width=34) (actual time=2528.865..2528.873 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=361296.89..361296.91 rows=1 width=34) (actual time=2527.862..2528.464 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=361296.89..361296.89 rows=1 width=26) (actual time=2527.853..2528.020 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=197108.23..361296.88 rows=1 width=26) (actual time=1405.430..2515.212 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197107.80..361293.48 rows=1 width=38) (actual time=1405.394..2498.468 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197107.37..245126.96 rows=39022 width=38) (actual time=1404.265..1853.715 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=732900 width=4) (actual time=0.510..308.412 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196108.87..196108.87 rows=79880 width=34) (actual time=1403.668..1403.670 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196108.87 rows=79880 width=34) (actual time=7.542..1369.237 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187574.54 rows=2000388 width=8) (actual time=0.522..1099.261 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=6.956..6.957 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=1.055..6.801 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.199..0.202 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.853..6.508 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.516..0.516 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.238 ms
 Execution Time: 2530.186 ms
(44 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=361296.92..361296.92 rows=1 width=34) (actual time=1718.720..1718.735 rows=100 loops=1)
   ->  Sort  (cost=361296.92..361296.92 rows=1 width=34) (actual time=1718.719..1718.727 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=361296.89..361296.91 rows=1 width=34) (actual time=1717.715..1718.321 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=361296.89..361296.89 rows=1 width=26) (actual time=1717.706..1717.873 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=197108.23..361296.88 rows=1 width=26) (actual time=1220.886..1705.288 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197107.80..361293.48 rows=1 width=38) (actual time=1220.868..1692.700 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197107.37..245126.96 rows=39022 width=38) (actual time=1220.739..1514.401 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=732900 width=4) (actual time=0.008..173.534 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196108.87..196108.87 rows=79880 width=34) (actual time=1220.443..1220.446 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196108.87 rows=79880 width=34) (actual time=0.505..1184.765 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187574.54 rows=2000388 width=8) (actual time=0.036..925.768 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.442..0.444 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.060..0.383 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.048..0.326 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.026..0.026 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.088 ms
 Execution Time: 1718.838 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16080.91..16080.93 rows=1 width=72) (actual time=188.687..188.689 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=90.146..90.147 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4772 width=6) (actual time=0.018..86.712 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8534.46..8554.68 rows=735 width=72) (actual time=188.686..188.687 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8534.46..8536.30 rows=735 width=38) (actual time=188.494..188.531 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 392kB
               ->  Nested Loop Anti Join  (cost=0.43..8499.47 rows=735 width=38) (actual time=90.682..186.632 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=90.665..142.434 rows=19077 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 13.307 ms
 Execution Time: 189.359 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16080.91..16080.93 rows=1 width=72) (actual time=154.414..154.415 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7546.43..7546.44 rows=1 width=32) (actual time=71.935..71.935 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4772 width=6) (actual time=0.008..68.515 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8534.46..8554.68 rows=735 width=72) (actual time=154.413..154.413 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8534.46..8536.30 rows=735 width=38) (actual time=154.222..154.258 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 392kB
               ->  Nested Loop Anti Join  (cost=0.43..8499.47 rows=735 width=38) (actual time=71.975..152.377 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=71.958..120.969 rows=19077 loops=1)
                           Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.765 ms
 Execution Time: 154.454 ms
(20 rows)

