query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184214.38..184215.02 rows=1 width=236) (actual time=2159.236..2159.310 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184214.38..184218.20 rows=6 width=236) (actual time=2159.234..2159.308 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184214.38..184217.25 rows=24 width=236) (actual time=2159.204..2159.280 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183214.32..183214.34 rows=6 width=236) (actual time=2150.978..2150.979 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183214.11..183214.25 rows=6 width=236) (actual time=2150.947..2150.955 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131311.70 rows=1482926 width=25) (actual time=1.742..418.257 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 16.248 ms
 Execution Time: 2160.537 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184214.38..184215.02 rows=1 width=236) (actual time=2046.798..2047.524 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184214.38..184218.20 rows=6 width=236) (actual time=2046.797..2047.522 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184214.38..184217.25 rows=24 width=236) (actual time=2046.773..2047.500 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183214.32..183214.34 rows=6 width=236) (actual time=2042.619..2042.620 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183214.11..183214.25 rows=6 width=236) (actual time=2042.590..2042.598 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131311.70 rows=1482926 width=25) (actual time=0.032..290.213 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.558 ms
 Execution Time: 2047.592 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55897.23..55897.23 rows=1 width=192) (actual time=462.812..462.888 rows=100 loops=1)
   ->  Sort  (cost=55897.23..55897.23 rows=1 width=192) (actual time=462.810..462.880 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=37839.21..55897.22 rows=1 width=192) (actual time=395.331..462.471 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6443.20 rows=942 width=30) (actual time=0.521..0.805 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=392 width=30) (actual time=0.334..34.843 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30540.09..30540.09 rows=159808 width=172) (actual time=394.111..394.114 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30540.09 rows=159808 width=172) (actual time=6.878..315.954 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.364..194.511 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.505..6.508 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.870..5.995 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.273..4.113 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.590..0.592 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.584..0.590 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.150..0.152 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.428..0.429 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.174..0.175 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.040..0.040 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.034..0.039 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.027..0.037 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.026..0.033 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.024..0.025 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 17.859 ms
 Execution Time: 462.994 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55897.23..55897.23 rows=1 width=192) (actual time=290.192..290.269 rows=100 loops=1)
   ->  Sort  (cost=55897.23..55897.23 rows=1 width=192) (actual time=290.191..290.262 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=37839.21..55897.22 rows=1 width=192) (actual time=255.400..289.903 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6443.20 rows=942 width=30) (actual time=0.283..0.481 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=392 width=30) (actual time=0.034..14.125 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30540.09..30540.09 rows=159808 width=172) (actual time=254.704..254.708 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30540.09 rows=159808 width=172) (actual time=3.096..183.093 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..50.765 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=3.086..3.089 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.261..2.580 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.685 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.256..0.258 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.247..0.256 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.236..0.237 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.865 ms
 Execution Time: 290.368 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234361.80..234361.83 rows=10 width=44) (actual time=1165.497..1167.129 rows=10 loops=1)
   ->  Sort  (cost=234361.80..235165.16 rows=321344 width=44) (actual time=1165.496..1167.127 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180104.71..227417.67 rows=321344 width=44) (actual time=1141.946..1164.872 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180104.71..218580.71 rows=321344 width=24) (actual time=1141.931..1147.877 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179104.65..179305.49 rows=80336 width=24) (actual time=1132.295..1132.611 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 665kB
                           Worker 0:  Sort Method: quicksort  Memory: 649kB
                           Worker 1:  Sort Method: quicksort  Memory: 717kB
                           Worker 2:  Sort Method: quicksort  Memory: 654kB
                           Worker 3:  Sort Method: quicksort  Memory: 662kB
                           ->  Parallel Hash Join  (cost=37923.07..172559.77 rows=80336 width=24) (actual time=230.520..1130.290 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131311.70 rows=817561 width=16) (actual time=0.592..827.135 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37328.68..37328.68 rows=47551 width=12) (actual time=228.676..228.679 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 9056kB
                                       ->  Parallel Hash Join  (cost=4537.70..37328.68 rows=47551 width=12) (actual time=21.330..219.698 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232979 width=16) (actual time=0.391..168.088 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12756 width=4) (actual time=20.817..20.817 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12756 width=4) (actual time=0.084..19.103 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 17.140 ms
 Execution Time: 1167.526 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234361.80..234361.83 rows=10 width=44) (actual time=457.327..460.446 rows=10 loops=1)
   ->  Sort  (cost=234361.80..235165.16 rows=321344 width=44) (actual time=457.326..460.444 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180104.71..227417.67 rows=321344 width=44) (actual time=433.753..458.214 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180104.71..218580.71 rows=321344 width=24) (actual time=433.740..441.224 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179104.65..179305.49 rows=80336 width=24) (actual time=429.705..430.034 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 735kB
                           Worker 0:  Sort Method: quicksort  Memory: 702kB
                           Worker 1:  Sort Method: quicksort  Memory: 561kB
                           Worker 2:  Sort Method: quicksort  Memory: 757kB
                           Worker 3:  Sort Method: quicksort  Memory: 594kB
                           ->  Parallel Hash Join  (cost=37923.07..172559.77 rows=80336 width=24) (actual time=101.239..428.171 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131311.70 rows=817561 width=16) (actual time=0.068..247.084 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37328.68..37328.68 rows=47551 width=12) (actual time=99.412..99.414 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4537.70..37328.68 rows=47551 width=12) (actual time=8.853..87.923 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232979 width=16) (actual time=0.014..51.040 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12756 width=4) (actual time=8.609..8.610 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12756 width=4) (actual time=0.011..6.568 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.012 ms
 Execution Time: 460.507 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29281.18..61513.67 rows=1 width=24) (actual time=3146.491..3149.808 rows=1 loops=1)
   ->  GroupAggregate  (cost=29281.18..190443.63 rows=5 width=24) (actual time=3146.490..3149.807 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29281.18..190169.36 rows=54845 width=16) (actual time=659.198..3142.958 rows=10479 loops=1)
               ->  Gather Merge  (cost=29280.75..35769.27 rows=54845 width=20) (actual time=658.544..672.987 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28280.71..28324.94 rows=17692 width=20) (actual time=650.651..651.085 rows=3772 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1471kB
                           Worker 0:  Sort Method: quicksort  Memory: 1510kB
                           Worker 1:  Sort Method: quicksort  Memory: 1454kB
                           Worker 2:  Sort Method: quicksort  Memory: 1476kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=636.09..27032.47 rows=17692 width=20) (actual time=3.848..644.107 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5813
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..622.38 rows=54845 width=0) (actual time=7.466..7.466 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.216..0.216 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 12.385 ms
 Execution Time: 3150.451 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29281.18..61513.67 rows=1 width=24) (actual time=78.741..83.768 rows=1 loops=1)
   ->  GroupAggregate  (cost=29281.18..190443.63 rows=5 width=24) (actual time=78.740..83.766 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29281.18..190169.36 rows=54845 width=16) (actual time=35.609..82.169 rows=10479 loops=1)
               ->  Gather Merge  (cost=29280.75..35769.27 rows=54845 width=20) (actual time=35.565..43.540 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28280.71..28324.94 rows=17692 width=20) (actual time=32.124..32.417 rows=3733 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1656kB
                           Worker 0:  Sort Method: quicksort  Memory: 1430kB
                           Worker 1:  Sort Method: quicksort  Memory: 1416kB
                           Worker 2:  Sort Method: quicksort  Memory: 1408kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=636.09..27032.47 rows=17692 width=20) (actual time=6.105..28.088 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=6695
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..622.38 rows=54845 width=0) (actual time=5.472..5.472 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.763 ms
 Execution Time: 83.824 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83821.01..83821.01 rows=1 width=58) (actual time=2218.000..2228.290 rows=1 loops=1)
   ->  Sort  (cost=83821.01..83821.07 rows=25 width=58) (actual time=2217.998..2228.288 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83781.74..83820.88 rows=25 width=58) (actual time=2217.290..2228.276 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83781.74..83820.01 rows=75 width=58) (actual time=2217.097..2228.253 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82781.70..82811.15 rows=25 width=58) (actual time=2207.182..2207.885 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82781.70..82787.53 rows=2331 width=38) (actual time=2207.001..2207.086 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 195kB
                                 Worker 0:  Sort Method: quicksort  Memory: 197kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 194kB
                                 ->  Hash Join  (cost=7829.60..82651.32 rows=2331 width=38) (actual time=50.493..2205.084 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7356.60..81872.45 rows=58262 width=50) (actual time=44.663..2187.414 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7356.16..34913.37 rows=14565 width=38) (actual time=44.308..468.256 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2616.03..29839.45 rows=72828 width=8) (actual time=19.923..417.779 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6410
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2559.59 rows=225766 width=0) (actual time=15.861..15.861 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.228..24.231 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.220..21.882 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.097..17.081 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.117..0.119 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.107..0.116 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.053..0.055 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.045..0.046 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.143..0.150 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.714..3.714 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.078..2.227 rows=10000 loops=4)
 Planning Time: 23.244 ms
 Execution Time: 2228.389 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83821.01..83821.01 rows=1 width=58) (actual time=144.311..158.378 rows=1 loops=1)
   ->  Sort  (cost=83821.01..83821.07 rows=25 width=58) (actual time=144.310..158.376 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83781.74..83820.88 rows=25 width=58) (actual time=143.561..158.364 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83781.74..83820.01 rows=75 width=58) (actual time=143.378..158.340 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82781.70..82811.15 rows=25 width=58) (actual time=139.679..140.407 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82781.70..82787.53 rows=2331 width=38) (actual time=139.500..139.584 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 197kB
                                 Worker 0:  Sort Method: quicksort  Memory: 194kB
                                 Worker 1:  Sort Method: quicksort  Memory: 199kB
                                 Worker 2:  Sort Method: quicksort  Memory: 193kB
                                 ->  Hash Join  (cost=7829.60..82651.32 rows=2331 width=38) (actual time=31.189..138.520 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7356.60..81872.45 rows=58262 width=50) (actual time=28.175..127.398 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7356.16..34913.37 rows=14565 width=38) (actual time=28.151..69.049 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2616.03..29839.45 rows=72828 width=8) (actual time=16.121..43.002 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6536
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2559.59 rows=225766 width=0) (actual time=12.537..12.538 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.866..11.869 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.041..9.670 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.450 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.029..0.031 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.023..0.029 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.010..0.011 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.905..2.905 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.426 rows=10000 loops=4)
 Planning Time: 4.304 ms
 Execution Time: 158.463 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107823.51..107823.52 rows=1 width=32) (actual time=1755.909..1757.677 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107823.51..107823.52 rows=1 width=32) (actual time=1755.908..1757.674 rows=1 loops=1)
         ->  Gather  (cost=107823.08..107823.49 rows=4 width=32) (actual time=1750.427..1757.653 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106823.08..106823.09 rows=1 width=32) (actual time=1741.172..1741.173 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21184.46..106672.95 rows=30025 width=12) (actual time=144.201..1722.507 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13167
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21154.44 rows=120100 width=0) (actual time=140.448..140.448 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 9.048 ms
 Execution Time: 1758.949 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107823.51..107823.52 rows=1 width=32) (actual time=207.809..213.409 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107823.51..107823.52 rows=1 width=32) (actual time=207.808..213.407 rows=1 loops=1)
         ->  Gather  (cost=107823.08..107823.49 rows=4 width=32) (actual time=204.930..213.385 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106823.08..106823.09 rows=1 width=32) (actual time=201.329..201.330 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21184.46..106672.95 rows=30025 width=12) (actual time=117.165..193.490 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=10181
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21154.44 rows=120100 width=0) (actual time=108.446..108.446 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.485 ms
 Execution Time: 213.460 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141344.00..141502.38 rows=1 width=116) (actual time=3424.657..3426.122 rows=1 loops=1)
   ->  GroupAggregate  (cost=141344.00..1088934.14 rows=5983 width=116) (actual time=3424.656..3426.120 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141344.00..1088754.65 rows=5983 width=96) (actual time=806.320..3423.132 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32729
               ->  Nested Loop  (cost=141343.58..624469.29 rows=149577 width=76) (actual time=804.062..2870.708 rows=34088 loops=1)
                     ->  Gather Merge  (cost=141343.15..159254.38 rows=149591 width=76) (actual time=803.108..845.761 rows=34088 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140343.09..140436.59 rows=37398 width=76) (actual time=790.783..791.713 rows=7220 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4812kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4933kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5026kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4737kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4686kB
                                 ->  Hash Join  (cost=381.77..137502.59 rows=37398 width=76) (actual time=3.946..765.174 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135062.04 rows=449320 width=24) (actual time=0.787..707.522 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.058..3.061 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.190..2.873 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.122..1.501 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.062..0.064 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.053..0.059 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.041..0.043 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.059..0.059 rows=1 loops=34088)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=34088)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.325 ms
 Execution Time: 3426.490 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141344.00..141502.38 rows=1 width=116) (actual time=523.234..524.392 rows=1 loops=1)
   ->  GroupAggregate  (cost=141344.00..1088934.14 rows=5983 width=116) (actual time=523.233..524.390 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141344.00..1088754.65 rows=5983 width=96) (actual time=351.050..523.196 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32706
               ->  Nested Loop  (cost=141343.58..624469.29 rows=149577 width=76) (actual time=350.572..448.019 rows=34065 loops=1)
                     ->  Gather Merge  (cost=141343.15..159254.38 rows=149591 width=76) (actual time=350.532..369.941 rows=34065 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140343.09..140436.59 rows=37398 width=76) (actual time=341.365..342.061 rows=7246 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 6411kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6504kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3986kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3712kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5117kB
                                 ->  Hash Join  (cost=381.77..137502.59 rows=37398 width=76) (actual time=3.256..314.184 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135062.04 rows=449320 width=24) (actual time=0.041..258.990 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.130..3.133 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.041..2.150 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..0.701 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.028..0.030 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.019..0.025 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34065)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34065)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 3.196 ms
 Execution Time: 524.486 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41984.78..42366.69 rows=1 width=64) (actual time=5191.553..5195.474 rows=1 loops=1)
   ->  GroupAggregate  (cost=41984.78..960844.33 rows=2406 width=64) (actual time=5191.552..5195.472 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41984.78..960747.85 rows=2418 width=70) (actual time=246.081..5192.734 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=41984.78..959867.32 rows=2418 width=20) (actual time=246.060..5188.371 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41984.50..952772.09 rows=2418 width=20) (actual time=245.896..5143.079 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41984.07..347011.84 rows=364399 width=24) (actual time=241.034..4099.325 rows=182930 loops=1)
                                 ->  Gather Merge  (cost=41983.63..52761.35 rows=91100 width=8) (actual time=240.047..279.866 rows=45646 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40983.59..41057.06 rows=29387 width=8) (actual time=231.740..233.014 rows=12534 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1843kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1826kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1848kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1831kB
                                             ->  Parallel Hash Join  (cost=4740.13..38802.65 rows=29387 width=8) (actual time=29.195..224.226 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146935 width=12) (actual time=0.424..165.255 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=28.532..28.535 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.223..26.805 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.108..22.168 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.109..0.111 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.104..0.110 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.049..0.051 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.077..0.082 rows=4 loops=45646)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=182930)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62937  Misses: 119993  Evictions: 0  Overflows: 0  Memory Usage: 7997kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=119993)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.036..0.036 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.014 rows=25 loops=1)
 Planning Time: 27.156 ms
 Execution Time: 5196.526 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41984.78..42366.69 rows=1 width=64) (actual time=612.102..618.725 rows=1 loops=1)
   ->  GroupAggregate  (cost=41984.78..960844.33 rows=2406 width=64) (actual time=612.100..618.723 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41984.78..960747.85 rows=2418 width=70) (actual time=100.430..617.531 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14812
               ->  Nested Loop  (cost=41984.78..959867.32 rows=2418 width=20) (actual time=100.415..615.083 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41984.50..952772.09 rows=2418 width=20) (actual time=100.399..611.749 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41984.07..347011.84 rows=364399 width=24) (actual time=99.078..285.854 rows=182880 loops=1)
                                 ->  Gather Merge  (cost=41983.63..52761.35 rows=91100 width=8) (actual time=99.036..122.664 rows=45635 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40983.59..41057.06 rows=29387 width=8) (actual time=95.577..96.421 rows=12498 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1840kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1843kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1836kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1830kB
                                             ->  Parallel Hash Join  (cost=4740.13..38802.65 rows=29387 width=8) (actual time=11.412..89.277 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=146935 width=12) (actual time=0.013..55.596 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.197..11.200 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.044..9.583 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.005..3.478 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.034..0.036 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.028..0.035 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45635)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182880)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62903  Misses: 119977  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119977)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.009 rows=25 loops=1)
 Planning Time: 5.060 ms
 Execution Time: 619.907 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=40987.19..42042.08 rows=1 width=90) (actual time=4555.508..4558.645 rows=1 loops=1)
   ->  GroupAggregate  (cost=40987.19..312094.76 rows=257 width=90) (actual time=4555.507..4558.644 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=40987.19..312086.41 rows=257 width=81) (actual time=4554.570..4557.755 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=29691.56..312074.77 rows=257 width=81) (actual time=185.701..4532.724 rows=13629 loops=1)
                     ->  Nested Loop  (cost=29691.13..311265.52 rows=257 width=53) (actual time=185.071..2426.179 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=29690.70..39810.87 rows=85542 width=48) (actual time=183.990..189.421 rows=1812 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Sort  (cost=28690.66..28759.64 rows=27594 width=48) (actual time=174.918..175.038 rows=1035 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1892kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2005kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1873kB
                                       Worker 2:  Sort Method: quicksort  Memory: 1889kB
                                       ->  Hash Join  (cost=5705.97..26655.31 rows=27594 width=48) (actual time=32.153..167.453 rows=10880 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=5704.40..26569.04 rows=27594 width=26) (actual time=32.012..164.912 rows=10880 loops=4)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=5256.40..26048.48 rows=27627 width=18) (actual time=28.283..157.080 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.484..106.195 rows=200000 loops=4)
                                                         ->  Parallel Hash  (cost=5140.67..5140.67 rows=9259 width=4) (actual time=27.528..27.529 rows=2720 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 768kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=9259 width=4) (actual time=0.082..26.621 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.695..3.695 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.083..2.365 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.065..0.066 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.057..0.060 rows=25 loops=4)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.281..1.227 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.151..0.151 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 26.345 ms
 Execution Time: 4558.748 ms
(44 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=40987.19..42042.08 rows=1 width=90) (actual time=152.143..157.024 rows=1 loops=1)
   ->  GroupAggregate  (cost=40987.19..312094.76 rows=257 width=90) (actual time=152.142..157.022 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=40987.19..312086.41 rows=257 width=81) (actual time=151.216..156.145 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=29691.56..312074.77 rows=257 width=81) (actual time=75.659..147.798 rows=13629 loops=1)
                     ->  Nested Loop  (cost=29691.13..311265.52 rows=257 width=53) (actual time=75.632..100.696 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=29690.70..39810.87 rows=85542 width=48) (actual time=75.577..81.217 rows=1812 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Sort  (cost=28690.66..28759.64 rows=27594 width=48) (actual time=72.713..72.802 rows=1037 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1943kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1936kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1875kB
                                       Worker 2:  Sort Method: quicksort  Memory: 1904kB
                                       ->  Hash Join  (cost=5705.97..26655.31 rows=27594 width=48) (actual time=15.223..66.059 rows=10880 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=5704.40..26569.04 rows=27594 width=26) (actual time=15.129..63.806 rows=10880 loops=4)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=5256.40..26048.48 rows=27627 width=18) (actual time=12.262..57.390 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.003..17.301 rows=200000 loops=4)
                                                         ->  Parallel Hash  (cost=5140.67..5140.67 rows=9259 width=4) (actual time=12.107..12.108 rows=2720 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 768kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=9259 width=4) (actual time=0.016..11.501 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.841..2.841 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.537 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.023 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=4)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.351 ms
 Execution Time: 157.112 ms
(44 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100080.72..100080.77 rows=20 width=202) (actual time=2151.911..2156.800 rows=20 loops=1)
   ->  Sort  (cost=100080.72..100217.94 rows=54887 width=202) (actual time=2151.910..2156.796 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97934.11..98620.20 rows=54887 width=202) (actual time=2118.889..2145.245 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6660.65..97248.02 rows=54887 width=182) (actual time=59.643..2003.082 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5660.65..90759.32 rows=17705 width=182) (actual time=50.382..2060.559 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5659.09..90703.41 rows=17705 width=160) (actual time=50.256..2050.234 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=655.84..85653.68 rows=17705 width=16) (actual time=13.863..1992.537 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=655.41..27059.49 rows=18205 width=8) (actual time=12.848..484.925 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5024
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..641.30 rows=56437 width=0) (actual time=9.067..9.067 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.101..0.104 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=35.880..35.880 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.089..15.272 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.053..0.054 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.045..0.048 rows=25 loops=4)
 Planning Time: 19.127 ms
 Execution Time: 2157.547 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100080.72..100080.77 rows=20 width=202) (actual time=218.943..223.026 rows=20 loops=1)
   ->  Sort  (cost=100080.72..100217.94 rows=54887 width=202) (actual time=218.941..223.023 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97934.11..98620.20 rows=54887 width=202) (actual time=186.111..211.708 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6660.65..97248.02 rows=54887 width=182) (actual time=42.826..101.596 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5660.65..90759.32 rows=17705 width=182) (actual time=39.189..146.575 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5659.09..90703.41 rows=17705 width=160) (actual time=39.106..139.793 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=655.84..85653.68 rows=17705 width=16) (actual time=10.585..98.227 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=655.41..27059.49 rows=18205 width=8) (actual time=10.547..26.499 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1812
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..641.30 rows=56437 width=0) (actual time=7.302..7.302 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.004 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.099..28.100 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..8.044 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.017 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
 Planning Time: 1.823 ms
 Execution Time: 223.439 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15991.32..15991.32 rows=1 width=36) (actual time=715.656..715.660 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.35..7689.36 rows=1 width=32) (actual time=26.474..26.476 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.63 rows=31962 width=10) (actual time=0.050..18.210 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.289 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.237 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.95..8328.59 rows=10654 width=36) (actual time=715.654..715.656 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.25..8248.68 rows=10654 width=36) (actual time=704.731..715.501 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.63 rows=31962 width=14) (actual time=1.323..644.943 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.919..4.649 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.293..0.297 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.622..4.251 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.290..0.290 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.044..1.541 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.515 ms
 Execution Time: 716.024 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15991.32..15991.32 rows=1 width=36) (actual time=84.865..84.869 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.35..7689.36 rows=1 width=32) (actual time=26.382..26.385 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.63 rows=31962 width=10) (actual time=0.049..18.098 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.043..0.282 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.033..0.229 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.017 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.95..8328.59 rows=10654 width=36) (actual time=84.863..84.865 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.25..8248.68 rows=10654 width=36) (actual time=73.885..84.715 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.63 rows=31962 width=14) (actual time=0.061..27.600 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.055..0.408 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.046..0.348 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.027..0.027 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.057 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.002 ms
 Execution Time: 85.204 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147773.13..161095.35 rows=1 width=27) (actual time=1720.685..1721.708 rows=1 loops=1)
   ->  GroupAggregate  (cost=147773.13..241028.68 rows=7 width=27) (actual time=1720.684..1721.706 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147773.13..240526.35 rows=28701 width=27) (actual time=835.661..1711.568 rows=15492 loops=1)
               ->  Gather Merge  (cost=147772.70..151209.57 rows=28704 width=15) (actual time=834.905..844.291 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146772.65..146790.59 rows=7176 width=15) (actual time=823.372..823.707 rows=4229 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 484kB
                           Worker 0:  Sort Method: quicksort  Memory: 495kB
                           Worker 1:  Sort Method: quicksort  Memory: 489kB
                           Worker 2:  Sort Method: quicksort  Memory: 475kB
                           Worker 3:  Sort Method: quicksort  Memory: 470kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146313.06 rows=7176 width=15) (actual time=0.379..821.274 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.055..0.055 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 12.424 ms
 Execution Time: 1722.135 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147773.13..161095.35 rows=1 width=27) (actual time=400.521..401.518 rows=1 loops=1)
   ->  GroupAggregate  (cost=147773.13..241028.68 rows=7 width=27) (actual time=400.519..401.516 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147773.13..240526.35 rows=28701 width=27) (actual time=353.913..396.628 rows=15492 loops=1)
               ->  Gather Merge  (cost=147772.70..151209.57 rows=28704 width=15) (actual time=353.874..358.606 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146772.65..146790.59 rows=7176 width=15) (actual time=350.218..350.441 rows=4248 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 529kB
                           Worker 0:  Sort Method: quicksort  Memory: 487kB
                           Worker 1:  Sort Method: quicksort  Memory: 439kB
                           Worker 2:  Sort Method: quicksort  Memory: 494kB
                           Worker 3:  Sort Method: quicksort  Memory: 464kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146313.06 rows=7176 width=15) (actual time=0.060..347.722 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.766 ms
 Execution Time: 401.568 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64355.91..64355.91 rows=1 width=16) (actual time=1454.921..1454.923 rows=1 loops=1)
   ->  Sort  (cost=64355.91..64356.41 rows=200 width=16) (actual time=1454.919..1454.921 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64352.91..64354.91 rows=200 width=16) (actual time=1454.894..1454.900 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60602.91..62102.91 rows=150000 width=12) (actual time=1415.341..1437.948 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53405.94 rows=1439394 width=8) (actual time=33.915..1050.457 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1439394 width=8) (actual time=0.542..617.372 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.024..33.024 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..15.976 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.716 ms
 Execution Time: 1456.002 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64355.91..64355.91 rows=1 width=16) (actual time=1258.571..1258.574 rows=1 loops=1)
   ->  Sort  (cost=64355.91..64356.41 rows=200 width=16) (actual time=1258.570..1258.572 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64352.91..64354.91 rows=200 width=16) (actual time=1258.544..1258.551 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60602.91..62102.91 rows=150000 width=12) (actual time=1218.751..1241.315 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53405.94 rows=1439394 width=8) (actual time=29.455..872.884 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1439394 width=8) (actual time=0.011..465.734 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.040..29.041 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..12.970 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.667 ms
 Execution Time: 1259.734 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72907.49..72907.51 rows=1 width=32) (actual time=896.419..899.064 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72907.49..72907.51 rows=1 width=32) (actual time=896.418..899.062 rows=1 loops=1)
         ->  Gather  (cost=72907.04..72907.45 rows=4 width=64) (actual time=892.399..899.035 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71907.04..71907.05 rows=1 width=64) (actual time=884.346..884.348 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7165.97..71582.20 rows=18562 width=33) (actual time=54.514..868.675 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1191.97..65559.48 rows=18562 width=16) (actual time=20.926..820.102 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8354
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1173.41 rows=74248 width=0) (actual time=14.204..14.205 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.176..33.176 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.075..19.451 rows=40000 loops=5)
 Planning Time: 15.925 ms
 Execution Time: 899.116 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72907.49..72907.51 rows=1 width=32) (actual time=107.455..109.631 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72907.49..72907.51 rows=1 width=32) (actual time=107.454..109.629 rows=1 loops=1)
         ->  Gather  (cost=72907.04..72907.45 rows=4 width=64) (actual time=107.431..109.610 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71907.04..71907.05 rows=1 width=64) (actual time=98.829..98.831 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7165.97..71582.20 rows=18562 width=33) (actual time=39.212..91.450 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1191.97..65559.48 rows=18562 width=16) (actual time=15.619..59.142 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9948
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1173.41 rows=74248 width=0) (actual time=8.533..8.534 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.196..23.197 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..7.370 rows=40000 loops=5)
 Planning Time: 0.714 ms
 Execution Time: 109.669 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238760.69..238867.78 rows=1 width=103) (actual time=1959.366..1967.189 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120665.64..120665.65 rows=1 width=32) (actual time=248.069..248.071 rows=1 loops=1)
           ->  HashAggregate  (cost=120416.12..120540.88 rows=9981 width=36) (actual time=244.657..247.472 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3514.28..118224.56 rows=219156 width=16) (actual time=29.360..122.398 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3459.49 rows=219156 width=0) (actual time=18.994..18.995 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118095.04..123449.31 rows=50 width=103) (actual time=1959.364..1967.184 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118094.75..123324.18 rows=50 width=36) (actual time=1958.754..1966.573 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118094.75..122875.04 rows=39924 width=36) (actual time=1684.074..1699.704 rows=41775 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117094.69..117119.65 rows=9981 width=36) (actual time=1673.213..1674.175 rows=8851 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1777kB
                           Worker 0:  Sort Method: quicksort  Memory: 1776kB
                           Worker 1:  Sort Method: quicksort  Memory: 1776kB
                           Worker 2:  Sort Method: quicksort  Memory: 1776kB
                           Worker 3:  Sort Method: quicksort  Memory: 1773kB
                           ->  Partial HashAggregate  (cost=116306.94..116431.71 rows=9981 width=36) (actual time=1663.895..1670.437 rows=9891 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3514.28..115759.05 rows=54789 width=16) (actual time=41.450..1608.676 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13402
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3459.49 rows=219156 width=0) (actual time=37.441..37.441 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.604..0.604 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.998 ms
 Execution Time: 1968.152 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238760.69..238867.78 rows=1 width=103) (actual time=426.187..438.102 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120665.64..120665.65 rows=1 width=32) (actual time=229.849..229.850 rows=1 loops=1)
           ->  HashAggregate  (cost=120416.12..120540.88 rows=9981 width=36) (actual time=226.376..229.250 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3514.28..118224.56 rows=219156 width=16) (actual time=28.840..107.569 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3459.49 rows=219156 width=0) (actual time=18.639..18.639 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118095.04..123449.31 rows=50 width=103) (actual time=426.186..438.099 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118094.75..123324.18 rows=50 width=36) (actual time=426.166..438.078 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118094.75..122875.04 rows=39924 width=36) (actual time=170.002..189.595 rows=41709 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117094.69..117119.65 rows=9981 width=36) (actual time=163.704..164.637 rows=8856 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1780kB
                           Worker 0:  Sort Method: quicksort  Memory: 1764kB
                           Worker 1:  Sort Method: quicksort  Memory: 1765kB
                           Worker 2:  Sort Method: quicksort  Memory: 1778kB
                           Worker 3:  Sort Method: quicksort  Memory: 1780kB
                           ->  Partial HashAggregate  (cost=116306.94..116431.71 rows=9981 width=36) (actual time=154.496..160.932 rows=9877 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3514.28..115759.05 rows=54789 width=16) (actual time=33.451..116.321 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14195
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3459.49 rows=219156 width=0) (actual time=26.638..26.638 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.015..0.015 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.731 ms
 Execution Time: 438.461 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26196.80..26196.80 rows=1 width=44) (actual time=284.675..285.353 rows=1 loops=1)
   ->  Sort  (cost=26196.80..26236.38 rows=15832 width=44) (actual time=284.674..285.351 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18701.57..26117.64 rows=15832 width=44) (actual time=191.955..281.036 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18701.57..25399.89 rows=55943 width=40) (actual time=191.932..241.514 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17701.52..17736.48 rows=13986 width=40) (actual time=164.974..166.737 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2816kB
                           Worker 0:  Sort Method: quicksort  Memory: 2682kB
                           Worker 1:  Sort Method: quicksort  Memory: 2366kB
                           Worker 2:  Sort Method: quicksort  Memory: 2625kB
                           Worker 3:  Sort Method: quicksort  Memory: 2567kB
                           ->  Parallel Hash Join  (cost=6681.96..16738.46 rows=13986 width=40) (actual time=34.769..102.142 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.668..56.944 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.819..7.061 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12096 width=40) (actual time=26.882..26.883 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12096 width=40) (actual time=0.152..24.674 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.015 ms
 Execution Time: 286.120 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26196.80..26196.80 rows=1 width=44) (actual time=246.333..246.745 rows=1 loops=1)
   ->  Sort  (cost=26196.80..26236.38 rows=15832 width=44) (actual time=246.332..246.743 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18701.57..26117.64 rows=15832 width=44) (actual time=155.103..242.529 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18701.57..25399.89 rows=55943 width=40) (actual time=155.076..204.014 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17701.52..17736.48 rows=13986 width=40) (actual time=137.153..138.869 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2445kB
                           Worker 0:  Sort Method: quicksort  Memory: 2611kB
                           Worker 1:  Sort Method: quicksort  Memory: 2363kB
                           Worker 2:  Sort Method: quicksort  Memory: 2939kB
                           Worker 3:  Sort Method: quicksort  Memory: 2698kB
                           ->  Parallel Hash Join  (cost=6681.96..16738.46 rows=13986 width=40) (actual time=18.098..74.682 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.720..41.544 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.405 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12096 width=40) (actual time=15.185..15.186 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12096 width=40) (actual time=0.014..12.203 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.074 ms
 Execution Time: 246.810 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=338148.94..338148.95 rows=1 width=32) (actual time=2547.796..2553.414 rows=1 loops=1)
   ->  Aggregate  (cost=338148.94..338148.95 rows=1 width=32) (actual time=2547.795..2553.412 rows=1 loops=1)
         ->  Merge Join  (cost=222962.58..338144.03 rows=1961 width=8) (actual time=1855.396..2553.311 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221961.70..322673.69 rows=192221 width=36) (actual time=1847.268..2528.943 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221961.70..314023.75 rows=768884 width=36) (actual time=1847.248..2042.898 rows=993780 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220961.64..221442.19 rows=192221 width=36) (actual time=1706.212..1729.368 rows=199269 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 32766kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32732kB
                                 Worker 1:  Sort Method: quicksort  Memory: 32722kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32753kB
                                 Worker 3:  Sort Method: quicksort  Memory: 32693kB
                                 ->  Partial HashAggregate  (cost=187039.41..204091.94 rows=192221 width=36) (actual time=1140.987..1646.079 rows=199477 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 28216kB
                                       Worker 0:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27536kB
                                       Worker 1:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27400kB
                                       Worker 2:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27960kB
                                       Worker 3:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 24024kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127561.36 rows=1500136 width=9) (actual time=0.128..421.257 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12978.74 rows=6121 width=21) (actual time=5.545..10.849 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12963.43 rows=6121 width=21) (actual time=5.539..10.080 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11256.89 rows=2550 width=21) (actual time=1.837..70.547 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=85 width=4) (actual time=0.630..26.215 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.70 rows=31 width=17) (actual time=0.397..0.630 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 14.309 ms
 Execution Time: 2558.313 ms
(38 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=338148.94..338148.95 rows=1 width=32) (actual time=2289.375..2295.699 rows=1 loops=1)
   ->  Aggregate  (cost=338148.94..338148.95 rows=1 width=32) (actual time=2289.374..2295.697 rows=1 loops=1)
         ->  Merge Join  (cost=222962.58..338144.03 rows=1961 width=8) (actual time=1608.798..2295.608 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221961.70..322673.69 rows=192221 width=36) (actual time=1603.189..2276.764 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221961.70..314023.75 rows=768884 width=36) (actual time=1603.172..1797.952 rows=993454 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220961.64..221442.19 rows=192221 width=36) (actual time=1491.590..1514.325 rows=199198 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 32711kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32763kB
                                 Worker 1:  Sort Method: quicksort  Memory: 32636kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32760kB
                                 Worker 3:  Sort Method: quicksort  Memory: 32749kB
                                 ->  Partial HashAggregate  (cost=187039.41..204091.94 rows=192221 width=36) (actual time=926.931..1426.228 rows=199412 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 24344kB
                                       Worker 0:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 28184kB
                                       Worker 1:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 23520kB
                                       Worker 2:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 28168kB
                                       Worker 3:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27792kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127561.36 rows=1500136 width=9) (actual time=0.034..170.711 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12978.74 rows=6121 width=21) (actual time=3.353..5.644 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12963.43 rows=6121 width=21) (actual time=3.348..4.947 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11256.89 rows=2550 width=21) (actual time=0.162..17.108 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=85 width=4) (actual time=0.144..14.434 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.70 rows=31 width=17) (actual time=0.005..0.034 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.875 ms
 Execution Time: 2299.639 ms
(38 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803549.01..803549.26 rows=100 width=71) (actual time=4598.329..4598.334 rows=9 loops=1)
   ->  Sort  (cost=803549.01..808549.46 rows=2000180 width=71) (actual time=4598.327..4598.331 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=666941.91..727103.57 rows=2000180 width=71) (actual time=4597.939..4598.292 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338877.94..559197.84 rows=2000180 width=44) (actual time=3827.049..4597.867 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331905.94..546975.22 rows=2000180 width=25) (actual time=3756.455..4527.253 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172565.44 rows=6000544 width=9) (actual time=0.565..331.277 rows=6001215 loops=1)
                           ->  Hash  (cost=325655.38..325655.38 rows=500045 width=24) (actual time=3549.810..3549.813 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280586.87..325655.38 rows=500045 width=24) (actual time=3191.741..3549.783 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.609..275.946 rows=1500000 loops=1)
                                       ->  Hash  (cost=274336.30..274336.30 rows=500045 width=4) (actual time=3092.204..3092.205 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269335.85 rows=500045 width=4) (actual time=660.203..3092.171 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216831.09 rows=6000544 width=9) (actual time=0.020..1671.663 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=70.214..70.214 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.322..43.991 rows=150000 loops=1)
 Planning Time: 19.079 ms
 Execution Time: 4599.265 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803549.01..803549.26 rows=100 width=71) (actual time=3520.224..3520.230 rows=9 loops=1)
   ->  Sort  (cost=803549.01..808549.46 rows=2000180 width=71) (actual time=3520.222..3520.227 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=666941.91..727103.57 rows=2000180 width=71) (actual time=3519.820..3520.187 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338877.94..559197.84 rows=2000180 width=44) (actual time=2746.958..3519.749 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331905.94..546975.22 rows=2000180 width=25) (actual time=2701.896..3474.669 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172565.44 rows=6000544 width=9) (actual time=0.009..331.064 rows=6001215 loops=1)
                           ->  Hash  (cost=325655.38..325655.38 rows=500045 width=24) (actual time=2495.373..2495.375 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280586.87..325655.38 rows=500045 width=24) (actual time=2273.167..2495.352 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.006..82.816 rows=1500000 loops=1)
                                       ->  Hash  (cost=274336.30..274336.30 rows=500045 width=4) (actual time=2213.012..2213.013 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269335.85 rows=500045 width=4) (actual time=467.285..2212.993 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216831.09 rows=6000544 width=9) (actual time=0.017..880.920 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.623..44.623 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.010..19.595 rows=150000 loops=1)
 Planning Time: 1.398 ms
 Execution Time: 3520.919 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18344.72..18344.73 rows=1 width=32) (actual time=857.073..857.771 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18344.72..18344.73 rows=1 width=32) (actual time=857.072..857.769 rows=1 loops=1)
         ->  Gather  (cost=18344.50..18344.71 rows=2 width=32) (actual time=857.059..857.759 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17344.50..17344.51 rows=1 width=32) (actual time=849.474..849.475 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17344.15 rows=47 width=12) (actual time=18.070..849.353 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.548..28.375 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.03 rows=1 width=21) (actual time=4.332..4.856 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 15.828 ms
 Execution Time: 857.837 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18344.72..18344.73 rows=1 width=32) (actual time=28.459..32.049 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18344.72..18344.73 rows=1 width=32) (actual time=28.458..32.047 rows=1 loops=1)
         ->  Gather  (cost=18344.50..18344.71 rows=2 width=32) (actual time=28.379..32.037 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17344.50..17344.51 rows=1 width=32) (actual time=25.959..25.960 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17344.15 rows=47 width=12) (actual time=0.766..25.914 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.125..16.864 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.03 rows=1 width=21) (actual time=0.047..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.961 ms
 Execution Time: 32.092 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=220575.10..220575.11 rows=1 width=51) (actual time=4885.011..4885.015 rows=1 loops=1)
   ->  Sort  (cost=220575.10..220575.11 rows=1 width=51) (actual time=4885.010..4885.013 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184364.62..220575.09 rows=1 width=51) (actual time=4711.026..4884.803 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.500..3.770 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.200..0.203 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.292..2.778 rows=10000 loops=1)
               ->  Materialize  (cost=184364.62..220119.78 rows=1 width=8) (actual time=8.138..10.901 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184364.62..220119.78 rows=1 width=8) (actual time=3564.369..4704.176 rows=5898 loops=1)
                           ->  Hash Join  (cost=184364.19..206308.43 rows=9689 width=44) (actual time=3563.773..4198.852 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=177714.69..193603.53 rows=479634 width=40) (actual time=3513.212..4099.129 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14275.50..140189.98 rows=890299 width=13) (actual time=130.655..2985.814 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14052.92 rows=890299 width=0) (actual time=111.818..111.818 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=4040 width=4) (actual time=50.538..50.539 rows=2187 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4) (actual time=0.350..49.903 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.085..0.085 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 19.838 ms
 Execution Time: 4890.425 ms
(37 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=220575.10..220575.11 rows=1 width=51) (actual time=1488.967..1488.970 rows=1 loops=1)
   ->  Sort  (cost=220575.10..220575.11 rows=1 width=51) (actual time=1488.965..1488.969 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184364.62..220575.09 rows=1 width=51) (actual time=1312.948..1488.795 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.014..1.708 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.593 rows=10000 loops=1)
               ->  Materialize  (cost=184364.62..220119.78 rows=1 width=8) (actual time=1.632..3.145 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184364.62..220119.78 rows=1 width=8) (actual time=714.888..1309.420 rows=5898 loops=1)
                           ->  Hash Join  (cost=184364.19..206308.43 rows=9689 width=44) (actual time=714.865..1286.582 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=177714.69..193603.53 rows=479634 width=40) (actual time=693.274..1226.330 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14275.50..140189.98 rows=890299 width=13) (actual time=91.504..307.255 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14052.92 rows=890299 width=0) (actual time=73.106..73.107 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=4040 width=4) (actual time=21.572..21.573 rows=2187 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4) (actual time=0.029..21.241 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.663 ms
 Execution Time: 1493.662 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194172.98..194172.98 rows=1 width=34) (actual time=1351.246..1351.363 rows=100 loops=1)
   ->  Sort  (cost=194172.98..194172.98 rows=1 width=34) (actual time=1351.245..1351.355 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194172.95..194172.97 rows=1 width=34) (actual time=1350.205..1350.940 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194172.95..194172.95 rows=1 width=26) (actual time=1350.197..1350.463 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194172.94 rows=1 width=26) (actual time=13.297..1336.401 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194169.54 rows=1 width=38) (actual time=12.979..1250.617 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194166.23 rows=1 width=34) (actual time=11.281..14.934 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193166.13 rows=1 width=34) (actual time=3.867..612.227 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133620.96 rows=20002 width=34) (actual time=2.502..509.758 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131311.70 rows=500045 width=8) (actual time=0.302..442.179 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=2.108..2.110 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.440..2.022 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.229..0.230 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.208..1.728 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.112..0.112 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.086..0.086 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.012 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 16.774 ms
 Execution Time: 1351.707 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194172.98..194172.98 rows=1 width=34) (actual time=484.997..485.108 rows=100 loops=1)
   ->  Sort  (cost=194172.98..194172.98 rows=1 width=34) (actual time=484.996..485.100 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194172.95..194172.97 rows=1 width=34) (actual time=483.949..484.692 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194172.95..194172.95 rows=1 width=26) (actual time=483.938..484.203 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194172.94 rows=1 width=26) (actual time=2.011..470.288 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194169.54 rows=1 width=38) (actual time=1.832..450.959 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194166.23 rows=1 width=34) (actual time=1.009..406.645 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193166.13 rows=1 width=34) (actual time=0.742..453.211 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133620.96 rows=20002 width=34) (actual time=0.561..354.619 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131311.70 rows=500045 width=8) (actual time=0.030..276.327 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.451..0.453 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.057..0.386 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.044..0.322 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.024..0.025 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.654 ms
 Execution Time: 485.200 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.58..12517.21 rows=1 width=72) (actual time=214.622..216.330 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=46.757..46.838 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=46.639..46.827 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=38.883..38.884 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1991 width=6) (actual time=0.297..37.582 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7460.77 rows=729 width=72) (actual time=214.621..216.247 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7442.55 rows=729 width=38) (actual time=73.307..215.562 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=70.954..74.464 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.932..22.090 rows=1606 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 742kB
                           Worker 0:  Sort Method: quicksort  Memory: 660kB
                           Worker 1:  Sort Method: quicksort  Memory: 666kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.022..19.893 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.051..0.051 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.105 ms
 Execution Time: 217.024 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.58..12517.21 rows=1 width=72) (actual time=58.570..60.043 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=28.388..28.471 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.265..28.459 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.273..26.274 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1991 width=6) (actual time=0.184..25.100 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7460.77 rows=729 width=72) (actual time=58.568..59.959 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7442.55 rows=729 width=38) (actual time=52.428..59.747 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=52.360..54.471 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.518..21.591 rows=1521 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 778kB
                           Worker 0:  Sort Method: quicksort  Memory: 636kB
                           Worker 1:  Sort Method: quicksort  Memory: 654kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..19.598 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.805 ms
 Execution Time: 60.101 ms
(30 rows)

