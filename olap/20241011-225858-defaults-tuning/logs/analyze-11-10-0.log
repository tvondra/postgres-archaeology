query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246455.22..4246455.22 rows=1 width=236) (actual time=69997.019..69997.020 rows=1 loops=1)
   ->  Sort  (cost=4246455.22..4246455.23 rows=6 width=236) (actual time=69997.018..69997.019 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246455.02..4246455.19 rows=6 width=236) (actual time=69996.992..69997.000 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874954.70 rows=59287508 width=25) (actual time=0.424..11320.125 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 14.320 ms
 Execution Time: 69997.743 ms
(11 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4246455.22..4246455.22 rows=1 width=236) (actual time=66566.091..66566.092 rows=1 loops=1)
   ->  Sort  (cost=4246455.22..4246455.23 rows=6 width=236) (actual time=66566.090..66566.090 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4246455.02..4246455.19 rows=6 width=236) (actual time=66566.065..66566.073 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1874954.70 rows=59287508 width=25) (actual time=0.025..9520.368 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 0.466 ms
 Execution Time: 66566.141 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1087750.75..1087750.75 rows=1 width=193) (actual time=5214.163..5214.179 rows=100 loops=1)
   ->  Sort  (cost=1087750.75..1087750.75 rows=1 width=193) (actual time=5214.162..5214.171 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=553843.69..1087750.74 rows=1 width=193) (actual time=3113.162..5210.751 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.37 rows=8289 width=30) (actual time=0.352..767.004 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=553843.18..561723.05 rows=1575975 width=173) (actual time=3111.719..3577.905 rows=1603828 loops=1)
                     ->  Sort  (cost=553843.18..557783.12 rows=1575975 width=173) (actual time=3111.716..3427.535 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305042.78 rows=1575975 width=173) (actual time=43.677..2435.386 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255231.11 rows=8000911 width=14) (actual time=0.355..1063.875 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=167) (actual time=43.095..43.097 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=167) (actual time=0.642..37.360 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.271..25.156 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.367..0.369 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.362..0.367 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.171..0.172 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.186..0.186 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.183..0.184 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.107..0.107 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.095..0.104 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.089..0.102 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.088..0.100 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.084..0.086 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.007 rows=25 loops=1)
 Planning Time: 20.682 ms
 Execution Time: 5250.771 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1087750.75..1087750.75 rows=1 width=193) (actual time=3846.639..3846.655 rows=100 loops=1)
   ->  Sort  (cost=1087750.75..1087750.75 rows=1 width=193) (actual time=3846.638..3846.647 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=553843.69..1087750.74 rows=1 width=193) (actual time=2674.080..3844.318 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.37 rows=8289 width=30) (actual time=0.015..454.857 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=553843.18..561723.05 rows=1575975 width=173) (actual time=2673.974..3112.170 rows=1603828 loops=1)
                     ->  Sort  (cost=553843.18..557783.12 rows=1575975 width=173) (actual time=2673.971..2964.733 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305042.78 rows=1575975 width=173) (actual time=25.244..2011.443 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255231.11 rows=8000911 width=14) (actual time=0.042..765.977 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=167) (actual time=24.966..24.968 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=167) (actual time=0.031..19.871 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.011..5.599 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.017..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.011..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.009..0.014 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.005..0.011 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.002..0.003 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 1.653 ms
 Execution Time: 3883.011 ms
(53 rows)

query 3 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3446593.08..3446593.11 rows=10 width=44) (actual time=26902.055..26902.060 rows=10 loops=1)
   ->  Sort  (cost=3446593.08..3454549.70 rows=3182647 width=44) (actual time=26902.054..26902.058 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3282337.81..3377817.22 rows=3182647 width=44) (actual time=26723.560..26879.325 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3282337.81..3290294.43 rows=3182647 width=24) (actual time=26723.547..26736.416 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=541553.87..2896623.11 rows=3182647 width=24) (actual time=8370.497..26620.506 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874954.70 rows=32639754 width=16) (actual time=0.424..11622.406 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=516132.30..516132.30 rows=1462445 width=12) (actual time=8366.878..8366.879 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144798.91..516132.30 rows=1462445 width=12) (actual time=1256.734..8022.828 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86333.05..438564.14 rows=7277047 width=16) (actual time=745.852..5681.746 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84513.79 rows=7277047 width=0) (actual time=701.917..701.917 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.61..54697.61 rows=301460 width=4) (actual time=510.127..510.127 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54697.61 rows=301460 width=4) (actual time=1.721..457.963 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 25.233 ms
 Execution Time: 26903.303 ms
(30 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3446593.08..3446593.11 rows=10 width=44) (actual time=21172.884..21172.889 rows=10 loops=1)
   ->  Sort  (cost=3446593.08..3454549.70 rows=3182647 width=44) (actual time=21172.883..21172.887 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3282337.81..3377817.22 rows=3182647 width=44) (actual time=20989.527..21150.144 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3282337.81..3290294.43 rows=3182647 width=24) (actual time=20989.514..21002.091 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=541553.87..2896623.11 rows=3182647 width=24) (actual time=4660.810..20888.063 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874954.70 rows=32639754 width=16) (actual time=0.016..9671.775 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=516132.30..516132.30 rows=1462445 width=12) (actual time=4658.935..4658.938 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144798.91..516132.30 rows=1462445 width=12) (actual time=1034.318..4405.244 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86333.05..438564.14 rows=7277047 width=16) (actual time=662.040..2538.053 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84513.79 rows=7277047 width=0) (actual time=618.737..618.738 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.61..54697.61 rows=301460 width=4) (actual time=371.527..371.528 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54697.61 rows=301460 width=4) (actual time=0.032..322.212 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 1.186 ms
 Execution Time: 21173.253 ms
(30 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2056106.09..2056106.09 rows=1 width=24) (actual time=19268.830..19268.832 rows=1 loops=1)
   ->  Sort  (cost=2056106.09..2056106.10 rows=5 width=24) (actual time=19268.829..19268.830 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2056106.02..2056106.07 rows=5 width=24) (actual time=19267.954..19267.956 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=8006.12..2053320.22 rows=557159 width=16) (actual time=125.052..19029.329 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=8005.55..277632.02 rows=557231 width=20) (actual time=124.614..5145.367 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7866.25 rows=557231 width=0) (actual time=85.706..85.706 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 16.546 ms
 Execution Time: 19269.683 ms
(18 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2056106.09..2056106.09 rows=1 width=24) (actual time=4839.763..4839.764 rows=1 loops=1)
   ->  Sort  (cost=2056106.09..2056106.10 rows=5 width=24) (actual time=4839.761..4839.762 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2056106.02..2056106.07 rows=5 width=24) (actual time=4839.738..4839.739 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=8006.12..2053320.22 rows=557159 width=16) (actual time=119.794..4671.079 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=8005.55..277632.02 rows=557231 width=20) (actual time=119.766..1243.984 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7866.25 rows=557231 width=0) (actual time=81.107..81.107 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 1.013 ms
 Execution Time: 4839.826 ms
(18 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2046411.53..2046411.53 rows=1 width=58) (actual time=22675.731..22675.738 rows=1 loops=1)
   ->  Sort  (cost=2046411.53..2046411.59 rows=25 width=58) (actual time=22675.730..22675.736 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2045520.43..2046411.40 rows=25 width=58) (actual time=22652.158..22675.716 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2045520.43..2045698.56 rows=71253 width=38) (actual time=22646.257..22649.273 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=100032.32..2039777.20 rows=71253 width=38) (actual time=951.335..22600.569 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=95311.32..2025704.94 rows=1781189 width=50) (actual time=901.337..22085.526 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=95310.76..402784.28 rows=445354 width=38) (actual time=900.254..7061.734 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=31985.35..326654.93 rows=2226772 width=8) (actual time=298.829..5792.653 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31428.66 rows=2226772 width=0) (actual time=255.403..255.403 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59575.28..59575.28 rows=300010 width=38) (actual time=600.949..600.952 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59575.28 rows=300010 width=38) (actual time=1.017..536.531 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=8) (actual time=0.507..370.042 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.497..0.499 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.485..0.495 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.244..0.247 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.231..0.232 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.224..0.227 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.030..0.032 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=45.085..45.085 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.419..29.921 rows=100000 loops=1)
 Planning Time: 24.510 ms
 Execution Time: 22676.879 ms
(41 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2046411.53..2046411.53 rows=1 width=58) (actual time=6472.046..6472.052 rows=1 loops=1)
   ->  Sort  (cost=2046411.53..2046411.59 rows=25 width=58) (actual time=6472.045..6472.050 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2045520.43..2046411.40 rows=25 width=58) (actual time=6448.764..6472.028 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2045520.43..2045698.56 rows=71253 width=38) (actual time=6442.963..6446.012 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=100032.32..2039777.20 rows=71253 width=38) (actual time=799.455..6411.631 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=95311.32..2025704.94 rows=1781189 width=50) (actual time=760.107..5948.695 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=95310.76..402784.28 rows=445354 width=38) (actual time=760.084..2652.465 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=31985.35..326654.93 rows=2226772 width=8) (actual time=272.185..1598.077 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31428.66 rows=2226772 width=0) (actual time=229.122..229.122 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59575.28..59575.28 rows=300010 width=38) (actual time=487.552..487.555 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59575.28 rows=300010 width=38) (actual time=0.059..425.188 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=8) (actual time=0.020..266.033 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.034 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.028..0.033 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.006..0.006 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=39.053..39.054 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.023..22.025 rows=100000 loops=1)
 Planning Time: 3.040 ms
 Execution Time: 6472.491 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1978036.40..1978036.41 rows=1 width=32) (actual time=13418.983..13418.985 rows=1 loops=1)
   ->  Aggregate  (cost=1978036.40..1978036.41 rows=1 width=32) (actual time=13418.982..13418.983 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=212674.35..1971995.21 rows=1208239 width=12) (actual time=1245.464..12805.309 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..212372.29 rows=1208239 width=0) (actual time=1174.598..1174.598 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 12.631 ms
 Execution Time: 13419.812 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1978036.40..1978036.41 rows=1 width=32) (actual time=6498.921..6498.922 rows=1 loops=1)
   ->  Aggregate  (cost=1978036.40..1978036.41 rows=1 width=32) (actual time=6498.919..6498.920 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=212674.35..1971995.21 rows=1208239 width=12) (actual time=1110.111..6120.012 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..212372.29 rows=1208239 width=0) (actual time=1039.929..1039.929 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.602 ms
 Execution Time: 6499.115 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2720887.77..2720887.90 rows=1 width=92) (actual time=18734.160..18734.166 rows=1 loops=1)
   ->  GroupAggregate  (cost=2720887.77..2722150.90 rows=10052 width=92) (actual time=18734.159..18734.164 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2720887.77..2721043.09 rows=62127 width=72) (actual time=18727.063..18727.811 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563375.88..2715941.55 rows=62127 width=72) (actual time=5099.301..18698.374 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2113452.65 rows=1492856 width=46) (actual time=36.380..12939.679 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024917.04 rows=18660706 width=24) (actual time=0.432..10738.653 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=35.918..35.920 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.567..34.505 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.333..24.813 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.225..0.226 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.216..0.220 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536545.32..536545.32 rows=1199853 width=30) (actual time=5058.451..5058.453 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57054.09..536545.32 rows=1199853 width=30) (actual time=541.869..4803.100 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411249.59 rows=14998159 width=8) (actual time=0.742..1685.913 rows=15000000 loops=1)
                                 ->  Hash  (cost=55554.04..55554.04 rows=120004 width=30) (actual time=541.062..541.063 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55554.04 rows=120004 width=30) (actual time=0.691..514.319 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=8) (actual time=0.670..373.014 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.015 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 25.093 ms
 Execution Time: 18735.218 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2720887.77..2720887.90 rows=1 width=92) (actual time=15480.762..15480.768 rows=1 loops=1)
   ->  GroupAggregate  (cost=2720887.77..2722150.90 rows=10052 width=92) (actual time=15480.761..15480.766 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2720887.77..2721043.09 rows=62127 width=72) (actual time=15473.813..15474.551 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563375.88..2715941.55 rows=62127 width=72) (actual time=4159.456..15446.878 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2113452.65 rows=1492856 width=46) (actual time=18.497..10669.382 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024917.04 rows=18660706 width=24) (actual time=0.035..8791.476 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=18.449..18.451 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.019..17.464 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.006..5.549 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536545.32..536545.32 rows=1199853 width=30) (actual time=4138.804..4138.806 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57054.09..536545.32 rows=1199853 width=30) (actual time=281.802..3898.835 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411249.59 rows=14998159 width=8) (actual time=0.032..1258.221 rows=15000000 loops=1)
                                 ->  Hash  (cost=55554.04..55554.04 rows=120004 width=30) (actual time=281.711..281.713 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55554.04 rows=120004 width=30) (actual time=0.023..261.682 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=8) (actual time=0.003..82.252 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.022 ms
 Execution Time: 15481.133 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1192305.77..1192306.02 rows=1 width=40) (actual time=62605.625..62605.631 rows=1 loops=1)
   ->  GroupAggregate  (cost=1192305.77..1192902.09 rows=2406 width=40) (actual time=62605.624..62605.630 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1192305.77..1192366.01 rows=24097 width=46) (actual time=62600.479..62600.949 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=833365.95..1190551.92 rows=24097 width=46) (actual time=57178.772..62588.684 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 287513
                     ->  Hash Join  (cost=833365.95..1181727.44 rows=24097 width=20) (actual time=57178.052..62537.517 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=828894.95..1177193.19 rows=24097 width=20) (actual time=57133.809..62482.620 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=765569.54..1113174.98 rows=120487 width=24) (actual time=56547.438..61866.872 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=65217.58..394591.64 rows=4540404 width=12) (actual time=524.112..4939.438 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64082.47 rows=4540404 width=0) (actual time=480.046..480.046 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=695376.95..695376.95 rows=398001 width=20) (actual time=56022.993..56022.994 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.56..695376.95 rows=398001 width=20) (actual time=1.701..55626.706 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.96 rows=13270 width=4) (actual time=1.113..591.794 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.13 rows=30 width=24) (actual time=0.312..4.206 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59575.28..59575.28 rows=300010 width=4) (actual time=585.697..585.699 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59575.28 rows=300010 width=4) (actual time=1.051..535.239 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=8) (actual time=0.563..375.884 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.472..0.473 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.461..0.470 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.247..0.250 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.204..0.204 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.198..0.200 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.974..43.974 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.331..29.421 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.017 rows=25 loops=1)
 Planning Time: 28.287 ms
 Execution Time: 62606.712 ms
(50 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1192305.77..1192306.02 rows=1 width=40) (actual time=5300.875..5300.881 rows=1 loops=1)
   ->  GroupAggregate  (cost=1192305.77..1192902.09 rows=2406 width=40) (actual time=5300.874..5300.880 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1192305.77..1192366.01 rows=24097 width=46) (actual time=5295.918..5296.384 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=833365.95..1190551.92 rows=24097 width=46) (actual time=3112.541..5287.914 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 287513
                     ->  Hash Join  (cost=833365.95..1181727.44 rows=24097 width=20) (actual time=3112.513..5246.548 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=828894.95..1177193.19 rows=24097 width=20) (actual time=3075.126..5199.677 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=765569.54..1113174.98 rows=120487 width=24) (actual time=2621.645..4719.495 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=65217.58..394591.64 rows=4540404 width=12) (actual time=478.706..1744.705 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64082.47 rows=4540404 width=0) (actual time=435.275..435.276 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=695376.95..695376.95 rows=398001 width=20) (actual time=2142.626..2142.627 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.56..695376.95 rows=398001 width=20) (actual time=0.106..2013.424 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.96 rows=13270 width=4) (actual time=0.074..302.595 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.13 rows=30 width=24) (actual time=0.010..0.125 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59575.28..59575.28 rows=300010 width=4) (actual time=452.763..452.765 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59575.28 rows=300010 width=4) (actual time=0.072..404.876 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=8) (actual time=0.024..250.278 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.040..0.041 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.035..0.040 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.013 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=37.093..37.094 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.025..21.529 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.008 rows=25 loops=1)
 Planning Time: 3.524 ms
 Execution Time: 5301.163 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2506386.59..2506386.63 rows=1 width=66) (actual time=50427.687..50427.693 rows=1 loops=1)
   ->  GroupAggregate  (cost=2506386.59..2506393.79 rows=192 width=66) (actual time=50427.686..50427.691 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=2506386.59..2506387.07 rows=192 width=57) (actual time=50418.336..50420.578 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 239864kB
               ->  Nested Loop  (cost=482313.66..2506379.31 rows=192 width=57) (actual time=3390.938..46904.749 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=482313.66..2506307.81 rows=192 width=31) (actual time=3390.635..41777.086 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=482313.23..2505650.66 rows=192 width=31) (actual time=3390.064..30322.425 rows=3248192 loops=1)
                                 ->  Hash Join  (cost=482312.94..2505021.26 rows=192 width=35) (actual time=3389.580..22925.041 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=68001.16..1950454.31 rows=4847270 width=33) (actual time=674.877..17039.372 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724992.36 rows=59984936 width=29) (actual time=0.451..7218.165 rows=59986052 loops=1)
                                             ->  Hash  (cost=65980.96..65980.96 rows=161616 width=4) (actual time=674.056..674.057 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65980.96 rows=161616 width=4) (actual time=0.483..650.909 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=255231.11..255231.11 rows=8000911 width=14) (actual time=2713.265..2713.265 rows=8000000 loops=1)
                                             Buckets: 1048576  Batches: 16  Memory Usage: 31607kB
                                             ->  Seq Scan on partsupp  (cost=0.00..255231.11 rows=8000911 width=14) (actual time=0.522..1391.686 rows=8000000 loops=1)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.273..0.278 rows=25 loops=1)
 Planning Time: 29.729 ms
 Execution Time: 50466.937 ms
(32 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2506386.59..2506386.63 rows=1 width=66) (actual time=44465.977..44465.981 rows=1 loops=1)
   ->  GroupAggregate  (cost=2506386.59..2506393.79 rows=192 width=66) (actual time=44465.975..44465.980 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=2506386.59..2506387.07 rows=192 width=57) (actual time=44456.624..44458.866 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 239864kB
               ->  Nested Loop  (cost=482313.66..2506379.31 rows=192 width=57) (actual time=3040.261..40960.083 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=482313.66..2506307.81 rows=192 width=31) (actual time=3040.242..35816.455 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=482313.23..2505650.66 rows=192 width=31) (actual time=3040.229..26792.190 rows=3248192 loops=1)
                                 ->  Hash Join  (cost=482312.94..2505021.26 rows=192 width=35) (actual time=3040.209..19842.284 rows=3248192 loops=1)
                                       Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                       ->  Hash Join  (cost=68001.16..1950454.31 rows=4847270 width=33) (actual time=639.312..14340.330 rows=3248192 loops=1)
                                             Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1724992.36 rows=59984936 width=29) (actual time=0.266..5362.373 rows=59986052 loops=1)
                                             ->  Hash  (cost=65980.96..65980.96 rows=161616 width=4) (actual time=638.656..638.656 rows=108312 loops=1)
                                                   Buckets: 262144  Batches: 1  Memory Usage: 5856kB
                                                   ->  Seq Scan on part  (cost=0.00..65980.96 rows=161616 width=4) (actual time=0.240..616.086 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Hash  (cost=255231.11..255231.11 rows=8000911 width=14) (actual time=2399.515..2399.516 rows=8000000 loops=1)
                                             Buckets: 1048576  Batches: 16  Memory Usage: 31607kB
                                             ->  Seq Scan on partsupp  (cost=0.00..255231.11 rows=8000911 width=14) (actual time=0.030..1107.772 rows=8000000 loops=1)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning Time: 18.582 ms
 Execution Time: 44504.338 ms
(32 rows)

query 10 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2461524.92..2461524.97 rows=20 width=201) (actual time=20878.956..20878.963 rows=20 loops=1)
   ->  Sort  (cost=2461524.92..2462963.28 rows=575343 width=201) (actual time=20878.955..20878.960 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2430393.32..2446215.25 rows=575343 width=201) (actual time=19949.612..20760.545 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=2430393.32..2431831.67 rows=575343 width=181) (actual time=19949.596..20148.659 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=387696.75..2342479.82 rows=575343 width=181) (actual time=5933.729..19202.594 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387695.19..2340711.95 rows=575343 width=159) (actual time=5933.270..19008.892 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285769.08..2199427.58 rows=575343 width=16) (actual time=4959.059..17194.687 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874954.70 rows=14744297 width=16) (actual time=0.464..10452.999 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278453.47..278453.47 rows=585249 width=8) (actual time=4956.747..4956.748 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8406.74..278453.47 rows=585249 width=8) (actual time=121.932..4772.351 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8260.42 rows=585249 width=0) (actual time=83.009..83.009 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.49..50947.49 rows=1500049 width=147) (actual time=973.673..973.673 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=147) (actual time=0.449..495.756 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.240..0.240 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.223..0.229 rows=25 loops=1)
 Planning Time: 20.470 ms
 Execution Time: 20916.322 ms
(33 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2461524.92..2461524.97 rows=20 width=201) (actual time=15193.395..15193.401 rows=20 loops=1)
   ->  Sort  (cost=2461524.92..2462963.28 rows=575343 width=201) (actual time=15193.393..15193.398 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2430393.32..2446215.25 rows=575343 width=201) (actual time=14263.157..15074.561 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=2430393.32..2431831.67 rows=575343 width=181) (actual time=14263.140..14461.780 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=387696.75..2342479.82 rows=575343 width=181) (actual time=2411.569..13519.946 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387695.19..2340711.95 rows=575343 width=159) (actual time=2411.320..13327.530 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285769.08..2199427.58 rows=575343 width=16) (actual time=1570.449..11679.479 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874954.70 rows=14744297 width=16) (actual time=0.017..8398.380 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278453.47..278453.47 rows=585249 width=8) (actual time=1569.120..1569.121 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8406.74..278453.47 rows=585249 width=8) (actual time=111.222..1440.351 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8260.42 rows=585249 width=0) (actual time=72.967..72.967 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.49..50947.49 rows=1500049 width=147) (actual time=840.351..840.352 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=147) (actual time=0.022..367.399 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.026 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.020 rows=25 loops=1)
 Planning Time: 1.503 ms
 Execution Time: 15229.543 ms
(33 rows)

query 11 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=624915.56..624915.57 rows=1 width=36) (actual time=3574.969..3574.975 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293073.90..293073.91 rows=1 width=32) (actual time=1505.611..1505.614 rows=1 loops=1)
           ->  Hash Join  (cost=2323.46..290709.94 rows=315195 width=10) (actual time=2.808..1419.818 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255231.11 rows=8000911 width=14) (actual time=0.035..728.035 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=2.742..2.744 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.500..2.374 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.490..1.976 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.302..0.302 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=331841.65..332104.31 rows=105065 width=36) (actual time=3574.968..3574.970 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319496.51..331316.33 rows=105065 width=36) (actual time=3574.959..3574.960 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319496.51..320284.50 rows=315195 width=14) (actual time=1884.059..1896.283 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.46..290709.94 rows=315195 width=14) (actual time=40.611..1834.503 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255231.11 rows=8000911 width=18) (actual time=0.612..1048.565 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=39.936..39.937 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=2.541..38.987 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.284..0.288 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=2.254..37.975 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.772..1.772 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 16.448 ms
 Execution Time: 3575.050 ms
(43 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=624915.56..624915.57 rows=1 width=36) (actual time=3153.085..3153.089 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293073.90..293073.91 rows=1 width=32) (actual time=1507.148..1507.151 rows=1 loops=1)
           ->  Hash Join  (cost=2323.46..290709.94 rows=315195 width=10) (actual time=2.758..1421.714 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255231.11 rows=8000911 width=14) (actual time=0.033..727.229 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=2.696..2.698 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.485..2.336 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.475..1.940 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.300..0.300 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=331841.65..332104.31 rows=105065 width=36) (actual time=3153.083..3153.085 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319496.51..331316.33 rows=105065 width=36) (actual time=3153.076..3153.077 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319496.51..320284.50 rows=315195 width=14) (actual time=1459.957..1472.229 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.46..290709.94 rows=315195 width=14) (actual time=3.558..1413.138 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255231.11 rows=8000911 width=18) (actual time=0.038..722.027 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=3.495..3.496 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.494..3.108 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.482..2.709 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.303..0.303 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 0.879 ms
 Execution Time: 3153.147 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030937.49..3031755.67 rows=1 width=27) (actual time=18680.862..18680.864 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030937.49..3036664.70 rows=7 width=27) (actual time=18680.861..18680.862 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030937.49..3031653.39 rows=286357 width=27) (actual time=18639.104..18644.968 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478383.52..3004982.88 rows=286357 width=27) (actual time=14550.878..18566.074 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411249.59 rows=14998159 width=20) (actual time=0.411..1632.972 rows=15000000 loops=1)
                     ->  Hash  (cost=2474804.06..2474804.06 rows=286357 width=15) (actual time=14549.722..14549.722 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474804.06 rows=286357 width=15) (actual time=1.029..14453.328 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 14.748 ms
 Execution Time: 18681.896 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030937.49..3031755.67 rows=1 width=27) (actual time=15900.565..15900.567 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030937.49..3036664.70 rows=7 width=27) (actual time=15900.564..15900.566 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030937.49..3031653.39 rows=286357 width=27) (actual time=15858.602..15864.487 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478383.52..3004982.88 rows=286357 width=27) (actual time=12343.027..15787.904 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411249.59 rows=14998159 width=20) (actual time=0.020..1200.501 rows=15000000 loops=1)
                     ->  Hash  (cost=2474804.06..2474804.06 rows=286357 width=15) (actual time=12342.320..12342.321 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474804.06 rows=286357 width=15) (actual time=0.106..12255.285 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 0.598 ms
 Execution Time: 15900.650 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2641192.51..2641192.51 rows=1 width=16) (actual time=19998.521..19998.524 rows=1 loops=1)
   ->  Sort  (cost=2641192.51..2641193.01 rows=200 width=16) (actual time=19998.520..19998.522 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2641189.51..2641191.51 rows=200 width=16) (actual time=19998.500..19998.507 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2495746.98..2618688.77 rows=1500049 width=12) (actual time=15985.990..19771.186 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2495746.98..2531727.42 rows=14392173 width=8) (actual time=15985.979..18047.137 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=53285.78..658110.33 rows=14392173 width=8) (actual time=415.629..11214.419 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448744.99 rows=14392173 width=8) (actual time=0.738..5219.124 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=28675.16..28675.16 rows=1500049 width=4) (actual time=413.612..413.612 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.16 rows=1500049 width=4) (actual time=0.019..177.811 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 16.354 ms
 Execution Time: 20039.259 ms
(22 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2641192.51..2641192.51 rows=1 width=16) (actual time=19442.128..19442.131 rows=1 loops=1)
   ->  Sort  (cost=2641192.51..2641193.01 rows=200 width=16) (actual time=19442.128..19442.130 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2641189.51..2641191.51 rows=200 width=16) (actual time=19442.109..19442.116 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2495746.98..2618688.77 rows=1500049 width=12) (actual time=15399.727..19214.426 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2495746.98..2531727.42 rows=14392173 width=8) (actual time=15399.715..17468.859 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=53285.78..658110.33 rows=14392173 width=8) (actual time=380.944..10635.205 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448744.99 rows=14392173 width=8) (actual time=0.033..4734.729 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=28675.16..28675.16 rows=1500049 width=4) (actual time=379.584..379.585 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28675.16 rows=1500049 width=4) (actual time=0.018..145.305 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 0.559 ms
 Execution Time: 19482.857 ms
(22 rows)

query 14 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1243487.11..1243487.13 rows=1 width=32) (actual time=66974.120..66974.123 rows=1 loops=1)
   ->  Aggregate  (cost=1243487.11..1243487.13 rows=1 width=32) (actual time=66974.118..66974.120 rows=1 loops=1)
         ->  Hash Join  (cost=99653.50..1230629.61 rows=734714 width=33) (actual time=894.238..66536.505 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1108200.05 rows=734714 width=16) (actual time=1.064..64586.298 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.97..60980.97 rows=1999997 width=25) (actual time=887.217..887.217 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.97 rows=1999997 width=25) (actual time=0.410..551.328 rows=2000000 loops=1)
 Planning Time: 15.281 ms
 Execution Time: 66974.872 ms
(11 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1243487.11..1243487.13 rows=1 width=32) (actual time=3696.975..3696.977 rows=1 loops=1)
   ->  Aggregate  (cost=1243487.11..1243487.13 rows=1 width=32) (actual time=3696.973..3696.975 rows=1 loops=1)
         ->  Hash Join  (cost=99653.50..1230629.61 rows=734714 width=33) (actual time=760.020..3395.324 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1108200.05 rows=734714 width=16) (actual time=0.042..2071.321 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.97..60980.97 rows=1999997 width=25) (actual time=758.978..758.978 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.97 rows=1999997 width=25) (actual time=0.026..428.528 rows=2000000 loops=1)
 Planning Time: 0.914 ms
 Execution Time: 3697.039 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4024965.95..4025067.96 rows=1 width=104) (actual time=19462.846..19462.850 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1887491.77..1887491.78 rows=1 width=32) (actual time=6144.500..6144.502 rows=1 loops=1)
           ->  HashAggregate  (cost=1885029.92..1886260.85 rows=98474 width=36) (actual time=6101.446..6138.287 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=37864.96..1861403.19 rows=2362673 width=16) (actual time=347.555..4673.922 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37274.29 rows=2362673 width=0) (actual time=276.182..276.182 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2137474.16..2187664.07 rows=492 width=104) (actual time=19462.844..19462.846 rows=1 loops=1)
         ->  GroupAggregate  (cost=2137473.87..2186450.63 rows=492 width=36) (actual time=19462.398..19462.399 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2137473.87..2143380.55 rows=2362673 width=16) (actual time=12626.394..12808.415 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=37864.96..1861403.19 rows=2362673 width=16) (actual time=408.742..11671.639 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37274.29 rows=2362673 width=0) (actual time=336.176..336.176 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.46 rows=1 width=72) (actual time=0.440..0.440 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.762 ms
 Execution Time: 19471.893 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4024965.95..4025067.96 rows=1 width=104) (actual time=12963.356..12963.358 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1887491.77..1887491.78 rows=1 width=32) (actual time=6151.780..6151.781 rows=1 loops=1)
           ->  HashAggregate  (cost=1885029.92..1886260.85 rows=98474 width=36) (actual time=6108.200..6145.544 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=37864.96..1861403.19 rows=2362673 width=16) (actual time=348.398..4673.992 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37274.29 rows=2362673 width=0) (actual time=276.855..276.856 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2137474.16..2187664.07 rows=492 width=104) (actual time=12963.354..12963.355 rows=1 loops=1)
         ->  GroupAggregate  (cost=2137473.87..2186450.63 rows=492 width=36) (actual time=12963.317..12963.318 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2137473.87..2143380.55 rows=2362673 width=16) (actual time=6124.813..6307.137 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=37864.96..1861403.19 rows=2362673 width=16) (actual time=371.935..5289.513 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37274.29 rows=2362673 width=0) (actual time=300.250..300.250 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.46 rows=1 width=72) (actual time=0.033..0.033 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.106 ms
 Execution Time: 12971.200 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358591.13..358591.13 rows=1 width=44) (actual time=6575.227..6575.230 rows=1 loops=1)
   ->  Sort  (cost=358591.13..358975.23 rows=153639 width=44) (actual time=6575.226..6575.228 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=348873.54..357822.93 rows=153639 width=44) (actual time=5900.502..6569.059 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=348873.54..350356.14 rows=593040 width=40) (actual time=5900.452..6277.821 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98158.46..281581.12 rows=593040 width=40) (actual time=813.334..3087.682 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176392.90 rows=4000456 width=8) (actual time=37.375..1518.012 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.242..37.003 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.93..90980.93 rows=296486 width=40) (actual time=775.342..775.342 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.93 rows=296486 width=40) (actual time=0.532..704.587 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 17.205 ms
 Execution Time: 6583.928 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=358591.13..358591.13 rows=1 width=44) (actual time=6064.681..6064.684 rows=1 loops=1)
   ->  Sort  (cost=358591.13..358975.23 rows=153639 width=44) (actual time=6064.680..6064.682 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=348873.54..357822.93 rows=153639 width=44) (actual time=5392.589..6058.499 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=348873.54..350356.14 rows=593040 width=40) (actual time=5392.539..5769.946 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98158.46..281581.12 rows=593040 width=40) (actual time=498.853..2583.556 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176392.90 rows=4000456 width=8) (actual time=20.223..1322.691 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.087..20.180 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.93..90980.93 rows=296486 width=40) (actual time=477.943..477.943 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.93 rows=296486 width=40) (actual time=0.016..416.560 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 0.727 ms
 Execution Time: 6072.770 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10824770.94..10824770.95 rows=1 width=32) (actual time=50186.147..50186.148 rows=1 loops=1)
   ->  Aggregate  (cost=10824770.94..10824770.95 rows=1 width=32) (actual time=50186.145..50186.147 rows=1 loops=1)
         ->  Merge Join  (cost=10133492.30..10824720.42 rows=20207 width=8) (actual time=28412.819..50184.636 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10133491.31..10613174.48 rows=1986410 width=36) (actual time=28404.970..47975.360 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10133491.31..10283453.65 rows=59984936 width=9) (actual time=28404.949..39424.664 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1115736kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724992.36 rows=59984936 width=9) (actual time=0.560..9140.098 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..185805.48 rows=61035 width=21) (actual time=1.787..2042.501 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..185652.89 rows=61035 width=21) (actual time=1.783..2023.390 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89212.37 rows=2035 width=4) (actual time=1.487..634.227 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.09 rows=30 width=17) (actual time=0.444..0.687 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 15.881 ms
 Execution Time: 50334.266 ms
(21 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10824770.94..10824770.95 rows=1 width=32) (actual time=46544.659..46544.661 rows=1 loops=1)
   ->  Aggregate  (cost=10824770.94..10824770.95 rows=1 width=32) (actual time=46544.657..46544.659 rows=1 loops=1)
         ->  Merge Join  (cost=10133492.30..10824720.42 rows=20207 width=8) (actual time=26446.596..46543.922 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10133491.31..10613174.48 rows=1986410 width=36) (actual time=26440.400..45978.919 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10133491.31..10283453.65 rows=59984936 width=9) (actual time=26440.379..37426.044 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1115736kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724992.36 rows=59984936 width=9) (actual time=0.030..7290.819 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..185805.48 rows=61035 width=21) (actual time=0.148..409.459 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..185652.89 rows=61035 width=21) (actual time=0.144..400.032 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89212.37 rows=2035 width=4) (actual time=0.133..349.897 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..47.09 rows=30 width=17) (actual time=0.004..0.020 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.733 ms
 Execution Time: 46689.628 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10575110.17..10575110.42 rows=100 width=71) (actual time=39969.785..39969.799 rows=99 loops=1)
   ->  Sort  (cost=10575110.17..10625091.20 rows=19992414 width=71) (actual time=39969.784..39969.792 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9361185.16..9811014.48 rows=19992414 width=71) (actual time=39969.542..39969.710 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9361185.16..9411166.20 rows=19992414 width=44) (actual time=39969.531..39969.560 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78585.30..6541451.39 rows=19992414 width=44) (actual time=4240.164..39969.278 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=97.20..6128359.06 rows=19992414 width=25) (actual time=965.835..39191.000 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..3494411.27 rows=4998745 width=24) (actual time=747.067..28601.082 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..547937.82 rows=14998159 width=20) (actual time=0.541..2825.714 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796506.29 rows=4998745 width=4) (actual time=643.447..24952.186 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271638.10 rows=59984936 width=9) (actual time=0.577..12010.399 rows=59986052 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271638.10 rows=59984936 width=9) (actual time=0.011..7328.737 rows=59916431 loops=1)
                           ->  Hash  (cost=50947.49..50947.49 rows=1500049 width=23) (actual time=674.083..674.084 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=23) (actual time=0.752..423.201 rows=1500000 loops=1)
 Planning Time: 20.697 ms
 Execution Time: 39970.617 ms
(27 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10575110.17..10575110.42 rows=100 width=71) (actual time=36497.759..36497.772 rows=99 loops=1)
   ->  Sort  (cost=10575110.17..10625091.20 rows=19992414 width=71) (actual time=36497.758..36497.765 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9361185.16..9811014.48 rows=19992414 width=71) (actual time=36497.516..36497.685 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9361185.16..9411166.20 rows=19992414 width=44) (actual time=36497.506..36497.534 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78585.30..6541451.39 rows=19992414 width=44) (actual time=3614.234..36497.270 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=97.20..6128359.06 rows=19992414 width=25) (actual time=826.663..35855.789 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..3494411.27 rows=4998745 width=24) (actual time=598.821..25010.583 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..547937.82 rows=14998159 width=20) (actual time=0.017..2204.116 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796506.29 rows=4998745 width=4) (actual time=524.415..22006.559 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271638.10 rows=59984936 width=9) (actual time=0.011..9553.833 rows=59986052 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271638.10 rows=59984936 width=9) (actual time=0.009..7569.331 rows=59916431 loops=1)
                           ->  Hash  (cost=50947.49..50947.49 rows=1500049 width=23) (actual time=538.095..538.095 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50947.49 rows=1500049 width=23) (actual time=0.027..291.839 rows=1500000 loops=1)
 Planning Time: 1.531 ms
 Execution Time: 36497.881 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=364363.40..364363.41 rows=1 width=32) (actual time=23422.672..23422.674 rows=1 loops=1)
   ->  Aggregate  (cost=364363.40..364363.41 rows=1 width=32) (actual time=23422.671..23422.672 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..364354.78 rows=1149 width=12) (actual time=58.410..23419.443 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125980.87 rows=4864 width=30) (actual time=1.441..807.029 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..49.00 rows=1 width=21) (actual time=4.269..4.728 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 18.338 ms
 Execution Time: 23423.421 ms
(12 rows)

SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=364363.40..364363.41 rows=1 width=32) (actual time=567.983..567.984 rows=1 loops=1)
   ->  Aggregate  (cost=364363.40..364363.41 rows=1 width=32) (actual time=567.982..567.983 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..364354.78 rows=1149 width=12) (actual time=1.367..567.279 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125980.87 rows=4864 width=30) (actual time=0.193..408.758 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..49.00 rows=1 width=21) (actual time=0.030..0.033 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 0.907 ms
 Execution Time: 568.027 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3583034.67..3583034.68 rows=1 width=52) (actual time=52642.937..52642.941 rows=1 loops=1)
   ->  Sort  (cost=3583034.67..3583034.68 rows=1 width=52) (actual time=52642.935..52642.939 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3171457.22..3583034.66 rows=1 width=52) (actual time=28053.503..52641.191 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.474..23.236 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.186..0.188 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.282..15.773 rows=100000 loops=1)
               ->  Materialize  (cost=3171457.22..3578382.36 rows=3 width=8) (actual time=6.362..10.462 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3171457.22..3578382.34 rows=3 width=8) (actual time=26053.068..36805.221 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3171456.36..3337398.69 rows=4880033 width=40) (actual time=26051.375..31617.543 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3171456.36..3194641.82 rows=9274183 width=13) (actual time=26051.362..27862.516 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=148627.44..1996320.08 rows=9274183 width=13) (actual time=1230.042..22376.403 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..146308.90 rows=9274183 width=0) (actual time=1126.544..1126.544 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.86..160339.27 rows=80817 width=16) (actual time=1.369..4840.779 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.86..160137.23 rows=80817 width=16) (actual time=1.365..4800.650 rows=86872 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.43..84212.38 rows=20202 width=4) (actual time=0.784..456.143 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.184..0.198 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 21.707 ms
 Execution Time: 52667.064 ms
(39 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3583034.67..3583034.68 rows=1 width=52) (actual time=34515.639..34515.642 rows=1 loops=1)
   ->  Sort  (cost=3583034.67..3583034.68 rows=1 width=52) (actual time=34515.638..34515.640 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3171457.22..3583034.66 rows=1 width=52) (actual time=13986.596..34513.882 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.024..19.543 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.005..12.307 rows=100000 loops=1)
               ->  Materialize  (cost=3171457.22..3578382.36 rows=3 width=8) (actual time=3.148..6.045 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3171457.22..3578382.34 rows=3 width=8) (actual time=12890.904..18726.173 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3171456.36..3337398.69 rows=4880033 width=40) (actual time=12890.506..17889.666 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3171456.36..3194641.82 rows=9274183 width=13) (actual time=12890.494..14511.378 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=148627.44..1996320.08 rows=9274183 width=13) (actual time=1085.425..9452.197 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..146308.90 rows=9274183 width=0) (actual time=982.596..982.596 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.86..160339.27 rows=80817 width=16) (actual time=0.078..547.323 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.86..160137.23 rows=80817 width=16) (actual time=0.075..524.767 rows=86872 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.43..84212.38 rows=20202 width=4) (actual time=0.051..353.483 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.006..0.007 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 2.074 ms
 Execution Time: 34542.725 ms
(39 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3778180.56..3778180.56 rows=1 width=34) (actual time=26712.926..26712.941 rows=100 loops=1)
   ->  Sort  (cost=3778180.56..3778180.56 rows=1 width=34) (actual time=26712.925..26712.933 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3778180.53..3778180.55 rows=1 width=34) (actual time=26705.780..26711.548 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3778180.53..3778180.53 rows=1 width=26) (actual time=26705.770..26707.414 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976504.94..3778180.52 rows=1 width=26) (actual time=15306.254..26535.385 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976504.37..3778176.88 rows=1 width=38) (actual time=15305.669..26382.026 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976503.81..2520348.94 rows=391715 width=38) (actual time=15302.391..19958.269 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448744.99 rows=7345598 width=4) (actual time=0.416..2409.649 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960257.32..1960257.32 rows=799799 width=34) (actual time=15301.196..15301.199 rows=1514267 loops=1)
                                             Buckets: 524288  Batches: 4  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2323.46..1960257.32 rows=799799 width=34) (actual time=41.960..14905.131 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1874954.70 rows=19994979 width=8) (actual time=0.437..11612.846 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30) (actual time=41.457..41.459 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30) (actual time=2.358..40.087 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.177..0.180 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34) (actual time=2.174..38.950 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=1.738..1.738 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.427 ms
 Execution Time: 26713.607 ms
(44 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3778180.56..3778180.56 rows=1 width=34) (actual time=22322.516..22322.530 rows=100 loops=1)
   ->  Sort  (cost=3778180.56..3778180.56 rows=1 width=34) (actual time=22322.514..22322.523 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3778180.53..3778180.55 rows=1 width=34) (actual time=22315.583..22321.324 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3778180.53..3778180.53 rows=1 width=26) (actual time=22315.574..22317.192 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976504.94..3778180.52 rows=1 width=26) (actual time=13232.625..22147.352 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976504.37..3778176.88 rows=1 width=38) (actual time=13232.194..21999.857 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976503.81..2520348.94 rows=391715 width=38) (actual time=13231.763..17360.969 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448744.99 rows=7345598 width=4) (actual time=0.023..1942.464 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960257.32..1960257.32 rows=799799 width=34) (actual time=13230.934..13230.936 rows=1514267 loops=1)
                                             Buckets: 524288  Batches: 4  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2323.46..1960257.32 rows=799799 width=34) (actual time=14.832..12883.224 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1874954.70 rows=19994979 width=8) (actual time=0.025..9957.426 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2273.46..2273.46 rows=4000 width=30) (actual time=14.775..14.777 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=30) (actual time=0.644..13.660 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=34) (actual time=0.627..13.025 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.441..0.441 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.195 ms
 Execution Time: 22322.688 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161831.44..161831.47 rows=1 width=72) (actual time=2308.302..2308.303 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75442.41..75442.42 rows=1 width=32) (actual time=1018.417..1018.417 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75323.29 rows=47647 width=6) (actual time=0.008..980.544 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86389.02..86581.44 rows=6997 width=72) (actual time=2308.300..2308.301 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86389.02..86406.52 rows=6997 width=38) (actual time=2306.445..2306.769 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85942.18 rows=6997 width=38) (actual time=1018.817..2285.224 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75323.29 rows=17501 width=26) (actual time=1018.793..1583.385 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 16.531 ms
 Execution Time: 2309.036 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161831.44..161831.47 rows=1 width=72) (actual time=1659.534..1659.536 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75442.41..75442.42 rows=1 width=32) (actual time=751.183..751.184 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75323.29 rows=47647 width=6) (actual time=0.007..717.455 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86389.02..86581.44 rows=6997 width=72) (actual time=1659.533..1659.534 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86389.02..86406.52 rows=6997 width=38) (actual time=1657.684..1658.010 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85942.18 rows=6997 width=38) (actual time=751.223..1639.929 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75323.29 rows=17501 width=26) (actual time=751.207..1274.644 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.620 ms
 Execution Time: 1659.581 ms
(20 rows)

