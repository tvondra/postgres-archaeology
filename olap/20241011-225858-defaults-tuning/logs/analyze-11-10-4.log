query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1905543.84..1905544.51 rows=1 width=236) (actual time=21596.882..21596.952 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1905543.84..1905547.90 rows=6 width=236) (actual time=21596.881..21596.950 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1905543.84..1905546.71 rows=24 width=236) (actual time=21596.857..21596.928 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1904543.78..1904543.80 rows=6 width=236) (actual time=21588.730..21588.731 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1904543.54..1904543.70 rows=6 width=236) (actual time=21588.705..21588.713 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312590.54 rows=14798825 width=25) (actual time=0.106..5875.976 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 16.063 ms
 Execution Time: 21598.132 ms
(20 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1905543.84..1905544.51 rows=1 width=236) (actual time=18715.026..18715.098 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1905543.84..1905547.90 rows=6 width=236) (actual time=18715.025..18715.096 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1905543.84..1905546.71 rows=24 width=236) (actual time=18714.989..18715.065 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1904543.78..1904543.80 rows=6 width=236) (actual time=18711.114..18711.115 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1904543.54..1904543.70 rows=6 width=236) (actual time=18711.090..18711.097 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312590.54 rows=14798825 width=25) (actual time=1.219..2922.052 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 0.507 ms
 Execution Time: 18715.164 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102070.62..1102070.63 rows=1 width=192) (actual time=4423.437..4423.560 rows=100 loops=1)
   ->  Sort  (cost=1102070.62..1102070.63 rows=1 width=192) (actual time=4423.436..4423.553 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=558956.88..1102070.61 rows=1 width=192) (actual time=3188.270..4420.234 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68703.54 rows=8323 width=30) (actual time=11.677..15.489 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.13 rows=2081 width=30) (actual time=2.017..291.840 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=557948.25..565946.38 rows=1599625 width=172) (actual time=3175.641..3632.394 rows=1603828 loops=1)
                     ->  Sort  (cost=557948.25..561947.32 rows=1599625 width=172) (actual time=3175.630..3483.369 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305240.98 rows=1599625 width=172) (actual time=75.100..2507.017 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255203.25 rows=7998125 width=14) (actual time=0.976..1088.260 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=74.080..74.082 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=6.042..67.594 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.289..48.839 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=5.745..5.747 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=5.739..5.744 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=1.620..1.622 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=4.104..4.104 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=4.097..4.098 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32) (actual time=0.092..0.092 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6) (actual time=0.081..0.090 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10) (actual time=0.076..0.088 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10) (actual time=0.075..0.086 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.071..0.073 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 21.310 ms
 Execution Time: 4462.538 ms
(56 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1102070.62..1102070.63 rows=1 width=192) (actual time=3420.767..3420.887 rows=100 loops=1)
   ->  Sort  (cost=1102070.62..1102070.63 rows=1 width=192) (actual time=3420.766..3420.880 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=558956.88..1102070.61 rows=1 width=192) (actual time=2691.847..3418.617 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68703.54 rows=8323 width=30) (actual time=3.502..6.235 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.13 rows=2081 width=30) (actual time=0.140..114.394 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=557948.25..565946.38 rows=1599625 width=172) (actual time=2688.253..3130.224 rows=1603828 loops=1)
                     ->  Sort  (cost=557948.25..561947.32 rows=1599625 width=172) (actual time=2688.249..2982.430 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305240.98 rows=1599625 width=172) (actual time=45.145..2038.735 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255203.25 rows=7998125 width=14) (actual time=0.042..756.613 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=45.063..45.065 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.053..39.113 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.013..14.781 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.035..0.036 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.029..0.034 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.007 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.019..0.019 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6) (actual time=0.009..0.015 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.003..0.003 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 1.870 ms
 Execution Time: 3457.051 ms
(56 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2283142.56..2283142.59 rows=10 width=44) (actual time=14251.077..14287.615 rows=10 loops=1)
   ->  Sort  (cost=2283142.56..2290883.33 rows=3096306 width=44) (actual time=14251.076..14287.613 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1746802.94..2216232.50 rows=3096306 width=44) (actual time=14091.212..14264.543 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1746802.94..2138824.88 rows=3096304 width=44) (actual time=14091.204..14187.093 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1745802.89..1769025.17 rows=774076 width=44) (actual time=14079.447..14117.014 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1745802.89..1747738.08 rows=774076 width=24) (actual time=14079.424..14082.237 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6201kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6303kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6236kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6212kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6289kB
                                 ->  Nested Loop  (cost=41572.47..1659884.06 rows=774076 width=24) (actual time=237.807..14055.673 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41571.90..354423.59 rows=359232 width=12) (actual time=236.051..1868.847 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308137.55 rows=1795860 width=16) (actual time=0.916..1140.825 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.29..40634.29 rows=75009 width=4) (actual time=234.488..234.489 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.29 rows=75009 width=4) (actual time=0.355..215.792 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.041..0.042 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 22.235 ms
 Execution Time: 14288.347 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2283142.56..2283142.59 rows=10 width=44) (actual time=4110.420..4156.916 rows=10 loops=1)
   ->  Sort  (cost=2283142.56..2290883.33 rows=3096306 width=44) (actual time=4110.419..4156.914 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1746802.94..2216232.50 rows=3096306 width=44) (actual time=3948.748..4133.865 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1746802.94..2138824.88 rows=3096304 width=44) (actual time=3948.736..4054.070 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1745802.89..1769025.17 rows=774076 width=44) (actual time=3941.700..3978.630 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1745802.89..1747738.08 rows=774076 width=24) (actual time=3941.687..3944.466 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6124kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6353kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6248kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6250kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6265kB
                                 ->  Nested Loop  (cost=41572.47..1659884.06 rows=774076 width=24) (actual time=138.624..3921.544 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41571.90..354423.59 rows=359232 width=12) (actual time=138.217..1078.591 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308137.55 rows=1795860 width=16) (actual time=0.052..498.016 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.29..40634.29 rows=75009 width=4) (actual time=137.586..137.586 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.29 rows=75009 width=4) (actual time=0.028..114.653 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.009..0.009 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 1.519 ms
 Execution Time: 4157.031 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=695233.74..695234.25 rows=1 width=24) (actual time=20467.503..20511.160 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=695233.74..695236.29 rows=5 width=24) (actual time=20467.502..20511.158 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=695233.74..695236.14 rows=20 width=24) (actual time=20467.495..20511.152 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=694233.69..694233.70 rows=5 width=24) (actual time=20457.537..20457.539 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=694233.58..694233.63 rows=5 width=24) (actual time=20457.518..20457.520 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=7623.40..693570.47 rows=132622 width=16) (actual time=153.975..20377.843 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=7622.84..270880.50 rows=132644 width=20) (actual time=153.607..2126.404 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=46587
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7490.20 rows=530576 width=0) (actual time=107.176..107.177 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.162..0.162 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 16.580 ms
 Execution Time: 20512.156 ms
(27 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=695233.74..695234.25 rows=1 width=24) (actual time=2139.350..2178.390 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=695233.74..695236.29 rows=5 width=24) (actual time=2139.348..2178.388 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=695233.74..695236.14 rows=20 width=24) (actual time=2139.335..2178.379 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=694233.69..694233.70 rows=5 width=24) (actual time=2128.031..2128.033 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=694233.58..694233.63 rows=5 width=24) (actual time=2128.010..2128.012 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=7623.40..693570.47 rows=132622 width=16) (actual time=149.606..2084.432 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=7622.84..270880.50 rows=132644 width=20) (actual time=149.542..537.202 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=50839
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7490.20 rows=530576 width=0) (actual time=100.556..100.556 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 1.084 ms
 Execution Time: 2178.467 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=762253.64..762253.65 rows=1 width=58) (actual time=22232.857..22282.458 rows=1 loops=1)
   ->  Sort  (cost=762253.64..762253.71 rows=25 width=58) (actual time=22232.856..22282.456 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=762016.96..762253.52 rows=25 width=58) (actual time=22224.833..22282.441 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=762016.96..762252.46 rows=100 width=58) (actual time=22223.494..22282.410 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=761016.90..761240.49 rows=25 width=58) (actual time=22208.947..22214.865 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=761016.90..761061.55 rows=17862 width=38) (actual time=22207.015..22207.699 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1508kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1491kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1502kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1520kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1529kB
                                 ->  Parallel Hash Join  (cost=78558.39..759755.43 rows=17862 width=38) (actual time=644.638..22193.528 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=74866.80..753719.71 rows=446500 width=50) (actual time=623.532..22015.050 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=74866.23..346879.88 rows=111643 width=38) (actual time=623.260..2748.160 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32073.27..301714.50 rows=558216 width=8) (actual time=343.769..2246.027 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52040
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31515.06 rows=2232862 width=0) (actual time=283.363..283.363 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.50..41855.50 rows=74997 width=38) (actual time=278.766..278.768 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.50 rows=74997 width=38) (actual time=1.375..251.541 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=8) (actual time=0.886..213.100 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.477..0.479 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.472..0.477 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.412..0.413 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.200..0.211 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=19.158..19.158 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.100..13.412 rows=20000 loops=5)
 Planning Time: 25.530 ms
 Execution Time: 22283.136 ms
(50 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=762253.64..762253.65 rows=1 width=58) (actual time=2786.784..2832.401 rows=1 loops=1)
   ->  Sort  (cost=762253.64..762253.71 rows=25 width=58) (actual time=2786.783..2832.399 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=762016.96..762253.52 rows=25 width=58) (actual time=2774.888..2832.382 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=762016.96..762252.46 rows=100 width=58) (actual time=2773.336..2832.346 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=761016.90..761240.49 rows=25 width=58) (actual time=2761.445..2766.923 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=761016.90..761061.55 rows=17862 width=38) (actual time=2760.203..2760.902 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1600kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1509kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1444kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1487kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1510kB
                                 ->  Parallel Hash Join  (cost=78558.39..759755.43 rows=17862 width=38) (actual time=493.527..2751.518 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=74866.80..753719.71 rows=446500 width=50) (actual time=477.364..2614.336 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=74866.23..346879.88 rows=111643 width=38) (actual time=477.314..1096.810 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32073.27..301714.50 rows=558216 width=8) (actual time=316.154..761.576 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=57005
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31515.06 rows=2232862 width=0) (actual time=256.605..256.605 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.50..41855.50 rows=74997 width=38) (actual time=160.573..160.575 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25312kB
                                                         ->  Hash Join  (cost=2.51..41855.50 rows=74997 width=38) (actual time=0.073..130.614 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=8) (actual time=0.029..91.298 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.035..0.037 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.030..0.035 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.012 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.015..0.016 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=14.914..14.914 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.030..5.550 rows=20000 loops=5)
 Planning Time: 3.835 ms
 Execution Time: 2832.493 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1289063.75..1289063.76 rows=1 width=32) (actual time=10785.643..10830.077 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1289063.75..1289063.76 rows=1 width=32) (actual time=10785.641..10830.075 rows=1 loops=1)
         ->  Gather  (cost=1289063.32..1289063.73 rows=4 width=32) (actual time=10781.197..10830.058 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1288063.32..1288063.33 rows=1 width=32) (actual time=10770.742..10770.743 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=211532.87..1286561.07 rows=300450 width=12) (actual time=1318.771..10618.720 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=79741 lossy=53973
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211232.42 rows=1201800 width=0) (actual time=1230.384..1230.384 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 12.907 ms
 Execution Time: 10830.725 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1289063.75..1289063.76 rows=1 width=32) (actual time=3180.607..3222.923 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1289063.75..1289063.76 rows=1 width=32) (actual time=3180.606..3222.921 rows=1 loops=1)
         ->  Gather  (cost=1289063.32..1289063.73 rows=4 width=32) (actual time=3177.077..3222.905 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1288063.32..1288063.33 rows=1 width=32) (actual time=3172.502..3172.503 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=211532.87..1286561.07 rows=300450 width=12) (actual time=1183.658..3072.640 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=82862 lossy=56187
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211232.42 rows=1201800 width=0) (actual time=1090.183..1090.183 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.546 ms
 Execution Time: 3222.965 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1451748.00..1451748.59 rows=1 width=92) (actual time=15211.071..15255.863 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1451748.00..1457644.88 rows=10036 width=92) (actual time=15211.070..15255.861 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1451748.00..1456967.45 rows=40144 width=92) (actual time=15209.442..15255.850 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1450747.94..1451185.86 rows=10036 width=92) (actual time=15193.428..15197.748 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1450747.94..1450785.41 rows=14988 width=72) (actual time=15191.912..15192.482 rows=10368 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2052kB
                           Worker 0:  Sort Method: quicksort  Memory: 2009kB
                           Worker 1:  Sort Method: quicksort  Memory: 2004kB
                           Worker 2:  Sort Method: quicksort  Memory: 1993kB
                           Worker 3:  Sort Method: quicksort  Memory: 1992kB
                           ->  Parallel Hash Join  (cost=44275.03..1449708.41 rows=14988 width=72) (actual time=294.555..15179.190 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41224.98..1444893.84 rows=360158 width=46) (actual time=277.003..15050.759 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.41..354798.84 rows=299965 width=30) (actual time=276.372..2152.637 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298763.64 rows=3749564 width=8) (actual time=0.653..1003.318 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.43..40849.43 rows=29999 width=30) (actual time=275.469..275.471 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                   ->  Hash Join  (cost=1.40..40849.43 rows=29999 width=30) (actual time=0.648..266.154 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=8) (actual time=0.615..233.103 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.021..0.021 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.014..0.018 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.053..0.054 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=13.542..13.543 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.346..12.908 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.275..10.678 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.061..0.062 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.057..0.059 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 22.669 ms
 Execution Time: 15256.973 ms
(49 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1451748.00..1451748.59 rows=1 width=92) (actual time=4150.209..4192.007 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1451748.00..1457644.88 rows=10036 width=92) (actual time=4150.207..4192.004 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1451748.00..1456967.45 rows=40144 width=92) (actual time=4146.177..4191.991 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1450747.94..1451185.86 rows=10036 width=92) (actual time=4137.697..4142.512 rows=3 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1450747.94..1450785.41 rows=14988 width=72) (actual time=4136.206..4136.719 rows=9892 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1933kB
                           Worker 0:  Sort Method: quicksort  Memory: 1968kB
                           Worker 1:  Sort Method: quicksort  Memory: 2059kB
                           Worker 2:  Sort Method: quicksort  Memory: 2012kB
                           Worker 3:  Sort Method: quicksort  Memory: 2077kB
                           ->  Parallel Hash Join  (cost=44275.03..1449708.41 rows=14988 width=72) (actual time=150.774..4126.897 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41224.98..1444893.84 rows=360158 width=46) (actual time=137.547..4016.229 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.41..354798.84 rows=299965 width=30) (actual time=137.467..1306.960 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298763.64 rows=3749564 width=8) (actual time=0.056..379.925 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.43..40849.43 rows=29999 width=30) (actual time=137.080..137.081 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                   ->  Hash Join  (cost=1.40..40849.43 rows=29999 width=30) (actual time=0.049..125.202 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=8) (actual time=0.029..90.437 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.010..0.011 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=11.419..11.421 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.054..10.921 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.021..8.901 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.023..0.024 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.019..0.021 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.995 ms
 Execution Time: 4192.328 ms
(49 rows)

query 8 run 1
SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=580509.57..580509.87 rows=1 width=40) (actual time=31823.242..31867.921 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=580509.57..581237.65 rows=2406 width=40) (actual time=31823.241..31867.919 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=580509.57..581153.44 rows=2406 width=72) (actual time=31820.713..31867.910 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=579509.56..579882.76 rows=2406 width=72) (actual time=31815.948..31818.527 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=579509.56..579545.68 rows=14448 width=46) (actual time=31813.354..31813.825 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1301kB
                           Worker 0:  Sort Method: quicksort  Memory: 1331kB
                           ->  Hash Join  (cost=575328.76..578511.31 rows=14448 width=46) (actual time=31785.737..31811.152 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=575327.20..578393.15 rows=14448 width=20) (actual time=31785.503..31807.317 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.171..12.176 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=575250.45..575250.45 rows=6140 width=20) (actual time=31784.896..31784.903 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=533894.15..575250.45 rows=6140 width=20) (actual time=31411.243..31781.044 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=533891.65..575071.41 rows=30701 width=24) (actual time=31411.109..31774.856 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=8) (actual time=0.915..200.261 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=533507.88..533507.88 rows=30701 width=24) (actual time=31409.671..31409.674 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8256kB
                                                               ->  Parallel Hash Join  (cost=211601.58..533507.88 rows=30701 width=24) (actual time=29094.282..31383.151 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317511.46 rows=1151493 width=12) (actual time=0.643..1802.142 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=210351.94..210351.94 rows=99971 width=20) (actual time=29092.413..29092.415 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..210351.94 rows=99971 width=20) (actual time=0.989..28898.533 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47230.89 rows=3333 width=4) (actual time=0.530..313.305 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..48.63 rows=31 width=24) (actual time=0.326..4.373 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.107..0.109 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.102..0.107 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.096..0.096 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.094..0.095 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.208..0.208 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.091..0.094 rows=25 loops=2)
 Planning Time: 32.318 ms
 Execution Time: 31868.813 ms
(54 rows)

SET
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=580509.57..580509.87 rows=1 width=40) (actual time=2983.675..3029.626 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=580509.57..581237.65 rows=2406 width=40) (actual time=2983.674..3029.624 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=580509.57..581153.44 rows=2406 width=72) (actual time=2981.108..3029.612 rows=3 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=579509.56..579882.76 rows=2406 width=72) (actual time=2978.814..2981.778 rows=2 loops=2)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=579509.56..579545.68 rows=14448 width=46) (actual time=2976.233..2977.114 rows=11921 loops=2)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 1302kB
                           Worker 0:  Sort Method: quicksort  Memory: 1330kB
                           ->  Hash Join  (cost=575328.76..578511.31 rows=14448 width=46) (actual time=2954.679..2974.498 rows=11921 loops=2)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Parallel Hash Join  (cost=575327.20..578393.15 rows=14448 width=20) (actual time=2954.518..2970.857 rows=11921 loops=2)
                                       Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                       ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.017..6.997 rows=50000 loops=2)
                                       ->  Parallel Hash  (cost=575250.45..575250.45 rows=6140 width=20) (actual time=2954.076..2954.479 rows=11921 loops=2)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1600kB
                                             ->  Hash Join  (cost=533894.15..575250.45 rows=6140 width=20) (actual time=2688.933..2950.908 rows=11921 loops=2)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Hash Join  (cost=533891.65..575071.41 rows=30701 width=24) (actual time=2688.893..2945.123 rows=59296 loops=2)
                                                         Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=8) (actual time=0.023..104.753 rows=750000 loops=2)
                                                         ->  Parallel Hash  (cost=533507.88..533507.88 rows=30701 width=24) (actual time=2688.431..2688.831 rows=59296 loops=2)
                                                               Buckets: 131072  Batches: 1  Memory Usage: 8256kB
                                                               ->  Parallel Hash Join  (cost=211601.58..533507.88 rows=30701 width=24) (actual time=1274.737..2666.904 rows=59296 loops=2)
                                                                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                                     ->  Parallel Seq Scan on orders  (cost=0.00..317511.46 rows=1151493 width=12) (actual time=0.022..947.516 rows=2278756 loops=2)
                                                                           Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                                           Rows Removed by Filter: 5221244
                                                                     ->  Parallel Hash  (cost=210351.94..210351.94 rows=99971 width=20) (actual time=1273.486..1273.487 rows=194760 loops=2)
                                                                           Buckets: 524288  Batches: 1  Memory Usage: 25472kB
                                                                           ->  Nested Loop  (cost=0.56..210351.94 rows=99971 width=20) (actual time=0.113..1192.001 rows=194760 loops=2)
                                                                                 ->  Parallel Seq Scan on part  (cost=0.00..47230.89 rows=3333 width=4) (actual time=0.064..176.554 rows=6506 loops=2)
                                                                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                                       Rows Removed by Filter: 993494
                                                                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..48.63 rows=31 width=24) (actual time=0.012..0.149 rows=30 loops=13011)
                                                                                       Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.021..0.022 rows=5 loops=2)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.016..0.021 rows=5 loops=2)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.004 rows=25 loops=2)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=2)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=2)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.134..0.135 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=2)
 Planning Time: 3.741 ms
 Execution Time: 3029.721 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=599704.72..599704.88 rows=1 width=66) (actual time=46087.258..46171.776 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=599704.72..599727.83 rows=149 width=66) (actual time=46087.256..46171.774 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=599704.72..599723.74 rows=148 width=66) (actual time=46083.589..46171.760 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=598704.66..598706.05 rows=37 width=66) (actual time=46050.629..46075.050 rows=7 loops=5)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=598704.66..598704.76 rows=37 width=57) (actual time=46047.840..46054.190 rows=25208 loops=5)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: external merge  Disk: 47904kB
                           Worker 0:  Sort Method: external merge  Disk: 47800kB
                           Worker 1:  Sort Method: external merge  Disk: 48096kB
                           Worker 2:  Sort Method: external merge  Disk: 48368kB
                           Worker 3:  Sort Method: external merge  Disk: 47704kB
                           ->  Hash Join  (cost=3.29..598703.70 rows=37 width=57) (actual time=2.594..45156.869 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=1.73..598701.84 rows=37 width=31) (actual time=2.329..44575.014 rows=649638 loops=5)
                                       ->  Nested Loop  (cost=1.29..598575.21 rows=37 width=31) (actual time=1.119..32924.312 rows=649638 loops=5)
                                             ->  Nested Loop  (cost=1.00..598453.92 rows=37 width=35) (actual time=0.880..31237.072 rows=649638 loops=5)
                                                   ->  Nested Loop  (cost=0.43..166163.69 rows=121184 width=18) (actual time=0.529..1341.995 rows=86650 loops=5)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..47230.89 rows=30302 width=4) (actual time=0.239..206.145 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14) (actual time=0.047..0.050 rows=4 loops=108312)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.057..0.342 rows=7 loops=433248)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=3248192)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.063..0.063 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.049..0.053 rows=25 loops=5)
 Planning Time: 31.903 ms
 Execution Time: 46179.841 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=599704.72..599704.88 rows=1 width=66) (actual time=21715.710..21788.387 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=599704.72..599727.83 rows=149 width=66) (actual time=21715.708..21788.385 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=599704.72..599723.74 rows=148 width=66) (actual time=21707.747..21788.375 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=598704.66..598706.05 rows=37 width=66) (actual time=21665.468..21709.266 rows=14 loops=5)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=598704.66..598704.76 rows=37 width=57) (actual time=21663.420..21674.373 rows=50186 loops=5)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: external merge  Disk: 48000kB
                           Worker 0:  Sort Method: external merge  Disk: 47632kB
                           Worker 1:  Sort Method: external merge  Disk: 47936kB
                           Worker 2:  Sort Method: external merge  Disk: 48384kB
                           Worker 3:  Sort Method: external merge  Disk: 47920kB
                           ->  Hash Join  (cost=3.29..598703.70 rows=37 width=57) (actual time=1.313..20776.587 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=1.73..598701.84 rows=37 width=31) (actual time=1.194..20271.735 rows=649638 loops=5)
                                       ->  Nested Loop  (cost=1.29..598575.21 rows=37 width=31) (actual time=0.917..13974.651 rows=649638 loops=5)
                                             ->  Nested Loop  (cost=1.00..598453.92 rows=37 width=35) (actual time=0.864..12459.108 rows=649638 loops=5)
                                                   ->  Nested Loop  (cost=0.43..166163.69 rows=121184 width=18) (actual time=0.600..1198.993 rows=86650 loops=5)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..47230.89 rows=30302 width=4) (actual time=0.211..181.425 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14) (actual time=0.042..0.045 rows=4 loops=108312)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.025..0.127 rows=7 loops=433248)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.009..0.009 rows=1 loops=3248192)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.060..0.061 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.049..0.052 rows=25 loops=5)
 Planning Time: 17.939 ms
 Execution Time: 21795.838 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=964404.69..964404.74 rows=20 width=202) (actual time=20995.284..21045.068 rows=20 loops=1)
   ->  Sort  (cost=964404.69..965864.57 rows=583955 width=202) (actual time=20995.283..21045.065 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=862157.37..948865.85 rows=583955 width=202) (actual time=20247.106..20915.139 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=862157.37..935726.86 rows=583956 width=202) (actual time=20247.084..20588.300 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=861157.31..865172.01 rows=145989 width=202) (actual time=20229.356..20402.368 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=861157.31..861522.28 rows=145989 width=182) (actual time=20229.333..20261.211 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 53128kB
                                 Worker 0:  Sort Method: external merge  Disk: 35608kB
                                 Worker 1:  Sort Method: external merge  Disk: 47136kB
                                 Worker 2:  Sort Method: external merge  Disk: 42400kB
                                 Worker 3:  Sort Method: external merge  Disk: 40272kB
                                 ->  Hash Join  (cost=805312.37..848634.74 rows=145989 width=182) (actual time=19725.158..20093.458 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=805310.81..848184.99 rows=145989 width=160) (actual time=19725.091..20040.113 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=148) (actual time=0.470..150.605 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=803485.95..803485.95 rows=145989 width=16) (actual time=19723.471..19723.473 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                                   ->  Nested Loop  (cost=8428.28..803485.95 rows=145989 width=16) (actual time=158.604..19554.479 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8427.71..271895.88 rows=146678 width=8) (actual time=158.003..2517.601 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=46813
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8281.03 rows=586710 width=0) (actual time=107.528..107.528 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.143..0.147 rows=2 loops=573160)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                               Rows Removed by Filter: 2
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.051..0.052 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.043..0.046 rows=25 loops=5)
 Planning Time: 21.773 ms
 Execution Time: 21052.846 ms
(40 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=964404.69..964404.74 rows=20 width=202) (actual time=3508.296..3568.519 rows=20 loops=1)
   ->  Sort  (cost=964404.69..965864.57 rows=583955 width=202) (actual time=3508.295..3568.515 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=862157.37..948865.85 rows=583955 width=202) (actual time=2817.302..3439.157 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=862157.37..935726.86 rows=583956 width=202) (actual time=2817.292..3117.461 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=861157.31..865172.01 rows=145989 width=202) (actual time=2801.192..2975.982 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=861157.31..861522.28 rows=145989 width=182) (actual time=2801.171..2833.415 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 40208kB
                                 Worker 0:  Sort Method: external merge  Disk: 50592kB
                                 Worker 1:  Sort Method: external merge  Disk: 37816kB
                                 Worker 2:  Sort Method: external merge  Disk: 47448kB
                                 Worker 3:  Sort Method: external merge  Disk: 42456kB
                                 ->  Hash Join  (cost=805312.37..848634.74 rows=145989 width=182) (actual time=2378.013..2649.490 rows=229080 loops=5)
                                       Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                       ->  Parallel Hash Join  (cost=805310.81..848184.99 rows=145989 width=160) (actual time=2377.960..2593.982 rows=229080 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=148) (actual time=0.026..63.890 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=803485.95..803485.95 rows=145989 width=16) (actual time=2376.345..2376.347 rows=229080 loops=5)
                                                   Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                                   ->  Nested Loop  (cost=8428.28..803485.95 rows=145989 width=16) (actual time=151.411..2251.799 rows=229080 loops=5)
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=8427.71..271895.88 rows=146678 width=8) (actual time=151.204..531.144 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=50820
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8281.03 rows=586710 width=0) (actual time=99.928..99.928 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.013..0.014 rows=2 loops=573160)
                                                               Index Cond: (l_orderkey = orders.o_orderkey)
                                                               Filter: (l_returnflag = 'R'::bpchar)
                                                               Rows Removed by Filter: 2
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.031..0.031 rows=25 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.022..0.026 rows=25 loops=5)
 Planning Time: 2.175 ms
 Execution Time: 3573.920 ms
(40 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471027.91..471027.92 rows=1 width=36) (actual time=2071.795..2071.929 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207439.12..207439.13 rows=1 width=32) (actual time=472.366..472.446 rows=1 loops=1)
           ->  Gather  (cost=207438.68..207439.09 rows=4 width=32) (actual time=472.217..472.436 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206438.68..206438.69 rows=1 width=32) (actual time=469.483..469.486 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.46..205838.82 rows=79981 width=10) (actual time=3.910..443.937 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195217.31 rows=1999531 width=14) (actual time=0.027..227.007 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=3.829..3.830 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.556..3.392 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.542..2.967 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.352..0.353 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263588.79..263855.39 rows=106642 width=36) (actual time=2071.795..2071.847 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213352.28..263055.58 rows=106642 width=36) (actual time=2071.788..2071.841 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213352.28..253457.84 rows=319924 width=36) (actual time=1317.462..1413.518 rows=302505 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212352.22..214351.75 rows=79981 width=36) (actual time=1307.798..1356.799 rows=60501 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212352.22..212552.18 rows=79981 width=14) (actual time=1307.781..1311.209 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 4145kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6218kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4459kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4608kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6362kB
                                 ->  Hash Join  (cost=2323.46..205838.82 rows=79981 width=14) (actual time=35.021..1295.591 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195217.31 rows=1999531 width=18) (actual time=0.355..1062.749 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=34.626..34.628 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=1.081..33.669 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.149..0.152 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.928..32.797 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.665..0.665 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 15.235 ms
 Execution Time: 2072.714 ms
(56 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=471027.91..471027.92 rows=1 width=36) (actual time=1237.112..1237.272 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207439.12..207439.13 rows=1 width=32) (actual time=468.967..469.072 rows=1 loops=1)
           ->  Gather  (cost=207438.68..207439.09 rows=4 width=32) (actual time=468.820..469.061 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206438.68..206438.69 rows=1 width=32) (actual time=465.875..465.877 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.46..205838.82 rows=79981 width=10) (actual time=3.951..440.359 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195217.31 rows=1999531 width=14) (actual time=0.027..227.309 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=3.854..3.855 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.541..3.410 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.526..2.980 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.335..0.335 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263588.79..263855.39 rows=106642 width=36) (actual time=1237.111..1237.166 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213352.28..263055.58 rows=106642 width=36) (actual time=1237.105..1237.160 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213352.28..253457.84 rows=319924 width=36) (actual time=469.589..582.065 rows=302504 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212352.22..214351.75 rows=79981 width=36) (actual time=464.523..513.456 rows=60501 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212352.22..212552.18 rows=79981 width=14) (actual time=464.509..467.971 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 6736kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4124kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6305kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6810kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3354kB
                                 ->  Hash Join  (cost=2323.46..205838.82 rows=79981 width=14) (actual time=5.747..450.463 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195217.31 rows=1999531 width=18) (actual time=0.031..235.009 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.46..2273.46 rows=4000 width=4) (actual time=5.679..5.681 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.29..2273.46 rows=4000 width=4) (actual time=0.546..5.031 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.29..2232.15 rows=4000 width=8) (actual time=0.532..4.590 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.29 rows=4000 width=0) (actual time=0.344..0.344 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 0.923 ms
 Execution Time: 1237.347 ms
(56 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1723243.47..1723456.05 rows=1 width=27) (actual time=11508.657..11533.817 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1723243.47..1724731.54 rows=7 width=27) (actual time=11508.656..11533.815 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1723243.47..1724731.26 rows=28 width=27) (actual time=11491.934..11533.807 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1722243.41..1723727.86 rows=7 width=27) (actual time=11479.239..11491.669 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1722243.41..1722428.96 rows=74219 width=27) (actual time=11468.470..11471.858 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6358kB
                           Worker 0:  Sort Method: quicksort  Memory: 6348kB
                           Worker 1:  Sort Method: quicksort  Memory: 6417kB
                           Worker 2:  Sort Method: quicksort  Memory: 6396kB
                           Worker 3:  Sort Method: quicksort  Memory: 6481kB
                           ->  Nested Loop  (cost=0.43..1716239.28 rows=74219 width=27) (actual time=0.848..11424.774 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462548.57 rows=74219 width=15) (actual time=0.299..7579.894 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.061..0.061 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 19.580 ms
 Execution Time: 11534.626 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1723243.47..1723456.05 rows=1 width=27) (actual time=3963.690..3981.887 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1723243.47..1724731.54 rows=7 width=27) (actual time=3963.688..3981.885 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1723243.47..1724731.26 rows=28 width=27) (actual time=3948.624..3981.872 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1722243.41..1723727.86 rows=7 width=27) (actual time=3934.053..3945.770 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1722243.41..1722428.96 rows=74219 width=27) (actual time=3922.096..3925.474 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6150kB
                           Worker 0:  Sort Method: quicksort  Memory: 6338kB
                           Worker 1:  Sort Method: quicksort  Memory: 6587kB
                           Worker 2:  Sort Method: quicksort  Memory: 6343kB
                           Worker 3:  Sort Method: quicksort  Memory: 6582kB
                           ->  Nested Loop  (cost=0.43..1716239.28 rows=74219 width=27) (actual time=1.170..3892.669 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462548.57 rows=74219 width=15) (actual time=1.147..3579.733 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.682 ms
 Execution Time: 3981.952 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1673690.08..1673690.08 rows=1 width=16) (actual time=6624.534..6722.017 rows=1 loops=1)
   ->  Sort  (cost=1673690.08..1673690.58 rows=200 width=16) (actual time=6624.533..6722.016 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1673687.08..1673689.08 rows=200 width=16) (actual time=6624.513..6722.001 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=849011.23..1651188.08 rows=1499933 width=12) (actual time=4907.543..6492.730 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=849011.23..1606190.09 rows=5999732 width=12) (actual time=4907.538..6120.618 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=848011.17..890564.11 rows=1499933 width=12) (actual time=4870.321..5583.563 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=848011.17..857195.71 rows=3673815 width=8) (actual time=4870.310..5211.246 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 62616kB
                                       Worker 0:  Sort Method: external merge  Disk: 49120kB
                                       Worker 1:  Sort Method: external merge  Disk: 47144kB
                                       Worker 2:  Sort Method: external merge  Disk: 54888kB
                                       Worker 3:  Sort Method: external merge  Disk: 54488kB
                                       ->  Parallel Hash Left Join  (cost=368411.66..415113.06 rows=3673815 width=8) (actual time=2847.644..4034.410 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17423.93 rows=374983 width=4) (actual time=0.288..68.871 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308137.55..308137.55 rows=3673815 width=8) (actual time=2625.897..2625.898 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308137.55 rows=3673815 width=8) (actual time=0.112..2089.454 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 14.390 ms
 Execution Time: 6732.015 ms
(31 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1673690.08..1673690.08 rows=1 width=16) (actual time=5745.541..5843.376 rows=1 loops=1)
   ->  Sort  (cost=1673690.08..1673690.58 rows=200 width=16) (actual time=5745.541..5843.375 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1673687.08..1673689.08 rows=200 width=16) (actual time=5745.522..5843.362 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=849011.23..1651188.08 rows=1499933 width=12) (actual time=4113.709..5608.804 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=849011.23..1606190.09 rows=5999732 width=12) (actual time=4113.696..5236.260 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=848011.17..890564.11 rows=1499933 width=12) (actual time=4087.303..4803.401 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=848011.17..857195.71 rows=3673815 width=8) (actual time=4087.291..4427.655 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 54888kB
                                       Worker 0:  Sort Method: external merge  Disk: 50432kB
                                       Worker 1:  Sort Method: external merge  Disk: 57416kB
                                       Worker 2:  Sort Method: external merge  Disk: 52176kB
                                       Worker 3:  Sort Method: external merge  Disk: 53352kB
                                       ->  Parallel Hash Left Join  (cost=368411.66..415113.06 rows=3673815 width=8) (actual time=2071.540..3213.042 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17423.93 rows=374983 width=4) (actual time=0.100..52.608 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308137.55..308137.55 rows=3673815 width=8) (actual time=1866.373..1866.373 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308137.55 rows=3673815 width=8) (actual time=0.254..1301.256 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 0.620 ms
 Execution Time: 5851.919 ms
(31 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=816852.97..816852.99 rows=1 width=32) (actual time=5442.103..5485.119 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=816852.97..816852.99 rows=1 width=32) (actual time=5442.102..5485.117 rows=1 loops=1)
         ->  Gather  (cost=816852.52..816852.93 rows=4 width=64) (actual time=5435.296..5485.092 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=815852.52..815852.53 rows=1 width=64) (actual time=5428.437..5428.439 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=63817.13..812689.81 rows=180726 width=33) (actual time=735.774..5285.818 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=11586.31..759984.59 rows=180726 width=16) (actual time=295.939..4681.768 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=82767
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11405.59 rows=722902 width=0) (actual time=190.728..190.728 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.92..45980.92 rows=499992 width=25) (actual time=437.620..437.620 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.92 rows=499992 width=25) (actual time=0.791..301.551 rows=400000 loops=5)
 Planning Time: 17.254 ms
 Execution Time: 5485.859 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=816852.97..816852.99 rows=1 width=32) (actual time=1782.033..1836.756 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=816852.97..816852.99 rows=1 width=32) (actual time=1782.032..1836.754 rows=1 loops=1)
         ->  Gather  (cost=816852.52..816852.93 rows=4 width=64) (actual time=1776.235..1836.732 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=815852.52..815852.53 rows=1 width=64) (actual time=1771.666..1771.671 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=63817.13..812689.81 rows=180726 width=33) (actual time=557.423..1679.643 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=11586.31..759984.59 rows=180726 width=16) (actual time=275.302..1263.388 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=85775
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11405.59 rows=722902 width=0) (actual time=170.309..170.309 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45980.92..45980.92 rows=499992 width=25) (actual time=280.100..280.103 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137344kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45980.92 rows=499992 width=25) (actual time=0.039..130.296 rows=400000 loops=5)
 Planning Time: 0.870 ms
 Execution Time: 1836.801 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2740956.85..2741068.56 rows=1 width=103) (actual time=13479.758..13536.985 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1389069.63..1389069.64 rows=1 width=32) (actual time=2991.851..3000.915 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1386570.48..1387820.06 rows=99966 width=36) (actual time=2945.433..2994.656 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1342335.53..1383571.50 rows=399864 width=36) (actual time=2593.834..2690.261 rows=398570 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1341335.53..1342585.10 rows=99966 width=36) (actual time=2590.103..2641.666 rows=99642 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=36070.00..1335708.96 rows=562657 width=16) (actual time=439.389..2143.081 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=110384 lossy=73452
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35507.35 rows=2250628 width=0) (actual time=343.131..343.131 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1351887.21..1407741.69 rows=500 width=103) (actual time=13479.756..13527.917 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1351886.91..1406512.19 rows=500 width=36) (actual time=13479.351..13527.511 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1351886.91..1399764.48 rows=399864 width=36) (actual time=10267.432..10383.987 rows=346154 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1350886.85..1351136.77 rows=99966 width=36) (actual time=10234.932..10242.072 rows=69807 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10799kB
                           Worker 0:  Sort Method: quicksort  Memory: 10804kB
                           Worker 1:  Sort Method: quicksort  Memory: 10799kB
                           Worker 2:  Sort Method: quicksort  Memory: 10797kB
                           Worker 3:  Sort Method: quicksort  Memory: 10801kB
                           ->  Partial HashAggregate  (cost=1341335.53..1342585.10 rows=99966 width=36) (actual time=10140.381..10206.082 rows=98911 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=36070.00..1335708.96 rows=562657 width=16) (actual time=490.939..9653.887 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80637 lossy=53443
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35507.35 rows=2250628 width=0) (actual time=399.861..399.861 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71) (actual time=0.399..0.400 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.680 ms
 Execution Time: 13538.968 ms
(43 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2740956.85..2741068.56 rows=1 width=103) (actual time=6118.776..6177.601 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1389069.63..1389069.64 rows=1 width=32) (actual time=2991.420..3000.445 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1386570.48..1387820.06 rows=99966 width=36) (actual time=2947.622..2994.193 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1342335.53..1383571.50 rows=399864 width=36) (actual time=2595.121..2691.594 rows=398589 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1341335.53..1342585.10 rows=99966 width=36) (actual time=2590.756..2642.455 rows=99647 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=36070.00..1335708.96 rows=562657 width=16) (actual time=439.541..2144.047 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=110050 lossy=73359
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35507.35 rows=2250628 width=0) (actual time=343.553..343.554 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1351887.21..1407741.69 rows=500 width=103) (actual time=6118.775..6168.574 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1351886.91..1406512.19 rows=500 width=36) (actual time=6118.730..6168.528 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1351886.91..1399764.48 rows=399864 width=36) (actual time=2908.194..3026.470 rows=345805 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1350886.85..1351136.77 rows=99966 width=36) (actual time=2879.033..2886.217 rows=69768 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10844kB
                           Worker 0:  Sort Method: quicksort  Memory: 10815kB
                           Worker 1:  Sort Method: quicksort  Memory: 10724kB
                           Worker 2:  Sort Method: quicksort  Memory: 10783kB
                           Worker 3:  Sort Method: quicksort  Memory: 10796kB
                           ->  Partial HashAggregate  (cost=1341335.53..1342585.10 rows=99966 width=36) (actual time=2784.925..2851.464 rows=98815 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=36070.00..1335708.96 rows=562657 width=16) (actual time=455.605..2382.727 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=92301 lossy=61591
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35507.35 rows=2250628 width=0) (actual time=361.158..361.158 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.45 rows=1 width=71) (actual time=0.040..0.041 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.057 ms
 Execution Time: 6179.723 ms
(43 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=296629.18..296629.18 rows=1 width=44) (actual time=4641.212..4644.288 rows=1 loops=1)
   ->  Sort  (cost=296629.18..297014.36 rows=154071 width=44) (actual time=4641.211..4644.287 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=286856.34..295858.83 rows=154071 width=44) (actual time=3968.439..4638.167 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=286856.34..288348.70 rows=596942 width=40) (actual time=3968.388..4349.033 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58885.17..219094.02 rows=596942 width=40) (actual time=396.925..1118.910 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57885.17..158399.82 rows=149236 width=40) (actual time=390.458..1113.787 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101361.72 rows=999766 width=8) (actual time=41.932..572.530 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.725..41.116 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53480.79..53480.79 rows=74634 width=40) (actual time=347.838..347.839 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.79 rows=74634 width=40) (actual time=0.101..323.928 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 16.467 ms
 Execution Time: 4652.958 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=296629.18..296629.18 rows=1 width=44) (actual time=4368.640..4371.566 rows=1 loops=1)
   ->  Sort  (cost=296629.18..297014.36 rows=154071 width=44) (actual time=4368.638..4371.564 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=286856.34..295858.83 rows=154071 width=44) (actual time=3696.407..4365.437 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=286856.34..288348.70 rows=596942 width=40) (actual time=3696.356..4077.196 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58885.17..219094.02 rows=596942 width=40) (actual time=197.804..808.113 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57885.17..158399.82 rows=149236 width=40) (actual time=185.427..780.777 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101361.72 rows=999766 width=8) (actual time=25.021..422.696 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.082..24.149 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53480.79..53480.79 rows=74634 width=40) (actual time=156.536..156.536 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53480.79 rows=74634 width=40) (actual time=0.018..126.087 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 0.738 ms
 Execution Time: 4379.251 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4504785.91..4504785.92 rows=1 width=32) (actual time=21658.088..21692.553 rows=1 loops=1)
   ->  Aggregate  (cost=4504785.91..4504785.92 rows=1 width=32) (actual time=21658.087..21692.551 rows=1 loops=1)
         ->  Merge Join  (cost=3229205.56..4504737.63 rows=19311 width=8) (actual time=10404.107..21691.691 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3228204.50..4380322.42 rows=1947133 width=36) (actual time=10393.859..21463.948 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3228204.50..4292701.44 rows=7788532 width=36) (actual time=10393.838..16712.990 rows=9972211 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3227204.45..3364012.13 rows=1947133 width=36) (actual time=10341.724..14887.678 rows=1994954 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3227204.45..3264693.95 rows=14995803 width=9) (actual time=10341.708..12368.343 rows=11996284 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 223752kB
                                       Worker 0:  Sort Method: external merge  Disk: 226336kB
                                       Worker 1:  Sort Method: external merge  Disk: 226544kB
                                       Worker 2:  Sort Method: external merge  Disk: 223752kB
                                       Worker 3:  Sort Method: external merge  Disk: 215480kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275101.03 rows=14995803 width=9) (actual time=0.099..5772.602 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..99203.13 rows=59504 width=21) (actual time=6.081..50.980 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..99054.37 rows=59504 width=21) (actual time=6.077..45.265 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..90966.81 rows=14876 width=21) (actual time=1.776..688.295 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.13 rows=496 width=4) (actual time=1.066..194.296 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..48.59 rows=31 width=17) (actual time=0.681..0.979 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 15.399 ms
 Execution Time: 21723.800 ms
(33 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4504785.91..4504785.92 rows=1 width=32) (actual time=18860.357..18915.764 rows=1 loops=1)
   ->  Aggregate  (cost=4504785.91..4504785.92 rows=1 width=32) (actual time=18860.356..18915.762 rows=1 loops=1)
         ->  Merge Join  (cost=3229205.56..4504737.63 rows=19311 width=8) (actual time=7517.972..18915.043 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3228204.50..4380322.42 rows=1947133 width=36) (actual time=7509.350..18715.052 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3228204.50..4292701.44 rows=7788532 width=36) (actual time=7509.331..13965.331 rows=9971476 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3227204.45..3364012.13 rows=1947133 width=36) (actual time=7468.345..11942.565 rows=1994825 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3227204.45..3264693.95 rows=14995803 width=9) (actual time=7468.329..9468.345 rows=11996371 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 232024kB
                                       Worker 0:  Sort Method: external merge  Disk: 232024kB
                                       Worker 1:  Sort Method: external merge  Disk: 211272kB
                                       Worker 2:  Sort Method: external merge  Disk: 225056kB
                                       Worker 3:  Sort Method: external merge  Disk: 215480kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275101.03 rows=14995803 width=9) (actual time=0.035..2278.485 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..99203.13 rows=59504 width=21) (actual time=3.724..25.020 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..99054.37 rows=59504 width=21) (actual time=3.718..19.544 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..90966.81 rows=14876 width=21) (actual time=0.215..126.037 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.13 rows=496 width=4) (actual time=0.192..104.697 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..48.59 rows=31 width=17) (actual time=0.006..0.037 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.745 ms
 Execution Time: 18947.276 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9255140.40..9255140.65 rows=100 width=71) (actual time=36420.410..36777.524 rows=99 loops=1)
   ->  Sort  (cost=9255140.40..9305118.23 rows=19991135 width=71) (actual time=36420.408..36777.517 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5547705.88..8491093.59 rows=19991135 width=71) (actual time=36419.779..36777.420 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547705.88..8041293.04 rows=19991136 width=71) (actual time=36419.773..36777.321 rows=100 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5546705.82..5659155.96 rows=4997784 width=71) (actual time=36412.052..36412.100 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546705.82..5559200.28 rows=4997784 width=44) (actual time=36412.034..36412.045 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 37kB
                                 Worker 0:  Sort Method: quicksort  Memory: 35kB
                                 Worker 1:  Sort Method: quicksort  Memory: 33kB
                                 Worker 2:  Sort Method: quicksort  Memory: 35kB
                                 Worker 3:  Sort Method: quicksort  Memory: 36kB
                                 ->  Parallel Hash Join  (cost=3390539.71..4891797.46 rows=4997784 width=44) (actual time=35455.612..36411.921 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275101.03 rows=14995803 width=9) (actual time=0.018..2270.915 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3363935.08..3363935.08 rows=1249650 width=43) (actual time=31104.917..31104.921 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4192kB
                                             ->  Parallel Hash Join  (cost=44385.12..3363935.08 rows=1249650 width=43) (actual time=2830.583..31098.476 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316270.62 rows=1249650 width=24) (actual time=2511.964..30779.077 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435452.35 rows=3749564 width=20) (actual time=0.597..1686.878 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796465.35 rows=4998601 width=4) (actual time=707.633..28900.396 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271612.25 rows=59983212 width=9) (actual time=1.879..13237.543 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39696.83..39696.83 rows=374983 width=23) (actual time=316.609..316.609 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98688kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=23) (actual time=0.527..213.997 rows=300000 loops=5)
 Planning Time: 21.157 ms
 Execution Time: 36778.230 ms
(38 rows)

SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9255140.40..9255140.65 rows=100 width=71) (actual time=35004.088..35348.255 rows=99 loops=1)
   ->  Sort  (cost=9255140.40..9305118.23 rows=19991135 width=71) (actual time=35004.087..35348.248 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5547705.88..8491093.59 rows=19991135 width=71) (actual time=35003.865..35348.158 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547705.88..8041293.04 rows=19991136 width=71) (actual time=35003.845..35348.077 rows=99 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5546705.82..5659155.96 rows=4997784 width=71) (actual time=34989.898..34989.946 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546705.82..5559200.28 rows=4997784 width=44) (actual time=34989.886..34989.899 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 38kB
                                 Worker 0:  Sort Method: quicksort  Memory: 35kB
                                 Worker 1:  Sort Method: quicksort  Memory: 34kB
                                 Worker 2:  Sort Method: quicksort  Memory: 37kB
                                 Worker 3:  Sort Method: quicksort  Memory: 33kB
                                 ->  Parallel Hash Join  (cost=3390539.71..4891797.46 rows=4997784 width=44) (actual time=34055.410..34989.776 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275101.03 rows=14995803 width=9) (actual time=0.020..2249.624 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3363935.08..3363935.08 rows=1249650 width=43) (actual time=29687.187..29687.190 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=44385.12..3363935.08 rows=1249650 width=43) (actual time=1742.133..29672.287 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316270.62 rows=1249650 width=24) (actual time=1400.825..29330.215 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435452.35 rows=3749564 width=20) (actual time=0.452..833.096 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796465.35 rows=4998601 width=4) (actual time=644.179..28305.604 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271612.25 rows=59983212 width=9) (actual time=1.494..11606.011 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39696.83..39696.83 rows=374983 width=23) (actual time=339.043..339.043 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98624kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39696.83 rows=374983 width=23) (actual time=0.370..223.817 rows=300000 loops=5)
 Planning Time: 11.507 ms
 Execution Time: 35348.342 ms
(38 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=121694.93..121694.94 rows=1 width=32) (actual time=4953.071..4964.991 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=121694.93..121694.94 rows=1 width=32) (actual time=4953.069..4964.988 rows=1 loops=1)
         ->  Gather  (cost=121694.49..121694.90 rows=4 width=32) (actual time=4941.820..4964.967 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=120694.49..120694.50 rows=1 width=32) (actual time=4936.766..4936.767 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..120692.41 rows=277 width=12) (actual time=39.260..4936.144 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.64 rows=1156 width=30) (actual time=0.501..176.296 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.56 rows=1 width=21) (actual time=4.481..4.976 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 18.181 ms
 Execution Time: 4965.772 ms
(16 rows)

SET
SET
SET


 Limit  (cost=121694.93..121694.94 rows=1 width=32) (actual time=209.408..229.615 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=121694.93..121694.94 rows=1 width=32) (actual time=209.406..229.612 rows=1 loops=1)
         ->  Gather  (cost=121694.49..121694.90 rows=4 width=32) (actual time=204.077..229.595 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=120694.49..120694.50 rows=1 width=32) (actual time=198.493..198.494 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..120692.41 rows=277 width=12) (actual time=0.606..198.305 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62230.64 rows=1156 width=30) (actual time=0.082..118.872 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..50.56 rows=1 width=21) (actual time=0.074..0.082 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.908 ms
 Execution Time: 229.669 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3078188.44..3078188.45 rows=1 width=51) (actual time=33239.805..33239.960 rows=1 loops=1)
   ->  Sort  (cost=3078188.44..3078188.45 rows=1 width=51) (actual time=33239.803..33239.958 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1614103.75..3078188.43 rows=1 width=51) (actual time=10313.112..33238.024 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.676..34.882 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.236..0.239 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.436..27.031 rows=100000 loops=1)
               ->  Materialize  (cost=1614103.75..3073536.13 rows=3 width=8) (actual time=2.120..5.724 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1614103.75..3073536.11 rows=3 width=8) (actual time=8680.331..17379.208 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1613102.84..2897588.04 rows=4817324 width=40) (actual time=8674.760..16960.626 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1613102.84..2735356.86 rows=8997132 width=40) (actual time=8674.750..11733.954 rows=8161194 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1612102.78..1662711.65 rows=2249283 width=40) (actual time=8616.272..9872.667 rows=1632330 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1612102.78..1617725.99 rows=2249283 width=13) (actual time=8616.250..8888.200 rows=1824719 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 40528kB
                                                   Worker 0:  Sort Method: external merge  Disk: 40568kB
                                                   Worker 1:  Sort Method: external merge  Disk: 40528kB
                                                   Worker 2:  Sort Method: external merge  Disk: 42624kB
                                                   Worker 3:  Sort Method: external merge  Disk: 41152kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350080.04 rows=2249283 width=13) (actual time=0.105..7787.196 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95405.26 rows=80790 width=16) (actual time=5.000..85.095 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95203.29 rows=80790 width=16) (actual time=4.996..68.264 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84580.36 rows=20198 width=16) (actual time=0.869..1273.353 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.15 rows=5050 width=4) (actual time=0.583..191.378 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.184..0.198 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 21.723 ms
 Execution Time: 33245.611 ms
(48 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3078188.44..3078188.45 rows=1 width=51) (actual time=27769.546..27769.691 rows=1 loops=1)
   ->  Sort  (cost=3078188.44..3078188.45 rows=1 width=51) (actual time=27769.544..27769.689 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1614103.75..3078188.43 rows=1 width=51) (actual time=5049.733..27768.092 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.017..17.325 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.008..6.311 rows=100000 loops=1)
               ->  Materialize  (cost=1614103.75..3073536.13 rows=3 width=8) (actual time=0.843..4.393 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1614103.75..3073536.11 rows=3 width=8) (actual time=3453.105..11950.250 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1613102.84..2897588.04 rows=4817324 width=40) (actual time=3448.925..11588.866 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1613102.84..2735356.86 rows=8997132 width=40) (actual time=3448.915..6514.238 rows=8160684 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1612102.78..1662711.65 rows=2249283 width=40) (actual time=3399.657..4641.448 rows=1632221 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1612102.78..1617725.99 rows=2249283 width=13) (actual time=3399.633..3668.288 rows=1824714 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 42416kB
                                                   Worker 0:  Sort Method: external merge  Disk: 40728kB
                                                   Worker 1:  Sort Method: external merge  Disk: 40528kB
                                                   Worker 2:  Sort Method: external merge  Disk: 41200kB
                                                   Worker 3:  Sort Method: external merge  Disk: 40528kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350080.04 rows=2249283 width=13) (actual time=0.041..2448.593 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95405.26 rows=80790 width=16) (actual time=3.615..36.408 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95203.29 rows=80790 width=16) (actual time=3.611..20.086 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84580.36 rows=20198 width=16) (actual time=0.068..109.833 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.15 rows=5050 width=4) (actual time=0.048..86.835 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.003..0.003 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.377 ms
 Execution Time: 27775.689 ms
(48 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1964900.91..1964900.92 rows=1 width=34) (actual time=13091.874..13137.431 rows=100 loops=1)
   ->  Sort  (cost=1964900.91..1964900.92 rows=1 width=34) (actual time=13091.872..13137.423 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1964900.38..1964900.90 rows=1 width=34) (actual time=13076.437..13136.097 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1964900.38..1964900.87 rows=4 width=34) (actual time=13076.425..13133.571 rows=17136 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1963900.32..1963900.34 rows=1 width=34) (actual time=13058.910..13061.007 rows=3427 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1963900.32..1963900.32 rows=1 width=26) (actual time=13058.904..13059.664 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 783kB
                                 Worker 0:  Sort Method: quicksort  Memory: 793kB
                                 Worker 1:  Sort Method: quicksort  Memory: 813kB
                                 Worker 2:  Sort Method: quicksort  Memory: 810kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1025kB
                                 ->  Nested Loop Semi Join  (cost=1338032.45..1963900.31 rows=1 width=26) (actual time=8624.494..13015.029 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1338031.89..1963896.67 rows=1 width=38) (actual time=8624.453..12974.301 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1338031.32..1653214.80 rows=96753 width=38) (actual time=8623.632..10262.526 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308137.55 rows=1814414 width=4) (actual time=0.708..1123.071 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335532.02..1335532.02 rows=199944 width=34) (actual time=8621.696..8622.030 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131360kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335532.02 rows=199944 width=34) (actual time=21.151..8448.534 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312590.54 rows=4998601 width=8) (actual time=0.668..7600.294 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=20.256..20.257 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 384kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.403..19.942 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.343..17.847 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.050..0.051 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 19.796 ms
 Execution Time: 13138.356 ms
(52 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1964900.91..1964900.92 rows=1 width=34) (actual time=6773.560..6809.453 rows=100 loops=1)
   ->  Sort  (cost=1964900.91..1964900.92 rows=1 width=34) (actual time=6773.559..6809.445 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1964900.38..1964900.90 rows=1 width=34) (actual time=6757.957..6808.141 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1964900.38..1964900.87 rows=4 width=34) (actual time=6757.947..6805.710 rows=17153 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1963900.32..1963900.34 rows=1 width=34) (actual time=6739.090..6741.176 rows=3431 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1963900.32..1963900.32 rows=1 width=26) (actual time=6739.084..6739.843 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 813kB
                                 Worker 0:  Sort Method: quicksort  Memory: 803kB
                                 Worker 1:  Sort Method: quicksort  Memory: 821kB
                                 Worker 2:  Sort Method: quicksort  Memory: 790kB
                                 Worker 3:  Sort Method: quicksort  Memory: 804kB
                                 ->  Nested Loop Semi Join  (cost=1338032.45..1963900.31 rows=1 width=26) (actual time=3935.182..6694.682 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1338031.89..1963896.67 rows=1 width=38) (actual time=3934.668..6659.437 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1338031.32..1653214.80 rows=96753 width=38) (actual time=3934.378..4922.124 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308137.55 rows=1814414 width=4) (actual time=0.076..499.568 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335532.02..1335532.02 rows=199944 width=34) (actual time=3933.097..3933.428 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335532.02 rows=199944 width=34) (actual time=12.779..3740.707 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312590.54 rows=4998601 width=8) (actual time=1.728..2865.432 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=10.143..10.145 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 384kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.057..9.876 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.026..7.970 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.018..0.019 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.588 ms
 Execution Time: 6809.562 ms
(52 rows)

query 22 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96315.44..96315.59 rows=1 width=72) (actual time=832.431..846.159 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.63..46820.64 rows=1 width=32) (actual time=330.948..331.040 rows=1 loops=1)
           ->  Gather  (cost=46820.20..46820.61 rows=4 width=32) (actual time=330.935..331.031 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.20..45820.21 rows=1 width=32) (actual time=321.443..321.444 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.31 rows=11954 width=6) (actual time=0.110..312.836 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49494.80..50678.49 rows=7713 width=72) (actual time=832.430..846.065 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49494.80..50466.39 rows=7712 width=72) (actual time=831.926..846.055 rows=5 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=48494.74..48547.76 rows=1928 width=72) (actual time=497.802..498.643 rows=3 loops=4)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48494.74..48499.56 rows=1928 width=38) (actual time=497.326..497.576 rows=6199 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1141kB
                           Worker 0:  Sort Method: quicksort  Memory: 1123kB
                           Worker 1:  Sort Method: quicksort  Memory: 1124kB
                           Worker 2:  Sort Method: quicksort  Memory: 1128kB
                           ->  Nested Loop Anti Join  (cost=0.43..48389.54 rows=1928 width=38) (actual time=0.330..490.927 rows=15877 loops=4)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45790.31 rows=4375 width=26) (actual time=0.016..170.556 rows=47782 loops=4)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 327218
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.006..0.006 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 13.718 ms
 Execution Time: 846.810 ms
(33 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96315.44..96315.59 rows=1 width=72) (actual time=520.537..527.444 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.63..46820.64 rows=1 width=32) (actual time=227.703..227.807 rows=1 loops=1)
           ->  Gather  (cost=46820.20..46820.61 rows=4 width=32) (actual time=223.933..227.793 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.20..45820.21 rows=1 width=32) (actual time=221.073..221.073 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.31 rows=11954 width=6) (actual time=0.017..210.423 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49494.80..50678.49 rows=7713 width=72) (actual time=520.536..527.337 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49494.80..50466.39 rows=7712 width=72) (actual time=519.907..527.322 rows=6 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=48494.74..48547.76 rows=1928 width=72) (actual time=282.707..284.528 rows=6 loops=5)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48494.74..48499.56 rows=1928 width=38) (actual time=282.327..282.781 rows=10341 loops=5)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1538kB
                           Worker 0:  Sort Method: quicksort  Memory: 556kB
                           Worker 1:  Sort Method: quicksort  Memory: 1074kB
                           Worker 2:  Sort Method: quicksort  Memory: 1119kB
                           Worker 3:  Sort Method: quicksort  Memory: 806kB
                           ->  Nested Loop Anti Join  (cost=0.43..48389.54 rows=1928 width=38) (actual time=0.050..276.502 rows=12702 loops=5)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45790.31 rows=4375 width=26) (actual time=0.018..151.766 rows=38226 loops=5)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 261774
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.18 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.660 ms
 Execution Time: 527.770 ms
(34 rows)

