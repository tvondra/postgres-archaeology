query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184200.69..184201.33 rows=1 width=236) (actual time=2211.722..2211.798 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184200.69..184204.51 rows=6 width=236) (actual time=2211.721..2211.796 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184200.69..184203.56 rows=24 width=236) (actual time=2211.688..2211.766 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183200.63..183200.65 rows=6 width=236) (actual time=2203.364..2203.365 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183200.42..183200.55 rows=6 width=236) (actual time=2203.339..2203.345 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.13 rows=1482494 width=25) (actual time=0.914..448.353 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 12.912 ms
 Execution Time: 2213.829 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184200.69..184201.33 rows=1 width=236) (actual time=2101.322..2101.389 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184200.69..184204.51 rows=6 width=236) (actual time=2101.320..2101.387 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184200.69..184203.56 rows=24 width=236) (actual time=2101.288..2101.360 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183200.63..183200.65 rows=6 width=236) (actual time=2096.065..2096.066 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183200.42..183200.55 rows=6 width=236) (actual time=2096.041..2096.047 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.13 rows=1482494 width=25) (actual time=0.026..298.120 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.792 ms
 Execution Time: 2101.467 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47169.42..47169.42 rows=1 width=192) (actual time=434.810..434.906 rows=100 loops=1)
   ->  Sort  (cost=47169.42..47169.42 rows=1 width=192) (actual time=434.809..434.899 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=33932.83..47169.41 rows=1 width=192) (actual time=381.209..434.476 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6433.50 rows=845 width=30) (actual time=1.182..1.422 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=352 width=30) (actual time=1.132..31.836 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30538.34..30538.34 rows=159633 width=172) (actual time=379.341..379.344 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30538.34 rows=159633 width=172) (actual time=8.043..318.259 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.257..192.043 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=7.777..7.780 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.686..7.219 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.301..5.488 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.376..0.378 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.364..0.374 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.164..0.167 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.193..0.193 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.187..0.189 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.040..0.040 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.034..0.039 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.028..0.037 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.027..0.033 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.025..0.026 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.342 ms
 Execution Time: 435.078 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47169.42..47169.42 rows=1 width=192) (actual time=252.675..252.767 rows=100 loops=1)
   ->  Sort  (cost=47169.42..47169.42 rows=1 width=192) (actual time=252.674..252.760 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=33932.83..47169.41 rows=1 width=192) (actual time=231.817..252.413 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6433.50 rows=845 width=30) (actual time=0.281..0.480 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=352 width=30) (actual time=0.032..14.058 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30538.34..30538.34 rows=159633 width=172) (actual time=231.107..231.111 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30538.34 rows=159633 width=172) (actual time=2.781..175.514 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..47.896 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.770..2.773 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.027..2.285 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.644 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.023..0.024 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.017..0.023 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 2.244 ms
 Execution Time: 252.944 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233228.43..233228.46 rows=10 width=44) (actual time=1200.306..1201.680 rows=10 loops=1)
   ->  Sort  (cost=233228.43..234017.16 rows=315490 width=44) (actual time=1200.304..1201.677 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179959.75..226410.81 rows=315490 width=44) (actual time=1176.347..1199.185 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179959.75..217734.83 rows=315490 width=24) (actual time=1176.333..1182.255 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178959.69..179156.87 rows=78872 width=24) (actual time=1167.665..1167.933 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 611kB
                           Worker 0:  Sort Method: quicksort  Memory: 606kB
                           Worker 1:  Sort Method: quicksort  Memory: 593kB
                           Worker 2:  Sort Method: quicksort  Memory: 608kB
                           Worker 3:  Sort Method: quicksort  Memory: 632kB
                           ->  Parallel Hash Join  (cost=37909.88..172544.55 rows=78872 width=24) (actual time=233.411..1165.583 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.13 rows=817897 width=16) (actual time=0.512..861.153 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.52..37326.52 rows=46669 width=12) (actual time=231.587..231.590 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 9024kB
                                       ->  Parallel Hash Join  (cost=4534.48..37326.52 rows=46669 width=12) (actual time=22.691..222.538 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233384 width=16) (actual time=0.485..170.540 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12498 width=4) (actual time=22.096..22.096 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12498 width=4) (actual time=0.146..20.287 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 16.171 ms
 Execution Time: 1202.053 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233228.43..233228.46 rows=10 width=44) (actual time=457.268..458.994 rows=10 loops=1)
   ->  Sort  (cost=233228.43..234017.16 rows=315490 width=44) (actual time=457.267..458.991 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179959.75..226410.81 rows=315490 width=44) (actual time=433.257..456.435 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179959.75..217734.83 rows=315490 width=24) (actual time=433.243..439.503 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178959.69..179156.87 rows=78872 width=24) (actual time=428.409..428.682 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 604kB
                           Worker 0:  Sort Method: quicksort  Memory: 554kB
                           Worker 1:  Sort Method: quicksort  Memory: 630kB
                           Worker 2:  Sort Method: quicksort  Memory: 659kB
                           Worker 3:  Sort Method: quicksort  Memory: 605kB
                           ->  Parallel Hash Join  (cost=37909.88..172544.55 rows=78872 width=24) (actual time=97.922..425.618 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.13 rows=817897 width=16) (actual time=0.045..245.142 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.52..37326.52 rows=46669 width=12) (actual time=97.160..97.162 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.48..37326.52 rows=46669 width=12) (actual time=9.046..86.275 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233384 width=16) (actual time=0.010..48.380 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12498 width=4) (actual time=8.149..8.150 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12498 width=4) (actual time=0.010..6.037 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.278 ms
 Execution Time: 459.064 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29276.31..61437.55 rows=1 width=24) (actual time=3162.281..3165.648 rows=1 loops=1)
   ->  GroupAggregate  (cost=29276.31..190082.50 rows=5 width=24) (actual time=3162.280..3165.646 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29276.31..189808.84 rows=54723 width=16) (actual time=666.617..3157.331 rows=10479 loops=1)
               ->  Gather Merge  (cost=29275.88..35749.96 rows=54723 width=20) (actual time=665.713..681.877 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28275.84..28319.97 rows=17653 width=20) (actual time=658.732..659.196 rows=3730 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1287kB
                           Worker 0:  Sort Method: quicksort  Memory: 1249kB
                           Worker 1:  Sort Method: quicksort  Memory: 1206kB
                           Worker 2:  Sort Method: quicksort  Memory: 1295kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=634.84..27030.63 rows=17653 width=20) (actual time=5.001..652.655 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=6009
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..621.16 rows=54723 width=0) (actual time=7.079..7.079 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.216..0.216 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 12.567 ms
 Execution Time: 3166.379 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29276.31..61437.55 rows=1 width=24) (actual time=77.161..82.604 rows=1 loops=1)
   ->  GroupAggregate  (cost=29276.31..190082.50 rows=5 width=24) (actual time=77.160..82.602 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29276.31..189808.84 rows=54723 width=16) (actual time=33.861..80.975 rows=10479 loops=1)
               ->  Gather Merge  (cost=29275.88..35749.96 rows=54723 width=20) (actual time=33.828..42.398 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28275.84..28319.97 rows=17653 width=20) (actual time=30.773..31.060 rows=3790 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1262kB
                           Worker 0:  Sort Method: quicksort  Memory: 1258kB
                           Worker 1:  Sort Method: quicksort  Memory: 1262kB
                           Worker 2:  Sort Method: quicksort  Memory: 1255kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=634.84..27030.63 rows=17653 width=20) (actual time=6.315..27.089 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5873
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..621.16 rows=54723 width=0) (actual time=5.298..5.298 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.831 ms
 Execution Time: 82.661 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84504.69..84504.69 rows=1 width=58) (actual time=2397.614..2406.846 rows=1 loops=1)
   ->  Sort  (cost=84504.69..84504.75 rows=25 width=58) (actual time=2397.613..2406.844 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84465.05..84504.56 rows=25 width=58) (actual time=2397.027..2406.833 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84465.05..84503.69 rows=75 width=58) (actual time=2396.813..2406.812 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83465.01..83494.84 rows=25 width=58) (actual time=2388.123..2388.880 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83465.01..83470.91 rows=2361 width=38) (actual time=2387.925..2388.010 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 193kB
                                 Worker 0:  Sort Method: quicksort  Memory: 197kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 196kB
                                 ->  Hash Join  (cost=7863.39..83332.73 rows=2361 width=38) (actual time=53.731..2386.097 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7390.39..82549.79 rows=59037 width=50) (actual time=48.527..2368.283 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7389.95..34966.14 rows=14759 width=38) (actual time=48.095..453.906 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2649.82..29887.77 rows=73797 width=8) (actual time=20.143..399.752 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6495
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2592.63 rows=228770 width=0) (actual time=15.630..15.630 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=27.818..27.821 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2400kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.221..25.426 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.107..20.629 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.108..0.109 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.102..0.108 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.047..0.048 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.050..0.050 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.159..0.167 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.640..3.641 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.085..2.239 rows=10000 loops=4)
 Planning Time: 23.489 ms
 Execution Time: 2407.139 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84504.69..84504.69 rows=1 width=58) (actual time=143.236..156.744 rows=1 loops=1)
   ->  Sort  (cost=84504.69..84504.75 rows=25 width=58) (actual time=143.235..156.742 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84465.05..84504.56 rows=25 width=58) (actual time=142.595..156.730 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84465.05..84503.69 rows=75 width=58) (actual time=142.373..156.710 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83465.01..83494.84 rows=25 width=58) (actual time=138.153..138.922 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83465.01..83470.91 rows=2361 width=38) (actual time=137.952..138.037 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 204kB
                                 Worker 0:  Sort Method: quicksort  Memory: 193kB
                                 Worker 1:  Sort Method: quicksort  Memory: 191kB
                                 Worker 2:  Sort Method: quicksort  Memory: 195kB
                                 ->  Hash Join  (cost=7863.39..83332.73 rows=2361 width=38) (actual time=30.866..137.153 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7390.39..82549.79 rows=59037 width=50) (actual time=27.935..126.179 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7389.95..34966.14 rows=14759 width=38) (actual time=27.909..67.845 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2649.82..29887.77 rows=73797 width=8) (actual time=16.060..42.287 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6515
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2592.63 rows=228770 width=0) (actual time=12.468..12.468 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.700..11.702 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.042..9.529 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.413 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.031 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.029 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.783..2.783 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.392 rows=10000 loops=4)
 Planning Time: 4.131 ms
 Execution Time: 157.053 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109136.49..109136.50 rows=1 width=32) (actual time=1778.780..1785.930 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=109136.49..109136.50 rows=1 width=32) (actual time=1778.779..1785.927 rows=1 loops=1)
         ->  Gather  (cost=109136.05..109136.46 rows=4 width=32) (actual time=1778.359..1785.915 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=108136.05..108136.06 rows=1 width=32) (actual time=1769.883..1769.884 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21484.64..107982.55 rows=30700 width=12) (actual time=134.711..1750.911 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13311
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21453.94 rows=122802 width=0) (actual time=131.343..131.343 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 12.369 ms
 Execution Time: 1787.263 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109136.49..109136.50 rows=1 width=32) (actual time=208.004..215.301 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=109136.49..109136.50 rows=1 width=32) (actual time=208.003..215.298 rows=1 loops=1)
         ->  Gather  (cost=109136.05..109136.46 rows=4 width=32) (actual time=207.992..215.289 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=108136.05..108136.06 rows=1 width=32) (actual time=203.858..203.859 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21484.64..107982.55 rows=30700 width=12) (actual time=106.596..196.603 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=11753
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21453.94 rows=122802 width=0) (actual time=98.837..98.838 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.510 ms
 Execution Time: 215.359 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141524.47..141682.86 rows=1 width=116) (actual time=3268.140..3269.266 rows=1 loops=1)
   ->  GroupAggregate  (cost=141524.47..1121827.45 rows=6189 width=116) (actual time=3268.139..3269.265 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141524.47..1121641.78 rows=6189 width=96) (actual time=826.131..3266.336 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32694
               ->  Nested Loop  (cost=141524.05..641346.05 rows=154735 width=76) (actual time=824.337..2750.245 rows=34053 loops=1)
                     ->  Gather Merge  (cost=141523.62..160053.87 rows=154761 width=76) (actual time=823.363..864.453 rows=34053 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140523.56..140620.29 rows=38690 width=76) (actual time=810.407..811.359 rows=7199 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4573kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4273kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4522kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4362kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4202kB
                                 ->  Hash Join  (cost=381.77..137575.45 rows=38690 width=76) (actual time=3.870..784.596 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.75 rows=464847 width=24) (actual time=0.782..729.140 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.006..3.009 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.283..2.857 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.200..1.554 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.072..0.074 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.061..0.067 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.050..0.051 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.055..0.055 rows=1 loops=34053)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=34053)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 22.599 ms
 Execution Time: 3269.748 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141524.47..141682.86 rows=1 width=116) (actual time=507.938..509.559 rows=1 loops=1)
   ->  GroupAggregate  (cost=141524.47..1121827.45 rows=6189 width=116) (actual time=507.937..509.557 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141524.47..1121641.78 rows=6189 width=96) (actual time=342.395..508.306 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32686
               ->  Nested Loop  (cost=141524.05..641346.05 rows=154735 width=76) (actual time=342.093..437.462 rows=34045 loops=1)
                     ->  Gather Merge  (cost=141523.62..160053.87 rows=154761 width=76) (actual time=342.038..361.756 rows=34045 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140523.56..140620.29 rows=38690 width=76) (actual time=332.795..333.425 rows=7243 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3412kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3491kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5957kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4517kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6090kB
                                 ->  Hash Join  (cost=381.77..137575.45 rows=38690 width=76) (actual time=2.382..306.231 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.75 rows=464847 width=24) (actual time=0.036..246.614 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.252..2.254 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.038..2.107 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.007..0.701 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.028..0.030 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.019..0.025 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34045)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34045)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 3.061 ms
 Execution Time: 509.657 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42025.70..42417.25 rows=1 width=64) (actual time=5457.275..5461.314 rows=1 loops=1)
   ->  GroupAggregate  (cost=42025.70..984100.42 rows=2406 width=64) (actual time=5457.274..5461.312 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42025.70..984003.22 rows=2454 width=70) (actual time=263.634..5458.583 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14807
               ->  Nested Loop  (cost=42025.70..983109.44 rows=2454 width=20) (actual time=263.609..5453.901 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42025.41..975908.57 rows=2454 width=20) (actual time=263.383..5409.528 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42024.98..351114.36 rows=369258 width=24) (actual time=230.867..4348.123 rows=183035 loops=1)
                                 ->  Gather Merge  (cost=42024.55..52945.89 rows=92314 width=8) (actual time=229.619..270.722 rows=45677 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41024.51..41098.96 rows=29779 width=8) (actual time=221.753..223.146 rows=12458 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 2038kB
                                             Worker 0:  Sort Method: quicksort  Memory: 2016kB
                                             Worker 1:  Sort Method: quicksort  Memory: 2030kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1977kB
                                             ->  Parallel Hash Join  (cost=4740.13..38811.63 rows=29779 width=8) (actual time=23.856..214.076 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148894 width=12) (actual time=0.422..159.497 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=23.240..23.243 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.267..21.498 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.125..16.809 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.137..0.138 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.131..0.137 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.060..0.062 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.066..0.066 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.063..0.064 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.082..0.088 rows=4 loops=45677)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=183035)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62993  Misses: 120042  Evictions: 0  Overflows: 0  Memory Usage: 8001kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=120042)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.035..0.035 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.024 rows=25 loops=1)
 Planning Time: 26.734 ms
 Execution Time: 5462.396 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42025.70..42417.25 rows=1 width=64) (actual time=622.804..629.284 rows=1 loops=1)
   ->  GroupAggregate  (cost=42025.70..984100.42 rows=2406 width=64) (actual time=622.802..629.282 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42025.70..984003.22 rows=2454 width=70) (actual time=101.134..628.068 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14793
               ->  Nested Loop  (cost=42025.70..983109.44 rows=2454 width=20) (actual time=101.116..625.622 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42025.41..975908.57 rows=2454 width=20) (actual time=101.104..622.284 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42024.98..351114.36 rows=369258 width=24) (actual time=99.727..288.680 rows=182878 loops=1)
                                 ->  Gather Merge  (cost=42024.55..52945.89 rows=92314 width=8) (actual time=99.675..123.969 rows=45633 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41024.51..41098.96 rows=29779 width=8) (actual time=96.088..96.958 rows=12362 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 2012kB
                                             Worker 0:  Sort Method: quicksort  Memory: 2019kB
                                             Worker 1:  Sort Method: quicksort  Memory: 2018kB
                                             Worker 2:  Sort Method: quicksort  Memory: 2012kB
                                             ->  Parallel Hash Join  (cost=4740.13..38811.63 rows=29779 width=8) (actual time=11.501..89.797 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148894 width=12) (actual time=0.013..55.548 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.271..11.274 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.063..9.577 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.492 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.053..0.055 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.047..0.053 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.026..0.027 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45633)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182878)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62904  Misses: 119974  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119974)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning Time: 5.113 ms
 Execution Time: 630.411 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22784.05..23826.45 rows=1 width=90) (actual time=4861.253..4864.220 rows=1 loops=1)
   ->  GroupAggregate  (cost=22784.05..124939.00 rows=98 width=90) (actual time=4861.251..4864.219 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=22784.05..124935.81 rows=98 width=81) (actual time=4860.274..4863.290 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1741kB  Peak Memory: 1741kB
               ->  Nested Loop  (cost=18527.80..124932.09 rows=98 width=81) (actual time=277.262..4836.255 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18527.37..124623.50 rows=98 width=53) (actual time=276.475..2644.800 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18526.94..22282.99 rows=32250 width=48) (actual time=275.335..280.867 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17526.92..17560.51 rows=13438 width=48) (actual time=268.352..268.487 rows=1033 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1802kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1718kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1713kB
                                       ->  Hash Join  (cost=449.99..16605.47 rows=13438 width=48) (actual time=4.309..259.680 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13438 width=26) (actual time=4.163..256.295 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.229..246.225 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.101..29.713 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.056..0.058 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.918..3.920 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.091..2.532 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.087..0.090 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.073..0.081 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.302..1.297 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.158..0.158 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 25.638 ms
 Execution Time: 4864.329 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22784.05..23826.45 rows=1 width=90) (actual time=127.132..130.915 rows=1 loops=1)
   ->  GroupAggregate  (cost=22784.05..124939.00 rows=98 width=90) (actual time=127.130..130.913 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=22784.05..124935.81 rows=98 width=81) (actual time=126.139..129.971 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1741kB  Peak Memory: 1741kB
               ->  Nested Loop  (cost=18527.80..124932.09 rows=98 width=81) (actual time=51.535..122.337 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18527.37..124623.50 rows=98 width=53) (actual time=51.517..76.517 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18526.94..22282.99 rows=32250 width=48) (actual time=51.481..56.078 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17526.92..17560.51 rows=13438 width=48) (actual time=48.471..48.560 rows=1038 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1815kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1702kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1717kB
                                       ->  Hash Join  (cost=449.99..16605.47 rows=13438 width=48) (actual time=2.878..40.810 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13438 width=26) (actual time=2.797..37.975 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.029..30.671 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.011..14.701 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.754..2.755 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.424 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.025 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.017 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.064 ms
 Execution Time: 131.004 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101796.28..101796.33 rows=20 width=202) (actual time=2105.566..2110.432 rows=20 loops=1)
   ->  Sort  (cost=101796.28..101939.91 rows=57450 width=202) (actual time=2105.565..2110.429 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=99549.43..100267.56 rows=57450 width=202) (actual time=2073.184..2098.601 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6675.06..98831.31 rows=57450 width=182) (actual time=60.113..1965.121 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5675.06..92086.31 rows=18532 width=182) (actual time=51.293..2018.459 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5673.49..92027.86 rows=18532 width=160) (actual time=51.148..2008.205 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=670.24..86975.96 rows=18532 width=16) (actual time=14.611..1950.326 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=669.81..27079.99 rows=18612 width=8) (actual time=13.088..502.762 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5173
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..655.39 rows=57696 width=0) (actual time=9.385..9.385 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.096..0.100 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.038..36.038 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.100..15.466 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.075..0.075 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.067..0.070 rows=25 loops=4)
 Planning Time: 21.372 ms
 Execution Time: 2111.133 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=101796.28..101796.33 rows=20 width=202) (actual time=222.356..226.452 rows=20 loops=1)
   ->  Sort  (cost=101796.28..101939.91 rows=57450 width=202) (actual time=222.354..226.448 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=99549.43..100267.56 rows=57450 width=202) (actual time=189.282..214.308 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6675.06..98831.31 rows=57450 width=182) (actual time=42.674..106.358 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5675.06..92086.31 rows=18532 width=182) (actual time=39.133..151.105 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5673.49..92027.86 rows=18532 width=160) (actual time=39.046..144.032 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=670.24..86975.96 rows=18532 width=16) (actual time=10.643..101.612 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=669.81..27079.99 rows=18612 width=8) (actual time=10.601..27.229 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2253
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..655.39 rows=57696 width=0) (actual time=7.254..7.255 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.978..27.979 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.007..7.937 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
 Planning Time: 1.652 ms
 Execution Time: 226.870 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15990.11..15990.11 rows=1 width=36) (actual time=712.789..712.805 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.08..7689.09 rows=1 width=32) (actual time=26.263..26.265 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.63 rows=31927 width=10) (actual time=0.050..17.758 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.271 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.221 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.01..8327.62 rows=10642 width=36) (actual time=712.788..712.790 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.90..8247.80 rows=10642 width=36) (actual time=701.639..712.639 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.63 rows=31927 width=14) (actual time=0.856..642.579 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.656..4.222 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.199..0.202 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.452..3.910 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.243..0.243 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.043..1.535 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.840 ms
 Execution Time: 713.185 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15990.11..15990.11 rows=1 width=36) (actual time=83.037..83.052 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.08..7689.09 rows=1 width=32) (actual time=26.308..26.310 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.63 rows=31927 width=10) (actual time=0.049..17.627 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.272 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.033..0.218 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.017 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.01..8327.62 rows=10642 width=36) (actual time=83.036..83.037 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.90..8247.80 rows=10642 width=36) (actual time=72.020..82.890 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.63 rows=31927 width=14) (actual time=0.057..26.648 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.052..0.427 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.042..0.363 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.020 ms
 Execution Time: 83.390 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147758.98..160645.93 rows=1 width=27) (actual time=1617.227..1618.332 rows=1 loops=1)
   ->  GroupAggregate  (cost=147758.98..237967.62 rows=7 width=27) (actual time=1617.226..1618.330 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147758.98..237481.79 rows=27758 width=27) (actual time=784.018..1608.260 rows=15492 loops=1)
               ->  Gather Merge  (cost=147758.56..151082.75 rows=27763 width=15) (actual time=783.617..793.183 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146758.50..146775.85 rows=6941 width=15) (actual time=774.812..775.154 rows=4236 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 540kB
                           Worker 0:  Sort Method: quicksort  Memory: 529kB
                           Worker 1:  Sort Method: quicksort  Memory: 532kB
                           Worker 2:  Sort Method: quicksort  Memory: 532kB
                           Worker 3:  Sort Method: quicksort  Memory: 522kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146315.63 rows=6941 width=15) (actual time=0.762..772.793 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.052..0.052 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.257 ms
 Execution Time: 1618.755 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147758.98..160645.93 rows=1 width=27) (actual time=411.632..412.720 rows=1 loops=1)
   ->  GroupAggregate  (cost=147758.98..237967.62 rows=7 width=27) (actual time=411.631..412.718 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147758.98..237481.79 rows=27758 width=27) (actual time=364.307..407.995 rows=15492 loops=1)
               ->  Gather Merge  (cost=147758.56..151082.75 rows=27763 width=15) (actual time=364.265..369.161 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146758.50..146775.85 rows=6941 width=15) (actual time=360.931..361.158 rows=4200 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 475kB
                           Worker 0:  Sort Method: quicksort  Memory: 620kB
                           Worker 1:  Sort Method: quicksort  Memory: 546kB
                           Worker 2:  Sort Method: quicksort  Memory: 475kB
                           Worker 3:  Sort Method: quicksort  Memory: 540kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146315.63 rows=6941 width=15) (actual time=0.088..358.496 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.835 ms
 Execution Time: 412.784 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1450.331..1450.334 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1450.330..1450.332 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1450.304..1450.311 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1410.478..1433.587 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=34.562..1053.175 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.747..621.235 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.490..33.490 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..16.261 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.607 ms
 Execution Time: 1451.805 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1251.000..1251.003 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1250.999..1251.001 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1250.972..1250.979 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1211.278..1234.259 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=29.501..869.591 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.011..466.899 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.089..29.090 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..13.165 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.705 ms
 Execution Time: 1252.130 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72411.36..72411.37 rows=1 width=32) (actual time=890.632..893.091 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72411.36..72411.37 rows=1 width=32) (actual time=890.630..893.088 rows=1 loops=1)
         ->  Gather  (cost=72410.90..72411.31 rows=4 width=64) (actual time=886.240..893.064 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71410.90..71410.91 rows=1 width=64) (actual time=876.544..876.546 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7151.18..71089.81 rows=18348 width=33) (actual time=53.532..860.877 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1177.18..65067.65 rows=18348 width=16) (actual time=21.085..813.346 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8328
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1158.83 rows=73390 width=0) (actual time=14.245..14.245 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=32.057..32.058 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14176kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.157..18.303 rows=40000 loops=5)
 Planning Time: 14.289 ms
 Execution Time: 893.467 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72411.36..72411.37 rows=1 width=32) (actual time=107.042..111.908 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=72411.36..72411.37 rows=1 width=32) (actual time=107.040..111.905 rows=1 loops=1)
         ->  Gather  (cost=72410.90..72411.31 rows=4 width=64) (actual time=102.796..111.882 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=71410.90..71410.91 rows=1 width=64) (actual time=98.881..98.883 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7151.18..71089.81 rows=18348 width=33) (actual time=39.572..89.650 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1177.18..65067.65 rows=18348 width=16) (actual time=14.422..56.069 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8736
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1158.83 rows=73390 width=0) (actual time=8.506..8.507 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=24.256..24.257 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.648 rows=40000 loops=5)
 Planning Time: 1.029 ms
 Execution Time: 111.952 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241788.83..241895.96 rows=1 width=103) (actual time=2004.995..2012.635 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122291.11..122291.12 rows=1 width=32) (actual time=251.374..251.376 rows=1 loops=1)
           ->  HashAggregate  (cost=122041.48..122166.29 rows=9985 width=36) (actual time=247.897..250.790 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3705.21..119730.97 rows=231051 width=16) (actual time=28.807..125.649 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3647.44 rows=231051 width=0) (actual time=18.624..18.625 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119497.71..124854.08 rows=50 width=103) (actual time=2004.994..2012.630 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119497.43..124728.95 rows=50 width=36) (actual time=2004.395..2012.030 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119497.43..124279.63 rows=39940 width=36) (actual time=1727.968..1743.285 rows=41789 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118497.37..118522.33 rows=9985 width=36) (actual time=1715.167..1716.051 rows=8786 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1468kB
                           Worker 0:  Sort Method: quicksort  Memory: 1466kB
                           Worker 1:  Sort Method: quicksort  Memory: 1467kB
                           Worker 2:  Sort Method: quicksort  Memory: 1467kB
                           Worker 3:  Sort Method: quicksort  Memory: 1465kB
                           ->  Partial HashAggregate  (cost=117709.28..117834.09 rows=9985 width=36) (actual time=1706.584..1712.152 rows=9895 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3705.21..117131.65 rows=57763 width=16) (actual time=42.144..1650.700 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13534
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3647.44 rows=231051 width=0) (actual time=38.085..38.085 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.593..0.593 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 14.558 ms
 Execution Time: 2013.076 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241788.83..241895.96 rows=1 width=103) (actual time=437.207..451.958 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122291.11..122291.12 rows=1 width=32) (actual time=238.534..238.535 rows=1 loops=1)
           ->  HashAggregate  (cost=122041.48..122166.29 rows=9985 width=36) (actual time=235.041..237.940 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3705.21..119730.97 rows=231051 width=16) (actual time=29.050..115.316 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3647.44 rows=231051 width=0) (actual time=18.829..18.829 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119497.71..124854.08 rows=50 width=103) (actual time=437.206..451.955 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119497.43..124728.95 rows=50 width=36) (actual time=437.183..451.931 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119497.43..124279.63 rows=39940 width=36) (actual time=173.727..196.019 rows=41726 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118497.37..118522.33 rows=9985 width=36) (actual time=165.890..166.743 rows=8860 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1458kB
                           Worker 0:  Sort Method: quicksort  Memory: 1455kB
                           Worker 1:  Sort Method: quicksort  Memory: 1472kB
                           Worker 2:  Sort Method: quicksort  Memory: 1470kB
                           Worker 3:  Sort Method: quicksort  Memory: 1468kB
                           ->  Partial HashAggregate  (cost=117709.28..117834.09 rows=9985 width=36) (actual time=157.848..162.861 rows=9874 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3705.21..117131.65 rows=57763 width=16) (actual time=33.775..120.940 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=11453
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3647.44 rows=231051 width=0) (actual time=26.558..26.559 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.020..0.020 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.747 ms
 Execution Time: 452.120 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26934.06..26934.06 rows=1 width=44) (actual time=275.658..276.243 rows=1 loops=1)
   ->  Sort  (cost=26934.06..26974.45 rows=16156 width=44) (actual time=275.657..276.242 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18801.78..26853.28 rows=16156 width=44) (actual time=183.366..271.477 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18801.78..26083.56 rows=60816 width=40) (actual time=183.339..230.799 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17801.72..17839.73 rows=15204 width=40) (actual time=159.280..161.046 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2885kB
                           Worker 0:  Sort Method: quicksort  Memory: 2716kB
                           Worker 1:  Sort Method: quicksort  Memory: 2320kB
                           Worker 2:  Sort Method: quicksort  Memory: 2814kB
                           Worker 3:  Sort Method: quicksort  Memory: 2832kB
                           ->  Parallel Hash Join  (cost=6689.14..16745.64 rows=15204 width=40) (actual time=32.251..100.225 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.753..57.167 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.573..6.016 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12670 width=40) (actual time=25.307..25.307 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2496kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12670 width=40) (actual time=0.378..23.133 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 15.003 ms
 Execution Time: 276.638 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26934.06..26934.06 rows=1 width=44) (actual time=249.458..249.849 rows=1 loops=1)
   ->  Sort  (cost=26934.06..26974.45 rows=16156 width=44) (actual time=249.457..249.847 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18801.78..26853.28 rows=16156 width=44) (actual time=156.800..245.123 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18801.78..26083.56 rows=60816 width=40) (actual time=156.769..204.203 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17801.72..17839.73 rows=15204 width=40) (actual time=136.649..138.354 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2763kB
                           Worker 0:  Sort Method: quicksort  Memory: 2617kB
                           Worker 1:  Sort Method: quicksort  Memory: 2804kB
                           Worker 2:  Sort Method: quicksort  Memory: 2637kB
                           Worker 3:  Sort Method: quicksort  Memory: 2744kB
                           ->  Parallel Hash Join  (cost=6689.14..16745.64 rows=15204 width=40) (actual time=18.223..76.250 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.841..43.513 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.085..2.603 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12670 width=40) (actual time=15.193..15.193 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12670 width=40) (actual time=0.015..12.516 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.828 ms
 Execution Time: 249.913 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=220017.70..220017.71 rows=1 width=32) (actual time=4869.653..4871.838 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=220017.70..220017.71 rows=1 width=32) (actual time=4869.651..4871.836 rows=1 loops=1)
         ->  Gather  (cost=220017.48..220017.69 rows=2 width=32) (actual time=4861.401..4871.821 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=219017.48..219017.49 rows=1 width=32) (actual time=4853.461..4853.464 rows=1 loops=3)
                     ->  Nested Loop  (cost=210012.22..219015.28 rows=876 width=8) (actual time=4778.592..4853.374 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Hash Join  (cost=210011.79..215361.02 rows=88 width=40) (actual time=4777.634..4803.290 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=88 width=4) (actual time=0.509..26.070 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=207532.87..207532.87 rows=198314 width=36) (actual time=4776.725..4776.726 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202575.02..205549.73 rows=198314 width=36) (actual time=4015.301..4736.793 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 56504kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56488kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56496kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.01 rows=6001001 width=9) (actual time=0.179..1016.676 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.530..0.720 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 15.016 ms
 Execution Time: 4881.456 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=220017.70..220017.71 rows=1 width=32) (actual time=4572.430..4575.046 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=220017.70..220017.71 rows=1 width=32) (actual time=4572.429..4575.044 rows=1 loops=1)
         ->  Gather  (cost=220017.48..220017.69 rows=2 width=32) (actual time=4564.240..4575.030 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=219017.48..219017.49 rows=1 width=32) (actual time=4560.570..4560.573 rows=1 loops=3)
                     ->  Nested Loop  (cost=210012.22..219015.28 rows=876 width=8) (actual time=4549.662..4560.533 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Hash Join  (cost=210011.79..215361.02 rows=88 width=40) (actual time=4549.617..4558.943 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=88 width=4) (actual time=0.071..9.355 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=207532.87..207532.87 rows=198314 width=36) (actual time=4549.089..4549.090 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202575.02..205549.73 rows=198314 width=36) (actual time=3784.629..4508.995 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 56488kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56464kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56464kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172570.01 rows=6001001 width=9) (actual time=0.052..772.567 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.009..0.022 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 1.150 ms
 Execution Time: 4583.780 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799649.70..799649.95 rows=100 width=71) (actual time=4565.132..4565.138 rows=9 loops=1)
   ->  Sort  (cost=799649.70..804650.53 rows=2000332 width=71) (actual time=4565.131..4565.136 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=663032.21..723198.45 rows=2000332 width=71) (actual time=4564.364..4565.089 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=340202.87..555279.95 rows=2000332 width=44) (actual time=3819.867..4564.285 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172570.01 rows=6001001 width=9) (actual time=0.653..325.146 rows=6001215 loops=1)
                     ->  Hash  (cost=333951.83..333951.83 rows=500083 width=43) (actual time=3619.944..3619.948 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=287570.57..333951.83 rows=500083 width=43) (actual time=3258.832..3619.923 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280598.57..325667.08 rows=500083 width=24) (actual time=3189.078..3550.159 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.732..281.283 rows=1500000 loops=1)
                                       ->  Hash  (cost=274347.53..274347.53 rows=500083 width=4) (actual time=3087.809..3087.810 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269346.70 rows=500083 width=4) (actual time=661.655..3087.786 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216837.95 rows=6001001 width=9) (actual time=0.018..1666.404 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.380..69.380 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.506..43.255 rows=150000 loops=1)
 Planning Time: 17.923 ms
 Execution Time: 4566.524 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799649.70..799649.95 rows=100 width=71) (actual time=3443.253..3443.259 rows=9 loops=1)
   ->  Sort  (cost=799649.70..804650.53 rows=2000332 width=71) (actual time=3443.252..3443.256 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=663032.21..723198.45 rows=2000332 width=71) (actual time=3442.508..3443.210 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=340202.87..555279.95 rows=2000332 width=44) (actual time=2691.695..3442.430 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172570.01 rows=6001001 width=9) (actual time=0.016..325.623 rows=6001215 loops=1)
                     ->  Hash  (cost=333951.83..333951.83 rows=500083 width=43) (actual time=2490.789..2490.792 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=287570.57..333951.83 rows=500083 width=43) (actual time=2279.390..2490.771 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280598.57..325667.08 rows=500083 width=24) (actual time=2234.339..2445.711 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..80.417 rows=1500000 loops=1)
                                       ->  Hash  (cost=274347.53..274347.53 rows=500083 width=4) (actual time=2176.944..2176.945 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269346.70 rows=500083 width=4) (actual time=459.730..2176.929 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216837.95 rows=6001001 width=9) (actual time=0.018..857.646 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.638..44.638 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.011..19.533 rows=150000 loops=1)
 Planning Time: 1.466 ms
 Execution Time: 3444.375 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=17753.04..17753.05 rows=1 width=32) (actual time=856.225..859.047 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=17753.04..17753.05 rows=1 width=32) (actual time=856.224..859.045 rows=1 loops=1)
         ->  Gather  (cost=17752.82..17753.03 rows=2 width=32) (actual time=853.734..859.033 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=16752.82..16752.83 rows=1 width=32) (actual time=848.305..848.306 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..16752.47 rows=46 width=12) (actual time=18.273..848.187 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=195 width=30) (actual time=0.564..28.393 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.72 rows=1 width=21) (actual time=4.317..4.849 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 18.152 ms
 Execution Time: 859.102 ms
(16 rows)

SET
SET
SET


 Limit  (cost=17753.04..17753.05 rows=1 width=32) (actual time=28.648..32.576 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=17753.04..17753.05 rows=1 width=32) (actual time=28.646..32.574 rows=1 loops=1)
         ->  Gather  (cost=17752.82..17753.03 rows=2 width=32) (actual time=28.525..32.565 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=16752.82..16752.83 rows=1 width=32) (actual time=26.160..26.161 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..16752.47 rows=46 width=12) (actual time=0.407..26.119 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=195 width=30) (actual time=0.119..17.023 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.72 rows=1 width=21) (actual time=0.047..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.201 ms
 Execution Time: 32.618 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215605.67..215605.68 rows=1 width=51) (actual time=4785.480..4785.562 rows=1 loops=1)
   ->  Sort  (cost=215605.67..215605.68 rows=1 width=51) (actual time=4785.479..4785.560 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185835.77..215605.66 rows=1 width=51) (actual time=4617.319..4785.327 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.567..3.860 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.252..0.255 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.308..2.816 rows=10000 loops=1)
               ->  Materialize  (cost=185835.77..215150.35 rows=1 width=8) (actual time=8.030..10.683 rows=4320 loops=438)
                     ->  Nested Loop  (cost=185835.77..215150.35 rows=1 width=8) (actual time=3517.236..4610.375 rows=5898 loops=1)
                           ->  Hash Join  (cost=185835.34..208166.84 rows=4900 width=44) (actual time=3516.831..4115.541 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179467.43..195673.46 rows=485183 width=40) (actual time=3484.644..4033.928 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14659.07..140932.92 rows=914257 width=13) (actual time=130.738..2952.160 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14430.50 rows=914257 width=0) (actual time=111.776..111.776 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=32.163..32.241 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.647..31.790 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.140..25.462 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.083..0.083 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.508 ms
 Execution Time: 4790.600 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215605.67..215605.68 rows=1 width=51) (actual time=1441.853..1441.943 rows=1 loops=1)
   ->  Sort  (cost=215605.67..215605.68 rows=1 width=51) (actual time=1441.851..1441.940 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185835.77..215605.66 rows=1 width=51) (actual time=1275.673..1441.749 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.680 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.588 rows=10000 loops=1)
               ->  Materialize  (cost=185835.77..215150.35 rows=1 width=8) (actual time=1.638..3.056 rows=4320 loops=438)
                     ->  Nested Loop  (cost=185835.77..215150.35 rows=1 width=8) (actual time=717.428..1272.333 rows=5898 loops=1)
                           ->  Hash Join  (cost=185835.34..208166.84 rows=4900 width=44) (actual time=717.404..1250.252 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179467.43..195673.46 rows=485183 width=40) (actual time=705.768..1199.617 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14659.07..140932.92 rows=914257 width=13) (actual time=93.163..311.325 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14430.50 rows=914257 width=0) (actual time=74.408..74.409 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.616..11.703 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.386..11.379 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.027..8.842 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.650 ms
 Execution Time: 1447.505 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194177.52..194177.53 rows=1 width=34) (actual time=1471.663..1471.778 rows=100 loops=1)
   ->  Sort  (cost=194177.52..194177.53 rows=1 width=34) (actual time=1471.662..1471.770 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194177.49..194177.51 rows=1 width=34) (actual time=1470.562..1471.345 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194177.49..194177.50 rows=1 width=26) (actual time=1470.554..1470.823 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 490kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194177.48 rows=1 width=26) (actual time=19.344..1457.253 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194174.09 rows=1 width=38) (actual time=16.941..1369.047 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194170.78 rows=1 width=34) (actual time=12.474..28.149 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193170.68 rows=1 width=34) (actual time=4.408..581.183 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133622.55 rows=20003 width=34) (actual time=2.964..473.815 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.13 rows=500084 width=8) (actual time=0.450..406.462 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=2.417..2.419 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.255..2.324 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.063..0.065 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.189..2.185 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.110..0.110 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.093..0.093 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.012..0.012 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 16.020 ms
 Execution Time: 1472.153 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194177.52..194177.53 rows=1 width=34) (actual time=488.889..488.996 rows=100 loops=1)
   ->  Sort  (cost=194177.52..194177.53 rows=1 width=34) (actual time=488.888..488.988 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194177.49..194177.51 rows=1 width=34) (actual time=487.797..488.566 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194177.49..194177.50 rows=1 width=26) (actual time=487.784..488.049 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 490kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194177.48 rows=1 width=26) (actual time=1.158..470.552 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194174.09 rows=1 width=38) (actual time=1.096..449.366 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194170.78 rows=1 width=34) (actual time=0.946..405.829 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193170.68 rows=1 width=34) (actual time=0.657..453.063 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133622.55 rows=20003 width=34) (actual time=0.545..348.938 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.13 rows=500084 width=8) (actual time=0.034..271.361 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.428..0.429 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.055..0.366 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.040..0.305 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.021 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.728 ms
 Execution Time: 489.092 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.58..12517.19 rows=1 width=72) (actual time=164.035..165.756 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=47.276..47.365 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=47.162..47.355 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=39.935..39.936 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1992 width=6) (actual time=0.137..38.626 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.33 rows=736 width=72) (actual time=164.033..165.664 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.93 rows=736 width=38) (actual time=73.849..165.141 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=72.065..75.270 rows=2736 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.455..22.612 rows=1616 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 688kB
                           Worker 0:  Sort Method: quicksort  Memory: 618kB
                           Worker 1:  Sort Method: quicksort  Memory: 613kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..20.457 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.032..0.032 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 12.674 ms
 Execution Time: 166.519 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.58..12517.19 rows=1 width=72) (actual time=59.979..61.503 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=29.089..29.165 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=28.970..29.154 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=26.928..26.929 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1992 width=6) (actual time=0.013..25.757 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7459.33 rows=736 width=72) (actual time=59.978..61.425 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7440.93 rows=736 width=38) (actual time=53.743..61.203 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=53.715..55.898 rows=2737 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.100..22.175 rows=1515 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 706kB
                           Worker 0:  Sort Method: quicksort  Memory: 606kB
                           Worker 1:  Sort Method: quicksort  Memory: 607kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.018..20.047 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.999 ms
 Execution Time: 61.563 ms
(30 rows)

