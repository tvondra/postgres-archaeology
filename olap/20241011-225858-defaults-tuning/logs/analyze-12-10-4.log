query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906347.41..1906348.09 rows=1 width=236) (actual time=21597.735..21597.804 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906347.41..1906351.47 rows=6 width=236) (actual time=21597.734..21597.802 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906347.41..1906350.28 rows=24 width=236) (actual time=21597.707..21597.777 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905347.35..1905347.37 rows=6 width=236) (actual time=21589.597..21589.598 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905347.11..1905347.28 rows=6 width=236) (actual time=21589.567..21589.577 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312587.95 rows=14818979 width=25) (actual time=0.095..5436.984 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 12.786 ms
 Execution Time: 21599.107 ms
(20 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906347.41..1906348.09 rows=1 width=236) (actual time=19415.402..19416.145 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906347.41..1906351.47 rows=6 width=236) (actual time=19415.400..19416.144 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906347.41..1906350.28 rows=24 width=236) (actual time=19415.351..19416.116 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905347.35..1905347.37 rows=6 width=236) (actual time=19411.868..19411.869 rows=3 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905347.11..1905347.28 rows=6 width=236) (actual time=19411.841..19411.849 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312587.95 rows=14818979 width=25) (actual time=0.028..2632.047 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 0.546 ms
 Execution Time: 19416.424 ms
(20 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1037985.30..1037985.30 rows=1 width=192) (actual time=4530.364..4530.485 rows=100 loops=1)
   ->  Sort  (cost=1037985.30..1037985.30 rows=1 width=192) (actual time=4530.362..4530.471 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=556695.03..1037985.29 rows=1 width=192) (actual time=3229.947..4527.081 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68579.46 rows=7277 width=30) (actual time=11.185..15.163 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.64 rows=1819 width=30) (actual time=1.144..322.732 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=555694.33..563626.51 rows=1586436 width=172) (actual time=3217.193..3673.067 rows=1603828 loops=1)
                     ->  Sort  (cost=555694.33..559660.42 rows=1586436 width=172) (actual time=3217.189..3487.011 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305165.38 rows=1586436 width=172) (actual time=67.595..2522.281 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255244.19 rows=8002219 width=14) (actual time=0.904..1078.813 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=66.414..66.416 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=4.812..59.833 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=2.067..44.642 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=2.733..2.734 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=2.726..2.731 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=2.491..2.492 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.219..0.220 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.215..0.216 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32) (actual time=0.103..0.103 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6) (actual time=0.091..0.100 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10) (actual time=0.085..0.098 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10) (actual time=0.085..0.096 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.080..0.082 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.012..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 18.329 ms
 Execution Time: 4568.395 ms
(56 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1037985.30..1037985.30 rows=1 width=192) (actual time=3490.650..3490.772 rows=100 loops=1)
   ->  Sort  (cost=1037985.30..1037985.30 rows=1 width=192) (actual time=3490.649..3490.765 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=556695.03..1037985.29 rows=1 width=192) (actual time=2750.344..3488.289 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Gather Merge  (cost=1000.49..68579.46 rows=7277 width=30) (actual time=4.803..7.502 rows=8046 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.64 rows=1819 width=30) (actual time=0.114..120.552 rows=1609 loops=5)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 398391
               ->  Materialize  (cost=555694.33..563626.51 rows=1586436 width=172) (actual time=2745.443..3192.136 rows=1603828 loops=1)
                     ->  Sort  (cost=555694.33..559660.42 rows=1586436 width=172) (actual time=2745.440..3005.510 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305165.38 rows=1586436 width=172) (actual time=40.676..2067.399 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255244.19 rows=8002219 width=14) (actual time=0.047..762.319 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=40.391..40.394 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.042..34.407 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.010..8.008 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.028..0.030 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.022..0.028 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.006..0.007 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=69.59..69.60 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..69.58 rows=4 width=6) (actual time=0.010..0.016 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..68.28 rows=19 width=10) (actual time=0.006..0.014 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..66.66 rows=19 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.77 rows=19 width=10) (actual time=0.003..0.004 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.012..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.007 rows=25 loops=1)
 Planning Time: 1.708 ms
 Execution Time: 3526.478 ms
(56 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2293332.87..2293332.89 rows=10 width=44) (actual time=14309.571..14351.083 rows=10 loops=1)
   ->  Sort  (cost=2293332.87..2301156.03 rows=3129264 width=44) (actual time=14309.569..14351.080 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1751284.01..2225710.60 rows=3129264 width=44) (actual time=14135.421..14327.979 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1751284.01..2147479.00 rows=3129264 width=44) (actual time=14135.415..14242.854 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1750283.95..1773753.43 rows=782316 width=44) (actual time=14125.835..14168.653 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1750283.95..1752239.74 rows=782316 width=24) (actual time=14125.822..14128.990 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6315kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6350kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6126kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6243kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6206kB
                                 ->  Nested Loop  (cost=41573.19..1663391.41 rows=782316 width=24) (actual time=272.710..14101.148 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41572.62..354446.03 rows=360190 width=12) (actual time=269.933..1997.518 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308148.27 rows=1800047 width=16) (actual time=0.583..1235.400 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.62..40634.62 rows=75040 width=4) (actual time=268.661..268.661 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.62 rows=75040 width=4) (actual time=0.102..250.869 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.041..0.041 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 18.410 ms
 Execution Time: 14352.220 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2293332.87..2293332.89 rows=10 width=44) (actual time=4081.930..4121.235 rows=10 loops=1)
   ->  Sort  (cost=2293332.87..2301156.03 rows=3129264 width=44) (actual time=4081.928..4121.232 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=1751284.01..2225710.60 rows=3129264 width=44) (actual time=3911.076..4098.130 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1751284.01..2147479.00 rows=3129264 width=44) (actual time=3911.070..4013.845 rows=113934 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1750283.95..1773753.43 rows=782316 width=44) (actual time=3903.075..3945.811 rows=22787 loops=5)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=1750283.95..1752239.74 rows=782316 width=24) (actual time=3903.061..3906.239 rows=60306 loops=5)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 6166kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6333kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6129kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6455kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6157kB
                                 ->  Nested Loop  (cost=41573.19..1663391.41 rows=782316 width=24) (actual time=135.607..3882.676 rows=60306 loops=5)
                                       ->  Parallel Hash Join  (cost=41572.62..354446.03 rows=360190 width=12) (actual time=135.339..1074.904 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308148.27 rows=1800047 width=16) (actual time=0.672..495.009 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.62..40634.62 rows=75040 width=4) (actual time=134.033..134.034 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15968kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.62 rows=75040 width=4) (actual time=0.029..113.058 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=2 width=16) (actual time=0.009..0.009 rows=0 loops=1451805)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning Time: 1.435 ms
 Execution Time: 4121.533 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=731463.62..731464.13 rows=1 width=24) (actual time=20723.743..20767.576 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=731463.62..731466.17 rows=5 width=24) (actual time=20723.742..20767.573 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=731463.62..731466.02 rows=20 width=24) (actual time=20723.726..20767.559 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=730463.57..730463.58 rows=5 width=24) (actual time=20712.202..20712.204 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=730463.46..730463.51 rows=5 width=24) (actual time=20712.181..20712.183 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=8262.80..729745.05 rows=143681 width=16) (actual time=156.658..20615.840 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=8262.23..271686.32 rows=143739 width=20) (actual time=155.841..2162.935 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=46560
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8118.50 rows=574956 width=0) (actual time=108.829..108.829 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.163..0.163 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 14.753 ms
 Execution Time: 20768.760 ms
(27 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=731463.62..731464.13 rows=1 width=24) (actual time=2050.706..2090.213 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=731463.62..731466.17 rows=5 width=24) (actual time=2050.705..2090.211 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Gather Merge  (cost=731463.62..731466.02 rows=20 width=24) (actual time=2050.690..2090.200 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=730463.57..730463.58 rows=5 width=24) (actual time=2038.840..2038.841 rows=4 loops=5)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     Worker 2:  Sort Method: quicksort  Memory: 25kB
                     Worker 3:  Sort Method: quicksort  Memory: 25kB
                     ->  Partial HashAggregate  (cost=730463.46..730463.51 rows=5 width=24) (actual time=2038.771..2038.773 rows=5 loops=5)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=8262.80..729745.05 rows=143681 width=16) (actual time=151.475..1989.702 rows=102764 loops=5)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=8262.23..271686.32 rows=143739 width=20) (actual time=151.408..506.996 rows=112085 loops=5)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=40421
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8118.50 rows=574956 width=0) (actual time=102.141..102.142 rows=560424 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=560424)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning Time: 1.098 ms
 Execution Time: 2090.300 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=765571.45..765571.45 rows=1 width=58) (actual time=22839.407..22891.300 rows=1 loops=1)
   ->  Sort  (cost=765571.45..765571.51 rows=25 width=58) (actual time=22839.406..22891.298 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=765335.90..765571.33 rows=25 width=58) (actual time=22828.782..22891.278 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=765335.90..765570.26 rows=100 width=58) (actual time=22827.398..22891.242 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=764335.84..764558.29 rows=25 width=58) (actual time=22815.230..22821.148 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=764335.84..764380.27 rows=17771 width=38) (actual time=22813.931..22814.694 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1510kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1497kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1511kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1512kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1520kB
                                 ->  Parallel Hash Join  (cost=78804.65..763081.46 rows=17771 width=38) (actual time=659.545..22798.866 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75113.06..757029.13 rows=449664 width=50) (actual time=638.822..22628.481 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=75112.49..347204.92 rows=112462 width=38) (actual time=638.081..2643.459 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32319.05..302021.67 rows=562308 width=8) (actual time=347.141..2132.586 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52462
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31756.75 rows=2249231 width=0) (actual time=287.209..287.209 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.92..41855.92 rows=75002 width=38) (actual time=290.151..290.154 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.92 rows=75002 width=38) (actual time=1.541..263.258 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=8) (actual time=0.839..224.463 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.690..0.692 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.684..0.690 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.378..0.380 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.297..0.298 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.293..0.295 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.207..0.218 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.584..17.584 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.075..11.677 rows=20000 loops=5)
 Planning Time: 23.626 ms
 Execution Time: 22892.195 ms
(50 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=765571.45..765571.45 rows=1 width=58) (actual time=2704.944..2755.039 rows=1 loops=1)
   ->  Sort  (cost=765571.45..765571.51 rows=25 width=58) (actual time=2704.943..2755.036 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=765335.90..765571.33 rows=25 width=58) (actual time=2694.890..2755.019 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=765335.90..765570.26 rows=100 width=58) (actual time=2692.931..2754.980 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=764335.84..764558.29 rows=25 width=58) (actual time=2684.157..2689.852 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=764335.84..764380.27 rows=17771 width=38) (actual time=2682.859..2683.640 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1503kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1495kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1555kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1533kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1464kB
                                 ->  Parallel Hash Join  (cost=78804.65..763081.46 rows=17771 width=38) (actual time=498.846..2673.816 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=75113.06..757029.13 rows=449664 width=50) (actual time=480.935..2542.044 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=75112.49..347204.92 rows=112462 width=38) (actual time=480.864..1073.603 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=32319.05..302021.67 rows=562308 width=8) (actual time=322.141..743.416 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=51964
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31756.75 rows=2249231 width=0) (actual time=262.573..262.573 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.92..41855.92 rows=75002 width=38) (actual time=158.152..158.155 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25312kB
                                                         ->  Hash Join  (cost=2.51..41855.92 rows=75002 width=38) (actual time=0.888..125.350 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=8) (actual time=0.837..84.992 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.041..0.043 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.035..0.041 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.015..0.017 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.014..0.015 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.092..17.092 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.024..9.718 rows=20000 loops=5)
 Planning Time: 3.700 ms
 Execution Time: 2755.137 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1294350.97..1294350.98 rows=1 width=32) (actual time=10796.710..10841.873 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1294350.97..1294350.98 rows=1 width=32) (actual time=10796.708..10841.870 rows=1 loops=1)
         ->  Gather  (cost=1294350.54..1294350.95 rows=4 width=32) (actual time=10792.813..10841.851 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1293350.54..1293350.55 rows=1 width=32) (actual time=10785.245..10785.246 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=215984.83..1291845.87 rows=300932 width=12) (actual time=1371.507..10643.556 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=80248 lossy=54164
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..215683.89 rows=1203730 width=0) (actual time=1280.194..1280.194 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.840 ms
 Execution Time: 10842.862 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1294350.97..1294350.98 rows=1 width=32) (actual time=3169.716..3215.395 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1294350.97..1294350.98 rows=1 width=32) (actual time=3169.715..3215.393 rows=1 loops=1)
         ->  Gather  (cost=1294350.54..1294350.95 rows=4 width=32) (actual time=3167.784..3215.371 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1293350.54..1293350.55 rows=1 width=32) (actual time=3163.729..3163.730 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=215984.83..1291845.87 rows=300932 width=12) (actual time=1239.854..3065.459 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=77861 lossy=52741
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..215683.89 rows=1203730 width=0) (actual time=1145.846..1145.847 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.699 ms
 Execution Time: 3215.737 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1452023.93..1452024.51 rows=1 width=92) (actual time=14840.653..14885.918 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1452023.93..1457920.52 rows=10036 width=92) (actual time=14840.652..14885.916 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1452023.93..1457243.09 rows=40144 width=92) (actual time=14833.731..14885.900 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1451023.87..1451461.49 rows=10036 width=92) (actual time=14822.214..14826.367 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1451023.87..1451061.30 rows=14971 width=72) (actual time=14819.637..14820.233 rows=10379 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2024kB
                           Worker 0:  Sort Method: quicksort  Memory: 2016kB
                           Worker 1:  Sort Method: quicksort  Memory: 2030kB
                           Worker 2:  Sort Method: quicksort  Memory: 1979kB
                           Worker 3:  Sort Method: quicksort  Memory: 2000kB
                           ->  Parallel Hash Join  (cost=44275.40..1449985.64 rows=14971 width=72) (actual time=303.424..14806.886 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41225.35..1445156.75 rows=364108 width=46) (actual time=281.506..14673.668 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.79..354811.18 rows=300034 width=30) (actual time=280.495..2163.642 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298772.22 rows=3750422 width=8) (actual time=0.824..995.993 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.78..40849.78 rows=30001 width=30) (actual time=279.406..279.407 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8576kB
                                                   ->  Hash Join  (cost=1.40..40849.78 rows=30001 width=30) (actual time=0.935..269.224 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=8) (actual time=0.893..234.848 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.027..0.027 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.022 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.051..0.052 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=19.782..19.783 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 608kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.389..19.282 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.280..17.070 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.100..0.101 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.096..0.098 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 23.257 ms
 Execution Time: 14887.256 ms
(49 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1452023.93..1452024.51 rows=1 width=92) (actual time=4161.522..4203.915 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1452023.93..1457920.52 rows=10036 width=92) (actual time=4161.520..4203.912 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=1452023.93..1457243.09 rows=40144 width=92) (actual time=4155.446..4203.900 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1451023.87..1451461.49 rows=10036 width=92) (actual time=4145.335..4150.563 rows=4 loops=5)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=1451023.87..1451061.30 rows=14971 width=72) (actual time=4143.211..4143.793 rows=10390 loops=5)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 2001kB
                           Worker 0:  Sort Method: quicksort  Memory: 2071kB
                           Worker 1:  Sort Method: quicksort  Memory: 2038kB
                           Worker 2:  Sort Method: quicksort  Memory: 1939kB
                           Worker 3:  Sort Method: quicksort  Memory: 2001kB
                           ->  Parallel Hash Join  (cost=44275.40..1449985.64 rows=14971 width=72) (actual time=146.802..4132.680 rows=11559 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 11632
                                 ->  Nested Loop  (cost=41225.35..1445156.75 rows=364108 width=46) (actual time=134.781..4025.126 rows=289625 loops=5)
                                       ->  Parallel Hash Join  (cost=41224.79..354811.18 rows=300034 width=30) (actual time=134.723..1301.068 rows=238235 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..298772.22 rows=3750422 width=8) (actual time=0.026..366.465 rows=3000000 loops=5)
                                             ->  Parallel Hash  (cost=40849.78..40849.78 rows=30001 width=30) (actual time=134.338..134.340 rows=23924 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8608kB
                                                   ->  Hash Join  (cost=1.40..40849.78 rows=30001 width=30) (actual time=0.050..123.213 rows=23924 loops=5)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=8) (actual time=0.030..87.516 rows=300000 loops=5)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=5)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.62 rows=1 width=24) (actual time=0.011..0.011 rows=1 loops=1191175)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Parallel Hash  (cost=2991.23..2991.23 rows=4706 width=30) (actual time=10.706..10.707 rows=1596 loops=5)
                                       Buckets: 8192  Batches: 1  Memory Usage: 640kB
                                       ->  Hash Join  (cost=1.40..2991.23 rows=4706 width=30) (actual time=0.052..10.198 rows=1596 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.026..8.183 rows=20000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.021..0.021 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.017..0.019 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.968 ms
 Execution Time: 4204.018 ms
(49 rows)

query 8 run 1
SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=538302.11..538302.73 rows=1 width=40) (actual time=18360.956..18408.161 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=538302.11..539791.13 rows=2406 width=40) (actual time=18360.954..18408.159 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=538302.11..539616.69 rows=9624 width=72) (actual time=18359.846..18408.142 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=537302.05..537470.32 rows=2406 width=72) (actual time=18346.167..18347.394 rows=2 loops=5)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=537302.05..537315.40 rows=5340 width=46) (actual time=18345.010..18345.307 rows=4768 loops=5)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 542kB
                           Worker 0:  Sort Method: quicksort  Memory: 594kB
                           Worker 1:  Sort Method: quicksort  Memory: 620kB
                           Worker 2:  Sort Method: quicksort  Memory: 517kB
                           Worker 3:  Sort Method: quicksort  Memory: 552kB
                           ->  Hash Join  (cost=495604.64..536971.43 rows=5340 width=46) (actual time=18057.062..18343.576 rows=4768 loops=5)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=495603.08..536926.77 rows=5340 width=20) (actual time=18056.184..18340.367 rows=4768 loops=5)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Parallel Hash Join  (cost=495600.57..536770.72 rows=26703 width=24) (actual time=18055.873..18337.610 rows=23719 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=8) (actual time=0.589..207.621 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=495266.78..495266.78 rows=26703 width=24) (actual time=18054.637..18054.698 rows=23719 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8320kB
                                                   ->  Nested Loop  (cost=3545.54..495266.78 rows=26703 width=24) (actual time=25.242..18026.546 rows=23719 loops=5)
                                                         ->  Parallel Hash Join  (cost=3545.10..193842.68 rows=88011 width=20) (actual time=22.809..11870.467 rows=77904 loops=5)
                                                               Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                               ->  Nested Loop  (cost=0.56..190064.30 rows=89080 width=20) (actual time=1.130..11776.823 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47231.07 rows=3330 width=4) (actual time=0.618..115.063 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..42.62 rows=27 width=24) (actual time=0.336..4.464 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                               ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=21.439..21.440 rows=20000 loops=5)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                                                     ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.082..16.329 rows=20000 loops=5)
                                                         ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=12) (actual time=0.078..0.078 rows=0 loops=389521)
                                                               Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 1
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.208..0.209 rows=5 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.202..0.208 rows=5 loops=5)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=5)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.197..0.197 rows=1 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.194..0.195 rows=1 loops=5)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.066..0.066 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.054..0.057 rows=25 loops=5)
 Planning Time: 27.952 ms
 Execution Time: 18409.325 ms
(55 rows)

SET
SET
SET
                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=538302.11..538302.73 rows=1 width=40) (actual time=1760.190..1805.818 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=538302.11..539791.13 rows=2406 width=40) (actual time=1760.189..1805.816 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=538302.11..539616.69 rows=9624 width=72) (actual time=1759.146..1805.798 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=537302.05..537470.32 rows=2406 width=72) (actual time=1748.347..1749.567 rows=2 loops=5)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=537302.05..537315.40 rows=5340 width=46) (actual time=1747.182..1747.470 rows=4768 loops=5)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 513kB
                           Worker 0:  Sort Method: quicksort  Memory: 595kB
                           Worker 1:  Sort Method: quicksort  Memory: 573kB
                           Worker 2:  Sort Method: quicksort  Memory: 641kB
                           Worker 3:  Sort Method: quicksort  Memory: 408kB
                           ->  Hash Join  (cost=495604.64..536971.43 rows=5340 width=46) (actual time=1603.459..1745.928 rows=4768 loops=5)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=495603.08..536926.77 rows=5340 width=20) (actual time=1603.405..1743.867 rows=4768 loops=5)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Parallel Hash Join  (cost=495600.57..536770.72 rows=26703 width=24) (actual time=1603.308..1741.506 rows=23719 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=8) (actual time=0.024..52.629 rows=300000 loops=5)
                                             ->  Parallel Hash  (cost=495266.78..495266.78 rows=26703 width=24) (actual time=1602.229..1602.282 rows=23719 loops=5)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 8288kB
                                                   ->  Nested Loop  (cost=3545.54..495266.78 rows=26703 width=24) (actual time=17.775..1579.864 rows=23719 loops=5)
                                                         ->  Parallel Hash Join  (cost=3545.10..193842.68 rows=88011 width=20) (actual time=17.656..723.956 rows=77904 loops=5)
                                                               Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                               ->  Nested Loop  (cost=0.56..190064.30 rows=89080 width=20) (actual time=0.099..665.033 rows=77904 loops=5)
                                                                     ->  Parallel Seq Scan on part  (cost=0.00..47231.07 rows=3330 width=4) (actual time=0.054..97.169 rows=2602 loops=5)
                                                                           Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                           Rows Removed by Filter: 397398
                                                                     ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..42.62 rows=27 width=24) (actual time=0.019..0.210 rows=30 loops=13011)
                                                                           Index Cond: (l_partkey = part.p_partkey)
                                                               ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=16.357..16.358 rows=20000 loops=5)
                                                                     Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                                                     ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.022..7.239 rows=20000 loops=5)
                                                         ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=389521)
                                                               Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 1
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.026..0.028 rows=5 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.021..0.026 rows=5 loops=5)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=5)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=5)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.025..0.026 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.018 rows=25 loops=5)
 Planning Time: 4.110 ms
 Execution Time: 1805.924 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691554.96..691555.11 rows=1 width=66) (actual time=44841.941..44912.260 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=691554.96..691575.55 rows=132 width=66) (actual time=44841.940..44912.259 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=691554.96..691571.92 rows=132 width=66) (actual time=44832.709..44912.248 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=690554.90..690556.14 rows=33 width=66) (actual time=44789.520..44832.996 rows=14 loops=5)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=690554.90..690554.98 rows=33 width=57) (actual time=44786.333..44796.791 rows=50957 loops=5)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: external merge  Disk: 48008kB
                           Worker 0:  Sort Method: external merge  Disk: 48208kB
                           Worker 1:  Sort Method: external merge  Disk: 47704kB
                           Worker 2:  Sort Method: external merge  Disk: 48248kB
                           Worker 3:  Sort Method: external merge  Disk: 47712kB
                           ->  Hash Join  (cost=3547.53..690554.07 rows=33 width=57) (actual time=20.251..43865.101 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=3545.97..690552.24 rows=33 width=31) (actual time=19.558..43293.169 rows=649638 loops=5)
                                       ->  Nested Loop  (cost=3545.53..690439.30 rows=33 width=31) (actual time=18.776..31436.790 rows=649638 loops=5)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Parallel Hash Join  (cost=3544.97..189905.88 rows=140216 width=26) (actual time=18.193..1471.283 rows=86650 loops=5)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.43..185990.02 rows=141454 width=18) (actual time=0.967..1368.588 rows=86650 loops=5)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..47231.07 rows=35354 width=4) (actual time=0.547..202.988 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14) (actual time=0.048..0.052 rows=4 loops=108312)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=16.917..16.918 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.074..11.096 rows=20000 loops=5)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.056..0.342 rows=7 loops=433248)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=3248192)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.078..0.078 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.066..0.069 rows=25 loops=5)
 Planning Time: 29.288 ms
 Execution Time: 44920.574 ms
(40 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691554.96..691555.11 rows=1 width=66) (actual time=20421.723..20488.294 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=691554.96..691575.55 rows=132 width=66) (actual time=20421.721..20488.291 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=691554.96..691571.92 rows=132 width=66) (actual time=20414.225..20488.282 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=690554.90..690556.14 rows=33 width=66) (actual time=20366.443..20415.081 rows=14 loops=5)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=690554.90..690554.98 rows=33 width=57) (actual time=20364.336..20377.401 rows=52854 loops=5)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: external merge  Disk: 48056kB
                           Worker 0:  Sort Method: external merge  Disk: 48400kB
                           Worker 1:  Sort Method: external merge  Disk: 48184kB
                           Worker 2:  Sort Method: external merge  Disk: 47472kB
                           Worker 3:  Sort Method: external merge  Disk: 47768kB
                           ->  Hash Join  (cost=3547.53..690554.07 rows=33 width=57) (actual time=21.920..19468.164 rows=649638 loops=5)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=3545.97..690552.24 rows=33 width=31) (actual time=21.807..18968.492 rows=649638 loops=5)
                                       ->  Nested Loop  (cost=3545.53..690439.30 rows=33 width=31) (actual time=21.766..12692.240 rows=649638 loops=5)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Parallel Hash Join  (cost=3544.97..189905.88 rows=140216 width=26) (actual time=21.717..1309.651 rows=86650 loops=5)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.43..185990.02 rows=141454 width=18) (actual time=0.617..1202.665 rows=86650 loops=5)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..47231.07 rows=35354 width=4) (actual time=0.239..189.155 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.73 rows=19 width=14) (actual time=0.042..0.045 rows=4 loops=108312)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=20.798..20.798 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.373..13.283 rows=20000 loops=5)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.027..0.129 rows=7 loops=433248)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.009..0.009 rows=1 loops=3248192)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.077..0.077 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.065..0.068 rows=25 loops=5)
 Planning Time: 17.053 ms
 Execution Time: 20494.739 ms
(40 rows)

query 10 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=926886.80..926886.85 rows=20 width=202) (actual time=25943.721..26002.394 rows=20 loops=1)
   ->  Sort  (cost=926886.80..928273.49 rows=554675 width=202) (actual time=25943.720..26002.390 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=829766.24..912127.10 rows=554675 width=202) (actual time=25158.365..25871.280 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=829766.24..899646.90 rows=554676 width=202) (actual time=25158.345..25499.858 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=828766.18..832579.58 rows=138669 width=202) (actual time=25145.361..25349.805 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=828766.18..829112.86 rows=138669 width=182) (actual time=25145.336..25179.057 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 43608kB
                                 Worker 0:  Sort Method: external merge  Disk: 43824kB
                                 Worker 1:  Sort Method: external merge  Disk: 43312kB
                                 Worker 2:  Sort Method: external merge  Disk: 43744kB
                                 Worker 3:  Sort Method: external merge  Disk: 44048kB
                                 ->  Nested Loop  (cost=273009.86..816922.96 rows=138669 width=182) (actual time=4209.524..24953.162 rows=229080 loops=5)
                                       ->  Hash Join  (cost=273009.30..316288.39 rows=138136 width=174) (actual time=4208.113..4552.357 rows=114632 loops=5)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Parallel Hash Join  (cost=273007.74..315862.75 rows=138136 width=152) (actual time=4208.042..4498.223 rows=114632 loops=5)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=148) (actual time=0.826..97.824 rows=300000 loops=5)
                                                   ->  Parallel Hash  (cost=271281.04..271281.04 rows=138136 width=8) (actual time=4206.153..4206.154 rows=114632 loops=5)
                                                         Buckets: 1048576  Batches: 1  Memory Usage: 30688kB
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=7941.00..271281.04 rows=138136 width=8) (actual time=157.643..4150.090 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=46128
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7802.87 rows=552543 width=0) (actual time=108.910..108.910 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.055..0.055 rows=25 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.047..0.050 rows=25 loops=5)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.168..0.177 rows=2 loops=573160)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
 Planning Time: 21.821 ms
 Execution Time: 26008.915 ms
(40 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=926886.80..926886.85 rows=20 width=202) (actual time=3845.933..3903.522 rows=20 loops=1)
   ->  Sort  (cost=926886.80..928273.49 rows=554675 width=202) (actual time=3845.932..3903.518 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  Finalize GroupAggregate  (cost=829766.24..912127.10 rows=554675 width=202) (actual time=3076.340..3771.944 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=829766.24..899646.90 rows=554676 width=202) (actual time=3076.328..3401.205 rows=381205 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=828766.18..832579.58 rows=138669 width=202) (actual time=3059.332..3261.606 rows=76241 loops=5)
                           Group Key: customer.c_custkey, nation.n_name
                           ->  Sort  (cost=828766.18..829112.86 rows=138669 width=182) (actual time=3059.310..3089.192 rows=229080 loops=5)
                                 Sort Key: customer.c_custkey, nation.n_name
                                 Sort Method: external merge  Disk: 41568kB
                                 Worker 0:  Sort Method: external merge  Disk: 47512kB
                                 Worker 1:  Sort Method: external merge  Disk: 46400kB
                                 Worker 2:  Sort Method: external merge  Disk: 41776kB
                                 Worker 3:  Sort Method: external merge  Disk: 41272kB
                                 ->  Nested Loop  (cost=273009.86..816922.96 rows=138669 width=182) (actual time=730.806..2883.956 rows=229080 loops=5)
                                       ->  Hash Join  (cost=273009.30..316288.39 rows=138136 width=174) (actual time=730.720..1033.034 rows=114632 loops=5)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Parallel Hash Join  (cost=273007.74..315862.75 rows=138136 width=152) (actual time=730.675..992.241 rows=114632 loops=5)
                                                   Hash Cond: (customer.c_custkey = orders.o_custkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=148) (actual time=0.031..76.854 rows=300000 loops=5)
                                                   ->  Parallel Hash  (cost=271281.04..271281.04 rows=138136 width=8) (actual time=728.402..728.403 rows=114632 loops=5)
                                                         Buckets: 1048576  Batches: 1  Memory Usage: 30688kB
                                                         ->  Parallel Bitmap Heap Scan on orders  (cost=7941.00..271281.04 rows=138136 width=8) (actual time=154.660..684.827 rows=114632 loops=5)
                                                               Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                               Heap Blocks: exact=50232
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7802.87 rows=552543 width=0) (actual time=101.377..101.377 rows=573160 loops=1)
                                                                     Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.020 rows=25 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=5)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=16) (actual time=0.014..0.015 rows=2 loops=573160)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
 Planning Time: 1.902 ms
 Execution Time: 3909.207 ms
(40 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=470565.83..470565.83 rows=1 width=36) (actual time=2140.775..2140.914 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207441.78..207441.80 rows=1 width=32) (actual time=450.449..450.531 rows=1 loops=1)
           ->  Gather  (cost=207441.35..207441.76 rows=4 width=32) (actual time=450.307..450.520 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206441.35..206441.36 rows=1 width=32) (actual time=447.666..447.669 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.58..205846.43 rows=79322 width=10) (actual time=4.447..423.196 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195227.55 rows=2000555 width=14) (actual time=0.026..207.682 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=4.351..4.353 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.861..3.884 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.016 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.841..3.467 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.647..0.647 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263124.03..263388.44 rows=105762 width=36) (actual time=2140.774..2140.832 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213301.49..262595.22 rows=105762 width=36) (actual time=2140.765..2140.823 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213301.49..253076.60 rows=317288 width=36) (actual time=1382.173..1487.692 rows=302500 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212301.43..214284.48 rows=79322 width=36) (actual time=1373.313..1432.545 rows=60500 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212301.43..212499.74 rows=79322 width=14) (actual time=1373.289..1376.721 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 4451kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4322kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6433kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4501kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4549kB
                                 ->  Hash Join  (cost=2323.58..205846.43 rows=79322 width=14) (actual time=36.510..1360.501 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195227.55 rows=2000555 width=18) (actual time=0.135..1120.386 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=36.077..36.078 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=1.188..34.903 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.165..0.168 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8) (actual time=1.018..34.058 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.782..0.782 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 13.832 ms
 Execution Time: 2141.972 ms
(56 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=470565.83..470565.83 rows=1 width=36) (actual time=1208.726..1208.863 rows=0 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=207441.78..207441.80 rows=1 width=32) (actual time=454.544..454.625 rows=1 loops=1)
           ->  Gather  (cost=207441.35..207441.76 rows=4 width=32) (actual time=454.414..454.614 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=206441.35..206441.36 rows=1 width=32) (actual time=451.354..451.357 rows=1 loops=4)
                       ->  Hash Join  (cost=2323.58..205846.43 rows=79322 width=10) (actual time=4.395..426.891 rows=80200 loops=4)
                             Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                             ->  Parallel Seq Scan on partsupp partsupp_1  (cost=0.00..195227.55 rows=2000555 width=14) (actual time=0.028..210.163 rows=2000000 loops=4)
                             ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=4.295..4.296 rows=4010 loops=4)
                                   Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                   ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.822..3.827 rows=4010 loops=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=4)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                                         ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.804..3.410 rows=4010 loops=4)
                                               Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                               Heap Blocks: exact=1869
                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.614..0.614 rows=4010 loops=4)
                                                     Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=263124.03..263388.44 rows=105762 width=36) (actual time=1208.707..1208.764 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=213301.49..262595.22 rows=105762 width=36) (actual time=1208.691..1208.747 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=213301.49..253076.60 rows=317288 width=36) (actual time=454.474..548.448 rows=302504 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=212301.43..214284.48 rows=79322 width=36) (actual time=449.851..508.964 rows=60501 loops=5)
                           Group Key: partsupp.ps_partkey
                           ->  Sort  (cost=212301.43..212499.74 rows=79322 width=14) (actual time=449.835..453.305 rows=64160 loops=5)
                                 Sort Key: partsupp.ps_partkey
                                 Sort Method: quicksort  Memory: 3854kB
                                 Worker 0:  Sort Method: quicksort  Memory: 6706kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3640kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6641kB
                                 Worker 3:  Sort Method: quicksort  Memory: 6487kB
                                 ->  Hash Join  (cost=2323.58..205846.43 rows=79322 width=14) (actual time=5.325..436.561 rows=64160 loops=5)
                                       Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on partsupp  (cost=0.00..195227.55 rows=2000555 width=18) (actual time=0.932..210.930 rows=1600000 loops=5)
                                       ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=4.166..4.167 rows=4010 loops=5)
                                             Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                             ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.547..3.683 rows=4010 loops=5)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.020 rows=1 loops=5)
                                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.526..3.010 rows=4010 loops=5)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=1869
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.332..0.332 rows=4010 loops=5)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.341 ms
 Execution Time: 1208.954 ms
(56 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1713990.15..1714195.19 rows=1 width=27) (actual time=11504.476..11528.877 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1713990.15..1715425.45 rows=7 width=27) (actual time=11504.474..11528.874 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1713990.15..1715425.17 rows=28 width=27) (actual time=11486.479..11528.862 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1712990.09..1714421.78 rows=7 width=27) (actual time=11469.350..11482.864 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1712990.09..1713169.04 rows=71581 width=27) (actual time=11457.834..11461.421 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6468kB
                           Worker 0:  Sort Method: quicksort  Memory: 6381kB
                           Worker 1:  Sort Method: quicksort  Memory: 6322kB
                           Worker 2:  Sort Method: quicksort  Memory: 6393kB
                           Worker 3:  Sort Method: quicksort  Memory: 6436kB
                           ->  Nested Loop  (cost=0.43..1707218.05 rows=71581 width=27) (actual time=0.794..11410.834 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462543.91 rows=71581 width=15) (actual time=0.300..7771.732 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.057..0.057 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 15.259 ms
 Execution Time: 11530.103 ms
(23 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1713990.15..1714195.19 rows=1 width=27) (actual time=3921.885..3937.561 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1713990.15..1715425.45 rows=7 width=27) (actual time=3921.883..3937.559 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=1713990.15..1715425.17 rows=28 width=27) (actual time=3907.598..3937.542 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=1712990.09..1714421.78 rows=7 width=27) (actual time=3891.074..3902.204 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=1712990.09..1713169.04 rows=71581 width=27) (actual time=3877.068..3880.518 rows=62252 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 6388kB
                           Worker 0:  Sort Method: quicksort  Memory: 8206kB
                           Worker 1:  Sort Method: quicksort  Memory: 6336kB
                           Worker 2:  Sort Method: quicksort  Memory: 6274kB
                           Worker 3:  Sort Method: quicksort  Memory: 6332kB
                           ->  Nested Loop  (cost=0.43..1707218.05 rows=71581 width=27) (actual time=0.132..3848.911 rows=62252 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1462543.91 rows=71581 width=15) (actual time=0.114..3535.651 rows=62252 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 11934959
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=311258)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.772 ms
 Execution Time: 3937.635 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1685608.48..1685608.49 rows=1 width=16) (actual time=6377.540..6476.402 rows=1 loops=1)
   ->  Sort  (cost=1685608.48..1685608.98 rows=200 width=16) (actual time=6377.539..6476.400 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1685605.48..1685607.48 rows=200 width=16) (actual time=6377.518..6476.385 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860301.04..1663104.88 rows=1500040 width=12) (actual time=4876.841..6274.109 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860301.04..1618103.68 rows=6000160 width=12) (actual time=4876.835..5930.134 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=859300.98..902426.73 rows=1500040 width=12) (actual time=4848.516..5527.352 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859300.98..868676.10 rows=3750046 width=8) (actual time=4848.504..5135.462 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 54792kB
                                       Worker 0:  Sort Method: external merge  Disk: 53664kB
                                       Worker 1:  Sort Method: external merge  Disk: 55024kB
                                       Worker 2:  Sort Method: external merge  Disk: 49936kB
                                       Worker 3:  Sort Method: external merge  Disk: 54864kB
                                       ->  Parallel Hash Left Join  (cost=369673.27..416864.27 rows=3750046 width=8) (actual time=2803.667..3932.858 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17424.73 rows=375010 width=4) (actual time=0.288..69.639 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308148.27..308148.27 rows=3750046 width=8) (actual time=2597.296..2597.296 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308148.27 rows=3750046 width=8) (actual time=0.325..2034.737 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 14.805 ms
 Execution Time: 6485.333 ms
(31 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1685608.48..1685608.49 rows=1 width=16) (actual time=5594.451..5695.720 rows=1 loops=1)
   ->  Sort  (cost=1685608.48..1685608.98 rows=200 width=16) (actual time=5594.450..5695.718 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1685605.48..1685607.48 rows=200 width=16) (actual time=5594.428..5695.702 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  Finalize GroupAggregate  (cost=860301.04..1663104.88 rows=1500040 width=12) (actual time=4113.784..5493.036 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Gather Merge  (cost=860301.04..1618103.68 rows=6000160 width=12) (actual time=4113.780..5141.416 rows=1500000 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=859300.98..902426.73 rows=1500040 width=12) (actual time=4096.448..4783.377 rows=300000 loops=5)
                                 Group Key: customer.c_custkey
                                 ->  Sort  (cost=859300.98..868676.10 rows=3750046 width=8) (actual time=4096.436..4388.810 rows=3067521 loops=5)
                                       Sort Key: customer.c_custkey
                                       Sort Method: external merge  Disk: 52968kB
                                       Worker 0:  Sort Method: external merge  Disk: 53856kB
                                       Worker 1:  Sort Method: external merge  Disk: 47264kB
                                       Worker 2:  Sort Method: external merge  Disk: 52984kB
                                       Worker 3:  Sort Method: external merge  Disk: 61200kB
                                       ->  Parallel Hash Left Join  (cost=369673.27..416864.27 rows=3750046 width=8) (actual time=2033.806..3232.088 rows=3067521 loops=5)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Parallel Index Only Scan using customer_pkey on customer  (cost=0.43..17424.73 rows=375010 width=4) (actual time=0.088..41.176 rows=300000 loops=5)
                                                   Heap Fetches: 0
                                             ->  Parallel Hash  (cost=308148.27..308148.27 rows=3750046 width=8) (actual time=1850.194..1850.195 rows=2967517 loops=5)
                                                   Buckets: 1048576  Batches: 32  Memory Usage: 26528kB
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308148.27 rows=3750046 width=8) (actual time=0.041..1250.284 rows=2967517 loops=5)
                                                         Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                                         Rows Removed by Filter: 32483
 Planning Time: 0.740 ms
 Execution Time: 5703.485 ms
(31 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=812806.50..812806.52 rows=1 width=32) (actual time=5318.046..5361.513 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=812806.50..812806.52 rows=1 width=32) (actual time=5318.044..5361.510 rows=1 loops=1)
         ->  Gather  (cost=812806.05..812806.46 rows=4 width=64) (actual time=5308.284..5361.483 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=811806.05..811806.06 rows=1 width=64) (actual time=5301.469..5301.474 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=63737.31..809005.82 rows=160013 width=33) (actual time=706.314..5149.447 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=11506.18..756303.77 rows=179393 width=16) (actual time=296.960..4576.268 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=82785
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11326.79 rows=717572 width=0) (actual time=191.668..191.668 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.06..45981.06 rows=500006 width=25) (actual time=407.233..407.233 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137312kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.06 rows=500006 width=25) (actual time=0.601..271.432 rows=400000 loops=5)
 Planning Time: 14.044 ms
 Execution Time: 5362.644 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=812806.50..812806.52 rows=1 width=32) (actual time=1695.741..1736.508 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=812806.50..812806.52 rows=1 width=32) (actual time=1695.739..1736.506 rows=1 loops=1)
         ->  Gather  (cost=812806.05..812806.46 rows=4 width=64) (actual time=1690.279..1736.481 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=811806.05..811806.06 rows=1 width=64) (actual time=1685.300..1685.304 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=63737.31..809005.82 rows=160013 width=33) (actual time=558.786..1585.929 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=11506.18..756303.77 rows=179393 width=16) (actual time=276.217..1178.352 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=78178
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11326.79 rows=717572 width=0) (actual time=172.081..172.081 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.06..45981.06 rows=500006 width=25) (actual time=279.513..279.513 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137344kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.06 rows=500006 width=25) (actual time=0.041..124.469 rows=400000 loops=5)
 Planning Time: 0.963 ms
 Execution Time: 1736.559 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2745759.80..2745871.55 rows=1 width=103) (actual time=13216.082..13271.618 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1391698.86..1391698.87 rows=1 width=32) (actual time=2900.768..2909.789 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1389168.49..1390433.67 rows=101215 width=36) (actual time=2858.798..2903.655 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1344380.85..1386132.04 rows=404860 width=36) (actual time=2487.750..2585.788 rows=398576 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1343380.85..1344646.04 rows=101215 width=36) (actual time=2483.702..2536.368 rows=99644 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37764.78..1337492.75 rows=588810 width=16) (actual time=441.757..2038.814 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109684 lossy=73110
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37175.97 rows=2355240 width=0) (actual time=345.798..345.799 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1354060.93..1410608.83 rows=506 width=103) (actual time=13216.081..13262.594 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1354060.64..1409368.41 rows=506 width=36) (actual time=13215.534..13262.047 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1354060.64..1402536.40 rows=404860 width=36) (actual time=10075.960..10188.299 rows=346226 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1353060.58..1353313.61 rows=101215 width=36) (actual time=10045.765..10053.210 rows=69779 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10804kB
                           Worker 0:  Sort Method: quicksort  Memory: 10792kB
                           Worker 1:  Sort Method: quicksort  Memory: 10800kB
                           Worker 2:  Sort Method: quicksort  Memory: 10804kB
                           Worker 3:  Sort Method: quicksort  Memory: 10800kB
                           ->  Partial HashAggregate  (cost=1343380.85..1344646.04 rows=101215 width=36) (actual time=9952.248..10018.912 rows=98913 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37764.78..1337492.75 rows=588810 width=16) (actual time=489.787..9463.158 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80639 lossy=53653
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37175.97 rows=2355240 width=0) (actual time=396.515..396.516 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.44 rows=1 width=71) (actual time=0.539..0.540 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.240 ms
 Execution Time: 13273.871 ms
(43 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2745759.80..2745871.55 rows=1 width=103) (actual time=5937.807..5992.083 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1391698.86..1391698.87 rows=1 width=32) (actual time=2898.289..2907.350 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1389168.49..1390433.67 rows=101215 width=36) (actual time=2853.477..2901.271 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Gather  (cost=1344380.85..1386132.04 rows=404860 width=36) (actual time=2484.330..2581.984 rows=398508 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1343380.85..1344646.04 rows=101215 width=36) (actual time=2480.151..2531.329 rows=99627 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=37764.78..1337492.75 rows=588810 width=16) (actual time=440.971..2033.928 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=110535 lossy=73745
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37175.97 rows=2355240 width=0) (actual time=344.684..344.684 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1354060.93..1410608.83 rows=506 width=103) (actual time=5937.805..5983.020 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1354060.64..1409368.41 rows=506 width=36) (actual time=5937.760..5982.973 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1354060.64..1402536.40 rows=404860 width=36) (actual time=2804.162..2913.606 rows=345761 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1353060.58..1353313.61 rows=101215 width=36) (actual time=2776.252..2783.538 rows=69736 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10850kB
                           Worker 0:  Sort Method: quicksort  Memory: 10815kB
                           Worker 1:  Sort Method: quicksort  Memory: 10779kB
                           Worker 2:  Sort Method: quicksort  Memory: 10740kB
                           Worker 3:  Sort Method: quicksort  Memory: 10772kB
                           ->  Partial HashAggregate  (cost=1343380.85..1344646.04 rows=101215 width=36) (actual time=2682.049..2748.020 rows=98798 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=37764.78..1337492.75 rows=588810 width=16) (actual time=455.365..2280.963 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=96152 lossy=64229
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..37175.97 rows=2355240 width=0) (actual time=361.460..361.460 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.44 rows=1 width=71) (actual time=0.041..0.041 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.954 ms
 Execution Time: 5994.193 ms
(43 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=293514.64..293514.64 rows=1 width=44) (actual time=4582.180..4585.318 rows=1 loops=1)
   ->  Sort  (cost=293514.64..293896.18 rows=152617 width=44) (actual time=4582.179..4585.316 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=283930.17..292751.56 rows=152617 width=44) (actual time=3947.800..4580.066 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=283930.17..285389.22 rows=583617 width=40) (actual time=3947.749..4293.583 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58864.27..217775.24 rows=583617 width=40) (actual time=341.275..1092.768 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57864.27..158413.54 rows=145904 width=40) (actual time=334.176..1079.043 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101394.99 rows=1000278 width=8) (actual time=40.631..586.895 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.520..39.817 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.15..53481.15 rows=72933 width=40) (actual time=292.864..292.864 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26400kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.15 rows=72933 width=40) (actual time=0.109..266.846 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 13.344 ms
 Execution Time: 4594.662 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=293514.64..293514.64 rows=1 width=44) (actual time=4364.826..4367.805 rows=1 loops=1)
   ->  Sort  (cost=293514.64..293896.18 rows=152617 width=44) (actual time=4364.825..4367.803 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=283930.17..292751.56 rows=152617 width=44) (actual time=3733.244..4362.489 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=283930.17..285389.22 rows=583617 width=40) (actual time=3733.194..4077.840 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Gather  (cost=58864.27..217775.24 rows=583617 width=40) (actual time=202.170..847.078 rows=1186319 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Parallel Hash Join  (cost=57864.27..158413.54 rows=145904 width=40) (actual time=188.511..808.749 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..101394.99 rows=1000278 width=8) (actual time=26.494..449.204 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.083..26.413 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.15..53481.15 rows=72933 width=40) (actual time=161.137..161.137 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.15 rows=72933 width=40) (actual time=0.013..133.114 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 0.752 ms
 Execution Time: 4375.510 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4662687.58..4662687.59 rows=1 width=32) (actual time=22591.748..22625.158 rows=1 loops=1)
   ->  Aggregate  (cost=4662687.58..4662687.59 rows=1 width=32) (actual time=22591.747..22625.157 rows=1 loops=1)
         ->  Merge Join  (cost=3229175.07..4662637.29 rows=20114 width=8) (actual time=10388.347..22624.207 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3228174.02..4537869.00 rows=2242258 width=36) (actual time=10378.991..22396.721 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3228174.02..4436967.39 rows=8969032 width=36) (actual time=10378.971..16929.343 rows=9972158 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3227173.96..3367669.16 rows=2242258 width=36) (actual time=10321.263..14920.771 rows=1994955 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3227173.96..3264662.95 rows=14995596 width=9) (actual time=10321.247..12108.278 rows=11996335 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 223752kB
                                       Worker 0:  Sort Method: external merge  Disk: 222992kB
                                       Worker 1:  Sort Method: external merge  Disk: 227344kB
                                       Worker 2:  Sort Method: external merge  Disk: 216728kB
                                       Worker 3:  Sort Method: external merge  Disk: 225024kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275098.96 rows=14995596 width=9) (actual time=0.102..5716.941 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..95818.64 rows=53823 width=21) (actual time=5.185..54.899 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..95684.08 rows=53823 width=21) (actual time=5.180..47.764 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..88273.18 rows=13456 width=21) (actual time=1.506..684.742 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.64 rows=503 width=4) (actual time=0.944..205.585 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..42.59 rows=27 width=17) (actual time=0.664..0.950 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 13.036 ms
 Execution Time: 22655.987 ms
(33 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4662687.58..4662687.59 rows=1 width=32) (actual time=19509.115..19550.795 rows=1 loops=1)
   ->  Aggregate  (cost=4662687.58..4662687.59 rows=1 width=32) (actual time=19509.114..19550.794 rows=1 loops=1)
         ->  Merge Join  (cost=3229175.07..4662637.29 rows=20114 width=8) (actual time=7501.537..19549.964 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  Finalize GroupAggregate  (cost=3228174.02..4537869.00 rows=2242258 width=36) (actual time=7493.978..19349.055 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=3228174.02..4436967.39 rows=8969032 width=36) (actual time=7493.949..13883.671 rows=9972318 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=3227173.96..3367669.16 rows=2242258 width=36) (actual time=7463.353..11987.230 rows=1994987 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=3227173.96..3264662.95 rows=14995596 width=9) (actual time=7463.329..9232.812 rows=11996360 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 223752kB
                                       Worker 0:  Sort Method: external merge  Disk: 215480kB
                                       Worker 1:  Sort Method: external merge  Disk: 223752kB
                                       Worker 2:  Sort Method: external merge  Disk: 223752kB
                                       Worker 3:  Sort Method: external merge  Disk: 229128kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..1275098.96 rows=14995596 width=9) (actual time=0.038..2180.507 rows=11997210 loops=5)
               ->  Materialize  (cost=1001.05..95818.64 rows=53823 width=21) (actual time=3.787..28.906 rows=59951 loops=1)
                     ->  Gather Merge  (cost=1001.05..95684.08 rows=53823 width=21) (actual time=3.782..21.896 rows=59951 loops=1)
                           Workers Planned: 4
                           Workers Launched: 3
                           ->  Nested Loop  (cost=0.99..88273.18 rows=13456 width=21) (actual time=0.227..138.888 rows=14988 loops=4)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.43..66712.64 rows=503 width=4) (actual time=0.204..117.129 rows=499 loops=4)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 499501
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..42.59 rows=27 width=17) (actual time=0.006..0.037 rows=30 loops=1996)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.756 ms
 Execution Time: 19580.712 ms
(33 rows)

query 18 run 1
SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9254272.59..9254272.84 rows=100 width=71) (actual time=37755.767..38105.379 rows=99 loops=1)
   ->  Sort  (cost=9254272.59..9304237.62 rows=19986011 width=71) (actual time=37755.766..38105.371 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5547788.35..8490421.62 rows=19986011 width=71) (actual time=37755.526..38105.280 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547788.35..8040736.37 rows=19986012 width=71) (actual time=37755.519..38105.194 rows=99 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5546788.29..5659209.61 rows=4996503 width=71) (actual time=37745.129..37745.175 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546788.29..5559279.55 rows=4996503 width=44) (actual time=37745.118..37745.128 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 37kB
                                 Worker 0:  Sort Method: quicksort  Memory: 33kB
                                 Worker 1:  Sort Method: quicksort  Memory: 37kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32kB
                                 Worker 3:  Sort Method: quicksort  Memory: 39kB
                                 ->  Parallel Hash Join  (cost=3390806.74..4892056.44 rows=4996503 width=44) (actual time=36557.189..37745.030 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275098.96 rows=14995596 width=9) (actual time=0.017..2144.508 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3364202.32..3364202.32 rows=1249633 width=43) (actual time=32224.449..32224.452 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=44385.72..3364202.32 rows=1249633 width=43) (actual time=3236.538..32205.548 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316537.30 rows=1249633 width=24) (actual time=2904.266..31872.504 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435478.08 rows=3750422 width=20) (actual time=0.472..1585.212 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796705.19 rows=4998532 width=4) (actual time=722.199..30078.625 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271859.32 rows=59982384 width=9) (actual time=0.439..13599.583 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39697.10..39697.10 rows=375010 width=23) (actual time=330.220..330.221 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98688kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=23) (actual time=0.806..224.147 rows=300000 loops=5)
 Planning Time: 19.779 ms
 Execution Time: 38105.723 ms
(38 rows)

SET
SET
SET
                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9254272.59..9254272.84 rows=100 width=71) (actual time=36516.467..36847.762 rows=99 loops=1)
   ->  Sort  (cost=9254272.59..9304237.62 rows=19986011 width=71) (actual time=36516.465..36847.754 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  Finalize GroupAggregate  (cost=5547788.35..8490421.62 rows=19986011 width=71) (actual time=36516.220..36847.661 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Gather Merge  (cost=5547788.35..8040736.37 rows=19986012 width=71) (actual time=36516.208..36847.568 rows=101 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=5546788.29..5659209.61 rows=4996503 width=71) (actual time=36498.164..36498.214 rows=20 loops=5)
                           Group Key: customer.c_custkey, orders.o_orderkey
                           ->  Sort  (cost=5546788.29..5559279.55 rows=4996503 width=44) (actual time=36498.154..36498.165 rows=139 loops=5)
                                 Sort Key: customer.c_custkey, orders.o_orderkey
                                 Sort Method: quicksort  Memory: 36kB
                                 Worker 0:  Sort Method: quicksort  Memory: 35kB
                                 Worker 1:  Sort Method: quicksort  Memory: 35kB
                                 Worker 2:  Sort Method: quicksort  Memory: 31kB
                                 Worker 3:  Sort Method: quicksort  Memory: 40kB
                                 ->  Parallel Hash Join  (cost=3390806.74..4892056.44 rows=4996503 width=44) (actual time=35325.355..36498.058 rows=139 loops=5)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1275098.96 rows=14995596 width=9) (actual time=0.017..2211.618 rows=11997210 loops=5)
                                       ->  Parallel Hash  (cost=3364202.32..3364202.32 rows=1249633 width=43) (actual time=30896.619..30896.622 rows=20 loops=5)
                                             Buckets: 524288  Batches: 16  Memory Usage: 4224kB
                                             ->  Parallel Hash Join  (cost=44385.72..3364202.32 rows=1249633 width=43) (actual time=1898.074..30871.458 rows=20 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Merge Join  (cost=1.00..3316537.30 rows=1249633 width=24) (actual time=1520.443..30493.047 rows=20 loops=5)
                                                         Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                         ->  Parallel Index Scan using orders_pkey on orders  (cost=0.43..435478.08 rows=3750422 width=20) (actual time=0.464..864.258 rows=2996546 loops=5)
                                                         ->  GroupAggregate  (cost=0.56..2796705.19 rows=4998532 width=4) (actual time=673.861..29414.736 rows=99 loops=5)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                               Rows Removed by Filter: 14999901
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271859.32 rows=59982384 width=9) (actual time=0.251..12139.761 rows=59986052 loops=5)
                                                   ->  Parallel Hash  (cost=39697.10..39697.10 rows=375010 width=23) (actual time=374.799..374.799 rows=300000 loops=5)
                                                         Buckets: 2097152  Batches: 1  Memory Usage: 98656kB
                                                         ->  Parallel Seq Scan on customer  (cost=0.00..39697.10 rows=375010 width=23) (actual time=0.599..210.695 rows=300000 loops=5)
 Planning Time: 12.848 ms
 Execution Time: 36847.871 ms
(38 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

 Limit  (cost=116191.77..116191.78 rows=1 width=32) (actual time=5120.113..5133.974 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116191.77..116191.78 rows=1 width=32) (actual time=5120.111..5133.972 rows=1 loops=1)
         ->  Gather  (cost=116191.33..116191.74 rows=4 width=32) (actual time=5111.618..5133.949 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115191.33..115191.34 rows=1 width=32) (actual time=5106.366..5106.367 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..115189.49 rows=246 width=12) (actual time=44.703..5105.796 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.26 rows=1195 width=30) (actual time=0.454..186.734 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..44.31 rows=1 width=21) (actual time=4.641..5.142 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 17.413 ms
 Execution Time: 5135.272 ms
(16 rows)

SET
SET
SET


 Limit  (cost=116191.77..116191.78 rows=1 width=32) (actual time=221.970..243.919 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=116191.77..116191.78 rows=1 width=32) (actual time=221.968..243.916 rows=1 loops=1)
         ->  Gather  (cost=116191.33..116191.74 rows=4 width=32) (actual time=218.441..243.898 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=115191.33..115191.34 rows=1 width=32) (actual time=212.556..212.557 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..115189.49 rows=246 width=12) (actual time=2.005..212.357 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.26 rows=1195 width=30) (actual time=0.069..127.135 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..44.31 rows=1 width=21) (actual time=0.078..0.088 rows=0 loops=4781)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.329 ms
 Execution Time: 243.978 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3111239.46..3111239.47 rows=1 width=51) (actual time=34687.313..34687.485 rows=1 loops=1)
   ->  Sort  (cost=3111239.46..3111239.47 rows=1 width=51) (actual time=34687.312..34687.484 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1620032.62..3111239.45 rows=1 width=51) (actual time=10331.229..34685.548 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.555..34.289 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.212..0.215 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.337..26.547 rows=100000 loops=1)
               ->  Materialize  (cost=1620032.62..3106587.15 rows=3 width=8) (actual time=2.085..5.981 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1620032.62..3106587.13 rows=3 width=8) (actual time=8538.526..18058.070 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1619031.70..2929998.76 rows=4860944 width=40) (actual time=8533.276..17607.359 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1619031.70..2765196.36 rows=9188824 width=40) (actual time=8533.266..11907.756 rows=8160564 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1618031.64..1669718.78 rows=2297206 width=40) (actual time=8440.830..9896.510 rows=1632198 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1618031.64..1623774.66 rows=2297206 width=13) (actual time=8440.813..8687.874 rows=1824713 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 41992kB
                                                   Worker 0:  Sort Method: external merge  Disk: 41560kB
                                                   Worker 1:  Sort Method: external merge  Disk: 40896kB
                                                   Worker 2:  Sort Method: external merge  Disk: 41112kB
                                                   Worker 3:  Sort Method: external merge  Disk: 39832kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350076.94 rows=2297206 width=13) (actual time=0.101..7636.056 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95410.48 rows=80829 width=16) (actual time=4.522..61.662 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95208.40 rows=80829 width=16) (actual time=4.516..41.533 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84580.83 rows=20207 width=16) (actual time=0.803..1299.469 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.62 rows=5050 width=4) (actual time=0.533..198.241 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.187..0.201 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 19.567 ms
 Execution Time: 34692.665 ms
(48 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3111239.46..3111239.47 rows=1 width=51) (actual time=29497.326..29497.473 rows=1 loops=1)
   ->  Sort  (cost=3111239.46..3111239.47 rows=1 width=51) (actual time=29497.325..29497.472 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=1620032.62..3111239.45 rows=1 width=51) (actual time=5159.226..29495.756 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.015..17.840 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.006..6.546 rows=100000 loops=1)
               ->  Materialize  (cost=1620032.62..3106587.15 rows=3 width=8) (actual time=0.818..4.743 rows=44445 loops=4095)
                     ->  Merge Join  (cost=1620032.62..3106587.13 rows=3 width=8) (actual time=3350.674..12989.747 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  Finalize GroupAggregate  (cost=1619031.70..2929998.76 rows=4860944 width=40) (actual time=3341.113..12551.054 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Gather Merge  (cost=1619031.70..2765196.36 rows=9188824 width=40) (actual time=3341.103..6744.568 rows=8159883 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Partial GroupAggregate  (cost=1618031.64..1669718.78 rows=2297206 width=40) (actual time=3315.522..4756.589 rows=1632062 loops=5)
                                             Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                             ->  Sort  (cost=1618031.64..1623774.66 rows=2297206 width=13) (actual time=3315.502..3557.807 rows=1824713 loops=5)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   Sort Method: external merge  Disk: 42952kB
                                                   Worker 0:  Sort Method: external merge  Disk: 40864kB
                                                   Worker 1:  Sort Method: external merge  Disk: 40528kB
                                                   Worker 2:  Sort Method: external merge  Disk: 40528kB
                                                   Worker 3:  Sort Method: external merge  Disk: 40528kB
                                                   ->  Parallel Seq Scan on lineitem  (cost=0.00..1350076.94 rows=2297206 width=13) (actual time=0.446..2351.654 rows=1824738 loops=5)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         Rows Removed by Filter: 10172473
                           ->  Materialize  (cost=1000.92..95410.48 rows=80829 width=16) (actual time=8.922..45.913 rows=237286 loops=1)
                                 ->  Gather Merge  (cost=1000.92..95208.40 rows=80829 width=16) (actual time=8.918..25.978 rows=86872 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 3
                                       ->  Nested Loop  (cost=0.86..84580.83 rows=20207 width=16) (actual time=0.066..119.892 rows=21718 loops=4)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.43..65462.62 rows=5050 width=4) (actual time=0.042..95.666 rows=5430 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 494570
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.60 rows=19 width=12) (actual time=0.003..0.004 rows=4 loops=21718)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.437 ms
 Execution Time: 29503.601 ms
(48 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1962081.15..1962081.15 rows=1 width=34) (actual time=13346.733..13389.114 rows=100 loops=1)
   ->  Sort  (cost=1962081.15..1962081.15 rows=1 width=34) (actual time=13346.732..13389.105 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1962080.61..1962081.14 rows=1 width=34) (actual time=13325.960..13387.734 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1962080.61..1962081.11 rows=4 width=34) (actual time=13325.949..13384.973 rows=17056 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1961080.56..1961080.58 rows=1 width=34) (actual time=13304.359..13306.723 rows=3411 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1961080.56..1961080.56 rows=1 width=26) (actual time=13304.353..13305.119 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 785kB
                                 Worker 0:  Sort Method: quicksort  Memory: 804kB
                                 Worker 1:  Sort Method: quicksort  Memory: 804kB
                                 Worker 2:  Sort Method: quicksort  Memory: 828kB
                                 Worker 3:  Sort Method: quicksort  Memory: 811kB
                                 ->  Nested Loop Semi Join  (cost=1337985.44..1961080.55 rows=1 width=26) (actual time=8816.299..13258.369 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1337984.88..1961076.90 rows=1 width=38) (actual time=8816.055..13216.726 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1337984.31..1653198.52 rows=95880 width=38) (actual time=8815.452..10492.717 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308148.27 rows=1820330 width=4) (actual time=0.399..1163.026 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335515.05..1335515.05 rows=197541 width=34) (actual time=8813.895..8814.233 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131392kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335515.05 rows=197541 width=34) (actual time=18.720..8634.873 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312587.95 rows=4998532 width=8) (actual time=0.750..7784.064 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=17.647..17.649 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 384kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.232..17.306 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.168..15.230 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.052..0.053 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.047..0.048 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.018..0.018 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 22.216 ms
 Execution Time: 13390.508 ms
(52 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1962081.15..1962081.15 rows=1 width=34) (actual time=6588.986..6627.350 rows=100 loops=1)
   ->  Sort  (cost=1962081.15..1962081.15 rows=1 width=34) (actual time=6588.984..6627.341 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  Finalize GroupAggregate  (cost=1962080.61..1962081.14 rows=1 width=34) (actual time=6572.809..6625.949 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Gather Merge  (cost=1962080.61..1962081.11 rows=4 width=34) (actual time=6572.119..6623.194 rows=17084 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=1961080.56..1961080.58 rows=1 width=34) (actual time=6545.908..6548.236 rows=3417 loops=5)
                           Group Key: supplier.s_name
                           ->  Sort  (cost=1961080.56..1961080.56 rows=1 width=26) (actual time=6545.902..6546.661 rows=7856 loops=5)
                                 Sort Key: supplier.s_name
                                 Sort Method: quicksort  Memory: 781kB
                                 Worker 0:  Sort Method: quicksort  Memory: 830kB
                                 Worker 1:  Sort Method: quicksort  Memory: 804kB
                                 Worker 2:  Sort Method: quicksort  Memory: 796kB
                                 Worker 3:  Sort Method: quicksort  Memory: 819kB
                                 ->  Nested Loop Semi Join  (cost=1337985.44..1961080.55 rows=1 width=26) (actual time=3789.001..6494.846 rows=7856 loops=5)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 8405
                                       ->  Nested Loop Anti Join  (cost=1337984.88..1961076.90 rows=1 width=38) (actual time=3788.532..6457.151 rows=13192 loops=5)
                                             ->  Parallel Hash Join  (cost=1337984.31..1653198.52 rows=95880 width=38) (actual time=3788.400..4783.416 rows=146197 loops=5)
                                                   Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..308148.27 rows=1820330 width=4) (actual time=0.077..506.527 rows=1461837 loops=5)
                                                         Filter: (o_orderstatus = 'F'::bpchar)
                                                         Rows Removed by Filter: 1538163
                                                   ->  Parallel Hash  (cost=1335515.05..1335515.05 rows=197541 width=34) (actual time=3787.049..3787.413 rows=302853 loops=5)
                                                         Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 131360kB
                                                         ->  Parallel Hash Join  (cost=3020.56..1335515.05 rows=197541 width=34) (actual time=12.641..3595.365 rows=302853 loops=5)
                                                               Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                               ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1312587.95 rows=4998532 width=8) (actual time=0.039..2690.019 rows=7585870 loops=5)
                                                                     Filter: (l_receiptdate > l_commitdate)
                                                                     Rows Removed by Filter: 4411341
                                                               ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=10.243..10.244 rows=798 loops=5)
                                                                     Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.054..9.907 rows=798 loops=5)
                                                                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.022..6.982 rows=20000 loops=5)
                                                                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.021..0.022 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=5)
                                                                                       Filter: (n_name = 'PERU'::bpchar)
                                                                                       Rows Removed by Filter: 24
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=730985)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.644 ms
 Execution Time: 6627.468 ms
(52 rows)

query 22 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96344.26..96344.41 rows=1 width=72) (actual time=889.497..903.549 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.28..46821.29 rows=1 width=32) (actual time=350.004..350.101 rows=1 loops=1)
           ->  Gather  (cost=46820.85..46821.26 rows=4 width=32) (actual time=349.741..350.083 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.85..45820.86 rows=1 width=32) (actual time=340.781..340.782 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.01 rows=11932 width=6) (actual time=0.103..332.838 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49522.97..50639.08 rows=7270 width=72) (actual time=889.495..903.449 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49522.97..50439.13 rows=7272 width=72) (actual time=888.990..903.439 rows=5 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=48522.92..48572.91 rows=1818 width=72) (actual time=533.900..534.774 rows=3 loops=4)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48522.92..48527.46 rows=1818 width=38) (actual time=533.404..533.663 rows=6197 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1136kB
                           Worker 0:  Sort Method: quicksort  Memory: 1115kB
                           Worker 1:  Sort Method: quicksort  Memory: 1135kB
                           Worker 2:  Sort Method: quicksort  Memory: 1129kB
                           ->  Nested Loop Anti Join  (cost=0.43..48424.49 rows=1818 width=38) (actual time=0.242..526.556 rows=15877 loops=4)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.01 rows=4375 width=26) (actual time=0.011..171.344 rows=47782 loops=4)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 327218
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4) (actual time=0.007..0.007 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 12.759 ms
 Execution Time: 904.343 ms
(33 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96344.26..96344.41 rows=1 width=72) (actual time=534.216..545.735 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46821.28..46821.29 rows=1 width=32) (actual time=223.587..223.690 rows=1 loops=1)
           ->  Gather  (cost=46820.85..46821.26 rows=4 width=32) (actual time=219.866..223.667 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.85..45820.86 rows=1 width=32) (actual time=215.421..215.421 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45791.01 rows=11932 width=6) (actual time=0.018..207.393 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  Finalize GroupAggregate  (cost=49522.97..50639.08 rows=7270 width=72) (actual time=534.215..545.630 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Gather Merge  (cost=49522.97..50439.13 rows=7272 width=72) (actual time=533.700..545.619 rows=6 loops=1)
               Workers Planned: 4
               Params Evaluated: $1
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=48522.92..48572.91 rows=1818 width=72) (actual time=301.071..303.479 rows=6 loops=5)
                     Group Key: ("substring"((customer.c_phone)::text, 1, 2))
                     ->  Sort  (cost=48522.92..48527.46 rows=1818 width=38) (actual time=300.672..301.693 rows=10059 loops=5)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 1115kB
                           Worker 0:  Sort Method: quicksort  Memory: 814kB
                           Worker 1:  Sort Method: quicksort  Memory: 811kB
                           Worker 2:  Sort Method: quicksort  Memory: 1115kB
                           Worker 3:  Sort Method: quicksort  Memory: 1043kB
                           ->  Nested Loop Anti Join  (cost=0.43..48424.49 rows=1818 width=38) (actual time=0.066..295.140 rows=12702 loops=5)
                                 ->  Parallel Seq Scan on customer  (cost=0.00..45791.01 rows=4375 width=26) (actual time=0.018..156.079 rows=38226 loops=5)
                                       Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                       Rows Removed by Filter: 261774
                                 ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                                       Index Cond: (o_custkey = customer.c_custkey)
                                       Heap Fetches: 0
 Planning Time: 0.689 ms
 Execution Time: 545.797 ms
(34 rows)

