query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424448.70..424448.70 rows=1 width=25) (actual time=17573.649..17573.649 rows=1 loops=1)
   ->  Sort  (cost=424448.70..424448.72 rows=6 width=25) (actual time=17573.648..17573.648 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424448.57..424448.67 rows=6 width=25) (actual time=17573.618..17573.623 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187576.73 rows=5921796 width=25) (actual time=0.400..1274.294 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 17573.708 ms
(8 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424448.70..424448.70 rows=1 width=25) (actual time=17345.694..17345.694 rows=1 loops=1)
   ->  Sort  (cost=424448.70..424448.72 rows=6 width=25) (actual time=17345.694..17345.694 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424448.57..424448.67 rows=6 width=25) (actual time=17345.665..17345.670 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187576.73 rows=5921796 width=25) (actual time=0.022..1095.897 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 17345.750 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67621.27..67621.28 rows=1 width=192) (actual time=642.879..642.889 rows=100 loops=1)
   ->  Sort  (cost=67621.27..67621.28 rows=1 width=192) (actual time=642.877..642.879 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=45342.47..67621.26 rows=1 width=192) (actual time=442.884..642.258 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8926.26 rows=839 width=30) (actual time=0.016..82.401 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45342.45..45741.74 rows=159713 width=172) (actual time=442.539..470.168 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..31539.16 rows=159713 width=172) (actual time=5.277..308.356 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.002..185.719 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=5.270..5.270 rows=2036 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 403kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.012..4.831 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.000..3.672 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.010..0.010 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.010 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=6) (actual time=0.115..0.115 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=6) (actual time=0.103..0.113 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=10) (actual time=0.097..0.110 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=10) (actual time=0.096..0.106 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=10) (actual time=0.093..0.094 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
 Total runtime: 647.262 ms
(44 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=67621.27..67621.28 rows=1 width=192) (actual time=456.961..456.971 rows=100 loops=1)
   ->  Sort  (cost=67621.27..67621.28 rows=1 width=192) (actual time=456.961..456.966 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=45342.47..67621.26 rows=1 width=192) (actual time=344.670..456.511 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8926.26 rows=839 width=30) (actual time=0.017..59.842 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45342.45..45741.74 rows=159713 width=172) (actual time=344.568..370.249 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..31539.16 rows=159713 width=172) (actual time=3.364..215.884 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.002..46.395 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=3.358..3.358 rows=2036 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 403kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.014..2.735 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..0.808 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.011..0.011 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.011 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=6) (actual time=0.018..0.018 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=6) (actual time=0.011..0.017 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=10) (actual time=0.007..0.015 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=10) (actual time=0.006..0.011 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=10) (actual time=0.004..0.005 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
 Total runtime: 460.999 ms
(44 rows)

query 3 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=310832.13..310832.15 rows=10 width=24) (actual time=2677.188..2677.188 rows=10 loops=1)
   ->  Sort  (cost=310832.13..311652.58 rows=328180 width=24) (actual time=2677.187..2677.187 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=294715.33..303740.28 rows=328180 width=24) (actual time=2656.503..2675.119 rows=11612 loops=1)
               ->  Sort  (cost=294715.33..295535.78 rows=328180 width=24) (actual time=2656.489..2657.641 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=61388.47..264647.27 rows=328180 width=24) (actual time=835.579..2648.262 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.73 rows=3306738 width=16) (actual time=0.002..1127.794 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59527.20..59527.20 rows=148902 width=12) (actual time=834.574..834.574 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=14534.86..59527.20 rows=148902 width=12) (actual time=132.174..807.798 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8681.17..43955.50 rows=731466 width=16) (actual time=77.062..522.451 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8498.31 rows=731466 width=0) (actual time=73.767..73.767 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30535 width=4) (actual time=55.040..55.040 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30535 width=4) (actual time=0.002..51.134 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2677.246 ms
(25 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=310832.13..310832.15 rows=10 width=24) (actual time=2003.195..2003.197 rows=10 loops=1)
   ->  Sort  (cost=310832.13..311652.58 rows=328180 width=24) (actual time=2003.194..2003.196 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=294715.33..303740.28 rows=328180 width=24) (actual time=1982.529..2001.139 rows=11612 loops=1)
               ->  Sort  (cost=294715.33..295535.78 rows=328180 width=24) (actual time=1982.514..1983.675 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=61388.47..264647.27 rows=328180 width=24) (actual time=412.709..1974.495 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187576.73 rows=3306738 width=16) (actual time=0.002..924.505 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=59527.20..59527.20 rows=148902 width=12) (actual time=412.476..412.476 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=14534.86..59527.20 rows=148902 width=12) (actual time=93.503..392.845 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8681.17..43955.50 rows=731466 width=16) (actual time=58.424..203.457 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8498.31 rows=731466 width=0) (actual time=55.141..55.141 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=30535 width=4) (actual time=35.059..35.059 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30535 width=4) (actual time=0.001..31.675 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2003.249 ms
(25 rows)

query 4 run 1
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=182831.41..182831.42 rows=1 width=16) (actual time=2100.540..2100.540 rows=1 loops=1)
   ->  Sort  (cost=182831.41..182831.42 rows=1 width=16) (actual time=2100.538..2100.538 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=182831.39..182831.40 rows=1 width=16) (actual time=2100.306..2100.307 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=788.95..182557.18 rows=54843 width=16) (actual time=12.906..2077.839 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=788.95..27742.60 rows=54843 width=20) (actual time=12.848..548.088 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..775.24 rows=54843 width=0) (actual time=9.966..9.966 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.28 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
 Total runtime: 2100.601 ms
(14 rows)

SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=182831.41..182831.42 rows=1 width=16) (actual time=355.411..355.412 rows=1 loops=1)
   ->  Sort  (cost=182831.41..182831.42 rows=1 width=16) (actual time=355.410..355.410 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=182831.39..182831.40 rows=1 width=16) (actual time=355.387..355.387 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=788.95..182557.18 rows=54843 width=16) (actual time=9.509..341.703 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=788.95..27742.60 rows=54843 width=20) (actual time=9.487..86.275 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..775.24 rows=54843 width=0) (actual time=6.357..6.357 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.28 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
 Total runtime: 355.458 ms
(14 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=197947.94..197947.94 rows=1 width=38) (actual time=2430.365..2430.366 rows=1 loops=1)
   ->  Sort  (cost=197947.94..197948.00 rows=25 width=38) (actual time=2430.365..2430.365 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=197947.56..197947.81 rows=25 width=38) (actual time=2430.352..2430.353 rows=5 loops=1)
               ->  Hash Join  (cost=10087.09..197874.56 rows=7300 width=38) (actual time=98.629..2416.166 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9614.09..191854.82 rows=182458 width=50) (actual time=93.082..2304.908 rows=182435 loops=1)
                           ->  Hash Join  (cost=9614.09..40762.70 rows=45615 width=38) (actual time=93.012..775.818 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3277.06..32829.15 rows=228073 width=8) (actual time=32.695..568.855 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3220.04 rows=228073 width=0) (actual time=29.394..29.394 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=60.281..60.281 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.024..55.291 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..38.837 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.26 rows=4 width=20) (actual time=0.031..0.033 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.495..5.495 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.095 rows=10000 loops=1)
 Total runtime: 2430.431 ms
(34 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=197947.94..197947.94 rows=1 width=38) (actual time=560.360..560.360 rows=1 loops=1)
   ->  Sort  (cost=197947.94..197948.00 rows=25 width=38) (actual time=560.360..560.360 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=197947.56..197947.81 rows=25 width=38) (actual time=560.347..560.347 rows=5 loops=1)
               ->  Hash Join  (cost=10087.09..197874.56 rows=7300 width=38) (actual time=68.945..552.227 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9614.09..191854.82 rows=182458 width=50) (actual time=65.520..510.907 rows=182435 loops=1)
                           ->  Hash Join  (cost=9614.09..40762.70 rows=45615 width=38) (actual time=65.506..257.302 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3277.06..32829.15 rows=228073 width=8) (actual time=24.713..144.161 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3220.04 rows=228073 width=0) (actual time=21.415..21.415 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=40.775..40.775 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.023..36.198 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..8.729 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.012..0.015 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.26 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.405..3.405 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.947 rows=10000 loops=1)
 Total runtime: 560.425 ms
(34 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109500.11..109500.12 rows=1 width=12) (actual time=1269.810..1269.811 rows=1 loops=1)
   ->  Aggregate  (cost=109500.11..109500.12 rows=1 width=12) (actual time=1269.809..1269.809 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21270.88..108898.20 rows=120383 width=12) (actual time=141.009..1181.197 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21240.78 rows=120383 width=0) (actual time=129.916..129.916 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1269.838 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109500.11..109500.12 rows=1 width=12) (actual time=346.417..346.418 rows=1 loops=1)
   ->  Aggregate  (cost=109500.11..109500.12 rows=1 width=12) (actual time=346.415..346.415 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21270.88..108898.20 rows=120383 width=12) (actual time=114.882..292.389 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21240.78 rows=120383 width=0) (actual time=104.517..104.517 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 346.445 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238744.75..238744.75 rows=1 width=68) (actual time=3682.879..3682.879 rows=1 loops=1)
   ->  Sort  (cost=238744.75..238759.48 rows=5894 width=68) (actual time=3682.878..3682.878 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=238626.87..238715.28 rows=5894 width=68) (actual time=3682.839..3682.849 rows=4 loops=1)
               ->  Hash Join  (cost=85424.13..238538.46 rows=5894 width=68) (actual time=918.177..3668.995 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=84951.13..233556.40 rows=147355 width=76) (actual time=912.482..3552.089 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29551.30..169768.68 rows=1843825 width=24) (actual time=307.070..2380.947 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29090.35 rows=1843825 width=0) (actual time=286.158..286.158 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=605.218..605.218 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=53.686..579.898 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..278.985 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=53.676..53.676 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.130..51.382 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..37.126 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.126..0.126 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.083..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.070..5.070 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..3.849 rows=10000 loops=1)
 Total runtime: 3682.961 ms
(34 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238744.75..238744.75 rows=1 width=68) (actual time=1594.954..1594.954 rows=1 loops=1)
   ->  Sort  (cost=238744.75..238759.48 rows=5894 width=68) (actual time=1594.952..1594.952 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=238626.87..238715.28 rows=5894 width=68) (actual time=1594.914..1594.924 rows=4 loops=1)
               ->  Hash Join  (cost=85424.13..238538.46 rows=5894 width=68) (actual time=707.740..1587.986 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=84951.13..233556.40 rows=147355 width=76) (actual time=704.378..1535.607 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29551.30..169768.68 rows=1843825 width=24) (actual time=239.099..719.106 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29090.35 rows=1843825 width=0) (actual time=218.430..218.430 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=465.242..465.242 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=34.705..443.467 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..77.751 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=34.697..34.697 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.129..32.829 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..7.990 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.124..0.124 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.082..0.124 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.239..3.239 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..2.037 rows=10000 loops=1)
 Total runtime: 1595.042 ms
(34 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117984.84..117984.84 rows=1 width=42) (actual time=6667.713..6667.714 rows=1 loops=1)
   ->  Sort  (cost=117984.84..117986.66 rows=729 width=42) (actual time=6667.711..6667.711 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117968.44..117981.20 rows=729 width=42) (actual time=6667.701..6667.703 rows=2 loops=1)
               ->  Hash Join  (cost=50561.29..117920.04 rows=2420 width=42) (actual time=845.262..6657.921 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50559.73..117873.10 rows=2420 width=20) (actual time=845.239..6653.587 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50111.73..117364.60 rows=2420 width=20) (actual time=840.171..6645.513 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..67078.68 rows=39999 width=20) (actual time=1.942..5771.548 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.641..71.193 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..44.98 rows=31 width=24) (actual time=0.322..4.299 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48976.88..48976.88 rows=90788 width=8) (actual time=834.817..834.817 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=12859.22..48976.88 rows=90788 width=8) (actual time=114.642..811.081 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6522.19..39462.27 rows=453939 width=12) (actual time=54.401..541.375 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6408.70 rows=453939 width=0) (actual time=51.102..51.102 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=60.181..60.181 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.032..56.346 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..39.688 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.025..0.025 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.014..0.022 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.063..5.063 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..3.749 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 6667.788 ms
(45 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117984.84..117984.84 rows=1 width=42) (actual time=469.577..469.578 rows=1 loops=1)
   ->  Sort  (cost=117984.84..117986.66 rows=729 width=42) (actual time=469.576..469.576 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117968.44..117981.20 rows=729 width=42) (actual time=469.564..469.566 rows=2 loops=1)
               ->  Hash Join  (cost=50561.29..117920.04 rows=2420 width=42) (actual time=320.102..466.485 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=50559.73..117873.10 rows=2420 width=20) (actual time=320.081..465.232 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50111.73..117364.60 rows=2420 width=20) (actual time=316.783..460.060 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..67078.68 rows=39999 width=20) (actual time=0.110..125.975 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.094..33.178 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..44.98 rows=31 width=24) (actual time=0.006..0.065 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48976.88..48976.88 rows=90788 width=8) (actual time=316.607..316.607 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=12859.22..48976.88 rows=90788 width=8) (actual time=82.334..303.567 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6522.19..39462.27 rows=453939 width=12) (actual time=41.857..165.404 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6408.70 rows=453939 width=0) (actual time=38.562..38.562 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=40.462..40.462 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.017..36.847 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..9.111 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.013..0.013 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.008..0.013 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.001 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.294..3.294 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..1.998 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 469.654 ms
(45 rows)

query 9 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171217.04..171217.04 rows=1 width=53) (actual time=17966.554..17966.555 rows=1 loops=1)
   ->  Sort  (cost=171217.04..171217.35 rows=124 width=53) (actual time=17966.553..17966.553 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=171214.56..171216.42 rows=124 width=53) (actual time=17966.461..17966.485 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..171212.39 rows=124 width=53) (actual time=0.836..17318.946 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..171163.96 rows=124 width=31) (actual time=0.825..16068.017 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..170786.62 rows=124 width=31) (actual time=0.274..12175.481 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..170423.67 rows=124 width=35) (actual time=0.266..11446.187 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..38074.10 rows=40404 width=18) (actual time=0.061..317.994 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=10101 width=4) (actual time=0.006..88.093 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=14) (actual time=0.018..0.020 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.26 rows=1 width=29) (actual time=0.037..0.253 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.91 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.03 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.000..0.002 rows=25 loops=1)
 Total runtime: 17966.622 ms
(24 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171217.04..171217.04 rows=1 width=53) (actual time=3611.803..3611.803 rows=1 loops=1)
   ->  Sort  (cost=171217.04..171217.35 rows=124 width=53) (actual time=3611.803..3611.803 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=171214.56..171216.42 rows=124 width=53) (actual time=3611.713..3611.739 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..171212.39 rows=124 width=53) (actual time=0.059..3189.974 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..171163.96 rows=124 width=31) (actual time=0.047..2211.326 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..170786.62 rows=124 width=31) (actual time=0.035..1238.632 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..170423.67 rows=124 width=35) (actual time=0.032..773.851 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..38074.10 rows=40404 width=18) (actual time=0.019..122.119 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=10101 width=4) (actual time=0.009..58.136 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.07 rows=4 width=14) (actual time=0.004..0.005 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.26 rows=1 width=29) (actual time=0.004..0.013 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.91 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.03 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.000..0.002 rows=25 loops=1)
 Total runtime: 3611.872 ms
(24 rows)

query 10 run 1
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233289.35..233289.40 rows=20 width=181) (actual time=2342.993..2342.996 rows=20 loops=1)
   ->  Sort  (cost=233289.35..233432.55 rows=57282 width=181) (actual time=2342.992..2342.993 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=231192.28..231765.10 rows=57282 width=181) (actual time=2319.604..2333.039 rows=38076 loops=1)
               ->  Hash Join  (cost=7814.50..229760.23 rows=57282 width=181) (actual time=98.629..2132.218 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7812.93..228971.04 rows=57282 width=159) (actual time=98.617..2106.530 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=840.93..220638.59 rows=57282 width=16) (actual time=13.048..1939.147 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=840.93..27848.70 rows=58451 width=8) (actual time=12.143..482.322 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..826.32 rows=58451 width=0) (actual time=9.140..9.140 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.29 rows=1 width=16) (actual time=0.023..0.025 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=147) (actual time=85.538..85.538 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=147) (actual time=0.004..51.976 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 2343.092 ms
(24 rows)

SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233289.35..233289.40 rows=20 width=181) (actual time=756.921..756.924 rows=20 loops=1)
   ->  Sort  (cost=233289.35..233432.55 rows=57282 width=181) (actual time=756.920..756.921 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=231192.28..231765.10 rows=57282 width=181) (actual time=733.624..746.915 rows=38076 loops=1)
               ->  Hash Join  (cost=7814.50..229760.23 rows=57282 width=181) (actual time=74.684..578.413 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7812.93..228971.04 rows=57282 width=159) (actual time=74.671..555.645 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=840.93..220638.59 rows=57282 width=16) (actual time=9.569..419.570 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=840.93..27848.70 rows=58451 width=8) (actual time=9.524..88.961 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..826.32 rows=58451 width=0) (actual time=6.379..6.379 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.29 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=147) (actual time=64.860..64.860 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=147) (actual time=0.003..32.609 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Total runtime: 757.014 ms
(24 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22903.53..22903.53 rows=1 width=14) (actual time=742.767..742.767 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=11012.54..11012.55 rows=1 width=10) (actual time=31.855..31.855 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..10772.97 rows=31943 width=10) (actual time=0.014..18.033 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4) (actual time=0.009..0.187 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8) (actual time=0.004..0.132 rows=411 loops=1)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=11890.97..11970.83 rows=31943 width=14) (actual time=742.766..742.766 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11331.97..11731.26 rows=31943 width=14) (actual time=737.111..742.623 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..10772.97 rows=31943 width=14) (actual time=0.772..675.377 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4) (actual time=0.620..2.821 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8) (actual time=0.613..2.745 rows=411 loops=1)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=18) (actual time=0.085..1.619 rows=80 loops=411)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 742.838 ms
(25 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22903.53..22903.53 rows=1 width=14) (actual time=110.313..110.313 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=11012.54..11012.55 rows=1 width=10) (actual time=31.556..31.556 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..10772.97 rows=31943 width=10) (actual time=0.014..17.662 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4) (actual time=0.009..0.182 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8) (actual time=0.004..0.139 rows=411 loops=1)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=14) (actual time=0.003..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=11890.97..11970.83 rows=31943 width=14) (actual time=110.312..110.312 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11331.97..11731.26 rows=31943 width=14) (actual time=104.694..110.192 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..10772.97 rows=31943 width=14) (actual time=0.036..54.009 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..327.92 rows=400 width=4) (actual time=0.024..0.638 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..321.61 rows=400 width=8) (actual time=0.017..0.584 rows=411 loops=1)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..25.11 rows=80 width=18) (actual time=0.007..0.119 rows=80 loops=411)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 110.384 ms
(25 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308963.10..308963.11 rows=1 width=27) (actual time=2082.730..2082.730 rows=1 loops=1)
   ->  Sort  (cost=308963.10..308963.11 rows=1 width=27) (actual time=2082.729..2082.729 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=308963.08..308963.09 rows=1 width=27) (actual time=2082.707..2082.707 rows=2 loops=1)
               ->  Merge Join  (cost=249544.14..308498.02 rows=26575 width=27) (actual time=1568.059..2064.356 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20) (actual time=0.005..391.904 rows=1499957 loops=1)
                     ->  Sort  (cost=249543.56..249610.01 rows=26581 width=15) (actual time=1567.971..1570.805 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247590.10 rows=26581 width=15) (actual time=0.757..1561.473 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 2082.794 ms
(14 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308963.10..308963.11 rows=1 width=27) (actual time=1697.352..1697.352 rows=1 loops=1)
   ->  Sort  (cost=308963.10..308963.11 rows=1 width=27) (actual time=1697.351..1697.351 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=308963.08..308963.09 rows=1 width=27) (actual time=1697.331..1697.331 rows=2 loops=1)
               ->  Merge Join  (cost=249544.14..308498.02 rows=26575 width=27) (actual time=1337.589..1683.010 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20) (actual time=0.004..247.906 rows=1499957 loops=1)
                     ->  Sort  (cost=249543.56..249610.01 rows=26581 width=15) (actual time=1337.565..1339.687 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247590.10 rows=26581 width=15) (actual time=0.109..1331.826 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 1697.407 ms
(14 rows)

query 13 run 1
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98295.61..98295.61 rows=1 width=8) (actual time=2264.689..2264.690 rows=1 loops=1)
   ->  Sort  (cost=98295.61..98296.11 rows=200 width=8) (actual time=2264.687..2264.687 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=98292.61..98294.61 rows=200 width=8) (actual time=2264.665..2264.668 rows=42 loops=1)
               ->  HashAggregate  (cost=94542.61..96042.61 rows=150000 width=8) (actual time=2217.840..2245.331 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=6972.00..87118.33 rows=1484856 width=8) (actual time=61.141..1746.581 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484856 width=8) (actual time=0.438..648.887 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4) (actual time=60.690..60.690 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4) (actual time=0.003..44.131 rows=150000 loops=1)
 Total runtime: 2265.378 ms
(14 rows)

SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98295.61..98295.61 rows=1 width=8) (actual time=2085.759..2085.760 rows=1 loops=1)
   ->  Sort  (cost=98295.61..98296.11 rows=200 width=8) (actual time=2085.758..2085.758 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=98292.61..98294.61 rows=200 width=8) (actual time=2085.737..2085.742 rows=42 loops=1)
               ->  HashAggregate  (cost=94542.61..96042.61 rows=150000 width=8) (actual time=2038.913..2066.525 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=6972.00..87118.33 rows=1484856 width=8) (actual time=42.000..1579.740 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484856 width=8) (actual time=0.008..570.191 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4) (actual time=41.981..41.981 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4) (actual time=0.003..26.739 rows=150000 loops=1)
 Total runtime: 2086.424 ms
(14 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78545.63..78545.64 rows=1 width=33) (actual time=870.330..870.331 rows=1 loops=1)
   ->  Aggregate  (cost=78545.63..78545.64 rows=1 width=33) (actual time=870.328..870.328 rows=1 loops=1)
         ->  Hash Join  (cost=9809.95..77224.41 rows=75498 width=33) (actual time=104.882..786.730 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1210.95..67115.45 rows=75498 width=16) (actual time=21.244..622.115 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1192.08 rows=75498 width=0) (actual time=15.121..15.121 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=83.582..83.582 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.003..56.611 rows=200000 loops=1)
 Total runtime: 870.377 ms
(12 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78545.63..78545.64 rows=1 width=33) (actual time=322.173..322.174 rows=1 loops=1)
   ->  Aggregate  (cost=78545.63..78545.64 rows=1 width=33) (actual time=322.173..322.173 rows=1 loops=1)
         ->  Hash Join  (cost=9809.95..77224.41 rows=75498 width=33) (actual time=79.222..257.996 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1210.95..67115.45 rows=75498 width=16) (actual time=16.444..139.444 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1192.08 rows=75498 width=0) (actual time=10.282..10.282 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=62.731..62.731 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.003..37.406 rows=200000 loops=1)
 Total runtime: 322.208 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246219.02..246220.16 rows=1 width=103) (actual time=1517.629..1517.629 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122219.08..122219.09 rows=1 width=32) (actual time=238.634..238.634 rows=1 loops=1)
           ->  HashAggregate  (cost=122210.26..122214.18 rows=392 width=16) (actual time=236.806..238.013 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=3770.36..119858.30 rows=235196 width=16) (actual time=32.655..93.743 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3711.56 rows=235196 width=0) (actual time=23.083..23.083 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123999.93..124449.56 rows=392 width=103) (actual time=1517.628..1517.628 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..418.75 rows=10000 width=71) (actual time=0.761..4.734 rows=8449 loops=1)
         ->  Sort  (cost=123999.93..124000.91 rows=392 width=36) (actual time=1512.443..1512.443 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123974.23..123983.05 rows=392 width=36) (actual time=1511.976..1512.436 rows=1 loops=1)
                     ->  HashAggregate  (cost=123974.23..123979.13 rows=392 width=16) (actual time=1511.975..1512.434 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3770.36..119858.30 rows=235196 width=16) (actual time=50.511..1032.581 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3711.56 rows=235196 width=0) (actual time=38.705..38.705 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1517.700 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246219.02..246220.16 rows=1 width=103) (actual time=643.982..643.983 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122219.08..122219.09 rows=1 width=32) (actual time=238.188..238.188 rows=1 loops=1)
           ->  HashAggregate  (cost=122210.26..122214.18 rows=392 width=16) (actual time=236.358..237.555 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=3770.36..119858.30 rows=235196 width=16) (actual time=32.355..93.505 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3711.56 rows=235196 width=0) (actual time=22.811..22.811 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123999.93..124449.56 rows=392 width=103) (actual time=643.982..643.982 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..418.75 rows=10000 width=71) (actual time=0.020..1.546 rows=8449 loops=1)
         ->  Sort  (cost=123999.93..124000.91 rows=392 width=36) (actual time=641.945..641.945 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123974.23..123983.05 rows=392 width=36) (actual time=641.485..641.942 rows=1 loops=1)
                     ->  HashAggregate  (cost=123974.23..123979.13 rows=392 width=16) (actual time=641.484..641.940 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=3770.36..119858.30 rows=235196 width=16) (actual time=38.840..242.926 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3711.56 rows=235196 width=0) (actual time=27.966..27.966 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 644.053 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47286.77..47286.78 rows=1 width=40) (actual time=1305.089..1305.090 rows=1 loops=1)
   ->  Sort  (cost=47286.77..47293.49 rows=2687 width=40) (actual time=1305.087..1305.087 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=46574.92..47273.34 rows=2687 width=40) (actual time=1254.019..1302.381 rows=18220 loops=1)
               ->  Sort  (cost=46574.92..46709.23 rows=53724 width=40) (actual time=1253.999..1261.343 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9782.78..42354.02 rows=53724 width=40) (actual time=98.104..482.797 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8) (actual time=5.548..256.785 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.161..5.358 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=26862 width=40) (actual time=92.532..92.532 rows=29492 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 2137kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=26862 width=40) (actual time=0.007..86.988 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1305.162 ms
(20 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47286.77..47286.78 rows=1 width=40) (actual time=1178.566..1178.566 rows=1 loops=1)
   ->  Sort  (cost=47286.77..47293.49 rows=2687 width=40) (actual time=1178.565..1178.565 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=46574.92..47273.34 rows=2687 width=40) (actual time=1127.141..1175.763 rows=18220 loops=1)
               ->  Sort  (cost=46574.92..46709.23 rows=53724 width=40) (actual time=1127.123..1134.873 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9782.78..42354.02 rows=53724 width=40) (actual time=74.353..356.832 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8) (actual time=2.847..176.544 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.109..2.838 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=26862 width=40) (actual time=71.479..71.479 rows=29492 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 2137kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=26862 width=40) (actual time=0.006..66.138 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1178.615 ms
(20 rows)

query 17 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224694.06..224694.07 rows=1 width=8) (actual time=5623.158..5623.158 rows=1 loops=1)
   ->  Aggregate  (cost=224694.06..224694.07 rows=1 width=8) (actual time=5623.157..5623.157 rows=1 loops=1)
         ->  Nested Loop  (cost=209681.61..224689.17 rows=1957 width=8) (actual time=5383.062..5622.791 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=209681.61..215226.37 rows=196 width=40) (actual time=5382.291..5508.632 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202580.07..205471.97 rows=192793 width=9) (actual time=5327.570..5442.631 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.38 rows=6001338 width=9) (actual time=0.394..743.390 rows=6001215 loops=1)
                     ->  Hash  (cost=7099.00..7099.00 rows=203 width=4) (actual time=54.536..54.536 rows=208 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 8kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=203 width=4) (actual time=0.735..54.437 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.81 rows=31 width=17) (actual time=0.283..0.536 rows=30 loops=208)
                     Index Cond: (l_partkey = part.p_partkey)
 Total runtime: 5623.783 ms
(15 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224694.06..224694.07 rows=1 width=8) (actual time=5233.587..5233.587 rows=1 loops=1)
   ->  Aggregate  (cost=224694.06..224694.07 rows=1 width=8) (actual time=5233.587..5233.587 rows=1 loops=1)
         ->  Nested Loop  (cost=209681.61..224689.17 rows=1957 width=8) (actual time=5100.655..5233.388 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=209681.61..215226.37 rows=196 width=40) (actual time=5100.632..5228.515 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202580.07..205471.97 rows=192793 width=9) (actual time=5066.991..5184.045 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..172573.38 rows=6001338 width=9) (actual time=0.028..553.549 rows=6001215 loops=1)
                     ->  Hash  (cost=7099.00..7099.00 rows=203 width=4) (actual time=33.449..33.449 rows=208 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 8kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=203 width=4) (actual time=0.127..33.389 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..47.81 rows=31 width=17) (actual time=0.007..0.019 rows=30 loops=208)
                     Index Cond: (l_partkey = part.p_partkey)
 Total runtime: 5234.194 ms
(15 rows)

query 18 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1106524.93..1106527.68 rows=100 width=44) (actual time=4467.208..4467.234 rows=9 loops=1)
   ->  GroupAggregate  (cost=1106524.93..1189024.96 rows=3000001 width=44) (actual time=4467.207..4467.231 rows=9 loops=1)
         ->  Sort  (cost=1106524.93..1114024.93 rows=3000001 width=44) (actual time=4467.199..4467.202 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6975.49..724448.85 rows=3000001 width=44) (actual time=1068.484..4467.066 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=3.49..646226.83 rows=3000001 width=25) (actual time=1004.768..4403.318 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..372091.59 rows=750000 width=24) (actual time=788.453..3577.936 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20) (actual time=0.004..306.049 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.00..294781.61 rows=1500334 width=4) (actual time=684.384..3200.113 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.00..276027.43 rows=1500334 width=9) (actual time=684.382..3200.098 rows=9 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.57 rows=6001338 width=9) (actual time=0.003..1606.953 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.57 rows=6001338 width=9) (actual time=0.007..561.527 rows=4807580 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=63.692..63.692 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.002..43.794 rows=150000 loops=1)
 Total runtime: 4467.315 ms
(21 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1106524.93..1106527.68 rows=100 width=44) (actual time=3734.590..3734.615 rows=9 loops=1)
   ->  GroupAggregate  (cost=1106524.93..1189024.96 rows=3000001 width=44) (actual time=3734.589..3734.614 rows=9 loops=1)
         ->  Sort  (cost=1106524.93..1114024.93 rows=3000001 width=44) (actual time=3734.582..3734.585 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6975.49..724448.85 rows=3000001 width=44) (actual time=881.664..3734.453 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=3.49..646226.83 rows=3000001 width=25) (actual time=836.826..3689.585 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..372091.59 rows=750000 width=24) (actual time=620.455..2865.322 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..54805.81 rows=1500000 width=20) (actual time=0.004..197.755 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.00..294781.61 rows=1500334 width=4) (actual time=550.711..2599.833 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.00..276027.43 rows=1500334 width=9) (actual time=550.708..2599.818 rows=9 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.57 rows=6001338 width=9) (actual time=0.003..1065.786 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..227266.57 rows=6001338 width=9) (actual time=0.007..561.528 rows=4807580 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.818..44.818 rows=150000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..26.220 rows=150000 loops=1)
 Total runtime: 3734.677 ms
(21 rows)

query 19 run 1
SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308899.35..308899.36 rows=1 width=12) (actual time=1753.971..1753.971 rows=1 loops=1)
   ->  Aggregate  (cost=308899.35..308899.36 rows=1 width=12) (actual time=1753.970..1753.970 rows=1 loops=1)
         ->  Hash Join  (cost=9099.00..308898.54 rows=108 width=12) (actual time=99.164..1753.621 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292600.14 rows=110760 width=21) (actual time=0.463..1568.538 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6599.00..6599.00 rows=200000 width=30) (actual time=98.668..98.668 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 12500kB
                     ->  Seq Scan on part  (cost=0.00..6599.00 rows=200000 width=30) (actual time=0.002..66.605 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1754.220 ms
(12 rows)

SET
SET


 Limit  (cost=308899.35..308899.36 rows=1 width=12) (actual time=1516.816..1516.816 rows=1 loops=1)
   ->  Aggregate  (cost=308899.35..308899.36 rows=1 width=12) (actual time=1516.815..1516.815 rows=1 loops=1)
         ->  Hash Join  (cost=9099.00..308898.54 rows=108 width=12) (actual time=75.838..1516.554 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292600.14 rows=110760 width=21) (actual time=0.073..1358.943 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6599.00..6599.00 rows=200000 width=30) (actual time=75.734..75.734 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 12500kB
                     ->  Seq Scan on part  (cost=0.00..6599.00 rows=200000 width=30) (actual time=0.002..46.190 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1517.066 ms
(12 rows)

query 20 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=164413.96..164413.96 rows=1 width=51) (actual time=3530.105..3530.105 rows=1 loops=1)
   ->  Sort  (cost=164413.96..164413.96 rows=1 width=51) (actual time=3530.103..3530.103 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=161330.23..164413.95 rows=1 width=51) (actual time=3339.999..3529.902 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=6.35..230.54 rows=400 width=55) (actual time=1.266..3.496 rows=438 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=59) (actual time=1.256..3.400 rows=438 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.938..0.938 rows=438 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=161323.88..164147.41 rows=6 width=8) (actual time=6.963..7.763 rows=4504 loops=438)
                     ->  Hash Join  (cost=161323.88..164147.38 rows=6 width=8) (actual time=3049.872..3336.221 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=148820.82..149997.27 rows=94116 width=13) (actual time=2454.353..2669.772 rows=544869 loops=1)
                                 ->  Bitmap Heap Scan on lineitem  (cost=15084.90..141762.18 rows=941152 width=13) (actual time=163.509..1907.632 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14849.62 rows=941152 width=0) (actual time=144.224..144.224 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12379.19..12379.19 rows=8258 width=16) (actual time=595.448..595.448 rows=8748 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 411kB
                                 ->  Nested Loop  (cost=6604.05..12379.19 rows=8258 width=16) (actual time=53.746..591.518 rows=8748 loops=1)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4) (actual time=53.078..53.938 rows=2187 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.100..52.315 rows=2187 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12) (actual time=0.227..0.244 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 3530.554 ms
(31 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=164413.96..164413.96 rows=1 width=51) (actual time=1488.416..1488.416 rows=1 loops=1)
   ->  Sort  (cost=164413.96..164413.96 rows=1 width=51) (actual time=1488.414..1488.414 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=161330.23..164413.95 rows=1 width=51) (actual time=1299.914..1488.227 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=6.35..230.54 rows=400 width=55) (actual time=0.081..0.860 rows=438 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=59) (actual time=0.074..0.782 rows=438 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.052..0.052 rows=438 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=161323.88..164147.41 rows=6 width=8) (actual time=2.307..3.108 rows=4504 loops=438)
                     ->  Hash Join  (cost=161323.88..164147.38 rows=6 width=8) (actual time=1010.513..1297.373 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=148820.82..149997.27 rows=94116 width=13) (actual time=961.036..1176.447 rows=544869 loops=1)
                                 ->  Bitmap Heap Scan on lineitem  (cost=15084.90..141762.18 rows=941152 width=13) (actual time=122.328..502.830 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14849.62 rows=941152 width=0) (actual time=103.870..103.870 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12379.19..12379.19 rows=8258 width=16) (actual time=49.411..49.411 rows=8748 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 411kB
                                 ->  Nested Loop  (cost=6604.05..12379.19 rows=8258 width=16) (actual time=32.471..47.911 rows=8748 loops=1)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4) (actual time=32.454..32.831 rows=2187 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.024..31.894 rows=2187 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12) (actual time=0.005..0.006 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 1488.914 ms
(31 rows)

query 21 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=389050.06..389050.06 rows=1 width=26) (actual time=2510.299..2510.308 rows=100 loops=1)
   ->  Sort  (cost=389050.06..389050.06 rows=1 width=26) (actual time=2510.298..2510.303 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=389050.04..389050.05 rows=1 width=26) (actual time=2509.773..2509.822 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=54338.42..389050.03 rows=1 width=26) (actual time=493.917..2506.603 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54338.42..389043.12 rows=1 width=34) (actual time=491.915..2375.883 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54338.42..251410.64 rows=39347 width=38) (actual time=491.901..2088.675 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.54..196114.12 rows=80018 width=34) (actual time=4.796..1503.571 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187576.73 rows=2000446 width=8) (actual time=0.003..1241.145 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=230.54..230.54 rows=400 width=30) (actual time=4.732..4.732 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                             ->  Nested Loop  (cost=6.35..230.54 rows=400 width=30) (actual time=0.932..4.641 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=34) (actual time=0.926..4.560 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.887..0.887 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=737750 width=4) (actual time=486.817..486.817 rows=729413 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 25644kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=737750 width=4) (actual time=0.004..379.999 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.44 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.45 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
 Total runtime: 2510.394 ms
(34 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=389050.06..389050.06 rows=1 width=26) (actual time=2040.715..2040.724 rows=100 loops=1)
   ->  Sort  (cost=389050.06..389050.06 rows=1 width=26) (actual time=2040.714..2040.718 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=389050.04..389050.05 rows=1 width=26) (actual time=2040.197..2040.241 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=54338.42..389050.03 rows=1 width=26) (actual time=357.643..2037.400 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54338.42..389043.12 rows=1 width=34) (actual time=357.083..1917.612 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54338.42..251410.64 rows=39347 width=38) (actual time=357.068..1720.895 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.54..196114.12 rows=80018 width=34) (actual time=0.963..1270.457 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187576.73 rows=2000446 width=8) (actual time=0.003..1023.749 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=230.54..230.54 rows=400 width=30) (actual time=0.913..0.913 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                             ->  Nested Loop  (cost=6.35..230.54 rows=400 width=30) (actual time=0.074..0.850 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..224.23 rows=400 width=34) (actual time=0.068..0.783 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.049..0.049 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=737750 width=4) (actual time=356.014..356.014 rows=729413 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 25644kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=737750 width=4) (actual time=0.002..261.236 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.44 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.45 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
 Total runtime: 2040.801 ms
(34 rows)

query 22 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17932.51..17932.51 rows=1 width=22) (actual time=827.051..827.051 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.23..7546.24 rows=1 width=6) (actual time=117.116..117.116 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4690 width=6) (actual time=0.007..101.068 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10386.27..10388.11 rows=735 width=22) (actual time=827.050..827.050 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10371.57..10382.60 rows=735 width=22) (actual time=827.023..827.024 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..10366.06 rows=735 width=22) (actual time=117.162..821.226 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26) (actual time=117.143..196.120 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..18.52 rows=17 width=4) (actual time=0.032..0.032 rows=1 loops=19077)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 827.112 ms
(15 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17932.51..17932.51 rows=1 width=22) (actual time=217.110..217.111 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.23..7546.24 rows=1 width=6) (actual time=98.328..98.328 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4690 width=6) (actual time=0.007..82.840 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10386.27..10388.11 rows=735 width=22) (actual time=217.109..217.109 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10371.57..10382.60 rows=735 width=22) (actual time=217.084..217.086 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..10366.06 rows=735 width=22) (actual time=98.367..213.796 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26) (actual time=98.352..153.427 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..18.52 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 217.160 ms
(15 rows)

