query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3808663.52..3808663.53 rows=1 width=51) (actual time=198740.021..198740.021 rows=1 loops=1)
   ->  Sort  (cost=3808663.52..3808663.54 rows=6 width=51) (actual time=198740.021..198740.021 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3808663.17..3808663.44 rows=6 width=51) (actual time=198739.981..198739.987 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59181861 width=51) (actual time=0.484..14723.236 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 198740.403 ms
(7 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3808663.52..3808663.53 rows=1 width=51) (actual time=193476.546..193476.546 rows=1 loops=1)
   ->  Sort  (cost=3808663.52..3808663.54 rows=6 width=51) (actual time=193476.546..193476.546 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3808663.17..3808663.44 rows=6 width=51) (actual time=193476.506..193476.511 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59181861 width=51) (actual time=0.012..12002.104 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 193476.625 ms
(7 rows)

query 2 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=911851.72..911851.72 rows=1 width=215) (actual time=6045.554..6045.564 rows=100 loops=1)
   ->  Sort  (cost=911851.72..911851.72 rows=1 width=215) (actual time=6045.553..6045.555 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=85597.92..911851.71 rows=1 width=215) (actual time=628.607..6039.969 rows=4737 loops=1)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=4410.53..319649.53 rows=1600000 width=197) (actual time=47.014..4263.203 rows=1604080 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19) (actual time=0.422..1869.966 rows=8000000 loops=1)
                     ->  Hash  (cost=4160.53..4160.53 rows=20000 width=186) (actual time=46.573..46.573 rows=20051 loops=1)
                           ->  Hash Join  (cost=2.53..4160.53 rows=20000 width=186) (actual time=0.844..41.536 rows=20051 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=161) (actual time=0.292..29.917 rows=100000 loops=1)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.545..0.545 rows=5 loops=1)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.536..0.543 rows=5 loops=1)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.278..0.280 rows=25 loops=1)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.251..0.251 rows=1 loops=1)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.245..0.247 rows=1 loops=1)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=81082.00..81082.00 rows=8431 width=33) (actual time=579.176..579.176 rows=8046 loops=1)
                     ->  Seq Scan on part  (cost=0.00..81082.00 rows=8431 width=33) (actual time=0.580..575.800 rows=8046 loops=1)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=72.77..72.78 rows=1 width=11) (actual time=0.120..0.121 rows=1 loops=6398)
                       ->  Nested Loop  (cost=1.56..72.76 rows=4 width=11) (actual time=0.109..0.118 rows=2 loops=6398)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..71.45 rows=20 width=15) (actual time=0.103..0.116 rows=4 loops=6398)
                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..69.61 rows=20 width=15) (actual time=0.103..0.115 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.93 rows=20 width=15) (actual time=0.099..0.101 rows=4 loops=6398)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.007..0.007 rows=25 loops=1)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
 Total runtime: 6045.841 ms
(39 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=911851.72..911851.72 rows=1 width=215) (actual time=3495.013..3495.021 rows=100 loops=1)
   ->  Sort  (cost=911851.72..911851.72 rows=1 width=215) (actual time=3495.012..3495.017 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=85597.92..911851.71 rows=1 width=215) (actual time=349.052..3490.775 rows=4737 loops=1)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=4410.53..319649.53 rows=1600000 width=197) (actual time=30.444..2829.804 rows=1604080 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19) (actual time=0.007..970.317 rows=8000000 loops=1)
                     ->  Hash  (cost=4160.53..4160.53 rows=20000 width=186) (actual time=30.421..30.421 rows=20051 loops=1)
                           ->  Hash Join  (cost=2.53..4160.53 rows=20000 width=186) (actual time=0.025..25.751 rows=20051 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=161) (actual time=0.005..14.623 rows=100000 loops=1)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.019..0.019 rows=5 loops=1)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.013..0.017 rows=5 loops=1)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.003..0.006 rows=25 loops=1)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=81082.00..81082.00 rows=8431 width=33) (actual time=318.390..318.390 rows=8046 loops=1)
                     ->  Seq Scan on part  (cost=0.00..81082.00 rows=8431 width=33) (actual time=0.012..316.657 rows=8046 loops=1)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=72.77..72.78 rows=1 width=11) (actual time=0.017..0.017 rows=1 loops=6398)
                       ->  Nested Loop  (cost=1.56..72.76 rows=4 width=11) (actual time=0.010..0.015 rows=2 loops=6398)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..71.45 rows=20 width=15) (actual time=0.007..0.014 rows=4 loops=6398)
                                   Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..69.61 rows=20 width=15) (actual time=0.006..0.013 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.93 rows=20 width=15) (actual time=0.004..0.004 rows=4 loops=6398)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.007..0.007 rows=25 loops=1)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
 Total runtime: 3495.315 ms
(39 rows)

query 3 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4629599.38..4629599.40 rows=10 width=34) (actual time=35630.500..35630.501 rows=10 loops=1)
   ->  Sort  (cost=4629599.38..4637647.60 rows=3219288 width=34) (actual time=35630.500..35630.500 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4121379.15..4217957.79 rows=3219288 width=34) (actual time=35383.253..35557.658 rows=113934 loops=1)
               ->  Sort  (cost=4121379.15..4129427.37 rows=3219288 width=34) (actual time=35383.239..35408.694 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=702055.83..3709737.57 rows=3219288 width=34) (actual time=9695.005..35150.965 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=32917390 width=26) (actual time=0.428..14440.830 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=675122.51..675122.51 rows=1466985 width=12) (actual time=9692.450..9692.450 rows=1451805 loops=1)
                                 ->  Hash Join  (cost=150894.37..675122.51 rows=1466985 width=12) (actual time=1993.627..9423.882 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86211.37..495847.08 rows=7267097 width=16) (actual time=1446.388..3893.679 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84394.59 rows=7267097 width=0) (actual time=1376.953..1376.953 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=302800 width=4) (actual time=546.984..546.984 rows=300276 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=302800 width=4) (actual time=0.425..503.539 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 35632.690 ms
(21 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4629599.38..4629599.40 rows=10 width=34) (actual time=34949.059..34949.061 rows=10 loops=1)
   ->  Sort  (cost=4629599.38..4637647.60 rows=3219288 width=34) (actual time=34949.057..34949.058 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4121379.15..4217957.79 rows=3219288 width=34) (actual time=34701.983..34876.133 rows=113934 loops=1)
               ->  Sort  (cost=4121379.15..4129427.37 rows=3219288 width=34) (actual time=34701.969..34727.358 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=702055.83..3709737.57 rows=3219288 width=34) (actual time=9265.779..34468.904 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=32917390 width=26) (actual time=0.254..14108.207 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=675122.51..675122.51 rows=1466985 width=12) (actual time=9263.347..9263.347 rows=1451805 loops=1)
                                 ->  Hash Join  (cost=150894.37..675122.51 rows=1466985 width=12) (actual time=1902.777..8999.850 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=86211.37..495847.08 rows=7267097 width=16) (actual time=1416.907..3560.205 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..84394.59 rows=7267097 width=0) (actual time=1347.703..1347.703 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=302800 width=4) (actual time=485.610..485.610 rows=300276 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=302800 width=4) (actual time=0.278..446.016 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 34951.401 ms
(21 rows)

query 4 run 1
SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=451331.15..451331.15 rows=1 width=19) (actual time=27992.651..27992.652 rows=1 loops=1)
   ->  Sort  (cost=451331.15..451331.15 rows=1 width=19) (actual time=27992.650..27992.650 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=451331.12..451331.14 rows=1 width=19) (actual time=27992.601..27992.601 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=8286.21..449876.47 rows=290931 width=19) (actual time=180.065..27730.104 rows=513822 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8213.48 rows=581861 width=0) (actual time=122.368..122.368 rows=560424 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..14.84 rows=69 width=152) (actual time=0.045..0.045 rows=1 loops=560424)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 27992.997 ms
(14 rows)

SET
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=451331.15..451331.15 rows=1 width=19) (actual time=22606.333..22606.333 rows=1 loops=1)
   ->  Sort  (cost=451331.15..451331.15 rows=1 width=19) (actual time=22606.333..22606.333 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=451331.12..451331.14 rows=1 width=19) (actual time=22606.292..22606.293 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=8286.21..449876.47 rows=290931 width=19) (actual time=198.574..22362.493 rows=513822 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8213.48 rows=581861 width=0) (actual time=137.277..137.277 rows=560424 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..14.84 rows=69 width=152) (actual time=0.036..0.036 rows=1 loops=560424)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 22606.657 ms
(14 rows)

query 5 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3468660.37..3468660.38 rows=1 width=51) (actual time=23426.129..23426.129 rows=1 loops=1)
   ->  Sort  (cost=3468660.37..3468660.44 rows=25 width=51) (actual time=23426.128..23426.128 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3468659.36..3468659.79 rows=25 width=51) (actual time=23426.115..23426.115 rows=5 loops=1)
               ->  Hash Join  (cost=527447.01..3468291.68 rows=73535 width=51) (actual time=5621.574..23336.968 rows=72033 loops=1)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Merge Join  (cost=522364.01..3425707.55 rows=1838289 width=63) (actual time=5574.097..22189.162 rows=1815327 loops=1)
                           Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2725805.00 rows=59986052 width=30) (actual time=2.023..12359.159 rows=59986036 loops=1)
                           ->  Sort  (cost=522364.01..523513.21 rows=459679 width=41) (actual time=5571.388..5828.995 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=102539.43..469028.09 rows=459679 width=41) (actual time=1150.510..5220.047 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=33013.90..386286.79 rows=2298393 width=8) (actual time=525.152..2826.790 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32439.30 rows=2298393 width=0) (actual time=456.854..456.854 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=65775.53..65775.53 rows=300000 width=41) (actual time=625.256..625.256 rows=299436 loops=1)
                                             ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=41) (actual time=1.386..570.609 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.734..412.818 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.646..0.646 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.641..0.645 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.314..0.315 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.321..0.321 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.318..0.319 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=46.010..46.010 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.298..33.115 rows=100000 loops=1)
 Total runtime: 23430.289 ms
(31 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3468660.37..3468660.38 rows=1 width=51) (actual time=22678.846..22678.846 rows=1 loops=1)
   ->  Sort  (cost=3468660.37..3468660.44 rows=25 width=51) (actual time=22678.846..22678.846 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3468659.36..3468659.79 rows=25 width=51) (actual time=22678.832..22678.833 rows=5 loops=1)
               ->  Hash Join  (cost=527447.01..3468291.68 rows=73535 width=51) (actual time=5428.615..22597.351 rows=72033 loops=1)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Merge Join  (cost=522364.01..3425707.55 rows=1838289 width=63) (actual time=5383.010..21467.244 rows=1815327 loops=1)
                           Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2725805.00 rows=59986052 width=30) (actual time=1.184..11864.560 rows=59986036 loops=1)
                           ->  Sort  (cost=522364.01..523513.21 rows=459679 width=41) (actual time=5381.205..5635.992 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=102539.43..469028.09 rows=459679 width=41) (actual time=1080.885..5024.174 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=33013.90..386286.79 rows=2298393 width=8) (actual time=519.235..2479.924 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32439.30 rows=2298393 width=0) (actual time=449.703..449.703 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=65775.53..65775.53 rows=300000 width=41) (actual time=561.407..561.407 rows=299436 loops=1)
                                             ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=41) (actual time=0.846..494.970 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.409..338.104 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.426..0.426 rows=5 loops=1)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.412..0.420 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.179..0.181 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.218..0.218 rows=1 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.207..0.210 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=43.273..43.273 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.289..30.428 rows=100000 loops=1)
 Total runtime: 22683.435 ms
(31 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1239849.84..1239849.85 rows=1 width=22) (actual time=19947.374..19947.375 rows=1 loops=1)
   ->  Aggregate  (cost=1239849.84..1239849.85 rows=1 width=22) (actual time=19947.373..19947.373 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=239307.64..1236903.45 rows=1178555 width=22) (actual time=1320.869..19445.259 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..239013.00 rows=1178555 width=0) (actual time=1260.798..1260.798 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 19947.408 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1239849.84..1239849.85 rows=1 width=22) (actual time=6594.804..6594.804 rows=1 loops=1)
   ->  Aggregate  (cost=1239849.84..1239849.85 rows=1 width=22) (actual time=6594.802..6594.802 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=239307.64..1236903.45 rows=1178555 width=22) (actual time=1107.914..6162.704 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..239013.00 rows=1178555 width=0) (actual time=1048.423..1048.423 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 6594.833 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3301054.49..3301054.53 rows=1 width=84) (actual time=36680.277..36680.278 rows=1 loops=1)
   ->  GroupAggregate  (cost=3301054.49..3303108.43 rows=58684 width=84) (actual time=36680.276..36680.276 rows=1 loops=1)
         ->  Sort  (cost=3301054.49..3301201.20 rows=58684 width=84) (actual time=36671.710..36672.415 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=990283.18..3296406.52 rows=58684 width=84) (actual time=13737.069..36602.330 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=985200.18..3261102.55 rows=1467037 width=92) (actual time=13687.496..35754.687 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=352458.68..2207039.28 rows=18352640 width=34) (actual time=3821.145..17160.170 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..347870.52 rows=18352640 width=0) (actual time=3736.984..3736.984 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=602530.50..602530.50 rows=1199040 width=66) (actual time=9866.225..9866.225 rows=1191175 loops=1)
                                 ->  Hash Join  (cost=65493.10..602530.50 rows=1199040 width=66) (actual time=559.721..9570.737 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..468797.00 rows=15000000 width=8) (actual time=0.688..2352.856 rows=15000000 loops=1)
                                       ->  Hash  (cost=63994.30..63994.30 rows=119904 width=66) (actual time=559.014..559.014 rows=119622 loops=1)
                                             ->  Hash Join  (cost=21.30..63994.30 rows=119904 width=66) (actual time=1.140..532.147 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.708..399.327 rows=1500000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.427..0.427 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.388..0.425 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.312..0.315 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.002..0.005 rows=25 loops=1)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=46.012..46.012 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.379..33.185 rows=100000 loops=1)
 Total runtime: 36680.393 ms
(29 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3301054.49..3301054.53 rows=1 width=84) (actual time=35663.087..35663.087 rows=1 loops=1)
   ->  GroupAggregate  (cost=3301054.49..3303108.43 rows=58684 width=84) (actual time=35663.085..35663.085 rows=1 loops=1)
         ->  Sort  (cost=3301054.49..3301201.20 rows=58684 width=84) (actual time=35654.483..35655.204 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=990283.18..3296406.52 rows=58684 width=84) (actual time=13352.890..35586.550 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=985200.18..3261102.55 rows=1467037 width=92) (actual time=13305.689..34754.018 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=352458.68..2207039.28 rows=18352640 width=34) (actual time=3635.308..16414.636 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..347870.52 rows=18352640 width=0) (actual time=3551.534..3551.534 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=602530.50..602530.50 rows=1199040 width=66) (actual time=9670.257..9670.257 rows=1191175 loops=1)
                                 ->  Hash Join  (cost=65493.10..602530.50 rows=1199040 width=66) (actual time=487.306..9373.837 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..468797.00 rows=15000000 width=8) (actual time=0.427..2197.624 rows=15000000 loops=1)
                                       ->  Hash  (cost=63994.30..63994.30 rows=119904 width=66) (actual time=486.858..486.858 rows=119622 loops=1)
                                             ->  Hash Join  (cost=21.30..63994.30 rows=119904 width=66) (actual time=0.852..462.169 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.421..330.568 rows=1500000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.425..0.425 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.385..0.421 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.310..0.311 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.002..0.005 rows=25 loops=1)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=43.809..43.809 rows=100000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.291..30.857 rows=100000 loops=1)
 Total runtime: 35663.200 ms
(29 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1341893.11..1341893.11 rows=1 width=55) (actual time=63837.353..63837.353 rows=1 loops=1)
   ->  Sort  (cost=1341893.11..1341894.93 rows=729 width=55) (actual time=63837.352..63837.352 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1341832.93..1341858.45 rows=729 width=55) (actual time=63837.337..63837.339 rows=2 loops=1)
               ->  Hash Join  (cost=568404.98..1341651.33 rows=24214 width=55) (actual time=7417.589..63786.130 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=568403.41..1341195.75 rows=24214 width=30) (actual time=7417.391..63758.163 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=563570.41..1335878.47 rows=24214 width=30) (actual time=7373.020..63694.953 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..759881.30 rows=399897 width=30) (actual time=2.547..55834.458 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..76082.00 rows=13333 width=4) (actual time=1.228..515.949 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.90 rows=31 width=34) (actual time=0.315..4.232 rows=30 loops=13011)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=547782.24..547782.24 rows=908254 width=8) (actual time=7362.989..7362.989 rows=910360 loops=1)
                                       ->  Hash Join  (cost=134753.91..547782.24 rows=908254 width=8) (actual time=1568.844..7169.452 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65228.37..452144.41 rows=4541269 width=12) (actual time=971.575..3323.387 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64093.06 rows=4541269 width=0) (actual time=903.975..903.975 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=65775.53..65775.53 rows=300000 width=4) (actual time=597.222..597.222 rows=299436 loops=1)
                                                   ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=4) (actual time=0.656..555.640 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.426..408.468 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.221..0.221 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.211..0.218 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.005 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.201..0.201 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.196..0.198 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=44.355..44.355 rows=100000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.345..32.398 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.184..0.184 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.169..0.174 rows=25 loops=1)
 Total runtime: 63837.776 ms
(38 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1341893.11..1341893.11 rows=1 width=55) (actual time=7962.464..7962.464 rows=1 loops=1)
   ->  Sort  (cost=1341893.11..1341894.93 rows=729 width=55) (actual time=7962.463..7962.463 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1341832.93..1341858.45 rows=729 width=55) (actual time=7962.449..7962.450 rows=2 loops=1)
               ->  Hash Join  (cost=568404.98..1341651.33 rows=24214 width=55) (actual time=6110.328..7939.335 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=568403.41..1341195.75 rows=24214 width=30) (actual time=6110.296..7926.156 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=563570.41..1335878.47 rows=24214 width=30) (actual time=6073.623..7874.760 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..759881.30 rows=399897 width=30) (actual time=0.111..1566.239 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..76082.00 rows=13333 width=4) (actual time=0.066..284.229 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.90 rows=31 width=34) (actual time=0.008..0.094 rows=30 loops=13011)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=547782.24..547782.24 rows=908254 width=8) (actual time=6073.014..6073.014 rows=910360 loops=1)
                                       ->  Hash Join  (cost=134753.91..547782.24 rows=908254 width=8) (actual time=1343.208..5895.729 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65228.37..452144.41 rows=4541269 width=12) (actual time=907.662..2361.928 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64093.06 rows=4541269 width=0) (actual time=840.673..840.673 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=65775.53..65775.53 rows=300000 width=4) (actual time=435.517..435.517 rows=299436 loops=1)
                                                   ->  Hash Join  (cost=2.53..65775.53 rows=300000 width=4) (actual time=0.035..399.248 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.009..257.609 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.023..0.023 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.018..0.020 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=36.661..36.661 rows=100000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.013..24.760 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.018..0.018 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.011..0.012 rows=25 loops=1)
 Total runtime: 7962.580 ms
(38 rows)

query 9 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1717958.02..1717958.06 rows=1 width=76) (actual time=364345.562..364345.563 rows=1 loops=1)
   ->  GroupAggregate  (cost=1717958.02..1717960.76 rows=73 width=76) (actual time=364345.561..364345.561 rows=1 loops=1)
         ->  Sort  (cost=1717958.02..1717958.21 rows=73 width=76) (actual time=364316.934..364336.635 rows=11401 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..1717955.76 rows=73 width=76) (actual time=5.160..332019.994 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=0.00..1717880.20 rows=73 width=51) (actual time=4.686..324387.755 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=0.00..1717642.47 rows=73 width=55) (actual time=3.798..316568.802 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=0.00..1717359.64 rows=73 width=55) (actual time=2.914..232868.543 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.00..327988.31 rows=242424 width=23) (actual time=1.729..3138.067 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=60606 width=4) (actual time=0.524..1147.690 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=20 width=19) (actual time=0.015..0.017 rows=4 loops=108312)
                                                   Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=44) (actual time=0.075..0.527 rows=7 loops=433248)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8) (actual time=0.025..0.025 rows=1 loops=3248192)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33) (actual time=0.001..0.001 rows=1 loops=3248192)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 364369.501 ms
(22 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1717958.02..1717958.06 rows=1 width=76) (actual time=249317.888..249317.888 rows=1 loops=1)
   ->  GroupAggregate  (cost=1717958.02..1717960.76 rows=73 width=76) (actual time=249317.887..249317.887 rows=1 loops=1)
         ->  Sort  (cost=1717958.02..1717958.21 rows=73 width=76) (actual time=249289.220..249308.897 rows=11401 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..1717955.76 rows=73 width=76) (actual time=2.420..219433.759 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=0.00..1717880.20 rows=73 width=51) (actual time=2.183..212758.452 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=0.00..1717642.47 rows=73 width=55) (actual time=1.891..205951.435 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=0.00..1717359.64 rows=73 width=55) (actual time=1.633..158647.409 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.00..327988.31 rows=242424 width=23) (actual time=1.085..2901.333 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=60606 width=4) (actual time=0.307..1061.245 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=20 width=19) (actual time=0.014..0.016 rows=4 loops=108312)
                                                   Index Cond: (part.p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.72 rows=1 width=44) (actual time=0.052..0.356 rows=7 loops=433248)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=3248192)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=3248192)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33) (actual time=0.001..0.001 rows=1 loops=3248192)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 249339.162 ms
(22 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3210023.04..3210023.09 rows=20 width=211) (actual time=31426.916..31426.922 rows=20 loops=1)
   ->  Sort  (cost=3210023.04..3211359.55 rows=534605 width=211) (actual time=31426.915..31426.918 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3101359.96..3122744.16 rows=534605 width=211) (actual time=29114.015..30784.556 rows=381205 loops=1)
               ->  Sort  (cost=3101359.96..3102696.47 rows=534605 width=211) (actual time=29113.994..29857.065 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=436496.59..3014081.09 rows=534605 width=211) (actual time=4069.715..23704.738 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=436495.03..3006728.71 rows=534605 width=186) (actual time=4069.524..23498.696 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=323975.03..2840545.38 rows=534605 width=26) (actual time=3049.489..21377.256 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14568612 width=26) (actual time=0.543..12910.117 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=317094.59..317094.59 rows=550435 width=8) (actual time=3048.211..3048.211 rows=573160 loops=1)
                                             ->  Bitmap Heap Scan on orders  (cost=7907.83..317094.59 rows=550435 width=8) (actual time=178.950..2916.483 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7770.22 rows=550435 width=0) (actual time=121.881..121.881 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=164) (actual time=1018.891..1018.891 rows=1500000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=164) (actual time=0.440..544.158 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.181..0.181 rows=25 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.166..0.171 rows=25 loops=1)
 Total runtime: 31475.552 ms
(24 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3210023.04..3210023.09 rows=20 width=211) (actual time=32242.182..32242.188 rows=20 loops=1)
   ->  Sort  (cost=3210023.04..3211359.55 rows=534605 width=211) (actual time=32242.180..32242.185 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3101359.96..3122744.16 rows=534605 width=211) (actual time=29892.905..31578.788 rows=381205 loops=1)
               ->  Sort  (cost=3101359.96..3102696.47 rows=534605 width=211) (actual time=29892.885..30642.906 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=436496.59..3014081.09 rows=534605 width=211) (actual time=3748.452..24471.717 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=436495.03..3006728.71 rows=534605 width=186) (actual time=3748.280..24266.256 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=323975.03..2840545.38 rows=534605 width=26) (actual time=2799.314..20740.495 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14568612 width=26) (actual time=0.417..12432.999 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=317094.59..317094.59 rows=550435 width=8) (actual time=2798.224..2798.224 rows=573160 loops=1)
                                             ->  Bitmap Heap Scan on orders  (cost=7907.83..317094.59 rows=550435 width=8) (actual time=176.448..2660.178 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7770.22 rows=550435 width=0) (actual time=119.897..119.897 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=164) (actual time=947.778..947.778 rows=1500000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=164) (actual time=0.261..474.532 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.162..0.162 rows=25 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.155..0.156 rows=25 loops=1)
 Total runtime: 32300.670 ms
(24 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=681237.87..681237.87 rows=1 width=19) (actual time=4684.144..4684.144 rows=0 loops=1)
   InitPlan
     ->  Aggregate  (cost=305758.59..305758.60 rows=1 width=15) (actual time=1475.077..1475.077 rows=1 loops=1)
           ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=15) (actual time=2.385..1366.384 rows=320800 loops=1)
                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19) (actual time=0.005..494.656 rows=8000000 loops=1)
                 ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4) (actual time=2.362..2.362 rows=4010 loops=1)
                       ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4) (actual time=0.534..2.014 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8) (actual time=0.524..1.657 rows=4010 loops=1)
                                   Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.331..0.331 rows=4010 loops=1)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
   ->  Sort  (cost=375479.26..376279.26 rows=320000 width=19) (actual time=4684.144..4684.144 rows=0 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=334218.92..346218.92 rows=320000 width=19) (actual time=4683.864..4683.864 rows=0 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=334218.92..335018.92 rows=320000 width=19) (actual time=3060.839..3085.054 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=19) (actual time=30.596..2843.210 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23) (actual time=0.453..1849.569 rows=8000000 loops=1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4) (actual time=30.047..30.047 rows=4010 loops=1)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4) (actual time=2.481..29.341 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.192..0.195 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8) (actual time=2.283..28.571 rows=4010 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=1.906..1.906 rows=4010 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 4685.681 ms
(32 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=681237.87..681237.87 rows=1 width=19) (actual time=3651.732..3651.732 rows=0 loops=1)
   InitPlan
     ->  Aggregate  (cost=305758.59..305758.60 rows=1 width=15) (actual time=1472.452..1472.453 rows=1 loops=1)
           ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=15) (actual time=2.367..1364.426 rows=320800 loops=1)
                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19) (actual time=0.005..494.568 rows=8000000 loops=1)
                 ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4) (actual time=2.345..2.345 rows=4010 loops=1)
                       ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4) (actual time=0.514..2.022 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8) (actual time=0.504..1.662 rows=4010 loops=1)
                                   Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.310..0.310 rows=4010 loops=1)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
   ->  Sort  (cost=375479.26..376279.26 rows=320000 width=19) (actual time=3651.732..3651.732 rows=0 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=334218.92..346218.92 rows=320000 width=19) (actual time=3651.709..3651.709 rows=0 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=334218.92..335018.92 rows=320000 width=19) (actual time=2031.321..2055.287 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=2519.58..304958.58 rows=320000 width=19) (actual time=7.881..1831.337 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23) (actual time=0.007..948.327 rows=8000000 loops=1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=4) (actual time=7.845..7.845 rows=4010 loops=1)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=4) (actual time=0.573..7.434 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=8) (actual time=0.561..6.984 rows=4010 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.357..0.357 rows=4010 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 3653.229 ms
(32 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3601477.99..3601477.99 rows=1 width=33) (actual time=22159.509..22159.509 rows=1 loops=1)
   ->  Sort  (cost=3601477.99..3601477.99 rows=1 width=33) (actual time=22159.508..22159.508 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3601477.95..3601477.98 rows=1 width=33) (actual time=22159.476..22159.476 rows=2 loops=1)
               ->  Merge Join  (cost=2952634.30..3599506.92 rows=262804 width=33) (actual time=18215.032..22023.728 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=23) (actual time=0.956..2789.580 rows=14999967 loops=1)
                     ->  Sort  (cost=2952634.30..2953291.31 rows=262804 width=18) (actual time=18213.999..18259.552 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2928977.17 rows=262804 width=18) (actual time=1.050..17971.665 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 22161.591 ms
(12 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3601477.99..3601477.99 rows=1 width=33) (actual time=21355.008..21355.008 rows=1 loops=1)
   ->  Sort  (cost=3601477.99..3601477.99 rows=1 width=33) (actual time=21355.008..21355.008 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3601477.95..3601477.98 rows=1 width=33) (actual time=21354.975..21354.976 rows=2 loops=1)
               ->  Merge Join  (cost=2952634.30..3599506.92 rows=262804 width=33) (actual time=17512.212..21219.146 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=23) (actual time=0.654..2691.529 rows=14999967 loops=1)
                     ->  Sort  (cost=2952634.30..2953291.31 rows=262804 width=18) (actual time=17511.528..17555.762 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2928977.17 rows=262804 width=18) (actual time=0.758..17268.128 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 21356.837 ms
(12 rows)

query 13 run 1
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2874573.83..2874573.83 rows=1 width=8) (actual time=30920.653..30920.653 rows=1 loops=1)
   ->  Sort  (cost=2874573.83..2874574.33 rows=200 width=8) (actual time=30920.653..30920.653 rows=1 loops=1)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=2874563.68..2874566.18 rows=200 width=8) (actual time=30920.629..30920.633 rows=46 loops=1)
               ->  GroupAggregate  (cost=2458770.83..2852063.68 rows=1500000 width=8) (actual time=25914.463..30734.603 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2458770.83..2758321.17 rows=14998502 width=8) (actual time=25914.449..29449.112 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..70822.81 rows=1500000 width=4) (actual time=1.382..331.546 rows=1500000 loops=1)
                           ->  Sort  (cost=2458770.83..2496267.09 rows=14998502 width=8) (actual time=25913.060..27233.240 rows=14837583 loops=1)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..506297.00 rows=14998502 width=8) (actual time=0.471..8992.899 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 30974.450 ms
(13 rows)

SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2874573.83..2874573.83 rows=1 width=8) (actual time=29529.951..29529.952 rows=1 loops=1)
   ->  Sort  (cost=2874573.83..2874574.33 rows=200 width=8) (actual time=29529.950..29529.950 rows=1 loops=1)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=2874563.68..2874566.18 rows=200 width=8) (actual time=29529.925..29529.929 rows=46 loops=1)
               ->  GroupAggregate  (cost=2458770.83..2852063.68 rows=1500000 width=8) (actual time=24612.513..29347.862 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2458770.83..2758321.17 rows=14998502 width=8) (actual time=24612.499..28061.624 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..70822.81 rows=1500000 width=4) (actual time=0.041..260.101 rows=1500000 loops=1)
                           ->  Sort  (cost=2458770.83..2496267.09 rows=14998502 width=8) (actual time=24612.453..25924.089 rows=14837583 loops=1)
                                 Sort Key: orders.o_custkey
                                 ->  Seq Scan on orders  (cost=0.00..506297.00 rows=14998502 width=8) (actual time=0.013..7924.391 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 29584.568 ms
(13 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=898219.75..898219.77 rows=1 width=46) (actual time=27048.992..27048.992 rows=1 loops=1)
   ->  Aggregate  (cost=898219.75..898219.77 rows=1 width=46) (actual time=27048.992..27048.992 rows=1 loops=1)
         ->  Hash Join  (cost=125901.25..894526.02 rows=738744 width=46) (actual time=1247.313..26472.852 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14194.25..739028.28 rows=738744 width=26) (actual time=314.001..24398.473 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14009.56 rows=738744 width=0) (actual time=212.586..212.586 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=71082.00..71082.00 rows=2000000 width=28) (actual time=932.039..932.039 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..71082.00 rows=2000000 width=28) (actual time=0.533..615.862 rows=2000000 loops=1)
 Total runtime: 27049.135 ms
(11 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=898219.75..898219.77 rows=1 width=46) (actual time=4218.967..4218.968 rows=1 loops=1)
   ->  Aggregate  (cost=898219.75..898219.77 rows=1 width=46) (actual time=4218.966..4218.966 rows=1 loops=1)
         ->  Hash Join  (cost=125901.25..894526.02 rows=738744 width=46) (actual time=1042.872..3730.345 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=14194.25..739028.28 rows=738744 width=26) (actual time=296.884..2035.428 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14009.56 rows=738744 width=0) (actual time=196.291..196.291 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=71082.00..71082.00 rows=2000000 width=28) (actual time=745.780..745.780 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..71082.00 rows=2000000 width=28) (actual time=0.011..439.735 rows=2000000 loops=1)
 Total runtime: 4219.091 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2959164.66..2959165.91 rows=1 width=112) (actual time=26678.886..26678.886 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=1476575.73..1476575.74 rows=1 width=32) (actual time=6675.722..6675.722 rows=1 loops=1)
           ->  HashAggregate  (cost=1476460.89..1476527.88 rows=3828 width=26) (actual time=6648.452..6670.088 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=44228.44..1464947.56 rows=2302665 width=26) (actual time=599.054..4845.500 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43652.77 rows=2302665 width=0) (actual time=538.284..538.284 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1482588.91..1487394.09 rows=3828 width=112) (actual time=26678.886..26678.886 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4497.75 rows=100000 width=80) (actual time=1.052..21.343 rows=69998 loops=1)
         ->  Sort  (cost=1482588.91..1482598.48 rows=3828 width=36) (actual time=26653.299..26653.299 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1482217.55..1482361.10 rows=3828 width=36) (actual time=26645.522..26653.277 rows=1 loops=1)
                     ->  HashAggregate  (cost=1482217.55..1482322.82 rows=3828 width=26) (actual time=26645.520..26653.274 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=44228.44..1464947.56 rows=2302665 width=26) (actual time=698.995..17986.480 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43652.77 rows=2302665 width=0) (actual time=636.978..636.978 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 26679.447 ms
(21 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2959164.66..2959165.91 rows=1 width=112) (actual time=13868.475..13868.475 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=1476575.73..1476575.74 rows=1 width=32) (actual time=6638.625..6638.625 rows=1 loops=1)
           ->  HashAggregate  (cost=1476460.89..1476527.88 rows=3828 width=26) (actual time=6611.429..6633.354 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=44228.44..1464947.56 rows=2302665 width=26) (actual time=598.692..4840.395 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43652.77 rows=2302665 width=0) (actual time=537.811..537.811 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1482588.91..1487394.09 rows=3828 width=112) (actual time=13868.475..13868.475 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4497.75 rows=100000 width=80) (actual time=0.038..10.514 rows=69998 loops=1)
         ->  Sort  (cost=1482588.91..1482598.48 rows=3828 width=36) (actual time=13854.002..13854.002 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1482217.55..1482361.10 rows=3828 width=36) (actual time=13846.230..13853.993 rows=1 loops=1)
                     ->  HashAggregate  (cost=1482217.55..1482322.82 rows=3828 width=26) (actual time=13846.229..13853.990 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=44228.44..1464947.56 rows=2302665 width=26) (actual time=633.824..5389.092 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..43652.77 rows=2302665 width=0) (actual time=572.530..572.530 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 13868.696 ms
(21 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=533289.18..533289.18 rows=1 width=46) (actual time=22447.287..22447.287 rows=1 loops=1)
   ->  Sort  (cost=533289.18..533354.81 rows=26253 width=46) (actual time=22447.287..22447.287 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=524033.42..531362.19 rows=26253 width=46) (actual time=19265.263..22331.725 rows=27838 loops=1)
               ->  Sort  (cost=524033.42..525433.54 rows=560048 width=46) (actual time=19265.051..22007.837 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=108415.32..458254.80 rows=560048 width=46) (actual time=1039.314..5721.646 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3833.03..293072.03 rows=4000000 width=8) (actual time=55.957..2768.102 rows=7995520 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=10 width=4) (actual time=1.128..55.476 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=101082.00..101082.00 rows=280024 width=46) (actual time=983.307..983.307 rows=296733 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..101082.00 rows=280024 width=46) (actual time=0.790..920.470 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 22457.447 ms
(17 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=533289.18..533289.18 rows=1 width=46) (actual time=20958.299..20958.299 rows=1 loops=1)
   ->  Sort  (cost=533289.18..533354.81 rows=26253 width=46) (actual time=20958.297..20958.297 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=524033.42..531362.19 rows=26253 width=46) (actual time=17777.462..20842.754 rows=27838 loops=1)
               ->  Sort  (cost=524033.42..525433.54 rows=560048 width=46) (actual time=17777.268..20515.698 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=108415.32..458254.80 rows=560048 width=46) (actual time=751.223..4472.467 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3833.03..293072.03 rows=4000000 width=8) (actual time=42.959..1821.985 rows=7995520 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=10 width=4) (actual time=0.168..42.908 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=101082.00..101082.00 rows=280024 width=46) (actual time=708.219..708.219 rows=296733 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..101082.00 rows=280024 width=46) (actual time=0.015..659.220 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20969.484 ms
(17 rows)

query 17 run 1
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11411461.11..11411461.12 rows=1 width=13) (actual time=149192.644..149192.644 rows=1 loops=1)
   ->  Aggregate  (cost=11411461.11..11411461.12 rows=1 width=13) (actual time=149192.644..149192.644 rows=1 loops=1)
         ->  Nested Loop  (cost=10800822.14..11411406.50 rows=21845 width=13) (actual time=82192.267..149183.886 rows=5319 loops=1)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Merge Join  (cost=10800822.14..11303599.48 rows=2100 width=40) (actual time=82189.965..139668.403 rows=1996 loops=1)
                     Merge Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10719618.94..11198341.62 rows=1921819 width=14) (actual time=81781.079..139148.526 rows=1999333 loops=1)
                           ->  Sort  (cost=10719618.94..10869584.07 rows=59986052 width=14) (actual time=81781.021..103275.470 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14) (actual time=0.443..11130.301 rows=59986052 loops=1)
                     ->  Sort  (cost=81203.20..81208.66 rows=2185 width=4) (actual time=392.662..393.600 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=2185 width=4) (actual time=1.305..392.050 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.87 rows=31 width=27) (actual time=0.627..4.739 rows=30 loops=1996)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
 Total runtime: 150220.659 ms
(17 rows)

SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11411461.11..11411461.12 rows=1 width=13) (actual time=150260.879..150260.880 rows=1 loops=1)
   ->  Aggregate  (cost=11411461.11..11411461.12 rows=1 width=13) (actual time=150260.878..150260.878 rows=1 loops=1)
         ->  Nested Loop  (cost=10800822.14..11411406.50 rows=21845 width=13) (actual time=82398.238..150251.286 rows=5319 loops=1)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Merge Join  (cost=10800822.14..11303599.48 rows=2100 width=40) (actual time=82395.594..140240.036 rows=1996 loops=1)
                     Merge Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10719618.94..11198341.62 rows=1921819 width=14) (actual time=81972.790..139705.165 rows=1999333 loops=1)
                           ->  Sort  (cost=10719618.94..10869584.07 rows=59986052 width=14) (actual time=81972.732..103784.758 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14) (actual time=0.239..10785.002 rows=59986052 loops=1)
                     ->  Sort  (cost=81203.20..81208.66 rows=2185 width=4) (actual time=406.561..407.596 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=2185 width=4) (actual time=1.122..405.923 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.87 rows=31 width=27) (actual time=0.683..4.985 rows=30 loops=1996)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
 Total runtime: 151225.750 ms
(17 rows)

query 18 run 1
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6359938.76..6359941.76 rows=100 width=57) (actual time=42874.824..42875.071 rows=99 loops=1)
   ->  GroupAggregate  (cost=6359938.76..6394865.51 rows=1164225 width=57) (actual time=42874.824..42875.065 rows=99 loops=1)
         ->  Sort  (cost=6359938.76..6362849.33 rows=1164225 width=57) (actual time=42874.812..42874.834 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=3796197.17..6211938.63 rows=1164225 width=57) (actual time=30713.851..42873.763 rows=693 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14) (actual time=0.613..8806.899 rows=59986052 loops=1)
                     ->  Hash  (cost=3792558.12..3792558.12 rows=291124 width=51) (actual time=30436.441..30436.441 rows=99 loops=1)
                           ->  Hash Join  (cost=3120921.48..3792558.12 rows=291124 width=51) (actual time=3639.935..30436.385 rows=99 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=3033304.48..3682849.64 rows=291124 width=29) (actual time=804.271..29630.913 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=25) (actual time=1.400..2860.742 rows=14982724 loops=1)
                                       ->  Materialize  (cost=3033304.48..3036215.72 rows=291124 width=4) (actual time=688.262..25885.040 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.00..3030102.12 rows=291124 width=14) (actual time=688.258..25884.829 rows=99 loops=1)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2725805.00 rows=59986052 width=14) (actual time=1.343..12969.003 rows=59986052 loops=1)
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=26) (actual time=708.883..708.883 rows=1500000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=26) (actual time=0.600..478.713 rows=1500000 loops=1)
 Total runtime: 42875.157 ms
(20 rows)

SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6359938.76..6359941.76 rows=100 width=57) (actual time=41765.685..41765.934 rows=99 loops=1)
   ->  GroupAggregate  (cost=6359938.76..6394865.51 rows=1164225 width=57) (actual time=41765.685..41765.930 rows=99 loops=1)
         ->  Sort  (cost=6359938.76..6362849.33 rows=1164225 width=57) (actual time=41765.666..41765.692 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=3796197.17..6211938.63 rows=1164225 width=57) (actual time=29682.788..41764.597 rows=693 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14) (actual time=0.245..8774.558 rows=59986052 loops=1)
                     ->  Hash  (cost=3792558.12..3792558.12 rows=291124 width=51) (actual time=29404.555..29404.555 rows=99 loops=1)
                           ->  Hash Join  (cost=3120921.48..3792558.12 rows=291124 width=51) (actual time=3281.738..29404.387 rows=99 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=3033304.48..3682849.64 rows=291124 width=29) (actual time=723.183..28665.034 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..605494.87 rows=15000000 width=25) (actual time=1.164..2733.115 rows=14982724 loops=1)
                                       ->  Materialize  (cost=3033304.48..3036215.72 rows=291124 width=4) (actual time=620.245..25062.019 rows=99 loops=1)
                                             ->  GroupAggregate  (cost=0.00..3030102.12 rows=291124 width=14) (actual time=620.242..25061.831 rows=99 loops=1)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2725805.00 rows=59986052 width=14) (actual time=1.103..12216.299 rows=59986052 loops=1)
                                 ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=26) (actual time=641.565..641.565 rows=1500000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=26) (actual time=0.262..403.195 rows=1500000 loops=1)
 Total runtime: 41766.057 ms
(20 rows)

query 19 run 1
SET
SET


 Limit  (cost=3604490.72..3604490.74 rows=1 width=22) (actual time=20107.079..20107.079 rows=1 loops=1)
   ->  Aggregate  (cost=3604490.72..3604490.74 rows=1 width=22) (actual time=20107.079..20107.079 rows=1 loops=1)
         ->  Hash Join  (cost=118661.00..3604488.00 rows=1089 width=22) (actual time=1403.685..20105.942 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..3378872.56 rows=1116087 width=36) (actual time=0.566..17947.439 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=76082.00..76082.00 rows=2000000 width=36) (actual time=1068.591..1068.591 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=2000000 width=36) (actual time=0.450..698.568 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 20107.343 ms
(11 rows)

SET
SET


 Limit  (cost=3604490.72..3604490.74 rows=1 width=22) (actual time=16566.550..16566.550 rows=1 loops=1)
   ->  Aggregate  (cost=3604490.72..3604490.74 rows=1 width=22) (actual time=16566.549..16566.549 rows=1 loops=1)
         ->  Hash Join  (cost=118661.00..3604488.00 rows=1089 width=22) (actual time=1130.999..16565.460 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..3378872.56 rows=1116087 width=36) (actual time=0.070..14660.755 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=76082.00..76082.00 rows=2000000 width=36) (actual time=882.157..882.157 rows=2000000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=2000000 width=36) (actual time=0.011..521.334 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 16566.808 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3340858.15..3340858.16 rows=1 width=57) (actual time=37648.235..37648.235 rows=1 loops=1)
   ->  Sort  (cost=3340858.15..3340858.16 rows=1 width=57) (actual time=37648.234..37648.234 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=3340853.82..3340858.14 rows=1 width=57) (actual time=37115.695..37639.345 rows=1821 loops=1)
               ->  Nested Loop  (cost=3340853.82..3340857.11 rows=1 width=61) (actual time=37114.939..37591.595 rows=44712 loops=1)
                     ->  HashAggregate  (cost=3340853.82..3340853.83 rows=1 width=8) (actual time=37114.081..37126.346 rows=44712 loops=1)
                           ->  Nested Loop  (cost=3189699.78..3340853.81 rows=1 width=8) (actual time=23517.822..37057.152 rows=59002 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Merge Join  (cost=3189699.78..3308104.36 rows=9365 width=44) (actual time=23516.461..31942.969 rows=59125 loops=1)
                                       Merge Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=3111920.58..3218541.30 rows=927137 width=18) (actual time=23131.578..31235.712 rows=5448473 loops=1)
                                             ->  Sort  (cost=3111920.58..3135099.00 rows=9271366 width=18) (actual time=23131.564..27733.768 rows=9123091 loops=1)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=178057.62..1896419.11 rows=9271366 width=18) (actual time=2192.126..15128.409 rows=9123688 loops=1)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..175739.78 rows=9271366 width=0) (actual time=2098.311..2098.311 rows=9123688 loops=1)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=77779.19..77829.70 rows=20202 width=4) (actual time=384.475..394.285 rows=59320 loops=1)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=76132.51..76334.53 rows=20202 width=4) (actual time=374.866..377.777 rows=21718 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..76082.00 rows=20202 width=4) (actual time=0.753..368.274 rows=21718 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.48 rows=1 width=12) (actual time=0.085..0.085 rows=1 loops=59125)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65) (actual time=0.010..0.010 rows=1 loops=44712)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=44712)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 37826.411 ms
(30 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3340858.15..3340858.16 rows=1 width=57) (actual time=36005.769..36005.769 rows=1 loops=1)
   ->  Sort  (cost=3340858.15..3340858.16 rows=1 width=57) (actual time=36005.768..36005.768 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=3340853.82..3340858.14 rows=1 width=57) (actual time=35495.683..35996.900 rows=1821 loops=1)
               ->  Nested Loop  (cost=3340853.82..3340857.11 rows=1 width=61) (actual time=35494.927..35950.797 rows=44712 loops=1)
                     ->  HashAggregate  (cost=3340853.82..3340853.83 rows=1 width=8) (actual time=35494.115..35506.131 rows=44712 loops=1)
                           ->  Nested Loop  (cost=3189699.78..3340853.81 rows=1 width=8) (actual time=22392.236..35438.203 rows=59002 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Merge Join  (cost=3189699.78..3308104.36 rows=9365 width=44) (actual time=22391.502..30784.948 rows=59125 loops=1)
                                       Merge Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=3111920.58..3218541.30 rows=927137 width=18) (actual time=21916.229..29985.302 rows=5448473 loops=1)
                                             ->  Sort  (cost=3111920.58..3135099.00 rows=9271366 width=18) (actual time=21916.215..26484.717 rows=9123091 loops=1)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=178057.62..1896419.11 rows=9271366 width=18) (actual time=2092.571..13999.190 rows=9123688 loops=1)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..175739.78 rows=9271366 width=0) (actual time=1999.276..1999.276 rows=9123688 loops=1)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=77779.19..77829.70 rows=20202 width=4) (actual time=474.886..484.600 rows=59320 loops=1)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=76132.51..76334.53 rows=20202 width=4) (actual time=465.260..468.180 rows=21718 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..76082.00 rows=20202 width=4) (actual time=4.142..458.672 rows=21718 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.48 rows=1 width=12) (actual time=0.077..0.077 rows=1 loops=59125)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65) (actual time=0.009..0.010 rows=1 loops=44712)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=44712)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 36185.670 ms
(30 rows)

query 21 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20803981.49..20803981.74 rows=100 width=29) (actual time=130490.443..130490.452 rows=100 loops=1)
   ->  Sort  (cost=20803981.49..20804225.77 rows=97711 width=29) (actual time=130490.442..130490.448 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=20794661.70..20795883.09 rows=97711 width=29) (actual time=130476.305..130477.187 rows=3991 loops=1)
               ->  Nested Loop  (cost=2519.58..20794173.14 rows=97711 width=29) (actual time=33.141..130436.598 rows=39281 loops=1)
                     ->  Hash Join  (cost=2519.58..20019527.13 rows=199954 width=33) (actual time=32.088..123671.569 rows=80214 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..19996262.37 rows=4998838 width=8) (actual time=1.412..122990.859 rows=2016924 loops=1)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..15.35 rows=69 width=152) (actual time=0.001..0.001 rows=1 loops=36573988)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..14.84 rows=206 width=152) (actual time=0.001..0.001 rows=1 loops=37929348)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=33) (actual time=30.660..30.660 rows=3991 loops=1)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=33) (actual time=2.702..29.865 rows=3991 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.152..0.156 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=37) (actual time=2.547..29.065 rows=3991 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=2.062..2.062 rows=3991 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=4) (actual time=0.084..0.084 rows=0 loops=80214)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 130491.101 ms
(28 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20803981.49..20803981.74 rows=100 width=29) (actual time=128244.546..128244.554 rows=100 loops=1)
   ->  Sort  (cost=20803981.49..20804225.77 rows=97711 width=29) (actual time=128244.545..128244.549 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=20794661.70..20795883.09 rows=97711 width=29) (actual time=128230.407..128231.264 rows=3991 loops=1)
               ->  Nested Loop  (cost=2519.58..20794173.14 rows=97711 width=29) (actual time=34.788..128194.037 rows=39281 loops=1)
                     ->  Hash Join  (cost=2519.58..20019527.13 rows=199954 width=33) (actual time=34.053..122615.839 rows=80214 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..19996262.37 rows=4998838 width=8) (actual time=0.922..121940.468 rows=2016924 loops=1)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..15.35 rows=69 width=152) (actual time=0.001..0.001 rows=1 loops=36573988)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..14.84 rows=206 width=152) (actual time=0.001..0.001 rows=1 loops=37929348)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2469.58..2469.58 rows=4000 width=33) (actual time=33.113..33.113 rows=3991 loops=1)
                                 ->  Nested Loop  (cost=49.25..2469.58 rows=4000 width=33) (actual time=2.501..32.373 rows=3991 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.166..0.169 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2418.27 rows=4000 width=37) (actual time=2.330..31.651 rows=3991 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=1.844..1.844 rows=3991 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=4) (actual time=0.069..0.069 rows=0 loops=80214)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 128245.205 ms
(28 rows)

query 22 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2637232.35..2637232.38 rows=1 width=30) (actual time=10061.664..10061.664 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=81640.49..81640.50 rows=1 width=11) (actual time=1191.783..1191.783 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..81523.00 rows=46997 width=11) (actual time=0.004..958.314 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=2555591.84..2555850.44 rows=8620 width=30) (actual time=10061.663..10061.663 rows=1 loops=1)
         ->  Sort  (cost=2555591.84..2555613.39 rows=8620 width=30) (actual time=10059.232..10059.597 rows=9006 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2555028.37 rows=8620 width=30) (actual time=1192.944..10014.234 rows=63509 loops=1)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..29.68 rows=18 width=124) (actual time=0.040..0.040 rows=1 loops=191129)
                             Index Cond: (o_custkey = $1)
 Total runtime: 10061.745 ms
(14 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2637232.35..2637232.38 rows=1 width=30) (actual time=2242.984..2242.984 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=81640.49..81640.50 rows=1 width=11) (actual time=961.957..961.957 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..81523.00 rows=46997 width=11) (actual time=0.003..736.970 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=2555591.84..2555850.44 rows=8620 width=30) (actual time=2242.984..2242.984 rows=1 loops=1)
         ->  Sort  (cost=2555591.84..2555613.39 rows=8620 width=30) (actual time=2240.600..2240.943 rows=9006 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2555028.37 rows=8620 width=30) (actual time=962.012..2212.425 rows=63509 loops=1)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..29.68 rows=18 width=124) (actual time=0.003..0.003 rows=1 loops=191129)
                             Index Cond: (o_custkey = $1)
 Total runtime: 2243.029 ms
(14 rows)

