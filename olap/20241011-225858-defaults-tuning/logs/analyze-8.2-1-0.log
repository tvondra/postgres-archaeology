query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=381210.84..381210.84 rows=1 width=51) (actual time=19800.498..19800.498 rows=1 loops=1)
   ->  Sort  (cost=381210.84..381210.85 rows=6 width=51) (actual time=19800.498..19800.498 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=381210.49..381210.76 rows=6 width=51) (actual time=19800.464..19800.469 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=5928012 width=51) (actual time=0.440..2036.432 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 19800.769 ms
(7 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=381210.84..381210.84 rows=1 width=51) (actual time=19059.373..19059.373 rows=1 loops=1)
   ->  Sort  (cost=381210.84..381210.85 rows=6 width=51) (actual time=19059.372..19059.372 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=381210.49..381210.76 rows=6 width=51) (actual time=19059.339..19059.344 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=5928012 width=51) (actual time=0.009..1262.965 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 19059.436 ms
(7 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54399.96..54399.96 rows=1 width=215) (actual time=475.930..475.940 rows=100 loops=1)
   ->  Sort  (cost=54399.96..54399.96 rows=1 width=215) (actual time=475.930..475.934 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=8562.79..54399.95 rows=1 width=215) (actual time=70.156..475.117 rows=489 loops=1)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=444.03..32978.63 rows=159760 width=197) (actual time=7.277..315.209 rows=162880 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19) (actual time=0.341..190.837 rows=800000 loops=1)
                     ->  Hash  (cost=419.03..419.03 rows=2000 width=186) (actual time=6.907..6.907 rows=2036 loops=1)
                           ->  Hash Join  (cost=2.53..419.03 rows=2000 width=186) (actual time=0.689..6.246 rows=2036 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=161) (actual time=0.299..4.640 rows=10000 loops=1)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.383..0.383 rows=5 loops=1)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.374..0.379 rows=5 loops=1)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.198..0.200 rows=25 loops=1)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.169..0.169 rows=1 loops=1)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.165..0.167 rows=1 loops=1)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=8108.00..8108.00 rows=861 width=33) (actual time=60.588..60.588 rows=799 loops=1)
                     ->  Seq Scan on part  (cost=0.00..8108.00 rows=861 width=33) (actual time=0.287..60.285 rows=799 loops=1)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=11) (actual time=0.132..0.132 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=11) (actual time=0.117..0.129 rows=2 loops=650)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=15) (actual time=0.111..0.127 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=15) (actual time=0.109..0.122 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=15) (actual time=0.105..0.106 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 476.008 ms
(38 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54399.96..54399.96 rows=1 width=215) (actual time=255.778..255.785 rows=100 loops=1)
   ->  Sort  (cost=54399.96..54399.96 rows=1 width=215) (actual time=255.777..255.781 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=8562.79..54399.95 rows=1 width=215) (actual time=36.552..255.364 rows=489 loops=1)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=444.03..32978.63 rows=159760 width=197) (actual time=3.363..200.154 rows=162880 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19) (actual time=0.007..96.085 rows=800000 loops=1)
                     ->  Hash  (cost=419.03..419.03 rows=2000 width=186) (actual time=3.346..3.346 rows=2036 loops=1)
                           ->  Hash Join  (cost=2.53..419.03 rows=2000 width=186) (actual time=0.025..2.739 rows=2036 loops=1)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=161) (actual time=0.005..1.587 rows=10000 loops=1)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.018..0.018 rows=5 loops=1)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.013..0.016 rows=5 loops=1)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.003..0.004 rows=25 loops=1)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=8108.00..8108.00 rows=861 width=33) (actual time=33.061..33.061 rows=799 loops=1)
                     ->  Seq Scan on part  (cost=0.00..8108.00 rows=861 width=33) (actual time=0.010..32.917 rows=799 loops=1)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=11) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=11) (actual time=0.010..0.016 rows=2 loops=650)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=15) (actual time=0.006..0.014 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=15) (actual time=0.006..0.011 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=15) (actual time=0.004..0.004 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 255.847 ms
(38 rows)

query 3 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=383318.27..383318.29 rows=10 width=34) (actual time=3367.076..3367.077 rows=10 loops=1)
   ->  Sort  (cost=383318.27..384111.74 rows=317387 width=34) (actual time=3367.076..3367.077 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=344794.02..354315.63 rows=317387 width=34) (actual time=3344.733..3361.162 rows=11612 loops=1)
               ->  Sort  (cost=344794.02..345587.49 rows=317387 width=34) (actual time=3344.720..3345.871 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=67402.72..315791.38 rows=317387 width=34) (actual time=699.456..3335.962 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=3254561 width=26) (actual time=0.467..1917.296 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=65574.21..65574.21 rows=146281 width=12) (actual time=697.921..697.921 rows=146063 loops=1)
                                 ->  Hash Join  (cost=15053.06..65574.21 rows=146281 width=12) (actual time=128.421..674.180 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8581.74..49505.34 rows=723088 width=16) (actual time=71.847..370.411 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8400.97 rows=723088 width=0) (actual time=67.483..67.483 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=30345 width=4) (actual time=56.550..56.550 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=30345 width=4) (actual time=0.255..52.648 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 3367.119 ms
(21 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=383318.27..383318.29 rows=10 width=34) (actual time=2187.991..2187.992 rows=10 loops=1)
   ->  Sort  (cost=383318.27..384111.74 rows=317387 width=34) (actual time=2187.989..2187.990 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=344794.02..354315.63 rows=317387 width=34) (actual time=2165.704..2182.036 rows=11612 loops=1)
               ->  Sort  (cost=344794.02..345587.49 rows=317387 width=34) (actual time=2165.692..2166.789 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=67402.72..315791.38 rows=317387 width=34) (actual time=399.231..2159.106 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=3254561 width=26) (actual time=0.009..1191.763 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=65574.21..65574.21 rows=146281 width=12) (actual time=399.022..399.022 rows=146063 loops=1)
                                 ->  Hash Join  (cost=15053.06..65574.21 rows=146281 width=12) (actual time=88.633..379.848 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8581.74..49505.34 rows=723088 width=16) (actual time=52.905..196.830 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8400.97 rows=723088 width=0) (actual time=48.805..48.805 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=30345 width=4) (actual time=35.712..35.712 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=30345 width=4) (actual time=0.006..32.336 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2188.035 ms
(21 rows)

query 4 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61938.54..61938.54 rows=1 width=19) (actual time=3160.566..3160.566 rows=1 loops=1)
   ->  Sort  (cost=61938.54..61938.54 rows=1 width=19) (actual time=3160.566..3160.566 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=61938.52..61938.53 rows=1 width=19) (actual time=3160.524..3160.524 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=772.39..61803.07 rows=27090 width=19) (actual time=15.199..3133.154 rows=51398 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..765.62 rows=54181 width=0) (actual time=9.818..9.818 rows=55973 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.92 rows=7 width=152) (actual time=0.050..0.050 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 3160.927 ms
(14 rows)

SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61938.54..61938.54 rows=1 width=19) (actual time=354.559..354.559 rows=1 loops=1)
   ->  Sort  (cost=61938.54..61938.54 rows=1 width=19) (actual time=354.558..354.558 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=61938.52..61938.53 rows=1 width=19) (actual time=354.532..354.534 rows=5 loops=1)
               ->  Bitmap Heap Scan on orders  (cost=772.39..61803.07 rows=27090 width=19) (actual time=10.129..337.222 rows=51398 loops=1)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..765.62 rows=54181 width=0) (actual time=6.438..6.438 rows=55973 loops=1)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.92 rows=7 width=152) (actual time=0.004..0.004 rows=1 loops=55973)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 354.616 ms
(14 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=229831.32..229831.32 rows=1 width=51) (actual time=3346.812..3346.812 rows=1 loops=1)
   ->  Sort  (cost=229831.32..229831.38 rows=25 width=51) (actual time=3346.811..3346.811 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=229830.30..229830.74 rows=25 width=51) (actual time=3346.778..3346.780 rows=5 loops=1)
               ->  Hash Join  (cost=10722.74..229794.05 rows=7250 width=51) (actual time=106.663..3334.618 rows=7540 loops=1)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Nested Loop  (cost=10213.74..223771.23 rows=181377 width=63) (actual time=99.787..3203.653 rows=182435 loops=1)
                           ->  Hash Join  (cost=10213.74..47085.55 rows=45335 width=41) (actual time=98.410..544.086 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3256.71..38541.80 rows=226673 width=8) (actual time=34.189..334.630 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3200.04 rows=226673 width=0) (actual time=29.840..29.840 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=6582.03..6582.03 rows=30000 width=41) (actual time=64.198..64.198 rows=29952 loops=1)
                                       ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=41) (actual time=0.673..59.342 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.274..43.251 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.390..0.390 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.379..0.387 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.190..0.192 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.181..0.181 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.175..0.176 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.63 rows=21 width=30) (actual time=0.053..0.058 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=6.611..6.611 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.280..5.258 rows=10000 loops=1)
 Total runtime: 3347.153 ms
(29 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=229831.32..229831.32 rows=1 width=51) (actual time=560.217..560.217 rows=1 loops=1)
   ->  Sort  (cost=229831.32..229831.38 rows=25 width=51) (actual time=560.217..560.217 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=229830.30..229830.74 rows=25 width=51) (actual time=560.203..560.203 rows=5 loops=1)
               ->  Hash Join  (cost=10722.74..229794.05 rows=7250 width=51) (actual time=68.559..553.710 rows=7540 loops=1)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Nested Loop  (cost=10213.74..223771.23 rows=181377 width=63) (actual time=64.994..503.276 rows=182435 loops=1)
                           ->  Hash Join  (cost=10213.74..47085.55 rows=45335 width=41) (actual time=64.976..256.225 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3256.71..38541.80 rows=226673 width=8) (actual time=24.439..143.702 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3200.04 rows=226673 width=0) (actual time=20.339..20.339 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=6582.03..6582.03 rows=30000 width=41) (actual time=40.523..40.523 rows=29952 loops=1)
                                       ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=41) (actual time=0.030..36.342 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.005..20.729 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=33) (actual time=0.022..0.022 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=33) (actual time=0.018..0.022 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.005..0.005 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.63 rows=21 width=30) (actual time=0.004..0.005 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=3.540..3.540 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.008..2.185 rows=10000 loops=1)
 Total runtime: 560.302 ms
(29 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=124719.25..124719.26 rows=1 width=22) (actual time=1914.728..1914.729 rows=1 loops=1)
   ->  Aggregate  (cost=124719.25..124719.26 rows=1 width=22) (actual time=1914.727..1914.727 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=24030.07..124421.66 rows=119032 width=22) (actual time=127.988..1853.713 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24000.31 rows=119032 width=0) (actual time=115.551..115.551 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1914.756 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=124719.25..124719.26 rows=1 width=22) (actual time=319.964..319.964 rows=1 loops=1)
   ->  Aggregate  (cost=124719.25..124719.26 rows=1 width=22) (actual time=319.963..319.963 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=24030.07..124421.66 rows=119032 width=22) (actual time=94.225..274.661 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24000.31 rows=119032 width=0) (actual time=82.511..82.511 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 319.990 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295548.68..295548.72 rows=1 width=84) (actual time=2920.025..2920.025 rows=1 loops=1)
   ->  GroupAggregate  (cost=295548.68..295751.93 rows=5807 width=84) (actual time=2920.024..2920.024 rows=1 loops=1)
         ->  Sort  (cost=295548.68..295563.20 rows=5807 width=84) (actual time=2919.224..2919.269 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=97203.54..295185.64 rows=5807 width=84) (actual time=1036.268..2911.639 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=96694.54..290229.84 rows=145322 width=92) (actual time=1028.773..2805.123 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=34916.06..220180.73 rows=1817978 width=34) (actual time=373.453..1719.558 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..34461.57 rows=1817978 width=0) (actual time=342.867..342.867 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=60279.68..60279.68 rows=119904 width=66) (actual time=655.228..655.228 rows=118477 loops=1)
                                 ->  Hash Join  (cost=6570.68..60279.68 rows=119904 width=66) (actual time=58.161..631.604 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..46885.00 rows=1500000 width=8) (actual time=0.386..322.989 rows=1500000 loops=1)
                                       ->  Hash  (cost=6420.80..6420.80 rows=11990 width=66) (actual time=57.766..57.766 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..6420.80 rows=11990 width=66) (actual time=0.836..55.390 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.378..41.669 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.451..0.451 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.413..0.449 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.336..0.336 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.003..0.007 rows=25 loops=1)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=6.556..6.556 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.287..5.121 rows=10000 loops=1)
 Total runtime: 2920.094 ms
(29 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295548.68..295548.72 rows=1 width=84) (actual time=1617.484..1617.485 rows=1 loops=1)
   ->  GroupAggregate  (cost=295548.68..295751.93 rows=5807 width=84) (actual time=1617.483..1617.483 rows=1 loops=1)
         ->  Sort  (cost=295548.68..295563.20 rows=5807 width=84) (actual time=1616.700..1616.741 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=97203.54..295185.64 rows=5807 width=84) (actual time=720.346..1610.566 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=96694.54..290229.84 rows=145322 width=92) (actual time=716.684..1552.271 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=34916.06..220180.73 rows=1817978 width=34) (actual time=289.284..818.916 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..34461.57 rows=1817978 width=0) (actual time=259.758..259.758 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=60279.68..60279.68 rows=119904 width=66) (actual time=427.367..427.367 rows=118477 loops=1)
                                 ->  Hash Join  (cost=6570.68..60279.68 rows=119904 width=66) (actual time=34.373..407.056 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..46885.00 rows=1500000 width=8) (actual time=0.005..167.315 rows=1500000 loops=1)
                                       ->  Hash  (cost=6420.80..6420.80 rows=11990 width=66) (actual time=34.362..34.362 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..6420.80 rows=11990 width=66) (actual time=0.124..32.501 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.004..19.424 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.117..0.117 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.078..0.114 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.003..0.005 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.002..0.004 rows=25 loops=1)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=3.537..3.537 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.008..2.104 rows=10000 loops=1)
 Total runtime: 1617.545 ms
(29 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=126750.51..126750.51 rows=1 width=55) (actual time=6778.220..6778.221 rows=1 loops=1)
   ->  Sort  (cost=126750.51..126752.33 rows=728 width=55) (actual time=6778.218..6778.218 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=126690.42..126715.90 rows=728 width=55) (actual time=6778.194..6778.196 rows=2 loops=1)
               ->  Hash Join  (cost=56968.65..126672.28 rows=2419 width=55) (actual time=616.073..6769.078 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=56967.09..126625.36 rows=2419 width=30) (actual time=615.846..6764.114 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=56483.09..126080.87 rows=2420 width=30) (actual time=609.491..6754.816 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..69423.58 rows=39998 width=30) (actual time=2.689..6111.304 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1333 width=4) (actual time=0.833..83.525 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..45.99 rows=31 width=34) (actual time=0.334..4.547 rows=30 loops=1320)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=55348.43..55348.43 rows=90773 width=8) (actual time=603.450..603.450 rows=91179 loops=1)
                                       ->  Hash Join  (cost=13478.44..55348.43 rows=90773 width=8) (actual time=117.891..587.114 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6521.41..45214.35 rows=453863 width=12) (actual time=54.135..342.082 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6407.94 rows=453863 width=0) (actual time=49.593..49.593 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=6582.03..6582.03 rows=30000 width=4) (actual time=63.737..63.737 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=4) (actual time=0.714..59.894 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.374..44.649 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.328..0.328 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.324..0.328 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.318..0.318 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.314..0.315 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=6.348..6.348 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.310..5.216 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.211..0.211 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.197..0.201 rows=25 loops=1)
 Total runtime: 6778.692 ms
(38 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=126750.51..126750.51 rows=1 width=55) (actual time=463.419..463.419 rows=1 loops=1)
   ->  Sort  (cost=126750.51..126752.33 rows=728 width=55) (actual time=463.419..463.419 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=126690.42..126715.90 rows=728 width=55) (actual time=463.405..463.406 rows=2 loops=1)
               ->  Hash Join  (cost=56968.65..126672.28 rows=2419 width=55) (actual time=309.606..460.865 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=56967.09..126625.36 rows=2419 width=30) (actual time=309.578..459.542 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=56483.09..126080.87 rows=2420 width=30) (actual time=306.375..454.475 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..69423.58 rows=39998 width=30) (actual time=0.083..130.549 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1333 width=4) (actual time=0.059..34.153 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..45.99 rows=31 width=34) (actual time=0.006..0.068 rows=30 loops=1320)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=55348.43..55348.43 rows=90773 width=8) (actual time=306.222..306.222 rows=91179 loops=1)
                                       ->  Hash Join  (cost=13478.44..55348.43 rows=90773 width=8) (actual time=79.398..293.864 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6521.41..45214.35 rows=453863 width=12) (actual time=41.029..163.757 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6407.94 rows=453863 width=0) (actual time=36.906..36.906 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=6582.03..6582.03 rows=30000 width=4) (actual time=38.355..38.355 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=4) (actual time=0.026..35.166 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8) (actual time=0.005..20.278 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.017..0.017 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.013..0.015 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=8) (actual time=3.198..3.198 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8) (actual time=0.005..2.132 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.014..0.014 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.008..0.010 rows=25 loops=1)
 Total runtime: 463.522 ms
(38 rows)

query 9 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=286504.96..286505.00 rows=1 width=76) (actual time=23013.204..23013.205 rows=1 loops=1)
   ->  GroupAggregate  (cost=286504.96..286513.02 rows=215 width=76) (actual time=23013.203..23013.203 rows=1 loops=1)
         ->  Sort  (cost=286504.96..286505.50 rows=215 width=76) (actual time=23011.648..23012.201 rows=1210 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..286496.63 rows=215 width=76) (actual time=5.574..20978.721 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..286274.03 rows=215 width=51) (actual time=5.072..20437.803 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..285625.67 rows=215 width=55) (actual time=4.437..19878.067 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..284955.62 rows=215 width=55) (actual time=3.381..15400.753 rows=325928 loops=1)
                                       ->  Merge Join  (cost=0.00..46428.13 rows=71668 width=23) (actual time=2.376..488.852 rows=43520 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..9435.26 rows=18182 width=4) (actual time=0.809..141.929 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..34231.78 rows=800000 width=19) (actual time=1.482..272.674 rows=799985 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.31 rows=1 width=44) (actual time=0.051..0.340 rows=7 loops=43520)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.10 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.00 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33) (actual time=0.001..0.001 rows=1 loops=325928)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 23018.149 ms
(22 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=286504.96..286505.00 rows=1 width=76) (actual time=4629.591..4629.592 rows=1 loops=1)
   ->  GroupAggregate  (cost=286504.96..286513.02 rows=215 width=76) (actual time=4629.590..4629.590 rows=1 loops=1)
         ->  Sort  (cost=286504.96..286505.50 rows=215 width=76) (actual time=4628.047..4628.613 rows=1210 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..286496.63 rows=215 width=76) (actual time=0.139..2674.678 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..286274.03 rows=215 width=51) (actual time=0.125..2338.681 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..285625.67 rows=215 width=55) (actual time=0.112..1969.837 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..284955.62 rows=215 width=55) (actual time=0.092..987.725 rows=325928 loops=1)
                                       ->  Merge Join  (cost=0.00..46428.13 rows=71668 width=23) (actual time=0.073..304.673 rows=43520 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..9435.26 rows=18182 width=4) (actual time=0.034..89.795 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..34231.78 rows=800000 width=19) (actual time=0.019..158.922 rows=799985 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.31 rows=1 width=44) (actual time=0.003..0.014 rows=7 loops=43520)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.10 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.00 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33) (actual time=0.000..0.001 rows=1 loops=325928)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
 Total runtime: 4634.032 ms
(22 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=259034.27..259034.32 rows=20 width=212) (actual time=3716.152..3716.156 rows=20 loops=1)
   ->  Sort  (cost=259034.27..259169.25 rows=53993 width=212) (actual time=3716.151..3716.154 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=252630.57..254790.29 rows=53993 width=212) (actual time=3563.742..3687.263 rows=38076 loops=1)
               ->  Sort  (cost=252630.57..252765.55 rows=53993 width=212) (actual time=3563.722..3600.042 rows=114347 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=8386.18..248386.59 rows=53993 width=212) (actual time=104.664..2941.739 rows=114347 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=8384.62..247642.62 rows=53993 width=187) (actual time=104.472..2914.858 rows=114347 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=792.62..238768.29 rows=53993 width=26) (actual time=15.445..2749.993 rows=114347 loops=1)
                                       ->  Bitmap Heap Scan on orders  (cost=792.62..31717.38 rows=55054 width=8) (actual time=13.232..300.019 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..778.85 rows=55054 width=0) (actual time=9.456..9.456 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.70 rows=5 width=26) (actual time=0.040..0.042 rows=2 loops=57111)
                                             Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=165) (actual time=88.996..88.996 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=165) (actual time=0.438..55.374 rows=150000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.182..0.182 rows=25 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.168..0.173 rows=25 loops=1)
 Total runtime: 3720.255 ms
(23 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=259034.27..259034.32 rows=20 width=212) (actual time=1309.577..1309.580 rows=20 loops=1)
   ->  Sort  (cost=259034.27..259169.25 rows=53993 width=212) (actual time=1309.577..1309.578 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=252630.57..254790.29 rows=53993 width=212) (actual time=1156.160..1280.983 rows=38076 loops=1)
               ->  Sort  (cost=252630.57..252765.55 rows=53993 width=212) (actual time=1156.140..1192.412 rows=114347 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=8386.18..248386.59 rows=53993 width=212) (actual time=76.249..560.214 rows=114347 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=8384.62..247642.62 rows=53993 width=187) (actual time=76.227..538.097 rows=114347 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=792.62..238768.29 rows=53993 width=26) (actual time=10.501..406.168 rows=114347 loops=1)
                                       ->  Bitmap Heap Scan on orders  (cost=792.62..31717.38 rows=55054 width=8) (actual time=10.451..86.219 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..778.85 rows=55054 width=0) (actual time=6.758..6.758 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.70 rows=5 width=26) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=165) (actual time=65.702..65.702 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=165) (actual time=0.009..33.527 rows=150000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.013..0.013 rows=25 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.007..0.008 rows=25 loops=1)
 Total runtime: 1313.329 ms
(23 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30397.45..30397.45 rows=1 width=19) (actual time=767.470..767.470 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=13484.20..13484.22 rows=1 width=15) (actual time=27.795..27.795 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..13404.32 rows=31952 width=15) (actual time=0.012..17.001 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..351.88 rows=400 width=4) (actual time=0.009..0.185 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.57 rows=400 width=8) (actual time=0.003..0.143 rows=411 loops=1)
                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.63 rows=80 width=19) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
   ->  Sort  (cost=16913.23..16993.11 rows=31952 width=19) (actual time=767.469..767.469 rows=1 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=13643.96..14522.64 rows=31952 width=19) (actual time=762.230..767.154 rows=839 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..13404.32 rows=31952 width=19) (actual time=1.784..707.727 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..351.88 rows=400 width=4) (actual time=0.876..3.592 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.165..0.168 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.57 rows=400 width=8) (actual time=0.708..3.349 rows=411 loops=1)
                                 Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.63 rows=80 width=23) (actual time=0.100..1.697 rows=80 loops=411)
                           Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
 Total runtime: 768.043 ms
(24 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30397.45..30397.45 rows=1 width=19) (actual time=104.659..104.660 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=13484.20..13484.22 rows=1 width=15) (actual time=27.604..27.604 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..13404.32 rows=31952 width=15) (actual time=0.012..16.684 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..351.88 rows=400 width=4) (actual time=0.009..0.193 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.57 rows=400 width=8) (actual time=0.004..0.138 rows=411 loops=1)
                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.63 rows=80 width=19) (actual time=0.003..0.032 rows=80 loops=411)
                       Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
   ->  Sort  (cost=16913.23..16993.11 rows=31952 width=19) (actual time=104.657..104.657 rows=1 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=13643.96..14522.64 rows=31952 width=19) (actual time=99.432..104.349 rows=839 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..13404.32 rows=31952 width=19) (actual time=0.045..55.947 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..351.88 rows=400 width=4) (actual time=0.026..0.654 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.57 rows=400 width=8) (actual time=0.014..0.597 rows=411 loops=1)
                                 Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.63 rows=80 width=23) (actual time=0.007..0.125 rows=80 loops=411)
                           Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
 Total runtime: 104.963 ms
(24 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359887.08..359887.09 rows=1 width=33) (actual time=2858.501..2858.502 rows=1 loops=1)
   ->  Sort  (cost=359887.08..359887.09 rows=1 width=33) (actual time=2858.499..2858.499 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=359887.05..359887.07 rows=1 width=33) (actual time=2858.474..2858.474 rows=2 loops=1)
               ->  Merge Join  (cost=294983.46..359686.98 rows=26676 width=33) (actual time=2323.962..2843.413 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=23) (actual time=0.741..415.971 rows=1499957 loops=1)
                     ->  Sort  (cost=294983.46..295050.15 rows=26676 width=18) (actual time=2323.146..2326.406 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..293022.34 rows=26676 width=18) (actual time=1.265..2311.958 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 2859.069 ms
(12 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359887.08..359887.09 rows=1 width=33) (actual time=1892.457..1892.457 rows=1 loops=1)
   ->  Sort  (cost=359887.08..359887.09 rows=1 width=33) (actual time=1892.456..1892.456 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=359887.05..359887.07 rows=1 width=33) (actual time=1892.432..1892.432 rows=2 loops=1)
               ->  Merge Join  (cost=294983.46..359686.98 rows=26676 width=33) (actual time=1529.910..1879.864 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=23) (actual time=0.023..253.228 rows=1499957 loops=1)
                     ->  Sort  (cost=294983.46..295050.15 rows=26676 width=18) (actual time=1529.866..1532.154 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..293022.34 rows=26676 width=18) (actual time=0.086..1523.617 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 1892.751 ms
(12 rows)

query 13 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=173349.20..173349.20 rows=1 width=8) (actual time=1784.115..1784.115 rows=1 loops=1)
   ->  Sort  (cost=173349.20..173349.70 rows=200 width=8) (actual time=1784.114..1784.114 rows=1 loops=1)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=173339.05..173341.55 rows=200 width=8) (actual time=1784.085..1784.094 rows=42 loops=1)
               ->  HashAggregate  (cost=169214.05..171089.05 rows=150000 width=8) (actual time=1751.457..1766.787 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=76183.39..161865.50 rows=1469711 width=8) (actual time=1145.532..1555.083 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=4) (actual time=0.312..44.226 rows=150000 loops=1)
                           ->  Hash  (cost=50635.00..50635.00 rows=1469711 width=8) (actual time=1144.957..1144.957 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..50635.00 rows=1469711 width=8) (actual time=0.306..920.579 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1785.121 ms
(12 rows)

SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=173349.20..173349.20 rows=1 width=8) (actual time=1590.846..1590.846 rows=1 loops=1)
   ->  Sort  (cost=173349.20..173349.70 rows=200 width=8) (actual time=1590.844..1590.844 rows=1 loops=1)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=173339.05..173341.55 rows=200 width=8) (actual time=1590.820..1590.824 rows=42 loops=1)
               ->  HashAggregate  (cost=169214.05..171089.05 rows=150000 width=8) (actual time=1558.846..1574.177 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=76183.39..161865.50 rows=1469711 width=8) (actual time=978.874..1366.367 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=4) (actual time=0.009..23.501 rows=150000 loops=1)
                           ->  Hash  (cost=50635.00..50635.00 rows=1469711 width=8) (actual time=978.596..978.596 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..50635.00 rows=1469711 width=8) (actual time=0.012..767.536 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1591.626 ms
(12 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80815.80..80815.83 rows=1 width=46) (actual time=2685.903..2685.903 rows=1 loops=1)
   ->  Aggregate  (cost=80815.80..80815.83 rows=1 width=46) (actual time=2685.902..2685.902 rows=1 loops=1)
         ->  Hash Join  (cost=10913.37..80476.49 rows=67862 width=46) (actual time=115.861..2608.460 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1305.37..69511.25 rows=67862 width=26) (actual time=24.403..2441.762 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1288.41 rows=67862 width=0) (actual time=17.024..17.024 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=7108.00..7108.00 rows=200000 width=28) (actual time=90.788..90.788 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..7108.00 rows=200000 width=28) (actual time=0.257..64.359 rows=200000 loops=1)
 Total runtime: 2685.937 ms
(11 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80815.80..80815.83 rows=1 width=46) (actual time=294.085..294.085 rows=1 loops=1)
   ->  Aggregate  (cost=80815.80..80815.83 rows=1 width=46) (actual time=294.084..294.084 rows=1 loops=1)
         ->  Hash Join  (cost=10913.37..80476.49 rows=67862 width=46) (actual time=78.761..243.232 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1305.37..69511.25 rows=67862 width=26) (actual time=17.956..131.753 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1288.41 rows=67862 width=0) (actual time=11.409..11.409 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=7108.00..7108.00 rows=200000 width=28) (actual time=60.740..60.740 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..7108.00 rows=200000 width=28) (actual time=0.009..36.805 rows=200000 loops=1)
 Total runtime: 294.116 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=292462.97..292464.27 rows=1 width=112) (actual time=2085.336..2085.336 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=145941.18..145941.19 rows=1 width=32) (actual time=212.577..212.577 rows=1 loops=1)
           ->  HashAggregate  (cost=145929.93..145936.49 rows=375 width=26) (actual time=210.886..212.032 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4316.98..144806.42 rows=224702 width=26) (actual time=36.245..88.476 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4260.81 rows=224702 width=0) (actual time=25.094..25.094 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=146521.78..147007.16 rows=375 width=112) (actual time=2085.336..2085.336 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..454.75 rows=10000 width=80) (actual time=0.725..5.505 rows=8449 loops=1)
         ->  Sort  (cost=146521.78..146522.72 rows=375 width=36) (actual time=2079.330..2079.330 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=146491.68..146505.75 rows=375 width=36) (actual time=2079.052..2079.318 rows=1 loops=1)
                     ->  HashAggregate  (cost=146491.68..146502.00 rows=375 width=26) (actual time=2079.052..2079.318 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4316.98..144806.42 rows=224702 width=26) (actual time=56.512..1664.760 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4260.81 rows=224702 width=0) (actual time=44.079..44.079 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 2085.762 ms
(21 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=292462.97..292464.27 rows=1 width=112) (actual time=585.780..585.780 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=145941.18..145941.19 rows=1 width=32) (actual time=209.847..209.847 rows=1 loops=1)
           ->  HashAggregate  (cost=145929.93..145936.49 rows=375 width=26) (actual time=208.178..209.297 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4316.98..144806.42 rows=224702 width=26) (actual time=35.405..87.864 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4260.81 rows=224702 width=0) (actual time=24.289..24.289 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=146521.78..147007.16 rows=375 width=112) (actual time=585.779..585.779 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..454.75 rows=10000 width=80) (actual time=0.017..1.527 rows=8449 loops=1)
         ->  Sort  (cost=146521.78..146522.72 rows=375 width=36) (actual time=583.772..583.772 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=146491.68..146505.75 rows=375 width=36) (actual time=583.500..583.764 rows=1 loops=1)
                     ->  HashAggregate  (cost=146491.68..146502.00 rows=375 width=26) (actual time=583.499..583.763 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4316.98..144806.42 rows=224702 width=26) (actual time=41.338..241.082 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4260.81 rows=224702 width=0) (actual time=30.031..30.031 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 585.872 ms
(21 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=49946.02..49946.02 rows=1 width=46) (actual time=1446.948..1446.948 rows=1 loops=1)
   ->  Sort  (cost=49946.02..49952.90 rows=2751 width=46) (actual time=1446.947..1446.947 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=49076.92..49788.86 rows=2751 width=46) (actual time=1301.533..1351.147 rows=18220 loops=1)
               ->  Sort  (cost=49076.92..49212.43 rows=54204 width=46) (actual time=1301.511..1310.413 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=10835.79..44814.83 rows=54204 width=46) (actual time=107.823..533.881 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=384.00..29321.00 rows=400000 width=8) (actual time=7.487..268.176 rows=799680 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4) (actual time=1.185..7.144 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=10108.00..10108.00 rows=27503 width=46) (actual time=100.312..100.312 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..10108.00 rows=27503 width=46) (actual time=0.302..94.521 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1447.292 ms
(17 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=49946.02..49946.02 rows=1 width=46) (actual time=1272.761..1272.761 rows=1 loops=1)
   ->  Sort  (cost=49946.02..49952.90 rows=2751 width=46) (actual time=1272.761..1272.761 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=49076.92..49788.86 rows=2751 width=46) (actual time=1127.899..1176.932 rows=18220 loops=1)
               ->  Sort  (cost=49076.92..49212.43 rows=54204 width=46) (actual time=1127.878..1136.551 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=10835.79..44814.83 rows=54204 width=46) (actual time=77.345..362.307 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=384.00..29321.00 rows=400000 width=8) (actual time=4.549..171.138 rows=799680 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4) (actual time=0.172..4.532 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=10108.00..10108.00 rows=27503 width=46) (actual time=72.775..72.775 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..10108.00 rows=27503 width=46) (actual time=0.012..67.892 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1272.836 ms
(17 rows)

query 17 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=271033.49..271033.50 rows=1 width=13) (actual time=6959.924..6959.924 rows=1 loops=1)
   ->  Aggregate  (cost=271033.49..271033.50 rows=1 width=13) (actual time=6959.923..6959.923 rows=1 loops=1)
         ->  Nested Loop  (cost=256123.68..271028.59 rows=1960 width=13) (actual time=6745.878..6959.550 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Hash Join  (cost=256123.68..261736.90 rows=191 width=40) (actual time=6744.661..6894.157 rows=208 loops=1)
                     Hash Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=248013.23..250940.87 rows=195176 width=14) (actual time=6681.837..6821.161 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14) (actual time=0.613..1554.400 rows=6001215 loops=1)
                     ->  Hash  (cost=8108.00..8108.00 rows=196 width=4) (actual time=62.282..62.282 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=196 width=4) (actual time=0.956..62.180 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..48.18 rows=31 width=27) (actual time=0.246..0.307 rows=30 loops=208)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
 Total runtime: 6960.825 ms
(14 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=271033.49..271033.50 rows=1 width=13) (actual time=5970.649..5970.649 rows=1 loops=1)
   ->  Aggregate  (cost=271033.49..271033.50 rows=1 width=13) (actual time=5970.648..5970.648 rows=1 loops=1)
         ->  Nested Loop  (cost=256123.68..271028.59 rows=1960 width=13) (actual time=5820.287..5970.495 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Hash Join  (cost=256123.68..261736.90 rows=191 width=40) (actual time=5820.263..5963.870 rows=208 loops=1)
                     Hash Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=248013.23..250940.87 rows=195176 width=14) (actual time=5784.338..5918.408 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14) (actual time=0.004..819.532 rows=6001215 loops=1)
                     ->  Hash  (cost=8108.00..8108.00 rows=196 width=4) (actual time=35.388..35.388 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=196 width=4) (actual time=0.146..35.319 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..48.18 rows=31 width=27) (actual time=0.007..0.029 rows=30 loops=208)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
 Total runtime: 5971.312 ms
(14 rows)

query 18 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=796023.91..796026.91 rows=100 width=57) (actual time=4420.980..4421.002 rows=9 loops=1)
   ->  GroupAggregate  (cost=796023.91..830334.31 rows=1143680 width=57) (actual time=4420.978..4420.998 rows=9 loops=1)
         ->  Sort  (cost=796023.91..798883.11 rows=1143680 width=57) (actual time=4420.969..4420.971 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=398834.41..650782.92 rows=1143680 width=57) (actual time=3874.123..4420.831 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14) (actual time=0.520..356.123 rows=6001215 loops=1)
                     ->  Hash  (cost=395261.14..395261.14 rows=285862 width=51) (actual time=3728.102..3728.102 rows=9 loops=1)
                           ->  Hash Join  (cost=317730.21..395261.14 rows=285862 width=51) (actual time=880.225..3728.086 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=310138.21..380879.92 rows=285862 width=29) (actual time=810.968..3658.803 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=25) (actual time=0.861..337.455 rows=1201687 loops=1)
                                       ->  Materialize  (cost=310138.21..312996.83 rows=285862 width=4) (actual time=695.540..3249.313 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..306993.73 rows=285862 width=14) (actual time=695.536..3249.289 rows=9 loops=1)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..272699.72 rows=6001215 width=14) (actual time=0.635..1920.410 rows=6001215 loops=1)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26) (actual time=69.021..69.021 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26) (actual time=0.253..50.461 rows=150000 loops=1)
 Total runtime: 4421.089 ms
(20 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=796023.91..796026.91 rows=100 width=57) (actual time=3427.155..3427.176 rows=9 loops=1)
   ->  GroupAggregate  (cost=796023.91..830334.31 rows=1143680 width=57) (actual time=3427.154..3427.173 rows=9 loops=1)
         ->  Sort  (cost=796023.91..798883.11 rows=1143680 width=57) (actual time=3427.145..3427.148 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=398834.41..650782.92 rows=1143680 width=57) (actual time=2879.848..3427.008 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14) (actual time=0.009..353.788 rows=6001215 loops=1)
                     ->  Hash  (cost=395261.14..395261.14 rows=285862 width=51) (actual time=2734.254..2734.254 rows=9 loops=1)
                           ->  Hash Join  (cost=317730.21..395261.14 rows=285862 width=51) (actual time=627.069..2734.243 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=310138.21..380879.92 rows=285862 width=29) (actual time=580.895..2688.044 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=25) (actual time=0.016..196.774 rows=1201687 loops=1)
                                       ->  Materialize  (cost=310138.21..312996.83 rows=285862 width=4) (actual time=511.153..2423.290 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..306993.73 rows=285862 width=14) (actual time=511.151..2423.275 rows=9 loops=1)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..272699.72 rows=6001215 width=14) (actual time=0.013..1129.537 rows=6001215 loops=1)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26) (actual time=46.163..46.163 rows=150000 loops=1)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26) (actual time=0.008..28.457 rows=150000 loops=1)
 Total runtime: 3427.245 ms
(20 rows)

query 19 run 1
SET
SET


 Limit  (cost=355748.58..355748.60 rows=1 width=22) (actual time=2528.444..2528.444 rows=1 loops=1)
   ->  Aggregate  (cost=355748.58..355748.60 rows=1 width=22) (actual time=2528.443..2528.443 rows=1 loops=1)
         ->  Hash Join  (cost=10108.00..355748.28 rows=118 width=22) (actual time=106.539..2528.056 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..338031.45 rows=117059 width=36) (actual time=0.621..2341.611 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=7608.00..7608.00 rows=200000 width=36) (actual time=104.958..104.958 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=200000 width=36) (actual time=0.261..73.622 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 2528.480 ms
(11 rows)

SET
SET


 Limit  (cost=355748.58..355748.60 rows=1 width=22) (actual time=1699.650..1699.651 rows=1 loops=1)
   ->  Aggregate  (cost=355748.58..355748.60 rows=1 width=22) (actual time=1699.649..1699.649 rows=1 loops=1)
         ->  Hash Join  (cost=10108.00..355748.28 rows=118 width=22) (actual time=76.031..1699.354 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..338031.45 rows=117059 width=36) (actual time=0.055..1550.919 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=7608.00..7608.00 rows=200000 width=36) (actual time=75.929..75.929 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=200000 width=36) (actual time=0.008..46.064 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1699.686 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208345.45..208345.46 rows=1 width=57) (actual time=3060.334..3060.334 rows=1 loops=1)
   ->  Sort  (cost=208345.45..208345.46 rows=1 width=57) (actual time=3060.332..3060.332 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=208341.87..208345.44 rows=1 width=57) (actual time=2998.317..3059.576 rows=196 loops=1)
               ->  Nested Loop  (cost=208341.87..208345.16 rows=1 width=61) (actual time=2997.546..3053.467 rows=4421 loops=1)
                     ->  HashAggregate  (cost=208341.87..208341.88 rows=1 width=8) (actual time=2996.827..2997.929 rows=4421 loops=1)
                           ->  Nested Loop  (cost=202914.79..208341.86 rows=1 width=8) (actual time=2195.470..2992.183 rows=5898 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Hash Join  (cost=202914.79..205604.07 rows=902 width=44) (actual time=2194.432..2522.847 rows=5914 loops=1)
                                       Hash Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=195256.29..196596.42 rows=89342 width=18) (actual time=2133.104..2404.141 rows=544869 loops=1)
                                             ->  Bitmap Heap Scan on lineitem  (cost=17159.34..188555.64 rows=893420 width=18) (actual time=199.461..1590.139 rows=913487 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16935.99 rows=893420 width=0) (actual time=173.338..173.338 rows=913487 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=7633.25..7633.25 rows=2020 width=4) (actual time=61.250..61.250 rows=2187 loops=1)
                                             ->  HashAggregate  (cost=7613.05..7633.25 rows=2020 width=4) (actual time=60.777..61.040 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..7608.00 rows=2020 width=4) (actual time=0.364..59.948 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.02 rows=1 width=12) (actual time=0.078..0.078 rows=1 loops=5914)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65) (actual time=0.012..0.012 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 3060.833 ms
(27 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208345.45..208345.46 rows=1 width=57) (actual time=1384.700..1384.700 rows=1 loops=1)
   ->  Sort  (cost=208345.45..208345.46 rows=1 width=57) (actual time=1384.700..1384.700 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=208341.87..208345.44 rows=1 width=57) (actual time=1374.989..1384.048 rows=196 loops=1)
               ->  Nested Loop  (cost=208341.87..208345.16 rows=1 width=61) (actual time=1374.944..1381.102 rows=4421 loops=1)
                     ->  HashAggregate  (cost=208341.87..208341.88 rows=1 width=8) (actual time=1374.931..1375.555 rows=4421 loops=1)
                           ->  Nested Loop  (cost=202914.79..208341.86 rows=1 width=8) (actual time=1096.063..1372.983 rows=5898 loops=1)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Hash Join  (cost=202914.79..205604.07 rows=902 width=44) (actual time=1096.042..1351.160 rows=5914 loops=1)
                                       Hash Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=195256.29..196596.42 rows=89342 width=18) (actual time=1061.673..1273.902 rows=544869 loops=1)
                                             ->  Bitmap Heap Scan on lineitem  (cost=17159.34..188555.64 rows=893420 width=18) (actual time=149.500..576.727 rows=913487 loops=1)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16935.99 rows=893420 width=0) (actual time=124.275..124.275 rows=913487 loops=1)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=7633.25..7633.25 rows=2020 width=4) (actual time=34.292..34.292 rows=2187 loops=1)
                                             ->  HashAggregate  (cost=7613.05..7633.25 rows=2020 width=4) (actual time=33.840..34.080 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..7608.00 rows=2020 width=4) (actual time=0.040..33.263 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.02 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65) (actual time=0.001..0.001 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
 Total runtime: 1385.199 ms
(27 rows)

query 21 run 1
SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4820285.83..4820286.08 rows=100 width=29) (actual time=12260.440..12260.446 rows=100 loops=1)
   ->  Sort  (cost=4820285.83..4820310.22 rows=9754 width=29) (actual time=12260.438..12260.443 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=4819517.62..4819639.54 rows=9754 width=29) (actual time=12259.451..12259.526 rows=421 loops=1)
               ->  Nested Loop  (cost=255.11..4819468.85 rows=9754 width=29) (actual time=11.621..12255.152 rows=4227 loops=1)
                     ->  Hash Join  (cost=255.11..4757661.91 rows=19994 width=33) (actual time=10.099..11619.492 rows=8678 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..4755331.49 rows=500101 width=8) (actual time=1.265..11582.572 rows=202092 loops=1)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.97 rows=7 width=152) (actual time=0.001..0.001 rows=1 loops=3657708)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.92 rows=21 width=152) (actual time=0.001..0.001 rows=1 loops=3793296)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=250.11..250.11 rows=400 width=33) (actual time=5.670..5.670 rows=421 loops=1)
                                 ->  Nested Loop  (cost=6.35..250.11 rows=400 width=33) (actual time=1.217..5.563 rows=421 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.157..0.159 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..243.79 rows=400 width=37) (actual time=1.054..5.334 rows=421 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.770..0.770 rows=421 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.08 rows=1 width=4) (actual time=0.073..0.073 rows=0 loops=8678)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 12260.799 ms
(28 rows)

SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4820285.83..4820286.08 rows=100 width=29) (actual time=10635.952..10635.963 rows=100 loops=1)
   ->  Sort  (cost=4820285.83..4820310.22 rows=9754 width=29) (actual time=10635.950..10635.952 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=4819517.62..4819639.54 rows=9754 width=29) (actual time=10634.979..10635.047 rows=421 loops=1)
               ->  Nested Loop  (cost=255.11..4819468.85 rows=9754 width=29) (actual time=3.614..10632.659 rows=4227 loops=1)
                     ->  Hash Join  (cost=255.11..4757661.91 rows=19994 width=33) (actual time=3.596..10597.328 rows=8678 loops=1)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..4755331.49 rows=500101 width=8) (actual time=0.117..10574.101 rows=202092 loops=1)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.97 rows=7 width=152) (actual time=0.001..0.001 rows=1 loops=3657708)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.92 rows=21 width=152) (actual time=0.001..0.001 rows=1 loops=3793296)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=250.11..250.11 rows=400 width=33) (actual time=1.002..1.002 rows=421 loops=1)
                                 ->  Nested Loop  (cost=6.35..250.11 rows=400 width=33) (actual time=0.081..0.950 rows=421 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..243.79 rows=400 width=37) (actual time=0.072..0.892 rows=421 loops=1)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.049..0.049 rows=421 loops=1)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.08 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=8678)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 10636.050 ms
(28 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=259971.57..259971.60 rows=1 width=30) (actual time=852.008..852.008 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=8166.26..8166.27 rows=1 width=11) (actual time=122.026..122.026 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..8154.50 rows=4704 width=11) (actual time=0.008..99.162 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=251805.30..251831.16 rows=862 width=30) (actual time=852.007..852.007 rows=1 loops=1)
         ->  Sort  (cost=251805.30..251807.45 rows=862 width=30) (actual time=851.752..851.780 rows=952 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..251763.27 rows=862 width=30) (actual time=123.026..847.291 rows=6397 loops=1)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..27.61 rows=17 width=124) (actual time=0.033..0.033 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 852.096 ms
(14 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=259971.57..259971.60 rows=1 width=30) (actual time=223.446..223.446 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=8166.26..8166.27 rows=1 width=11) (actual time=97.184..97.184 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..8154.50 rows=4704 width=11) (actual time=0.003..75.310 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=251805.30..251831.16 rows=862 width=30) (actual time=223.446..223.446 rows=1 loops=1)
         ->  Sort  (cost=251805.30..251807.45 rows=862 width=30) (actual time=223.194..223.227 rows=952 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..251763.27 rows=862 width=30) (actual time=97.237..220.437 rows=6397 loops=1)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..27.61 rows=17 width=124) (actual time=0.003..0.003 rows=1 loops=19077)
                             Index Cond: (o_custkey = $1)
 Total runtime: 223.492 ms
(14 rows)

