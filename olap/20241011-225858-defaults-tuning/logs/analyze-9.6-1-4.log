query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191532.19..191532.40 rows=1 width=236) (actual time=2829.167..2829.167 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191532.19..191533.44 rows=6 width=236) (actual time=2829.166..2829.166 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191532.19..191532.25 rows=24 width=236) (actual time=2829.123..2829.123 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191529.08..191531.64 rows=24 width=236) (actual time=2827.300..2828.178 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190529.08..190529.24 rows=6 width=236) (actual time=2820.761..2820.768 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.36 rows=1480418 width=25) (actual time=0.075..573.703 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 11.605 ms
 Execution time: 2829.306 ms
(16 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191532.19..191532.40 rows=1 width=236) (actual time=2675.115..2675.115 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191532.19..191533.44 rows=6 width=236) (actual time=2675.113..2675.113 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191532.19..191532.25 rows=24 width=236) (actual time=2675.086..2675.087 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191529.08..191531.64 rows=24 width=236) (actual time=2674.310..2675.114 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190529.08..190529.24 rows=6 width=236) (actual time=2671.436..2671.443 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.36 rows=1480418 width=25) (actual time=0.032..388.377 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 0.445 ms
 Execution time: 2675.239 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66661.20..66661.21 rows=1 width=192) (actual time=627.536..627.556 rows=100 loops=1)
   ->  Sort  (cost=66661.20..66661.21 rows=1 width=192) (actual time=627.534..627.544 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=44342.91..66661.19 rows=1 width=192) (actual time=419.299..627.009 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=870 width=30) (actual time=0.013..82.250 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44342.45..44741.74 rows=159713 width=172) (actual time=418.841..449.729 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..30539.16 rows=159713 width=172) (actual time=5.439..302.256 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..187.343 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=5.427..5.427 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.015..5.014 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..3.785 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.013..0.013 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.52..18.53 rows=1 width=32) (actual time=0.123..0.123 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.109..0.120 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.102..0.118 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.101..0.113 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.098..0.099 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 18.927 ms
 Execution time: 631.751 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66661.20..66661.21 rows=1 width=192) (actual time=384.125..384.142 rows=100 loops=1)
   ->  Sort  (cost=66661.20..66661.21 rows=1 width=192) (actual time=384.125..384.140 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=44342.91..66661.19 rows=1 width=192) (actual time=277.675..383.749 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=870 width=30) (actual time=0.014..50.726 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44342.45..44741.74 rows=159713 width=172) (actual time=277.589..307.375 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..30539.16 rows=159713 width=172) (actual time=2.458..168.867 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..44.481 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=2.451..2.451 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.016..2.048 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.583 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.013..0.013 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.007..0.011 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.52..18.53 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.009..0.015 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.004..0.010 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.905 ms
 Execution time: 388.161 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=266460.51..266460.53 rows=10 width=44) (actual time=1525.905..1525.907 rows=10 loops=1)
   ->  Sort  (cost=266460.51..267244.91 rows=313761 width=44) (actual time=1525.903..1525.904 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=250267.41..259680.24 rows=313761 width=44) (actual time=1503.766..1523.754 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=250267.41..251051.82 rows=313761 width=24) (actual time=1503.745..1506.112 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Gather  (cost=6847.18..221622.12 rows=313761 width=24) (actual time=64.373..1493.787 rows=30533 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Nested Loop  (cost=5847.18..189246.02 rows=101213 width=24) (actual time=57.289..1487.184 rows=7633 loops=4)
                                 ->  Hash Join  (cost=5846.75..39363.14 rows=46485 width=12) (actual time=55.630..253.794 rows=36516 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232577 width=16) (actual time=0.032..148.340 rows=180569 loops=4)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 194431
                                       ->  Hash  (cost=5472.00..5472.00 rows=29980 width=4) (actual time=55.499..55.499 rows=30142 loops=4)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29980 width=4) (actual time=0.017..50.843 rows=30142 loops=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.033..0.033 rows=0 loops=146063)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 4
 Planning time: 22.172 ms
 Execution time: 1526.046 ms
(29 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=266460.51..266460.53 rows=10 width=44) (actual time=314.263..314.265 rows=10 loops=1)
   ->  Sort  (cost=266460.51..267244.91 rows=313761 width=44) (actual time=314.262..314.263 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=250267.41..259680.24 rows=313761 width=44) (actual time=291.816..312.050 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=250267.41..251051.82 rows=313761 width=24) (actual time=291.798..294.106 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Gather  (cost=6847.18..221622.12 rows=313761 width=24) (actual time=30.955..283.618 rows=30533 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Nested Loop  (cost=5847.18..189246.02 rows=101213 width=24) (actual time=31.055..279.740 rows=7633 loops=4)
                                 ->  Hash Join  (cost=5846.75..39363.14 rows=46485 width=12) (actual time=30.961..133.588 rows=36516 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232577 width=16) (actual time=0.010..63.709 rows=180569 loops=4)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 194431
                                       ->  Hash  (cost=5472.00..5472.00 rows=29980 width=4) (actual time=30.863..30.863 rows=30142 loops=4)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29980 width=4) (actual time=0.016..26.544 rows=30142 loops=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.004..0.004 rows=0 loops=146063)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 4
 Planning time: 0.836 ms
 Execution time: 314.399 ms
(29 rows)

query 4 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87934.57..87934.60 rows=1 width=24) (actual time=2127.419..2127.419 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=87934.57..87934.73 rows=5 width=24) (actual time=2127.418..2127.419 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=87934.57..87934.61 rows=15 width=24) (actual time=2127.413..2127.414 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=87932.72..87934.27 rows=15 width=24) (actual time=2127.347..2138.125 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=86932.72..86932.77 rows=5 width=24) (actual time=2120.384..2120.385 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.43..86838.16 rows=18912 width=16) (actual time=0.083..2110.810 rows=12850 loops=4)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18912 width=20) (actual time=0.025..189.199 rows=13993 loops=4)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 361007
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.136..0.136 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 15.763 ms
 Execution time: 2138.241 ms
(21 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87934.57..87934.60 rows=1 width=24) (actual time=135.503..135.504 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=87934.57..87934.73 rows=5 width=24) (actual time=135.501..135.501 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=87934.57..87934.61 rows=15 width=24) (actual time=135.497..135.497 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=87932.72..87934.27 rows=15 width=24) (actual time=135.429..149.259 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=86932.72..86932.77 rows=5 width=24) (actual time=132.368..132.369 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.43..86838.16 rows=18912 width=16) (actual time=0.024..128.430 rows=12850 loops=4)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18912 width=20) (actual time=0.011..69.716 rows=13993 loops=4)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 361007
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 0.632 ms
 Execution time: 149.348 ms
(21 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=88938.10..88938.11 rows=1 width=58) (actual time=2150.013..2150.013 rows=1 loops=1)
   ->  Sort  (cost=88938.10..88938.17 rows=25 width=58) (actual time=2150.011..2150.011 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=88936.92..88937.98 rows=25 width=58) (actual time=2149.987..2149.996 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=88936.92..88937.10 rows=75 width=58) (actual time=2149.981..2149.983 rows=20 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 27kB
                     ->  Gather  (cost=88897.93..88934.58 rows=75 width=58) (actual time=2148.980..2160.364 rows=20 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Partial GroupAggregate  (cost=87897.93..87927.08 rows=25 width=58) (actual time=2142.869..2143.760 rows=5 loops=4)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=87897.93..87903.70 rows=2307 width=38) (actual time=2142.635..2142.775 rows=1885 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 194kB
                                       ->  Hash Join  (cost=6810.46..87769.06 rows=2307 width=38) (actual time=71.690..2141.064 rows=1885 loops=4)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=6337.46..86840.32 rows=57689 width=50) (actual time=67.572..2125.210 rows=45609 loops=4)
                                                   ->  Hash Join  (cost=6337.03..40140.74 rows=14422 width=38) (actual time=67.022..276.421 rows=11324 loops=4)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=72112 width=8) (actual time=0.360..192.568 rows=56661 loops=4)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 318339
                                                         ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=66.440..66.440 rows=29952 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                               ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.051..60.444 rows=29952 loops=4)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.018..37.438 rows=150000 loops=4)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.026..0.026 rows=5 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.020..0.025 rows=5 loops=4)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=4)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=4)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.155..0.162 rows=4 loops=45297)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.667..3.667 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..2.350 rows=10000 loops=4)
 Planning time: 21.585 ms
 Execution time: 2160.490 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=88938.10..88938.11 rows=1 width=58) (actual time=196.940..196.940 rows=1 loops=1)
   ->  Sort  (cost=88938.10..88938.17 rows=25 width=58) (actual time=196.939..196.939 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=88936.92..88937.98 rows=25 width=58) (actual time=196.915..196.926 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=88936.92..88937.10 rows=75 width=58) (actual time=196.908..196.909 rows=20 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 27kB
                     ->  Gather  (cost=88897.93..88934.58 rows=75 width=58) (actual time=195.939..211.165 rows=20 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Partial GroupAggregate  (cost=87897.93..87927.08 rows=25 width=58) (actual time=192.516..193.395 rows=5 loops=4)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=87897.93..87903.70 rows=2307 width=38) (actual time=192.286..192.416 rows=1885 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 200kB
                                       ->  Hash Join  (cost=6810.46..87769.06 rows=2307 width=38) (actual time=39.551..191.524 rows=1885 loops=4)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=6337.46..86840.32 rows=57689 width=50) (actual time=36.661..180.684 rows=45609 loops=4)
                                                   ->  Hash Join  (cost=6337.03..40140.74 rows=14422 width=38) (actual time=36.643..121.551 rows=11324 loops=4)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=72112 width=8) (actual time=0.011..71.667 rows=56661 loops=4)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 318339
                                                         ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=36.434..36.434 rows=29952 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                               ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.045..31.030 rows=29952 loops=4)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.016..9.126 rows=150000 loops=4)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.025..0.025 rows=5 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.019..0.024 rows=5 loops=4)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=4)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=4)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.831..2.831 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.500 rows=10000 loops=4)
 Planning time: 2.415 ms
 Execution time: 211.555 ms
(47 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109413.74..109413.75 rows=1 width=32) (actual time=1376.801..1376.801 rows=1 loops=1)
   ->  Aggregate  (cost=109413.74..109413.75 rows=1 width=32) (actual time=1376.801..1376.801 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21513.22..108815.93 rows=119561 width=12) (actual time=141.602..1279.393 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21483.33 rows=119561 width=0) (actual time=130.448..130.448 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 9.419 ms
 Execution time: 1376.856 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=109413.74..109413.75 rows=1 width=32) (actual time=231.001..231.002 rows=1 loops=1)
   ->  Aggregate  (cost=109413.74..109413.75 rows=1 width=32) (actual time=231.000..231.000 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21513.22..108815.93 rows=119561 width=12) (actual time=110.214..187.139 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21483.33 rows=119561 width=0) (actual time=99.799..99.799 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.359 ms
 Execution time: 231.043 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=166565.38..166565.42 rows=1 width=92) (actual time=1550.749..1550.749 rows=1 loops=1)
   ->  GroupAggregate  (cost=166565.38..166780.04 rows=6133 width=92) (actual time=1550.747..1550.747 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=166565.38..166580.72 rows=6133 width=72) (actual time=1549.798..1549.918 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Gather  (cost=7311.23..166179.55 rows=6133 width=72) (actual time=73.263..1559.297 rows=5729 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6311.23..164545.47 rows=1978 width=72) (actual time=67.348..1540.119 rows=1432 loops=4)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                           Rows Removed by Join Filter: 1457
                           ->  Nested Loop  (cost=5931.33..163901.33 rows=47544 width=46) (actual time=60.473..1526.343 rows=36276 loops=4)
                                 ->  Hash Join  (cost=5930.90..39102.23 rows=38710 width=30) (actual time=60.010..271.597 rows=29619 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.043..133.132 rows=375000 loops=4)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=59.940..59.940 rows=11896 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.022..57.564 rows=11896 loops=4)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..37.057 rows=150000 loops=4)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=4)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.041..0.042 rows=1 loops=118477)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=2.871..2.871 rows=794 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.032..2.764 rows=794 loops=4)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.513 rows=10000 loops=4)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=4)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.013 rows=2 loops=4)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 22.875 ms
 Execution time: 1563.684 ms
(43 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=166565.38..166565.42 rows=1 width=92) (actual time=280.350..280.350 rows=1 loops=1)
   ->  GroupAggregate  (cost=166565.38..166780.04 rows=6133 width=92) (actual time=280.348..280.348 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=166565.38..166580.72 rows=6133 width=72) (actual time=279.392..279.487 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Gather  (cost=7311.23..166179.55 rows=6133 width=72) (actual time=33.618..292.856 rows=5729 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6311.23..164545.47 rows=1978 width=72) (actual time=33.405..272.945 rows=1432 loops=4)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                           Rows Removed by Join Filter: 1457
                           ->  Nested Loop  (cost=5931.33..163901.33 rows=47544 width=46) (actual time=31.251..264.695 rows=36276 loops=4)
                                 ->  Hash Join  (cost=5930.90..39102.23 rows=38710 width=30) (actual time=31.224..132.877 rows=29619 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.007..31.091 rows=375000 loops=4)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=31.191..31.191 rows=11896 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.030..29.324 rows=11896 loops=4)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.015..9.883 rows=150000 loops=4)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=4)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=4)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.993..1.994 rows=794 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                 ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.028..1.904 rows=794 loops=4)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..0.606 rows=10000 loops=4)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=4)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=4)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 1.996 ms
 Execution time: 296.238 ms
(43 rows)

query 8 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81673.26..81673.30 rows=1 width=40) (actual time=2788.050..2788.050 rows=1 loops=1)
   ->  GroupAggregate  (cost=81673.26..81781.69 rows=2406 width=40) (actual time=2788.050..2788.050 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=81673.26..81679.29 rows=2413 width=46) (actual time=2787.130..2787.239 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Gather  (cost=50941.74..81537.69 rows=2413 width=46) (actual time=798.134..2796.689 rows=2485 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Hash Join  (cost=49941.74..80289.35 rows=1005 width=46) (actual time=792.728..2778.477 rows=828 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=49940.18..80268.94 rows=1005 width=20) (actual time=792.644..2777.038 rows=828 loops=3)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=49492.18..79807.12 rows=1005 width=20) (actual time=788.812..2772.762 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Nested Loop  (cost=0.43..30242.84 rows=16665 width=20) (actual time=1.186..1981.598 rows=13231 loops=3)
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.255..22.497 rows=440 loops=3)
                                                   Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                   Rows Removed by Filter: 66227
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.326..4.436 rows=30 loops=1320)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                       ->  Hash  (cost=48360.38..48360.38 rows=90509 width=8) (actual time=784.389..784.389 rows=91179 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                             ->  Hash Join  (cost=12839.06..48360.38 rows=90509 width=8) (actual time=131.358..762.516 rows=91179 loops=3)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Bitmap Heap Scan on orders  (cost=6502.02..39421.21 rows=452546 width=12) (actual time=65.762..591.400 rows=457263 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Heap Blocks: exact=26131
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6388.89 rows=452546 width=0) (actual time=60.999..60.999 rows=457263 loops=3)
                                                               Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=65.469..65.469 rows=29952 loops=3)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                         ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.036..61.123 rows=29952 loops=3)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.012..39.502 rows=150000 loops=3)
                                                               ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.021..0.021 rows=5 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.015..0.020 rows=5 loops=3)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=3)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=3)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.813..3.813 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..2.499 rows=10000 loops=3)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.012 rows=25 loops=3)
 Planning time: 25.588 ms
 Execution time: 2798.934 ms
(53 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81673.26..81673.30 rows=1 width=40) (actual time=290.439..290.439 rows=1 loops=1)
   ->  GroupAggregate  (cost=81673.26..81781.69 rows=2406 width=40) (actual time=290.438..290.438 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=81673.26..81679.29 rows=2413 width=46) (actual time=289.542..289.640 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Gather  (cost=50941.74..81537.69 rows=2413 width=46) (actual time=253.833..302.388 rows=2485 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Hash Join  (cost=49941.74..80289.35 rows=1005 width=46) (actual time=251.421..286.357 rows=828 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=49940.18..80268.94 rows=1005 width=20) (actual time=251.341..285.872 rows=828 loops=3)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=49492.18..79807.12 rows=1005 width=20) (actual time=248.411..282.641 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Nested Loop  (cost=0.43..30242.84 rows=16665 width=20) (actual time=0.051..31.718 rows=13231 loops=3)
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.031..9.307 rows=440 loops=3)
                                                   Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                   Rows Removed by Filter: 66227
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.004..0.046 rows=30 loops=1320)
                                                   Index Cond: (l_partkey = part.p_partkey)
                                       ->  Hash  (cost=48360.38..48360.38 rows=90509 width=8) (actual time=248.011..248.012 rows=91179 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                             ->  Hash Join  (cost=12839.06..48360.38 rows=90509 width=8) (actual time=78.238..231.638 rows=91179 loops=3)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Bitmap Heap Scan on orders  (cost=6502.02..39421.21 rows=452546 width=12) (actual time=45.026..126.920 rows=457263 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Heap Blocks: exact=26131
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6388.89 rows=452546 width=0) (actual time=40.294..40.294 rows=457263 loops=3)
                                                               Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=33.106..33.106 rows=29952 loops=3)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                         ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.047..29.558 rows=29952 loops=3)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.020..8.860 rows=150000 loops=3)
                                                               ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.022..0.022 rows=5 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.016..0.020 rows=5 loops=3)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=3)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=3)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=3)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.915..2.915 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.556 rows=10000 loops=3)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.011 rows=25 loops=3)
 Planning time: 2.736 ms
 Execution time: 304.101 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=32727.56..32727.59 rows=1 width=66) (actual time=6092.488..6092.489 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=32727.56..32728.88 rows=47 width=66) (actual time=6092.486..6092.486 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=32727.56..32727.66 rows=40 width=66) (actual time=6092.479..6092.481 rows=4 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: quicksort  Memory: 98kB
               ->  Gather  (cost=32721.75..32726.50 rows=40 width=66) (actual time=5985.964..6116.887 rows=525 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=31721.75..31722.50 rows=20 width=66) (actual time=5978.664..6084.076 rows=175 loops=3)
                           Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           ->  Sort  (cost=31721.75..31721.80 rows=20 width=57) (actual time=5978.241..5993.206 rows=108643 loops=3)
                                 Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                                 Sort Method: quicksort  Memory: 18327kB
                                 ->  Hash Join  (cost=3.13..31721.31 rows=20 width=57) (actual time=0.946..5877.150 rows=108643 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=1.57..31719.38 rows=20 width=31) (actual time=0.663..5795.226 rows=108643 loops=3)
                                             ->  Nested Loop  (cost=1.14..31656.25 rows=20 width=31) (actual time=0.252..4436.925 rows=108643 loops=3)
                                                   ->  Nested Loop  (cost=0.86..31597.09 rows=20 width=35) (actual time=0.241..4197.685 rows=108643 loops=3)
                                                         ->  Nested Loop  (cost=0.42..10647.03 rows=6576 width=18) (actual time=0.067..158.648 rows=14507 loops=3)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=1683 width=4) (actual time=0.030..39.584 rows=3627 loops=3)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 63040
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.23 rows=4 width=14) (actual time=0.029..0.032 rows=4 loops=10880)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.042..0.276 rows=7 loops=43520)
                                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                                         Index Cond: (s_suppkey = lineitem.l_suppkey)
                                             ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=325928)
                                                   Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=3)
 Planning time: 24.785 ms
 Execution time: 6117.380 ms
(36 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=32727.56..32727.59 rows=1 width=66) (actual time=933.411..933.411 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=32727.56..32728.88 rows=47 width=66) (actual time=933.410..933.410 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=32727.56..32727.66 rows=40 width=66) (actual time=933.392..933.392 rows=4 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: quicksort  Memory: 98kB
               ->  Gather  (cost=32721.75..32726.50 rows=40 width=66) (actual time=825.025..954.150 rows=525 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Partial GroupAggregate  (cost=31721.75..31722.50 rows=20 width=66) (actual time=823.335..928.635 rows=175 loops=3)
                           Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           ->  Sort  (cost=31721.75..31721.80 rows=20 width=57) (actual time=822.923..837.901 rows=108643 loops=3)
                                 Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                                 Sort Method: quicksort  Memory: 18415kB
                                 ->  Hash Join  (cost=3.13..31721.31 rows=20 width=57) (actual time=0.107..734.027 rows=108643 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=1.57..31719.38 rows=20 width=31) (actual time=0.057..680.810 rows=108643 loops=3)
                                             ->  Nested Loop  (cost=1.14..31656.25 rows=20 width=31) (actual time=0.042..359.794 rows=108643 loops=3)
                                                   ->  Nested Loop  (cost=0.86..31597.09 rows=20 width=35) (actual time=0.038..191.012 rows=108643 loops=3)
                                                         ->  Nested Loop  (cost=0.42..10647.03 rows=6576 width=18) (actual time=0.026..33.112 rows=14507 loops=3)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=1683 width=4) (actual time=0.011..16.503 rows=3627 loops=3)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 63040
                                                               ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.23 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                                     Index Cond: (ps_partkey = part.p_partkey)
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.009 rows=7 loops=43520)
                                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                                         Index Cond: (s_suppkey = lineitem.l_suppkey)
                                             ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                                                   Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.020 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.017 rows=25 loops=3)
 Planning time: 3.779 ms
 Execution time: 954.697 ms
(36 rows)

query 10 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111052.11..111052.16 rows=20 width=202) (actual time=2171.302..2171.306 rows=20 loops=1)
   ->  Sort  (cost=111052.11..111196.23 rows=57651 width=202) (actual time=2171.302..2171.304 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=108797.40..109518.03 rows=57651 width=202) (actual time=2142.559..2160.705 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=7973.99..108076.76 rows=57651 width=182) (actual time=111.391..2029.029 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6973.99..101311.66 rows=18597 width=182) (actual time=105.265..2086.369 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=6972.43..101054.39 rows=18597 width=160) (actual time=104.821..2076.884 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=0.43..93826.68 rows=18597 width=16) (actual time=0.351..1958.354 rows=28587 loops=4)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18702 width=8) (actual time=0.095..161.498 rows=14278 loops=4)
                                             Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Rows Removed by Filter: 360722
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.121..0.125 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=103.641..103.641 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.042..56.922 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.371..0.371 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.018 rows=25 loops=4)
 Planning time: 21.046 ms
 Execution time: 2171.572 ms
(29 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111052.11..111052.16 rows=20 width=202) (actual time=298.994..298.999 rows=20 loops=1)
   ->  Sort  (cost=111052.11..111196.23 rows=57651 width=202) (actual time=298.993..298.997 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=108797.40..109518.03 rows=57651 width=202) (actual time=269.887..288.269 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=7973.99..108076.76 rows=57651 width=182) (actual time=72.993..182.682 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6973.99..101311.66 rows=18597 width=182) (actual time=72.925..227.123 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=6972.43..101054.39 rows=18597 width=160) (actual time=72.658..220.853 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=0.43..93826.68 rows=18597 width=16) (actual time=0.040..137.821 rows=28587 loops=4)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18702 width=8) (actual time=0.013..64.850 rows=14278 loops=4)
                                             Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Rows Removed by Filter: 360722
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=72.195..72.195 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.023..28.994 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.195..0.195 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning time: 1.183 ms
 Execution time: 299.258 ms
(29 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22741.30..22741.31 rows=1 width=36) (actual time=723.876..723.876 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.50..10891.51 rows=1 width=32) (actual time=30.856..30.856 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.93 rows=31943 width=10) (actual time=0.064..19.421 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.059..0.284 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.050..0.224 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.033..0.033 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11849.79..11929.65 rows=31943 width=36) (actual time=723.875..723.875 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11210.93..11690.07 rows=31943 width=36) (actual time=714.945..723.734 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.93 rows=31943 width=14) (actual time=1.333..652.008 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.657..2.844 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.648..2.751 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.575..0.575 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.098..1.561 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 12.039 ms
 Execution time: 724.175 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22741.30..22741.31 rows=1 width=36) (actual time=84.298..84.298 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10891.50..10891.51 rows=1 width=32) (actual time=30.637..30.637 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10651.93 rows=31943 width=10) (actual time=0.064..19.176 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.060..0.276 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.048..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.032..0.032 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11849.79..11929.65 rows=31943 width=36) (actual time=84.298..84.298 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11210.93..11690.07 rows=31943 width=36) (actual time=75.435..84.143 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10651.93 rows=31943 width=14) (actual time=0.065..27.025 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.060..0.376 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.051..0.321 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.032..0.032 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.838 ms
 Execution time: 84.601 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170484.70..170484.75 rows=1 width=27) (actual time=1094.382..1094.382 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170484.70..170485.05 rows=7 width=27) (actual time=1094.382..1094.383 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=170484.70..170484.77 rows=28 width=27) (actual time=1094.376..1094.377 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=170336.63..170484.02 rows=28 width=27) (actual time=1089.565..1096.507 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=169336.63..169481.22 rows=7 width=27) (actual time=1083.481..1084.886 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Sort  (cost=169336.63..169354.70 rows=7226 width=27) (actual time=1082.206..1082.592 rows=6191 loops=5)
                                 Sort Key: lineitem.l_shipmode
                                 Sort Method: quicksort  Memory: 655kB
                                 ->  Nested Loop  (cost=0.43..168873.48 rows=7226 width=27) (actual time=0.506..1078.392 rows=6191 loops=5)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..146314.24 rows=7227 width=15) (actual time=0.351..692.889 rows=6191 loops=5)
                                             Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                             Rows Removed by Filter: 1194052
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.061..0.061 rows=1 loops=30953)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 13.350 ms
 Execution time: 1096.605 ms
(22 rows)

SET
SET
SET
                                                                                                                          QUERY PLAN                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170484.70..170484.75 rows=1 width=27) (actual time=435.451..435.452 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170484.70..170485.05 rows=7 width=27) (actual time=435.450..435.450 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=170484.70..170484.77 rows=28 width=27) (actual time=435.444..435.445 rows=6 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 25kB
               ->  Gather  (cost=170336.63..170484.02 rows=28 width=27) (actual time=430.597..436.814 rows=10 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=169336.63..169481.22 rows=7 width=27) (actual time=427.676..429.090 rows=2 loops=5)
                           Group Key: lineitem.l_shipmode
                           ->  Sort  (cost=169336.63..169354.70 rows=7226 width=27) (actual time=426.405..426.791 rows=6191 loops=5)
                                 Sort Key: lineitem.l_shipmode
                                 Sort Method: quicksort  Memory: 701kB
                                 ->  Nested Loop  (cost=0.43..168873.48 rows=7226 width=27) (actual time=0.137..424.055 rows=6191 loops=5)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..146314.24 rows=7227 width=15) (actual time=0.121..393.354 rows=6191 loops=5)
                                             Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                             Rows Removed by Filter: 1194052
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=30953)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 0.570 ms
 Execution time: 436.899 ms
(22 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81502.61..81502.61 rows=1 width=16) (actual time=1620.902..1620.903 rows=1 loops=1)
   ->  Sort  (cost=81502.61..81503.11 rows=200 width=16) (actual time=1620.901..1620.901 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81499.61..81501.61 rows=200 width=16) (actual time=1620.875..1620.878 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77749.61..79249.61 rows=150000 width=12) (actual time=1575.045..1601.019 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..70250.36 rows=1499850 width=8) (actual time=32.830..1120.571 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.354..638.975 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.176..32.176 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.273..15.846 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 12.113 ms
 Execution time: 1622.169 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81502.61..81502.61 rows=1 width=16) (actual time=1423.724..1423.724 rows=1 loops=1)
   ->  Sort  (cost=81502.61..81503.11 rows=200 width=16) (actual time=1423.722..1423.722 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81499.61..81501.61 rows=200 width=16) (actual time=1423.698..1423.702 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77749.61..79249.61 rows=150000 width=12) (actual time=1377.388..1404.074 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..70250.36 rows=1499850 width=8) (actual time=30.107..951.630 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.013..493.297 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.763..29.763 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.042..13.619 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.599 ms
 Execution time: 1424.394 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80785.18..80785.19 rows=1 width=32) (actual time=1050.026..1050.027 rows=1 loops=1)
   ->  Aggregate  (cost=80785.18..80785.19 rows=1 width=32) (actual time=1050.024..1050.024 rows=1 loops=1)
         ->  Hash Join  (cost=9883.58..79384.07 rows=80063 width=33) (actual time=107.255..954.380 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1284.58..69684.20 rows=80063 width=16) (actual time=19.774..801.762 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1264.56 rows=80063 width=0) (actual time=13.924..13.924 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=87.124..87.124 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.008..54.992 rows=200000 loops=1)
 Planning time: 13.238 ms
 Execution time: 1050.492 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80785.18..80785.19 rows=1 width=32) (actual time=203.568..203.569 rows=1 loops=1)
   ->  Aggregate  (cost=80785.18..80785.19 rows=1 width=32) (actual time=203.567..203.567 rows=1 loops=1)
         ->  Hash Join  (cost=9883.58..79384.07 rows=80063 width=33) (actual time=71.887..157.121 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1284.58..69684.20 rows=80063 width=16) (actual time=15.054..66.631 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1264.56 rows=80063 width=0) (actual time=9.409..9.409 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=56.442..56.442 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.008..27.287 rows=200000 loops=1)
 Planning time: 0.521 ms
 Execution time: 203.632 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247418.72..247418.78 rows=1 width=103) (actual time=1760.699..1760.699 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122492.08..122492.09 rows=1 width=32) (actual time=231.997..231.997 rows=1 loops=1)
           ->  HashAggregate  (cost=122242.05..122367.06 rows=10001 width=36) (actual time=229.578..231.343 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3782.68..119882.30 rows=235975 width=16) (actual time=34.057..99.382 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3723.68 rows=235975 width=0) (actual time=23.518..23.518 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124926.63..125520.15 rows=10001 width=103) (actual time=1760.699..1760.699 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.350..4.506 rows=8449 loops=1)
         ->  Sort  (cost=124926.35..124951.35 rows=10001 width=36) (actual time=1755.730..1755.730 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124011.86..124261.89 rows=10001 width=36) (actual time=1754.095..1755.722 rows=1 loops=1)
                     ->  HashAggregate  (cost=124011.86..124161.88 rows=10001 width=36) (actual time=1754.094..1755.720 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3782.68..119882.30 rows=235975 width=16) (actual time=45.971..1236.862 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3723.68 rows=235975 width=0) (actual time=35.571..35.571 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 12.153 ms
 Execution time: 1761.484 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247418.72..247418.78 rows=1 width=103) (actual time=501.327..501.327 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122492.08..122492.09 rows=1 width=32) (actual time=234.104..234.104 rows=1 loops=1)
           ->  HashAggregate  (cost=122242.05..122367.06 rows=10001 width=36) (actual time=231.705..233.435 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3782.68..119882.30 rows=235975 width=16) (actual time=33.309..98.185 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3723.68 rows=235975 width=0) (actual time=23.202..23.202 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124926.63..125520.15 rows=10001 width=103) (actual time=501.325..501.325 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.010..1.267 rows=8449 loops=1)
         ->  Sort  (cost=124926.35..124951.35 rows=10001 width=36) (actual time=499.599..499.599 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124011.86..124261.89 rows=10001 width=36) (actual time=497.998..499.595 rows=1 loops=1)
                     ->  HashAggregate  (cost=124011.86..124161.88 rows=10001 width=36) (actual time=497.997..499.594 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3782.68..119882.30 rows=235975 width=16) (actual time=34.537..126.123 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3723.68 rows=235975 width=0) (actual time=24.927..24.927 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.618 ms
 Execution time: 501.647 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34702.37..34702.37 rows=1 width=44) (actual time=613.899..613.900 rows=1 loops=1)
   ->  Sort  (cost=34702.37..34742.24 rows=15946 width=44) (actual time=613.898..613.898 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33742.88..34622.64 rows=15946 width=44) (actual time=560.790..610.942 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33742.88..33886.94 rows=57624 width=40) (actual time=560.769..570.774 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9816.20..29186.44 rows=57624 width=40) (actual time=97.762..304.470 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.239..140.708 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.637..5.765 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29502 width=40) (actual time=91.483..91.483 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29502 width=40) (actual time=0.010..85.470 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 15.525 ms
 Execution time: 613.978 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34702.37..34702.37 rows=1 width=44) (actual time=560.414..560.414 rows=1 loops=1)
   ->  Sort  (cost=34702.37..34742.24 rows=15946 width=44) (actual time=560.412..560.412 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33742.88..34622.64 rows=15946 width=44) (actual time=507.795..557.527 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33742.88..33886.94 rows=57624 width=40) (actual time=507.775..517.537 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9816.20..29186.44 rows=57624 width=40) (actual time=63.366..252.689 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.242..120.827 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.091..2.212 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29502 width=40) (actual time=61.092..61.092 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29502 width=40) (actual time=0.008..56.325 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.957 ms
 Execution time: 560.467 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501448.52..501448.53 rows=1 width=32) (actual time=2813.367..2813.367 rows=1 loops=1)
   ->  Aggregate  (cost=501448.52..501448.53 rows=1 width=32) (actual time=2813.367..2813.367 rows=1 loops=1)
         ->  Merge Join  (cost=488456.43..501443.53 rows=1994 width=8) (actual time=2242.782..2813.247 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=476910.69..487406.28 rows=190829 width=36) (actual time=2153.957..2713.416 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=476910.69..478818.98 rows=763316 width=36) (actual time=2153.940..2272.313 rows=993577 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 51640kB
                           ->  Gather  (cost=298940.01..388908.38 rows=763316 width=36) (actual time=1112.317..1855.194 rows=997184 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Partial GroupAggregate  (cost=297940.01..311576.78 rows=190829 width=36) (actual time=1073.026..1537.441 rows=199437 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Sort  (cost=297940.01..301690.48 rows=1500188 width=9) (actual time=1073.006..1228.814 rows=1200243 loops=5)
                                             Sort Key: lineitem_1.l_partkey
                                             Sort Method: external merge  Disk: 23664kB
                                             ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127561.88 rows=1500188 width=9) (actual time=0.071..589.157 rows=1200243 loops=5)
               ->  Sort  (cost=11545.75..11561.43 rows=6271 width=21) (actual time=86.912..87.355 rows=6233 loops=1)
                     Sort Key: lineitem.l_partkey
                     Sort Method: quicksort  Memory: 679kB
                     ->  Gather  (cost=1000.43..11150.22 rows=6271 width=21) (actual time=1.332..85.347 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.43..9523.12 rows=2613 width=21) (actual time=0.753..82.708 rows=2078 loops=3)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.408..22.637 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.67 rows=31 width=17) (actual time=0.560..0.857 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 13.772 ms
 Execution time: 2823.694 ms
(34 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=501448.52..501448.53 rows=1 width=32) (actual time=2319.086..2319.086 rows=1 loops=1)
   ->  Aggregate  (cost=501448.52..501448.53 rows=1 width=32) (actual time=2319.084..2319.084 rows=1 loops=1)
         ->  Merge Join  (cost=488456.43..501443.53 rows=1994 width=8) (actual time=1744.848..2318.975 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=476910.69..487406.28 rows=190829 width=36) (actual time=1727.110..2290.199 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=476910.69..478818.98 rows=763316 width=36) (actual time=1727.093..1845.522 rows=993630 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 51640kB
                           ->  Gather  (cost=298940.01..388908.38 rows=763316 width=36) (actual time=781.387..1425.826 rows=997241 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Partial GroupAggregate  (cost=297940.01..311576.78 rows=190829 width=36) (actual time=748.166..1245.204 rows=199448 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Sort  (cost=297940.01..301690.48 rows=1500188 width=9) (actual time=748.152..905.814 rows=1200243 loops=5)
                                             Sort Key: lineitem_1.l_partkey
                                             Sort Method: external merge  Disk: 22248kB
                                             ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127561.88 rows=1500188 width=9) (actual time=0.032..242.778 rows=1200243 loops=5)
               ->  Sort  (cost=11545.75..11561.43 rows=6271 width=21) (actual time=15.829..16.238 rows=6233 loops=1)
                     Sort Key: lineitem.l_partkey
                     Sort Method: quicksort  Memory: 679kB
                     ->  Gather  (cost=1000.43..11150.22 rows=6271 width=21) (actual time=0.376..14.747 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.43..9523.12 rows=2613 width=21) (actual time=0.168..12.419 rows=2078 loops=3)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=87 width=4) (actual time=0.148..9.356 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.67 rows=31 width=17) (actual time=0.007..0.039 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.654 ms
 Execution time: 2328.802 ms
(34 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1258655.28..1258655.53 rows=100 width=71) (actual time=4315.764..4315.766 rows=9 loops=1)
   ->  Sort  (cost=1258655.28..1266155.28 rows=3000001 width=71) (actual time=4315.763..4315.764 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1076497.37..1143997.39 rows=3000001 width=71) (actual time=4315.730..4315.747 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1076497.37..1083997.37 rows=3000001 width=44) (actual time=4315.520..4315.523 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6975.29..694421.29 rows=3000001 width=44) (actual time=1038.152..4315.488 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=3.29..646199.28 rows=3000001 width=25) (actual time=970.023..4247.329 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..372074.49 rows=750000 width=24) (actual time=757.501..3433.074 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..304.233 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..294766.21 rows=1500188 width=4) (actual time=654.714..3061.437 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..276013.86 rows=1500188 width=4) (actual time=654.711..3061.419 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227257.74 rows=6000754 width=9) (actual time=0.003..1621.715 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227257.74 rows=6000754 width=9) (actual time=0.007..556.253 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.832..67.832 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..43.127 rows=150000 loops=1)
 Planning time: 19.904 ms
 Execution time: 4315.846 ms
(28 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1258655.28..1258655.53 rows=100 width=71) (actual time=3240.305..3240.306 rows=9 loops=1)
   ->  Sort  (cost=1258655.28..1266155.28 rows=3000001 width=71) (actual time=3240.305..3240.305 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1076497.37..1143997.39 rows=3000001 width=71) (actual time=3240.273..3240.288 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1076497.37..1083997.37 rows=3000001 width=44) (actual time=3240.266..3240.268 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6975.29..694421.29 rows=3000001 width=44) (actual time=771.343..3240.232 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=3.29..646199.28 rows=3000001 width=25) (actual time=730.353..3199.217 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..372074.49 rows=750000 width=24) (actual time=517.357..2385.395 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..147.891 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..294766.21 rows=1500188 width=4) (actual time=461.142..2172.530 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..276013.86 rows=1500188 width=4) (actual time=461.140..2172.517 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227257.74 rows=6000754 width=9) (actual time=0.003..799.941 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227257.74 rows=6000754 width=9) (actual time=0.007..556.006 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.671..40.671 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.618 rows=150000 loops=1)
 Planning time: 0.999 ms
 Execution time: 3240.383 ms
(28 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18169.51..18169.52 rows=1 width=32) (actual time=851.768..851.769 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18169.51..18169.52 rows=1 width=32) (actual time=851.766..851.766 rows=1 loops=1)
         ->  Gather  (cost=18169.28..18169.49 rows=2 width=32) (actual time=851.755..852.782 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17169.28..17169.29 rows=1 width=32) (actual time=845.452..845.452 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17168.93 rows=47 width=12) (actual time=29.294..845.319 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.558..33.825 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.11 rows=1 width=21) (actual time=4.289..4.800 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 14.924 ms
 Execution time: 853.302 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18169.51..18169.52 rows=1 width=32) (actual time=31.612..31.613 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18169.51..18169.52 rows=1 width=32) (actual time=31.610..31.610 rows=1 loops=1)
         ->  Gather  (cost=18169.28..18169.49 rows=2 width=32) (actual time=31.564..35.413 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17169.28..17169.29 rows=1 width=32) (actual time=29.254..29.255 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17168.93 rows=47 width=12) (actual time=0.670..29.206 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.266..19.918 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.11 rows=1 width=21) (actual time=0.048..0.055 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 0.845 ms
 Execution time: 35.475 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=279943.87..279943.87 rows=1 width=51) (actual time=3823.209..3823.210 rows=1 loops=1)
   ->  Sort  (cost=279943.87..279944.37 rows=200 width=51) (actual time=3823.208..3823.208 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=255628.46..279942.87 rows=200 width=51) (actual time=3638.170..3823.017 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=6.38..230.58 rows=400 width=55) (actual time=0.987..3.135 rows=438 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=59) (actual time=0.978..3.034 rows=438 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=187
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.623..0.623 rows=438 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=255622.08..279520.37 rows=32 width=8) (actual time=7.204..8.445 rows=4371 loops=438)
                     ->  Merge Join  (cost=255622.08..279520.21 rows=32 width=8) (actual time=3155.520..3634.596 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=242746.93..259279.89 rows=487064 width=40) (actual time=2659.457..3105.909 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=242746.93..245053.68 rows=922700 width=13) (actual time=2659.439..2769.023 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14789.11..141189.61 rows=922700 width=13) (actual time=163.100..2264.147 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14558.43 rows=922700 width=0) (actual time=143.042..143.042 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=12875.15..12894.88 rows=7891 width=16) (actual time=495.765..496.417 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=1000.42..12364.37 rows=7891 width=16) (actual time=0.958..491.497 rows=8748 loops=1)
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.325..3.066 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.060..23.141 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.203..0.221 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 20.575 ms
 Execution time: 3825.992 ms
(45 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=279943.87..279943.87 rows=1 width=51) (actual time=1397.638..1397.639 rows=1 loops=1)
   ->  Sort  (cost=279943.87..279944.37 rows=200 width=51) (actual time=1397.637..1397.637 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=255628.46..279942.87 rows=200 width=51) (actual time=1215.605..1397.489 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=6.38..230.58 rows=400 width=55) (actual time=0.064..0.416 rows=438 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=59) (actual time=0.056..0.349 rows=438 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           Heap Blocks: exact=187
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.034..0.034 rows=438 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=255622.08..279520.37 rows=32 width=8) (actual time=1.681..2.912 rows=4371 loops=438)
                     ->  Merge Join  (cost=255622.08..279520.21 rows=32 width=8) (actual time=736.467..1213.100 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=242746.93..259279.89 rows=487064 width=40) (actual time=720.460..1164.199 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=242746.93..245053.68 rows=922700 width=13) (actual time=720.442..830.459 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14789.11..141189.61 rows=922700 width=13) (actual time=122.356..357.898 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14558.43 rows=922700 width=0) (actual time=103.907..103.907 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=12875.15..12894.88 rows=7891 width=16) (actual time=15.700..16.355 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=1000.42..12364.37 rows=7891 width=16) (actual time=0.263..13.582 rows=8748 loops=1)
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.249..4.559 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.036..8.910 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.310 ms
 Execution time: 1400.644 ms
(45 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=203103.49..203103.50 rows=1 width=34) (actual time=1353.423..1353.432 rows=100 loops=1)
   ->  Sort  (cost=203103.49..203103.50 rows=1 width=34) (actual time=1353.423..1353.430 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=203103.46..203103.48 rows=1 width=34) (actual time=1352.180..1352.981 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=203103.46..203103.47 rows=1 width=26) (actual time=1352.172..1352.456 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..203103.45 rows=1 width=26) (actual time=8.046..1336.963 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..203097.09 rows=1 width=34) (actual time=5.264..852.108 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..203093.76 rows=1 width=38) (actual time=5.257..226.227 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..202093.66 rows=1 width=38) (actual time=1.987..1036.588 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133623.18 rows=20000 width=34) (actual time=1.978..664.462 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131312.36 rows=500063 width=8) (actual time=0.577..591.589 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.295..1.295 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.234..1.229 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.220..1.149 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.197..0.197 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 18.455 ms
 Execution time: 1353.617 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=203103.49..203103.50 rows=1 width=34) (actual time=696.249..696.261 rows=100 loops=1)
   ->  Sort  (cost=203103.49..203103.50 rows=1 width=34) (actual time=696.247..696.254 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=203103.46..203103.48 rows=1 width=34) (actual time=694.969..695.779 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=203103.46..203103.47 rows=1 width=26) (actual time=694.960..695.289 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..203103.45 rows=1 width=26) (actual time=1.723..680.598 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..203097.09 rows=1 width=34) (actual time=0.931..420.738 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..203093.76 rows=1 width=38) (actual time=0.927..55.510 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..202093.66 rows=1 width=38) (actual time=2.935..462.503 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133623.18 rows=20000 width=34) (actual time=2.926..362.016 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131312.36 rows=500063 width=8) (actual time=0.025..295.159 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=2.820..2.820 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.071..2.758 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.057..2.683 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.037..0.037 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 1.755 ms
 Execution time: 697.119 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14821.05..14821.08 rows=1 width=72) (actual time=178.135..178.135 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=6242.82..6242.84 rows=1 width=32) (actual time=45.806..45.806 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=45.753..45.870 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=39.838..39.838 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1990 width=6) (actual time=0.026..37.772 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8578.22..8598.32 rows=731 width=72) (actual time=178.135..178.135 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8578.22..8580.04 rows=731 width=38) (actual time=177.891..177.948 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8543.44 rows=731 width=38) (actual time=45.868..175.757 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=45.837..105.427 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 15.162 ms
 Execution time: 178.499 ms
(24 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14821.05..14821.08 rows=1 width=72) (actual time=122.247..122.247 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=6242.82..6242.84 rows=1 width=32) (actual time=31.180..31.180 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=31.139..31.251 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=29.309..29.309 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1990 width=6) (actual time=0.017..27.397 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8578.22..8598.32 rows=731 width=72) (actual time=122.246..122.246 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8578.22..8580.04 rows=731 width=38) (actual time=122.002..122.034 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8543.44 rows=731 width=38) (actual time=31.222..120.285 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=31.208..85.996 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.731 ms
 Execution time: 122.619 ms
(24 rows)

