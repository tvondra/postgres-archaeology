query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4244661.45..4244661.45 rows=1 width=236) (actual time=72222.983..72222.984 rows=1 loops=1)
   ->  Sort  (cost=4244661.45..4244661.46 rows=6 width=236) (actual time=72222.982..72222.982 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4244661.25..4244661.42 rows=6 width=236) (actual time=72222.952..72222.960 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875002.05 rows=59241480 width=25) (actual time=0.626..11757.310 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 12.495 ms
 Execution Time: 72224.248 ms
(11 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4244661.45..4244661.45 rows=1 width=236) (actual time=70180.978..70180.979 rows=1 loops=1)
   ->  Sort  (cost=4244661.45..4244661.46 rows=6 width=236) (actual time=70180.977..70180.977 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4244661.25..4244661.42 rows=6 width=236) (actual time=70180.951..70180.959 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..1875002.05 rows=59241480 width=25) (actual time=0.023..9942.645 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 0.507 ms
 Execution Time: 70181.033 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1126789.85..1126789.85 rows=1 width=192) (actual time=5307.208..5307.223 rows=100 loops=1)
   ->  Sort  (cost=1126789.85..1126789.85 rows=1 width=192) (actual time=5307.207..5307.216 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=557470.90..1126789.84 rows=1 width=192) (actual time=3185.237..5303.714 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.05 rows=8848 width=30) (actual time=0.461..792.601 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=557469.96..565453.67 rows=1596743 width=172) (actual time=3183.885..3646.168 rows=1603828 loops=1)
                     ->  Sort  (cost=557469.96..561461.81 rows=1596743 width=172) (actual time=3183.880..3464.108 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305240.18 rows=1596743 width=172) (actual time=43.589..2492.726 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255223.63 rows=8000163 width=14) (actual time=0.508..1092.356 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=43.040..43.041 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.677..37.291 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.329..25.415 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.342..0.343 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.337..0.342 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.166..0.167 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.165..0.165 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.162..0.163 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.107..0.107 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.095..0.104 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.089..0.102 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.088..0.100 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.084..0.085 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.011 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 16.679 ms
 Execution Time: 5345.593 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1126789.85..1126789.85 rows=1 width=192) (actual time=3938.758..3938.773 rows=100 loops=1)
   ->  Sort  (cost=1126789.85..1126789.85 rows=1 width=192) (actual time=3938.757..3938.766 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=557470.90..1126789.84 rows=1 width=192) (actual time=2725.443..3936.238 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.05 rows=8848 width=30) (actual time=0.016..488.351 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=557469.96..565453.67 rows=1596743 width=172) (actual time=2725.332..3162.482 rows=1603828 loops=1)
                     ->  Sort  (cost=557469.96..561461.81 rows=1596743 width=172) (actual time=2725.329..2982.852 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305240.18 rows=1596743 width=172) (actual time=25.650..2048.642 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255223.63 rows=8000163 width=14) (actual time=0.036..778.384 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=166) (actual time=25.598..25.600 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=166) (actual time=0.031..20.416 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.006..5.821 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.022..0.024 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.016..0.022 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.011..0.011 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.009..0.015 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.002..0.003 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.012..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
 Planning Time: 1.915 ms
 Execution Time: 3974.493 ms
(53 rows)

query 3 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3432557.80..3432557.83 rows=10 width=44) (actual time=29572.600..29572.604 rows=10 loops=1)
   ->  Sort  (cost=3432557.80..3440354.39 rows=3118637 width=44) (actual time=29572.599..29572.602 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3271606.07..3365165.18 rows=3118637 width=44) (actual time=29379.341..29552.378 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3271606.07..3279402.66 rows=3118637 width=24) (actual time=29379.327..29391.926 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=539617.72..2894105.83 rows=3118637 width=24) (actual time=8477.599..29278.484 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875002.05 rows=32651383 width=16) (actual time=0.418..12000.456 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=514716.67..514716.67 rows=1432484 width=12) (actual time=8474.018..8474.020 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144170.03..514716.67 rows=1432484 width=12) (actual time=1254.277..8102.182 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85757.43..437338.31 rows=7225031 width=16) (actual time=747.690..5716.313 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83951.17 rows=7225031 width=0) (actual time=703.136..703.136 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54695.41..54695.41 rows=297375 width=4) (actual time=505.901..505.902 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54695.41 rows=297375 width=4) (actual time=0.530..452.387 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 18.227 ms
 Execution Time: 29573.804 ms
(30 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3432557.80..3432557.83 rows=10 width=44) (actual time=23638.835..23638.839 rows=10 loops=1)
   ->  Sort  (cost=3432557.80..3440354.39 rows=3118637 width=44) (actual time=23638.833..23638.837 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=3271606.07..3365165.18 rows=3118637 width=44) (actual time=23445.306..23618.758 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=3271606.07..3279402.66 rows=3118637 width=24) (actual time=23445.292..23457.776 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 31119kB
                     ->  Hash Join  (cost=539617.72..2894105.83 rows=3118637 width=24) (actual time=4655.644..23346.170 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1875002.05 rows=32651383 width=16) (actual time=0.016..10069.466 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 27451823
                           ->  Hash  (cost=514716.67..514716.67 rows=1432484 width=12) (actual time=4653.789..4653.791 rows=1451805 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                                 ->  Hash Join  (cost=144170.03..514716.67 rows=1432484 width=12) (actual time=1035.150..4390.384 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85757.43..437338.31 rows=7225031 width=16) (actual time=660.816..2525.678 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83951.17 rows=7225031 width=0) (actual time=616.952..616.952 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54695.41..54695.41 rows=297375 width=4) (actual time=373.684..373.684 rows=300276 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                             ->  Seq Scan on customer  (cost=0.00..54695.41 rows=297375 width=4) (actual time=0.029..322.756 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 1199724
 Planning Time: 1.162 ms
 Execution Time: 23639.222 ms
(30 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2013804.85..2013804.86 rows=1 width=24) (actual time=19336.582..19336.584 rows=1 loops=1)
   ->  Sort  (cost=2013804.85..2013804.87 rows=5 width=24) (actual time=19336.581..19336.582 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2013804.78..2013804.83 rows=5 width=24) (actual time=19335.765..19335.767 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=7820.56..2011084.37 rows=544082 width=16) (actual time=125.583..19060.426 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=7819.99..277249.54 rows=544103 width=20) (actual time=125.131..5075.825 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7683.97 rows=544103 width=0) (actual time=85.729..85.730 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.024..0.024 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 16.743 ms
 Execution Time: 19337.604 ms
(18 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2013804.85..2013804.86 rows=1 width=24) (actual time=4871.808..4871.809 rows=1 loops=1)
   ->  Sort  (cost=2013804.85..2013804.87 rows=5 width=24) (actual time=4871.807..4871.808 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2013804.78..2013804.83 rows=5 width=24) (actual time=4871.783..4871.784 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=7820.56..2011084.37 rows=544082 width=16) (actual time=120.988..4680.454 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=7819.99..277249.54 rows=544103 width=20) (actual time=120.958..1212.754 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7683.97 rows=544103 width=0) (actual time=81.896..81.896 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 1.094 ms
 Execution Time: 4871.876 ms
(18 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2078210.48..2078210.48 rows=1 width=58) (actual time=22649.113..22649.119 rows=1 loops=1)
   ->  Sort  (cost=2078210.48..2078210.54 rows=25 width=58) (actual time=22649.112..22649.117 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2077313.68..2078210.35 rows=25 width=58) (actual time=22625.324..22649.097 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2077313.68..2077492.95 rows=71709 width=38) (actual time=22619.330..22622.411 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=100635.68..2071530.39 rows=71709 width=38) (actual time=954.795..22570.229 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=95914.68..2057283.75 rows=1814406 width=50) (actual time=905.444..22099.913 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=95914.12..404245.12 rows=453619 width=38) (actual time=904.969..7092.022 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32591.92..327881.36 rows=2268096 width=8) (actual time=303.493..5842.599 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32024.90 rows=2268096 width=0) (actual time=259.200..259.200 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59572.51..59572.51 rows=299975 width=38) (actual time=600.997..601.000 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59572.51 rows=299975 width=38) (actual time=1.028..536.936 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=8) (actual time=0.578..375.381 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.438..0.440 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.426..0.437 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.206..0.210 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.210..0.210 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.203..0.205 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.030..0.032 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.846..44.846 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.426..29.126 rows=100000 loops=1)
 Planning Time: 23.943 ms
 Execution Time: 22650.330 ms
(41 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2078210.48..2078210.48 rows=1 width=58) (actual time=6250.190..6250.197 rows=1 loops=1)
   ->  Sort  (cost=2078210.48..2078210.54 rows=25 width=58) (actual time=6250.189..6250.195 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2077313.68..2078210.35 rows=25 width=58) (actual time=6226.741..6250.177 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2077313.68..2077492.95 rows=71709 width=38) (actual time=6220.894..6223.948 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=100635.68..2071530.39 rows=71709 width=38) (actual time=802.628..6186.322 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=95914.68..2057283.75 rows=1814406 width=50) (actual time=763.178..5773.667 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=95914.12..404245.12 rows=453619 width=38) (actual time=763.154..2617.047 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32591.92..327881.36 rows=2268096 width=8) (actual time=277.454..1588.386 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..32024.90 rows=2268096 width=0) (actual time=233.872..233.873 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59572.51..59572.51 rows=299975 width=38) (actual time=485.348..485.350 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59572.51 rows=299975 width=38) (actual time=0.060..423.864 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=8) (actual time=0.020..267.604 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.035 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.028..0.033 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.005..0.006 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.919..38.920 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.024..21.775 rows=100000 loops=1)
 Planning Time: 3.057 ms
 Execution Time: 6250.393 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1972614.47..1972614.48 rows=1 width=32) (actual time=13005.709..13005.710 rows=1 loops=1)
   ->  Aggregate  (cost=1972614.47..1972614.48 rows=1 width=32) (actual time=13005.707..13005.708 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=211816.52..1966610.40 rows=1200812 width=12) (actual time=1295.354..12487.653 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211516.32 rows=1200812 width=0) (actual time=1223.781..1223.781 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.251 ms
 Execution Time: 13007.075 ms
(10 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1972614.47..1972614.48 rows=1 width=32) (actual time=6415.140..6415.142 rows=1 loops=1)
   ->  Aggregate  (cost=1972614.47..1972614.48 rows=1 width=32) (actual time=6415.139..6415.140 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=211816.52..1966610.40 rows=1200812 width=12) (actual time=1178.082..6059.653 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Rows Removed by Index Recheck: 13724091
               Heap Blocks: exact=395900 lossy=267068
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211516.32 rows=1200812 width=0) (actual time=1106.989..1106.989 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.600 ms
 Execution Time: 6415.338 ms
(10 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2716427.16..2716427.28 rows=1 width=92) (actual time=18959.211..18959.217 rows=1 loops=1)
   ->  GroupAggregate  (cost=2716427.16..2717643.88 rows=10040 width=92) (actual time=18959.210..18959.215 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2716427.16..2716575.88 rows=59487 width=72) (actual time=18951.955..18952.669 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563366.30..2711709.75 rows=59487 width=72) (actual time=5138.185..18922.380 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2110698.04 rows=1429417 width=46) (actual time=36.249..13021.870 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024973.86 rows=18080163 width=24) (actual time=0.458..10862.776 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=35.748..35.750 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.535..34.294 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.325..24.666 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.201..0.202 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.192..0.196 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536537.14..536537.14 rows=1199821 width=30) (actual time=5097.391..5097.393 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57051.62..536537.14 rows=1199821 width=30) (actual time=542.490..4832.119 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411245.67 rows=14997767 width=8) (actual time=0.543..1696.053 rows=15000000 loops=1)
                                 ->  Hash  (cost=55551.74..55551.74 rows=119990 width=30) (actual time=541.611..541.613 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55551.74 rows=119990 width=30) (actual time=0.568..515.657 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=8) (actual time=0.533..374.169 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.025..0.025 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.020 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 22.626 ms
 Execution Time: 18960.286 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2716427.16..2716427.28 rows=1 width=92) (actual time=15602.353..15602.360 rows=1 loops=1)
   ->  GroupAggregate  (cost=2716427.16..2717643.88 rows=10040 width=92) (actual time=15602.352..15602.358 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=2716427.16..2716575.88 rows=59487 width=72) (actual time=15595.078..15595.809 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563366.30..2711709.75 rows=59487 width=72) (actual time=4191.611..15567.038 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2110698.04 rows=1429417 width=46) (actual time=18.999..10643.836 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024973.86 rows=18080163 width=24) (actual time=0.034..8833.454 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=18.951..18.952 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.015..17.901 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..5.707 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536537.14..536537.14 rows=1199821 width=30) (actual time=4170.460..4170.462 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57051.62..536537.14 rows=1199821 width=30) (actual time=292.223..3922.789 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411245.67 rows=14997767 width=8) (actual time=0.030..1250.763 rows=15000000 loops=1)
                                 ->  Hash  (cost=55551.74..55551.74 rows=119990 width=30) (actual time=291.894..291.895 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55551.74 rows=119990 width=30) (actual time=0.021..271.219 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=8) (actual time=0.004..88.059 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.011 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.321 ms
 Execution Time: 15602.513 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1295303.55..1295303.80 rows=1 width=40) (actual time=60641.291..60641.298 rows=1 loops=1)
   ->  GroupAggregate  (cost=1295303.55..1295895.98 rows=2406 width=40) (actual time=60641.290..60641.296 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1295303.55..1295363.36 rows=23924 width=46) (actual time=60636.044..60636.518 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=936341.66..1293563.54 rows=23924 width=46) (actual time=55159.062..60623.514 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 287513
                     ->  Hash Join  (cost=936341.66..1284802.38 rows=23924 width=20) (actual time=55159.019..60569.800 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=931870.66..1280267.83 rows=24209 width=20) (actual time=55114.707..60513.954 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=868548.46..1216249.62 rows=121045 width=24) (actual time=54533.925..59902.982 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=65313.35..394759.51 rows=4545211 width=12) (actual time=532.133..4937.969 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64177.04 rows=4545211 width=0) (actual time=487.282..487.282 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=798242.50..798242.50 rows=399409 width=20) (actual time=54001.432..54001.434 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.56..798242.50 rows=399409 width=20) (actual time=1.808..53593.068 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.76 rows=13316 width=4) (actual time=1.279..573.968 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..54.64 rows=35 width=24) (actual time=0.305..4.056 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59572.51..59572.51 rows=299975 width=4) (actual time=580.117..580.119 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59572.51 rows=299975 width=4) (actual time=1.113..529.342 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=8) (actual time=0.660..372.745 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.438..0.439 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.427..0.436 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.218..0.221 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.198..0.198 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.190..0.192 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.012..44.013 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.364..28.796 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.019 rows=25 loops=1)
 Planning Time: 27.215 ms
 Execution Time: 60642.325 ms
(50 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1295303.55..1295303.80 rows=1 width=40) (actual time=5145.003..5145.010 rows=1 loops=1)
   ->  GroupAggregate  (cost=1295303.55..1295895.98 rows=2406 width=40) (actual time=5145.002..5145.008 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1295303.55..1295363.36 rows=23924 width=46) (actual time=5139.901..5140.364 rows=11818 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=936341.66..1293563.54 rows=23924 width=46) (actual time=2952.400..5131.967 rows=23842 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 287513
                     ->  Hash Join  (cost=936341.66..1284802.38 rows=23924 width=20) (actual time=2952.379..5091.276 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=931870.66..1280267.83 rows=24209 width=20) (actual time=2915.099..5044.369 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=868548.46..1216249.62 rows=121045 width=24) (actual time=2463.934..4566.421 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=65313.35..394759.51 rows=4545211 width=12) (actual time=487.427..1745.475 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64177.04 rows=4545211 width=0) (actual time=443.433..443.434 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=798242.50..798242.50 rows=399409 width=20) (actual time=1976.208..1976.209 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.56..798242.50 rows=399409 width=20) (actual time=0.107..1858.630 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65980.76 rows=13316 width=4) (actual time=0.076..308.010 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..54.64 rows=35 width=24) (actual time=0.010..0.114 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59572.51..59572.51 rows=299975 width=4) (actual time=450.424..450.427 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59572.51 rows=299975 width=4) (actual time=0.072..402.072 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=8) (actual time=0.024..250.103 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.039..0.041 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.034..0.040 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.014..0.015 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.975..36.976 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.025..20.899 rows=100000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=23842)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.009 rows=25 loops=1)
 Planning Time: 3.610 ms
 Execution Time: 5145.288 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1497076.37..1497076.41 rows=1 width=66) (actual time=186386.227..186386.232 rows=1 loops=1)
   ->  GroupAggregate  (cost=1497076.37..1497080.57 rows=112 width=66) (actual time=186386.226..186386.230 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1497076.37..1497076.65 rows=112 width=57) (actual time=186377.040..186379.074 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 239856kB
               ->  Nested Loop  (cost=66992.14..1497072.56 rows=112 width=57) (actual time=688.734..182639.013 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66992.14..1497030.07 rows=112 width=31) (actual time=687.720..175224.444 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66991.71..1496646.74 rows=112 width=31) (actual time=686.765..127587.082 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66991.41..1496279.59 rows=112 width=35) (actual time=686.315..118615.125 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66990.85..343214.95 rows=323238 width=18) (actual time=685.423..3244.813 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255223.63 rows=8000163 width=14) (actual time=0.571..1391.455 rows=8000000 loops=1)
                                             ->  Hash  (cost=65980.76..65980.76 rows=80807 width=4) (actual time=684.443..684.444 rows=108312 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65980.76 rows=80807 width=4) (actual time=0.498..661.036 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.040..0.263 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.185..0.188 rows=25 loops=1)
 Planning Time: 28.059 ms
 Execution Time: 186416.298 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1497076.37..1497076.41 rows=1 width=66) (actual time=73718.058..73718.063 rows=1 loops=1)
   ->  GroupAggregate  (cost=1497076.37..1497080.57 rows=112 width=66) (actual time=73718.056..73718.060 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=1497076.37..1497076.65 rows=112 width=57) (actual time=73708.517..73710.542 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 239856kB
               ->  Nested Loop  (cost=66992.14..1497072.56 rows=112 width=57) (actual time=642.909..70316.614 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66992.14..1497030.07 rows=112 width=31) (actual time=642.888..64150.955 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66991.71..1496646.74 rows=112 width=31) (actual time=642.875..43259.821 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66991.41..1496279.59 rows=112 width=35) (actual time=642.860..36403.598 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66990.85..343214.95 rows=323238 width=18) (actual time=642.829..2910.079 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255223.63 rows=8000163 width=14) (actual time=0.372..1219.289 rows=8000000 loops=1)
                                             ->  Hash  (cost=65980.76..65980.76 rows=80807 width=4) (actual time=642.075..642.076 rows=108312 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65980.76 rows=80807 width=4) (actual time=0.314..619.882 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..3.56 rows=1 width=29) (actual time=0.014..0.075 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.008 rows=25 loops=1)
 Planning Time: 17.135 ms
 Execution Time: 73745.340 ms
(30 rows)

query 10 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2467916.42..2467916.47 rows=20 width=202) (actual time=21198.027..21198.033 rows=20 loops=1)
   ->  Sort  (cost=2467916.42..2469411.81 rows=598156 width=202) (actual time=21198.026..21198.030 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2435550.42..2451999.71 rows=598156 width=202) (actual time=20188.812..21073.226 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=2435550.42..2437045.81 rows=598156 width=182) (actual time=20188.793..20364.333 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=388398.91..2343983.86 rows=598156 width=182) (actual time=5803.167..19444.063 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388397.34..2342145.96 rows=598156 width=160) (actual time=5802.971..19244.978 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286479.20..2200591.66 rows=598156 width=16) (actual time=4831.043..17385.383 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1875002.05 rows=14899200 width=16) (actual time=0.505..10794.133 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278952.79..278952.79 rows=602113 width=8) (actual time=4828.484..4828.484 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8653.09..278952.79 rows=602113 width=8) (actual time=124.478..4665.619 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8502.57 rows=602113 width=0) (actual time=85.021..85.022 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50945.73..50945.73 rows=1499873 width=148) (actual time=971.357..971.358 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=148) (actual time=0.456..486.036 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.185..0.185 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.168..0.173 rows=25 loops=1)
 Planning Time: 21.440 ms
 Execution Time: 21235.572 ms
(33 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2467916.42..2467916.47 rows=20 width=202) (actual time=15587.940..15587.947 rows=20 loops=1)
   ->  Sort  (cost=2467916.42..2469411.81 rows=598156 width=202) (actual time=15587.938..15587.943 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2435550.42..2451999.71 rows=598156 width=202) (actual time=14579.761..15467.957 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Sort  (cost=2435550.42..2437045.81 rows=598156 width=182) (actual time=14579.742..14760.102 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Sort Method: external merge  Disk: 218520kB
                     ->  Hash Join  (cost=388398.91..2343983.86 rows=598156 width=182) (actual time=2393.102..13828.667 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=388397.34..2342145.96 rows=598156 width=160) (actual time=2393.076..13631.723 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=286479.20..2200591.66 rows=598156 width=16) (actual time=1551.656..11925.042 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1875002.05 rows=14899200 width=16) (actual time=0.016..8689.399 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 45177869
                                       ->  Hash  (cost=278952.79..278952.79 rows=602113 width=8) (actual time=1550.341..1550.342 rows=573160 loops=1)
                                             Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                             ->  Bitmap Heap Scan on orders  (cost=8653.09..278952.79 rows=602113 width=8) (actual time=113.344..1423.766 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   Heap Blocks: exact=233346
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8502.57 rows=602113 width=0) (actual time=74.609..74.609 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50945.73..50945.73 rows=1499873 width=148) (actual time=840.889..840.889 rows=1500000 loops=1)
                                       Buckets: 262144  Batches: 16  Memory Usage: 18791kB
                                       ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=148) (actual time=0.013..359.074 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=1)
 Planning Time: 1.541 ms
 Execution Time: 15624.781 ms
(33 rows)

query 11 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625581.72..625581.72 rows=1 width=36) (actual time=3682.805..3682.811 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293136.44..293136.45 rows=1 width=32) (actual time=1540.344..1540.346 rows=1 loops=1)
           ->  Hash Join  (cost=2323.58..290741.32 rows=319349 width=10) (actual time=2.887..1450.010 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255223.63 rows=8000163 width=14) (actual time=0.036..736.347 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=2.819..2.821 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.492..2.410 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.481..2.008 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.304..0.304 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332445.27..332711.40 rows=106450 width=36) (actual time=3682.804..3682.806 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319937.44..331913.02 rows=106450 width=36) (actual time=3682.790..3682.792 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319937.44..320735.81 rows=319349 width=14) (actual time=1923.066..1935.100 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.58..290741.32 rows=319349 width=14) (actual time=41.986..1868.968 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255223.63 rows=8000163 width=18) (actual time=0.642..1059.876 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=41.265..41.266 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=3.118..40.205 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.271..0.274 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8) (actual time=2.840..39.298 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=2.375..2.375 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 19.606 ms
 Execution Time: 3684.104 ms
(43 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=625581.72..625581.72 rows=1 width=36) (actual time=3256.205..3256.210 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293136.44..293136.45 rows=1 width=32) (actual time=1543.645..1543.648 rows=1 loops=1)
           ->  Hash Join  (cost=2323.58..290741.32 rows=319349 width=10) (actual time=2.841..1453.486 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255223.63 rows=8000163 width=14) (actual time=0.035..740.700 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=2.776..2.777 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.486..2.369 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.476..1.984 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.300..0.300 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=332445.27..332711.40 rows=106450 width=36) (actual time=3256.204..3256.206 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=319937.44..331913.02 rows=106450 width=36) (actual time=3256.195..3256.197 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Rows Removed by Filter: 301833
               ->  Sort  (cost=319937.44..320735.81 rows=319349 width=14) (actual time=1492.472..1504.608 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 25961kB
                     ->  Hash Join  (cost=2323.58..290741.32 rows=319349 width=14) (actual time=3.608..1440.130 rows=320800 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255223.63 rows=8000163 width=18) (actual time=0.024..729.667 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.58..2273.58 rows=4000 width=4) (actual time=3.556..3.557 rows=4010 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 173kB
                                 ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=4) (actual time=0.498..3.150 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 24
                                       ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=8) (actual time=0.489..2.778 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = nation.n_nationkey)
                                             Heap Blocks: exact=1869
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.309..0.309 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 0.888 ms
 Execution Time: 3256.276 ms
(43 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030374.15..3031177.08 rows=1 width=27) (actual time=18984.035..18984.038 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030374.15..3035994.66 rows=7 width=27) (actual time=18984.034..18984.036 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030374.15..3031076.71 rows=281022 width=27) (actual time=18937.980..18943.978 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478402.06..3004941.21 rows=281022 width=27) (actual time=14786.695..18861.893 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411245.67 rows=14997767 width=20) (actual time=0.442..1658.655 rows=15000000 loops=1)
                     ->  Hash  (cost=2474889.29..2474889.29 rows=281022 width=15) (actual time=14785.483..14785.483 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474889.29 rows=281022 width=15) (actual time=1.117..14693.505 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 15.719 ms
 Execution Time: 18985.180 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3030374.15..3031177.08 rows=1 width=27) (actual time=16294.722..16294.724 rows=1 loops=1)
   ->  GroupAggregate  (cost=3030374.15..3035994.66 rows=7 width=27) (actual time=16294.721..16294.723 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3030374.15..3031076.71 rows=281022 width=27) (actual time=16248.791..16254.780 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478402.06..3004941.21 rows=281022 width=27) (actual time=12672.034..16175.782 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411245.67 rows=14997767 width=20) (actual time=0.022..1229.117 rows=15000000 loops=1)
                     ->  Hash  (cost=2474889.29..2474889.29 rows=281022 width=15) (actual time=12671.339..12671.340 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474889.29 rows=281022 width=15) (actual time=0.106..12587.547 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 0.645 ms
 Execution Time: 16294.805 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2687447.80..2687447.80 rows=1 width=16) (actual time=19828.727..19828.729 rows=1 loops=1)
   ->  Sort  (cost=2687447.80..2687448.30 rows=200 width=16) (actual time=19828.725..19828.727 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2687444.80..2687446.80 rows=200 width=16) (actual time=19828.702..19828.710 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2539737.11..2664946.71 rows=1499873 width=12) (actual time=16102.891..19645.192 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2539737.11..2576474.07 rows=14694782 width=8) (actual time=16102.879..17885.107 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=53279.94..661256.94 rows=14694782 width=8) (actual time=345.708..11317.636 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448740.09 rows=14694782 width=8) (actual time=0.532..5152.998 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=28672.52..28672.52 rows=1499873 width=4) (actual time=343.884..343.885 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28672.52 rows=1499873 width=4) (actual time=0.019..154.850 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 13.436 ms
 Execution Time: 19869.693 ms
(22 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2687447.80..2687447.80 rows=1 width=16) (actual time=19155.513..19155.515 rows=1 loops=1)
   ->  Sort  (cost=2687447.80..2687448.30 rows=200 width=16) (actual time=19155.512..19155.514 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2687444.80..2687446.80 rows=200 width=16) (actual time=19155.493..19155.500 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  GroupAggregate  (cost=2539737.11..2664946.71 rows=1499873 width=12) (actual time=15436.076..18975.035 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Sort  (cost=2539737.11..2576474.07 rows=14694782 width=8) (actual time=15436.063..17206.487 rows=15337604 loops=1)
                           Sort Key: customer.c_custkey
                           Sort Method: external merge  Disk: 268424kB
                           ->  Hash Right Join  (cost=53279.94..661256.94 rows=14694782 width=8) (actual time=315.325..10656.105 rows=15337604 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..448740.09 rows=14694782 width=8) (actual time=0.032..4665.763 rows=14837583 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                       Rows Removed by Filter: 162417
                                 ->  Hash  (cost=28672.52..28672.52 rows=1499873 width=4) (actual time=313.915..313.915 rows=1500000 loops=1)
                                       Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                       ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28672.52 rows=1499873 width=4) (actual time=0.019..127.788 rows=1500000 loops=1)
                                             Heap Fetches: 0
 Planning Time: 0.576 ms
 Execution Time: 19196.034 ms
(22 rows)

query 14 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1301649.74..1301649.75 rows=1 width=32) (actual time=68343.020..68343.023 rows=1 loops=1)
   ->  Aggregate  (cost=1301649.74..1301649.75 rows=1 width=32) (actual time=68343.019..68343.021 rows=1 loops=1)
         ->  Hash Join  (cost=99653.14..1288127.85 rows=772679 width=33) (actual time=872.953..67877.608 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1165229.00 rows=772679 width=16) (actual time=1.352..65808.146 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.81..60980.81 rows=1999981 width=25) (actual time=864.688..864.689 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.81 rows=1999981 width=25) (actual time=0.575..531.183 rows=2000000 loops=1)
 Planning Time: 16.166 ms
 Execution Time: 68344.292 ms
(11 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1301649.74..1301649.75 rows=1 width=32) (actual time=3577.233..3577.235 rows=1 loops=1)
   ->  Aggregate  (cost=1301649.74..1301649.75 rows=1 width=32) (actual time=3577.232..3577.234 rows=1 loops=1)
         ->  Hash Join  (cost=99653.14..1288127.85 rows=772679 width=33) (actual time=733.911..3263.357 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1165229.00 rows=772679 width=16) (actual time=0.048..1925.870 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.81..60980.81 rows=1999981 width=25) (actual time=732.877..732.877 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60980.81 rows=1999981 width=25) (actual time=0.027..407.516 rows=2000000 loops=1)
 Planning Time: 0.939 ms
 Execution Time: 3577.306 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3992053.25..3992147.30 rows=1 width=103) (actual time=20788.157..20788.159 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1878681.77..1878681.78 rows=1 width=32) (actual time=6042.880..6042.881 rows=1 loops=1)
           ->  HashAggregate  (cost=1876152.04..1877416.91 rows=101189 width=36) (actual time=6000.111..6036.840 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=35738.29..1853862.55 rows=2228949 width=16) (actual time=351.767..4516.773 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35181.06 rows=2228949 width=0) (actual time=279.292..279.292 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2113371.47..2160961.39 rows=506 width=103) (actual time=20788.156..20788.157 rows=1 loops=1)
         ->  GroupAggregate  (cost=2113371.18..2159720.97 rows=506 width=36) (actual time=20787.468..20787.468 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2113371.18..2118943.55 rows=2228949 width=16) (actual time=14044.170..14209.464 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=35738.29..1853862.55 rows=2228949 width=16) (actual time=416.324..13001.733 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35181.06 rows=2228949 width=0) (actual time=342.620..342.620 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.44 rows=1 width=71) (actual time=0.683..0.683 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 11.410 ms
 Execution Time: 20796.746 ms
(29 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3992053.25..3992147.30 rows=1 width=103) (actual time=12689.667..12689.670 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1878681.77..1878681.78 rows=1 width=32) (actual time=6089.285..6089.286 rows=1 loops=1)
           ->  HashAggregate  (cost=1876152.04..1877416.91 rows=101189 width=36) (actual time=6046.571..6083.271 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=35738.29..1853862.55 rows=2228949 width=16) (actual time=352.538..4579.619 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35181.06 rows=2228949 width=0) (actual time=279.988..279.988 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=2113371.47..2160961.39 rows=506 width=103) (actual time=12689.666..12689.667 rows=1 loops=1)
         ->  GroupAggregate  (cost=2113371.18..2159720.97 rows=506 width=36) (actual time=12689.630..12689.631 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 69997
               ->  Sort  (cost=2113371.18..2118943.55 rows=2228949 width=16) (actual time=5900.880..6063.895 rows=1585450 loops=1)
                     Sort Key: lineitem.l_suppkey
                     Sort Method: external merge  Disk: 60920kB
                     ->  Bitmap Heap Scan on lineitem  (cost=35738.29..1853862.55 rows=2228949 width=16) (actual time=376.057..5059.914 rows=2265714 loops=1)
                           Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                           Rows Removed by Index Recheck: 13223651
                           Heap Blocks: exact=401153 lossy=267105
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35181.06 rows=2228949 width=0) (actual time=303.556..303.556 rows=2265714 loops=1)
                                 Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.44 rows=1 width=71) (actual time=0.031..0.032 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.163 ms
 Execution Time: 12698.884 ms
(29 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=357228.05..357228.05 rows=1 width=44) (actual time=6542.178..6542.181 rows=1 loops=1)
   ->  Sort  (cost=357228.05..357609.59 rows=152617 width=44) (actual time=6542.177..6542.180 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=347645.35..356464.97 rows=152617 width=44) (actual time=5914.231..6536.821 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=347645.35..349104.04 rows=583476 width=40) (actual time=5914.182..6256.243 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98098.60..281507.18 rows=583476 width=40) (actual time=823.157..3133.877 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176379.81 rows=4000082 width=8) (actual time=37.114..1533.847 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.262..36.817 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.52..90980.52 rows=291729 width=40) (actual time=785.357..785.358 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.52 rows=291729 width=40) (actual time=0.816..713.900 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 14.554 ms
 Execution Time: 6551.028 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=357228.05..357228.05 rows=1 width=44) (actual time=6062.711..6062.714 rows=1 loops=1)
   ->  Sort  (cost=357228.05..357609.59 rows=152617 width=44) (actual time=6062.710..6062.712 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=347645.35..356464.97 rows=152617 width=44) (actual time=5434.567..6057.373 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=347645.35..349104.04 rows=583476 width=40) (actual time=5434.517..5776.220 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98098.60..281507.18 rows=583476 width=40) (actual time=521.131..2659.680 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176379.81 rows=4000082 width=8) (actual time=20.976..1366.733 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.092..20.922 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90980.52..90980.52 rows=291729 width=40) (actual time=499.498..499.499 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90980.52 rows=291729 width=40) (actual time=0.019..437.056 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 0.927 ms
 Execution Time: 6071.184 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10840054.61..10840054.63 rows=1 width=32) (actual time=50084.934..50084.935 rows=1 loops=1)
   ->  Aggregate  (cost=10840054.61..10840054.63 rows=1 width=32) (actual time=50084.932..50084.934 rows=1 loops=1)
         ->  Merge Join  (cost=10134087.38..10840008.35 rows=18505 width=8) (actual time=28829.887..50083.467 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10134086.39..10609707.35 rows=1713702 width=36) (actual time=28822.093..47636.344 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10134086.39..10284058.20 rows=59988724 width=9) (actual time=28822.020..38968.897 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1115736kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725030.24 rows=59988724 width=9) (actual time=0.462..9401.946 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..208023.83 rows=64788 width=21) (actual time=1.909..2320.508 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..207861.86 rows=64788 width=21) (actual time=1.905..2293.391 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89212.05 rows=2160 width=4) (actual time=1.596..667.412 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..54.58 rows=35 width=17) (actual time=0.566..0.806 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 15.505 ms
 Execution Time: 50211.006 ms
(21 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10840054.61..10840054.63 rows=1 width=32) (actual time=45927.110..45927.112 rows=1 loops=1)
   ->  Aggregate  (cost=10840054.61..10840054.63 rows=1 width=32) (actual time=45927.109..45927.110 rows=1 loops=1)
         ->  Merge Join  (cost=10134087.38..10840008.35 rows=18505 width=8) (actual time=26765.234..45926.182 rows=5319 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 54632
               ->  GroupAggregate  (cost=10134086.39..10609707.35 rows=1713702 width=36) (actual time=26759.395..45364.662 rows=1999333 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=10134086.39..10284058.20 rows=59988724 width=9) (actual time=26759.371..36668.832 rows=59965994 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 1115736kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1725030.24 rows=59988724 width=9) (actual time=0.032..7491.411 rows=59986052 loops=1)
               ->  Materialize  (cost=0.99..208023.83 rows=64788 width=21) (actual time=0.150..449.028 rows=59951 loops=1)
                     ->  Nested Loop  (cost=0.99..207861.86 rows=64788 width=21) (actual time=0.147..433.772 rows=59951 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.43..89212.05 rows=2160 width=4) (actual time=0.135..379.026 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..54.58 rows=35 width=17) (actual time=0.004..0.022 rows=30 loops=1996)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.784 ms
 Execution Time: 46051.668 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10576349.74..10576349.99 rows=100 width=71) (actual time=41216.766..41216.780 rows=99 loops=1)
   ->  Sort  (cost=10576349.74..10626338.39 rows=19995459 width=71) (actual time=41216.765..41216.772 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9362239.85..9812137.67 rows=19995459 width=71) (actual time=41216.495..41216.677 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9362239.85..9412228.49 rows=19995459 width=44) (actual time=41216.433..41216.462 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78611.69..6542054.11 rows=19995459 width=44) (actual time=4320.053..41216.164 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=128.55..6128917.74 rows=19995459 width=25) (actual time=987.070..40433.274 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..3494760.97 rows=4999060 width=24) (actual time=756.990..29297.440 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..547931.94 rows=14997767 width=20) (actual time=0.413..2954.474 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796855.76 rows=4999060 width=4) (actual time=649.213..25447.827 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271954.43 rows=59988724 width=9) (actual time=0.477..12343.775 rows=59986052 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271954.43 rows=59988724 width=9) (actual time=0.012..7619.766 rows=59916431 loops=1)
                           ->  Hash  (cost=50945.73..50945.73 rows=1499873 width=23) (actual time=677.461..677.461 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=23) (actual time=0.678..418.743 rows=1500000 loops=1)
 Planning Time: 18.171 ms
 Execution Time: 41217.144 ms
(27 rows)

SET
SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10576349.74..10576349.99 rows=100 width=71) (actual time=37884.592..37884.606 rows=99 loops=1)
   ->  Sort  (cost=10576349.74..10626338.39 rows=19995459 width=71) (actual time=37884.591..37884.598 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  GroupAggregate  (cost=9362239.85..9812137.67 rows=19995459 width=71) (actual time=37884.333..37884.516 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=9362239.85..9412228.49 rows=19995459 width=44) (actual time=37884.322..37884.350 rows=693 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 79kB
                     ->  Hash Join  (cost=78611.69..6542054.11 rows=19995459 width=44) (actual time=3729.162..37884.067 rows=693 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=128.55..6128917.74 rows=19995459 width=25) (actual time=856.892..37234.782 rows=693 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=1.00..3494760.97 rows=4999060 width=24) (actual time=622.936..26104.562 rows=99 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..547931.94 rows=14997767 width=20) (actual time=0.013..2352.187 rows=14982724 loops=1)
                                       ->  GroupAggregate  (cost=0.56..2796855.76 rows=4999060 width=4) (actual time=543.613..22882.375 rows=99 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 14999901
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2271954.43 rows=59988724 width=9) (actual time=0.010..9905.192 rows=59986052 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2271954.43 rows=59988724 width=9) (actual time=0.011..7614.883 rows=59916431 loops=1)
                           ->  Hash  (cost=50945.73..50945.73 rows=1499873 width=23) (actual time=542.615..542.615 rows=1500000 loops=1)
                                 Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                                 ->  Seq Scan on customer  (cost=0.00..50945.73 rows=1499873 width=23) (actual time=0.027..289.871 rows=1500000 loops=1)
 Planning Time: 1.813 ms
 Execution Time: 37884.725 ms
(27 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=393932.22..393932.23 rows=1 width=32) (actual time=23849.159..23849.160 rows=1 loops=1)
   ->  Aggregate  (cost=393932.22..393932.23 rows=1 width=32) (actual time=23849.158..23849.158 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..393923.74 rows=1130 width=12) (actual time=57.752..23846.141 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125980.19 rows=4715 width=30) (actual time=1.336..844.707 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..56.82 rows=1 width=21) (actual time=4.343..4.809 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 16.810 ms
 Execution Time: 23850.254 ms
(12 rows)

SET
SET
SET


 Limit  (cost=393932.22..393932.23 rows=1 width=32) (actual time=634.137..634.138 rows=1 loops=1)
   ->  Aggregate  (cost=393932.22..393932.23 rows=1 width=32) (actual time=634.136..634.136 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..393923.74 rows=1130 width=12) (actual time=1.589..633.453 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125980.19 rows=4715 width=30) (actual time=0.224..469.537 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..56.82 rows=1 width=21) (actual time=0.031..0.034 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 1.192 ms
 Execution Time: 634.190 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3556869.17..3556869.18 rows=1 width=51) (actual time=53365.343..53365.346 rows=1 loops=1)
   ->  Sort  (cost=3556869.17..3556869.18 rows=1 width=51) (actual time=53365.341..53365.344 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3147815.04..3556869.16 rows=1 width=51) (actual time=27687.786..53363.488 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.533..23.783 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.181..0.184 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.345..16.210 rows=100000 loops=1)
               ->  Materialize  (cost=3147815.04..3552216.86 rows=3 width=8) (actual time=6.244..10.569 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3147815.04..3552216.84 rows=3 width=8) (actual time=25570.372..36826.912 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3147814.18..3311691.08 rows=4845579 width=40) (actual time=25568.827..31616.146 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3147814.18..3170612.48 rows=9119321 width=13) (actual time=25568.812..27173.785 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=146215.11..1993410.11 rows=9119321 width=13) (actual time=1258.422..21960.768 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..143935.28 rows=9119321 width=0) (actual time=1153.412..1153.412 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.86..160338.98 rows=80810 width=16) (actual time=1.124..4835.711 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.86..160136.95 rows=80810 width=16) (actual time=1.120..4783.506 rows=86872 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.43..84212.10 rows=20202 width=4) (actual time=0.729..485.794 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.182..0.196 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 21.038 ms
 Execution Time: 53389.330 ms
(39 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3556869.17..3556869.18 rows=1 width=51) (actual time=35618.567..35618.571 rows=1 loops=1)
   ->  Sort  (cost=3556869.17..3556869.18 rows=1 width=51) (actual time=35618.565..35618.568 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=3147815.04..3556869.16 rows=1 width=51) (actual time=13855.235..35616.708 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 182001415
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=55) (actual time=0.025..19.857 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.020 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=59) (actual time=0.005..12.541 rows=100000 loops=1)
               ->  Materialize  (cost=3147815.04..3552216.86 rows=3 width=8) (actual time=3.087..6.238 rows=44445 loops=4095)
                     ->  Merge Join  (cost=3147815.04..3552216.84 rows=3 width=8) (actual time=12641.721..19100.642 rows=59002 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 177498
                           ->  GroupAggregate  (cost=3147814.18..3311691.08 rows=4845579 width=40) (actual time=12641.268..18192.745 rows=5448473 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=3147814.18..3170612.48 rows=9119321 width=13) (actual time=12641.253..14119.408 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205344kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=146215.11..1993410.11 rows=9119321 width=13) (actual time=1111.861..9250.174 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Rows Removed by Index Recheck: 23164080
                                             Heap Blocks: exact=518099 lossy=530696
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..143935.28 rows=9119321 width=0) (actual time=1007.671..1007.671 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.86..160338.98 rows=80810 width=16) (actual time=0.077..590.193 rows=237286 loops=1)
                                 ->  Nested Loop  (cost=0.86..160136.95 rows=80810 width=16) (actual time=0.074..558.632 rows=86872 loops=1)
                                       ->  Index Scan using part_pkey on part  (cost=0.43..84212.10 rows=20202 width=4) (actual time=0.053..385.038 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.58 rows=18 width=12) (actual time=0.006..0.007 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 1.846 ms
 Execution Time: 35642.899 ms
(39 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3755776.93..3755776.94 rows=1 width=34) (actual time=26563.410..26563.425 rows=100 loops=1)
   ->  Sort  (cost=3755776.93..3755776.94 rows=1 width=34) (actual time=26563.409..26563.418 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3755776.90..3755776.92 rows=1 width=34) (actual time=26556.305..26562.214 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3755776.90..3755776.91 rows=1 width=26) (actual time=26556.294..26557.802 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976273.82..3755776.89 rows=1 width=26) (actual time=15082.107..26382.791 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976273.25..3755773.25 rows=1 width=38) (actual time=15081.450..26227.040 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976272.69..2519502.21 rows=385002 width=38) (actual time=15079.755..19974.445 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448740.09 rows=7304912 width=4) (actual time=0.427..2486.591 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960216.05..1960216.05 rows=790451 width=34) (actual time=15078.473..15078.475 rows=1514267 loops=1)
                                             Buckets: 524288 (originally 524288)  Batches: 4 (originally 2)  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2323.58..1960216.05 rows=790451 width=34) (actual time=40.049..14661.418 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1875002.05 rows=19996241 width=8) (actual time=0.454..11335.446 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2273.58..2273.58 rows=4000 width=30) (actual time=39.528..39.529 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=30) (actual time=2.501..38.315 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.173..0.177 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=34) (actual time=2.319..37.452 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=1.824..1.824 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.172 ms
 Execution Time: 26564.537 ms
(44 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3755776.93..3755776.94 rows=1 width=34) (actual time=21857.335..21857.350 rows=100 loops=1)
   ->  Sort  (cost=3755776.93..3755776.94 rows=1 width=34) (actual time=21857.334..21857.343 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3755776.90..3755776.92 rows=1 width=34) (actual time=21850.228..21856.141 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3755776.90..3755776.91 rows=1 width=26) (actual time=21850.216..21851.734 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976273.82..3755776.89 rows=1 width=26) (actual time=12831.639..21677.923 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976273.25..3755773.25 rows=1 width=38) (actual time=12831.208..21532.931 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976272.69..2519502.21 rows=385002 width=38) (actual time=12830.779..17171.083 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448740.09 rows=7304912 width=4) (actual time=0.020..1998.604 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960216.05..1960216.05 rows=790451 width=34) (actual time=12829.900..12829.903 rows=1514267 loops=1)
                                             Buckets: 524288 (originally 524288)  Batches: 4 (originally 2)  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2323.58..1960216.05 rows=790451 width=34) (actual time=14.655..12450.804 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1875002.05 rows=19996241 width=8) (actual time=0.031..9487.690 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2273.58..2273.58 rows=4000 width=30) (actual time=14.589..14.591 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=49.42..2273.58 rows=4000 width=30) (actual time=0.667..13.677 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.019 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=49.42..2232.27 rows=4000 width=34) (actual time=0.646..13.130 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.42 rows=4000 width=0) (actual time=0.454..0.454 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.258 ms
 Execution Time: 21857.517 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161713.33..161713.36 rows=1 width=72) (actual time=2325.969..2325.971 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75437.98..75437.99 rows=1 width=32) (actual time=1000.384..1000.385 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75318.67 rows=47724 width=6) (actual time=0.009..963.824 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86275.34..86480.55 rows=7462 width=72) (actual time=2325.968..2325.968 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86275.34..86294.00 rows=7462 width=38) (actual time=2324.202..2324.533 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85795.34 rows=7462 width=38) (actual time=1001.058..2302.435 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75318.67 rows=17499 width=26) (actual time=1001.032..1565.952 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 12.166 ms
 Execution Time: 2327.238 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161713.33..161713.36 rows=1 width=72) (actual time=1672.992..1672.995 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75437.98..75437.99 rows=1 width=32) (actual time=735.437..735.438 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75318.67 rows=47724 width=6) (actual time=0.007..702.576 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86275.34..86480.55 rows=7462 width=72) (actual time=1672.991..1672.992 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=86275.34..86294.00 rows=7462 width=38) (actual time=1671.232..1671.561 rows=9006 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85795.34 rows=7462 width=38) (actual time=735.480..1653.067 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75318.67 rows=17499 width=26) (actual time=735.460..1259.560 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.16 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.618 ms
 Execution Time: 1673.047 ms
(20 rows)

