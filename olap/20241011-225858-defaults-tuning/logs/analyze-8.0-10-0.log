query 1 run 1
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3811347.31..3811347.32 rows=1 width=51) (actual time=222447.299..222447.300 rows=1 loops=1)
   ->  Sort  (cost=3811347.31..3811347.33 rows=6 width=51) (actual time=222447.297..222447.297 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3811347.03..3811347.24 rows=6 width=51) (actual time=222447.230..222447.236 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59289215 width=51) (actual time=0.413..18575.419 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 222448.330 ms
(7 rows)

SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3811347.31..3811347.32 rows=1 width=51) (actual time=215737.636..215737.637 rows=1 loops=1)
   ->  Sort  (cost=3811347.31..3811347.33 rows=6 width=51) (actual time=215737.634..215737.634 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3811347.03..3811347.24 rows=6 width=51) (actual time=215737.582..215737.586 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=59289215 width=51) (actual time=0.011..15532.293 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 215737.765 ms
(7 rows)

query 2 run 1
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85094.87..85094.88 rows=1 width=215) (actual time=3958.708..3958.717 rows=100 loops=1)
   ->  Sort  (cost=85094.87..85094.88 rows=1 width=215) (actual time=3958.706..3958.709 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..85094.86 rows=1 width=215) (actual time=3.547..3952.865 rows=4737 loops=1)
               Join Filter: ("outer".n_regionkey = "inner".r_regionkey)
               ->  Nested Loop  (cost=0.00..85093.79 rows=1 width=219) (actual time=3.544..3936.247 rows=4737 loops=1)
                     Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Nested Loop  (cost=0.00..85092.23 rows=1 width=190) (actual time=3.536..3886.819 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.00..85089.20 rows=1 width=37) (actual time=3.533..3871.220 rows=4737 loops=1)
                                 Join Filter: ("inner".ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.00 rows=3 width=33) (actual time=0.477..723.339 rows=8046 loops=1)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=20 width=19) (actual time=0.260..0.261 rows=4 loops=8046)
                                       Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=66.60..66.60 rows=1 width=11) (actual time=0.031..0.031 rows=1 loops=32184)
                                         ->  Hash Join  (cost=2.50..66.59 rows=4 width=11) (actual time=0.023..0.030 rows=1 loops=32184)
                                               Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                               ->  Nested Loop  (cost=0.00..63.95 rows=20 width=15) (actual time=0.008..0.029 rows=4 loops=32184)
                                                     ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=20 width=15) (actual time=0.003..0.010 rows=4 loops=32184)
                                                           Index Cond: ($0 = ps_partkey)
                                                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=128736)
                                                           Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                                               ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.383..0.383 rows=0 loops=1)
                                                     ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.368..0.382 rows=5 loops=1)
                                                           Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.176..0.185 rows=25 loops=1)
                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.181..0.181 rows=0 loops=1)
                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.178..0.180 rows=1 loops=1)
                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=161) (actual time=0.002..0.002 rows=1 loops=4737)
                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.001..0.004 rows=25 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 3959.026 ms
(36 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85094.87..85094.88 rows=1 width=215) (actual time=967.484..967.493 rows=100 loops=1)
   ->  Sort  (cost=85094.87..85094.88 rows=1 width=215) (actual time=967.482..967.486 rows=100 loops=1)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Nested Loop  (cost=0.00..85094.86 rows=1 width=215) (actual time=0.202..962.750 rows=4737 loops=1)
               Join Filter: ("outer".n_regionkey = "inner".r_regionkey)
               ->  Nested Loop  (cost=0.00..85093.79 rows=1 width=219) (actual time=0.199..952.014 rows=4737 loops=1)
                     Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                     ->  Nested Loop  (cost=0.00..85092.23 rows=1 width=190) (actual time=0.191..919.966 rows=4737 loops=1)
                           ->  Nested Loop  (cost=0.00..85089.20 rows=1 width=37) (actual time=0.189..911.019 rows=4737 loops=1)
                                 Join Filter: ("inner".ps_supplycost = (subplan))
                                 ->  Seq Scan on part  (cost=0.00..81082.00 rows=3 width=33) (actual time=0.017..512.279 rows=8046 loops=1)
                                       Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=20 width=19) (actual time=0.005..0.006 rows=4 loops=8046)
                                       Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                 SubPlan
                                   ->  Aggregate  (cost=66.60..66.60 rows=1 width=11) (actual time=0.010..0.010 rows=1 loops=32184)
                                         ->  Hash Join  (cost=2.50..66.59 rows=4 width=11) (actual time=0.007..0.010 rows=1 loops=32184)
                                               Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                               ->  Nested Loop  (cost=0.00..63.95 rows=20 width=15) (actual time=0.003..0.009 rows=4 loops=32184)
                                                     ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=20 width=15) (actual time=0.001..0.002 rows=4 loops=32184)
                                                           Index Cond: ($0 = ps_partkey)
                                                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=128736)
                                                           Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                                               ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.028..0.028 rows=0 loops=1)
                                                     ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.019..0.027 rows=5 loops=1)
                                                           Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=0 loops=1)
                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=161) (actual time=0.001..0.001 rows=1 loops=4737)
                                 Index Cond: (supplier.s_suppkey = "outer".ps_suppkey)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.000..0.003 rows=25 loops=4737)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=4737)
                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 967.625 ms
(36 rows)

query 3 run 1
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4911438.56..4911438.58 rows=10 width=34) (actual time=132528.345..132528.347 rows=10 loops=1)
   ->  Sort  (cost=4911438.56..4919289.61 rows=3140419 width=34) (actual time=132528.344..132528.345 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4379921.31..4442729.69 rows=3140419 width=34) (actual time=132084.111..132307.391 rows=113934 loops=1)
               ->  Sort  (cost=4379921.31..4387772.36 rows=3140419 width=34) (actual time=132084.095..132113.346 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=790116.55..3911212.44 rows=3140419 width=34) (actual time=14697.597..131463.597 rows=301530 loops=1)
                           Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=32522672 width=26) (actual time=0.485..17762.284 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=778008.52..778008.52 rows=1448414 width=12) (actual time=14640.788..14640.788 rows=0 loops=1)
                                 ->  Hash Join  (cost=63123.38..778008.52 rows=1448414 width=12) (actual time=661.753..14382.354 rows=1451805 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..506297.00 rows=7209600 width=16) (actual time=0.648..4530.014 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=301351 width=4) (actual time=660.873..660.873 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=301351 width=4) (actual time=0.267..614.485 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 132533.241 ms
(19 rows)

SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4911438.56..4911438.58 rows=10 width=34) (actual time=132126.325..132126.327 rows=10 loops=1)
   ->  Sort  (cost=4911438.56..4919289.61 rows=3140419 width=34) (actual time=132126.323..132126.323 rows=10 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=4379921.31..4442729.69 rows=3140419 width=34) (actual time=131681.630..131905.951 rows=113934 loops=1)
               ->  Sort  (cost=4379921.31..4387772.36 rows=3140419 width=34) (actual time=131681.613..131710.887 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=790116.55..3911212.44 rows=3140419 width=34) (actual time=14273.306..131061.371 rows=301530 loops=1)
                           Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=32522672 width=26) (actual time=0.371..17793.126 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=778008.52..778008.52 rows=1448414 width=12) (actual time=14214.364..14214.364 rows=0 loops=1)
                                 ->  Hash Join  (cost=63123.38..778008.52 rows=1448414 width=12) (actual time=602.368..13957.721 rows=1451805 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..506297.00 rows=7209600 width=16) (actual time=0.475..4205.061 rows=7239437 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=60898.00..60898.00 rows=301351 width=4) (actual time=601.671..601.671 rows=0 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..60898.00 rows=301351 width=4) (actual time=0.234..554.818 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 132131.383 ms
(19 rows)

query 4 run 1
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=875541.11..875541.12 rows=1 width=19) (actual time=112614.048..112614.048 rows=1 loops=1)
   ->  Sort  (cost=875541.11..875541.12 rows=1 width=19) (actual time=112614.046..112614.046 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=875541.10..875541.10 rows=1 width=19) (actual time=112613.968..112613.970 rows=5 loops=1)
               ->  Index Scan using idx_orders_orderdate on orders  (cost=0.00..874196.99 rows=268821 width=19) (actual time=2.472..111849.513 rows=513822 loops=1)
                     Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..12.02 rows=67 width=152) (actual time=0.155..0.155 rows=1 loops=560424)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 112614.609 ms
(12 rows)

SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=875541.11..875541.12 rows=1 width=19) (actual time=6382.358..6382.358 rows=1 loops=1)
   ->  Sort  (cost=875541.11..875541.12 rows=1 width=19) (actual time=6382.356..6382.356 rows=1 loops=1)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=875541.10..875541.10 rows=1 width=19) (actual time=6382.312..6382.312 rows=5 loops=1)
               ->  Index Scan using idx_orders_orderdate on orders  (cost=0.00..874196.99 rows=268821 width=19) (actual time=0.119..6162.399 rows=513822 loops=1)
                     Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..12.02 rows=67 width=152) (actual time=0.008..0.008 rows=1 loops=560424)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
 Total runtime: 6382.477 ms
(12 rows)

query 5 run 1
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3632566.21..3632566.21 rows=1 width=51) (actual time=34715.563..34715.563 rows=1 loops=1)
   ->  Sort  (cost=3632566.21..3632566.27 rows=25 width=51) (actual time=34715.562..34715.562 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3632565.44..3632565.63 rows=25 width=51) (actual time=34715.533..34715.535 rows=5 loops=1)
               ->  Hash Join  (cost=712688.85..3632203.99 rows=72291 width=51) (actual time=9546.286..34645.068 rows=72033 loops=1)
                     Hash Cond: (("outer".c_nationkey = "inner".s_nationkey) AND ("outer".l_suppkey = "inner".s_suppkey))
                     ->  Merge Join  (cost=708116.85..3528991.30 rows=1823226 width=63) (actual time=9483.938..32197.244 rows=1815327 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643561.78 rows=59986052 width=30) (actual time=2.182..16140.162 rows=59986036 loops=1)
                           ->  Sort  (cost=708116.85..709256.63 rows=455913 width=41) (actual time=9480.755..9711.164 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=71330.50..656276.44 rows=455913 width=41) (actual time=771.787..8673.371 rows=453399 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..543797.00 rows=2279562 width=8) (actual time=0.654..5146.604 rows=2276638 loops=1)
                                             Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=67650.50..67650.50 rows=300000 width=41) (actual time=770.209..770.209 rows=0 loops=1)
                                             ->  Hash Join  (cost=2.50..67650.50 rows=300000 width=41) (actual time=0.773..712.044 rows=299436 loops=1)
                                                   Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.317..498.214 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.49..2.49 rows=5 width=33) (actual time=0.441..0.441 rows=0 loops=1)
                                                         ->  Hash Join  (cost=1.06..2.49 rows=5 width=33) (actual time=0.433..0.438 rows=5 loops=1)
                                                               Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.176..0.178 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.248..0.248 rows=0 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.243..0.245 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=59.616..59.616 rows=0 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.343..43.602 rows=100000 loops=1)
 Total runtime: 34720.219 ms
(29 rows)

SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3632566.21..3632566.21 rows=1 width=51) (actual time=33891.148..33891.148 rows=1 loops=1)
   ->  Sort  (cost=3632566.21..3632566.27 rows=25 width=51) (actual time=33891.146..33891.146 rows=1 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=3632565.44..3632565.63 rows=25 width=51) (actual time=33891.128..33891.130 rows=5 loops=1)
               ->  Hash Join  (cost=712688.85..3632203.99 rows=72291 width=51) (actual time=9174.951..33823.581 rows=72033 loops=1)
                     Hash Cond: (("outer".c_nationkey = "inner".s_nationkey) AND ("outer".l_suppkey = "inner".s_suppkey))
                     ->  Merge Join  (cost=708116.85..3528991.30 rows=1823226 width=63) (actual time=9117.113..31324.113 rows=1815327 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643561.78 rows=59986052 width=30) (actual time=2.073..15709.745 rows=59986036 loops=1)
                           ->  Sort  (cost=708116.85..709256.63 rows=455913 width=41) (actual time=9113.922..9332.865 rows=1815325 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=71330.50..656276.44 rows=455913 width=41) (actual time=701.341..8308.853 rows=453399 loops=1)
                                       Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..543797.00 rows=2279562 width=8) (actual time=0.474..4836.374 rows=2276638 loops=1)
                                             Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=67650.50..67650.50 rows=300000 width=41) (actual time=699.937..699.937 rows=0 loops=1)
                                             ->  Hash Join  (cost=2.50..67650.50 rows=300000 width=41) (actual time=1.056..641.550 rows=299436 loops=1)
                                                   Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.407..426.386 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.49..2.49 rows=5 width=33) (actual time=0.641..0.641 rows=0 loops=1)
                                                         ->  Hash Join  (cost=1.06..2.49 rows=5 width=33) (actual time=0.633..0.640 rows=5 loops=1)
                                                               Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37) (actual time=0.307..0.310 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.317..0.317 rows=0 loops=1)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.314..0.315 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=55.048..55.048 rows=0 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.303..41.275 rows=100000 loops=1)
 Total runtime: 33895.970 ms
(29 rows)

query 6 run 1
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1780178.40..1780178.40 rows=1 width=22) (actual time=117087.610..117087.610 rows=1 loops=1)
   ->  Aggregate  (cost=1780178.40..1780178.40 rows=1 width=22) (actual time=117087.608..117087.608 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..1777251.34 rows=1170825 width=22) (actual time=1.524..115385.040 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 117087.637 ms
(5 rows)

SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1780178.40..1780178.40 rows=1 width=22) (actual time=5360.971..5360.971 rows=1 loops=1)
   ->  Aggregate  (cost=1780178.40..1780178.40 rows=1 width=22) (actual time=5360.971..5360.971 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..1777251.34 rows=1170825 width=22) (actual time=0.086..4842.675 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 5360.998 ms
(5 rows)

query 7 run 1
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3661729.30..3661729.32 rows=1 width=84) (actual time=45520.537..45520.537 rows=1 loops=1)
   ->  GroupAggregate  (cost=3661729.30..3663177.97 rows=57947 width=84) (actual time=45520.535..45520.535 rows=1 loops=1)
         ->  Sort  (cost=3661729.30..3661874.16 rows=57947 width=84) (actual time=45509.452..45510.998 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=2914424.48..3655446.41 rows=57947 width=84) (actual time=35456.251..45121.296 rows=57794 loops=1)
                     Hash Cond: (("outer".o_custkey = "inner".c_custkey) AND ("outer".n_nationkey = "inner".c_nationkey))
                     ->  Merge Join  (cost=2842451.48..3486547.23 rows=1448666 width=92) (actual time=34557.727..41302.720 rows=1455694 loops=1)
                           Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..584928.00 rows=15000000 width=8) (actual time=1.218..3780.973 rows=14999997 loops=1)
                           ->  Sort  (cost=2842451.48..2846073.14 rows=1448666 width=92) (actual time=34556.498..34750.697 rows=1455694 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=4204.28..2589219.36 rows=1448666 width=92) (actual time=45.948..30880.761 rows=1455694 loops=1)
                                       Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=18287008 width=34) (actual time=0.752..20242.974 rows=18230325 loops=1)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=4184.28..4184.28 rows=8000 width=66) (actual time=45.184..45.184 rows=0 loops=1)
                                             ->  Hash Join  (cost=21.28..4184.28 rows=8000 width=66) (actual time=0.758..43.850 rows=7981 loops=1)
                                                   Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.355..32.823 rows=100000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.396..0.396 rows=0 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.341..0.394 rows=2 loops=1)
                                                               Join Filter: ((("outer".n_name = 'PERU'::bpchar) AND ("inner".n_name = 'MOROCCO'::bpchar)) OR (("outer".n_name = 'MOROCCO'::bpchar) AND ("inner".n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.202..0.205 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.000..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.003..0.018 rows=25 loops=1)
                     ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=8) (actual time=880.574..880.574 rows=0 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.265..646.351 rows=1500000 loops=1)
 Total runtime: 45541.787 ms
(28 rows)

SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3661729.30..3661729.32 rows=1 width=84) (actual time=44294.306..44294.306 rows=1 loops=1)
   ->  GroupAggregate  (cost=3661729.30..3663177.97 rows=57947 width=84) (actual time=44294.306..44294.306 rows=1 loops=1)
         ->  Sort  (cost=3661729.30..3661874.16 rows=57947 width=84) (actual time=44283.209..44284.764 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=2914424.48..3655446.41 rows=57947 width=84) (actual time=34215.043..43894.599 rows=57794 loops=1)
                     Hash Cond: (("outer".o_custkey = "inner".c_custkey) AND ("outer".n_nationkey = "inner".c_nationkey))
                     ->  Merge Join  (cost=2842451.48..3486547.23 rows=1448666 width=92) (actual time=33386.335..40130.761 rows=1455694 loops=1)
                           Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..584928.00 rows=15000000 width=8) (actual time=0.895..3795.609 rows=14999997 loops=1)
                           ->  Sort  (cost=2842451.48..2846073.14 rows=1448666 width=92) (actual time=33385.428..33579.802 rows=1455694 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 ->  Hash Join  (cost=4204.28..2589219.36 rows=1448666 width=92) (actual time=40.409..29762.222 rows=1455694 loops=1)
                                       Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=18287008 width=34) (actual time=0.331..19400.758 rows=18230325 loops=1)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=4184.28..4184.28 rows=8000 width=66) (actual time=40.057..40.057 rows=0 loops=1)
                                             ->  Hash Join  (cost=21.28..4184.28 rows=8000 width=66) (actual time=0.755..38.768 rows=7981 loops=1)
                                                   Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.325..27.808 rows=100000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66) (actual time=0.421..0.421 rows=0 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66) (actual time=0.367..0.419 rows=2 loops=1)
                                                               Join Filter: ((("outer".n_name = 'PERU'::bpchar) AND ("inner".n_name = 'MOROCCO'::bpchar)) OR (("outer".n_name = 'MOROCCO'::bpchar) AND ("inner".n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33) (actual time=0.214..0.219 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33) (actual time=0.001..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.004..0.013 rows=25 loops=1)
                     ->  Hash  (cost=57148.00..57148.00 rows=1500000 width=8) (actual time=811.202..811.202 rows=0 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.234..573.321 rows=1500000 loops=1)
 Total runtime: 44316.106 ms
(28 rows)

query 8 run 1
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1571661.13..1571661.13 rows=1 width=55) (actual time=69286.373..69286.373 rows=1 loops=1)
   ->  Sort  (cost=1571661.13..1571662.98 rows=741 width=55) (actual time=69286.372..69286.372 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1571607.29..1571625.81 rows=741 width=55) (actual time=69286.340..69286.342 rows=2 loops=1)
               ->  Hash Join  (cost=712724.25..1571424.23 rows=24407 width=55) (actual time=13351.074..69264.953 rows=23842 loops=1)
                     Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                     ->  Hash Join  (cost=4323.31..823250.59 rows=396337 width=55) (actual time=51.356..57021.532 rows=389521 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=4322.00..817304.22 rows=396337 width=30) (actual time=51.322..56843.123 rows=389521 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Nested Loop  (cost=0.00..796280.92 rows=399928 width=30) (actual time=3.688..56135.850 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..76082.00 rows=13334 width=4) (actual time=1.429..664.712 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..53.59 rows=34 width=34) (actual time=0.313..4.227 rows=30 loops=13011)
                                             Index Cond: ("outer".p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=44.350..44.350 rows=0 loops=1)
                                       ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.382..31.826 rows=100000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.022..0.022 rows=0 loops=1)
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.013..0.017 rows=25 loops=1)
                     ->  Hash  (cost=701580.70..701580.70 rows=923692 width=8) (actual time=11616.176..11616.176 rows=0 loops=1)
                           ->  Hash Join  (cost=69865.50..701580.70 rows=923692 width=8) (actual time=730.722..11459.286 rows=910360 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..543797.00 rows=4618456 width=12) (actual time=0.793..4997.486 rows=4557513 loops=1)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                 ->  Hash  (cost=67650.50..67650.50 rows=300000 width=4) (actual time=729.091..729.091 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..67650.50 rows=300000 width=4) (actual time=0.685..685.224 rows=299436 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.264..497.342 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.417..0.417 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.401..0.413 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.189..0.195 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.205..0.205 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.201..0.203 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 69286.745 ms
(36 rows)

SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1571661.13..1571661.13 rows=1 width=55) (actual time=13595.455..13595.455 rows=1 loops=1)
   ->  Sort  (cost=1571661.13..1571662.98 rows=741 width=55) (actual time=13595.454..13595.454 rows=1 loops=1)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=1571607.29..1571625.81 rows=741 width=55) (actual time=13595.438..13595.440 rows=2 loops=1)
               ->  Hash Join  (cost=712724.25..1571424.23 rows=24407 width=55) (actual time=10599.680..13574.664 rows=23842 loops=1)
                     Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                     ->  Hash Join  (cost=4323.31..823250.59 rows=396337 width=55) (actual time=39.381..2468.687 rows=389521 loops=1)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=4322.00..817304.22 rows=396337 width=30) (actual time=39.354..2323.029 rows=389521 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Nested Loop  (cost=0.00..796280.92 rows=399928 width=30) (actual time=0.094..1824.914 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..76082.00 rows=13334 width=4) (actual time=0.064..415.026 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..53.59 rows=34 width=34) (actual time=0.008..0.099 rows=30 loops=13011)
                                             Index Cond: ("outer".p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=3583.00..3583.00 rows=100000 width=8) (actual time=39.128..39.128 rows=0 loops=1)
                                       ->  Seq Scan on supplier  (cost=0.00..3583.00 rows=100000 width=8) (actual time=0.011..26.824 rows=100000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.016..0.016 rows=0 loops=1)
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33) (actual time=0.007..0.014 rows=25 loops=1)
                     ->  Hash  (cost=701580.70..701580.70 rows=923692 width=8) (actual time=10501.583..10501.583 rows=0 loops=1)
                           ->  Hash Join  (cost=69865.50..701580.70 rows=923692 width=8) (actual time=587.880..10347.094 rows=910360 loops=1)
                                 Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..543797.00 rows=4618456 width=12) (actual time=0.014..4061.284 rows=4557513 loops=1)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                 ->  Hash  (cost=67650.50..67650.50 rows=300000 width=4) (actual time=587.610..587.610 rows=0 loops=1)
                                       ->  Hash Join  (cost=2.50..67650.50 rows=300000 width=4) (actual time=0.060..544.254 rows=299436 loops=1)
                                             Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..57148.00 rows=1500000 width=8) (actual time=0.011..362.416 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.49..2.49 rows=5 width=4) (actual time=0.044..0.044 rows=0 loops=1)
                                                   ->  Hash Join  (cost=1.06..2.49 rows=5 width=4) (actual time=0.036..0.043 rows=5 loops=1)
                                                         Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.016 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.021..0.021 rows=0 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.020..0.021 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
 Total runtime: 13595.586 ms
(36 rows)

query 9 run 1
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360086.53..360086.56 rows=1 width=76) (actual time=403722.929..403722.929 rows=1 loops=1)
   ->  GroupAggregate  (cost=360086.53..360087.11 rows=21 width=76) (actual time=403722.928..403722.928 rows=1 loops=1)
         ->  Sort  (cost=360086.53..360086.58 rows=21 width=76) (actual time=403711.207..403712.402 rows=11401 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..360086.07 rows=21 width=76) (actual time=5.194..365154.791 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=0.00..360022.33 rows=21 width=76) (actual time=3.715..277288.253 rows=3248192 loops=1)
                           Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Nested Loop  (cost=0.00..359989.52 rows=21 width=51) (actual time=3.525..246217.002 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=0.00..359925.89 rows=21 width=55) (actual time=2.805..233202.214 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.00..133671.81 rows=64004 width=23) (actual time=1.444..3811.452 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=16001 width=4) (actual time=0.493..1538.847 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=20 width=19) (actual time=0.015..0.018 rows=4 loops=108312)
                                                   Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.52 rows=1 width=44) (actual time=0.074..0.521 rows=7 loops=433248)
                                             Index Cond: (("outer".p_partkey = lineitem.l_partkey) AND ("outer".ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=3248192)
                                       Index Cond: ("outer".ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.000..0.004 rows=25 loops=3248192)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=8) (actual time=0.025..0.025 rows=1 loops=3248192)
                           Index Cond: (orders.o_orderkey = "outer".l_orderkey)
 Total runtime: 403786.389 ms
(22 rows)

SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360086.53..360086.56 rows=1 width=76) (actual time=284011.699..284011.699 rows=1 loops=1)
   ->  GroupAggregate  (cost=360086.53..360087.11 rows=21 width=76) (actual time=284011.698..284011.698 rows=1 loops=1)
         ->  Sort  (cost=360086.53..360086.58 rows=21 width=76) (actual time=284000.002..284001.190 rows=11401 loops=1)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..360086.07 rows=21 width=76) (actual time=1.530..247399.928 rows=3248192 loops=1)
                     ->  Nested Loop  (cost=0.00..360022.33 rows=21 width=76) (actual time=1.361..197749.820 rows=3248192 loops=1)
                           Join Filter: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  Nested Loop  (cost=0.00..359989.52 rows=21 width=51) (actual time=1.348..169200.448 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=0.00..359925.89 rows=21 width=55) (actual time=1.314..158208.915 rows=3248192 loops=1)
                                       ->  Nested Loop  (cost=0.00..133671.81 rows=64004 width=23) (actual time=0.705..3540.621 rows=433248 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=16001 width=4) (actual time=0.272..1456.061 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=20 width=19) (actual time=0.014..0.017 rows=4 loops=108312)
                                                   Index Cond: ("outer".p_partkey = partsupp.ps_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.52 rows=1 width=44) (actual time=0.051..0.350 rows=7 loops=433248)
                                             Index Cond: (("outer".p_partkey = lineitem.l_partkey) AND ("outer".ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.02 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: ("outer".ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.000..0.004 rows=25 loops=3248192)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=8) (actual time=0.013..0.014 rows=1 loops=3248192)
                           Index Cond: (orders.o_orderkey = "outer".l_orderkey)
 Total runtime: 284069.371 ms
(22 rows)

query 10 run 1
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3785584.31..3785584.36 rows=20 width=212) (actual time=62891.812..62891.814 rows=20 loops=1)
   ->  Sort  (cost=3785584.31..3786983.55 rows=559694 width=212) (actual time=62891.811..62891.813 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3638830.73..3655621.55 rows=559694 width=212) (actual time=60186.212..61565.450 rows=381205 loops=1)
               ->  Sort  (cost=3638830.73..3640229.96 rows=559694 width=212) (actual time=60186.189..60367.741 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=700993.23..3508867.96 rows=559694 width=212) (actual time=7289.175..51387.670 rows=1145402 loops=1)
                           Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=700991.92..3500471.24 rows=559694 width=187) (actual time=7288.967..50655.498 rows=1145402 loops=1)
                                 Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14702582 width=26) (actual time=0.584..17182.040 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=685065.38..685065.38 rows=571016 width=169) (actual time=7250.096..7250.096 rows=0 loops=1)
                                       ->  Merge Join  (cost=603993.39..685065.38 rows=571016 width=169) (actual time=6069.851..7074.235 rows=573160 loops=1)
                                             Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..68764.00 rows=1500000 width=165) (actual time=1.159..429.411 rows=1499997 loops=1)
                                             ->  Sort  (cost=603993.39..605420.93 rows=571016 width=8) (actual time=6068.670..6127.341 rows=573160 loops=1)
                                                   Sort Key: orders.o_custkey
                                                   ->  Seq Scan on orders  (cost=0.00..543797.00 rows=571016 width=8) (actual time=0.466..5158.925 rows=573160 loops=1)
                                                         Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.194..0.194 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.175..0.187 rows=25 loops=1)
 Total runtime: 62948.527 ms
(23 rows)

SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3785584.31..3785584.36 rows=20 width=212) (actual time=62039.487..62039.490 rows=20 loops=1)
   ->  Sort  (cost=3785584.31..3786983.55 rows=559694 width=212) (actual time=62039.486..62039.488 rows=20 loops=1)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=3638830.73..3655621.55 rows=559694 width=212) (actual time=59363.971..60718.787 rows=381205 loops=1)
               ->  Sort  (cost=3638830.73..3640229.96 rows=559694 width=212) (actual time=59363.948..59543.870 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=700993.23..3508867.96 rows=559694 width=212) (actual time=6902.909..50560.530 rows=1145402 loops=1)
                           Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                           ->  Hash Join  (cost=700991.92..3500471.24 rows=559694 width=187) (actual time=6902.740..49827.552 rows=1145402 loops=1)
                                 Hash Cond: ("outer".l_orderkey = "inner".o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..2329116.65 rows=14702582 width=26) (actual time=0.452..16706.784 rows=14808183 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=685065.38..685065.38 rows=571016 width=169) (actual time=6862.589..6862.589 rows=0 loops=1)
                                       ->  Merge Join  (cost=603993.39..685065.38 rows=571016 width=169) (actual time=5673.893..6686.715 rows=573160 loops=1)
                                             Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                             ->  Index Scan using customer_pkey on customer  (cost=0.00..68764.00 rows=1500000 width=165) (actual time=1.166..441.478 rows=1499997 loops=1)
                                             ->  Sort  (cost=603993.39..605420.93 rows=571016 width=8) (actual time=5672.716..5731.109 rows=573160 loops=1)
                                                   Sort Key: orders.o_custkey
                                                   ->  Seq Scan on orders  (cost=0.00..543797.00 rows=571016 width=8) (actual time=0.262..4768.253 rows=573160 loops=1)
                                                         Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33) (actual time=0.155..0.155 rows=0 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33) (actual time=0.146..0.151 rows=25 loops=1)
 Total runtime: 62103.950 ms
(23 rows)

query 11 run 1
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=708809.41..708809.41 rows=1 width=19) (actual time=6345.139..6345.139 rows=0 loops=1)
   InitPlan
     ->  Aggregate  (cost=316758.61..316758.61 rows=1 width=15) (actual time=2305.226..2305.227 rows=1 loops=1)
           ->  Hash Join  (cost=3519.60..315958.60 rows=320000 width=15) (actual time=2.476..2182.253 rows=320800 loops=1)
                 Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19) (actual time=0.000..1119.903 rows=8000000 loops=1)
                 ->  Hash  (cost=3509.60..3509.60 rows=4000 width=4) (actual time=2.453..2.453 rows=0 loops=1)
                       ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=4) (actual time=0.021..2.114 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=8) (actual time=0.007..1.578 rows=4010 loops=1)
                                   Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
   ->  Sort  (cost=392050.79..392850.79 rows=320000 width=19) (actual time=6345.138..6345.138 rows=0 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=349604.70..358404.70 rows=320000 width=19) (actual time=6344.825..6344.825 rows=0 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=349604.70..350404.70 rows=320000 width=19) (actual time=3865.162..3892.199 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=3519.60..315958.60 rows=320000 width=19) (actual time=31.673..3568.105 rows=320800 loops=1)
                           Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23) (actual time=0.575..2333.849 rows=8000000 loops=1)
                           ->  Hash  (cost=3509.60..3509.60 rows=4000 width=4) (actual time=30.974..30.974 rows=0 loops=1)
                                 ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=4) (actual time=1.161..30.446 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.277..0.281 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=8) (actual time=0.881..29.326 rows=4010 loops=1)
                                             Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
 Total runtime: 6347.750 ms
(28 rows)

SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=708809.41..708809.41 rows=1 width=19) (actual time=5367.457..5367.457 rows=0 loops=1)
   InitPlan
     ->  Aggregate  (cost=316758.61..316758.61 rows=1 width=15) (actual time=2302.301..2302.301 rows=1 loops=1)
           ->  Hash Join  (cost=3519.60..315958.60 rows=320000 width=15) (actual time=2.494..2179.158 rows=320800 loops=1)
                 Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=19) (actual time=0.001..1119.560 rows=8000000 loops=1)
                 ->  Hash  (cost=3509.60..3509.60 rows=4000 width=4) (actual time=2.471..2.471 rows=0 loops=1)
                       ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=4) (actual time=0.020..2.164 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=8) (actual time=0.007..1.620 rows=4010 loops=1)
                                   Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
   ->  Sort  (cost=392050.79..392850.79 rows=320000 width=19) (actual time=5367.457..5367.457 rows=0 loops=1)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  GroupAggregate  (cost=349604.70..358404.70 rows=320000 width=19) (actual time=5367.431..5367.431 rows=0 loops=1)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=349604.70..350404.70 rows=320000 width=19) (actual time=2887.628..2914.439 rows=320800 loops=1)
                     Sort Key: partsupp.ps_partkey
                     ->  Hash Join  (cost=3519.60..315958.60 rows=320000 width=19) (actual time=8.298..2618.418 rows=320800 loops=1)
                           Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..269239.00 rows=8000000 width=23) (actual time=0.004..1517.642 rows=8000000 loops=1)
                           ->  Hash  (cost=3509.60..3509.60 rows=4000 width=4) (actual time=8.259..8.259 rows=0 loops=1)
                                 ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=4) (actual time=0.030..7.849 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=8) (actual time=0.016..7.154 rows=4010 loops=1)
                                             Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
 Total runtime: 5369.961 ms
(28 rows)

query 12 run 1
SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3736137.30..3736137.30 rows=1 width=33) (actual time=33958.387..33958.388 rows=1 loops=1)
   ->  Sort  (cost=3736137.30..3736137.30 rows=1 width=33) (actual time=33958.385..33958.385 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3736137.27..3736137.29 rows=1 width=33) (actual time=33958.329..33958.329 rows=2 loops=1)
               ->  Merge Join  (cost=3107579.04..3734073.12 rows=275221 width=33) (actual time=28435.539..33776.677 rows=311258 loops=1)
                     Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..584928.00 rows=15000000 width=23) (actual time=1.138..3781.768 rows=14999967 loops=1)
                     ->  Sort  (cost=3107579.04..3108267.10 rows=275221 width=18) (actual time=28434.312..28472.789 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..3078942.30 rows=275221 width=18) (actual time=1.380..27897.459 rows=311258 loops=1)
                                 Filter: (((l_shipmode = 'SHIP'::bpchar) OR (l_shipmode = 'REG AIR'::bpchar)) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 33961.987 ms
(12 rows)

SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3736137.30..3736137.30 rows=1 width=33) (actual time=32921.862..32921.862 rows=1 loops=1)
   ->  Sort  (cost=3736137.30..3736137.30 rows=1 width=33) (actual time=32921.861..32921.861 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3736137.27..3736137.29 rows=1 width=33) (actual time=32921.814..32921.815 rows=2 loops=1)
               ->  Merge Join  (cost=3107579.04..3734073.12 rows=275221 width=33) (actual time=27582.636..32739.914 rows=311258 loops=1)
                     Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..584928.00 rows=15000000 width=23) (actual time=0.812..3613.144 rows=14999967 loops=1)
                     ->  Sort  (cost=3107579.04..3108267.10 rows=275221 width=18) (actual time=27581.177..27618.551 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..3078942.30 rows=275221 width=18) (actual time=1.075..27046.395 rows=311258 loops=1)
                                 Filter: (((l_shipmode = 'SHIP'::bpchar) OR (l_shipmode = 'REG AIR'::bpchar)) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 32925.149 ms
(12 rows)

query 13 run 1
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3229988.08..3229988.08 rows=1 width=8) (actual time=44793.336..44793.337 rows=1 loops=1)
   ->  Sort  (cost=3229988.08..3229988.58 rows=200 width=8) (actual time=44793.334..44793.334 rows=1 loops=1)
         Sort Key: count(*), c_count
         ->  HashAggregate  (cost=3229979.94..3229980.44 rows=200 width=8) (actual time=44793.291..44793.300 rows=46 loops=1)
               ->  Subquery Scan c_orders  (cost=2831215.94..3222479.94 rows=1500000 width=8) (actual time=36823.959..44577.074 rows=1500000 loops=1)
                     ->  GroupAggregate  (cost=2831215.94..3207479.94 rows=1500000 width=8) (actual time=36823.958..44352.681 rows=1500000 loops=1)
                           ->  Merge Left Join  (cost=2831215.94..3128729.94 rows=15000000 width=8) (actual time=36823.939..42268.861 rows=15337604 loops=1)
                                 Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..68764.00 rows=1500000 width=4) (actual time=1.310..466.283 rows=1500000 loops=1)
                                 ->  Sort  (cost=2831215.94..2868715.94 rows=15000000 width=8) (actual time=36822.617..38206.239 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..506297.00 rows=15000000 width=8) (actual time=0.549..13760.227 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 44877.702 ms
(14 rows)

SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3229988.08..3229988.08 rows=1 width=8) (actual time=43287.450..43287.450 rows=1 loops=1)
   ->  Sort  (cost=3229988.08..3229988.58 rows=200 width=8) (actual time=43287.449..43287.449 rows=1 loops=1)
         Sort Key: count(*), c_count
         ->  HashAggregate  (cost=3229979.94..3229980.44 rows=200 width=8) (actual time=43287.424..43287.428 rows=46 loops=1)
               ->  Subquery Scan c_orders  (cost=2831215.94..3222479.94 rows=1500000 width=8) (actual time=35294.659..43072.174 rows=1500000 loops=1)
                     ->  GroupAggregate  (cost=2831215.94..3207479.94 rows=1500000 width=8) (actual time=35294.659..42847.083 rows=1500000 loops=1)
                           ->  Merge Left Join  (cost=2831215.94..3128729.94 rows=15000000 width=8) (actual time=35294.640..40766.331 rows=15337604 loops=1)
                                 Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.00..68764.00 rows=1500000 width=4) (actual time=0.038..475.758 rows=1500000 loops=1)
                                 ->  Sort  (cost=2831215.94..2868715.94 rows=15000000 width=8) (actual time=35294.592..36682.393 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..506297.00 rows=15000000 width=8) (actual time=0.011..12569.366 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 43371.721 ms
(14 rows)

query 14 run 1
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1347099.32..1347099.34 rows=1 width=46) (actual time=75659.639..75659.639 rows=1 loops=1)
   ->  Aggregate  (cost=1347099.32..1347099.34 rows=1 width=46) (actual time=75659.638..75659.638 rows=1 loops=1)
         ->  Merge Join  (cost=1240266.25..1343281.01 rows=763661 width=46) (actual time=73850.173..75112.832 rows=772942 loops=1)
               Merge Cond: ("outer".p_partkey = "inner".l_partkey)
               ->  Index Scan using part_pkey on part  (cost=0.00..86569.00 rows=2000000 width=28) (actual time=1.540..553.172 rows=1999999 loops=1)
               ->  Sort  (cost=1240266.25..1242175.40 rows=763661 width=26) (actual time=73848.614..73931.810 rows=772942 loops=1)
                     Sort Key: lineitem.l_partkey
                     ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..1153514.88 rows=763661 width=26) (actual time=1.589..71029.405 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
 Total runtime: 75667.290 ms
(10 rows)

SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1347099.32..1347099.34 rows=1 width=46) (actual time=6008.515..6008.516 rows=1 loops=1)
   ->  Aggregate  (cost=1347099.32..1347099.34 rows=1 width=46) (actual time=6008.514..6008.514 rows=1 loops=1)
         ->  Merge Join  (cost=1240266.25..1343281.01 rows=763661 width=46) (actual time=4299.223..5470.149 rows=772942 loops=1)
               Merge Cond: ("outer".p_partkey = "inner".l_partkey)
               ->  Index Scan using part_pkey on part  (cost=0.00..86569.00 rows=2000000 width=28) (actual time=0.058..468.717 rows=1999999 loops=1)
               ->  Sort  (cost=1240266.25..1242175.40 rows=763661 width=26) (actual time=4299.148..4380.231 rows=772942 loops=1)
                     Sort Key: lineitem.l_partkey
                     ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.00..1153514.88 rows=763661 width=26) (actual time=0.076..2511.452 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
 Total runtime: 6015.099 ms
(10 rows)

query 15 run 1
SET
CREATE VIEW
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4987392.37..4987393.57 rows=1 width=112) (actual time=38862.102..38862.103 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=2490684.72..2490684.72 rows=1 width=32) (actual time=17413.758..17413.758 rows=1 loops=1)
           ->  Subquery Scan revenue0  (cost=2490607.16..2490675.02 rows=3878 width=32) (actual time=17351.765..17402.337 rows=100000 loops=1)
                 ->  HashAggregate  (cost=2490607.16..2490636.24 rows=3878 width=26) (actual time=17351.764..17387.797 rows=100000 loops=1)
                       ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=2305076 width=26) (actual time=0.008..15378.218 rows=2265714 loops=1)
                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=2496707.65..2501374.82 rows=3879 width=112) (actual time=38862.100..38862.100 rows=1 loops=1)
         Merge Cond: ("outer".s_suppkey = "inner".supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4359.00 rows=100000 width=80) (actual time=0.589..21.993 rows=69998 loops=1)
         ->  Sort  (cost=2496707.65..2496717.34 rows=3878 width=36) (actual time=38834.101..38834.101 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=2496369.85..2496476.49 rows=3878 width=36) (actual time=38823.976..38834.086 rows=1 loops=1)
                     ->  HashAggregate  (cost=2496369.85..2496437.71 rows=3878 width=26) (actual time=38823.974..38834.083 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=2305076 width=26) (actual time=0.508..19306.613 rows=2265714 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 38862.713 ms
(18 rows)

DROP VIEW
SET
CREATE VIEW
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4987392.37..4987393.57 rows=1 width=112) (actual time=35451.090..35451.090 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=2490684.72..2490684.72 rows=1 width=32) (actual time=17417.300..17417.300 rows=1 loops=1)
           ->  Subquery Scan revenue0  (cost=2490607.16..2490675.02 rows=3878 width=32) (actual time=17355.376..17405.959 rows=100000 loops=1)
                 ->  HashAggregate  (cost=2490607.16..2490636.24 rows=3878 width=26) (actual time=17355.374..17391.588 rows=100000 loops=1)
                       ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=2305076 width=26) (actual time=0.007..15376.875 rows=2265714 loops=1)
                             Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=2496707.65..2501374.82 rows=3879 width=112) (actual time=35451.090..35451.090 rows=1 loops=1)
         Merge Cond: ("outer".s_suppkey = "inner".supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4359.00 rows=100000 width=80) (actual time=0.037..14.965 rows=69998 loops=1)
         ->  Sort  (cost=2496707.65..2496717.34 rows=3878 width=36) (actual time=35430.241..35430.241 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=2496369.85..2496476.49 rows=3878 width=36) (actual time=35420.012..35430.227 rows=1 loops=1)
                     ->  HashAggregate  (cost=2496369.85..2496437.71 rows=3878 width=26) (actual time=35420.011..35430.226 rows=1 loops=1)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=2305076 width=26) (actual time=0.011..15964.322 rows=2265714 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 35451.315 ms
(18 rows)

DROP VIEW
query 16 run 1
SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=583166.10..583166.11 rows=1 width=46) (actual time=26251.405..26251.406 rows=1 loops=1)
   ->  Sort  (cost=583166.10..583233.09 rows=26795 width=46) (actual time=26251.405..26251.405 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=573983.19..581195.38 rows=26795 width=46) (actual time=25594.674..26117.585 rows=27838 loops=1)
               ->  Sort  (cost=573983.19..575412.23 rows=571616 width=46) (actual time=25594.633..25704.899 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3833.00..507995.23 rows=571616 width=46) (actual time=92.384..7379.857 rows=1186319 loops=1)
                           Merge Cond: ("outer".p_partkey = "inner".ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..136569.00 rows=285808 width=46) (actual time=1.517..1956.399 rows=296733 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND ((p_size = 12) OR (p_size = 32) OR (p_size = 36) OR (p_size = 26) OR (p_size = 40) OR (p_size = 34) OR (p_size = 49) OR (p_size = 9)))
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=3833.00..355009.00 rows=4000000 width=8) (actual time=90.841..4285.772 rows=7995493 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4) (actual time=1.317..89.797 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
 Total runtime: 26266.270 ms
(16 rows)

SET
                                                                                                                             QUERY PLAN                                                                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=583166.10..583166.11 rows=1 width=46) (actual time=25047.850..25047.851 rows=1 loops=1)
   ->  Sort  (cost=583166.10..583233.09 rows=26795 width=46) (actual time=25047.849..25047.849 rows=1 loops=1)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=573983.19..581195.38 rows=26795 width=46) (actual time=24392.387..24914.655 rows=27838 loops=1)
               ->  Sort  (cost=573983.19..575412.23 rows=571616 width=46) (actual time=24392.347..24502.581 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Merge Join  (cost=3833.00..507995.23 rows=571616 width=46) (actual time=80.078..6337.227 rows=1186319 loops=1)
                           Merge Cond: ("outer".p_partkey = "inner".ps_partkey)
                           ->  Index Scan using part_pkey on part  (cost=0.00..136569.00 rows=285808 width=46) (actual time=0.047..1745.767 rows=296733 loops=1)
                                 Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND ((p_size = 12) OR (p_size = 32) OR (p_size = 36) OR (p_size = 26) OR (p_size = 40) OR (p_size = 34) OR (p_size = 49) OR (p_size = 9)))
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=3833.00..355009.00 rows=4000000 width=8) (actual time=80.006..3474.239 rows=7995493 loops=1)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3833.00 rows=1 width=4) (actual time=0.312..79.918 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
 Total runtime: 25063.131 ms
(16 rows)

query 17 run 1
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14087246.76..14087246.76 rows=1 width=13) (actual time=282800.369..282800.370 rows=1 loops=1)
   ->  Aggregate  (cost=14087246.76..14087246.76 rows=1 width=13) (actual time=282800.367..282800.367 rows=1 loops=1)
         ->  Nested Loop  (cost=13508402.93..14087201.89 rows=17946 width=13) (actual time=226036.915..282792.565 rows=5319 loops=1)
               Join Filter: ("inner".l_quantity < "outer".avg_quantity)
               ->  Merge Join  (cost=13508402.93..13990097.38 rows=1795 width=40) (actual time=226034.168..272439.349 rows=1996 loops=1)
                     Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                     ->  Subquery Scan part_agg  (cost=13427212.69..13904340.57 rows=1815499 width=36) (actual time=225500.315..271712.927 rows=1999333 loops=1)
                           ->  GroupAggregate  (cost=13427212.69..13886185.58 rows=1815499 width=14) (actual time=225500.314..271292.297 rows=1999333 loops=1)
                                 ->  Sort  (cost=13427212.69..13577177.82 rows=59986052 width=14) (actual time=225500.277..237225.247 rows=59965994 loops=1)
                                       Sort Key: l_partkey
                                       ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14) (actual time=0.507..15025.622 rows=59986052 loops=1)
                     ->  Sort  (cost=81190.23..81195.17 rows=1977 width=4) (actual time=519.077..519.765 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=1977 width=4) (actual time=1.537..518.560 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..53.59 rows=34 width=27) (actual time=0.642..5.147 rows=30 loops=1996)
                     Index Cond: ("outer".agg_partkey = lineitem.l_partkey)
 Total runtime: 283869.831 ms
(18 rows)

SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14087246.76..14087246.76 rows=1 width=13) (actual time=278485.056..278485.056 rows=1 loops=1)
   ->  Aggregate  (cost=14087246.76..14087246.76 rows=1 width=13) (actual time=278485.054..278485.054 rows=1 loops=1)
         ->  Nested Loop  (cost=13508402.93..14087201.89 rows=17946 width=13) (actual time=225415.496..278478.268 rows=5319 loops=1)
               Join Filter: ("inner".l_quantity < "outer".avg_quantity)
               ->  Merge Join  (cost=13508402.93..13990097.38 rows=1795 width=40) (actual time=225401.011..271964.106 rows=1996 loops=1)
                     Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                     ->  Subquery Scan part_agg  (cost=13427212.69..13904340.57 rows=1815499 width=36) (actual time=224739.807..271113.828 rows=1999333 loops=1)
                           ->  GroupAggregate  (cost=13427212.69..13886185.58 rows=1815499 width=14) (actual time=224739.805..270694.140 rows=1999333 loops=1)
                                 ->  Sort  (cost=13427212.69..13577177.82 rows=59986052 width=14) (actual time=224739.761..236778.571 rows=59965994 loops=1)
                                       Sort Key: l_partkey
                                       ->  Seq Scan on lineitem  (cost=0.00..2179151.52 rows=59986052 width=14) (actual time=0.290..14692.162 rows=59986052 loops=1)
                     ->  Sort  (cost=81190.23..81195.17 rows=1977 width=4) (actual time=641.452..642.080 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..81082.00 rows=1977 width=4) (actual time=6.351..640.908 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..53.59 rows=34 width=27) (actual time=0.455..3.235 rows=30 loops=1996)
                     Index Cond: ("outer".agg_partkey = lineitem.l_partkey)
 Total runtime: 279522.815 ms
(18 rows)

query 18 run 1
SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6922098.42..6922098.67 rows=100 width=57) (actual time=56579.630..56579.639 rows=99 loops=1)
   ->  Sort  (cost=6922098.42..6925088.21 rows=1195918 width=57) (actual time=56579.629..56579.633 rows=99 loops=1)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  GroupAggregate  (cost=6716266.46..6740184.82 rows=1195918 width=57) (actual time=56578.898..56579.242 rows=99 loops=1)
               ->  Sort  (cost=6716266.46..6719256.26 rows=1195918 width=57) (actual time=56578.888..56578.908 rows=693 loops=1)
                     Sort Key: customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice
                     ->  Merge Join  (cost=3722887.77..6534352.87 rows=1195918 width=57) (actual time=36797.698..56576.676 rows=693 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643561.78 rows=59986052 width=14) (actual time=1.911..15778.161 rows=59916431 loops=1)
                           ->  Sort  (cost=3722887.77..3723635.39 rows=299049 width=51) (actual time=36347.477..36347.541 rows=687 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Merge Join  (cost=3612239.85..3689232.34 rows=299049 width=51) (actual time=35803.737..36347.408 rows=99 loops=1)
                                       Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                       ->  Index Scan using customer_pkey on customer  (cost=0.00..68764.00 rows=1500000 width=26) (actual time=1.408..413.480 rows=1481955 loops=1)
                                       ->  Sort  (cost=3612239.85..3612987.48 rows=299049 width=29) (actual time=35793.633..35793.660 rows=99 loops=1)
                                             Sort Key: orders.o_custkey
                                             ->  Merge IN Join  (cost=2949737.82..3580355.43 rows=299049 width=29) (actual time=948.727..35793.538 rows=99 loops=1)
                                                   Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..584928.00 rows=15000000 width=25) (actual time=1.454..3894.345 rows=14982724 loops=1)
                                                   ->  Materialize  (cost=2949737.82..2954189.31 rows=299049 width=4) (actual time=807.594..30785.348 rows=99 loops=1)
                                                         ->  Subquery Scan "IN_subquery"  (cost=0.00..2947977.78 rows=299049 width=4) (actual time=807.591..30785.242 rows=99 loops=1)
                                                               ->  GroupAggregate  (cost=0.00..2944987.29 rows=299049 width=14) (actual time=807.589..30785.118 rows=99 loops=1)
                                                                     Filter: (sum(l_quantity) > 313::numeric)
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643561.78 rows=59986052 width=14) (actual time=0.005..16989.306 rows=59986052 loops=1)
 Total runtime: 56579.716 ms
(25 rows)

SET
                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=6922098.42..6922098.67 rows=100 width=57) (actual time=55640.076..55640.085 rows=99 loops=1)
   ->  Sort  (cost=6922098.42..6925088.21 rows=1195918 width=57) (actual time=55640.074..55640.077 rows=99 loops=1)
         Sort Key: orders.o_totalprice, orders.o_orderdate
         ->  GroupAggregate  (cost=6716266.46..6740184.82 rows=1195918 width=57) (actual time=55639.404..55639.753 rows=99 loops=1)
               ->  Sort  (cost=6716266.46..6719256.26 rows=1195918 width=57) (actual time=55639.394..55639.413 rows=693 loops=1)
                     Sort Key: customer.c_name, customer.c_custkey, orders.o_orderkey, orders.o_orderdate, orders.o_totalprice
                     ->  Merge Join  (cost=3722887.77..6534352.87 rows=1195918 width=57) (actual time=35845.785..55637.204 rows=693 loops=1)
                           Merge Cond: ("outer".l_orderkey = "inner".o_orderkey)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643561.78 rows=59986052 width=14) (actual time=1.384..15798.424 rows=59916431 loops=1)
                           ->  Sort  (cost=3722887.77..3723635.39 rows=299049 width=51) (actual time=35396.299..35396.373 rows=687 loops=1)
                                 Sort Key: orders.o_orderkey
                                 ->  Merge Join  (cost=3612239.85..3689232.34 rows=299049 width=51) (actual time=34845.577..35396.238 rows=99 loops=1)
                                       Merge Cond: ("outer".c_custkey = "inner".o_custkey)
                                       ->  Index Scan using customer_pkey on customer  (cost=0.00..68764.00 rows=1500000 width=26) (actual time=1.256..420.257 rows=1481955 loops=1)
                                       ->  Sort  (cost=3612239.85..3612987.48 rows=299049 width=29) (actual time=34835.914..34835.935 rows=99 loops=1)
                                             Sort Key: orders.o_custkey
                                             ->  Merge IN Join  (cost=2949737.82..3580355.43 rows=299049 width=29) (actual time=868.130..34835.823 rows=99 loops=1)
                                                   Merge Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.00..584928.00 rows=15000000 width=25) (actual time=0.872..3747.432 rows=14982724 loops=1)
                                                   ->  Materialize  (cost=2949737.82..2954189.31 rows=299049 width=4) (actual time=740.791..29978.033 rows=99 loops=1)
                                                         ->  Subquery Scan "IN_subquery"  (cost=0.00..2947977.78 rows=299049 width=4) (actual time=740.790..29977.926 rows=99 loops=1)
                                                               ->  GroupAggregate  (cost=0.00..2944987.29 rows=299049 width=14) (actual time=740.787..29977.808 rows=99 loops=1)
                                                                     Filter: (sum(l_quantity) > 313::numeric)
                                                                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2643561.78 rows=59986052 width=14) (actual time=0.005..16230.769 rows=59986052 loops=1)
 Total runtime: 55640.161 ms
(25 rows)

query 19 run 1
SET


 Limit  (cost=2966797.66..2966797.66 rows=1 width=22) (actual time=29550.160..29550.161 rows=1 loops=1)
   ->  Aggregate  (cost=2966797.66..2966797.66 rows=1 width=22) (actual time=29550.159..29550.159 rows=1 loops=1)
         ->  Hash Join  (cost=98661.00..2966794.98 rows=1071 width=22) (actual time=3470.449..29548.922 rows=1063 loops=1)
               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
               Join Filter: ((("inner".p_brand = 'Brand#24'::bpchar) AND (("inner".p_container = 'SM CASE'::bpchar) OR ("inner".p_container = 'SM BOX'::bpchar) OR ("inner".p_container = 'SM PACK'::bpchar) OR ("inner".p_container = 'SM PKG'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 5)) OR (("inner".p_brand = 'Brand#43'::bpchar) AND (("inner".p_container = 'MED BAG'::bpchar) OR ("inner".p_container = 'MED BOX'::bpchar) OR ("inner".p_container = 'MED PKG'::bpchar) OR ("inner".p_container = 'MED PACK'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 10)) OR (("inner".p_brand = 'Brand#44'::bpchar) AND (("inner".p_container = 'LG CASE'::bpchar) OR ("inner".p_container = 'LG BOX'::bpchar) OR ("inner".p_container = 'LG PACK'::bpchar) OR ("inner".p_container = 'LG PKG'::bpchar)) AND ("outer".l_quantity >= 20::numeric) AND ("outer".l_quantity <= 30::numeric) AND ("inner".p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2629046.91 rows=2159389 width=36) (actual time=0.633..24650.554 rows=2141904 loops=1)
                     Filter: (((l_shipmode = 'AIR'::bpchar) OR (l_shipmode = 'AIR REG'::bpchar)) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
               ->  Hash  (cost=76082.00..76082.00 rows=2000000 width=36) (actual time=1448.805..1448.805 rows=0 loops=1)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=2000000 width=36) (actual time=0.433..1106.136 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 29550.204 ms
(11 rows)

SET


 Limit  (cost=2966797.66..2966797.66 rows=1 width=22) (actual time=28543.594..28543.595 rows=1 loops=1)
   ->  Aggregate  (cost=2966797.66..2966797.66 rows=1 width=22) (actual time=28543.593..28543.593 rows=1 loops=1)
         ->  Hash Join  (cost=98661.00..2966794.98 rows=1071 width=22) (actual time=3227.929..28542.413 rows=1063 loops=1)
               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
               Join Filter: ((("inner".p_brand = 'Brand#24'::bpchar) AND (("inner".p_container = 'SM CASE'::bpchar) OR ("inner".p_container = 'SM BOX'::bpchar) OR ("inner".p_container = 'SM PACK'::bpchar) OR ("inner".p_container = 'SM PKG'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 5)) OR (("inner".p_brand = 'Brand#43'::bpchar) AND (("inner".p_container = 'MED BAG'::bpchar) OR ("inner".p_container = 'MED BOX'::bpchar) OR ("inner".p_container = 'MED PKG'::bpchar) OR ("inner".p_container = 'MED PACK'::bpchar)) AND ("outer".l_quantity >= 10::numeric) AND ("outer".l_quantity <= 20::numeric) AND ("inner".p_size <= 10)) OR (("inner".p_brand = 'Brand#44'::bpchar) AND (("inner".p_container = 'LG CASE'::bpchar) OR ("inner".p_container = 'LG BOX'::bpchar) OR ("inner".p_container = 'LG PACK'::bpchar) OR ("inner".p_container = 'LG PKG'::bpchar)) AND ("outer".l_quantity >= 20::numeric) AND ("outer".l_quantity <= 30::numeric) AND ("inner".p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2629046.91 rows=2159389 width=36) (actual time=0.467..23739.414 rows=2141904 loops=1)
                     Filter: (((l_shipmode = 'AIR'::bpchar) OR (l_shipmode = 'AIR REG'::bpchar)) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
               ->  Hash  (cost=76082.00..76082.00 rows=2000000 width=36) (actual time=1376.005..1376.005 rows=0 loops=1)
                     ->  Seq Scan on part  (cost=0.00..76082.00 rows=2000000 width=36) (actual time=0.261..1033.853 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 28543.637 ms
(11 rows)

query 20 run 1
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4183151.70..4183151.71 rows=1 width=57) (actual time=55258.583..55258.583 rows=1 loops=1)
   ->  Sort  (cost=4183151.70..4183151.71 rows=1 width=57) (actual time=55258.582..55258.582 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=4183149.98..4183151.69 rows=1 width=57) (actual time=55231.270..55252.771 rows=1821 loops=1)
               Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
               ->  HashAggregate  (cost=4179630.37..4179630.37 rows=1 width=8) (actual time=55201.720..55212.574 rows=44712 loops=1)
                     ->  Nested Loop  (cost=4071979.75..4179630.37 rows=1 width=8) (actual time=43894.655..55157.898 rows=59002 loops=1)
                           Join Filter: (("inner".ps_availqty)::numeric > "outer".agg_quantity)
                           ->  Merge Join  (cost=4071979.75..4179627.11 rows=1 width=44) (actual time=43893.554..50985.287 rows=59125 loops=1)
                                 Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                                 ->  Subquery Scan agg_lineitem  (cost=3995897.74..4101254.71 rows=916148 width=40) (actual time=43347.036..49897.490 rows=5448473 loops=1)
                                       ->  GroupAggregate  (cost=3995897.74..4092093.23 rows=916148 width=18) (actual time=43347.034..48708.462 rows=5448473 loops=1)
                                             ->  Sort  (cost=3995897.74..4018801.43 rows=9161475 width=18) (actual time=43347.019..45034.940 rows=9123091 loops=1)
                                                   Sort Key: l_partkey, l_suppkey
                                                   ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=9161475 width=18) (actual time=0.506..19716.803 rows=9123688 loops=1)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=76082.01..76082.02 rows=1 width=4) (actual time=546.102..570.283 rows=59320 loops=1)
                                       Sort Key: part.p_partkey
                                       ->  HashAggregate  (cost=76082.00..76082.00 rows=1 width=4) (actual time=511.967..524.792 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=1 width=4) (actual time=0.585..503.090 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.24 rows=1 width=12) (actual time=0.069..0.069 rows=1 loops=59125)
                                 Index Cond: ((partsupp.ps_partkey = "outer".p_partkey) AND ("outer".agg_suppkey = partsupp.ps_suppkey))
               ->  Hash  (cost=3509.60..3509.60 rows=4000 width=61) (actual time=29.534..29.534 rows=0 loops=1)
                     ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=61) (actual time=1.180..28.913 rows=4095 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.200..0.206 rows=1 loops=1)
                                 Filter: (n_name = 'IRAQ'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=65) (actual time=0.975..27.498 rows=4095 loops=1)
                                 Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
 Total runtime: 55489.512 ms
(30 rows)

SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4183151.70..4183151.71 rows=1 width=57) (actual time=53756.532..53756.533 rows=1 loops=1)
   ->  Sort  (cost=4183151.70..4183151.71 rows=1 width=57) (actual time=53756.531..53756.531 rows=1 loops=1)
         Sort Key: supplier.s_name
         ->  Hash Join  (cost=4183149.98..4183151.69 rows=1 width=57) (actual time=53729.567..53750.739 rows=1821 loops=1)
               Hash Cond: ("outer".ps_suppkey = "inner".s_suppkey)
               ->  HashAggregate  (cost=4179630.37..4179630.37 rows=1 width=8) (actual time=53703.224..53713.781 rows=44712 loops=1)
                     ->  Nested Loop  (cost=4071979.75..4179630.37 rows=1 width=8) (actual time=42652.304..53658.744 rows=59002 loops=1)
                           Join Filter: (("inner".ps_availqty)::numeric > "outer".agg_quantity)
                           ->  Merge Join  (cost=4071979.75..4179627.11 rows=1 width=44) (actual time=42651.196..49483.409 rows=59125 loops=1)
                                 Merge Cond: ("outer".agg_partkey = "inner".p_partkey)
                                 ->  Subquery Scan agg_lineitem  (cost=3995897.74..4101254.71 rows=916148 width=40) (actual time=42078.781..48359.171 rows=5448473 loops=1)
                                       ->  GroupAggregate  (cost=3995897.74..4092093.23 rows=916148 width=18) (actual time=42078.779..47146.403 rows=5448473 loops=1)
                                             ->  Sort  (cost=3995897.74..4018801.43 rows=9161475 width=18) (actual time=42078.763..43426.418 rows=9123091 loops=1)
                                                   Sort Key: l_partkey, l_suppkey
                                                   ->  Seq Scan on lineitem  (cost=0.00..2479081.78 rows=9161475 width=18) (actual time=0.454..18865.482 rows=9123688 loops=1)
                                                         Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Sort  (cost=76082.01..76082.02 rows=1 width=4) (actual time=572.012..597.690 rows=59320 loops=1)
                                       Sort Key: part.p_partkey
                                       ->  HashAggregate  (cost=76082.00..76082.00 rows=1 width=4) (actual time=538.276..551.041 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..76082.00 rows=1 width=4) (actual time=0.537..529.494 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                           ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.24 rows=1 width=12) (actual time=0.068..0.069 rows=1 loops=59125)
                                 Index Cond: ((partsupp.ps_partkey = "outer".p_partkey) AND ("outer".agg_suppkey = partsupp.ps_suppkey))
               ->  Hash  (cost=3509.60..3509.60 rows=4000 width=61) (actual time=26.326..26.326 rows=0 loops=1)
                     ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=61) (actual time=0.980..25.715 rows=4095 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.151..0.158 rows=1 loops=1)
                                 Filter: (n_name = 'IRAQ'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=65) (actual time=0.827..24.448 rows=4095 loops=1)
                                 Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
 Total runtime: 54006.534 ms
(30 rows)

query 21 run 1
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17775513.22..17775513.47 rows=100 width=29) (actual time=155465.000..155465.011 rows=100 loops=1)
   ->  Sort  (cost=17775513.22..17775753.34 rows=96048 width=29) (actual time=155464.999..155465.003 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  GroupAggregate  (cost=17765101.67..17766062.15 rows=96048 width=29) (actual time=155446.754..155456.789 rows=3991 loops=1)
               ->  Sort  (cost=17765101.67..17765341.79 rows=96048 width=29) (actual time=155446.744..155450.178 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     ->  Nested Loop  (cost=3519.60..17755650.60 rows=96048 width=29) (actual time=32.459..155034.431 rows=39281 loops=1)
                           ->  Hash Join  (cost=3519.60..17154733.43 rows=198159 width=33) (actual time=31.065..148241.986 rows=80214 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Seq Scan on lineitem l1  (cost=0.00..17124238.04 rows=4998838 width=8) (actual time=1.739..147494.647 rows=2016924 loops=1)
                                       Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                       SubPlan
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.52 rows=67 width=152) (actual time=0.002..0.002 rows=1 loops=36573988)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..12.02 rows=201 width=152) (actual time=0.001..0.001 rows=1 loops=37929348)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: (l_suppkey <> $1)
                                 ->  Hash  (cost=3509.60..3509.60 rows=4000 width=33) (actual time=29.296..29.296 rows=0 loops=1)
                                       ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=33) (actual time=1.241..28.449 rows=3991 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.205..0.210 rows=1 loops=1)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                             ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=37) (actual time=1.032..27.192 rows=3991 loops=1)
                                                   Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=4) (actual time=0.084..0.084 rows=0 loops=80214)
                                 Index Cond: (orders.o_orderkey = "outer".l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 155465.761 ms
(28 rows)

SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17775513.22..17775513.47 rows=100 width=29) (actual time=154461.735..154461.746 rows=100 loops=1)
   ->  Sort  (cost=17775513.22..17775753.34 rows=96048 width=29) (actual time=154461.734..154461.739 rows=100 loops=1)
         Sort Key: count(*), supplier.s_name
         ->  GroupAggregate  (cost=17765101.67..17766062.15 rows=96048 width=29) (actual time=154443.631..154453.630 rows=3991 loops=1)
               ->  Sort  (cost=17765101.67..17765341.79 rows=96048 width=29) (actual time=154443.621..154447.003 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     ->  Nested Loop  (cost=3519.60..17755650.60 rows=96048 width=29) (actual time=32.394..154042.542 rows=39281 loops=1)
                           ->  Hash Join  (cost=3519.60..17154733.43 rows=198159 width=33) (actual time=31.708..148454.227 rows=80214 loops=1)
                                 Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
                                 ->  Seq Scan on lineitem l1  (cost=0.00..17124238.04 rows=4998838 width=8) (actual time=1.237..147709.153 rows=2016924 loops=1)
                                       Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                       SubPlan
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.52 rows=67 width=152) (actual time=0.002..0.002 rows=1 loops=36573988)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                         ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..12.02 rows=201 width=152) (actual time=0.001..0.001 rows=1 loops=37929348)
                                               Index Cond: (l_orderkey = $0)
                                               Filter: (l_suppkey <> $1)
                                 ->  Hash  (cost=3509.60..3509.60 rows=4000 width=33) (actual time=30.454..30.454 rows=0 loops=1)
                                       ->  Nested Loop  (cost=0.00..3509.60 rows=4000 width=33) (actual time=0.981..29.546 rows=3991 loops=1)
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.153..0.157 rows=1 loops=1)
                                                   Filter: (n_name = 'PERU'::bpchar)
                                             ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..3458.29 rows=4000 width=37) (actual time=0.825..28.439 rows=3991 loops=1)
                                                   Index Cond: (supplier.s_nationkey = "outer".n_nationkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.02 rows=1 width=4) (actual time=0.069..0.069 rows=0 loops=80214)
                                 Index Cond: (orders.o_orderkey = "outer".l_orderkey)
                                 Filter: (o_orderstatus = 'F'::bpchar)
 Total runtime: 154462.431 ms
(28 rows)

query 22 run 1
SET
                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2713538.50..2713538.52 rows=1 width=30) (actual time=15713.591..15713.591 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=139765.71..139765.71 rows=1 width=11) (actual time=3396.578..3396.578 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..139648.00 rows=47084 width=11) (actual time=0.037..3162.673 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)))
   ->  GroupAggregate  (cost=2573772.79..2573945.19 rows=8620 width=30) (actual time=15713.591..15713.591 rows=1 loops=1)
         ->  Sort  (cost=2573772.79..2573794.34 rows=8620 width=30) (actual time=15710.192..15711.004 rows=9006 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2573209.32 rows=8620 width=30) (actual time=3397.926..15500.247 rows=63509 loops=1)
                     Filter: ((("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..30.82 rows=19 width=124) (actual time=0.042..0.042 rows=1 loops=191129)
                             Index Cond: (o_custkey = $1)
 Total runtime: 15715.017 ms
(14 rows)

SET
                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2713538.50..2713538.52 rows=1 width=30) (actual time=6968.593..6968.593 rows=1 loops=1)
   InitPlan
     ->  Aggregate  (cost=139765.71..139765.71 rows=1 width=11) (actual time=3152.288..3152.288 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..139648.00 rows=47084 width=11) (actual time=0.012..2922.184 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)))
   ->  GroupAggregate  (cost=2573772.79..2573945.19 rows=8620 width=30) (actual time=6968.592..6968.592 rows=1 loops=1)
         ->  Sort  (cost=2573772.79..2573794.34 rows=8620 width=30) (actual time=6965.212..6965.987 rows=9006 loops=1)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..2573209.32 rows=8620 width=30) (actual time=3152.425..6790.087 rows=63509 loops=1)
                     Filter: ((("substring"((c_phone)::text, 1, 2) = '21'::text) OR ("substring"((c_phone)::text, 1, 2) = '29'::text) OR ("substring"((c_phone)::text, 1, 2) = '26'::text) OR ("substring"((c_phone)::text, 1, 2) = '34'::text) OR ("substring"((c_phone)::text, 1, 2) = '14'::text) OR ("substring"((c_phone)::text, 1, 2) = '15'::text) OR ("substring"((c_phone)::text, 1, 2) = '17'::text)) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..30.82 rows=19 width=124) (actual time=0.003..0.003 rows=1 loops=191129)
                             Index Cond: (o_custkey = $1)
 Total runtime: 6969.351 ms
(14 rows)

