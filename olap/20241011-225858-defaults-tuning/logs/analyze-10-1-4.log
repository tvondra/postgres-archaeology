query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191549.38..191549.59 rows=1 width=236) (actual time=2227.186..2227.249 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191549.38..191550.63 rows=6 width=236) (actual time=2227.185..2227.248 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191549.38..191549.44 rows=24 width=236) (actual time=2227.162..2227.225 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191546.27..191548.83 rows=24 width=236) (actual time=2227.102..2227.198 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190546.27..190546.43 rows=6 width=236) (actual time=2219.959..2219.970 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.11 rows=1480854 width=25) (actual time=0.070..622.127 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 12.713 ms
 Execution time: 2227.994 ms
(16 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191549.38..191549.59 rows=1 width=236) (actual time=1939.227..1939.288 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191549.38..191550.63 rows=6 width=236) (actual time=1939.226..1939.286 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191549.38..191549.44 rows=24 width=236) (actual time=1939.193..1939.254 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191546.27..191548.83 rows=24 width=236) (actual time=1938.397..1939.219 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190546.27..190546.43 rows=6 width=236) (actual time=1934.891..1934.901 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131312.11 rows=1480854 width=25) (actual time=0.029..316.285 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 0.462 ms
 Execution time: 1939.354 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66413.58..66413.58 rows=1 width=192) (actual time=621.587..621.601 rows=100 loops=1)
   ->  Sort  (cost=66413.58..66413.58 rows=1 width=192) (actual time=621.585..621.594 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Merge Join  (cost=44351.04..66413.57 rows=1 width=192) (actual time=422.541..621.064 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=836 width=30) (actual time=0.012..80.219 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44350.62..44750.10 rows=159792 width=172) (actual time=422.074..447.360 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30512kB
                     ->  Hash Join  (cost=408.01..30539.93 rows=159792 width=172) (actual time=5.405..306.736 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..193.301 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=5.397..5.399 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.232..4.976 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..3.504 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.228..0.229 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.223..0.228 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.218..0.219 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.216..0.217 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.120..0.120 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.106..0.118 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.100..0.115 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.099..0.110 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.095..0.096 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 19.629 ms
 Execution time: 626.371 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=66413.58..66413.58 rows=1 width=192) (actual time=382.996..383.010 rows=100 loops=1)
   ->  Sort  (cost=66413.58..66413.58 rows=1 width=192) (actual time=382.995..383.004 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Merge Join  (cost=44351.04..66413.57 rows=1 width=192) (actual time=284.587..382.593 rows=489 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 161
               ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=836 width=30) (actual time=0.014..48.132 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Sort  (cost=44350.62..44750.10 rows=159792 width=172) (actual time=284.502..308.805 rows=162846 loops=1)
                     Sort Key: partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30512kB
                     ->  Hash Join  (cost=408.01..30539.93 rows=159792 width=172) (actual time=2.516..175.411 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..48.708 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.509..2.511 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.016..2.118 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..0.613 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.013..0.014 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.008..0.013 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.009..0.015 rows=2 loops=650)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.006..0.013 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning time: 1.627 ms
 Execution time: 387.105 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=249748.66..249748.68 rows=10 width=44) (actual time=1449.733..1460.251 rows=10 loops=1)
   ->  Sort  (cost=249748.66..250530.58 rows=312770 width=44) (actual time=1449.732..1460.249 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=196704.70..242989.81 rows=312770 width=44) (actual time=1428.693..1457.948 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=196704.70..235296.66 rows=302682 width=44) (actual time=1428.688..1448.458 rows=11612 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=195704.66..198731.48 rows=100894 width=44) (actual time=1421.197..1426.665 rows=2903 loops=4)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=195704.66..195956.90 rows=100894 width=24) (actual time=1421.175..1421.545 rows=7633 loops=4)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 806kB
                                 ->  Nested Loop  (cost=5846.74..187319.12 rows=100894 width=24) (actual time=55.007..1418.446 rows=7633 loops=4)
                                       ->  Hash Join  (cost=5846.31..38632.08 rows=46114 width=12) (actual time=52.715..299.581 rows=36516 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230992 width=16) (actual time=0.035..197.760 rows=180569 loops=4)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 194431
                                             ->  Hash  (cost=5472.00..5472.00 rows=29945 width=4) (actual time=52.571..52.571 rows=30142 loops=4)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                   ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29945 width=4) (actual time=0.011..47.717 rows=30142 loops=4)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 119858
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.030..0.030 rows=0 loops=146063)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning time: 19.100 ms
 Execution time: 1461.160 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=249748.66..249748.68 rows=10 width=44) (actual time=298.669..312.880 rows=10 loops=1)
   ->  Sort  (cost=249748.66..250530.58 rows=312770 width=44) (actual time=298.668..312.877 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  Finalize GroupAggregate  (cost=196704.70..242989.81 rows=312770 width=44) (actual time=277.642..310.595 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=196704.70..235296.66 rows=302682 width=44) (actual time=277.628..301.015 rows=11612 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=195704.66..198731.48 rows=100894 width=44) (actual time=274.155..279.564 rows=2903 loops=4)
                           Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           ->  Sort  (cost=195704.66..195956.90 rows=100894 width=24) (actual time=274.143..274.504 rows=7633 loops=4)
                                 Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                                 Sort Method: quicksort  Memory: 804kB
                                 ->  Nested Loop  (cost=5846.74..187319.12 rows=100894 width=24) (actual time=30.460..272.446 rows=7633 loops=4)
                                       ->  Hash Join  (cost=5846.31..38632.08 rows=46114 width=12) (actual time=30.376..127.126 rows=36516 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230992 width=16) (actual time=0.007..58.630 rows=180569 loops=4)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 194431
                                             ->  Hash  (cost=5472.00..5472.00 rows=29945 width=4) (actual time=30.327..30.328 rows=30142 loops=4)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                   ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29945 width=4) (actual time=0.011..24.914 rows=30142 loops=4)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 119858
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=2 width=16) (actual time=0.004..0.004 rows=0 loops=146063)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_shipdate > '1995-03-07'::date)
                                             Rows Removed by Filter: 4
 Planning time: 0.870 ms
 Execution time: 312.956 ms
(31 rows)

query 4 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78556.36..78556.39 rows=1 width=24) (actual time=1953.662..1963.826 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=78556.36..78556.52 rows=5 width=24) (actual time=1953.661..1963.824 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=78556.36..78556.39 rows=15 width=24) (actual time=1953.657..1963.820 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=78554.51..78556.06 rows=15 width=24) (actual time=1953.478..1963.793 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=77554.51..77554.56 rows=5 width=24) (actual time=1947.049..1947.051 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=793.89..77465.60 rows=17782 width=16) (actual time=8.812..1937.058 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=793.46..27191.19 rows=17782 width=20) (actual time=8.571..268.217 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5933
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..779.68 rows=55125 width=0) (actual time=10.863..10.863 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.118..0.118 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 13.460 ms
 Execution time: 1964.662 ms
(23 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78556.36..78556.39 rows=1 width=24) (actual time=92.978..107.132 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=78556.36..78556.52 rows=5 width=24) (actual time=92.977..107.129 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=78556.36..78556.39 rows=15 width=24) (actual time=92.973..107.126 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=78554.51..78556.06 rows=15 width=24) (actual time=92.801..107.086 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=77554.51..77554.56 rows=5 width=24) (actual time=88.909..88.911 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=793.89..77465.60 rows=17782 width=16) (actual time=6.950..85.056 rows=12850 loops=4)
                                 ->  Parallel Bitmap Heap Scan on orders  (cost=793.46..27191.19 rows=17782 width=20) (actual time=6.929..24.680 rows=13993 loops=4)
                                       Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Heap Blocks: exact=5769
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..779.68 rows=55125 width=0) (actual time=6.698..6.698 rows=55973 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_commitdate < l_receiptdate)
                                       Rows Removed by Filter: 1
 Planning time: 0.761 ms
 Execution time: 107.251 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=86013.08..86013.08 rows=1 width=58) (actual time=2162.276..2172.600 rows=1 loops=1)
   ->  Sort  (cost=86013.08..86013.14 rows=25 width=58) (actual time=2162.275..2172.598 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=85974.14..86012.95 rows=25 width=58) (actual time=2161.613..2172.588 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=85974.14..86012.08 rows=75 width=58) (actual time=2161.431..2172.568 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=84974.10..85003.23 rows=25 width=58) (actual time=2153.450..2154.118 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=84974.10..84979.86 rows=2305 width=38) (actual time=2153.275..2153.358 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 194kB
                                 ->  Hash Join  (cost=10034.75..84845.36 rows=2305 width=38) (actual time=99.167..2151.561 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=9561.75..84068.36 rows=57904 width=50) (actual time=95.382..2135.320 rows=45609 loops=4)
                                             ->  Hash Join  (cost=9561.32..37194.21 rows=14476 width=38) (actual time=94.788..388.370 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3224.31..30441.02 rows=72380 width=8) (actual time=24.842..297.683 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6463
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3168.22 rows=224379 width=0) (actual time=26.139..26.139 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=69.585..69.587 rows=29952 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                         ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.072..63.536 rows=29952 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.031..40.471 rows=150000 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.031..0.032 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.025..0.030 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.146..0.153 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.399..3.400 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..2.108 rows=10000 loops=4)
 Planning time: 22.590 ms
 Execution time: 2173.547 ms
(46 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=86013.08..86013.08 rows=1 width=58) (actual time=170.074..185.604 rows=1 loops=1)
   ->  Sort  (cost=86013.08..86013.14 rows=25 width=58) (actual time=170.073..185.602 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=85974.14..86012.95 rows=25 width=58) (actual time=169.406..185.592 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=85974.14..86012.08 rows=75 width=58) (actual time=169.228..185.568 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=84974.10..85003.23 rows=25 width=58) (actual time=165.432..166.101 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=84974.10..84979.86 rows=2305 width=38) (actual time=165.262..165.341 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 190kB
                                 ->  Hash Join  (cost=10034.75..84845.36 rows=2305 width=38) (actual time=57.805..164.440 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=9561.75..84068.36 rows=57904 width=50) (actual time=54.954..154.075 rows=45609 loops=4)
                                             ->  Hash Join  (cost=9561.32..37194.21 rows=14476 width=38) (actual time=54.933..94.461 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3224.31..30441.02 rows=72380 width=8) (actual time=17.773..43.287 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6584
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3168.22 rows=224379 width=0) (actual time=16.947..16.947 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=36.878..36.879 rows=29952 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                         ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.073..31.753 rows=29952 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.032..9.656 rows=150000 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.032 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.029 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.715..2.716 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.433 rows=10000 loops=4)
 Planning time: 3.117 ms
 Execution time: 185.704 ms
(46 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107168.13..107168.14 rows=1 width=32) (actual time=1069.029..1074.533 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107168.13..107168.14 rows=1 width=32) (actual time=1069.028..1074.530 rows=1 loops=1)
         ->  Gather  (cost=107167.69..107168.10 rows=4 width=32) (actual time=1066.387..1074.514 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106167.69..106167.70 rows=1 width=32) (actual time=1058.250..1058.251 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21248.10..106019.92 rows=29554 width=12) (actual time=136.595..1043.088 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12995
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21218.55 rows=118214 width=0) (actual time=131.945..131.945 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 10.375 ms
 Execution time: 1075.047 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107168.13..107168.14 rows=1 width=32) (actual time=209.081..212.621 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107168.13..107168.14 rows=1 width=32) (actual time=209.080..212.619 rows=1 loops=1)
         ->  Gather  (cost=107167.69..107168.10 rows=4 width=32) (actual time=203.988..212.602 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106167.69..106167.70 rows=1 width=32) (actual time=200.848..200.849 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21248.10..106019.92 rows=29554 width=12) (actual time=107.970..194.087 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=10950
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21218.55 rows=118214 width=0) (actual time=98.883..98.884 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.391 ms
 Execution time: 212.662 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165409.81..165409.96 rows=1 width=92) (actual time=1587.227..1603.939 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=165409.81..166338.10 rows=6004 width=92) (actual time=1587.227..1603.938 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=165409.81..166160.40 rows=5811 width=92) (actual time=1587.051..1603.930 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=164409.77..164477.56 rows=1937 width=92) (actual time=1578.420..1578.733 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=164409.77..164414.61 rows=1937 width=72) (actual time=1578.238..1578.276 rows=957 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 250kB
                           ->  Hash Join  (cost=6074.43..164304.01 rows=1937 width=72) (actual time=66.861..1576.742 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=5709.33..163679.33 rows=46783 width=46) (actual time=59.981..1563.021 rows=36276 loops=4)
                                       ->  Hash Join  (cost=5708.90..38880.23 rows=38710 width=30) (actual time=59.337..300.765 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.040..160.483 rows=375000 loops=4)
                                             ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=59.271..59.271 rows=11896 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                                   ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.019..56.415 rows=11896 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.007..36.028 rows=150000 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.008 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.041..0.042 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.828..2.829 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.034..2.711 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.466 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 21.451 ms
 Execution time: 1604.861 ms
(45 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=165409.81..165409.96 rows=1 width=92) (actual time=280.802..301.107 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=165409.81..166338.10 rows=6004 width=92) (actual time=280.801..301.105 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Gather Merge  (cost=165409.81..166160.40 rows=5811 width=92) (actual time=280.604..301.097 rows=5 loops=1)
               Workers Planned: 3
               Workers Launched: 3
               ->  Partial GroupAggregate  (cost=164409.77..164477.56 rows=1937 width=92) (actual time=276.973..277.308 rows=3 loops=4)
                     Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     ->  Sort  (cost=164409.77..164414.61 rows=1937 width=72) (actual time=276.793..276.833 rows=952 loops=4)
                           Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 252kB
                           ->  Hash Join  (cost=6074.43..164304.01 rows=1937 width=72) (actual time=35.409..275.892 rows=1432 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                 Rows Removed by Join Filter: 1457
                                 ->  Nested Loop  (cost=5709.33..163679.33 rows=46783 width=46) (actual time=32.102..266.412 rows=36276 loops=4)
                                       ->  Hash Join  (cost=5708.90..38880.23 rows=38710 width=30) (actual time=32.072..134.262 rows=29619 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.006..31.684 rows=375000 loops=4)
                                             ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=32.045..32.045 rows=11896 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                                   ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.028..29.787 rows=11896 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.016..9.031 rows=150000 loops=4)
                                                         ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.008..0.008 rows=2 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=4)
                                                                     Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                     Rows Removed by Filter: 23
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=24) (actual time=0.004..0.004 rows=1 loops=118477)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 3
                                 ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=3.075..3.075 rows=794 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.026..2.965 rows=794 loops=4)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.652 rows=10000 loops=4)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=4)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning time: 2.360 ms
 Execution time: 301.206 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81572.83..81572.98 rows=1 width=40) (actual time=2709.838..2722.239 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=81572.83..81929.50 rows=2406 width=40) (actual time=2709.837..2722.238 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=81572.83..81850.01 rows=2028 width=72) (actual time=2709.612..2722.226 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=80572.81..80615.91 rows=1014 width=72) (actual time=2700.572..2700.785 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=80572.81..80575.35 rows=1014 width=46) (actual time=2700.349..2700.391 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 91kB
                           ->  Hash Join  (cost=50196.37..80522.18 rows=1014 width=46) (actual time=761.179..2699.641 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=50194.81..80512.43 rows=1014 width=20) (actual time=761.069..2698.384 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=49746.81..80061.76 rows=1019 width=20) (actual time=757.474..2694.346 rows=828 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Nested Loop  (cost=0.43..30242.79 rows=16639 width=20) (actual time=1.999..1935.601 rows=13231 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.342..24.553 rows=440 loops=3)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 66227
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.330..4.328 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=48598.14..48598.14 rows=91859 width=8) (actual time=752.153..752.157 rows=91179 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                                   ->  Hash Join  (cost=12936.73..48598.14 rows=91859 width=8) (actual time=116.669..731.845 rows=91179 loops=3)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Bitmap Heap Scan on orders  (cost=6599.72..39620.18 rows=459297 width=12) (actual time=52.312..564.932 rows=457263 loops=3)
                                                               Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Heap Blocks: exact=26131
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6484.90 rows=459297 width=0) (actual time=49.128..49.128 rows=457263 loops=3)
                                                                     Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=64.283..64.285 rows=29952 loops=3)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                               ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.052..59.625 rows=29952 loops=3)
                                                                     Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.016..38.211 rows=150000 loops=3)
                                                                     ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.032..0.033 rows=5 loops=3)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.026..0.031 rows=5 loops=3)
                                                                                 Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=3)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.395..3.396 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..2.246 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.024 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.016 rows=25 loops=3)
 Planning time: 27.624 ms
 Execution time: 2722.816 ms
(55 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81572.83..81572.98 rows=1 width=40) (actual time=279.775..295.107 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=81572.83..81929.50 rows=2406 width=40) (actual time=279.774..295.105 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=81572.83..81850.01 rows=2028 width=72) (actual time=279.554..295.094 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=80572.81..80615.91 rows=1014 width=72) (actual time=276.609..276.824 rows=2 loops=3)
                     Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=80572.81..80575.35 rows=1014 width=46) (actual time=276.398..276.439 rows=828 loops=3)
                           Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                           Sort Method: quicksort  Memory: 91kB
                           ->  Hash Join  (cost=50196.37..80522.18 rows=1014 width=46) (actual time=241.202..276.137 rows=828 loops=3)
                                 Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                                 ->  Hash Join  (cost=50194.81..80512.43 rows=1014 width=20) (actual time=241.145..275.619 rows=828 loops=3)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=49746.81..80061.76 rows=1019 width=20) (actual time=238.281..272.466 rows=828 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Nested Loop  (cost=0.43..30242.79 rows=16639 width=20) (actual time=0.048..31.605 rows=13231 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=555 width=4) (actual time=0.022..8.373 rows=440 loops=3)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 66227
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.004..0.047 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                             ->  Hash  (cost=48598.14..48598.14 rows=91859 width=8) (actual time=237.987..237.990 rows=91179 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                                   ->  Hash Join  (cost=12936.73..48598.14 rows=91859 width=8) (actual time=69.370..222.644 rows=91179 loops=3)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Bitmap Heap Scan on orders  (cost=6599.72..39620.18 rows=459297 width=12) (actual time=34.658..113.999 rows=457263 loops=3)
                                                               Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Heap Blocks: exact=26131
                                                               ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6484.90 rows=459297 width=0) (actual time=31.483..31.483 rows=457263 loops=3)
                                                                     Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=34.673..34.675 rows=29952 loops=3)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                               ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.054..30.615 rows=29952 loops=3)
                                                                     Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.021..9.252 rows=150000 loops=3)
                                                                     ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.028..0.029 rows=5 loops=3)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.023..0.028 rows=5 loops=3)
                                                                                 Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=3)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=3)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=3)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.617..2.617 rows=10000 loops=3)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.022..1.501 rows=10000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.023 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=3)
 Planning time: 3.412 ms
 Execution time: 295.230 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73753.57..73753.71 rows=1 width=66) (actual time=5942.151..5971.801 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=73753.57..73770.10 rows=121 width=66) (actual time=5942.150..5971.799 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=73753.57..73766.99 rows=100 width=66) (actual time=5941.597..5971.790 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=72753.55..72755.42 rows=50 width=66) (actual time=5935.490..5936.605 rows=3 loops=3)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=72753.55..72753.67 rows=50 width=57) (actual time=5935.134..5935.299 rows=1794 loops=3)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 18349kB
                           ->  Hash Join  (cost=3.13..72752.14 rows=50 width=57) (actual time=1.103..5831.444 rows=108643 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=1.57..72750.17 rows=50 width=31) (actual time=0.807..5751.341 rows=108643 loops=3)
                                       ->  Nested Loop  (cost=1.14..72592.85 rows=50 width=31) (actual time=0.316..4427.790 rows=108643 loops=3)
                                             ->  Nested Loop  (cost=0.86..72445.46 rows=50 width=35) (actual time=0.301..4199.341 rows=108643 loops=3)
                                                   ->  Nested Loop  (cost=0.42..18811.91 rows=16835 width=18) (actual time=0.128..201.517 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=4209 width=4) (actual time=0.032..30.252 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.044..0.046 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.042..0.273 rows=7 loops=43520)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=325928)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.018 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=3)
 Planning time: 25.059 ms
 Execution time: 5972.638 ms
(33 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73753.57..73753.71 rows=1 width=66) (actual time=835.481..862.496 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=73753.57..73770.10 rows=121 width=66) (actual time=835.480..862.495 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Gather Merge  (cost=73753.57..73766.99 rows=100 width=66) (actual time=834.879..862.485 rows=4 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=72753.55..72755.42 rows=50 width=66) (actual time=829.058..831.778 rows=6 loops=3)
                     Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     ->  Sort  (cost=72753.55..72753.67 rows=50 width=57) (actual time=828.714..829.064 rows=3747 loops=3)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 18310kB
                           ->  Hash Join  (cost=3.13..72752.14 rows=50 width=57) (actual time=0.108..736.366 rows=108643 loops=3)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=1.57..72750.17 rows=50 width=31) (actual time=0.059..682.454 rows=108643 loops=3)
                                       ->  Nested Loop  (cost=1.14..72592.85 rows=50 width=31) (actual time=0.047..366.120 rows=108643 loops=3)
                                             ->  Nested Loop  (cost=0.86..72445.46 rows=50 width=35) (actual time=0.041..204.469 rows=108643 loops=3)
                                                   ->  Nested Loop  (cost=0.42..18811.91 rows=16835 width=18) (actual time=0.029..33.265 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=4209 width=4) (actual time=0.012..15.958 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.003..0.010 rows=7 loops=43520)
                                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                                   Index Cond: (s_suppkey = lineitem.l_suppkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                                             Index Cond: (o_orderkey = lineitem.l_orderkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.020 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=3)
 Planning time: 4.521 ms
 Execution time: 862.598 ms
(33 rows)

query 10 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102898.83..102898.88 rows=20 width=202) (actual time=2146.782..2147.404 rows=20 loops=1)
   ->  Sort  (cost=102898.83..103038.52 rows=55877 width=202) (actual time=2146.781..2147.401 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=100713.50..101411.96 rows=55877 width=202) (actual time=2114.275..2136.351 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=8789.76..100015.04 rows=55877 width=182) (actual time=116.024..2014.856 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=7789.76..93427.34 rows=18025 width=182) (actual time=109.608..2059.996 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7788.20..93370.44 rows=18025 width=160) (actual time=109.533..2050.559 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=816.20..86351.12 rows=18025 width=16) (actual time=8.910..1935.565 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=815.77..27221.20 rows=18295 width=8) (actual time=8.250..266.591 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4993
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..801.59 rows=56716 width=0) (actual time=10.455..10.455 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.112..0.116 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=100.199..100.199 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.018..56.544 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning time: 19.954 ms
 Execution time: 2148.596 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102898.83..102898.88 rows=20 width=202) (actual time=252.428..252.986 rows=20 loops=1)
   ->  Sort  (cost=102898.83..103038.52 rows=55877 width=202) (actual time=252.427..252.983 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=100713.50..101411.96 rows=55877 width=202) (actual time=220.662..242.474 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=8789.76..100015.04 rows=55877 width=182) (actual time=81.037..148.319 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=7789.76..93427.34 rows=18025 width=182) (actual time=77.726..180.963 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7788.20..93370.44 rows=18025 width=160) (actual time=77.647..174.623 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=816.20..86351.12 rows=18025 width=16) (actual time=7.575..94.889 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=815.77..27221.20 rows=18295 width=8) (actual time=7.509..22.458 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1595
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..801.59 rows=56716 width=0) (actual time=6.824..6.824 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=69.272..69.272 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.047..25.422 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.020 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.015 rows=25 loops=4)
 Planning time: 1.198 ms
 Execution time: 253.408 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22743.04..22743.04 rows=1 width=36) (actual time=730.649..730.653 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.14..10892.16 rows=1 width=32) (actual time=26.775..26.776 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.46 rows=31958 width=10) (actual time=0.053..18.451 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.047..0.263 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.038..0.208 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11850.88..11930.78 rows=31958 width=36) (actual time=730.648..730.649 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.72..11691.09 rows=31958 width=36) (actual time=719.807..730.509 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.46 rows=31958 width=14) (actual time=1.258..663.455 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.681..2.958 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.672..2.861 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.581..0.581 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.097..1.590 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 14.249 ms
 Execution time: 731.031 ms
(36 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22743.04..22743.04 rows=1 width=36) (actual time=82.549..82.554 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.14..10892.16 rows=1 width=32) (actual time=26.664..26.665 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.46 rows=31958 width=10) (actual time=0.053..18.289 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.048..0.264 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.037..0.208 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.022..0.022 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11850.88..11930.78 rows=31958 width=36) (actual time=82.548..82.550 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11211.72..11691.09 rows=31958 width=36) (actual time=71.709..82.407 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.46 rows=31958 width=14) (actual time=0.060..27.571 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.050..0.370 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.040..0.309 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.057 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.910 ms
 Execution time: 82.956 ms
(36 rows)

query 12 run 1
SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170022.82..170043.78 rows=1 width=27) (actual time=1088.904..1089.130 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170022.82..170169.51 rows=7 width=27) (actual time=1088.903..1089.128 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170022.82..170169.23 rows=28 width=27) (actual time=1087.935..1089.123 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169022.77..169165.84 rows=7 width=27) (actual time=1074.796..1075.715 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169022.77..169040.64 rows=7150 width=27) (actual time=1073.897..1074.145 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 678kB
                           ->  Nested Loop  (cost=0.43..168565.03 rows=7150 width=27) (actual time=0.535..1070.100 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146313.80 rows=7151 width=15) (actual time=0.377..755.978 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.050..0.050 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 15.200 ms
 Execution time: 1089.792 ms
(19 rows)

SET
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=170022.82..170043.78 rows=1 width=27) (actual time=405.845..407.738 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=170022.82..170169.51 rows=7 width=27) (actual time=405.844..407.736 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Gather Merge  (cost=170022.82..170169.23 rows=28 width=27) (actual time=404.712..407.730 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial GroupAggregate  (cost=169022.77..169165.84 rows=7 width=27) (actual time=398.734..399.643 rows=2 loops=5)
                     Group Key: lineitem.l_shipmode
                     ->  Sort  (cost=169022.77..169040.64 rows=7150 width=27) (actual time=397.643..397.892 rows=6191 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 785kB
                           ->  Nested Loop  (cost=0.43..168565.03 rows=7150 width=27) (actual time=0.549..395.441 rows=6191 loops=5)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..146313.80 rows=7151 width=15) (actual time=0.533..365.155 rows=6191 loops=5)
                                       Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                       Rows Removed by Filter: 1194052
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.004..0.004 rows=1 loops=30953)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 0.591 ms
 Execution time: 407.794 ms
(19 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64587.14..64587.14 rows=1 width=16) (actual time=1455.138..1455.141 rows=1 loops=1)
   ->  Sort  (cost=64587.14..64587.64 rows=200 width=16) (actual time=1455.137..1455.139 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64584.14..64586.14 rows=200 width=16) (actual time=1455.111..1455.117 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60834.14..62334.14 rows=150000 width=12) (actual time=1413.887..1437.466 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53485.54 rows=1469719 width=8) (actual time=33.569..1058.854 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469719 width=8) (actual time=0.376..635.403 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.867..32.867 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.291..16.407 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 12.230 ms
 Execution time: 1456.955 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64587.14..64587.14 rows=1 width=16) (actual time=1253.222..1253.224 rows=1 loops=1)
   ->  Sort  (cost=64587.14..64587.64 rows=200 width=16) (actual time=1253.220..1253.222 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64584.14..64586.14 rows=200 width=16) (actual time=1253.195..1253.201 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=60834.14..62334.14 rows=150000 width=12) (actual time=1212.342..1235.523 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..53485.54 rows=1469719 width=8) (actual time=28.614..872.755 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469719 width=8) (actual time=0.010..476.044 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.204..28.204 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.042..12.825 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.563 ms
 Execution time: 1254.358 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78731.68..78731.69 rows=1 width=32) (actual time=594.895..595.952 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=78731.68..78731.69 rows=1 width=32) (actual time=594.894..595.950 rows=1 loops=1)
         ->  Gather  (cost=78731.22..78731.63 rows=4 width=64) (actual time=590.095..595.928 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=77731.22..77731.23 rows=1 width=64) (actual time=582.081..582.082 rows=1 loops=5)
                     ->  Hash Join  (cost=9881.06..77381.37 rows=19991 width=33) (actual time=120.210..565.548 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1282.06..68729.90 rows=19991 width=16) (actual time=16.859..450.586 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8323
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1262.07 rows=79964 width=0) (actual time=17.168..17.169 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=102.500..102.500 rows=200000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                                 ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.050..64.845 rows=200000 loops=5)
 Planning time: 11.634 ms
 Execution time: 596.730 ms
(18 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78731.68..78731.69 rows=1 width=32) (actual time=162.325..168.414 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=78731.68..78731.69 rows=1 width=32) (actual time=162.324..168.413 rows=1 loops=1)
         ->  Gather  (cost=78731.22..78731.63 rows=4 width=64) (actual time=161.771..168.398 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=77731.22..77731.23 rows=1 width=64) (actual time=158.629..158.630 rows=1 loops=5)
                     ->  Hash Join  (cost=9881.06..77381.37 rows=19991 width=33) (actual time=92.882..149.498 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1282.06..68729.90 rows=19991 width=16) (actual time=15.620..64.768 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=11909
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1262.07 rows=79964 width=0) (actual time=10.513..10.513 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=76.593..76.593 rows=200000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                                 ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.034..34.932 rows=200000 loops=5)
 Planning time: 0.558 ms
 Execution time: 168.515 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247123.56..247123.62 rows=1 width=103) (actual time=1479.524..1479.527 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122355.24..122355.24 rows=1 width=32) (actual time=203.693..203.694 rows=1 loops=1)
           ->  HashAggregate  (cost=122103.93..122229.58 rows=10052 width=36) (actual time=200.470..203.005 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3728.68..119777.83 rows=232610 width=16) (actual time=26.788..90.447 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3670.53 rows=232610 width=0) (actual time=17.749..17.749 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124768.31..125362.59 rows=10052 width=103) (actual time=1479.523..1479.524 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.293..4.241 rows=8449 loops=1)
         ->  Sort  (cost=124768.03..124793.16 rows=10052 width=36) (actual time=1474.788..1474.789 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123848.51..124099.81 rows=10052 width=36) (actual time=1472.371..1474.781 rows=1 loops=1)
                     ->  HashAggregate  (cost=123848.51..123999.29 rows=10052 width=36) (actual time=1472.370..1474.779 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3728.68..119777.83 rows=232610 width=16) (actual time=40.380..1076.974 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3670.53 rows=232610 width=0) (actual time=30.705..30.705 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 11.036 ms
 Execution time: 1479.872 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247123.56..247123.62 rows=1 width=103) (actual time=441.574..441.577 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122355.24..122355.24 rows=1 width=32) (actual time=203.088..203.089 rows=1 loops=1)
           ->  HashAggregate  (cost=122103.93..122229.58 rows=10052 width=36) (actual time=199.875..202.398 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3728.68..119777.83 rows=232610 width=16) (actual time=26.408..90.128 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3670.53 rows=232610 width=0) (actual time=17.475..17.475 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124768.31..125362.59 rows=10052 width=103) (actual time=441.573..441.574 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.006..1.320 rows=8449 loops=1)
         ->  Sort  (cost=124768.03..124793.16 rows=10052 width=36) (actual time=439.773..439.774 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123848.51..124099.81 rows=10052 width=36) (actual time=437.327..439.769 rows=1 loops=1)
                     ->  HashAggregate  (cost=123848.51..123999.29 rows=10052 width=36) (actual time=437.326..439.768 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3728.68..119777.83 rows=232610 width=16) (actual time=28.414..119.950 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3670.53 rows=232610 width=0) (actual time=19.391..19.391 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.634 ms
 Execution time: 441.932 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=32606.40..32606.40 rows=1 width=44) (actual time=480.764..480.872 rows=1 loops=1)
   ->  Sort  (cost=32606.40..32646.52 rows=16048 width=44) (actual time=480.763..480.870 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=31617.21..32526.16 rows=16048 width=44) (actual time=427.752..477.486 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=31617.21..31766.90 rows=59878 width=40) (actual time=427.730..435.344 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=10821.66..26865.97 rows=59878 width=40) (actual time=97.017..164.728 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=9821.66..19878.17 rows=14970 width=40) (actual time=89.354..156.523 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=4.029..53.424 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.245..3.495 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Hash  (cost=9099.00..9099.00 rows=29939 width=40) (actual time=85.238..85.238 rows=29492 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                       ->  Seq Scan on part  (cost=0.00..9099.00 rows=29939 width=40) (actual time=0.024..79.181 rows=29492 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 170508
 Planning time: 13.089 ms
 Execution time: 481.421 ms
(29 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=32606.40..32606.40 rows=1 width=44) (actual time=446.826..446.933 rows=1 loops=1)
   ->  Sort  (cost=32606.40..32646.52 rows=16048 width=44) (actual time=446.825..446.931 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=31617.21..32526.16 rows=16048 width=44) (actual time=394.179..443.526 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=31617.21..31766.90 rows=59878 width=40) (actual time=394.156..401.530 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Gather  (cost=10821.66..26865.97 rows=59878 width=40) (actual time=54.608..126.191 rows=117930 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=9821.66..19878.17 rows=14970 width=40) (actual time=64.366..123.183 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.207..38.832 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.172 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Hash  (cost=9099.00..9099.00 rows=29939 width=40) (actual time=62.037..62.038 rows=29492 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                       ->  Seq Scan on part  (cost=0.00..9099.00 rows=29939 width=40) (actual time=0.021..54.779 rows=29492 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 170508
 Planning time: 0.664 ms
 Execution time: 446.985 ms
(29 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=429110.89..429110.90 rows=1 width=32) (actual time=2544.348..2548.343 rows=1 loops=1)
   ->  Aggregate  (cost=429110.89..429110.90 rows=1 width=32) (actual time=2544.348..2548.341 rows=1 loops=1)
         ->  Merge Join  (cost=299938.66..429105.81 rows=2031 width=8) (actual time=1116.114..2548.236 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298937.78..413454.91 rows=193404 width=36) (actual time=1107.316..2515.580 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298937.78..404751.73 rows=773616 width=36) (actual time=1107.297..1954.205 rows=993526 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297937.73..311606.54 rows=193404 width=36) (actual time=1073.315..1540.598 rows=199282 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297937.73..301688.15 rows=1500169 width=9) (actual time=1073.287..1221.099 rows=1199320 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 24408kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127561.69 rows=1500169 width=9) (actual time=0.072..607.322 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13141.44 rows=6301 width=21) (actual time=3.898..14.082 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13125.68 rows=6301 width=21) (actual time=3.895..13.112 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11398.37 rows=2625 width=21) (actual time=1.518..88.399 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=88 width=4) (actual time=0.708..28.164 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.67 rows=31 width=17) (actual time=0.523..0.856 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 13.720 ms
 Execution time: 2552.573 ms
(29 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=429110.89..429110.90 rows=1 width=32) (actual time=2200.521..2205.534 rows=1 loops=1)
   ->  Aggregate  (cost=429110.89..429110.90 rows=1 width=32) (actual time=2200.520..2205.532 rows=1 loops=1)
         ->  Merge Join  (cost=299938.66..429105.81 rows=2031 width=8) (actual time=787.858..2205.396 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=298937.78..413454.91 rows=193404 width=36) (actual time=779.811..2178.353 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=298937.78..404751.73 rows=773616 width=36) (actual time=779.791..1620.293 rows=993385 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Partial GroupAggregate  (cost=297937.73..311606.54 rows=193404 width=36) (actual time=735.542..1237.900 rows=199254 loops=5)
                                 Group Key: lineitem_1.l_partkey
                                 ->  Sort  (cost=297937.73..301688.15 rows=1500169 width=9) (actual time=735.525..891.108 rows=1199444 loops=5)
                                       Sort Key: lineitem_1.l_partkey
                                       Sort Method: external merge  Disk: 19856kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127561.69 rows=1500169 width=9) (actual time=0.032..253.287 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13141.44 rows=6301 width=21) (actual time=3.020..8.419 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13125.68 rows=6301 width=21) (actual time=3.016..7.390 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11398.37 rows=2625 width=21) (actual time=0.134..16.935 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=88 width=4) (actual time=0.115..13.710 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.67 rows=31 width=17) (actual time=0.006..0.040 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.686 ms
 Execution time: 2208.482 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1855646.22..1855646.47 rows=100 width=71) (actual time=4323.091..4323.094 rows=9 loops=1)
   ->  Sort  (cost=1855646.22..1870647.91 rows=6000675 width=71) (actual time=4323.089..4323.092 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1491289.55..1626304.74 rows=6000675 width=71) (actual time=4323.052..4323.068 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1491289.55..1506291.24 rows=6000675 width=44) (actual time=4323.046..4323.050 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6979.19..697045.50 rows=6000675 width=44) (actual time=1044.240..4323.011 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=7.19..674321.29 rows=6000675 width=25) (actual time=975.823..4254.562 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..368321.77 rows=1500169 width=24) (actual time=746.304..3375.570 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..306.338 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..276012.04 rows=1500169 width=4) (actual time=643.485..3000.584 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227256.56 rows=6000675 width=9) (actual time=0.003..1626.765 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227256.56 rows=6000675 width=9) (actual time=0.010..614.100 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.095..68.096 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..43.024 rows=150000 loops=1)
 Planning time: 18.087 ms
 Execution time: 4323.173 ms
(27 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1855646.22..1855646.47 rows=100 width=71) (actual time=3288.000..3288.003 rows=9 loops=1)
   ->  Sort  (cost=1855646.22..1870647.91 rows=6000675 width=71) (actual time=3287.999..3288.001 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=1491289.55..1626304.74 rows=6000675 width=71) (actual time=3287.966..3287.982 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=1491289.55..1506291.24 rows=6000675 width=44) (actual time=3287.960..3287.964 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6979.19..697045.50 rows=6000675 width=44) (actual time=785.419..3287.929 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=7.19..674321.29 rows=6000675 width=25) (actual time=744.767..3247.250 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..368321.77 rows=1500169 width=24) (actual time=514.889..2367.766 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..162.573 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..276012.04 rows=1500169 width=4) (actual time=454.484..2138.291 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227256.56 rows=6000675 width=9) (actual time=0.003..807.712 rows=6001215 loops=1)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227256.56 rows=6000675 width=9) (actual time=0.008..612.238 rows=4807580 loops=1)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.329..40.329 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.584 rows=150000 loops=1)
 Planning time: 1.103 ms
 Execution time: 3288.081 ms
(27 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

 Limit  (cost=18349.51..18349.52 rows=1 width=32) (actual time=862.397..862.484 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18349.51..18349.52 rows=1 width=32) (actual time=862.396..862.482 rows=1 loops=1)
         ->  Gather  (cost=18349.29..18349.50 rows=2 width=32) (actual time=862.377..862.470 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17349.29..17349.30 rows=1 width=32) (actual time=854.146..854.147 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17348.91 rows=50 width=12) (actual time=35.844..854.017 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.527..28.007 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.05 rows=1 width=21) (actual time=4.363..4.886 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 13.026 ms
 Execution time: 863.365 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18349.51..18349.52 rows=1 width=32) (actual time=27.266..31.147 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18349.51..18349.52 rows=1 width=32) (actual time=27.265..31.145 rows=1 loops=1)
         ->  Gather  (cost=18349.29..18349.50 rows=2 width=32) (actual time=27.220..31.137 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17349.29..17349.30 rows=1 width=32) (actual time=24.989..24.989 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17348.91 rows=50 width=12) (actual time=0.510..24.948 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.114..15.638 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.05 rows=1 width=21) (actual time=0.048..0.055 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning time: 0.842 ms
 Execution time: 31.200 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277100.33..277100.33 rows=1 width=51) (actual time=3320.191..3320.270 rows=1 loops=1)
   ->  Sort  (cost=277100.33..277100.33 rows=1 width=51) (actual time=3320.189..3320.268 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243225.57..277100.32 rows=1 width=51) (actual time=3148.044..3320.068 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.277..3.604 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.267..2.804 rows=10000 loops=1)
               ->  Materialize  (cost=243225.57..276645.01 rows=1 width=8) (actual time=5.998..7.332 rows=4371 loops=438)
                     ->  Merge Join  (cost=243225.57..276645.00 rows=1 width=8) (actual time=2626.966..3145.453 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=242224.70..258710.63 rows=486275 width=40) (actual time=2617.975..3079.983 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=242224.70..244522.65 rows=919180 width=13) (actual time=2617.962..2719.349 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14732.03..141079.73 rows=919180 width=13) (actual time=125.464..2222.278 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14502.23 rows=919180 width=0) (actual time=108.833..108.833 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=8.653..26.622 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=8.650..24.679 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.377..202.017 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.187..31.277 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.217..0.233 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 19.307 ms
 Execution time: 3323.557 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277100.33..277100.33 rows=1 width=51) (actual time=1358.184..1358.269 rows=1 loops=1)
   ->  Sort  (cost=277100.33..277100.33 rows=1 width=51) (actual time=1358.183..1358.267 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243225.57..277100.32 rows=1 width=51) (actual time=1188.357..1358.107 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.009..1.699 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.001..0.586 rows=10000 loops=1)
               ->  Materialize  (cost=243225.57..276645.01 rows=1 width=8) (actual time=1.566..2.857 rows=4371 loops=438)
                     ->  Merge Join  (cost=243225.57..276645.00 rows=1 width=8) (actual time=685.767..1186.123 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=242224.70..258710.63 rows=486275 width=40) (actual time=682.227..1139.860 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=242224.70..244522.65 rows=919180 width=13) (actual time=682.215..782.478 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14732.03..141079.73 rows=919180 width=13) (actual time=89.306..324.625 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14502.23 rows=919180 width=0) (actual time=73.186..73.186 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=1000.87..11430.98 rows=8080 width=16) (actual time=3.215..8.335 rows=23762 loops=1)
                                 ->  Gather Merge  (cost=1000.87..11410.78 rows=8080 width=16) (actual time=3.211..6.427 rows=8748 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=0.84..9478.12 rows=3367 width=16) (actual time=0.074..17.030 rows=2916 loops=3)
                                             ->  Parallel Index Scan using part_pkey on part  (cost=0.42..6968.09 rows=842 width=4) (actual time=0.055..12.637 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.004..0.005 rows=4 loops=2187)
                                                   Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.440 ms
 Execution time: 1361.142 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=202750.53..202750.53 rows=1 width=34) (actual time=1313.594..1313.703 rows=100 loops=1)
   ->  Sort  (cost=202750.53..202750.53 rows=1 width=34) (actual time=1313.593..1313.696 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=202750.50..202750.52 rows=1 width=34) (actual time=1312.526..1313.286 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=202750.50..202750.50 rows=1 width=26) (actual time=1312.518..1312.778 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..202750.49 rows=1 width=26) (actual time=7.664..1298.397 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..202747.08 rows=1 width=34) (actual time=5.543..771.507 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..202743.77 rows=1 width=38) (actual time=5.537..144.178 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..201743.67 rows=1 width=38) (actual time=2.074..888.827 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133621.88 rows=19899 width=34) (actual time=2.061..551.950 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131312.11 rows=500056 width=8) (actual time=0.456..478.968 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=1.339..1.340 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.321..1.272 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.014 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.304..1.200 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.283..0.283 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.010..0.010 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 17.651 ms
 Execution time: 1314.600 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=202750.53..202750.53 rows=1 width=34) (actual time=649.126..649.233 rows=100 loops=1)
   ->  Sort  (cost=202750.53..202750.53 rows=1 width=34) (actual time=649.125..649.226 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=202750.50..202750.52 rows=1 width=34) (actual time=647.743..648.595 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=202750.50..202750.50 rows=1 width=26) (actual time=647.733..648.035 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=1236.87..202750.49 rows=1 width=26) (actual time=1.703..633.606 rows=4227 loops=1)
                           ->  Nested Loop  (cost=1236.44..202747.08 rows=1 width=34) (actual time=0.936..442.119 rows=73962 loops=1)
                                 ->  Gather  (cost=1236.01..202743.77 rows=1 width=38) (actual time=0.930..120.641 rows=153554 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Semi Join  (cost=236.01..201743.67 rows=1 width=38) (actual time=0.531..484.787 rows=30711 loops=5)
                                             ->  Hash Join  (cost=235.58..133621.88 rows=19899 width=34) (actual time=0.519..377.180 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131312.11 rows=500056 width=8) (actual time=0.010..306.251 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.430..0.432 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.069..0.368 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.053..0.298 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.033..0.033 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.38 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: (l_suppkey <> l1.l_suppkey)
                                                   Rows Removed by Filter: 0
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=153554)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                 Rows Removed by Filter: 1
 Planning time: 2.032 ms
 Execution time: 649.307 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14816.98..14817.01 rows=1 width=72) (actual time=175.253..175.332 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=44.644..44.722 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=44.572..44.713 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=37.761..37.762 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1988 width=6) (actual time=0.025..36.266 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8574.15..8594.78 rows=750 width=72) (actual time=175.252..175.253 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8574.15..8576.03 rows=750 width=38) (actual time=175.059..175.094 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8538.34 rows=750 width=38) (actual time=44.702..172.701 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=44.669..100.003 rows=19077 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.98 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 11.640 ms
 Execution time: 176.080 ms
(24 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14816.98..14817.01 rows=1 width=72) (actual time=115.952..116.030 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.446..28.522 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.404..28.514 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.575..26.576 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1988 width=6) (actual time=0.013..25.254 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8574.15..8594.78 rows=750 width=72) (actual time=115.951..115.952 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8574.15..8576.03 rows=750 width=38) (actual time=115.759..115.794 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8538.34 rows=750 width=38) (actual time=28.482..113.723 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=28.468..78.693 rows=19077 loops=1)
                           Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.98 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.594 ms
 Execution time: 116.080 ms
(24 rows)

