query 1 run 1
SET
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3948255.36..3948255.37 rows=1 width=236) (actual time=75413.685..75413.686 rows=1 loops=1)
   ->  Sort  (cost=3948255.36..3948255.38 rows=6 width=236) (actual time=75413.683..75413.684 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3948255.17..3948255.33 rows=6 width=236) (actual time=75413.642..75413.650 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874882.05 rows=59239232 width=25) (actual time=0.445..11631.726 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 13.499 ms
 Execution Time: 75414.109 ms
(12 rows)

SET
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3948255.36..3948255.37 rows=1 width=236) (actual time=72322.665..72322.667 rows=1 loops=1)
   ->  Sort  (cost=3948255.36..3948255.38 rows=6 width=236) (actual time=72322.664..72322.665 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3948255.17..3948255.33 rows=6 width=236) (actual time=72322.639..72322.647 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..1874882.05 rows=59239232 width=25) (actual time=0.024..9869.925 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 701604
 Planning Time: 0.567 ms
 Execution Time: 72322.716 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1047991.87..1047991.87 rows=1 width=193) (actual time=4940.035..4940.051 rows=100 loops=1)
   ->  Sort  (cost=1047991.87..1047991.87 rows=1 width=193) (actual time=4940.034..4940.044 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=558042.66..1047991.86 rows=1 width=193) (actual time=3154.713..4937.153 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.71 rows=7333 width=30) (actual time=0.400..780.543 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=558042.23..566042.31 rows=1600015 width=173) (actual time=3153.344..3612.155 rows=1603828 loops=1)
                     ->  Sort  (cost=558042.23..562042.27 rows=1600015 width=173) (actual time=3153.340..3435.217 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305271.70 rows=1600015 width=173) (actual time=44.642..2484.939 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255222.76 rows=8000076 width=14) (actual time=0.387..1074.071 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=167) (actual time=44.240..44.242 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=167) (actual time=0.690..38.563 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.334..26.036 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.351..0.353 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.339..0.349 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.151..0.154 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.180..0.180 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.174..0.176 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.056..0.056 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.046..0.054 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.040..0.052 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.040..0.050 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.035..0.036 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.012..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.007 rows=25 loops=1)
 Planning Time: 21.656 ms
 Execution Time: 4976.685 ms
(53 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1047991.87..1047991.87 rows=1 width=193) (actual time=3929.718..3929.735 rows=100 loops=1)
   ->  Sort  (cost=1047991.87..1047991.87 rows=1 width=193) (actual time=3929.717..3929.727 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Merge Join  (cost=558042.66..1047991.86 rows=1 width=193) (actual time=2725.422..3927.412 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = partsupp.ps_partkey)
               Join Filter: (partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1661
               ->  Index Scan using part_pkey on part  (cost=0.43..89212.71 rows=7333 width=30) (actual time=0.022..477.711 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 1991954
               ->  Materialize  (cost=558042.23..566042.31 rows=1600015 width=173) (actual time=2725.307..3162.296 rows=1603828 loops=1)
                     ->  Sort  (cost=558042.23..562042.27 rows=1600015 width=173) (actual time=2725.304..2983.223 rows=1603828 loops=1)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: external merge  Disk: 293496kB
                           ->  Hash Join  (cost=4048.51..305271.70 rows=1600015 width=173) (actual time=26.500..2075.418 rows=1604080 loops=1)
                                 Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255222.76 rows=8000076 width=14) (actual time=0.033..781.290 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.51..3798.51 rows=20000 width=167) (actual time=26.452..26.455 rows=20051 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 4211kB
                                       ->  Hash Join  (cost=2.51..3798.51 rows=20000 width=167) (actual time=0.066..21.263 rows=20051 loops=1)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=145) (actual time=0.003..5.968 rows=100000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.060..0.062 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.054..0.061 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.039..0.040 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=66.25..66.26 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=6398)
                       ->  Nested Loop  (cost=2.29..66.24 rows=4 width=6) (actual time=0.009..0.015 rows=2 loops=6398)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 2
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Hash Join  (cost=2.29..64.95 rows=18 width=10) (actual time=0.005..0.013 rows=4 loops=6398)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Nested Loop  (cost=0.72..63.33 rows=18 width=10) (actual time=0.005..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..3.75 rows=18 width=10) (actual time=0.002..0.003 rows=4 loops=6398)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.011..0.012 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.007 rows=25 loops=1)
 Planning Time: 2.010 ms
 Execution Time: 3966.419 ms
(53 rows)

query 3 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3190590.59..3190590.62 rows=10 width=44) (actual time=29150.206..29150.210 rows=10 loops=1)
   ->  Sort  (cost=3190590.59..3198585.55 rows=3197984 width=44) (actual time=29150.204..29150.208 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3044032.13..3121483.31 rows=3197984 width=44) (actual time=29008.928..29130.806 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 64  Batches: 65  Memory Usage: 34321kB  Disk Usage: 12176kB
               ->  Hash Join  (cost=520694.13..2875888.13 rows=3197984 width=24) (actual time=9354.876..28801.802 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874882.05 rows=32640297 width=16) (actual time=0.454..11261.984 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=495146.00..495146.00 rows=1469690 width=12) (actual time=9351.390..9351.392 rows=1451805 loops=1)
                           Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                           ->  Hash Join  (cost=124068.66..495146.00 rows=1469690 width=12) (actual time=1051.757..9013.425 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=65576.85..417596.32 rows=7260118 width=16) (actual time=542.876..6848.908 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..63761.82 rows=7260118 width=0) (actual time=492.038..492.038 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54696.32..54696.32 rows=303639 width=4) (actual time=508.165..508.166 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54696.32 rows=303639 width=4) (actual time=0.535..455.223 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 21.577 ms
 Execution Time: 29153.606 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3190590.59..3190590.62 rows=10 width=44) (actual time=22360.652..22360.657 rows=10 loops=1)
   ->  Sort  (cost=3190590.59..3198585.55 rows=3197984 width=44) (actual time=22360.650..22360.654 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=3044032.13..3121483.31 rows=3197984 width=44) (actual time=22218.156..22340.750 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 64  Batches: 65  Memory Usage: 34321kB  Disk Usage: 12176kB
               ->  Hash Join  (cost=520694.13..2875888.13 rows=3197984 width=24) (actual time=4628.720..22020.721 rows=301530 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1874882.05 rows=32640297 width=16) (actual time=0.023..9348.690 rows=32534229 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 27451823
                     ->  Hash  (cost=495146.00..495146.00 rows=1469690 width=12) (actual time=4626.896..4626.898 rows=1451805 loops=1)
                           Buckets: 1048576  Batches: 4  Memory Usage: 23817kB
                           ->  Hash Join  (cost=124068.66..495146.00 rows=1469690 width=12) (actual time=891.829..4361.970 rows=1451805 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=65576.85..417596.32 rows=7260118 width=16) (actual time=516.413..2443.715 rows=7239437 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=261268
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..63761.82 rows=7260118 width=0) (actual time=466.028..466.028 rows=7239437 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=54696.32..54696.32 rows=303639 width=4) (actual time=374.674..374.674 rows=300276 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14653kB
                                       ->  Seq Scan on customer  (cost=0.00..54696.32 rows=303639 width=4) (actual time=0.029..324.116 rows=300276 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 1199724
 Planning Time: 1.543 ms
 Execution Time: 22363.388 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2173079.86..2173079.87 rows=1 width=24) (actual time=19963.120..19963.121 rows=1 loops=1)
   ->  Sort  (cost=2173079.86..2173079.88 rows=5 width=24) (actual time=19963.118..19963.119 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2173079.79..2173079.84 rows=5 width=24) (actual time=19963.089..19963.091 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=6855.93..2170109.48 rows=594062 width=16) (actual time=110.195..19684.864 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=6855.37..277037.66 rows=594286 width=20) (actual time=109.762..6733.023 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6706.80 rows=594286 width=0) (actual time=64.475..64.475 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 17.185 ms
 Execution Time: 19963.455 ms
(19 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2173079.86..2173079.87 rows=1 width=24) (actual time=4499.714..4499.715 rows=1 loops=1)
   ->  Sort  (cost=2173079.86..2173079.88 rows=5 width=24) (actual time=4499.712..4499.713 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2173079.79..2173079.84 rows=5 width=24) (actual time=4499.692..4499.694 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=6855.93..2170109.48 rows=594062 width=16) (actual time=109.272..4323.200 rows=513822 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=6855.37..277037.66 rows=594286 width=20) (actual time=109.241..1207.979 rows=560424 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=231887
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6706.80 rows=594286 width=0) (actual time=64.256..64.256 rows=560424 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.61 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=560424)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 1.166 ms
 Execution Time: 4499.771 ms
(19 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2105821.52..2105821.52 rows=1 width=58) (actual time=23234.626..23234.633 rows=1 loops=1)
   ->  Sort  (cost=2105821.52..2105821.58 rows=25 width=58) (actual time=23234.624..23234.630 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2104911.18..2105821.39 rows=25 width=58) (actual time=23210.302..23234.598 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2104911.18..2105093.16 rows=72792 width=38) (actual time=23204.271..23207.342 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=94723.82..2099032.68 rows=72792 width=38) (actual time=883.010..23152.677 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90002.82..2084599.47 rows=1849942 width=50) (actual time=832.694..22662.648 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90002.26..399271.19 rows=462660 width=38) (actual time=831.885..8565.580 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=26678.74..322646.21 rows=2313298 width=8) (actual time=225.238..7263.909 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26100.42 rows=2313298 width=0) (actual time=174.294..174.295 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.66..59573.66 rows=299989 width=38) (actual time=606.203..606.206 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.66 rows=299989 width=38) (actual time=1.464..542.099 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=8) (actual time=0.811..371.805 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.643..0.646 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.638..0.644 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.323..0.324 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.307..0.308 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.302..0.303 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.028..0.030 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.927..44.927 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.420..29.560 rows=100000 loops=1)
 Planning Time: 25.012 ms
 Execution Time: 23235.105 ms
(41 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2105821.52..2105821.52 rows=1 width=58) (actual time=6074.252..6074.259 rows=1 loops=1)
   ->  Sort  (cost=2105821.52..2105821.58 rows=25 width=58) (actual time=6074.251..6074.257 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=2104911.18..2105821.39 rows=25 width=58) (actual time=6049.973..6074.236 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=2104911.18..2105093.16 rows=72792 width=38) (actual time=6043.959..6047.031 rows=72033 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 8700kB
                     ->  Hash Join  (cost=94723.82..2099032.68 rows=72792 width=38) (actual time=731.704..6008.939 rows=72033 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=90002.82..2084599.47 rows=1849942 width=50) (actual time=692.650..5580.916 rows=1815327 loops=1)
                                 ->  Hash Join  (cost=90002.26..399271.19 rows=462660 width=38) (actual time=692.627..2606.161 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=26678.74..322646.21 rows=2313298 width=8) (actual time=213.550..1551.151 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=261246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26100.42 rows=2313298 width=0) (actual time=163.568..163.568 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59573.66..59573.66 rows=299989 width=38) (actual time=478.744..478.747 rows=299436 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25151kB
                                             ->  Hash Join  (cost=2.51..59573.66 rows=299989 width=38) (actual time=0.058..417.665 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=8) (actual time=0.019..253.796 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.033..0.035 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.027..0.033 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..3.60 rows=4 width=20) (actual time=0.005..0.006 rows=4 loops=453399)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=38.562..38.563 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.020..21.637 rows=100000 loops=1)
 Planning Time: 4.216 ms
 Execution Time: 6074.456 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1977710.05..1977710.06 rows=1 width=32) (actual time=99176.625..99176.626 rows=1 loops=1)
   ->  Aggregate  (cost=1977710.05..1977710.06 rows=1 width=32) (actual time=99176.623..99176.624 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1971811.22 rows=1179766 width=12) (actual time=1.459..97698.587 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 14.322 ms
 Execution Time: 99177.793 ms
(6 rows)

SET
SET
SET
                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1977710.05..1977710.06 rows=1 width=32) (actual time=4409.685..4409.687 rows=1 loops=1)
   ->  Aggregate  (cost=1977710.05..1977710.06 rows=1 width=32) (actual time=4409.684..4409.685 rows=1 loops=1)
         ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1971811.22 rows=1179766 width=12) (actual time=0.059..4016.480 rows=1194558 loops=1)
               Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.711 ms
 Execution Time: 4409.724 ms
(6 rows)

query 7 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2717816.01..2717816.13 rows=1 width=116) (actual time=19249.241..19249.248 rows=1 loops=1)
   ->  GroupAggregate  (cost=2717816.01..2719018.85 rows=10032 width=116) (actual time=19249.240..19249.246 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2717816.01..2717966.35 rows=60135 width=96) (actual time=19240.894..19241.686 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563410.67..2713042.52 rows=60135 width=96) (actual time=5268.026..19206.037 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111774.16 rows=1445001 width=46) (actual time=37.794..13168.087 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024829.86 rows=18363970 width=24) (actual time=0.446..10835.312 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=37.331..37.334 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.635..35.877 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.413..25.587 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.212..0.213 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.203..0.207 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536576.85..536576.85 rows=1200034 width=30) (actual time=5225.715..5225.717 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57052.65..536576.85 rows=1200034 width=30) (actual time=554.370..4960.594 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411272.24 rows=15000424 width=8) (actual time=0.750..1735.693 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.70..55552.70 rows=119996 width=30) (actual time=553.344..553.345 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.70 rows=119996 width=30) (actual time=0.762..527.078 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=8) (actual time=0.737..378.509 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.017..0.017 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.014 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 24.366 ms
 Execution Time: 19250.023 ms
(42 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2717816.01..2717816.13 rows=1 width=116) (actual time=15793.533..15793.540 rows=1 loops=1)
   ->  GroupAggregate  (cost=2717816.01..2719018.85 rows=10032 width=116) (actual time=15793.532..15793.538 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=2717816.01..2717966.35 rows=60135 width=96) (actual time=15784.984..15785.780 rows=14421 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 9664kB
               ->  Hash Join  (cost=563410.67..2713042.52 rows=60135 width=96) (actual time=4305.641..15751.928 rows=57794 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 58158
                     ->  Hash Join  (cost=3629.40..2111774.16 rows=1445001 width=46) (actual time=19.781..10714.242 rows=1455694 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem  (cost=0.00..2024829.86 rows=18363970 width=24) (actual time=0.033..8796.103 rows=18230325 loops=1)
                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Rows Removed by Filter: 41755727
                           ->  Hash  (cost=3529.40..3529.40 rows=8000 width=30) (actual time=19.738..19.740 rows=7981 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 548kB
                                 ->  Hash Join  (cost=1.40..3529.40 rows=8000 width=30) (actual time=0.019..18.713 rows=7981 loops=1)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.005..5.812 rows=100000 loops=1)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=1)
                                                   Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                   Rows Removed by Filter: 23
                     ->  Hash  (cost=536576.85..536576.85 rows=1200034 width=30) (actual time=4283.730..4283.732 rows=1191175 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 22152kB
                           ->  Hash Join  (cost=57052.65..536576.85 rows=1200034 width=30) (actual time=299.646..4036.750 rows=1191175 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Seq Scan on orders  (cost=0.00..411272.24 rows=15000424 width=8) (actual time=0.027..1278.537 rows=15000000 loops=1)
                                 ->  Hash  (cost=55552.70..55552.70 rows=119996 width=30) (actual time=299.355..299.356 rows=119622 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 8267kB
                                       ->  Hash Join  (cost=1.40..55552.70 rows=119996 width=30) (actual time=0.027..278.503 rows=119622 loops=1)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=8) (actual time=0.009..87.283 rows=1500000 loops=1)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                         Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                         Rows Removed by Filter: 23
 Planning Time: 2.790 ms
 Execution Time: 15793.683 ms
(42 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1170945.42..1170945.65 rows=1 width=64) (actual time=62422.109..62422.115 rows=1 loops=1)
   ->  GroupAggregate  (cost=1170945.42..1171516.68 rows=2406 width=64) (actual time=62422.107..62422.113 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1170945.42..1171003.54 rows=23251 width=70) (actual time=62416.056..62416.513 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=820953.64..1169259.14 rows=23251 width=70) (actual time=54455.682..62397.782 rows=23842 loops=1)
                     ->  Hash Join  (cost=820953.49..1168609.79 rows=23251 width=20) (actual time=54455.649..62357.059 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=816482.49..1164076.74 rows=23639 width=20) (actual time=54410.611..62300.841 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=753158.97..1100073.60 rows=118195 width=24) (actual time=53811.954..61665.878 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=51950.96..380790.71 rows=4504783 width=12) (actual time=374.632..7225.967 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..50824.76 rows=4504783 width=0) (actual time=323.214..323.214 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=696288.32..696288.32 rows=393575 width=20) (actual time=53436.986..53436.987 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.44..696288.32 rows=393575 width=20) (actual time=3.359..52971.862 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65981.18 rows=13333 width=4) (actual time=1.543..588.854 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..46.97 rows=30 width=24) (actual time=0.251..4.007 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59573.66..59573.66 rows=299989 width=4) (actual time=598.060..598.062 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.66 rows=299989 width=4) (actual time=1.455..545.486 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=8) (actual time=0.793..374.359 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.654..0.655 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.649..0.653 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.318..0.320 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.324..0.324 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.320..0.321 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=44.996..44.996 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.433..29.793 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.003..0.003 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 29.509 ms
 Execution Time: 62422.699 ms
(52 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1170945.42..1170945.65 rows=1 width=64) (actual time=4992.317..4992.324 rows=1 loops=1)
   ->  GroupAggregate  (cost=1170945.42..1171516.68 rows=2406 width=64) (actual time=4992.315..4992.322 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1170945.42..1171003.54 rows=23251 width=70) (actual time=4986.547..4986.990 rows=11818 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 2631kB
               ->  Nested Loop  (cost=820953.64..1169259.14 rows=23251 width=70) (actual time=2797.798..4975.834 rows=23842 loops=1)
                     ->  Hash Join  (cost=820953.49..1168609.79 rows=23251 width=20) (actual time=2797.785..4951.390 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=816482.49..1164076.74 rows=23639 width=20) (actual time=2760.637..4904.826 rows=23842 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=753158.97..1100073.60 rows=118195 width=24) (actual time=2305.565..4421.040 rows=118593 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=51950.96..380790.71 rows=4504783 width=12) (actual time=352.117..1603.316 rows=4557513 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=261268
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..50824.76 rows=4504783 width=0) (actual time=301.497..301.498 rows=4557513 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=696288.32..696288.32 rows=393575 width=20) (actual time=1953.131..1953.132 rows=389521 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 25019kB
                                             ->  Nested Loop  (cost=0.44..696288.32 rows=393575 width=20) (actual time=0.097..1841.871 rows=389521 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..65981.18 rows=13333 width=4) (actual time=0.070..308.747 rows=13011 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 1986989
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..46.97 rows=30 width=24) (actual time=0.009..0.112 rows=30 loops=13011)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=59573.66..59573.66 rows=299989 width=4) (actual time=454.415..454.417 rows=299436 loops=1)
                                       Buckets: 524288  Batches: 1  Memory Usage: 14624kB
                                       ->  Hash Join  (cost=2.51..59573.66 rows=299989 width=4) (actual time=0.069..406.488 rows=299436 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=8) (actual time=0.022..245.363 rows=1500000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.040..0.042 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.035..0.040 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.013..0.014 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.017 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=37.105..37.105 rows=100000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 4931kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.017..21.016 rows=100000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=23842)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 23817  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 4.696 ms
 Execution Time: 4992.609 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1456042.28..1456042.31 rows=1 width=90) (actual time=181909.662..181909.667 rows=1 loops=1)
   ->  GroupAggregate  (cost=1456042.28..1456045.50 rows=92 width=90) (actual time=181909.661..181909.665 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1456042.28..1456042.51 rows=92 width=81) (actual time=181897.524..181900.974 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211256kB
               ->  Nested Loop  (cost=66992.46..1456039.28 rows=92 width=81) (actual time=675.198..177521.587 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66992.46..1456004.62 rows=92 width=31) (actual time=674.874..169775.271 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66992.02..1455689.74 rows=92 width=31) (actual time=673.646..124189.477 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66991.73..1455388.15 rows=92 width=35) (actual time=673.129..115917.659 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66991.29..343214.29 rows=323237 width=18) (actual time=672.281..3230.820 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255222.76 rows=8000076 width=14) (actual time=0.509..1363.187 rows=8000000 loops=1)
                                             ->  Hash  (cost=65981.18..65981.18 rows=80809 width=4) (actual time=671.407..671.408 rows=108312 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65981.18 rows=80809 width=4) (actual time=0.455..647.969 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..3.43 rows=1 width=29) (actual time=0.037..0.257 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.309..0.313 rows=25 loops=1)
 Planning Time: 32.221 ms
 Execution Time: 181935.539 ms
(30 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1456042.28..1456042.31 rows=1 width=90) (actual time=54362.660..54362.665 rows=1 loops=1)
   ->  GroupAggregate  (cost=1456042.28..1456045.50 rows=92 width=90) (actual time=54362.659..54362.663 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=1456042.28..1456042.51 rows=92 width=81) (actual time=54351.120..54354.397 rows=11401 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 211256kB
               ->  Nested Loop  (cost=66992.46..1456039.28 rows=92 width=81) (actual time=621.987..50369.790 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 39009119
                     ->  Nested Loop  (cost=66992.46..1456004.62 rows=92 width=31) (actual time=621.968..44319.745 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=66992.02..1455689.74 rows=92 width=31) (actual time=621.952..25350.546 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=66991.73..1455388.15 rows=92 width=35) (actual time=621.938..19581.898 rows=3248192 loops=1)
                                       ->  Hash Join  (cost=66991.29..343214.29 rows=323237 width=18) (actual time=621.912..2612.815 rows=433248 loops=1)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..255222.76 rows=8000076 width=14) (actual time=0.330..954.895 rows=8000000 loops=1)
                                             ->  Hash  (cost=65981.18..65981.18 rows=80809 width=4) (actual time=621.241..621.242 rows=108312 loops=1)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 4832kB
                                                   ->  Seq Scan on part  (cost=0.00..65981.18 rows=80809 width=4) (actual time=0.282..598.331 rows=108312 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 1891688
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..3.43 rows=1 width=29) (actual time=0.007..0.037 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.28 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.42 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.008 rows=25 loops=1)
 Planning Time: 18.162 ms
 Execution Time: 54389.131 ms
(30 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2400498.56..2400498.61 rows=20 width=202) (actual time=23240.121..23240.126 rows=20 loops=1)
   ->  Sort  (cost=2400498.56..2401946.62 rows=579222 width=202) (actual time=23240.120..23240.123 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2253304.29..2385085.67 rows=579222 width=202) (actual time=20563.185..23119.762 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2253304.29..2370605.12 rows=579222 width=182) (actual time=20563.171..22319.450 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2253304.12..2344540.13 rows=579222 width=182) (actual time=20563.040..21954.443 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2253303.97..2330357.57 rows=579222 width=160) (actual time=20562.749..21536.880 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..64621.12 rows=1499946 width=148) (actual time=0.459..507.628 rows=1499997 loops=1)
                                 ->  Sort  (cost=2253298.80..2254746.86 rows=579222 width=16) (actual time=20562.259..20668.400 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=284269.04..2197856.38 rows=579222 width=16) (actual time=7473.573..19992.354 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874882.05 rows=14744868 width=16) (actual time=0.412..10710.807 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=276903.28..276903.28 rows=589261 width=8) (actual time=7471.204..7471.205 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=6796.36..276903.28 rows=589261 width=8) (actual time=111.217..7269.164 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6649.05 rows=589261 width=0) (actual time=65.943..65.943 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.012..0.012 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 28.976 ms
 Execution Time: 23245.811 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2400498.56..2400498.61 rows=20 width=202) (actual time=15066.417..15066.423 rows=20 loops=1)
   ->  Sort  (cost=2400498.56..2401946.62 rows=579222 width=202) (actual time=15066.415..15066.419 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=2253304.29..2385085.67 rows=579222 width=202) (actual time=12524.339..14937.254 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Incremental Sort  (cost=2253304.29..2370605.12 rows=579222 width=182) (actual time=12524.323..14146.286 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, nation.n_name
                     Presorted Key: customer.c_custkey
                     Full-sort Groups: 34068  Sort Method: quicksort  Average Memory: 33kB  Peak Memory: 33kB
                     ->  Nested Loop  (cost=2253304.12..2344540.13 rows=579222 width=182) (actual time=12524.207..13783.784 rows=1145402 loops=1)
                           ->  Merge Join  (cost=2253303.97..2330357.57 rows=579222 width=160) (actual time=12524.185..13366.849 rows=1145402 loops=1)
                                 Merge Cond: (customer.c_custkey = orders.o_custkey)
                                 ->  Index Scan using customer_pkey on customer  (cost=0.43..64621.12 rows=1499946 width=148) (actual time=0.018..382.243 rows=1499997 loops=1)
                                 ->  Sort  (cost=2253298.80..2254746.86 rows=579222 width=16) (actual time=12524.153..12628.946 rows=1145402 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external sort  Disk: 35288kB
                                       ->  Hash Join  (cost=284269.04..2197856.38 rows=579222 width=16) (actual time=1579.081..11968.938 rows=1145402 loops=1)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Seq Scan on lineitem  (cost=0.00..1874882.05 rows=14744868 width=16) (actual time=0.016..8642.737 rows=14808183 loops=1)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 45177869
                                             ->  Hash  (cost=276903.28..276903.28 rows=589261 width=8) (actual time=1577.730..1577.731 rows=573160 loops=1)
                                                   Buckets: 1048576  Batches: 1  Memory Usage: 30582kB
                                                   ->  Bitmap Heap Scan on orders  (cost=6796.36..276903.28 rows=589261 width=8) (actual time=109.677..1446.092 rows=573160 loops=1)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=233346
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6649.05 rows=589261 width=0) (actual time=64.978..64.978 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=1145402)
                                 Cache Key: customer.c_nationkey
                                 Cache Mode: logical
                                 Hits: 1145377  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                                 ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                       Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 1.744 ms
 Execution Time: 15071.462 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=606615.15..606615.16 rows=1 width=36) (actual time=3960.141..3960.147 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293134.56..293134.57 rows=1 width=32) (actual time=1604.585..1604.588 rows=1 loops=1)
           ->  Hash Join  (cost=2311.46..290734.53 rows=320003 width=10) (actual time=2.824..1509.290 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255222.76 rows=8000076 width=14) (actual time=0.017..745.528 rows=8000000 loops=1)
                 ->  Hash  (cost=2261.46..2261.46 rows=4000 width=4) (actual time=2.777..2.779 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=37.29..2261.46 rows=4000 width=4) (actual time=0.461..2.384 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=37.29..2220.15 rows=4000 width=8) (actual time=0.451..2.025 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..36.29 rows=4000 width=0) (actual time=0.250..0.250 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=313480.58..313747.25 rows=106668 width=36) (actual time=3960.140..3960.142 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=305022.17..312947.24 rows=106668 width=36) (actual time=3959.914..3959.916 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 11168kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2311.46..290734.53 rows=320003 width=14) (actual time=59.072..1937.081 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255222.76 rows=8000076 width=18) (actual time=0.619..1080.331 rows=8000000 loops=1)
                     ->  Hash  (cost=2261.46..2261.46 rows=4000 width=4) (actual time=58.389..58.391 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=37.29..2261.46 rows=4000 width=4) (actual time=1.555..56.888 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.197..0.201 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=37.29..2220.15 rows=4000 width=8) (actual time=1.349..55.873 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..36.29 rows=4000 width=0) (actual time=0.905..0.905 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 20.370 ms
 Execution Time: 3962.857 ms
(41 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=606615.15..606615.16 rows=1 width=36) (actual time=3520.137..3520.143 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=293134.56..293134.57 rows=1 width=32) (actual time=1585.329..1585.332 rows=1 loops=1)
           ->  Hash Join  (cost=2311.46..290734.53 rows=320003 width=10) (actual time=2.812..1489.704 rows=320800 loops=1)
                 Hash Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                 ->  Seq Scan on partsupp partsupp_1  (cost=0.00..255222.76 rows=8000076 width=14) (actual time=0.016..745.571 rows=8000000 loops=1)
                 ->  Hash  (cost=2261.46..2261.46 rows=4000 width=4) (actual time=2.767..2.769 rows=4010 loops=1)
                       Buckets: 4096  Batches: 1  Memory Usage: 173kB
                       ->  Nested Loop  (cost=37.29..2261.46 rows=4000 width=4) (actual time=0.459..2.373 rows=4010 loops=1)
                             ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                   Rows Removed by Filter: 24
                             ->  Bitmap Heap Scan on supplier supplier_1  (cost=37.29..2220.15 rows=4000 width=8) (actual time=0.448..2.012 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                                   Heap Blocks: exact=1869
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..36.29 rows=4000 width=0) (actual time=0.248..0.248 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = nation_1.n_nationkey)
   ->  Sort  (cost=313480.58..313747.25 rows=106668 width=36) (actual time=3520.136..3520.138 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=305022.17..312947.24 rows=106668 width=36) (actual time=3520.122..3520.124 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $1)
               Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 11168kB
               Rows Removed by Filter: 301833
               ->  Hash Join  (cost=2311.46..290734.53 rows=320003 width=14) (actual time=3.655..1531.652 rows=320800 loops=1)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..255222.76 rows=8000076 width=18) (actual time=0.030..757.487 rows=8000000 loops=1)
                     ->  Hash  (cost=2261.46..2261.46 rows=4000 width=4) (actual time=3.598..3.599 rows=4010 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 173kB
                           ->  Nested Loop  (cost=37.29..2261.46 rows=4000 width=4) (actual time=0.459..3.179 rows=4010 loops=1)
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                       Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       Rows Removed by Filter: 24
                                 ->  Bitmap Heap Scan on supplier  (cost=37.29..2220.15 rows=4000 width=8) (actual time=0.449..2.809 rows=4010 loops=1)
                                       Recheck Cond: (s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1869
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..36.29 rows=4000 width=0) (actual time=0.245..0.245 rows=4010 loops=1)
                                             Index Cond: (s_nationkey = nation.n_nationkey)
 Planning Time: 1.323 ms
 Execution Time: 3522.068 ms
(41 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031709.07..3032547.71 rows=1 width=27) (actual time=19144.580..19144.582 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031709.07..3037579.54 rows=7 width=27) (actual time=19144.578..19144.580 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031709.07..3032442.87 rows=293520 width=27) (actual time=19098.078..19104.204 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478342.29..3005052.91 rows=293520 width=27) (actual time=14847.423..19024.001 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411272.24 rows=15000424 width=20) (actual time=0.482..1702.218 rows=15000000 loops=1)
                     ->  Hash  (cost=2474673.29..2474673.29 rows=293520 width=15) (actual time=14846.150..14846.151 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474673.29 rows=293520 width=15) (actual time=1.090..14760.048 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 14.026 ms
 Execution Time: 19145.010 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3031709.07..3032547.71 rows=1 width=27) (actual time=16327.400..16327.402 rows=1 loops=1)
   ->  GroupAggregate  (cost=3031709.07..3037579.54 rows=7 width=27) (actual time=16327.398..16327.400 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=3031709.07..3032442.87 rows=293520 width=27) (actual time=16280.866..16286.962 rows=155572 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 31879kB
               ->  Hash Join  (cost=2478342.29..3005052.91 rows=293520 width=27) (actual time=12634.224..16209.081 rows=311258 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..411272.24 rows=15000424 width=20) (actual time=0.024..1257.509 rows=15000000 loops=1)
                     ->  Hash  (cost=2474673.29..2474673.29 rows=293520 width=15) (actual time=12633.547..12633.548 rows=311258 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 18687kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474673.29 rows=293520 width=15) (actual time=0.107..12554.874 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 59674794
 Planning Time: 0.800 ms
 Execution Time: 16327.483 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1361644.68..1361644.68 rows=1 width=16) (actual time=17607.154..17607.157 rows=1 loops=1)
   ->  Sort  (cost=1361644.68..1361645.18 rows=200 width=16) (actual time=17607.153..17607.155 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1361641.68..1361643.68 rows=200 width=16) (actual time=17607.126..17607.133 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1208135.96..1339142.49 rows=1499946 width=12) (actual time=15025.425..17439.862 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 8  Batches: 9  Memory Usage: 32849kB  Disk Usage: 325144kB
                     ->  Hash Right Join  (cost=53282.94..662902.73 rows=14848905 width=8) (actual time=348.761..11176.151 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448773.30 rows=14848905 width=8) (actual time=0.668..5071.564 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=28673.62..28673.62 rows=1499946 width=4) (actual time=346.655..346.656 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28673.62 rows=1499946 width=4) (actual time=0.019..163.524 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.046 ms
 Execution Time: 17658.729 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1361644.68..1361644.68 rows=1 width=16) (actual time=17039.376..17039.379 rows=1 loops=1)
   ->  Sort  (cost=1361644.68..1361645.18 rows=200 width=16) (actual time=17039.374..17039.377 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1361641.68..1361643.68 rows=200 width=16) (actual time=17039.348..17039.356 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1208135.96..1339142.49 rows=1499946 width=12) (actual time=14462.647..16870.374 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 8  Batches: 9  Memory Usage: 32849kB  Disk Usage: 325144kB
                     ->  Hash Right Join  (cost=53282.94..662902.73 rows=14848905 width=8) (actual time=311.187..10643.571 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448773.30 rows=14848905 width=8) (actual time=0.032..4587.948 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=28673.62..28673.62 rows=1499946 width=4) (actual time=309.857..309.858 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..28673.62 rows=1499946 width=4) (actual time=0.020..128.765 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.829 ms
 Execution Time: 17092.643 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1232885.18..1232885.20 rows=1 width=32) (actual time=69258.732..69258.735 rows=1 loops=1)
   ->  Aggregate  (cost=1232885.18..1232885.20 rows=1 width=32) (actual time=69258.730..69258.732 rows=1 loops=1)
         ->  Hash Join  (cost=99653.88..1220346.01 rows=716524 width=33) (actual time=874.830..68793.662 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1097999.84 rows=727944 width=16) (actual time=1.052..66762.775 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.14..60981.14 rows=2000014 width=25) (actual time=866.665..866.666 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60981.14 rows=2000014 width=25) (actual time=0.507..535.135 rows=2000000 loops=1)
 Planning Time: 16.961 ms
 Execution Time: 69259.326 ms
(11 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1232885.18..1232885.20 rows=1 width=32) (actual time=3522.009..3522.011 rows=1 loops=1)
   ->  Aggregate  (cost=1232885.18..1232885.20 rows=1 width=32) (actual time=3522.007..3522.009 rows=1 loops=1)
         ->  Hash Join  (cost=99653.88..1220346.01 rows=716524 width=33) (actual time=739.244..3210.995 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Index Scan using idx_lineitem_shipdate on lineitem  (cost=0.56..1097999.84 rows=727944 width=16) (actual time=0.039..1870.251 rows=772942 loops=1)
                     Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60981.14..60981.14 rows=2000014 width=25) (actual time=738.290..738.291 rows=2000000 loops=1)
                     Buckets: 524288  Batches: 8  Memory Usage: 18555kB
                     ->  Seq Scan on part  (cost=0.00..60981.14 rows=2000014 width=25) (actual time=0.023..412.994 rows=2000000 loops=1)
 Planning Time: 1.071 ms
 Execution Time: 3522.079 ms
(11 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3769946.29..3769954.94 rows=1 width=104) (actual time=27664.075..27664.078 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1885467.38..1885467.39 rows=1 width=32) (actual time=6644.598..6644.599 rows=1 loops=1)
           ->  HashAggregate  (cost=1882925.66..1884196.52 rows=101669 width=36) (actual time=6341.054..6638.578 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36768.09..1859995.88 rows=2292978 width=16) (actual time=364.136..4622.722 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.85 rows=2292978 width=0) (actual time=280.746..280.746 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1884478.90..1888872.02 rows=508 width=104) (actual time=27664.073..27664.074 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=72) (actual time=0.474..18.061 rows=69998 loops=1)
         ->  Sort  (cost=1884478.61..1884479.88 rows=508 width=36) (actual time=27641.813..27641.814 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1882925.66..1884455.77 rows=508 width=36) (actual time=27359.911..27641.805 rows=1 loops=1)
                     ->  HashAggregate  (cost=1882925.66..1884450.69 rows=508 width=36) (actual time=27359.910..27641.802 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=36768.09..1859995.88 rows=2292978 width=16) (actual time=424.768..18370.781 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.85 rows=2292978 width=0) (actual time=340.467..340.467 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 11.632 ms
 Execution Time: 27672.990 ms
(32 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3769946.29..3769954.94 rows=1 width=104) (actual time=13895.246..13895.249 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1885467.38..1885467.39 rows=1 width=32) (actual time=6640.163..6640.164 rows=1 loops=1)
           ->  HashAggregate  (cost=1882925.66..1884196.52 rows=101669 width=36) (actual time=6333.957..6634.150 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=36768.09..1859995.88 rows=2292978 width=16) (actual time=365.139..4612.064 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Rows Removed by Index Recheck: 13223651
                       Heap Blocks: exact=401153 lossy=267105
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.85 rows=2292978 width=0) (actual time=281.675..281.675 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1884478.90..1888872.02 rows=508 width=104) (actual time=13895.244..13895.245 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4135.79 rows=100000 width=72) (actual time=0.043..11.595 rows=69998 loops=1)
         ->  Sort  (cost=1884478.61..1884479.88 rows=508 width=36) (actual time=13879.588..13879.589 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1882925.66..1884455.77 rows=508 width=36) (actual time=13593.613..13879.582 rows=1 loops=1)
                     ->  HashAggregate  (cost=1882925.66..1884450.69 rows=508 width=36) (actual time=13593.612..13879.579 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 5  Memory Usage: 33841kB  Disk Usage: 28280kB
                           Rows Removed by Filter: 99999
                           ->  Bitmap Heap Scan on lineitem  (cost=36768.09..1859995.88 rows=2292978 width=16) (actual time=387.777..5193.543 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Rows Removed by Index Recheck: 13223651
                                 Heap Blocks: exact=401153 lossy=267105
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..36194.85 rows=2292978 width=0) (actual time=304.262..304.262 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.943 ms
 Execution Time: 13904.418 ms
(32 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=357784.36..357784.36 rows=1 width=44) (actual time=6709.534..6709.537 rows=1 loops=1)
   ->  Sort  (cost=357784.36..358166.97 rows=153046 width=44) (actual time=6709.533..6709.535 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=348145.86..357019.13 rows=153046 width=44) (actual time=6027.757..6704.447 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=348145.86..349614.42 rows=587425 width=40) (actual time=6027.701..6392.408 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98124.21..281531.16 rows=587425 width=40) (actual time=822.290..3147.333 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176378.29 rows=4000038 width=8) (actual time=37.418..1540.114 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.814..37.030 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90981.35..90981.35 rows=293712 width=40) (actual time=784.186..784.186 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90981.35 rows=293712 width=40) (actual time=0.763..711.748 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 17.811 ms
 Execution Time: 6717.717 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=357784.36..357784.36 rows=1 width=44) (actual time=6211.709..6211.712 rows=1 loops=1)
   ->  Sort  (cost=357784.36..358166.97 rows=153046 width=44) (actual time=6211.707..6211.710 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=348145.86..357019.13 rows=153046 width=44) (actual time=5532.663..6206.620 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=348145.86..349614.42 rows=587425 width=40) (actual time=5532.610..5897.046 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60592kB
                     ->  Hash Join  (cost=98124.21..281531.16 rows=587425 width=40) (actual time=529.555..2658.556 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=3471.46..176378.29 rows=4000038 width=8) (actual time=20.796..1343.260 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 4480
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.085..20.758 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 99944
                           ->  Hash  (cost=90981.35..90981.35 rows=293712 width=40) (actual time=508.075..508.076 rows=296733 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25593kB
                                 ->  Seq Scan on part  (cost=0.00..90981.35 rows=293712 width=40) (actual time=0.016..444.509 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 1703267
 Planning Time: 0.804 ms
 Execution Time: 6219.977 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4909179.08..4909179.09 rows=1 width=32) (actual time=54803.258..54803.261 rows=1 loops=1)
   ->  Aggregate  (cost=4909179.08..4909179.09 rows=1 width=32) (actual time=54803.257..54803.259 rows=1 loops=1)
         ->  Nested Loop  (cost=4174018.83..4909130.32 rows=19503 width=8) (actual time=31561.435..54801.177 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=4174018.39..4815882.96 rows=1982 width=40) (actual time=31560.649..53485.464 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=4103012.79..4719224.76 rows=2031889 width=36) (actual time=31030.157..52801.732 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 32  Batches: 33  Memory Usage: 34065kB  Disk Usage: 2103376kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724934.24 rows=59979124 width=9) (actual time=0.544..7271.577 rows=59986052 loops=1)
                     ->  Hash  (cost=70981.21..70981.21 rows=1951 width=4) (actual time=530.191..530.192 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70981.21 rows=1951 width=4) (actual time=1.334..529.152 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..46.92 rows=10 width=17) (actual time=0.511..0.657 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 13.309 ms
 Execution Time: 55051.280 ms
(21 rows)

SET
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4909179.08..4909179.09 rows=1 width=32) (actual time=50966.083..50966.085 rows=1 loops=1)
   ->  Aggregate  (cost=4909179.08..4909179.09 rows=1 width=32) (actual time=50966.081..50966.083 rows=1 loops=1)
         ->  Nested Loop  (cost=4174018.83..4909130.32 rows=19503 width=8) (actual time=28888.864..50965.341 rows=5319 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=4174018.39..4815882.96 rows=1982 width=40) (actual time=28888.838..50921.161 rows=1996 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=4103012.79..4719224.76 rows=2031889 width=36) (actual time=28618.835..50504.687 rows=2000000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Planned Partitions: 32  Batches: 33  Memory Usage: 34065kB  Disk Usage: 2103376kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..1724934.24 rows=59979124 width=9) (actual time=0.035..5459.023 rows=59986052 loops=1)
                     ->  Hash  (cost=70981.21..70981.21 rows=1951 width=4) (actual time=269.699..269.699 rows=1996 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 87kB
                           ->  Seq Scan on part  (cost=0.00..70981.21 rows=1951 width=4) (actual time=0.113..269.214 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 1998004
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..46.92 rows=10 width=17) (actual time=0.010..0.021 rows=3 loops=1996)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 0.899 ms
 Execution Time: 51197.791 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8774188.57..8774188.82 rows=100 width=71) (actual time=42192.756..42192.769 rows=99 loops=1)
   ->  Sort  (cost=8774188.57..8824152.37 rows=19985519 width=71) (actual time=42192.754..42192.761 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=7409229.47..8010356.40 rows=19985519 width=71) (actual time=42192.222..42192.669 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 256  Batches: 1  Memory Usage: 3153kB
               ->  Hash Join  (cost=78983.30..6332665.77 rows=19985519 width=44) (actual time=4385.997..42191.844 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=498.52..5919689.85 rows=19985519 width=25) (actual time=1005.262..41414.159 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3390117.97 rows=4998260 width=24) (actual time=768.492..30033.490 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547971.80 rows=15000424 width=20) (actual time=0.511..2966.683 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2692184.26 rows=4998260 width=4) (actual time=660.381..26174.130 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2167366.93 rows=59979124 width=9) (actual time=0.570..12397.413 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2167366.93 rows=59979124 width=9) (actual time=0.014..7872.505 rows=59916431 loops=1)
                     ->  Hash  (cost=50946.46..50946.46 rows=1499946 width=23) (actual time=672.577..672.577 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=23) (actual time=0.815..416.060 rows=1500000 loops=1)
 Planning Time: 23.482 ms
 Execution Time: 42194.138 ms
(25 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=8774188.57..8774188.82 rows=100 width=71) (actual time=38946.913..38946.926 rows=99 loops=1)
   ->  Sort  (cost=8774188.57..8824152.37 rows=19985519 width=71) (actual time=38946.912..38946.919 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=7409229.47..8010356.40 rows=19985519 width=71) (actual time=38946.405..38946.825 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 256  Batches: 1  Memory Usage: 3153kB
               ->  Hash Join  (cost=78983.30..6332665.77 rows=19985519 width=44) (actual time=3800.409..38946.032 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=498.52..5919689.85 rows=19985519 width=25) (actual time=874.310..38299.349 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..3390117.97 rows=4998260 width=24) (actual time=634.512..26900.617 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..547971.80 rows=15000424 width=20) (actual time=0.022..2383.408 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..2692184.26 rows=4998260 width=4) (actual time=555.072..23648.212 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..2167366.93 rows=59979124 width=9) (actual time=0.016..10089.240 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..2167366.93 rows=59979124 width=9) (actual time=0.013..7914.388 rows=59916431 loops=1)
                     ->  Hash  (cost=50946.46..50946.46 rows=1499946 width=23) (actual time=540.704..540.705 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50946.46 rows=1499946 width=23) (actual time=0.028..291.035 rows=1500000 loops=1)
 Planning Time: 1.621 ms
 Execution Time: 38947.662 ms
(25 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=362033.45..362033.46 rows=1 width=32) (actual time=23071.589..23071.591 rows=1 loops=1)
   ->  Aggregate  (cost=362033.45..362033.46 rows=1 width=32) (actual time=23071.587..23071.588 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..362025.00 rows=1126 width=12) (actual time=60.070..23068.205 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125981.60 rows=4833 width=30) (actual time=1.507..840.413 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..48.83 rows=1 width=21) (actual time=4.192..4.648 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 15.593 ms
 Execution Time: 23072.239 ms
(12 rows)

SET
SET
SET


 Limit  (cost=362033.45..362033.46 rows=1 width=32) (actual time=616.004..616.006 rows=1 loops=1)
   ->  Aggregate  (cost=362033.45..362033.46 rows=1 width=32) (actual time=616.003..616.004 rows=1 loops=1)
         ->  Nested Loop  (cost=0.44..362025.00 rows=1126 width=12) (actual time=1.515..615.275 rows=1063 loops=1)
               ->  Seq Scan on part  (cost=0.00..125981.60 rows=4833 width=30) (actual time=0.215..461.412 rows=4781 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 1995219
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..48.83 rows=1 width=21) (actual time=0.029..0.032 rows=0 loops=4781)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 1.028 ms
 Execution Time: 616.052 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2763750.05..2763750.05 rows=1 width=52) (actual time=62383.030..62383.035 rows=1 loops=1)
   ->  Sort  (cost=2763750.05..2763750.05 rows=1 width=52) (actual time=62383.029..62383.032 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2514332.60..2763750.04 rows=1 width=52) (actual time=40133.644..62381.240 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183452432
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.569..23.735 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.191..0.193 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.370..15.938 rows=100000 loops=1)
               ->  Materialize  (cost=2514332.60..2759097.73 rows=3 width=8) (actual time=9.443..12.791 rows=44800 loops=4095)
                     ->  Hash Join  (cost=2514332.60..2759097.72 rows=3 width=8) (actual time=38669.174..45925.313 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2371368.95..2531753.15 rows=4821759 width=40) (actual time=33736.996..40148.422 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 64  Batches: 325  Memory Usage: 34321kB  Disk Usage: 388616kB
                                 ->  Bitmap Heap Scan on lineitem  (cost=144584.05..1991311.44 rows=9017120 width=13) (actual time=1259.392..28827.293 rows=9123688 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Index Recheck: 23164080
                                       Heap Blocks: exact=518099 lossy=530696
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..142329.77 rows=9017120 width=0) (actual time=1139.578..1139.578 rows=9123688 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=141751.53..141751.53 rows=80808 width=16) (actual time=4931.830..4931.831 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.43..141751.53 rows=80808 width=16) (actual time=1.303..4886.216 rows=86872 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65981.18 rows=20202 width=4) (actual time=0.565..715.009 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.57 rows=18 width=12) (actual time=0.176..0.190 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 20.820 ms
 Execution Time: 62427.368 ms
(38 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2763750.05..2763750.05 rows=1 width=52) (actual time=37714.895..37714.899 rows=1 loops=1)
   ->  Sort  (cost=2763750.05..2763750.05 rows=1 width=52) (actual time=37714.893..37714.897 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2514332.60..2763750.04 rows=1 width=52) (actual time=15408.258..37713.083 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 183452432
               ->  Nested Loop  (cost=0.00..4472.31 rows=4000 width=56) (actual time=0.033..20.145 rows=4095 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 95905
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.027 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=60) (actual time=0.005..12.507 rows=100000 loops=1)
               ->  Materialize  (cost=2514332.60..2759097.73 rows=3 width=8) (actual time=3.403..6.755 rows=44800 loops=4095)
                     ->  Hash Join  (cost=2514332.60..2759097.72 rows=3 width=8) (actual time=13934.983..21217.879 rows=59002 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 123
                           ->  HashAggregate  (cost=2371368.95..2531753.15 rows=4821759 width=40) (actual time=13376.247..19816.220 rows=5448842 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 Planned Partitions: 64  Batches: 325  Memory Usage: 34321kB  Disk Usage: 388616kB
                                 ->  Bitmap Heap Scan on lineitem  (cost=144584.05..1991311.44 rows=9017120 width=13) (actual time=1116.381..9302.882 rows=9123688 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Rows Removed by Index Recheck: 23164080
                                       Heap Blocks: exact=518099 lossy=530696
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..142329.77 rows=9017120 width=0) (actual time=996.738..996.738 rows=9123688 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=141751.53..141751.53 rows=80808 width=16) (actual time=558.402..558.403 rows=86872 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                                 ->  Nested Loop  (cost=0.43..141751.53 rows=80808 width=16) (actual time=0.064..536.792 rows=86872 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65981.18 rows=20202 width=4) (actual time=0.044..328.765 rows=21718 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 1978282
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..3.57 rows=18 width=12) (actual time=0.008..0.009 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning Time: 2.040 ms
 Execution Time: 37763.732 ms
(38 rows)

query 21 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3754550.76..3754550.77 rows=1 width=34) (actual time=25671.227..25671.243 rows=100 loops=1)
   ->  Sort  (cost=3754550.76..3754550.77 rows=1 width=34) (actual time=25671.226..25671.235 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3754550.73..3754550.75 rows=1 width=34) (actual time=25663.872..25670.045 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3754550.73..3754550.74 rows=1 width=26) (actual time=25663.860..25665.611 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976012.89..3754550.72 rows=1 width=26) (actual time=15327.007..25493.497 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976012.32..3754547.08 rows=1 width=38) (actual time=15326.255..25347.499 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976011.76..2519586.39 rows=384618 width=38) (actual time=15323.971..20210.430 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448773.30 rows=7334707 width=4) (actual time=0.557..2477.007 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960033.34..1960033.34 rows=786593 width=34) (actual time=15322.609..15322.612 rows=1514267 loops=1)
                                             Buckets: 524288 (originally 524288)  Batches: 4 (originally 2)  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2311.46..1960033.34 rows=786593 width=34) (actual time=63.489..14879.589 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1874882.05 rows=19993041 width=8) (actual time=0.576..11406.023 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2261.46..2261.46 rows=4000 width=30) (actual time=62.843..62.844 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=37.29..2261.46 rows=4000 width=30) (actual time=1.779..61.216 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.267..0.271 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=37.29..2220.15 rows=4000 width=34) (actual time=1.501..60.039 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..36.29 rows=4000 width=0) (actual time=0.902..0.902 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.481 ms
 Execution Time: 25672.025 ms
(44 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3754550.76..3754550.77 rows=1 width=34) (actual time=21520.827..21520.842 rows=100 loops=1)
   ->  Sort  (cost=3754550.76..3754550.77 rows=1 width=34) (actual time=21520.825..21520.834 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=3754550.73..3754550.75 rows=1 width=34) (actual time=21513.345..21519.632 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=3754550.73..3754550.74 rows=1 width=26) (actual time=21513.334..21515.112 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=1976012.89..3754550.72 rows=1 width=26) (actual time=13034.537..21343.704 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 42025
                           ->  Nested Loop Anti Join  (cost=1976012.32..3754547.08 rows=1 width=38) (actual time=13034.057..21204.737 rows=65960 loops=1)
                                 ->  Hash Join  (cost=1976011.76..2519586.39 rows=384618 width=38) (actual time=13033.578..17399.734 rows=730985 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..448773.30 rows=7334707 width=4) (actual time=0.024..2017.925 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 7690816
                                       ->  Hash  (cost=1960033.34..1960033.34 rows=786593 width=34) (actual time=13032.716..13032.718 rows=1514267 loops=1)
                                             Buckets: 524288 (originally 524288)  Batches: 4 (originally 2)  Memory Usage: 29225kB
                                             ->  Hash Join  (cost=2311.46..1960033.34 rows=786593 width=34) (actual time=15.103..12646.011 rows=1514267 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..1874882.05 rows=19993041 width=8) (actual time=0.028..9603.681 rows=37929348 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 22056704
                                                   ->  Hash  (cost=2261.46..2261.46 rows=4000 width=30) (actual time=15.041..15.042 rows=3991 loops=1)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 282kB
                                                         ->  Nested Loop  (cost=37.29..2261.46 rows=4000 width=30) (actual time=0.523..14.102 rows=3991 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=37.29..2220.15 rows=4000 width=34) (actual time=0.506..13.541 rows=3991 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=1865
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..36.29 rows=4000 width=0) (actual time=0.294..0.294 rows=3991 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..3.64 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=730985)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..3.62 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.524 ms
 Execution Time: 21521.217 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161613.80..161613.83 rows=1 width=72) (actual time=1936.620..1936.622 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.02..75440.03 rows=1 width=32) (actual time=960.907..960.908 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75320.58 rows=47773 width=6) (actual time=0.016..924.527 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86173.77..86389.46 rows=7843 width=72) (actual time=1936.618..1936.619 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86173.77..86193.38 rows=7843 width=38) (actual time=1934.863..1935.194 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85666.44 rows=7843 width=38) (actual time=961.411..1915.018 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75320.58 rows=17499 width=26) (actual time=961.392..1482.940 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.17 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 14.744 ms
 Execution Time: 1937.496 ms
(20 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=161613.80..161613.83 rows=1 width=72) (actual time=1534.000..1534.003 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75440.02..75440.03 rows=1 width=32) (actual time=708.036..708.037 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..75320.58 rows=47773 width=6) (actual time=0.008..675.545 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 1117574
   ->  GroupAggregate  (cost=86173.77..86389.46 rows=7843 width=72) (actual time=1533.999..1534.000 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=86173.77..86193.38 rows=7843 width=38) (actual time=1532.247..1532.577 rows=9006 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 4513kB
               ->  Nested Loop Anti Join  (cost=0.43..85666.44 rows=7843 width=38) (actual time=708.083..1514.359 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75320.58 rows=17499 width=26) (actual time=708.065..1208.953 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 1308871
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.17 rows=18 width=4) (actual time=0.001..0.001 rows=1 loops=191129)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.971 ms
 Execution Time: 1534.106 ms
(20 rows)

