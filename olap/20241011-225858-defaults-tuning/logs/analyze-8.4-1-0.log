query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341760.75..341760.75 rows=1 width=33) (actual time=16262.190..16262.190 rows=1 loops=1)
   ->  Sort  (cost=341760.75..341760.77 rows=6 width=33) (actual time=16262.190..16262.190 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341760.45..341760.72 rows=6 width=33) (actual time=16262.158..16262.163 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193581.70 rows=5927150 width=33) (actual time=0.424..1321.110 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 16262.275 ms
(8 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=341760.75..341760.75 rows=1 width=33) (actual time=16437.003..16437.004 rows=1 loops=1)
   ->  Sort  (cost=341760.75..341760.77 rows=6 width=33) (actual time=16437.002..16437.002 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=341760.45..341760.72 rows=6 width=33) (actual time=16436.976..16436.980 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..193581.70 rows=5927150 width=33) (actual time=0.023..1111.982 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 16437.055 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68388.18..68388.19 rows=1 width=194) (actual time=656.735..656.746 rows=100 loops=1)
   ->  Sort  (cost=68388.18..68388.19 rows=1 width=194) (actual time=656.733..656.736 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45673.54..68388.17 rows=1 width=194) (actual time=458.110..656.093 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=863 width=30) (actual time=1.250..82.418 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45673.54..46073.50 rows=159984 width=176) (actual time=454.824..483.442 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 31120kB
                     ->  Hash Join  (cost=410.03..31844.87 rows=159984 width=176) (actual time=7.686..318.559 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.682..184.853 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=6.985..6.985 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.634..6.370 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.212..4.658 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.418..0.418 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.407..0.415 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.201..0.206 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.198..0.198 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.195..0.197 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8) (actual time=0.114..0.114 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8) (actual time=0.103..0.112 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12) (actual time=0.097..0.110 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12) (actual time=0.095..0.104 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12) (actual time=0.092..0.092 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 661.070 ms
(41 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68388.18..68388.19 rows=1 width=194) (actual time=455.990..456.002 rows=100 loops=1)
   ->  Sort  (cost=68388.18..68388.19 rows=1 width=194) (actual time=455.989..455.995 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method:  top-N heapsort  Memory: 53kB
         ->  Merge Join  (cost=45673.54..68388.17 rows=1 width=194) (actual time=344.889..455.518 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..8984.26 rows=863 width=30) (actual time=0.034..56.805 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Sort  (cost=45673.54..46073.50 rows=159984 width=176) (actual time=344.759..371.989 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method:  external sort  Disk: 31120kB
                     ->  Hash Join  (cost=410.03..31844.87 rows=159984 width=176) (actual time=3.309..214.571 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25835.00 rows=800000 width=16) (actual time=0.002..40.761 rows=800000 loops=1)
                           ->  Hash  (cost=385.03..385.03 rows=2000 width=168) (actual time=3.297..3.297 rows=2036 loops=1)
                                 ->  Hash Join  (cost=2.53..385.03 rows=2000 width=168) (actual time=0.026..2.668 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=146) (actual time=0.003..0.697 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.020..0.020 rows=5 loops=1)
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=8) (actual time=0.010..0.016 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=12) (actual time=0.007..0.014 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=12) (actual time=0.006..0.011 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=12) (actual time=0.004..0.005 rows=4 loops=650)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (public.nation.n_nationkey = public.supplier.s_nationkey)
 Total runtime: 460.111 ms
(41 rows)

query 3 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316107.88..316107.91 rows=10 width=28) (actual time=2700.061..2700.063 rows=10 loops=1)
   ->  Sort  (cost=316107.88..316899.41 rows=316611 width=28) (actual time=2700.059..2700.059 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=299767.70..309266.03 rows=316611 width=28) (actual time=2680.796..2698.088 rows=11612 loops=1)
               ->  Sort  (cost=299767.70..300559.23 rows=316611 width=28) (actual time=2680.782..2681.949 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=61859.43..270841.56 rows=316611 width=28) (actual time=832.474..2672.420 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193581.70 rows=3262486 width=20) (actual time=0.488..1140.415 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60039.82..60039.82 rows=145569 width=12) (actual time=831.181..831.181 rows=146063 loops=1)
                                 ->  Hash Join  (cost=14502.22..60039.82 rows=145569 width=12) (actual time=129.042..804.141 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8618.40..44529.78 rows=726270 width=16) (actual time=74.593..519.907 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8436.84 rows=726270 width=0) (actual time=70.761..70.761 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30065 width=4) (actual time=54.376..54.376 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30065 width=4) (actual time=0.362..50.554 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2700.117 ms
(23 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=316107.88..316107.91 rows=10 width=28) (actual time=2006.591..2006.592 rows=10 loops=1)
   ->  Sort  (cost=316107.88..316899.41 rows=316611 width=28) (actual time=2006.590..2006.591 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=299767.70..309266.03 rows=316611 width=28) (actual time=1987.169..2004.572 rows=11612 loops=1)
               ->  Sort  (cost=299767.70..300559.23 rows=316611 width=28) (actual time=1987.156..1988.287 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method:  quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=61859.43..270841.56 rows=316611 width=28) (actual time=404.520..1979.480 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..193581.70 rows=3262486 width=20) (actual time=0.031..924.837 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60039.82..60039.82 rows=145569 width=12) (actual time=404.257..404.257 rows=146063 loops=1)
                                 ->  Hash Join  (cost=14502.22..60039.82 rows=145569 width=12) (actual time=90.775..385.687 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8618.40..44529.78 rows=726270 width=16) (actual time=56.608..196.646 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8436.84 rows=726270 width=0) (actual time=53.216..53.216 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5508.00..5508.00 rows=30065 width=4) (actual time=34.148..34.148 rows=30142 loops=1)
                                             ->  Seq Scan on customer  (cost=0.00..5508.00 rows=30065 width=4) (actual time=0.008..30.661 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2006.645 ms
(23 rows)

query 4 run 1
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74703.78..74703.79 rows=1 width=16) (actual time=2144.360..2144.360 rows=1 loops=1)
   ->  Sort  (cost=74703.78..74703.79 rows=1 width=16) (actual time=2144.360..2144.360 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=74703.76..74703.77 rows=1 width=16) (actual time=2144.336..2144.338 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=804.93..74631.62 rows=14429 width=16) (actual time=15.182..2120.998 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=804.93..28477.38 rows=55963 width=20) (actual time=13.721..542.504 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..790.94 rows=55963 width=0) (actual time=10.234..10.234 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.53 rows=5 width=4) (actual time=0.028..0.028 rows=1 loops=55973)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
 Total runtime: 2144.416 ms
(14 rows)

SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74703.78..74703.79 rows=1 width=16) (actual time=343.584..343.585 rows=1 loops=1)
   ->  Sort  (cost=74703.78..74703.79 rows=1 width=16) (actual time=343.582..343.582 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=74703.76..74703.77 rows=1 width=16) (actual time=343.561..343.562 rows=5 loops=1)
               ->  Nested Loop Semi Join  (cost=804.93..74631.62 rows=14429 width=16) (actual time=9.359..330.159 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=804.93..28477.38 rows=55963 width=20) (actual time=9.324..83.518 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..790.94 rows=55963 width=0) (actual time=6.238..6.238 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.53 rows=5 width=4) (actual time=0.004..0.004 rows=1 loops=55973)
                           Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Filter: (lineitem.l_commitdate < lineitem.l_receiptdate)
 Total runtime: 343.633 ms
(14 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217863.50..217863.50 rows=1 width=42) (actual time=2605.473..2605.474 rows=1 loops=1)
   ->  Sort  (cost=217863.50..217863.56 rows=25 width=42) (actual time=2605.471..2605.471 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=217862.94..217863.37 rows=25 width=42) (actual time=2605.461..2605.461 rows=5 loops=1)
               ->  Hash Join  (cost=10165.70..217826.00 rows=7388 width=42) (actual time=103.407..2592.048 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9690.70..211735.28 rows=184728 width=54) (actual time=97.457..2478.294 rows=182435 loops=1)
                           ->  Hash Join  (cost=9690.70..41602.71 rows=46173 width=38) (actual time=96.088..807.979 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3317.67..33613.63 rows=230864 width=8) (actual time=34.176..598.579 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3259.95 rows=230864 width=0) (actual time=29.358..29.358 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=61.878..61.878 rows=29952 loops=1)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=1.076..56.844 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.398..38.962 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.669..0.669 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.664..0.667 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.337..0.338 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.320..0.320 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.316..0.317 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24) (actual time=0.033..0.036 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.544..5.544 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.239..4.308 rows=10000 loops=1)
 Total runtime: 2605.553 ms
(30 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217863.50..217863.50 rows=1 width=42) (actual time=541.613..541.614 rows=1 loops=1)
   ->  Sort  (cost=217863.50..217863.56 rows=25 width=42) (actual time=541.611..541.611 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=217862.94..217863.37 rows=25 width=42) (actual time=541.601..541.601 rows=5 loops=1)
               ->  Hash Join  (cost=10165.70..217826.00 rows=7388 width=42) (actual time=67.838..534.552 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9690.70..211735.28 rows=184728 width=54) (actual time=64.487..492.238 rows=182435 loops=1)
                           ->  Hash Join  (cost=9690.70..41602.71 rows=46173 width=38) (actual time=64.469..251.314 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3317.67..33613.63 rows=230864 width=8) (actual time=24.076..137.891 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3259.95 rows=230864 width=0) (actual time=20.689..20.689 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5998.03..5998.03 rows=30000 width=38) (actual time=40.375..40.375 rows=29952 loops=1)
                                       ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=38) (actual time=0.029..35.980 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.003..7.929 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.023..0.023 rows=5 loops=1)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.015..0.019 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.002 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.48 rows=16 width=24) (actual time=0.004..0.005 rows=4 loops=45297)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.330..3.330 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.009..1.930 rows=10000 loops=1)
 Total runtime: 541.686 ms
(30 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111295.31..111295.32 rows=1 width=16) (actual time=1301.573..1301.573 rows=1 loops=1)
   ->  Aggregate  (cost=111295.31..111295.32 rows=1 width=16) (actual time=1301.573..1301.573 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22185.72..110999.80 rows=118204 width=16) (actual time=140.326..1223.501 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22156.17 rows=118204 width=0) (actual time=128.856..128.856 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1301.604 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111295.31..111295.32 rows=1 width=16) (actual time=338.943..338.943 rows=1 loops=1)
   ->  Aggregate  (cost=111295.31..111295.32 rows=1 width=16) (actual time=338.942..338.942 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22185.72..110999.80 rows=118204 width=16) (actual time=111.746..290.745 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22156.17 rows=118204 width=0) (actual time=100.939..100.939 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 338.971 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=248281.38..248281.38 rows=1 width=72) (actual time=3566.915..3566.916 rows=1 loops=1)
   ->  Sort  (cost=248281.38..248296.11 rows=5892 width=72) (actual time=3566.913..3566.913 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=248119.35..248251.92 rows=5892 width=72) (actual time=3566.876..3566.887 rows=4 loops=1)
               ->  Hash Join  (cost=88946.02..248060.43 rows=5892 width=72) (actual time=953.641..3556.022 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=88471.02..243076.29 rows=147358 width=80) (actual time=945.713..3459.701 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32328.55..178547.30 rows=1843450 width=28) (actual time=333.227..2389.900 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31867.69 rows=1843450 width=0) (actual time=310.586..310.586 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=612.290..612.290 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=54.795..586.209 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.315..281.265 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=54.468..54.468 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.788..52.159 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.388..37.112 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.391..0.391 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.348..0.390 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.228..0.229 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.002 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.395..5.395 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.218..4.149 rows=10000 loops=1)
 Total runtime: 3567.206 ms
(30 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=248281.38..248281.38 rows=1 width=72) (actual time=1613.511..1613.512 rows=1 loops=1)
   ->  Sort  (cost=248281.38..248296.11 rows=5892 width=72) (actual time=1613.510..1613.510 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=248119.35..248251.92 rows=5892 width=72) (actual time=1613.474..1613.482 rows=4 loops=1)
               ->  Hash Join  (cost=88946.02..248060.43 rows=5892 width=72) (actual time=719.104..1606.905 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=88471.02..243076.29 rows=147358 width=80) (actual time=715.601..1553.060 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32328.55..178547.30 rows=1843450 width=28) (actual time=251.048..731.783 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31867.69 rows=1843450 width=0) (actual time=229.677..229.677 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=54643.68..54643.68 rows=119904 width=60) (actual time=464.511..464.511 rows=118477 loops=1)
                                 ->  Hash Join  (cost=5986.68..54643.68 rows=119904 width=60) (actual time=34.610..443.171 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41833.00 rows=1500000 width=8) (actual time=0.001..69.582 rows=1500000 loops=1)
                                       ->  Hash  (cost=5836.80..5836.80 rows=11990 width=60) (actual time=34.601..34.601 rows=11896 loops=1)
                                             ->  Hash Join  (cost=21.30..5836.80 rows=11990 width=60) (actual time=0.135..32.706 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.005..7.089 rows=150000 loops=1)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60) (actual time=0.127..0.127 rows=2 loops=1)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60) (actual time=0.085..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.002 rows=25 loops=1)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
                     ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.382..3.382 rows=10000 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.009..1.979 rows=10000 loops=1)
 Total runtime: 1613.597 ms
(30 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117065.52..117065.52 rows=1 width=46) (actual time=6426.859..6426.859 rows=1 loops=1)
   ->  Sort  (cost=117065.52..117067.34 rows=726 width=46) (actual time=6426.859..6426.859 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117036.48..117061.89 rows=726 width=46) (actual time=6426.849..6426.850 rows=2 loops=1)
               ->  Hash Join  (cost=51227.68..117018.40 rows=2411 width=46) (actual time=746.254..6417.645 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51226.12..116971.63 rows=2411 width=24) (actual time=745.990..6413.074 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50776.12..116461.35 rows=2411 width=24) (actual time=740.593..6404.629 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..65511.13 rows=39998 width=24) (actual time=2.847..5627.462 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4) (actual time=1.114..73.124 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..43.78 rows=30 width=28) (actual time=0.310..4.190 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49646.03..49646.03 rows=90407 width=8) (actual time=734.755..734.755 rows=91179 loops=1)
                                       ->  Hash Join  (cost=12868.22..49646.03 rows=90407 width=8) (actual time=112.508..716.966 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6495.19..40108.75 rows=452037 width=12) (actual time=53.956..491.260 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6382.18 rows=452037 width=0) (actual time=50.273..50.273 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=58.477..58.477 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.647..54.835 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.396..38.341 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.242..0.242 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.232..0.240 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.222..0.222 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.218..0.219 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=5.388..5.388 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.282..4.095 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.246..0.246 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.231..0.237 rows=25 loops=1)
 Total runtime: 6426.937 ms
(39 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117065.52..117065.52 rows=1 width=46) (actual time=462.710..462.710 rows=1 loops=1)
   ->  Sort  (cost=117065.52..117067.34 rows=726 width=46) (actual time=462.710..462.710 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117036.48..117061.89 rows=726 width=46) (actual time=462.700..462.701 rows=2 loops=1)
               ->  Hash Join  (cost=51227.68..117018.40 rows=2411 width=46) (actual time=312.710..459.927 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51226.12..116971.63 rows=2411 width=24) (actual time=312.680..458.679 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50776.12..116461.35 rows=2411 width=24) (actual time=309.506..453.590 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..65511.13 rows=39998 width=24) (actual time=0.080..126.304 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6657.00 rows=1333 width=4) (actual time=0.057..33.141 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..43.78 rows=30 width=28) (actual time=0.006..0.066 rows=30 loops=1320)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49646.03..49646.03 rows=90407 width=8) (actual time=309.360..309.360 rows=91179 loops=1)
                                       ->  Hash Join  (cost=12868.22..49646.03 rows=90407 width=8) (actual time=78.890..297.448 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6495.19..40108.75 rows=452037 width=12) (actual time=40.177..160.586 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6382.18 rows=452037 width=0) (actual time=36.839..36.839 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5998.03..5998.03 rows=30000 width=4) (actual time=38.699..38.699 rows=29952 loops=1)
                                                   ->  Hash Join  (cost=2.53..5998.03 rows=30000 width=4) (actual time=0.022..35.489 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=8) (actual time=0.003..8.194 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.015..0.015 rows=5 loops=1)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.011..0.015 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=325.00..325.00 rows=10000 width=8) (actual time=3.171..3.171 rows=10000 loops=1)
                                 ->  Seq Scan on supplier  (cost=0.00..325.00 rows=10000 width=8) (actual time=0.004..1.891 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=1)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=1)
 Total runtime: 462.787 ms
(39 rows)

query 9 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171874.83..171874.83 rows=1 width=61) (actual time=17349.166..17349.167 rows=1 loops=1)
   ->  Sort  (cost=171874.83..171875.13 rows=122 width=61) (actual time=17349.164..17349.164 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=171870.86..171874.22 rows=122 width=61) (actual time=17349.078..17349.102 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..171869.95 rows=122 width=61) (actual time=4.545..16752.971 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..171743.64 rows=122 width=39) (actual time=3.598..16251.600 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..171379.43 rows=122 width=43) (actual time=2.997..15740.244 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..171006.67 rows=122 width=43) (actual time=1.879..11794.242 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..38253.60 rows=40404 width=20) (actual time=0.893..328.761 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=10101 width=4) (actual time=0.279..86.319 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.08 rows=4 width=16) (actual time=0.019..0.021 rows=4 loops=10880)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.27 rows=1 width=35) (actual time=0.040..0.261 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8) (actual time=0.011..0.012 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=325928)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 17349.246 ms
(23 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171874.83..171874.83 rows=1 width=61) (actual time=2785.244..2785.244 rows=1 loops=1)
   ->  Sort  (cost=171874.83..171875.13 rows=122 width=61) (actual time=2785.244..2785.244 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=171870.86..171874.22 rows=122 width=61) (actual time=2785.158..2785.178 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..171869.95 rows=122 width=61) (actual time=0.107..2389.885 rows=325928 loops=1)
                     ->  Nested Loop  (cost=0.00..171743.64 rows=122 width=39) (actual time=0.094..2049.997 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..171379.43 rows=122 width=43) (actual time=0.078..1687.947 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..171006.67 rows=122 width=43) (actual time=0.057..731.801 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.00..38253.60 rows=40404 width=20) (actual time=0.034..112.168 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6657.00 rows=10101 width=4) (actual time=0.016..54.781 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.08 rows=4 width=16) (actual time=0.004..0.005 rows=4 loops=10880)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.27 rows=1 width=35) (actual time=0.003..0.013 rows=7 loops=43520)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.04 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=325928)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..2.97 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=30) (actual time=0.000..0.001 rows=1 loops=325928)
                           Index Cond: (nation.n_nationkey = supplier.s_nationkey)
 Total runtime: 2785.309 ms
(23 rows)

query 10 run 1
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252804.26..252804.31 rows=20 width=188) (actual time=2432.712..2432.715 rows=20 loops=1)
   ->  Sort  (cost=252804.26..252949.42 rows=58062 width=188) (actual time=2432.710..2432.712 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=250243.17..251259.25 rows=58062 width=188) (actual time=2409.499..2422.769 rows=38076 loops=1)
               ->  Hash Join  (cost=7856.67..249081.93 rows=58062 width=188) (actual time=101.007..2231.329 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7855.11..248282.01 rows=58062 width=166) (actual time=100.781..2202.873 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=847.11..239895.04 rows=58062 width=20) (actual time=15.170..2032.896 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=847.11..28563.71 rows=58907 width=8) (actual time=12.872..260.035 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..832.38 rows=58907 width=0) (actual time=9.614..9.614 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20) (actual time=0.029..0.030 rows=2 loops=57111)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150) (actual time=85.588..85.588 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150) (actual time=0.402..51.374 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.221..0.221 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.206..0.212 rows=25 loops=1)
 Total runtime: 2433.047 ms
(22 rows)

SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=252804.26..252804.31 rows=20 width=188) (actual time=746.639..746.642 rows=20 loops=1)
   ->  Sort  (cost=252804.26..252949.42 rows=58062 width=188) (actual time=746.639..746.641 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method:  top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=250243.17..251259.25 rows=58062 width=188) (actual time=723.273..736.774 rows=38076 loops=1)
               ->  Hash Join  (cost=7856.67..249081.93 rows=58062 width=188) (actual time=74.981..575.249 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7855.11..248282.01 rows=58062 width=166) (actual time=74.734..550.021 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=847.11..239895.04 rows=58062 width=20) (actual time=9.767..411.447 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=847.11..28563.71 rows=58907 width=8) (actual time=9.714..86.948 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..832.38 rows=58907 width=0) (actual time=6.503..6.503 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.54 rows=4 width=20) (actual time=0.004..0.005 rows=2 loops=57111)
                                       Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       Filter: (lineitem.l_returnflag = 'R'::bpchar)
                           ->  Hash  (cost=5133.00..5133.00 rows=150000 width=150) (actual time=64.943..64.943 rows=150000 loops=1)
                                 ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=150) (actual time=0.005..31.923 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.014 rows=25 loops=1)
 Total runtime: 746.755 ms
(22 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24056.89..24056.89 rows=1 width=16) (actual time=766.578..766.578 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=11428.49..11428.51 rows=1 width=12) (actual time=28.976..28.976 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..11348.50 rows=31997 width=12) (actual time=0.012..17.329 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.009..0.167 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.003..0.128 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12628.38..12708.37 rows=31997 width=16) (actual time=766.577..766.577 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11588.48..12468.39 rows=31997 width=16) (actual time=760.913..766.452 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11348.50 rows=31997 width=16) (actual time=1.733..704.186 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.964..5.783 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.201..0.203 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.761..5.484 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20) (actual time=0.092..1.682 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 766.659 ms
(25 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=24056.89..24056.89 rows=1 width=16) (actual time=106.145..106.145 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=11428.49..11428.51 rows=1 width=12) (actual time=28.574..28.574 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..11348.50 rows=31997 width=12) (actual time=0.013..16.884 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.009..0.171 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.004..0.129 rows=411 loops=1)
                             Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=16) (actual time=0.003..0.033 rows=80 loops=411)
                       Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=12628.38..12708.37 rows=31997 width=16) (actual time=106.144..106.144 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11588.48..12468.39 rows=31997 width=16) (actual time=100.398..106.004 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..11348.50 rows=31997 width=16) (actual time=0.047..54.475 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..326.43 rows=400 width=4) (actual time=0.027..0.608 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..320.12 rows=400 width=8) (actual time=0.014..0.546 rows=411 loops=1)
                                 Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..26.56 rows=80 width=20) (actual time=0.007..0.120 rows=80 loops=411)
                           Index Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 106.223 ms
(25 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315412.18..315412.19 rows=1 width=27) (actual time=2117.050..2117.051 rows=1 loops=1)
   ->  Sort  (cost=315412.18..315412.19 rows=1 width=27) (actual time=2117.048..2117.048 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=315412.15..315412.17 rows=1 width=27) (actual time=2117.027..2117.027 rows=2 loops=1)
               ->  Merge Join  (cost=255564.78..315211.68 rows=26729 width=27) (actual time=1616.421..2100.540 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20) (actual time=1.254..382.010 rows=1499957 loops=1)
                     ->  Sort  (cost=255558.86..255625.68 rows=26729 width=15) (actual time=1615.082..1618.187 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..253593.46 rows=26729 width=15) (actual time=1.023..1608.675 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 2117.120 ms
(14 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=315412.18..315412.19 rows=1 width=27) (actual time=1723.337..1723.338 rows=1 loops=1)
   ->  Sort  (cost=315412.18..315412.19 rows=1 width=27) (actual time=1723.337..1723.337 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method:  quicksort  Memory: 25kB
         ->  HashAggregate  (cost=315412.15..315412.17 rows=1 width=27) (actual time=1723.315..1723.315 rows=2 loops=1)
               ->  Merge Join  (cost=255564.78..315211.68 rows=26729 width=27) (actual time=1378.090..1710.286 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=20) (actual time=0.021..235.845 rows=1499957 loops=1)
                     ->  Sort  (cost=255558.86..255625.68 rows=26729 width=15) (actual time=1378.048..1380.213 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method:  quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..253593.46 rows=26729 width=15) (actual time=0.118..1372.055 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 1723.397 ms
(14 rows)

query 13 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=154630.93..154630.93 rows=1 width=8) (actual time=1536.987..1536.988 rows=1 loops=1)
   ->  Sort  (cost=154630.93..154631.43 rows=200 width=8) (actual time=1536.986..1536.986 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=154627.43..154629.93 rows=200 width=8) (actual time=1536.968..1536.972 rows=42 loops=1)
               ->  HashAggregate  (cost=150502.43..152377.43 rows=150000 width=8) (actual time=1494.673..1518.969 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69447.01..143229.62 rows=1454561 width=8) (actual time=853.639..1288.248 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.357..41.718 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1454561 width=8) (actual time=853.167..853.167 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1454561 width=8) (actual time=0.309..641.218 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1537.797 ms
(13 rows)

SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=154630.93..154630.93 rows=1 width=8) (actual time=1391.675..1391.675 rows=1 loops=1)
   ->  Sort  (cost=154630.93..154631.43 rows=200 width=8) (actual time=1391.673..1391.673 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=154627.43..154629.93 rows=200 width=8) (actual time=1391.656..1391.660 rows=42 loops=1)
               ->  HashAggregate  (cost=150502.43..152377.43 rows=150000 width=8) (actual time=1349.585..1373.313 rows=150000 loops=1)
                     ->  Hash Left Join  (cost=69447.01..143229.62 rows=1454561 width=8) (actual time=723.381..1144.129 rows=1533923 loops=1)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=4) (actual time=0.012..29.641 rows=150000 loops=1)
                           ->  Hash  (cost=45583.00..45583.00 rows=1454561 width=8) (actual time=723.251..723.251 rows=1483918 loops=1)
                                 ->  Seq Scan on orders  (cost=0.00..45583.00 rows=1454561 width=8) (actual time=0.009..524.251 rows=1483918 loops=1)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 1392.389 ms
(13 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83483.68..83483.71 rows=1 width=37) (actual time=1075.978..1075.979 rows=1 loops=1)
   ->  Aggregate  (cost=83483.68..83483.71 rows=1 width=37) (actual time=1075.976..1075.976 rows=1 loops=1)
         ->  Hash Join  (cost=10112.31..83068.98 rows=82939 width=37) (actual time=107.036..976.760 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1455.31..72753.20 rows=82939 width=20) (actual time=22.543..789.265 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1434.58 rows=82939 width=0) (actual time=15.752..15.752 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=84.426..84.426 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.282..57.940 rows=200000 loops=1)
 Total runtime: 1076.018 ms
(11 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83483.68..83483.71 rows=1 width=37) (actual time=305.350..305.350 rows=1 loops=1)
   ->  Aggregate  (cost=83483.68..83483.71 rows=1 width=37) (actual time=305.349..305.349 rows=1 loops=1)
         ->  Hash Join  (cost=10112.31..83068.98 rows=82939 width=37) (actual time=77.106..251.103 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1455.31..72753.20 rows=82939 width=20) (actual time=16.746..133.186 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1434.58 rows=82939 width=0) (actual time=10.451..10.451 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6157.00..6157.00 rows=200000 width=25) (actual time=60.319..60.319 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6157.00 rows=200000 width=25) (actual time=0.007..35.748 rows=200000 loops=1)
 Total runtime: 305.384 ms
(11 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=255476.60..255477.75 rows=1 width=103) (actual time=1473.207..1473.208 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=127432.18..127432.19 rows=1 width=32) (actual time=224.818..224.818 rows=1 loops=1)
           ->  HashAggregate  (cost=127420.36..127427.26 rows=394 width=20) (actual time=223.076..224.262 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4155.57..126235.79 rows=236915 width=20) (actual time=34.103..91.109 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4096.34 rows=236915 width=0) (actual time=23.695..23.695 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=128044.41..128496.07 rows=394 width=103) (actual time=1473.206..1473.206 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71) (actual time=0.633..4.528 rows=8449 loops=1)
         ->  Sort  (cost=128044.41..128045.39 rows=394 width=36) (actual time=1468.146..1468.146 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=128012.65..128027.42 rows=394 width=36) (actual time=1467.680..1468.138 rows=1 loops=1)
                     ->  HashAggregate  (cost=128012.65..128023.48 rows=394 width=20) (actual time=1467.679..1468.137 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4155.57..126235.79 rows=236915 width=20) (actual time=52.573..1024.759 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4096.34 rows=236915 width=0) (actual time=41.556..41.556 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1473.292 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=255476.60..255477.75 rows=1 width=103) (actual time=604.363..604.363 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=127432.18..127432.19 rows=1 width=32) (actual time=222.950..222.950 rows=1 loops=1)
           ->  HashAggregate  (cost=127420.36..127427.26 rows=394 width=20) (actual time=221.204..222.366 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4155.57..126235.79 rows=236915 width=20) (actual time=33.032..90.064 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4096.34 rows=236915 width=0) (actual time=23.142..23.142 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=128044.41..128496.07 rows=394 width=103) (actual time=604.363..604.363 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..420.75 rows=10000 width=71) (actual time=0.016..1.458 rows=8449 loops=1)
         ->  Sort  (cost=128044.41..128045.39 rows=394 width=36) (actual time=602.397..602.397 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method:  quicksort  Memory: 25kB
               ->  Subquery Scan revenue0  (cost=128012.65..128027.42 rows=394 width=36) (actual time=601.938..602.393 rows=1 loops=1)
                     ->  HashAggregate  (cost=128012.65..128023.48 rows=394 width=20) (actual time=601.937..602.392 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4155.57..126235.79 rows=236915 width=20) (actual time=38.751..235.054 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4096.34 rows=236915 width=0) (actual time=28.715..28.715 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 604.432 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47738.08..47738.08 rows=1 width=40) (actual time=1287.998..1287.998 rows=1 loops=1)
   ->  Sort  (cost=47738.08..47744.88 rows=2723 width=40) (actual time=1287.997..1287.997 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=47009.82..47724.46 rows=2723 width=40) (actual time=1236.095..1285.035 rows=18220 loops=1)
               ->  Sort  (cost=47009.82..47145.94 rows=54448 width=40) (actual time=1236.076..1243.624 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9847.30..42726.78 rows=54448 width=40) (actual time=97.091..473.864 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=5.425..251.037 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=1.008..5.146 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27224 width=40) (actual time=91.640..91.640 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27224 width=40) (actual time=0.317..86.173 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1288.063 ms
(19 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47738.08..47738.08 rows=1 width=40) (actual time=1161.229..1161.229 rows=1 loops=1)
   ->  Sort  (cost=47738.08..47744.88 rows=2723 width=40) (actual time=1161.228..1161.228 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=47009.82..47724.46 rows=2723 width=40) (actual time=1109.070..1158.280 rows=18220 loops=1)
               ->  Sort  (cost=47009.82..47145.94 rows=54448 width=40) (actual time=1109.052..1116.720 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method:  quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9847.30..42726.78 rows=54448 width=40) (actual time=72.413..348.072 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=350.00..28185.00 rows=400000 width=8) (actual time=2.818..166.946 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..350.00 rows=1 width=4) (actual time=0.115..2.808 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9157.00..9157.00 rows=27224 width=40) (actual time=69.570..69.570 rows=29492 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..9157.00 rows=27224 width=40) (actual time=0.012..64.651 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1161.283 ms
(19 rows)

query 17 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231104.99..231105.01 rows=1 width=10) (actual time=5354.004..5354.004 rows=1 loops=1)
   ->  Aggregate  (cost=231104.99..231105.01 rows=1 width=10) (actual time=5354.003..5354.003 rows=1 loops=1)
         ->  Nested Loop  (cost=215744.27..231099.74 rows=2100 width=10) (actual time=5125.164..5353.713 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.27..221408.13 rows=207 width=40) (actual time=5124.002..5257.417 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208584.64..211538.62 rows=196932 width=11) (actual time=5068.982..5188.703 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.76 rows=6001176 width=11) (actual time=0.454..689.598 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=210 width=4) (actual time=54.812..54.812 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=210 width=4) (actual time=1.108..54.734 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.37 rows=30 width=21) (actual time=0.221..0.452 rows=30 loops=208)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
 Total runtime: 5354.659 ms
(14 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231104.99..231105.01 rows=1 width=10) (actual time=4992.337..4992.337 rows=1 loops=1)
   ->  Aggregate  (cost=231104.99..231105.01 rows=1 width=10) (actual time=4992.336..4992.336 rows=1 loops=1)
         ->  Nested Loop  (cost=215744.27..231099.74 rows=2100 width=10) (actual time=4858.531..4992.199 rows=592 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Hash Join  (cost=215744.27..221408.13 rows=207 width=40) (actual time=4858.503..4987.418 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=208584.64..211538.62 rows=196932 width=11) (actual time=4824.596..4939.955 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..178578.76 rows=6001176 width=11) (actual time=0.027..483.459 rows=6001215 loops=1)
                     ->  Hash  (cost=7157.00..7157.00 rows=210 width=4) (actual time=33.711..33.711 rows=208 loops=1)
                           ->  Seq Scan on part  (cost=0.00..7157.00 rows=210 width=4) (actual time=0.134..33.654 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..46.37 rows=30 width=21) (actual time=0.006..0.019 rows=30 loops=208)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
 Total runtime: 4992.937 ms
(14 rows)

query 18 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1081452.39..1081455.39 rows=100 width=48) (actual time=4289.086..4289.110 rows=9 loops=1)
   ->  GroupAggregate  (cost=1081452.39..1171470.03 rows=3000588 width=48) (actual time=4289.085..4289.109 rows=9 loops=1)
         ->  Sort  (cost=1081452.39..1088953.86 rows=3000588 width=48) (actual time=4289.078..4289.080 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=7042.28..699297.67 rows=3000588 width=48) (actual time=1032.088..4288.943 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=34.28..621025.70 rows=3000588 width=29) (actual time=969.620..4226.439 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..340905.03 rows=750000 width=26) (actual time=764.716..3445.790 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22) (actual time=1.285..303.584 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.00..276812.95 rows=386741 width=4) (actual time=660.494..3071.553 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.00..269078.13 rows=386741 width=11) (actual time=660.491..3071.534 rows=9 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233271.14 rows=6001176 width=11) (actual time=1.329..1617.271 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233271.14 rows=6001176 width=11) (actual time=0.007..516.810 rows=4807580 loops=1)
                     ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=62.431..62.431 rows=150000 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.520..42.791 rows=150000 loops=1)
 Total runtime: 4289.165 ms
(20 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1081452.39..1081455.39 rows=100 width=48) (actual time=3478.090..3478.113 rows=9 loops=1)
   ->  GroupAggregate  (cost=1081452.39..1171470.03 rows=3000588 width=48) (actual time=3478.090..3478.111 rows=9 loops=1)
         ->  Sort  (cost=1081452.39..1088953.86 rows=3000588 width=48) (actual time=3478.082..3478.082 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method:  quicksort  Memory: 33kB
               ->  Hash Join  (cost=7042.28..699297.67 rows=3000588 width=48) (actual time=822.441..3477.953 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=34.28..621025.70 rows=3000588 width=29) (actual time=780.296..3435.774 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..340905.03 rows=750000 width=26) (actual time=575.778..2657.018 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..55507.81 rows=1500000 width=22) (actual time=0.022..185.700 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.00..276812.95 rows=386741 width=4) (actual time=509.139..2403.251 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.00..269078.13 rows=386741 width=11) (actual time=509.137..2403.239 rows=9 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233271.14 rows=6001176 width=11) (actual time=0.022..1013.753 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..233271.14 rows=6001176 width=11) (actual time=0.005..516.531 rows=4807580 loops=1)
                     ->  Hash  (cost=5133.00..5133.00 rows=150000 width=23) (actual time=42.113..42.113 rows=150000 loops=1)
                           ->  Seq Scan on customer  (cost=0.00..5133.00 rows=150000 width=23) (actual time=0.010..23.794 rows=150000 loops=1)
 Total runtime: 3478.395 ms
(20 rows)

query 19 run 1
SET
SET


 Limit  (cost=315314.85..315314.86 rows=1 width=16) (actual time=1795.470..1795.471 rows=1 loops=1)
   ->  Aggregate  (cost=315314.85..315314.86 rows=1 width=16) (actual time=1795.468..1795.468 rows=1 loops=1)
         ->  Hash Join  (cost=9157.00..315314.56 rows=116 width=16) (actual time=96.933..1795.133 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298602.28 rows=116235 width=27) (actual time=0.542..1612.770 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30) (actual time=96.148..96.148 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30) (actual time=0.475..65.227 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1795.515 ms
(11 rows)

SET
SET


 Limit  (cost=315314.85..315314.86 rows=1 width=16) (actual time=1527.502..1527.502 rows=1 loops=1)
   ->  Aggregate  (cost=315314.85..315314.86 rows=1 width=16) (actual time=1527.500..1527.500 rows=1 loops=1)
         ->  Hash Join  (cost=9157.00..315314.56 rows=116 width=16) (actual time=74.042..1527.262 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..298602.28 rows=116235 width=27) (actual time=0.073..1370.244 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=6657.00..6657.00 rows=200000 width=30) (actual time=73.938..73.938 rows=200000 loops=1)
                     ->  Seq Scan on part  (cost=0.00..6657.00 rows=200000 width=30) (actual time=0.006..45.283 rows=200000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 1527.543 ms
(11 rows)

query 20 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171391.27..171391.28 rows=1 width=51) (actual time=3544.332..3544.332 rows=1 loops=1)
   ->  Sort  (cost=171391.27..171391.28 rows=1 width=51) (actual time=3544.332..3544.332 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=171387.69..171391.26 rows=1 width=51) (actual time=3527.906..3543.943 rows=196 loops=1)
               ->  Nested Loop  (cost=171387.69..171390.98 rows=1 width=55) (actual time=3519.169..3540.065 rows=4421 loops=1)
                     ->  HashAggregate  (cost=171387.69..171387.70 rows=1 width=8) (actual time=3518.262..3519.008 rows=4421 loops=1)
                           ->  Hash Join  (cost=168365.11..171387.69 rows=1 width=8) (actual time=3234.907..3516.607 rows=5898 loops=1)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=155802.71..157197.74 rows=93002 width=15) (actual time=2594.860..2804.078 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=16310.35..148827.59 rows=930016 width=15) (actual time=176.041..2040.001 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16077.85 rows=930016 width=0) (actual time=155.139..155.139 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=12440.19..12440.19 rows=8147 width=16) (actual time=639.982..639.982 rows=8748 loops=1)
                                       ->  Nested Loop  (cost=6662.05..12440.19 rows=8147 width=16) (actual time=54.922..636.362 rows=8748 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=53.513..54.392 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.405..52.761 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12) (actual time=0.247..0.264 rows=4 loops=2187)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59) (actual time=0.004..0.005 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 3544.760 ms
(28 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=171391.27..171391.28 rows=1 width=51) (actual time=1301.029..1301.029 rows=1 loops=1)
   ->  Sort  (cost=171391.27..171391.28 rows=1 width=51) (actual time=1301.028..1301.028 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  Nested Loop  (cost=171387.69..171391.26 rows=1 width=51) (actual time=1291.608..1300.873 rows=196 loops=1)
               ->  Nested Loop  (cost=171387.69..171390.98 rows=1 width=55) (actual time=1291.370..1297.809 rows=4421 loops=1)
                     ->  HashAggregate  (cost=171387.69..171387.70 rows=1 width=8) (actual time=1291.339..1291.950 rows=4421 loops=1)
                           ->  Hash Join  (cost=168365.11..171387.69 rows=1 width=8) (actual time=1010.409..1289.419 rows=5898 loops=1)
                                 Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  HashAggregate  (cost=155802.71..157197.74 rows=93002 width=15) (actual time=961.751..1169.425 rows=544869 loops=1)
                                       ->  Bitmap Heap Scan on lineitem  (cost=16310.35..148827.59 rows=930016 width=15) (actual time=128.137..510.508 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16077.85 rows=930016 width=0) (actual time=108.865..108.865 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=12440.19..12440.19 rows=8147 width=16) (actual time=48.593..48.593 rows=8748 loops=1)
                                       ->  Nested Loop  (cost=6662.05..12440.19 rows=8147 width=16) (actual time=32.153..47.117 rows=8748 loops=1)
                                             ->  HashAggregate  (cost=6662.05..6682.25 rows=2020 width=4) (actual time=32.133..32.438 rows=2187 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6657.00 rows=2020 width=4) (actual time=0.031..31.645 rows=2187 loops=1)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..2.80 rows=4 width=12) (actual time=0.005..0.006 rows=4 loops=2187)
                                                   Index Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59) (actual time=0.001..0.001 rows=1 loops=4421)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=4421)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
 Total runtime: 1301.486 ms
(28 rows)

query 21 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=410425.53..410425.54 rows=1 width=26) (actual time=2505.053..2505.062 rows=100 loops=1)
   ->  Sort  (cost=410425.53..410425.54 rows=1 width=26) (actual time=2505.053..2505.056 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=410425.51..410425.52 rows=1 width=26) (actual time=2504.541..2504.596 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=54988.52..410425.50 rows=1 width=26) (actual time=487.899..2501.198 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54988.52..410421.73 rows=1 width=34) (actual time=485.979..2378.723 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54988.52..258063.29 rows=39128 width=38) (actual time=485.127..2099.246 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=236.77..202120.10 rows=80016 width=34) (actual time=5.630..1518.936 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..193581.70 rows=2000392 width=8) (actual time=0.416..1245.792 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=231.77..231.77 rows=400 width=30) (actual time=5.141..5.141 rows=421 loops=1)
                                             ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30) (actual time=1.403..5.038 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.204..0.206 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34) (actual time=1.194..4.769 rows=421 loops=1)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.968..0.968 rows=421 loops=1)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=733500 width=4) (actual time=479.406..479.406 rows=729413 loops=1)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=733500 width=4) (actual time=0.586..372.848 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.65 rows=16 width=8) (actual time=0.003..0.003 rows=1 loops=76644)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.69 rows=5 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
 Total runtime: 2505.152 ms
(32 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=410425.53..410425.54 rows=1 width=26) (actual time=2041.662..2041.673 rows=100 loops=1)
   ->  Sort  (cost=410425.53..410425.54 rows=1 width=26) (actual time=2041.660..2041.664 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method:  top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=410425.51..410425.52 rows=1 width=26) (actual time=2041.132..2041.193 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=54988.52..410425.50 rows=1 width=26) (actual time=350.770..2038.470 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=54988.52..410421.73 rows=1 width=34) (actual time=350.219..1923.601 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=54988.52..258063.29 rows=39128 width=38) (actual time=350.199..1731.027 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=236.77..202120.10 rows=80016 width=34) (actual time=1.010..1286.298 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..193581.70 rows=2000392 width=8) (actual time=0.032..1024.406 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=231.77..231.77 rows=400 width=30) (actual time=0.947..0.947 rows=421 loops=1)
                                             ->  Nested Loop  (cost=6.35..231.77 rows=400 width=30) (actual time=0.083..0.887 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.35..225.46 rows=400 width=34) (actual time=0.071..0.819 rows=421 loops=1)
                                                         Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0) (actual time=0.048..0.048 rows=421 loops=1)
                                                               Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=45583.00..45583.00 rows=733500 width=4) (actual time=349.111..349.111 rows=729413 loops=1)
                                       ->  Seq Scan on orders  (cost=0.00..45583.00 rows=733500 width=4) (actual time=0.007..255.726 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.65 rows=16 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                 Index Cond: (l2.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.69 rows=5 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l3.l_orderkey = l1.l_orderkey)
                           Filter: (l3.l_receiptdate > l3.l_commitdate)
 Total runtime: 2041.758 ms
(32 rows)

query 22 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18067.59..18067.59 rows=1 width=24) (actual time=826.281..826.282 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.27..7582.28 rows=1 width=8) (actual time=116.794..116.794 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4707 width=8) (actual time=0.017..101.968 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10485.31..10487.17 rows=744 width=24) (actual time=826.279..826.279 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10466.71..10481.59 rows=744 width=24) (actual time=826.253..826.256 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..10461.13 rows=744 width=24) (actual time=117.748..820.249 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28) (actual time=117.166..201.051 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..19.51 rows=18 width=4) (actual time=0.032..0.032 rows=1 loops=19077)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
 Total runtime: 826.598 ms
(15 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18067.59..18067.59 rows=1 width=24) (actual time=209.056..209.057 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7582.27..7582.28 rows=1 width=8) (actual time=95.435..95.435 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7570.50 rows=4707 width=8) (actual time=0.007..81.133 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=10485.31..10487.17 rows=744 width=24) (actual time=209.054..209.054 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method:  top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=10466.71..10481.59 rows=744 width=24) (actual time=209.031..209.034 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..10461.13 rows=744 width=24) (actual time=95.484..206.053 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7570.50 rows=1724 width=28) (actual time=95.464..148.933 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..19.51 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (orders.o_custkey = public.customer.c_custkey)
 Total runtime: 209.336 ms
(15 rows)

