query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=3416673.90..3416673.90 rows=1 width=33)
   ->  Sort  (cost=3416673.90..3416673.92 rows=6 width=33)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=3416673.60..3416673.87 rows=6 width=33)
               ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=59264878 width=33)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1115396.39..1115396.40 rows=1 width=194)
   ->  Sort  (cost=1115396.39..1115396.40 rows=1 width=194)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         ->  Merge Join  (cost=561057.34..1115396.38 rows=1 width=194)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (subplan))
               ->  Index Scan using part_pkey on part  (cost=0.00..89790.33 rows=8215 width=30)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=561046.41..581046.41 rows=1600000 width=176)
                     ->  Sort  (cost=561046.41..565046.41 rows=1600000 width=176)
                           Sort Key: public.partsupp.ps_partkey
                           ->  Hash Join  (cost=4073.53..308277.53 rows=1600000 width=176)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                                 ->  Hash  (cost=3823.53..3823.53 rows=20000 width=168)
                                       ->  Hash Join  (cost=2.53..3823.53 rows=20000 width=168)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=146)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan
                 ->  Aggregate  (cost=69.45..69.46 rows=1 width=8)
                       ->  Nested Loop  (cost=1.56..69.43 rows=4 width=8)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..68.13 rows=19 width=12)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..66.31 rows=19 width=12)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=19 width=12)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (public.supplier.s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8)
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8)
(40 rows)

query 3 run 1
SET
SET
                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3658211.87..3658211.90 rows=10 width=28)
   ->  Sort  (cost=3658211.87..3665955.59 rows=3097489 width=28)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         ->  GroupAggregate  (cost=3498351.58..3591276.25 rows=3097489 width=28)
               ->  Sort  (cost=3498351.58..3506095.30 rows=3097489 width=28)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=639939.65..3116757.20 rows=3097489 width=28)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=32570402 width=20)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=615142.15..615142.15 rows=1426520 width=12)
                                 ->  Hash Join  (cost=144018.67..615142.15 rows=1426520 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=85227.54..443304.63 rows=7184087 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83431.52 rows=7184087 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=55068.00..55068.00 rows=297850 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..55068.00 rows=297850 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=419045.02..419045.02 rows=1 width=16)
   ->  Sort  (cost=419045.02..419045.02 rows=1 width=16)
         Sort Key: orders.o_orderpriority
         ->  HashAggregate  (cost=419044.99..419045.01 rows=1 width=16)
               ->  Bitmap Heap Scan on orders  (cost=8161.90..417612.15 rows=286569 width=16)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8090.26 rows=573139 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..11.80 rows=51 width=125)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2485623.32..2485623.32 rows=1 width=42)
   ->  Sort  (cost=2485623.32..2485623.38 rows=25 width=42)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  HashAggregate  (cost=2485622.75..2485623.19 rows=25 width=42)
               ->  Hash Join  (cost=420850.75..2485266.70 rows=71210 width=42)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=416104.75..2444028.84 rows=1788988 width=54)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=24)
                           ->  Hash  (cost=410512.86..410512.86 rows=447351 width=38)
                                 ->  Hash Join  (cost=95824.16..410512.86 rows=447351 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32128.63..333955.98 rows=2236757 width=8)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31569.44 rows=2236757 width=0)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59945.53..59945.53 rows=300000 width=38)
                                             ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30)
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(29 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1115034.84..1115034.85 rows=1 width=16)
   ->  Aggregate  (cost=1115034.84..1115034.85 rows=1 width=16)
         ->  Bitmap Heap Scan on lineitem  (cost=224610.89..1112082.81 rows=1180810 width=16)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..224315.69 rows=1180810 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2739124.57..2739124.57 rows=1 width=72)
   ->  Sort  (cost=2739124.57..2739270.25 rows=58272 width=72)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2737522.09..2738833.21 rows=58272 width=72)
               ->  Hash Join  (cost=900050.54..2736939.37 rows=58272 width=72)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=895304.54..2702030.54 rows=1464439 width=80)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=321256.04..1781284.13 rows=18320139 width=28)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..316676.01 rows=18320139 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=546179.50..546179.50 rows=1199040 width=60)
                                 ->  Hash Join  (cost=59663.10..546179.50 rows=1199040 width=60)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..418276.00 rows=15000000 width=8)
                                       ->  Hash  (cost=58164.30..58164.30 rows=119904 width=60)
                                             ->  Hash Join  (cost=21.30..58164.30 rows=119904 width=60)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=60)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=60)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=30)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
                     ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1270997.82..1270997.82 rows=1 width=46)
   ->  Sort  (cost=1270997.82..1270999.64 rows=729 width=46)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=1270968.66..1270994.17 rows=729 width=46)
               ->  Hash Join  (cost=510784.42..1270788.07 rows=24079 width=46)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=510782.85..1270335.02 rows=24079 width=24)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=506286.85..1265356.16 rows=24207 width=24)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..749092.63 rows=399897 width=24)
                                       ->  Seq Scan on part  (cost=0.00..66559.00 rows=13333 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.80 rows=31 width=28)
                                             Index Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  Hash  (cost=491389.67..491389.67 rows=908015 width=8)
                                       ->  Hash Join  (cost=128907.15..491389.67 rows=908015 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=65211.62..401588.71 rows=4540073 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64076.60 rows=4540073 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59945.53..59945.53 rows=300000 width=4)
                                                   ->  Hash Join  (cost=2.53..59945.53 rows=300000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3246.00..3246.00 rows=100000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..3246.00 rows=100000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2724367.17..2724367.18 rows=1 width=61)
   ->  Sort  (cost=2724367.17..2724367.48 rows=124 width=61)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  HashAggregate  (cost=2724363.14..2724366.55 rows=124 width=61)
               ->  Hash Join  (cost=67823.19..2724362.21 rows=124 width=61)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=67821.62..2724358.33 rows=124 width=39)
                           ->  Nested Loop  (cost=67821.62..2723878.65 rows=124 width=39)
                                 ->  Nested Loop  (cost=67821.62..2723471.91 rows=125 width=43)
                                       ->  Hash Join  (cost=67821.62..410066.03 rows=404040 width=20)
                                             Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                             ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                                             ->  Hash  (cost=66559.00..66559.00 rows=101010 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66559.00 rows=101010 width=4)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=35)
                                             Index Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8)
                                       Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.86 rows=1 width=8)
                                 Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2721996.94..2721996.99 rows=20 width=188)
   ->  Sort  (cost=2721996.94..2723435.56 rows=575449 width=188)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         ->  GroupAggregate  (cost=2683666.49..2706684.45 rows=575449 width=188)
               ->  Sort  (cost=2683666.49..2685105.11 rows=575449 width=188)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=395134.51..2594473.09 rows=575449 width=188)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=395132.95..2586559.10 rows=575449 width=166)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=292837.95..2435942.05 rows=575449 width=20)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1935051.65 rows=14712579 width=20)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=285504.31..285504.31 rows=586691 width=8)
                                             ->  Bitmap Heap Scan on orders  (cost=8427.95..285504.31 rows=586691 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8281.28 rows=586691 width=0)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=150)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=150)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(23 rows)

query 11 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=691143.64..691143.65 rows=1 width=16)
   InitPlan
     ->  Aggregate  (cost=324541.64..324541.66 rows=1 width=12)
           ->  Hash Join  (cost=2337.64..323741.64 rows=320000 width=12)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=16)
                 ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                       ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                   Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                         Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=366601.98..367401.98 rows=320000 width=16)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         ->  GroupAggregate  (cost=353001.98..365001.98 rows=320000 width=16)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $0)
               ->  Sort  (cost=353001.98..353801.98 rows=320000 width=16)
                     Sort Key: public.partsupp.ps_partkey
                     ->  Hash Join  (cost=2337.64..323741.64 rows=320000 width=16)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..258204.00 rows=8000000 width=20)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=4)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=4)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=8)
                                             Recheck Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
(31 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3158193.76..3158193.77 rows=1 width=27)
   ->  Sort  (cost=3158193.76..3158193.77 rows=1 width=27)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=3158193.73..3158193.75 rows=1 width=27)
               ->  Merge Join  (cost=2559681.88..3156141.57 rows=273621 width=27)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..554973.87 rows=15000000 width=20)
                     ->  Sort  (cost=2559622.64..2560306.69 rows=273621 width=15)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..2534912.17 rows=273621 width=15)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2785260.29..2785260.29 rows=1 width=8)
   ->  Sort  (cost=2785260.29..2785260.79 rows=200 width=8)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         ->  HashAggregate  (cost=2785256.79..2785259.29 rows=200 width=8)
               ->  GroupAggregate  (cost=2375293.96..2762756.79 rows=1500000 width=8)
                     ->  Merge Left Join  (cost=2375293.96..2669014.28 rows=14998501 width=8)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64992.81 rows=1500000 width=4)
                           ->  Materialize  (cost=2375293.96..2562775.22 rows=14998501 width=8)
                                 ->  Sort  (cost=2375293.96..2412790.21 rows=14998501 width=8)
                                       Sort Key: orders.o_custkey
                                       ->  Seq Scan on orders  (cost=0.00..455776.00 rows=14998501 width=8)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(13 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=825468.85..825468.88 rows=1 width=37)
   ->  Aggregate  (cost=825468.85..825468.88 rows=1 width=37)
         ->  Hash Join  (cost=113405.48..821713.79 rows=751011 width=37)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=13174.48..682111.05 rows=751011 width=20)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12986.73 rows=751011 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=61559.00..61559.00 rows=2000000 width=25)
                     ->  Seq Scan on part  (cost=0.00..61559.00 rows=2000000 width=25)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2524841.23..2524842.39 rows=1 width=103)
   InitPlan
     ->  Aggregate  (cost=1259409.60..1259409.61 rows=1 width=32)
           ->  HashAggregate  (cost=1259293.67..1259361.29 rows=3864 width=20)
                 ->  Bitmap Heap Scan on lineitem  (cost=40426.23..1247768.01 rows=2305133 width=20)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39849.95 rows=2305133 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1265431.62..1269900.34 rows=3864 width=103)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4160.75 rows=100000 width=71)
         ->  Sort  (cost=1265431.62..1265441.28 rows=3864 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=1265056.51..1265201.41 rows=3864 width=36)
                     ->  HashAggregate  (cost=1265056.51..1265162.77 rows=3864 width=20)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=40426.23..1247768.01 rows=2305133 width=20)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..39849.95 rows=2305133 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=508396.60..508396.61 rows=1 width=40)
   ->  Sort  (cost=508396.60..508462.44 rows=26334 width=40)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=500913.38..508264.93 rows=26334 width=40)
               ->  Sort  (cost=500913.38..502317.86 rows=561790 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=98566.21..437388.11 rows=561790 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3496.03..281700.03 rows=4000000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..3496.00 rows=10 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=91559.00..91559.00 rows=280895 width=40)
                                 ->  Seq Scan on part  (cost=0.00..91559.00 rows=280895 width=40)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=10873532.09..10873532.10 rows=1 width=10)
   ->  Aggregate  (cost=10873532.09..10873532.10 rows=1 width=10)
         ->  Nested Loop  (cost=10265426.26..10873478.63 rows=21385 width=10)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10265426.26..10768202.94 rows=2055 width=40)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10193748.94..10672471.63 rows=1921820 width=11)
                           ->  Sort  (cost=10193748.94..10343714.07 rows=59986052 width=11)
                                 Sort Key: public.lineitem.l_partkey
                                 ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                     ->  Sort  (cost=71677.32..71682.66 rows=2139 width=4)
                           Sort Key: part.p_partkey
                           ->  Seq Scan on part  (cost=0.00..71559.00 rows=2139 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..50.76 rows=31 width=21)
                     Index Cond: (public.lineitem.l_partkey = part.p_partkey)
(16 rows)

query 18 run 1
SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=5565691.91..5565694.91 rows=100 width=48)
   ->  GroupAggregate  (cost=5565691.91..5612494.46 rows=1560085 width=48)
         ->  Sort  (cost=5565691.91..5569592.12 rows=1560085 width=48)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=3348725.20..5374360.26 rows=1560085 width=48)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..1785086.52 rows=59986052 width=11)
                     ->  Hash  (cost=3343848.80..3343848.80 rows=390112 width=45)
                           ->  Hash Join  (cost=2720671.17..3343848.80 rows=390112 width=45)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=2641813.17..3243064.56 rows=390112 width=26)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..554973.87 rows=15000000 width=22)
                                       ->  Materialize  (cost=2641813.17..2645714.29 rows=390112 width=4)
                                             ->  GroupAggregate  (cost=0.00..2637521.94 rows=390112 width=11)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2331740.00 rows=59986052 width=11)
                                 ->  Hash  (cost=51318.00..51318.00 rows=1500000 width=23)
                                       ->  Seq Scan on customer  (cost=0.00..51318.00 rows=1500000 width=23)
(19 rows)

query 19 run 1
SET
SET


 Limit  (cost=3194772.65..3194772.66 rows=1 width=16)
   ->  Aggregate  (cost=3194772.65..3194772.66 rows=1 width=16)
         ->  Hash Join  (cost=105231.00..3194769.92 rows=1087 width=16)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2984807.56 rows=1121798 width=27)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=66559.00..66559.00 rows=2000000 width=30)
                     ->  Seq Scan on part  (cost=0.00..66559.00 rows=2000000 width=30)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2848148.96..2848148.96 rows=1 width=51)
   ->  Sort  (cost=2848148.96..2848148.96 rows=1 width=51)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=2848144.62..2848148.95 rows=1 width=51)
               ->  Nested Loop  (cost=2848144.62..2848147.91 rows=1 width=55)
                     ->  HashAggregate  (cost=2848144.62..2848144.63 rows=1 width=8)
                           ->  Nested Loop  (cost=2699991.79..2848144.62 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 ->  Merge Join  (cost=2699991.79..2816103.33 rows=9183 width=44)
                                       Merge Cond: (lineitem.l_partkey = part.p_partkey)
                                       ->  GroupAggregate  (cost=2631735.60..2736289.72 rows=909167 width=15)
                                             ->  Sort  (cost=2631735.60..2654464.75 rows=9091661 width=15)
                                                   Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                                   ->  Bitmap Heap Scan on lineitem  (cost=159431.15..1481032.06 rows=9091661 width=15)
                                                         Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                         ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..157158.23 rows=9091661 width=0)
                                                               Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Sort  (cost=68256.19..68306.70 rows=20202 width=4)
                                             Sort Key: part.p_partkey
                                             ->  HashAggregate  (cost=66609.51..66811.53 rows=20202 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..66559.00 rows=20202 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.47 rows=1 width=12)
                                       Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=59)
                           Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=4)
                     Index Cond: (nation.n_nationkey = supplier.s_nationkey)
                     Filter: (nation.n_name = 'IRAQ'::bpchar)
(29 rows)

query 21 run 1
SET
SET
                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=21656453.74..21656453.99 rows=100 width=26)
   ->  Sort  (cost=21656453.74..21656694.01 rows=96108 width=26)
         Sort Key: (count(*)), supplier.s_name
         ->  HashAggregate  (cost=21651579.21..21652780.56 rows=96108 width=26)
               ->  Nested Loop  (cost=2337.64..21651098.67 rows=96108 width=26)
                     ->  Hash Join  (cost=2337.64..20882035.41 rows=198899 width=30)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..20858963.14 rows=4998838 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..12.18 rows=51 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..11.80 rows=154 width=125)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=2287.64..2287.64 rows=4000 width=30)
                                 ->  Nested Loop  (cost=49.25..2287.64 rows=4000 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2236.33 rows=4000 width=34)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.85 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (orders.o_orderstatus = 'F'::bpchar)
(27 rows)

query 22 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2625315.43..2625315.43 rows=1 width=24)
   InitPlan
     ->  Aggregate  (cost=75810.71..75810.71 rows=1 width=8)
           ->  Seq Scan on customer  (cost=0.00..75693.00 rows=47081 width=8)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=2549504.72..2549526.27 rows=8620 width=24)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         ->  HashAggregate  (cost=2549289.22..2549461.62 rows=8620 width=24)
               ->  Seq Scan on customer  (cost=0.00..2549224.57 rows=8620 width=24)
                     Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..29.68 rows=18 width=109)
                             Index Cond: (o_custkey = $1)
(13 rows)

