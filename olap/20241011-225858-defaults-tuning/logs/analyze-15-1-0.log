query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394993.15..394993.16 rows=1 width=236) (actual time=7910.572..7910.573 rows=1 loops=1)
   ->  Sort  (cost=394993.15..394993.17 rows=6 width=236) (actual time=7910.571..7910.572 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394992.96..394993.12 rows=6 width=236) (actual time=7910.545..7910.551 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..187575.75 rows=5926206 width=25) (actual time=0.524..1316.511 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 11.285 ms
 Execution Time: 7911.347 ms
(12 rows)

SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=394993.15..394993.16 rows=1 width=236) (actual time=7694.123..7694.124 rows=1 loops=1)
   ->  Sort  (cost=394993.15..394993.17 rows=6 width=236) (actual time=7694.122..7694.122 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=394992.96..394993.12 rows=6 width=236) (actual time=7694.092..7694.098 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 32kB
               ->  Seq Scan on lineitem  (cost=0.00..187575.75 rows=5926206 width=25) (actual time=0.026..1111.062 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.842 ms
 Execution Time: 7694.184 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48543.96..48543.97 rows=1 width=192) (actual time=478.182..478.199 rows=100 loops=1)
   ->  Sort  (cost=48543.96..48543.97 rows=1 width=192) (actual time=478.181..478.191 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=32930.83..48543.95 rows=1 width=192) (actual time=373.171..477.724 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=922 width=30) (actual time=0.219..63.363 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30537.54..30537.54 rows=159553 width=172) (actual time=372.175..372.178 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30537.54 rows=159553 width=172) (actual time=7.176..311.752 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.587..187.586 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.582..6.584 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.790..6.109 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.335..4.394 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.447..0.449 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.436..0.446 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.188..0.191 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.238..0.239 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.232..0.234 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.031..0.031 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.025..0.030 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.018..0.028 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.017..0.024 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.015..0.016 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.417 ms
 Execution Time: 478.352 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48543.96..48543.97 rows=1 width=192) (actual time=286.820..286.836 rows=100 loops=1)
   ->  Sort  (cost=48543.96..48543.97 rows=1 width=192) (actual time=286.819..286.829 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Hash Join  (cost=32930.83..48543.95 rows=1 width=192) (actual time=229.671..286.438 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=922 width=30) (actual time=0.015..35.993 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30537.54..30537.54 rows=159553 width=172) (actual time=229.281..229.285 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30537.54 rows=159553 width=172) (actual time=2.591..174.504 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..46.330 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.585..2.587 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.026..2.154 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..0.595 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.022..0.024 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.017..0.022 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 2.206 ms
 Execution Time: 286.973 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=286404.67..286404.70 rows=10 width=44) (actual time=2337.358..2337.363 rows=10 loops=1)
   ->  Sort  (cost=286404.67..287211.46 rows=322717 width=44) (actual time=2337.357..2337.360 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=271615.07..279430.87 rows=322717 width=44) (actual time=2330.693..2335.280 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51533.87..254647.22 rows=322717 width=24) (actual time=930.951..2307.508 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187575.75 rows=3282781 width=16) (actual time=0.593..1082.772 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49690.24..49690.24 rows=147490 width=12) (actual time=929.040..929.042 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12493.80..49690.24 rows=147490 width=12) (actual time=95.775..894.626 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6643.80..41919.75 rows=731596 width=16) (actual time=41.537..694.389 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6460.90 rows=731596 width=0) (actual time=37.674..37.674 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30240 width=4) (actual time=54.138..54.138 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30240 width=4) (actual time=0.348..49.084 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 15.979 ms
 Execution Time: 2339.107 ms
(28 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=286404.67..286404.70 rows=10 width=44) (actual time=1466.140..1466.145 rows=10 loops=1)
   ->  Sort  (cost=286404.67..287211.46 rows=322717 width=44) (actual time=1466.139..1466.142 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=271615.07..279430.87 rows=322717 width=44) (actual time=1459.536..1464.082 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51533.87..254647.22 rows=322717 width=24) (actual time=288.229..1438.129 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187575.75 rows=3282781 width=16) (actual time=0.046..867.883 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49690.24..49690.24 rows=147490 width=12) (actual time=287.622..287.624 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12493.80..49690.24 rows=147490 width=12) (actual time=60.139..263.302 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6643.80..41919.75 rows=731596 width=16) (actual time=33.774..136.814 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6460.90 rows=731596 width=0) (actual time=30.368..30.368 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30240 width=4) (actual time=26.340..26.341 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30240 width=4) (actual time=0.006..22.710 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 1.050 ms
 Execution Time: 1467.296 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=196506.14..196506.15 rows=1 width=24) (actual time=2213.600..2214.308 rows=1 loops=1)
   ->  Sort  (cost=196506.14..196506.16 rows=5 width=24) (actual time=2213.599..2213.600 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=196506.07..196506.12 rows=5 width=24) (actual time=2213.577..2213.579 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=695.63..196206.67 rows=59880 width=16) (actual time=9.496..2179.028 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=695.20..27724.40 rows=59880 width=20) (actual time=8.889..659.137 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..680.23 rows=59880 width=0) (actual time=5.367..5.367 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 14.207 ms
 Execution Time: 2215.391 ms
(19 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=196506.14..196506.15 rows=1 width=24) (actual time=197.559..197.565 rows=1 loops=1)
   ->  Sort  (cost=196506.14..196506.16 rows=5 width=24) (actual time=197.557..197.558 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=196506.07..196506.12 rows=5 width=24) (actual time=197.537..197.539 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=695.63..196206.67 rows=59880 width=16) (actual time=6.486..181.528 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=695.20..27724.40 rows=59880 width=20) (actual time=6.463..40.418 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..680.23 rows=59880 width=0) (actual time=3.311..3.311 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 0.967 ms
 Execution Time: 197.869 ms
(19 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189311.63..189311.63 rows=1 width=58) (actual time=2380.218..2380.223 rows=1 loops=1)
   ->  Sort  (cost=189311.63..189311.69 rows=25 width=58) (actual time=2380.216..2380.222 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=189219.74..189311.50 rows=25 width=58) (actual time=2377.417..2380.205 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=189219.74..189238.03 rows=7316 width=38) (actual time=2376.678..2376.976 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=9459.33..188750.17 rows=7316 width=38) (actual time=86.809..2371.546 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8986.33..187316.70 rows=182943 width=50) (actual time=80.360..2326.666 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8985.90..39861.99 rows=45736 width=38) (actual time=79.827..853.011 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2648.89..32210.07 rows=228679 width=8) (actual time=17.576..721.837 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2591.72 rows=228679 width=0) (actual time=13.786..13.787 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=62.198..62.201 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.788..56.391 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.340..39.024 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.439..0.441 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.427..0.437 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.195..0.198 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.222..0.223 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.216..0.218 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.029..0.031 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.187..6.188 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.308..4.826 rows=10000 loops=1)
 Planning Time: 21.939 ms
 Execution Time: 2380.610 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189311.63..189311.63 rows=1 width=58) (actual time=338.123..338.128 rows=1 loops=1)
   ->  Sort  (cost=189311.63..189311.69 rows=25 width=58) (actual time=338.121..338.126 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=189219.74..189311.50 rows=25 width=58) (actual time=335.293..338.108 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=189219.74..189238.03 rows=7316 width=38) (actual time=334.597..334.888 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=9459.33..188750.17 rows=7316 width=38) (actual time=52.188..331.798 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8986.33..187316.70 rows=182943 width=50) (actual time=49.488..306.019 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8985.90..39861.99 rows=45736 width=38) (actual time=49.473..151.242 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2648.89..32210.07 rows=228679 width=8) (actual time=14.564..72.218 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2591.72 rows=228679 width=0) (actual time=11.250..11.251 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=34.876..34.879 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.030..30.229 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.005..8.757 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.021..0.023 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.015..0.021 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.681..2.681 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.431 rows=10000 loops=1)
 Planning Time: 3.643 ms
 Execution Time: 338.223 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108251.37..108251.38 rows=1 width=32) (actual time=2137.155..2137.156 rows=1 loops=1)
   ->  Aggregate  (cost=108251.37..108251.38 rows=1 width=32) (actual time=2137.153..2137.154 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21181.89..107663.85 rows=117504 width=12) (actual time=136.131..2061.645 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21152.51 rows=117504 width=0) (actual time=125.215..125.215 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 8.395 ms
 Execution Time: 2138.671 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108251.37..108251.38 rows=1 width=32) (actual time=214.294..214.295 rows=1 loops=1)
   ->  Aggregate  (cost=108251.37..108251.38 rows=1 width=32) (actual time=214.293..214.294 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=21181.89..107663.85 rows=117504 width=12) (actual time=105.694..183.738 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21152.51 rows=117504 width=0) (actual time=95.501..95.501 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.435 ms
 Execution Time: 214.340 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234517.99..234518.02 rows=1 width=116) (actual time=4376.370..4376.376 rows=1 loops=1)
   ->  GroupAggregate  (cost=234517.99..234716.34 rows=6103 width=116) (actual time=4376.369..4376.374 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234517.99..234533.25 rows=6103 width=96) (actual time=4375.529..4375.589 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 819kB
               ->  Hash Join  (cost=84928.16..234134.26 rows=6103 width=96) (actual time=778.859..4370.250 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84563.06..232969.30 rows=146656 width=46) (actual time=772.259..4334.663 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29398.16..169461.90 rows=1833583 width=24) (actual time=219.104..3501.889 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28939.76 rows=1833583 width=0) (actual time=198.726..198.726 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=552.965..552.968 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=56.576..527.825 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.680..288.351 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=55.880..55.882 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.450..53.700 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.427..38.719 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.017..0.017 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.013 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.976..5.978 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.610..5.836 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.360..4.562 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.241..0.242 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.232..0.236 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 20.595 ms
 Execution Time: 4377.138 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234517.99..234518.02 rows=1 width=116) (actual time=997.829..997.835 rows=1 loops=1)
   ->  GroupAggregate  (cost=234517.99..234716.34 rows=6103 width=116) (actual time=997.827..997.833 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=234517.99..234533.25 rows=6103 width=96) (actual time=996.999..997.058 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 819kB
               ->  Hash Join  (cost=84928.16..234134.26 rows=6103 width=96) (actual time=467.407..993.767 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84563.06..232969.30 rows=146656 width=46) (actual time=465.272..973.682 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29398.16..169461.90 rows=1833583 width=24) (actual time=153.007..452.423 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28939.76 rows=1833583 width=0) (actual time=133.502..133.502 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=312.167..312.170 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=29.649..291.847 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.006..81.322 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=29.629..29.630 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.019..28.003 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.546 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.014 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.072..2.074 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.018..1.973 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..0.608 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 2.738 ms
 Execution Time: 997.946 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111811.01..111811.05 rows=1 width=64) (actual time=6794.135..6794.141 rows=1 loops=1)
   ->  GroupAggregate  (cost=111811.01..111911.65 rows=2368 width=64) (actual time=6794.134..6794.140 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=111811.01..111816.93 rows=2368 width=70) (actual time=6793.443..6793.500 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 310kB
               ->  Nested Loop  (cost=76897.06..111678.29 rows=2368 width=70) (actual time=5944.915..6791.257 rows=2485 loops=1)
                     ->  Hash Join  (cost=76896.91..111591.67 rows=2368 width=20) (actual time=5944.899..6786.729 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=76448.91..111137.46 rows=2368 width=20) (actual time=5938.655..6779.329 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=70111.90..104732.37 rows=11840 width=24) (actual time=5877.887..6715.121 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5170.61..37998.47 rows=446457 width=12) (actual time=29.001..781.796 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5059.00 rows=446457 width=0) (actual time=25.147..25.147 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=64443.94..64443.94 rows=39788 width=20) (actual time=5848.687..5848.688 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..64443.94 rows=39788 width=20) (actual time=1.454..5801.619 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1326 width=4) (actual time=0.798..74.654 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.32 rows=30 width=24) (actual time=0.251..4.316 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=60.746..60.749 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.971..56.425 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.412..39.128 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.553..0.554 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.542..0.551 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.242..0.245 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.288..0.288 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.281..0.283 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.235..6.235 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.392..4.989 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 24.427 ms
 Execution Time: 6794.538 ms
(52 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=111811.01..111811.05 rows=1 width=64) (actual time=271.351..271.357 rows=1 loops=1)
   ->  GroupAggregate  (cost=111811.01..111911.65 rows=2368 width=64) (actual time=271.350..271.356 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=111811.01..111816.93 rows=2368 width=70) (actual time=270.681..270.736 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 310kB
               ->  Nested Loop  (cost=76897.06..111678.29 rows=2368 width=70) (actual time=132.964..269.637 rows=2485 loops=1)
                     ->  Hash Join  (cost=76896.91..111591.67 rows=2368 width=20) (actual time=132.952..267.470 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=76448.91..111137.46 rows=2368 width=20) (actual time=130.399..264.029 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=70111.90..104732.37 rows=11840 width=24) (actual time=96.540..227.402 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5170.61..37998.47 rows=446457 width=12) (actual time=23.059..100.847 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5059.00 rows=446457 width=0) (actual time=19.651..19.652 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=64443.94..64443.94 rows=39788 width=20) (actual time=73.429..73.430 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..64443.94 rows=39788 width=20) (actual time=0.055..65.404 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1326 width=4) (actual time=0.042..23.943 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..43.32 rows=30 width=24) (actual time=0.003..0.027 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=33.838..33.840 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.023..30.299 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.004..8.950 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.017..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.011..0.017 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.545..2.545 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..1.384 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 4.137 ms
 Execution Time: 271.469 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=135980.69..135980.73 rows=1 width=90) (actual time=17280.351..17280.355 rows=1 loops=1)
   ->  GroupAggregate  (cost=135980.69..135984.09 rows=97 width=90) (actual time=17280.350..17280.353 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=135980.69..135980.94 rows=97 width=81) (actual time=17279.195..17279.433 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 21200kB
               ->  Nested Loop  (cost=1.57..135977.49 rows=97 width=81) (actual time=2.586..16900.337 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 3898820
                     ->  Nested Loop  (cost=1.57..135940.95 rows=97 width=31) (actual time=2.319..16164.192 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..135635.75 rows=97 width=31) (actual time=1.369..12233.293 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..135346.87 rows=98 width=35) (actual time=1.038..11449.601 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..32852.34 rows=32324 width=18) (actual time=0.643..323.141 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.235..86.698 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.017..0.020 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.036..0.253 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.239..0.245 rows=25 loops=1)
 Planning Time: 25.578 ms
 Execution Time: 17283.753 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=135980.69..135980.73 rows=1 width=90) (actual time=2635.799..2635.803 rows=1 loops=1)
   ->  GroupAggregate  (cost=135980.69..135984.09 rows=97 width=90) (actual time=2635.797..2635.801 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=135980.69..135980.94 rows=97 width=81) (actual time=2634.611..2634.848 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 21200kB
               ->  Nested Loop  (cost=1.57..135977.49 rows=97 width=81) (actual time=0.057..2319.094 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 3898820
                     ->  Nested Loop  (cost=1.57..135940.95 rows=97 width=31) (actual time=0.041..1796.752 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..135635.75 rows=97 width=31) (actual time=0.035..931.415 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..135346.87 rows=98 width=35) (actual time=0.031..477.949 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..32852.34 rows=32324 width=18) (actual time=0.025..84.370 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=8081 width=4) (actual time=0.018..40.892 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.002..0.008 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Planning Time: 5.504 ms
 Execution Time: 2638.558 ms
(28 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=228708.76..228708.81 rows=20 width=202) (actual time=2451.264..2451.271 rows=20 loops=1)
   ->  Sort  (cost=228708.76..228853.81 rows=58021 width=202) (actual time=2451.263..2451.267 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=226439.58..227164.84 rows=58021 width=202) (actual time=2420.840..2439.800 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Nested Loop  (cost=7656.00..225714.31 rows=58021 width=182) (actual time=102.342..2291.365 rows=114347 loops=1)
                     ->  Hash Join  (cost=7655.85..224273.11 rows=58021 width=160) (actual time=102.088..2222.605 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=683.85..217148.80 rows=58021 width=16) (actual time=9.755..2073.763 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=683.42..27697.57 rows=58877 width=8) (actual time=8.666..675.256 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..668.70 rows=58877 width=0) (actual time=5.156..5.156 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.022..0.024 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=91.914..91.915 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.309..50.872 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.011..0.011 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 19.987 ms
 Execution Time: 2452.219 ms
(31 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=228708.76..228708.81 rows=20 width=202) (actual time=553.975..553.982 rows=20 loops=1)
   ->  Sort  (cost=228708.76..228853.81 rows=58021 width=202) (actual time=553.974..553.979 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=226439.58..227164.84 rows=58021 width=202) (actual time=524.261..543.067 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Nested Loop  (cost=7656.00..225714.31 rows=58021 width=182) (actual time=72.632..426.891 rows=114347 loops=1)
                     ->  Hash Join  (cost=7655.85..224273.11 rows=58021 width=160) (actual time=72.615..374.577 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=683.85..217148.80 rows=58021 width=16) (actual time=6.800..261.822 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=683.42..27697.57 rows=58877 width=8) (actual time=6.755..44.034 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..668.70 rows=58877 width=0) (actual time=3.621..3.622 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.002..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=65.373..65.374 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.009..25.462 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 1.444 ms
 Execution Time: 554.411 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15989.59..15989.59 rows=1 width=36) (actual time=740.611..740.616 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7688.98..7688.99 rows=1 width=32) (actual time=25.851..25.853 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.64 rows=31911 width=10) (actual time=0.051..17.711 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.275 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8300.60..8327.19 rows=10637 width=36) (actual time=740.610..740.612 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.75..8247.42 rows=10637 width=36) (actual time=729.558..740.461 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.64 rows=31911 width=14) (actual time=1.209..670.824 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.804..4.408 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.206..0.210 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.591..4.100 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.352..0.353 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.046..1.603 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.344 ms
 Execution Time: 740.985 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15989.59..15989.59 rows=1 width=36) (actual time=83.446..83.451 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7688.98..7688.99 rows=1 width=32) (actual time=26.246..26.248 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.64 rows=31911 width=10) (actual time=0.050..17.782 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.278 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.034..0.225 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.017 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8300.60..8327.19 rows=10637 width=36) (actual time=83.445..83.446 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.75..8247.42 rows=10637 width=36) (actual time=72.439..83.297 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.64 rows=31911 width=14) (actual time=0.059..26.692 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.422 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.038..0.361 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.921 ms
 Execution Time: 83.795 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302783.94..302867.15 rows=1 width=27) (actual time=2015.552..2015.555 rows=1 loops=1)
   ->  GroupAggregate  (cost=302783.94..303366.43 rows=7 width=27) (actual time=2015.551..2015.553 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302783.94..302856.74 rows=29121 width=27) (actual time=2010.815..2011.399 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2945kB
               ->  Hash Join  (cost=247952.44..300624.65 rows=29121 width=27) (actual time=1518.896..2003.075 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.460..285.840 rows=1500000 loops=1)
                     ->  Hash  (cost=247588.35..247588.35 rows=29127 width=15) (actual time=1518.324..1518.324 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247588.35 rows=29127 width=15) (actual time=1.650..1509.389 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 13.489 ms
 Execution Time: 2015.876 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302783.94..302867.15 rows=1 width=27) (actual time=1572.401..1572.403 rows=1 loops=1)
   ->  GroupAggregate  (cost=302783.94..303366.43 rows=7 width=27) (actual time=1572.400..1572.401 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302783.94..302856.74 rows=29121 width=27) (actual time=1567.552..1568.136 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2945kB
               ->  Hash Join  (cost=247952.44..300624.65 rows=29121 width=27) (actual time=1292.671..1562.043 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.003..81.658 rows=1500000 loops=1)
                     ->  Hash  (cost=247588.35..247588.35 rows=29127 width=15) (actual time=1292.621..1292.621 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247588.35 rows=29127 width=15) (actual time=0.107..1284.087 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 0.767 ms
 Execution Time: 1572.458 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1445.373..1445.375 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1445.371..1445.373 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1445.345..1445.352 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1405.017..1428.495 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=33.961..1048.986 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.503..616.717 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.101..33.101 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..16.243 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 12.794 ms
 Execution Time: 1446.418 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1247.117..1247.120 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1247.116..1247.118 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1247.091..1247.098 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1207.172..1230.426 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=29.178..869.846 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.011..466.801 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.791..28.792 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..12.961 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.719 ms
 Execution Time: 1248.224 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76441.27..76441.29 rows=1 width=32) (actual time=1321.674..1321.676 rows=1 loops=1)
   ->  Aggregate  (cost=76441.27..76441.29 rows=1 width=32) (actual time=1321.673..1321.675 rows=1 loops=1)
         ->  Hash Join  (cost=9788.70..75143.26 rows=74172 width=33) (actual time=107.660..1257.289 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1189.70..66349.56 rows=74172 width=16) (actual time=19.525..1120.068 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1171.15 rows=74172 width=0) (actual time=12.888..12.889 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=87.949..87.949 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.360..53.841 rows=200000 loops=1)
 Planning Time: 16.677 ms
 Execution Time: 1321.757 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76441.27..76441.29 rows=1 width=32) (actual time=187.403..187.405 rows=1 loops=1)
   ->  Aggregate  (cost=76441.27..76441.29 rows=1 width=32) (actual time=187.402..187.403 rows=1 loops=1)
         ->  Hash Join  (cost=9788.70..75143.26 rows=74172 width=33) (actual time=71.990..154.542 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1189.70..66349.56 rows=74172 width=16) (actual time=13.422..68.208 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1171.15 rows=74172 width=0) (actual time=7.559..7.559 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=58.389..58.390 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..27.513 rows=200000 loops=1)
 Planning Time: 1.101 ms
 Execution Time: 187.463 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244625.36..244634.25 rows=1 width=103) (actual time=2336.876..2336.879 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122361.56..122361.57 rows=1 width=32) (actual time=212.364..212.365 rows=1 loops=1)
           ->  HashAggregate  (cost=122111.66..122236.61 rows=9996 width=36) (actual time=208.983..211.773 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3733.06..119784.22 rows=232744 width=16) (actual time=28.489..98.449 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.87 rows=232744 width=0) (actual time=18.348..18.348 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122263.79..122708.04 rows=50 width=103) (actual time=2336.874..2336.876 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.355..4.897 rows=8449 loops=1)
         ->  Sort  (cost=122263.51..122263.63 rows=50 width=36) (actual time=2331.445..2331.446 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122111.66..122262.10 rows=50 width=36) (actual time=2328.900..2331.437 rows=1 loops=1)
                     ->  HashAggregate  (cost=122111.66..122261.60 rows=50 width=36) (actual time=2328.899..2331.435 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3733.06..119784.22 rows=232744 width=16) (actual time=41.731..1892.485 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.87 rows=232744 width=0) (actual time=30.607..30.607 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 10.972 ms
 Execution Time: 2337.610 ms
(30 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=244625.36..244634.25 rows=1 width=103) (actual time=465.533..465.536 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122361.56..122361.57 rows=1 width=32) (actual time=217.216..217.218 rows=1 loops=1)
           ->  HashAggregate  (cost=122111.66..122236.61 rows=9996 width=36) (actual time=213.751..216.618 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3733.06..119784.22 rows=232744 width=16) (actual time=28.453..98.439 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.87 rows=232744 width=0) (actual time=18.281..18.281 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=122263.79..122708.04 rows=50 width=103) (actual time=465.531..465.532 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.007..1.313 rows=8449 loops=1)
         ->  Sort  (cost=122263.51..122263.63 rows=50 width=36) (actual time=463.720..463.721 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=122111.66..122262.10 rows=50 width=36) (actual time=461.208..463.715 rows=1 loops=1)
                     ->  HashAggregate  (cost=122111.66..122261.60 rows=50 width=36) (actual time=461.207..463.713 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3733.06..119784.22 rows=232744 width=16) (actual time=30.408..127.837 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3674.87 rows=232744 width=0) (actual time=20.104..20.104 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.708 ms
 Execution Time: 465.905 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33817.51..33817.51 rows=1 width=44) (actual time=616.642..616.645 rows=1 loops=1)
   ->  Sort  (cost=33817.51..33857.39 rows=15951 width=44) (actual time=616.641..616.643 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32840.12..33737.76 rows=15951 width=44) (actual time=563.327..612.863 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32840.12..32987.75 rows=59050 width=40) (actual time=563.302..571.376 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12797kB
                     ->  Hash Join  (cost=9816.49..28160.51 rows=59050 width=40) (actual time=87.049..300.469 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=5.999..144.842 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.179..5.697 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29525 width=40) (actual time=81.009..81.010 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29525 width=40) (actual time=0.466..74.482 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 14.893 ms
 Execution Time: 616.702 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33817.51..33817.51 rows=1 width=44) (actual time=560.602..560.605 rows=1 loops=1)
   ->  Sort  (cost=33817.51..33857.39 rows=15951 width=44) (actual time=560.601..560.603 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32840.12..33737.76 rows=15951 width=44) (actual time=507.268..556.832 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32840.12..32987.75 rows=59050 width=40) (actual time=507.244..515.419 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12797kB
                     ->  Hash Join  (cost=9816.49..28160.51 rows=59050 width=40) (actual time=52.538..245.188 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.090..123.371 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.083..2.073 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29525 width=40) (actual time=50.420..50.421 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29525 width=40) (actual time=0.007..45.236 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 1.074 ms
 Execution Time: 560.652 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=223222.62..223222.64 rows=1 width=32) (actual time=3883.104..3883.107 rows=1 loops=1)
   ->  Aggregate  (cost=223222.62..223222.64 rows=1 width=32) (actual time=3883.103..3883.105 rows=1 loops=1)
         ->  Nested Loop  (cost=209680.78..223217.76 rows=1945 width=8) (actual time=3301.457..3882.894 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=209680.35..215161.74 rows=194 width=40) (actual time=3300.729..3799.210 rows=208 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202578.90..205555.21 rows=198421 width=36) (actual time=3245.360..3731.690 rows=200000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Batches: 5  Memory Usage: 65585kB  Disk Usage: 56504kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172572.60 rows=6001260 width=9) (actual time=0.703..743.038 rows=6001215 loops=1)
                     ->  Hash  (cost=7099.00..7099.00 rows=196 width=4) (actual time=55.153..55.154 rows=208 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 16kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=196 width=4) (actual time=0.804..55.037 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.259..0.401 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 12.302 ms
 Execution Time: 3891.959 ms
(21 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=223222.62..223222.64 rows=1 width=32) (actual time=3501.841..3501.844 rows=1 loops=1)
   ->  Aggregate  (cost=223222.62..223222.64 rows=1 width=32) (actual time=3501.840..3501.842 rows=1 loops=1)
         ->  Nested Loop  (cost=209680.78..223217.76 rows=1945 width=8) (actual time=3006.681..3501.735 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Hash Join  (cost=209680.35..215161.74 rows=194 width=40) (actual time=3006.649..3497.267 rows=208 loops=1)
                     Hash Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202578.90..205555.21 rows=198421 width=36) (actual time=2979.476..3458.107 rows=200000 loops=1)
                           Group Key: lineitem_1.l_partkey
                           Batches: 5  Memory Usage: 65585kB  Disk Usage: 56504kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172572.60 rows=6001260 width=9) (actual time=0.030..540.584 rows=6001215 loops=1)
                     ->  Hash  (cost=7099.00..7099.00 rows=196 width=4) (actual time=26.954..26.955 rows=208 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 16kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=196 width=4) (actual time=0.115..26.887 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.009..0.021 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 0.908 ms
 Execution Time: 3510.261 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799671.87..799672.12 rows=100 width=71) (actual time=4567.544..4567.550 rows=9 loops=1)
   ->  Sort  (cost=799671.87..804672.92 rows=2000420 width=71) (actual time=4567.542..4567.547 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=663048.38..723217.26 rows=2000420 width=71) (actual time=4566.797..4567.498 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=340209.85..555291.38 rows=2000420 width=44) (actual time=3809.933..4566.717 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172572.60 rows=6001260 width=9) (actual time=0.669..325.676 rows=6001215 loops=1)
                     ->  Hash  (cost=333958.54..333958.54 rows=500105 width=43) (actual time=3606.540..3606.543 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=287577.22..333958.54 rows=500105 width=43) (actual time=3249.014..3606.510 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280605.22..325673.73 rows=500105 width=24) (actual time=3178.853..3536.338 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.512..275.892 rows=1500000 loops=1)
                                       ->  Hash  (cost=274353.91..274353.91 rows=500105 width=4) (actual time=3079.197..3079.198 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269352.86 rows=500105 width=4) (actual time=657.977..3079.173 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216841.83 rows=6001260 width=9) (actual time=0.019..1668.137 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.786..69.786 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.352..44.027 rows=150000 loops=1)
 Planning Time: 16.787 ms
 Execution Time: 4568.900 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799671.87..799672.12 rows=100 width=71) (actual time=3443.641..3443.647 rows=9 loops=1)
   ->  Sort  (cost=799671.87..804672.92 rows=2000420 width=71) (actual time=3443.639..3443.644 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=663048.38..723217.26 rows=2000420 width=71) (actual time=3442.896..3443.597 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=340209.85..555291.38 rows=2000420 width=44) (actual time=2685.080..3442.818 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172572.60 rows=6001260 width=9) (actual time=0.016..327.155 rows=6001215 loops=1)
                     ->  Hash  (cost=333958.54..333958.54 rows=500105 width=43) (actual time=2482.522..2482.525 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=287577.22..333958.54 rows=500105 width=43) (actual time=2271.642..2482.503 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280605.22..325673.73 rows=500105 width=24) (actual time=2226.672..2437.524 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..82.089 rows=1500000 loops=1)
                                       ->  Hash  (cost=274353.91..274353.91 rows=500105 width=4) (actual time=2169.578..2169.579 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269352.86 rows=500105 width=4) (actual time=460.212..2169.561 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216841.83 rows=6001260 width=9) (actual time=0.017..835.528 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.559..44.560 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.011..19.545 rows=150000 loops=1)
 Planning Time: 1.257 ms
 Execution Time: 3444.743 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=35440.26..35440.27 rows=1 width=32) (actual time=2412.548..2412.549 rows=1 loops=1)
   ->  Aggregate  (cost=35440.26..35440.27 rows=1 width=32) (actual time=2412.547..2412.547 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35439.38 rows=117 width=12) (actual time=11.400..2412.202 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=490 width=30) (actual time=0.976..84.137 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.60 rows=1 width=21) (actual time=4.096..4.590 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 13.423 ms
 Execution Time: 2413.245 ms
(12 rows)

SET
SET
SET


 Limit  (cost=35440.26..35440.27 rows=1 width=32) (actual time=63.439..63.440 rows=1 loops=1)
   ->  Aggregate  (cost=35440.26..35440.27 rows=1 width=32) (actual time=63.438..63.438 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35439.38 rows=117 width=12) (actual time=0.321..63.347 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=490 width=30) (actual time=0.212..46.530 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.60 rows=1 width=21) (actual time=0.029..0.033 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 0.959 ms
 Execution Time: 63.480 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216168.64..216168.65 rows=1 width=51) (actual time=4792.277..4792.281 rows=1 loops=1)
   ->  Sort  (cost=216168.64..216168.65 rows=1 width=51) (actual time=4792.276..4792.279 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186334.35..216168.63 rows=1 width=51) (actual time=4624.058..4792.052 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.582..3.823 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.243..0.246 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.332..2.800 rows=10000 loops=1)
               ->  Materialize  (cost=186334.35..215713.32 rows=1 width=8) (actual time=8.035..10.698 rows=4320 loops=438)
                     ->  Nested Loop  (cost=186334.35..215713.32 rows=1 width=8) (actual time=3519.421..4617.268 rows=5898 loops=1)
                           ->  Hash Join  (cost=186333.93..208718.58 rows=4908 width=44) (actual time=3518.909..4119.913 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179709.68..195959.33 rows=485939 width=40) (actual time=3468.243..4020.182 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14712.44..141035.87 rows=917562 width=13) (actual time=130.615..2948.206 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14483.05 rows=917562 width=0) (actual time=111.573..111.573 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=50.640..50.641 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.344..49.981 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.083..0.083 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 18.490 ms
 Execution Time: 4797.565 ms
(37 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=216168.64..216168.65 rows=1 width=51) (actual time=1454.455..1454.458 rows=1 loops=1)
   ->  Sort  (cost=216168.64..216168.65 rows=1 width=51) (actual time=1454.453..1454.456 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186334.35..216168.63 rows=1 width=51) (actual time=1288.535..1454.271 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.710 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.587 rows=10000 loops=1)
               ->  Materialize  (cost=186334.35..215713.32 rows=1 width=8) (actual time=1.657..3.086 rows=4320 loops=438)
                     ->  Nested Loop  (cost=186334.35..215713.32 rows=1 width=8) (actual time=725.763..1285.143 rows=5898 loops=1)
                           ->  Hash Join  (cost=186333.93..208718.58 rows=4908 width=44) (actual time=725.740..1263.055 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179709.68..195959.33 rows=485939 width=40) (actual time=703.925..1202.680 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14712.44..141035.87 rows=917562 width=13) (actual time=91.572..309.564 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14483.05 rows=917562 width=0) (actual time=73.151..73.151 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=21.794..21.795 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.029..21.414 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.599 ms
 Execution Time: 1459.161 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=362247.53..362247.53 rows=1 width=34) (actual time=2637.274..2637.288 rows=100 loops=1)
   ->  Sort  (cost=362247.53..362247.53 rows=1 width=34) (actual time=2637.273..2637.281 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=362247.50..362247.52 rows=1 width=34) (actual time=2636.217..2636.872 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=362247.50..362247.50 rows=1 width=26) (actual time=2636.208..2636.377 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 490kB
                     ->  Nested Loop Semi Join  (cost=197112.65..362247.49 rows=1 width=26) (actual time=1496.833..2622.795 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197112.22..362244.10 rows=1 width=38) (actual time=1496.797..2608.449 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197111.78..245151.74 rows=39333 width=38) (actual time=1495.848..1999.318 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=737500 width=4) (actual time=0.406..360.194 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196111.57..196111.57 rows=80017 width=34) (actual time=1495.345..1495.348 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196111.57 rows=80017 width=34) (actual time=7.355..1455.746 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187575.75 rows=2000420 width=8) (actual time=0.523..1168.060 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=6.747..6.749 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=1.007..6.611 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.181..0.186 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.820..6.333 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.479..0.479 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.008..0.008 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 15.893 ms
 Execution Time: 2637.696 ms
(44 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=362247.53..362247.53 rows=1 width=34) (actual time=1750.092..1750.106 rows=100 loops=1)
   ->  Sort  (cost=362247.53..362247.53 rows=1 width=34) (actual time=1750.090..1750.098 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=362247.50..362247.52 rows=1 width=34) (actual time=1749.032..1749.689 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=362247.50..362247.50 rows=1 width=26) (actual time=1749.024..1749.192 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 490kB
                     ->  Nested Loop Semi Join  (cost=197112.65..362247.49 rows=1 width=26) (actual time=1265.580..1736.330 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197112.22..362244.10 rows=1 width=38) (actual time=1265.564..1725.651 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197111.78..245151.74 rows=39333 width=38) (actual time=1265.441..1563.954 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=737500 width=4) (actual time=0.012..175.442 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196111.57..196111.57 rows=80017 width=34) (actual time=1265.362..1265.364 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196111.57 rows=80017 width=34) (actual time=0.474..1228.048 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187575.75 rows=2000420 width=8) (actual time=0.031..962.012 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.421..0.422 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.047..0.363 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.041..0.314 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.373 ms
 Execution Time: 1750.225 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16079.65..16079.68 rows=1 width=72) (actual time=195.532..195.534 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.44..7546.45 rows=1 width=32) (actual time=99.875..99.876 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4774 width=6) (actual time=0.016..96.067 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8533.20..8553.63 rows=743 width=72) (actual time=195.531..195.531 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8533.20..8535.06 rows=743 width=38) (actual time=195.333..195.370 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 542kB
               ->  Nested Loop Anti Join  (cost=0.43..8497.77 rows=743 width=38) (actual time=100.207..193.320 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=100.191..152.432 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 14.754 ms
 Execution Time: 196.249 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16079.65..16079.68 rows=1 width=72) (actual time=152.921..152.923 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.44..7546.45 rows=1 width=32) (actual time=73.295..73.296 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4774 width=6) (actual time=0.007..69.903 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8533.20..8553.63 rows=743 width=72) (actual time=152.920..152.920 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8533.20..8535.06 rows=743 width=38) (actual time=152.723..152.760 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 542kB
               ->  Nested Loop Anti Join  (cost=0.43..8497.77 rows=743 width=38) (actual time=73.333..150.932 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=73.318..123.229 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.934 ms
 Execution Time: 152.966 ms
(20 rows)

