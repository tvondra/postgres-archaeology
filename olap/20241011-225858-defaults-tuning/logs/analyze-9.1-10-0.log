query 1 run 1
SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4243093.16..4243093.16 rows=1 width=25) (actual time=177735.188..177735.189 rows=1 loops=1)
   ->  Sort  (cost=4243093.16..4243093.17 rows=6 width=25) (actual time=177735.188..177735.188 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4243093.02..4243093.12 rows=6 width=25) (actual time=177735.153..177735.158 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1874967.10 rows=59203148 width=25) (actual time=0.471..12572.271 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 177735.278 ms
(8 rows)

SET
SET
                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4243093.16..4243093.16 rows=1 width=25) (actual time=176712.809..176712.810 rows=1 loops=1)
   ->  Sort  (cost=4243093.16..4243093.17 rows=6 width=25) (actual time=176712.808..176712.808 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=4243093.02..4243093.12 rows=6 width=25) (actual time=176712.780..176712.784 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..1874967.10 rows=59203148 width=25) (actual time=0.021..10814.508 rows=59284448 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 176712.862 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1071560.26..1071560.27 rows=1 width=192) (actual time=6696.493..6696.503 rows=100 loops=1)
   ->  Sort  (cost=1071560.26..1071560.27 rows=1 width=192) (actual time=6696.492..6696.496 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=558046.56..1071560.25 rows=1 width=192) (actual time=4643.324..6693.049 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89211.67 rows=7418 width=30) (actual time=0.013..805.889 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=558046.56..566046.69 rows=1600026 width=172) (actual time=4642.498..5051.011 rows=1603828 loops=1)
                     ->  Sort  (cost=558046.56..562046.62 rows=1600026 width=172) (actual time=4642.495..4905.023 rows=1603828 loops=1)
                           Sort Key: public.partsupp.ps_partkey
                           Sort Method: external sort  Disk: 293160kB
                           ->  Hash Join  (cost=4048.53..305272.57 rows=1600026 width=172) (actual time=41.184..3204.474 rows=1604080 loops=1)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255223.29 rows=8000129 width=14) (actual time=0.001..1046.275 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166) (actual time=41.172..41.172 rows=20051 loops=1)
                                       Buckets: 2048  Batches: 1  Memory Usage: 3955kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166) (actual time=0.012..36.150 rows=20051 loops=1)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..24.795 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.010..0.010 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.005..0.009 rows=5 loops=1)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=69.44..69.45 rows=1 width=6) (actual time=0.102..0.102 rows=1 loops=6398)
                       ->  Nested Loop  (cost=1.56..69.43 rows=4 width=6) (actual time=0.091..0.100 rows=2 loops=6398)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..68.13 rows=19 width=10) (actual time=0.085..0.098 rows=4 loops=6398)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..66.31 rows=19 width=10) (actual time=0.085..0.097 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=19 width=10) (actual time=0.081..0.082 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.008..0.008 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.005 rows=25 loops=1)
 Total runtime: 6733.485 ms
(47 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1071560.26..1071560.27 rows=1 width=192) (actual time=5311.274..5311.286 rows=100 loops=1)
   ->  Sort  (cost=1071560.26..1071560.27 rows=1 width=192) (actual time=5311.273..5311.279 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=558046.56..1071560.25 rows=1 width=192) (actual time=4038.627..5308.923 rows=4737 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using part_pkey on part  (cost=0.00..89211.67 rows=7418 width=30) (actual time=0.017..591.907 rows=8046 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
               ->  Materialize  (cost=558046.56..566046.69 rows=1600026 width=172) (actual time=4038.505..4435.674 rows=1603828 loops=1)
                     ->  Sort  (cost=558046.56..562046.62 rows=1600026 width=172) (actual time=4038.503..4293.445 rows=1603828 loops=1)
                           Sort Key: public.partsupp.ps_partkey
                           Sort Method: external sort  Disk: 293160kB
                           ->  Hash Join  (cost=4048.53..305272.57 rows=1600026 width=172) (actual time=29.782..2627.040 rows=1604080 loops=1)
                                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                                 ->  Seq Scan on partsupp  (cost=0.00..255223.29 rows=8000129 width=14) (actual time=0.002..764.155 rows=8000000 loops=1)
                                 ->  Hash  (cost=3798.53..3798.53 rows=20000 width=166) (actual time=29.769..29.769 rows=20051 loops=1)
                                       Buckets: 2048  Batches: 1  Memory Usage: 3955kB
                                       ->  Hash Join  (cost=2.53..3798.53 rows=20000 width=166) (actual time=0.014..24.961 rows=20051 loops=1)
                                             Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..6.324 rows=100000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.012..0.012 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.011 rows=5 loops=1)
                                                         Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=69.44..69.45 rows=1 width=6) (actual time=0.016..0.016 rows=1 loops=6398)
                       ->  Nested Loop  (cost=1.56..69.43 rows=4 width=6) (actual time=0.010..0.015 rows=2 loops=6398)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=6398)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Hash Join  (cost=1.56..68.13 rows=19 width=10) (actual time=0.006..0.013 rows=4 loops=6398)
                                   Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                   ->  Nested Loop  (cost=0.00..66.31 rows=19 width=10) (actual time=0.006..0.012 rows=4 loops=6398)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.91 rows=19 width=10) (actual time=0.003..0.004 rows=4 loops=6398)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=25592)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.009..0.009 rows=25 loops=1)
                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.007 rows=25 loops=1)
 Total runtime: 5348.105 ms
(47 rows)

query 3 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3524284.92..3524284.94 rows=10 width=24) (actual time=30900.590..30900.592 rows=10 loops=1)
   ->  Sort  (cost=3524284.92..3532169.02 rows=3153643 width=24) (actual time=30900.590..30900.591 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3369410.64..3456135.83 rows=3153643 width=24) (actual time=30679.639..30880.367 rows=113934 loops=1)
               ->  Sort  (cost=3369410.64..3377294.75 rows=3153643 width=24) (actual time=30679.624..30705.277 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: external sort  Disk: 10920kB
                     ->  Hash Join  (cost=631975.75..2987419.40 rows=3153643 width=24) (actual time=11086.387..30451.226 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874967.10 rows=32693630 width=16) (actual time=0.003..11963.484 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=606824.47..606824.47 rows=1446903 width=12) (actual time=11083.722..11083.722 rows=1451805 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 15620kB
                                 ->  Hash Join  (cost=143340.74..606824.47 rows=1446903 width=12) (actual time=1916.814..10810.599 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84850.34..435521.53 rows=7152255 width=16) (actual time=1397.435..5247.061 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83062.28 rows=7152255 width=0) (actual time=1341.448..1341.448 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.23..54697.23 rows=303454 width=4) (actual time=519.078..519.078 rows=300276 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             ->  Seq Scan on customer  (cost=0.00..54697.23 rows=303454 width=4) (actual time=0.003..472.290 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 30902.236 ms
(25 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3524284.92..3524284.94 rows=10 width=24) (actual time=26388.469..26388.470 rows=10 loops=1)
   ->  Sort  (cost=3524284.92..3532169.02 rows=3153643 width=24) (actual time=26388.467..26388.467 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=3369410.64..3456135.83 rows=3153643 width=24) (actual time=26169.464..26368.433 rows=113934 loops=1)
               ->  Sort  (cost=3369410.64..3377294.75 rows=3153643 width=24) (actual time=26169.449..26195.253 rows=301530 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: external sort  Disk: 10920kB
                     ->  Hash Join  (cost=631975.75..2987419.40 rows=3153643 width=24) (actual time=8595.923..25942.123 rows=301530 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1874967.10 rows=32693630 width=16) (actual time=0.003..10048.626 rows=32534229 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=606824.47..606824.47 rows=1446903 width=12) (actual time=8595.247..8595.247 rows=1451805 loops=1)
                                 Buckets: 131072  Batches: 4  Memory Usage: 15620kB
                                 ->  Hash Join  (cost=143340.74..606824.47 rows=1446903 width=12) (actual time=1695.692..8348.353 rows=1451805 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=84850.34..435521.53 rows=7152255 width=16) (actual time=1306.229..3115.870 rows=7239437 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..83062.28 rows=7152255 width=0) (actual time=1250.085..1250.085 rows=7239437 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=54697.23..54697.23 rows=303454 width=4) (actual time=389.409..389.409 rows=300276 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10557kB
                                             ->  Seq Scan on customer  (cost=0.00..54697.23 rows=303454 width=4) (actual time=0.002..348.061 rows=300276 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 26390.046 ms
(25 rows)

query 4 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3106347.10..3106347.10 rows=1 width=16) (actual time=23657.381..23657.382 rows=1 loops=1)
   ->  Sort  (cost=3106347.10..3106347.10 rows=1 width=16) (actual time=23657.380..23657.380 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3106347.08..3106347.09 rows=1 width=16) (actual time=23657.350..23657.351 rows=5 loops=1)
               ->  Merge Semi Join  (cost=39.53..3103504.84 rows=568447 width=16) (actual time=0.068..23519.266 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..622965.05 rows=568579 width=20) (actual time=0.009..3874.953 rows=560424 loops=1)
                           Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2421619.96 rows=19995309 width=4) (actual time=0.003..17620.040 rows=37929279 loops=1)
                           Filter: (l_commitdate < l_receiptdate)
 Total runtime: 23657.442 ms
(12 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3106347.10..3106347.10 rows=1 width=16) (actual time=20182.962..20182.963 rows=1 loops=1)
   ->  Sort  (cost=3106347.10..3106347.10 rows=1 width=16) (actual time=20182.960..20182.960 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3106347.08..3106347.09 rows=1 width=16) (actual time=20182.932..20182.933 rows=5 loops=1)
               ->  Merge Semi Join  (cost=39.53..3103504.84 rows=568447 width=16) (actual time=0.041..20053.000 rows=513822 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..622965.05 rows=568579 width=20) (actual time=0.008..3225.748 rows=560424 loops=1)
                           Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2421619.96 rows=19995309 width=4) (actual time=0.004..14868.738 rows=37929279 loops=1)
                           Filter: (l_commitdate < l_receiptdate)
 Total runtime: 20183.017 ms
(12 rows)

query 5 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2420260.83..2420260.83 rows=1 width=38) (actual time=26899.581..26899.581 rows=1 loops=1)
   ->  Sort  (cost=2420260.83..2420260.89 rows=25 width=38) (actual time=26899.580..26899.580 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2420260.46..2420260.71 rows=25 width=38) (actual time=26899.567..26899.567 rows=5 loops=1)
               ->  Hash Join  (cost=414513.03..2419536.20 rows=72426 width=38) (actual time=7020.369..26810.276 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=409792.03..2377858.02 rows=1811646 width=50) (actual time=6975.301..25792.468 rows=1815327 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1725002.28 rows=59985928 width=20) (actual time=0.001..6574.528 rows=59986052 loops=1)
                           ->  Hash  (cost=404129.31..404129.31 rows=453017 width=38) (actual time=6974.552..6974.552 rows=453399 loops=1)
                                 Buckets: 65536  Batches: 1  Memory Usage: 31880kB
                                 ->  Hash Join  (cost=95860.84..404129.31 rows=453017 width=38) (actual time=1078.796..6828.147 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32535.97..327780.21 rows=2265083 width=8) (actual time=499.040..4423.094 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31969.70 rows=2265083 width=0) (actual time=443.946..443.946 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59574.82..59574.82 rows=300004 width=38) (actual time=579.577..579.577 rows=299436 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 21055kB
                                             ->  Hash Join  (cost=2.53..59574.82 rows=300004 width=38) (actual time=0.027..522.588 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=8) (actual time=0.002..359.265 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.014..0.018 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=43.194..43.194 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..30.012 rows=100000 loops=1)
 Total runtime: 26900.040 ms
(36 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2420260.83..2420260.83 rows=1 width=38) (actual time=21802.223..21802.223 rows=1 loops=1)
   ->  Sort  (cost=2420260.83..2420260.89 rows=25 width=38) (actual time=21802.223..21802.223 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2420260.46..2420260.71 rows=25 width=38) (actual time=21802.209..21802.209 rows=5 loops=1)
               ->  Hash Join  (cost=414513.03..2419536.20 rows=72426 width=38) (actual time=4226.942..21724.505 rows=72033 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=409792.03..2377858.02 rows=1811646 width=50) (actual time=4189.497..20747.750 rows=1815327 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..1725002.28 rows=59985928 width=20) (actual time=0.001..4773.457 rows=59986052 loops=1)
                           ->  Hash  (cost=404129.31..404129.31 rows=453017 width=38) (actual time=4189.345..4189.345 rows=453399 loops=1)
                                 Buckets: 65536  Batches: 1  Memory Usage: 31880kB
                                 ->  Hash Join  (cost=95860.84..404129.31 rows=453017 width=38) (actual time=911.720..4077.938 rows=453399 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=32535.97..327780.21 rows=2265083 width=8) (actual time=470.844..1957.545 rows=2276638 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..31969.70 rows=2265083 width=0) (actual time=415.392..415.392 rows=2276638 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=59574.82..59574.82 rows=300004 width=38) (actual time=440.797..440.797 rows=299436 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 21055kB
                                             ->  Hash Join  (cost=2.53..59574.82 rows=300004 width=38) (actual time=0.025..389.413 rows=299436 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=8) (actual time=0.002..232.248 rows=1500000 loops=1)
                                                   ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.797..36.797 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..23.475 rows=100000 loops=1)
 Total runtime: 21802.702 ms
(36 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1090797.60..1090797.61 rows=1 width=12) (actual time=15167.844..15167.844 rows=1 loops=1)
   ->  Aggregate  (cost=1090797.60..1090797.61 rows=1 width=12) (actual time=15167.843..15167.843 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=211385.00..1084812.37 rows=1197045 width=12) (actual time=1416.585..14370.996 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211085.74 rows=1197045 width=0) (actual time=1365.007..1365.007 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 15167.875 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1090797.60..1090797.61 rows=1 width=12) (actual time=8715.600..8715.600 rows=1 loops=1)
   ->  Aggregate  (cost=1090797.60..1090797.61 rows=1 width=12) (actual time=8715.599..8715.599 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=211385.00..1084812.37 rows=1197045 width=12) (actual time=1275.821..8178.532 rows=1194558 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..211085.74 rows=1197045 width=0) (actual time=1225.079..1225.079 rows=1194558 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 8715.629 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2606785.00..2606785.00 rows=1 width=68) (actual time=39979.697..39979.697 rows=1 loops=1)
   ->  Sort  (cost=2606785.00..2606931.11 rows=58443 width=68) (actual time=39979.696..39979.696 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2605616.14..2606492.79 rows=58443 width=68) (actual time=39979.588..39979.662 rows=4 loops=1)
               ->  Hash Join  (cost=864566.02..2604739.50 rows=58443 width=68) (actual time=11792.890..39892.408 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=859845.02..2569894.57 rows=1462364 width=76) (actual time=11746.828..39136.067 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=293180.58..1692736.31 rows=18294182 width=24) (actual time=3181.815..24643.375 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..288607.03 rows=18294182 width=0) (actual time=3123.177..3123.177 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538795.48..538795.48 rows=1199037 width=60) (actual time=8564.121..8564.121 rows=1191175 loops=1)
                                 Buckets: 65536  Batches: 4  Memory Usage: 26805kB
                                 ->  Hash Join  (cost=59287.72..538795.48 rows=1199037 width=60) (actual time=525.014..8291.658 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411267.59 rows=14999959 width=8) (actual time=0.002..1606.252 rows=15000000 loops=1)
                                       ->  Hash  (cost=57788.91..57788.91 rows=119905 width=60) (actual time=524.990..524.990 rows=119622 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 10748kB
                                             ->  Hash Join  (cost=16.65..57788.91 rows=119905 width=60) (actual time=0.127..497.745 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=8) (actual time=0.001..355.458 rows=1500000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.122..0.122 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.080..0.121 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.000..0.003 rows=25 loops=1)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=42.580..42.580 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.003..29.332 rows=100000 loops=1)
 Total runtime: 39979.843 ms
(34 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2606785.00..2606785.00 rows=1 width=68) (actual time=28038.808..28038.808 rows=1 loops=1)
   ->  Sort  (cost=2606785.00..2606931.11 rows=58443 width=68) (actual time=28038.807..28038.807 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2605616.14..2606492.79 rows=58443 width=68) (actual time=28038.697..28038.771 rows=4 loops=1)
               ->  Hash Join  (cost=864566.02..2604739.50 rows=58443 width=68) (actual time=10332.367..27969.308 rows=57794 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=859845.02..2569894.57 rows=1462364 width=76) (actual time=10293.348..27244.893 rows=1448126 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=293180.58..1692736.31 rows=18294182 width=24) (actual time=2842.111..14389.931 rows=18230325 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..288607.03 rows=18294182 width=0) (actual time=2783.495..2783.495 rows=18230325 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=538795.48..538795.48 rows=1199037 width=60) (actual time=7450.918..7450.918 rows=1191175 loops=1)
                                 Buckets: 65536  Batches: 4  Memory Usage: 26805kB
                                 ->  Hash Join  (cost=59287.72..538795.48 rows=1199037 width=60) (actual time=394.823..7190.181 rows=1191175 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..411267.59 rows=14999959 width=8) (actual time=0.003..1211.995 rows=15000000 loops=1)
                                       ->  Hash  (cost=57788.91..57788.91 rows=119905 width=60) (actual time=394.801..394.801 rows=119622 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 10748kB
                                             ->  Hash Join  (cost=16.65..57788.91 rows=119905 width=60) (actual time=0.126..370.688 rows=119622 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=8) (actual time=0.001..234.014 rows=1500000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.122..0.122 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.080..0.121 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.000..0.003 rows=25 loops=1)
                     ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=36.870..36.870 rows=100000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..23.156 rows=100000 loops=1)
 Total runtime: 28039.125 ms
(34 rows)

query 8 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1245047.81..1245047.81 rows=1 width=42) (actual time=64840.875..64840.875 rows=1 loops=1)
   ->  Sort  (cost=1245047.81..1245049.65 rows=738 width=42) (actual time=64840.874..64840.874 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1245031.20..1245044.12 rows=738 width=42) (actual time=64840.864..64840.865 rows=2 loops=1)
               ->  Hash Join  (cost=505511.04..1244541.56 rows=24482 width=42) (actual time=10219.697..64778.690 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=505509.47..1244080.96 rows=24482 width=20) (actual time=10219.679..64753.105 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=501038.47..1239120.10 rows=24504 width=20) (actual time=10178.245..64690.857 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..728057.95 rows=399903 width=20) (actual time=1.201..54019.704 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65980.59 rows=13333 width=4) (actual time=0.692..508.379 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..49.28 rows=30 width=24) (actual time=0.304..4.092 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485958.61..485958.61 rows=919109 width=8) (actual time=10164.380..10164.380 rows=910360 loops=1)
                                       Buckets: 131072  Batches: 2  Memory Usage: 17786kB
                                       ->  Hash Join  (cost=129333.06..485958.61 rows=919109 width=8) (actual time=1507.437..9906.550 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=66008.19..396209.35 rows=4595544 width=12) (actual time=936.852..5420.993 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64859.31 rows=4595544 width=0) (actual time=881.320..881.320 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59574.82..59574.82 rows=300004 width=4) (actual time=570.565..570.565 rows=299436 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 10528kB
                                                   ->  Hash Join  (cost=2.53..59574.82 rows=300004 width=4) (actual time=0.020..524.142 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=8) (actual time=0.002..363.095 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.016..0.016 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.010..0.013 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=41.217..41.217 rows=100000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..29.340 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Total runtime: 64840.955 ms
(45 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1245047.81..1245047.81 rows=1 width=42) (actual time=8163.068..8163.069 rows=1 loops=1)
   ->  Sort  (cost=1245047.81..1245049.65 rows=738 width=42) (actual time=8163.068..8163.068 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=1245031.20..1245044.12 rows=738 width=42) (actual time=8163.055..8163.057 rows=2 loops=1)
               ->  Hash Join  (cost=505511.04..1244541.56 rows=24482 width=42) (actual time=6327.645..8135.432 rows=23842 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=505509.47..1244080.96 rows=24482 width=20) (actual time=6327.624..8123.513 rows=23842 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=501038.47..1239120.10 rows=24504 width=20) (actual time=6291.627..8070.898 rows=23842 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..728057.95 rows=399903 width=20) (actual time=0.087..1545.756 rows=389521 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..65980.59 rows=13333 width=4) (actual time=0.056..274.971 rows=13011 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..49.28 rows=30 width=24) (actual time=0.008..0.092 rows=30 loops=13011)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=485958.61..485958.61 rows=919109 width=8) (actual time=6291.033..6291.033 rows=910360 loops=1)
                                       Buckets: 131072  Batches: 2  Memory Usage: 17786kB
                                       ->  Hash Join  (cost=129333.06..485958.61 rows=919109 width=8) (actual time=1314.043..6110.916 rows=910360 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=66008.19..396209.35 rows=4595544 width=12) (actual time=873.874..2525.928 rows=4557513 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..64859.31 rows=4595544 width=0) (actual time=818.648..818.648 rows=4557513 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=59574.82..59574.82 rows=300004 width=4) (actual time=440.134..440.134 rows=299436 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 10528kB
                                                   ->  Hash Join  (cost=2.53..59574.82 rows=300004 width=4) (actual time=0.020..398.851 rows=299436 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=8) (actual time=0.001..242.761 rows=1500000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.015..0.015 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.010..0.015 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.002 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=3221.00..3221.00 rows=100000 width=8) (actual time=35.766..35.766 rows=100000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                                 ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=8) (actual time=0.002..23.682 rows=100000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.008 rows=25 loops=1)
 Total runtime: 8163.155 ms
(45 rows)

query 9 run 1
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3214202.69..3214202.69 rows=1 width=53) (actual time=198507.327..198507.327 rows=1 loops=1)
   ->  Sort  (cost=3214202.69..3214203.06 rows=148 width=53) (actual time=198507.327..198507.327 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3214199.73..3214201.95 rows=148 width=53) (actual time=198507.212..198507.236 rows=175 loops=1)
               ->  Nested Loop  (cost=3.49..3214197.14 rows=148 width=53) (actual time=0.787..191770.691 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=3.49..3214139.59 rows=148 width=31) (actual time=0.762..178446.009 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=3.49..3213567.26 rows=148 width=31) (actual time=0.247..128494.661 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=3.49..3213085.85 rows=148 width=35) (actual time=0.240..120546.464 rows=3248192 loops=1)
                                       ->  Merge Join  (cost=3.49..437486.17 rows=484856 width=18) (actual time=0.071..3392.888 rows=433248 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..84211.75 rows=121210 width=4) (actual time=0.010..847.674 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..328130.51 rows=8000129 width=14) (actual time=0.003..1830.615 rows=7999981 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=29) (actual time=0.040..0.268 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.85 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.004..0.010 rows=25 loops=1)
 Total runtime: 198507.399 ms
(24 rows)

SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3214202.69..3214202.69 rows=1 width=53) (actual time=79613.202..79613.202 rows=1 loops=1)
   ->  Sort  (cost=3214202.69..3214203.06 rows=148 width=53) (actual time=79613.201..79613.201 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=3214199.73..3214201.95 rows=148 width=53) (actual time=79613.101..79613.125 rows=175 loops=1)
               ->  Nested Loop  (cost=3.49..3214197.14 rows=148 width=53) (actual time=0.161..74343.413 rows=3248192 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=3.49..3214139.59 rows=148 width=31) (actual time=0.145..63410.721 rows=3248192 loops=1)
                           ->  Nested Loop  (cost=3.49..3213567.26 rows=148 width=31) (actual time=0.125..41879.846 rows=3248192 loops=1)
                                 ->  Nested Loop  (cost=3.49..3213085.85 rows=148 width=35) (actual time=0.120..35996.800 rows=3248192 loops=1)
                                       ->  Merge Join  (cost=3.49..437486.17 rows=484856 width=18) (actual time=0.095..2985.029 rows=433248 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..84211.75 rows=121210 width=4) (actual time=0.012..727.799 rows=108312 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..328130.51 rows=8000129 width=14) (actual time=0.004..1627.342 rows=7999981 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..5.71 rows=1 width=29) (actual time=0.013..0.074 rows=7 loops=433248)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.24 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3248192)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.00..3.85 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3248192)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=3248192)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 79613.284 ms
(24 rows)

query 10 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2646621.04..2646621.09 rows=20 width=182) (actual time=30777.114..30777.117 rows=20 loops=1)
   ->  Sort  (cost=2646621.04..2648035.21 rows=565666 width=182) (actual time=30777.113..30777.114 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2610356.40..2631568.88 rows=565666 width=182) (actual time=29055.966..30669.607 rows=381205 loops=1)
               ->  Sort  (cost=2610356.40..2611770.57 rows=565666 width=182) (actual time=29055.944..29667.017 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218224kB
                     ->  Hash Join  (cost=387474.37..2523991.42 rows=565666 width=182) (actual time=5840.544..23419.635 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387472.81..2516211.95 rows=565666 width=160) (actual time=5840.531..23209.323 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285548.40..2367342.47 rows=565666 width=16) (actual time=4851.706..21291.207 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874967.10 rows=14630568 width=16) (actual time=0.008..11056.056 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=278299.05..278299.05 rows=579948 width=8) (actual time=4850.779..4850.779 rows=573160 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 22390kB
                                             ->  Bitmap Heap Scan on orders  (cost=8331.83..278299.05 rows=579948 width=8) (actual time=166.649..4686.295 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8186.85 rows=579948 width=0) (actual time=116.612..116.612 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.18..50947.18 rows=1500018 width=148) (actual time=986.689..986.689 rows=1500000 loops=1)
                                       Buckets: 32768  Batches: 16  Memory Usage: 16828kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=148) (actual time=0.001..493.675 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Total runtime: 30812.367 ms
(29 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2646621.04..2646621.09 rows=20 width=182) (actual time=25106.390..25106.394 rows=20 loops=1)
   ->  Sort  (cost=2646621.04..2648035.21 rows=565666 width=182) (actual time=25106.388..25106.388 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  GroupAggregate  (cost=2610356.40..2631568.88 rows=565666 width=182) (actual time=23373.694..25002.582 rows=381205 loops=1)
               ->  Sort  (cost=2610356.40..2611770.57 rows=565666 width=182) (actual time=23373.671..23984.050 rows=1145402 loops=1)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     Sort Method: external merge  Disk: 218224kB
                     ->  Hash Join  (cost=387474.37..2523991.42 rows=565666 width=182) (actual time=2417.137..17728.467 rows=1145402 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=387472.81..2516211.95 rows=565666 width=160) (actual time=2417.123..17521.687 rows=1145402 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=285548.40..2367342.47 rows=565666 width=16) (actual time=1559.941..15750.508 rows=1145402 loops=1)
                                       Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                       ->  Seq Scan on lineitem  (cost=0.00..1874967.10 rows=14630568 width=16) (actual time=0.007..9044.843 rows=14808183 loops=1)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                       ->  Hash  (cost=278299.05..278299.05 rows=579948 width=8) (actual time=1559.604..1559.604 rows=573160 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 22390kB
                                             ->  Bitmap Heap Scan on orders  (cost=8331.83..278299.05 rows=579948 width=8) (actual time=154.278..1437.602 rows=573160 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8186.85 rows=579948 width=0) (actual time=104.195..104.195 rows=573160 loops=1)
                                                         Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=50947.18..50947.18 rows=1500018 width=148) (actual time=856.208..856.208 rows=1500000 loops=1)
                                       Buckets: 32768  Batches: 16  Memory Usage: 16828kB
                                       ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=148) (actual time=0.001..371.742 rows=1500000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 25143.030 ms
(29 rows)

query 11 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=685156.53..685156.53 rows=1 width=14) (actual time=3897.801..3897.801 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323147.77..323147.78 rows=1 width=10) (actual time=1709.434..1709.434 rows=1 loops=1)
           ->  Hash Join  (cost=2323.42..320747.73 rows=320005 width=10) (actual time=2.686..1562.203 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..255223.29 rows=8000129 width=14) (actual time=0.033..680.962 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.42..2273.42 rows=4000 width=4) (actual time=2.623..2.623 rows=4010 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 141kB
                       ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=4) (actual time=0.503..2.278 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=8) (actual time=0.492..1.881 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.315..0.315 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=362008.75..362808.76 rows=320005 width=14) (actual time=3897.800..3897.800 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=350008.56..360408.72 rows=320005 width=14) (actual time=3897.794..3897.794 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=350008.56..350808.57 rows=320005 width=14) (actual time=2017.341..2029.646 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 27326kB
                     ->  Hash Join  (cost=2323.42..320747.73 rows=320005 width=14) (actual time=26.005..1972.159 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255223.29 rows=8000129 width=18) (actual time=0.386..1006.060 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.42..2273.42 rows=4000 width=4) (actual time=25.534..25.534 rows=4010 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 141kB
                                 ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=4) (actual time=2.308..24.851 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.009 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=8) (actual time=2.300..24.151 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=2.077..2.077 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
 Total runtime: 3897.871 ms
(36 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=685156.53..685156.53 rows=1 width=14) (actual time=3522.615..3522.615 rows=0 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=323147.77..323147.78 rows=1 width=10) (actual time=1747.974..1747.974 rows=1 loops=1)
           ->  Hash Join  (cost=2323.42..320747.73 rows=320005 width=10) (actual time=2.732..1599.673 rows=320800 loops=1)
                 Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                 ->  Seq Scan on partsupp  (cost=0.00..255223.29 rows=8000129 width=14) (actual time=0.031..682.128 rows=8000000 loops=1)
                 ->  Hash  (cost=2273.42..2273.42 rows=4000 width=4) (actual time=2.671..2.671 rows=4010 loops=1)
                       Buckets: 1024  Batches: 1  Memory Usage: 141kB
                       ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=4) (actual time=0.504..2.306 rows=4010 loops=1)
                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=8) (actual time=0.493..1.904 rows=4010 loops=1)
                                   Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                   ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.318..0.318 rows=4010 loops=1)
                                         Index Cond: (s_nationkey = public.nation.n_nationkey)
   ->  Sort  (cost=362008.75..362808.76 rows=320005 width=14) (actual time=3522.614..3522.614 rows=0 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=350008.56..360408.72 rows=320005 width=14) (actual time=3522.608..3522.608 rows=0 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $1)
               ->  Sort  (cost=350008.56..350808.57 rows=320005 width=14) (actual time=1603.995..1616.180 rows=320800 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 27326kB
                     ->  Hash Join  (cost=2323.42..320747.73 rows=320005 width=14) (actual time=7.789..1559.854 rows=320800 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..255223.29 rows=8000129 width=18) (actual time=0.023..676.439 rows=8000000 loops=1)
                           ->  Hash  (cost=2273.42..2273.42 rows=4000 width=4) (actual time=7.737..7.737 rows=4010 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 141kB
                                 ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=4) (actual time=0.556..7.095 rows=4010 loops=1)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=8) (actual time=0.550..6.599 rows=4010 loops=1)
                                             Recheck Cond: (s_nationkey = public.nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.366..0.366 rows=4010 loops=1)
                                                   Index Cond: (s_nationkey = public.nation.n_nationkey)
 Total runtime: 3522.691 ms
(36 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3092436.89..3092436.89 rows=1 width=27) (actual time=20235.456..20235.457 rows=1 loops=1)
   ->  Sort  (cost=3092436.89..3092436.89 rows=1 width=27) (actual time=20235.455..20235.455 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=3092436.87..3092436.88 rows=1 width=27) (actual time=20235.427..20235.428 rows=2 loops=1)
               ->  Merge Join  (cost=2498529.73..3087836.22 rows=262894 width=27) (actual time=15402.355..20057.019 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..547965.25 rows=14999959 width=20) (actual time=0.005..3625.268 rows=14999967 loops=1)
                     ->  Sort  (cost=2498492.26..2499149.49 rows=262894 width=15) (actual time=15402.257..15431.848 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 26879kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474826.38 rows=262894 width=15) (actual time=0.735..15335.769 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 20235.529 ms
(14 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=3092436.89..3092436.89 rows=1 width=27) (actual time=17156.696..17156.696 rows=1 loops=1)
   ->  Sort  (cost=3092436.89..3092436.89 rows=1 width=27) (actual time=17156.695..17156.695 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=3092436.87..3092436.88 rows=1 width=27) (actual time=17156.669..17156.670 rows=2 loops=1)
               ->  Merge Join  (cost=2498529.73..3087836.22 rows=262894 width=27) (actual time=13364.213..16990.763 rows=311258 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..547965.25 rows=14999959 width=20) (actual time=0.004..2628.940 rows=14999967 loops=1)
                     ->  Sort  (cost=2498492.26..2499149.49 rows=262894 width=15) (actual time=13364.167..13392.155 rows=311258 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 26879kB
                           ->  Seq Scan on lineitem  (cost=0.00..2474826.38 rows=262894 width=15) (actual time=0.094..13302.710 rows=311258 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 17156.992 ms
(14 rows)

query 13 run 1
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2811621.19..2811621.19 rows=1 width=8) (actual time=25872.912..25872.912 rows=1 loops=1)
   ->  Sort  (cost=2811621.19..2811621.69 rows=200 width=8) (actual time=25872.910..25872.910 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2811618.19..2811620.19 rows=200 width=8) (actual time=25872.685..25872.689 rows=46 loops=1)
               ->  GroupAggregate  (cost=2368280.26..2789117.92 rows=1500018 width=8) (actual time=15599.142..25648.067 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2368280.26..2699125.44 rows=14998460 width=8) (actual time=15599.125..24379.925 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64622.08 rows=1500018 width=4) (actual time=0.005..526.957 rows=1500000 loops=1)
                           ->  Materialize  (cost=2368280.26..2443272.56 rows=14998460 width=8) (actual time=15599.115..21835.075 rows=14837583 loops=1)
                                 ->  Sort  (cost=2368280.26..2405776.41 rows=14998460 width=8) (actual time=15599.113..20484.595 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..448767.49 rows=14998460 width=8) (actual time=0.277..5333.384 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 25905.487 ms
(16 rows)

SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2811621.19..2811621.19 rows=1 width=8) (actual time=24967.389..24967.389 rows=1 loops=1)
   ->  Sort  (cost=2811621.19..2811621.69 rows=200 width=8) (actual time=24967.388..24967.388 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=2811618.19..2811620.19 rows=200 width=8) (actual time=24967.371..24967.375 rows=46 loops=1)
               ->  GroupAggregate  (cost=2368280.26..2789117.92 rows=1500018 width=8) (actual time=14921.213..24746.049 rows=1500000 loops=1)
                     ->  Merge Left Join  (cost=2368280.26..2699125.44 rows=14998460 width=8) (actual time=14921.197..23481.307 rows=15337604 loops=1)
                           Merge Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Index Scan using customer_pkey on customer  (cost=0.00..64622.08 rows=1500018 width=4) (actual time=0.004..388.015 rows=1500000 loops=1)
                           ->  Materialize  (cost=2368280.26..2443272.56 rows=14998460 width=8) (actual time=14921.187..21084.026 rows=14837583 loops=1)
                                 ->  Sort  (cost=2368280.26..2405776.41 rows=14998460 width=8) (actual time=14921.184..19744.060 rows=14837583 loops=1)
                                       Sort Key: orders.o_custkey
                                       Sort Method: external merge  Disk: 260904kB
                                       ->  Seq Scan on orders  (cost=0.00..448767.49 rows=14998460 width=8) (actual time=0.029..4881.979 rows=14837583 loops=1)
                                             Filter: ((o_comment)::text !~~ '%special%requests%'::text)
 Total runtime: 25002.637 ms
(16 rows)

query 14 run 1
SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=817858.93..817858.94 rows=1 width=33) (actual time=8765.329..8765.329 rows=1 loops=1)
   ->  Aggregate  (cost=817858.93..817858.94 rows=1 width=33) (actual time=8765.329..8765.329 rows=1 loops=1)
         ->  Hash Join  (cost=111650.59..804761.03 rows=748451 width=33) (actual time=1132.856..8054.422 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=11998.34..667286.63 rows=748451 width=16) (actual time=282.364..6217.789 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11811.22 rows=748451 width=0) (actual time=186.904..186.904 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.67..60980.67 rows=1999967 width=25) (actual time=849.751..849.751 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 28922kB
                     ->  Seq Scan on part  (cost=0.00..60980.67 rows=1999967 width=25) (actual time=0.003..535.155 rows=2000000 loops=1)
 Total runtime: 8765.434 ms
(12 rows)

SET
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=817858.93..817858.94 rows=1 width=33) (actual time=4525.842..4525.843 rows=1 loops=1)
   ->  Aggregate  (cost=817858.93..817858.94 rows=1 width=33) (actual time=4525.840..4525.840 rows=1 loops=1)
         ->  Hash Join  (cost=111650.59..804761.03 rows=748451 width=33) (actual time=967.732..3900.625 rows=772942 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=11998.34..667286.63 rows=748451 width=16) (actual time=273.341..2345.252 rows=772942 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..11811.22 rows=748451 width=0) (actual time=178.103..178.103 rows=772942 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=60980.67..60980.67 rows=1999967 width=25) (actual time=694.020..694.020 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 28922kB
                     ->  Seq Scan on part  (cost=0.00..60980.67 rows=1999967 width=25) (actual time=0.003..391.181 rows=2000000 loops=1)
 Total runtime: 4525.997 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2454607.40..2454608.57 rows=1 width=103) (actual time=22323.932..22323.932 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1218651.64..1218651.65 rows=1 width=32) (actual time=8154.936..8154.936 rows=1 loops=1)
           ->  HashAggregate  (cost=1218566.14..1218604.14 rows=3800 width=16) (actual time=8125.581..8148.732 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=36495.89..1195795.24 rows=2277090 width=16) (actual time=541.752..5989.384 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35926.61 rows=2277090 width=0) (actual time=489.182..489.182 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1235955.76..1240398.51 rows=3800 width=103) (actual time=22323.930..22323.930 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4135.75 rows=100000 width=71) (actual time=0.638..16.803 rows=69998 loops=1)
         ->  Sort  (cost=1235955.76..1235965.26 rows=3800 width=36) (actual time=22303.146..22303.146 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1235644.31..1235729.81 rows=3800 width=36) (actual time=22290.802..22302.899 rows=1 loops=1)
                     ->  HashAggregate  (cost=1235644.31..1235691.81 rows=3800 width=16) (actual time=22290.802..22302.899 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=36495.89..1195795.24 rows=2277090 width=16) (actual time=614.749..11649.846 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35926.61 rows=2277090 width=0) (actual time=561.821..561.821 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 22324.113 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2454607.40..2454608.57 rows=1 width=103) (actual time=16944.525..16944.526 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=1218651.64..1218651.65 rows=1 width=32) (actual time=8165.514..8165.514 rows=1 loops=1)
           ->  HashAggregate  (cost=1218566.14..1218604.14 rows=3800 width=16) (actual time=8136.162..8159.233 rows=100000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=36495.89..1195795.24 rows=2277090 width=16) (actual time=542.764..6008.897 rows=2265714 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35926.61 rows=2277090 width=0) (actual time=490.130..490.130 rows=2265714 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=1235955.76..1240398.51 rows=3800 width=103) (actual time=16944.525..16944.525 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4135.75 rows=100000 width=71) (actual time=0.041..10.398 rows=69998 loops=1)
         ->  Sort  (cost=1235955.76..1235965.26 rows=3800 width=36) (actual time=16930.152..16930.152 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=1235644.31..1235729.81 rows=3800 width=36) (actual time=16917.892..16930.146 rows=1 loops=1)
                     ->  HashAggregate  (cost=1235644.31..1235691.81 rows=3800 width=16) (actual time=16917.890..16930.143 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=36495.89..1195795.24 rows=2277090 width=16) (actual time=576.565..6586.924 rows=2265714 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..35926.61 rows=2277090 width=0) (actual time=524.270..524.270 rows=2265714 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 16944.963 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=498240.71..498240.71 rows=1 width=40) (actual time=20824.380..20824.381 rows=1 loops=1)
   ->  Sort  (cost=498240.71..498305.37 rows=25862 width=40) (actual time=20824.379..20824.379 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=490956.36..498111.40 rows=25862 width=40) (actual time=18468.029..20819.200 rows=27838 loops=1)
               ->  Sort  (cost=490956.36..492335.64 rows=551714 width=40) (actual time=18467.897..20471.029 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=97899.30..428640.85 rows=551714 width=40) (actual time=968.688..4657.396 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3471.03..278694.64 rows=4000064 width=8) (actual time=37.391..1752.851 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=1.092..37.350 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=90980.18..90980.18 rows=275848 width=40) (actual time=931.245..931.245 rows=296733 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 21497kB
                                 ->  Seq Scan on part  (cost=0.00..90980.18 rows=275848 width=40) (actual time=0.010..868.688 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20832.246 ms
(20 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=498240.71..498240.71 rows=1 width=40) (actual time=20201.958..20201.958 rows=1 loops=1)
   ->  Sort  (cost=498240.71..498305.37 rows=25862 width=40) (actual time=20201.956..20201.956 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=490956.36..498111.40 rows=25862 width=40) (actual time=17845.425..20196.749 rows=27838 loops=1)
               ->  Sort  (cost=490956.36..492335.64 rows=551714 width=40) (actual time=17845.292..19847.964 rows=1186319 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: external merge  Disk: 60504kB
                     ->  Hash Join  (cost=97899.30..428640.85 rows=551714 width=40) (actual time=751.970..4120.015 rows=1186319 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=3471.03..278694.64 rows=4000064 width=8) (actual time=26.265..1457.570 rows=7995520 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=10 width=4) (actual time=0.108..26.234 rows=56 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=90980.18..90980.18 rows=275848 width=40) (actual time=725.654..725.654 rows=296733 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 21497kB
                                 ->  Seq Scan on part  (cost=0.00..90980.18 rows=275848 width=40) (actual time=0.010..673.449 rows=296733 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 20210.384 ms
(20 rows)

query 17 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10805410.03..10805410.05 rows=1 width=8) (actual time=99433.150..99433.150 rows=1 loops=1)
   ->  Aggregate  (cost=10805410.03..10805410.05 rows=1 width=8) (actual time=99433.149..99433.149 rows=1 loops=1)
         ->  Nested Loop  (cost=10204736.34..10805361.46 rows=19428 width=8) (actual time=51242.622..99429.236 rows=5319 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10204736.34..10708801.50 rows=1943 width=40) (actual time=51242.203..98173.081 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10133647.79..10613073.92 rows=1968778 width=9) (actual time=50728.277..97567.379 rows=1999333 loops=1)
                           ->  Sort  (cost=10133647.79..10283612.61 rows=59985928 width=9) (actual time=50728.241..72376.338 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 Sort Method: external merge  Disk: 1113352kB
                                 ->  Seq Scan on lineitem  (cost=0.00..1725002.28 rows=59985928 width=9) (actual time=0.296..9375.221 rows=59986052 loops=1)
                     ->  Sort  (cost=71088.55..71093.49 rows=1974 width=4) (actual time=501.579..502.134 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70980.51 rows=1974 width=4) (actual time=0.929..500.802 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..49.25 rows=30 width=17) (actual time=0.356..0.615 rows=30 loops=1996)
                     Index Cond: (l_partkey = part.p_partkey)
 Total runtime: 99558.481 ms
(19 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=10805410.03..10805410.05 rows=1 width=8) (actual time=95053.454..95053.454 rows=1 loops=1)
   ->  Aggregate  (cost=10805410.03..10805410.05 rows=1 width=8) (actual time=95053.453..95053.453 rows=1 loops=1)
         ->  Nested Loop  (cost=10204736.34..10805361.46 rows=19428 width=8) (actual time=48540.369..95051.339 rows=5319 loops=1)
               Join Filter: (public.lineitem.l_quantity < ((0.2 * avg(public.lineitem.l_quantity))))
               ->  Merge Join  (cost=10204736.34..10708801.50 rows=1943 width=40) (actual time=48540.342..94977.750 rows=1996 loops=1)
                     Merge Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=10133647.79..10613073.92 rows=1968778 width=9) (actual time=48213.716..94560.812 rows=1999333 loops=1)
                           ->  Sort  (cost=10133647.79..10283612.61 rows=59985928 width=9) (actual time=48213.678..69449.318 rows=59965994 loops=1)
                                 Sort Key: public.lineitem.l_partkey
                                 Sort Method: external merge  Disk: 1113352kB
                                 ->  Seq Scan on lineitem  (cost=0.00..1725002.28 rows=59985928 width=9) (actual time=0.029..7935.195 rows=59986052 loops=1)
                     ->  Sort  (cost=71088.55..71093.49 rows=1974 width=4) (actual time=314.191..314.506 rows=1996 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 142kB
                           ->  Seq Scan on part  (cost=0.00..70980.51 rows=1974 width=4) (actual time=0.120..313.820 rows=1996 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..49.25 rows=30 width=17) (actual time=0.015..0.031 rows=30 loops=1996)
                     Index Cond: (l_partkey = part.p_partkey)
 Total runtime: 95177.558 ms
(19 rows)

query 18 run 1
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11874472.62..11874475.37 rows=100 width=44) (actual time=41058.938..41059.239 rows=99 loops=1)
   ->  GroupAggregate  (cost=11874472.62..12699279.13 rows=29992964 width=44) (actual time=41058.937..41059.232 rows=99 loops=1)
         ->  Sort  (cost=11874472.62..11949455.03 rows=29992964 width=44) (actual time=41058.927..41058.952 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78726.65..7556503.56 rows=29992964 width=44) (actual time=6642.061..41057.876 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=239.24..6459304.87 rows=29992964 width=25) (actual time=985.937..40329.749 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3719418.00 rows=7499980 width=24) (actual time=768.758..29954.931 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..547965.25 rows=14999959 width=20) (actual time=0.004..2739.649 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.00..2946496.83 rows=14996482 width=4) (actual time=666.532..26346.836 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.00..2759040.80 rows=14996482 width=9) (actual time=666.529..26346.654 rows=99 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2271655.14 rows=59985928 width=9) (actual time=0.003..11426.798 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2271655.14 rows=59985928 width=9) (actual time=0.007..7069.250 rows=59916431 loops=1)
                     ->  Hash  (cost=50947.18..50947.18 rows=1500018 width=23) (actual time=650.596..650.596 rows=1500000 loops=1)
                           Buckets: 65536  Batches: 4  Memory Usage: 20537kB
                           ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=23) (actual time=0.002..413.521 rows=1500000 loops=1)
 Total runtime: 41059.321 ms
(21 rows)

SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=11874472.62..11874475.37 rows=100 width=44) (actual time=37607.246..37607.549 rows=99 loops=1)
   ->  GroupAggregate  (cost=11874472.62..12699279.13 rows=29992964 width=44) (actual time=37607.245..37607.542 rows=99 loops=1)
         ->  Sort  (cost=11874472.62..11949455.03 rows=29992964 width=44) (actual time=37607.235..37607.261 rows=693 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 79kB
               ->  Hash Join  (cost=78726.65..7556503.56 rows=29992964 width=44) (actual time=5721.557..37606.193 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=239.24..6459304.87 rows=29992964 width=25) (actual time=854.805..37012.041 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.00..3719418.00 rows=7499980 width=24) (actual time=637.205..26684.862 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..547965.25 rows=14999959 width=20) (actual time=0.005..2130.699 rows=14982724 loops=1)
                                 ->  Materialize  (cost=0.00..2946496.83 rows=14996482 width=4) (actual time=563.120..23708.078 rows=99 loops=1)
                                       ->  GroupAggregate  (cost=0.00..2759040.80 rows=14996482 width=9) (actual time=563.118..23707.942 rows=99 loops=1)
                                             Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2271655.14 rows=59985928 width=9) (actual time=0.004..9025.425 rows=59986052 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..2271655.14 rows=59985928 width=9) (actual time=0.007..7043.834 rows=59916431 loops=1)
                     ->  Hash  (cost=50947.18..50947.18 rows=1500018 width=23) (actual time=518.555..518.555 rows=1500000 loops=1)
                           Buckets: 65536  Batches: 4  Memory Usage: 20537kB
                           ->  Seq Scan on customer  (cost=0.00..50947.18 rows=1500018 width=23) (actual time=0.003..289.216 rows=1500000 loops=1)
 Total runtime: 37607.612 ms
(21 rows)

query 19 run 1
SET
SET


 Limit  (cost=3129614.72..3129614.73 rows=1 width=12) (actual time=17896.588..17896.589 rows=1 loops=1)
   ->  Aggregate  (cost=3129614.72..3129614.73 rows=1 width=12) (actual time=17896.586..17896.586 rows=1 loops=1)
         ->  Hash Join  (cost=104652.17..3129606.98 rows=1032 width=12) (actual time=1071.437..17895.076 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924720.84 rows=1092681 width=21) (actual time=0.426..15758.375 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=65980.59..65980.59 rows=1999967 width=30) (actual time=1004.926..1004.926 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 31295kB
                     ->  Seq Scan on part  (cost=0.00..65980.59 rows=1999967 width=30) (actual time=0.002..638.580 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 17896.636 ms
(12 rows)

SET
SET


 Limit  (cost=3129614.72..3129614.73 rows=1 width=12) (actual time=15585.361..15585.362 rows=1 loops=1)
   ->  Aggregate  (cost=3129614.72..3129614.73 rows=1 width=12) (actual time=15585.359..15585.359 rows=1 loops=1)
         ->  Hash Join  (cost=104652.17..3129606.98 rows=1032 width=12) (actual time=870.630..15584.030 rows=1063 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..2924720.84 rows=1092681 width=21) (actual time=0.080..13665.963 rows=899485 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=65980.59..65980.59 rows=1999967 width=30) (actual time=816.652..816.652 rows=2000000 loops=1)
                     Buckets: 65536  Batches: 4  Memory Usage: 31295kB
                     ->  Seq Scan on part  (cost=0.00..65980.59 rows=1999967 width=30) (actual time=0.002..461.071 rows=2000000 loops=1)
                           Filter: (p_size >= 1)
 Total runtime: 15585.395 ms
(12 rows)

query 20 run 1
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2879739.74..2879739.75 rows=1 width=51) (actual time=57611.167..57611.167 rows=1 loops=1)
   ->  Sort  (cost=2879739.74..2879739.75 rows=1 width=51) (actual time=57611.166..57611.166 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2755718.73..2879739.73 rows=1 width=51) (actual time=34089.982..57609.072 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=55) (actual time=3.766..27.126 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=59) (actual time=3.759..26.176 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=1.835..1.835 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2755669.47..2875666.39 rows=30 width=8) (actual time=8.005..11.215 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2755669.47..2875666.24 rows=30 width=8) (actual time=32780.295..40066.097 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2573279.85..2676608.88 rows=918481 width=13) (actual time=27267.091..34151.908 rows=5448473 loops=1)
                                 ->  Sort  (cost=2573279.85..2596241.85 rows=9184802 width=13) (actual time=27267.077..30534.326 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=147196.94..1410111.97 rows=9184802 width=13) (actual time=1906.398..19277.211 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..144900.73 rows=9184802 width=0) (actual time=1812.360..1812.360 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=182389.63..183353.09 rows=385384 width=16) (actual time=5512.812..5520.558 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=66031.09..146633.82 rows=385384 width=16) (actual time=336.802..5460.334 rows=86872 loops=1)
                                       ->  HashAggregate  (cost=66031.09..66233.11 rows=20202 width=4) (actual time=336.014..345.071 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..65980.59 rows=20202 width=4) (actual time=0.089..329.621 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.74 rows=19 width=12) (actual time=0.217..0.234 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 57640.920 ms
(35 rows)

SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2879739.74..2879739.75 rows=1 width=51) (actual time=44016.801..44016.801 rows=1 loops=1)
   ->  Sort  (cost=2879739.74..2879739.75 rows=1 width=51) (actual time=44016.801..44016.801 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=2755718.73..2879739.73 rows=1 width=51) (actual time=20501.437..44014.862 rows=1821 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=55) (actual time=0.627..10.311 rows=4095 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=59) (actual time=0.619..9.572 rows=4095 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.433..0.433 rows=4095 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=2755669.47..2875666.39 rows=30 width=8) (actual time=4.686..7.901 rows=44445 loops=4095)
                     ->  Merge Join  (cost=2755669.47..2875666.24 rows=30 width=8) (actual time=19187.049..26523.258 rows=59002 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  GroupAggregate  (cost=2573279.85..2676608.88 rows=918481 width=13) (actual time=18719.909..25654.119 rows=5448473 loops=1)
                                 ->  Sort  (cost=2573279.85..2596241.85 rows=9184802 width=13) (actual time=18719.894..21990.556 rows=9123091 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 205072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=147196.94..1410111.97 rows=9184802 width=13) (actual time=1737.589..11296.876 rows=9123688 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..144900.73 rows=9184802 width=0) (actual time=1644.245..1644.245 rows=9123688 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=182389.63..183353.09 rows=385384 width=16) (actual time=466.746..474.543 rows=86872 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 7145kB
                                 ->  Nested Loop  (cost=66031.09..146633.82 rows=385384 width=16) (actual time=258.552..433.179 rows=86872 loops=1)
                                       ->  HashAggregate  (cost=66031.09..66233.11 rows=20202 width=4) (actual time=258.529..263.712 rows=21718 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..65980.59 rows=20202 width=4) (actual time=0.029..252.442 rows=21718 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.74 rows=19 width=12) (actual time=0.007..0.007 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 44043.165 ms
(35 rows)

query 21 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4826413.92..4826413.93 rows=1 width=26) (actual time=32363.066..32363.075 rows=100 loops=1)
   ->  Sort  (cost=4826413.92..4826413.93 rows=1 width=26) (actual time=32363.065..32363.069 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=4826413.90..4826413.91 rows=1 width=26) (actual time=32361.010..32361.695 rows=3991 loops=1)
               ->  Nested Loop Anti Join  (cost=569609.66..4826413.90 rows=1 width=26) (actual time=3496.055..32330.929 rows=39281 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=569609.66..4826402.31 rows=1 width=34) (actual time=3471.621..30806.691 rows=704306 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=569609.66..2581093.53 rows=384847 width=38) (actual time=3471.599..21512.139 rows=730985 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.42..1960263.94 rows=799101 width=34) (actual time=44.041..16555.189 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874967.10 rows=19995309 width=8) (actual time=0.003..12282.869 rows=37929348 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2273.42..2273.42 rows=4000 width=30) (actual time=43.967..43.967 rows=3991 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 250kB
                                             ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=30) (actual time=2.028..42.765 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.007 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=34) (actual time=2.022..41.702 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=1.847..1.847 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448767.49..448767.49 rows=7223980 width=4) (actual time=3424.797..3424.797 rows=7309184 loops=1)
                                       Buckets: 131072  Batches: 16  Memory Usage: 16118kB
                                       ->  Seq Scan on orders  (cost=0.00..448767.49 rows=7223980 width=4) (actual time=0.004..2540.233 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..5.77 rows=4 width=8) (actual time=0.012..0.012 rows=1 loops=730985)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..5.78 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
 Total runtime: 32363.177 ms
(34 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4826413.92..4826413.93 rows=1 width=26) (actual time=24962.075..24962.084 rows=100 loops=1)
   ->  Sort  (cost=4826413.92..4826413.93 rows=1 width=26) (actual time=24962.073..24962.076 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=4826413.90..4826413.91 rows=1 width=26) (actual time=24960.022..24960.705 rows=3991 loops=1)
               ->  Nested Loop Anti Join  (cost=569609.66..4826413.90 rows=1 width=26) (actual time=2950.843..24932.223 rows=39281 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=569609.66..4826402.31 rows=1 width=34) (actual time=2940.775..23490.959 rows=704306 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=569609.66..2581093.53 rows=384847 width=38) (actual time=2940.755..19008.946 rows=730985 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=2323.42..1960263.94 rows=799101 width=34) (actual time=16.122..14592.275 rows=1514267 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..1874967.10 rows=19995309 width=8) (actual time=0.004..10769.106 rows=37929348 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                       ->  Hash  (cost=2273.42..2273.42 rows=4000 width=30) (actual time=16.083..16.083 rows=3991 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 250kB
                                             ->  Nested Loop  (cost=49.25..2273.42 rows=4000 width=30) (actual time=0.636..15.334 rows=3991 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.007 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=49.25..2222.11 rows=4000 width=34) (actual time=0.630..14.690 rows=3991 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..48.25 rows=4000 width=0) (actual time=0.448..0.448 rows=3991 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=448767.49..448767.49 rows=7223980 width=4) (actual time=2923.184..2923.184 rows=7309184 loops=1)
                                       Buckets: 131072  Batches: 16  Memory Usage: 16118kB
                                       ->  Seq Scan on orders  (cost=0.00..448767.49 rows=7223980 width=4) (actual time=0.004..2078.701 rows=7309184 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..5.77 rows=4 width=8) (actual time=0.006..0.006 rows=1 loops=730985)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..5.78 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=704306)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: (l_receiptdate > l_commitdate)
 Total runtime: 24962.404 ms
(34 rows)

query 22 run 1
SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=192279.01..192279.02 rows=1 width=22) (actual time=9246.850..9246.851 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75439.90..75439.90 rows=1 width=6) (actual time=1155.589..1155.589 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75322.47 rows=46968 width=6) (actual time=0.007..995.517 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=116839.11..116858.04 rows=7571 width=22) (actual time=9246.850..9246.850 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=116687.69..116801.25 rows=7571 width=22) (actual time=9246.815..9246.824 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..116630.91 rows=7571 width=22) (actual time=1155.637..9181.147 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75322.47 rows=17240 width=26) (actual time=1155.615..2038.769 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..28.33 rows=18 width=4) (actual time=0.037..0.037 rows=1 loops=191129)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 9246.916 ms
(15 rows)

SET
SET
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=192279.01..192279.02 rows=1 width=22) (actual time=2192.749..2192.749 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=75439.90..75439.90 rows=1 width=6) (actual time=982.673..982.673 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..75322.47 rows=46968 width=6) (actual time=0.007..828.400 rows=382426 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=116839.11..116858.04 rows=7571 width=22) (actual time=2192.749..2192.749 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=116687.69..116801.25 rows=7571 width=22) (actual time=2192.715..2192.725 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..116630.91 rows=7571 width=22) (actual time=982.714..2160.042 rows=63509 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..75322.47 rows=17240 width=26) (actual time=982.697..1539.438 rows=191129 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..28.33 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=191129)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 2192.807 ms
(15 rows)

