query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424865.02..424865.02 rows=1 width=25) (actual time=10492.916..10492.916 rows=1 loops=1)
   ->  Sort  (cost=424865.02..424865.03 rows=6 width=25) (actual time=10492.916..10492.916 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424864.82..424864.99 rows=6 width=25) (actual time=10492.890..10492.896 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187575.66 rows=5932229 width=25) (actual time=0.288..1264.026 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 9.361 ms
 Execution time: 10492.972 ms
(11 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424865.02..424865.02 rows=1 width=25) (actual time=10244.632..10244.632 rows=1 loops=1)
   ->  Sort  (cost=424865.02..424865.03 rows=6 width=25) (actual time=10244.631..10244.631 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424864.82..424864.99 rows=6 width=25) (actual time=10244.606..10244.612 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187575.66 rows=5932229 width=25) (actual time=0.019..1078.828 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning time: 0.342 ms
 Execution time: 10244.681 ms
(11 rows)

query 2 run 1
SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64436.66..64436.67 rows=1 width=192) (actual time=937.503..937.519 rows=100 loops=1)
   ->  Sort  (cost=64436.66..64436.67 rows=1 width=192) (actual time=937.503..937.514 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=0.42..64436.65 rows=1 width=192) (actual time=3.260..936.895 rows=489 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.42..64435.58 rows=1 width=196) (actual time=3.257..936.056 rows=489 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 11736
                     ->  Nested Loop  (cost=0.42..64434.02 rows=1 width=170) (actual time=3.254..934.038 rows=489 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 4889511
                           ->  Nested Loop  (cost=0.42..63986.02 rows=1 width=34) (actual time=0.938..389.332 rows=489 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..7099.00 rows=735 width=30) (actual time=0.009..67.956 rows=799 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 199201
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..77.39 rows=1 width=14) (actual time=0.387..0.401 rows=1 loops=799)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Aggregate  (cost=18.52..18.53 rows=1 width=6) (actual time=0.029..0.029 rows=1 loops=3196)
                                               ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.020..0.027 rows=1 loops=3196)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=3196)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.006..0.025 rows=4 loops=3196)
                                                           ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.005..0.019 rows=4 loops=3196)
                                                                 ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.010 rows=4 loops=3196)
                                                                       Index Cond: (part.p_partkey = ps_partkey)
                                                                 ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=12784)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..0.476 rows=10000 loops=489)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=489)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=489)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 4
 Planning time: 16.308 ms
 Execution time: 937.789 ms
(43 rows)

SET
SET
                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64436.66..64436.67 rows=1 width=192) (actual time=622.774..622.791 rows=100 loops=1)
   ->  Sort  (cost=64436.66..64436.67 rows=1 width=192) (actual time=622.773..622.783 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=0.42..64436.65 rows=1 width=192) (actual time=0.447..622.304 rows=489 loops=1)
               Join Filter: (nation.n_regionkey = region.r_regionkey)
               ->  Nested Loop  (cost=0.42..64435.58 rows=1 width=196) (actual time=0.445..621.526 rows=489 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 11736
                     ->  Nested Loop  (cost=0.42..64434.02 rows=1 width=170) (actual time=0.443..619.599 rows=489 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 4889511
                           ->  Nested Loop  (cost=0.42..63986.02 rows=1 width=34) (actual time=0.063..88.871 rows=489 loops=1)
                                 ->  Seq Scan on part  (cost=0.00..7099.00 rows=735 width=30) (actual time=0.010..39.741 rows=799 loops=1)
                                       Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                                       Rows Removed by Filter: 199201
                                 ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..77.39 rows=1 width=14) (actual time=0.047..0.061 rows=1 loops=799)
                                       Index Cond: (ps_partkey = part.p_partkey)
                                       Filter: ((SubPlan 1) = ps_supplycost)
                                       Rows Removed by Filter: 3
                                       SubPlan 1
                                         ->  Aggregate  (cost=18.52..18.53 rows=1 width=6) (actual time=0.014..0.014 rows=1 loops=3196)
                                               ->  Nested Loop  (cost=0.85..18.52 rows=1 width=6) (actual time=0.009..0.013 rows=1 loops=3196)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=3196)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..17.41 rows=4 width=10) (actual time=0.004..0.011 rows=4 loops=3196)
                                                           ->  Nested Loop  (cost=0.71..16.74 rows=4 width=10) (actual time=0.003..0.007 rows=4 loops=3196)
                                                                 ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.001..0.002 rows=4 loops=3196)
                                                                       Index Cond: (part.p_partkey = ps_partkey)
                                                                 ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=12784)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.000..0.464 rows=10000 loops=489)
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.000..0.001 rows=25 loops=489)
               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=489)
                     Filter: (r_name = 'AMERICA'::bpchar)
                     Rows Removed by Filter: 4
 Planning time: 1.405 ms
 Execution time: 622.840 ms
(43 rows)

query 3 run 1
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=303955.30..303955.32 rows=10 width=24) (actual time=2267.924..2267.926 rows=10 loops=1)
   ->  Sort  (cost=303955.30..304744.09 rows=315516 width=24) (actual time=2267.923..2267.923 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=287671.63..297137.11 rows=315516 width=24) (actual time=2248.988..2265.927 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=287671.63..288460.42 rows=315516 width=24) (actual time=2248.973..2250.507 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=55848.98..258853.42 rows=315516 width=24) (actual time=824.981..2242.414 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187575.66 rows=3272965 width=16) (actual time=0.003..1150.654 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=54041.09..54041.09 rows=144631 width=12) (actual time=823.762..823.762 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14545.69..54041.09 rows=144631 width=12) (actual time=127.540..788.138 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8703.94..44002.70 rows=733421 width=16) (actual time=73.995..573.851 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8520.58 rows=733421 width=0) (actual time=70.648..70.648 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29580 width=4) (actual time=53.461..53.461 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29580 width=4) (actual time=0.003..49.057 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 14.773 ms
 Execution time: 2268.000 ms
(30 rows)

SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=303955.30..303955.32 rows=10 width=24) (actual time=1517.732..1517.734 rows=10 loops=1)
   ->  Sort  (cost=303955.30..304744.09 rows=315516 width=24) (actual time=1517.731..1517.731 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=287671.63..297137.11 rows=315516 width=24) (actual time=1498.896..1515.802 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=287671.63..288460.42 rows=315516 width=24) (actual time=1498.880..1500.449 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=55848.98..258853.42 rows=315516 width=24) (actual time=291.514..1492.881 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187575.66 rows=3272965 width=16) (actual time=0.003..942.526 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=54041.09..54041.09 rows=144631 width=12) (actual time=290.984..290.984 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=14545.69..54041.09 rows=144631 width=12) (actual time=78.688..269.125 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8703.94..44002.70 rows=733421 width=16) (actual time=51.357..142.481 rows=722275 loops=1)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8520.58 rows=733421 width=0) (actual time=48.008..48.008 rows=722275 loops=1)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29580 width=4) (actual time=27.306..27.306 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29580 width=4) (actual time=0.004..23.932 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning time: 0.702 ms
 Execution time: 1517.807 ms
(30 rows)

query 4 run 1
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=190404.50..190404.50 rows=1 width=16) (actual time=2107.246..2107.247 rows=1 loops=1)
   ->  Sort  (cost=190404.50..190404.50 rows=1 width=16) (actual time=2107.245..2107.245 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=190404.48..190404.49 rows=1 width=16) (actual time=2107.224..2107.224 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=826.42..190117.38 rows=57420 width=16) (actual time=12.856..2081.664 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=825.98..27818.28 rows=57420 width=20) (actual time=12.799..540.528 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..811.63 rows=57420 width=0) (actual time=9.850..9.850 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.027..0.027 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 13.056 ms
 Execution time: 2107.301 ms
(18 rows)

SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=190404.50..190404.50 rows=1 width=16) (actual time=204.505..204.505 rows=1 loops=1)
   ->  Sort  (cost=190404.50..190404.50 rows=1 width=16) (actual time=204.503..204.503 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=190404.48..190404.49 rows=1 width=16) (actual time=204.483..204.483 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Nested Loop Semi Join  (cost=826.42..190117.38 rows=57420 width=16) (actual time=8.834..191.763 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=825.98..27818.28 rows=57420 width=20) (actual time=8.814..41.788 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..811.63 rows=57420 width=0) (actual time=5.649..5.649 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning time: 0.537 ms
 Execution time: 204.548 ms
(18 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189195.48..189195.48 rows=1 width=38) (actual time=2322.424..2322.424 rows=1 loops=1)
   ->  Sort  (cost=189195.48..189195.54 rows=25 width=38) (actual time=2322.424..2322.424 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=189195.04..189195.35 rows=25 width=38) (actual time=2322.408..2322.410 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=10067.19..189122.53 rows=7251 width=38) (actual time=95.960..2309.236 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9594.19..187217.05 rows=181330 width=50) (actual time=90.428..2266.016 rows=182435 loops=1)
                           ->  Hash Join  (cost=9593.75..40428.02 rows=45333 width=38) (actual time=90.359..727.647 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3256.72..32787.67 rows=226663 width=8) (actual time=31.032..600.595 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=26127
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3200.06 rows=226663 width=0) (actual time=27.565..27.565 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=59.082..59.082 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.026..53.796 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..37.626 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.019..0.019 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.031..0.033 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.472..5.472 rows=10000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 519kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.292 rows=10000 loops=1)
 Planning time: 19.215 ms
 Execution time: 2322.497 ms
(38 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=189195.48..189195.48 rows=1 width=38) (actual time=343.317..343.317 rows=1 loops=1)
   ->  Sort  (cost=189195.48..189195.54 rows=25 width=38) (actual time=343.316..343.316 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=189195.04..189195.35 rows=25 width=38) (actual time=343.300..343.301 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Hash Join  (cost=10067.19..189122.53 rows=7251 width=38) (actual time=58.392..336.929 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9594.19..187217.05 rows=181330 width=50) (actual time=55.762..313.558 rows=182435 loops=1)
                           ->  Hash Join  (cost=9593.75..40428.02 rows=45333 width=38) (actual time=55.750..148.642 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3256.72..32787.67 rows=226663 width=8) (actual time=22.375..74.573 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       Heap Blocks: exact=26127
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3200.06 rows=226663 width=0) (actual time=19.022..19.022 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=33.140..33.140 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.024..28.791 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.148 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.012..0.015 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.002 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.608..2.608 rows=10000 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 519kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.451 rows=10000 loops=1)
 Planning time: 2.497 ms
 Execution time: 343.395 ms
(38 rows)

query 6 run 1
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106879.25..106879.26 rows=1 width=12) (actual time=1270.704..1270.704 rows=1 loops=1)
   ->  Aggregate  (cost=106879.25..106879.26 rows=1 width=12) (actual time=1270.702..1270.702 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20746.33..106303.14 rows=115222 width=12) (actual time=140.418..1187.376 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20717.52 rows=115222 width=0) (actual time=128.542..128.542 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 9.686 ms
 Execution time: 1270.739 ms
(9 rows)

SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106879.25..106879.26 rows=1 width=12) (actual time=225.642..225.643 rows=1 loops=1)
   ->  Aggregate  (cost=106879.25..106879.26 rows=1 width=12) (actual time=225.642..225.642 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20746.33..106303.14 rows=115222 width=12) (actual time=107.202..184.666 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20717.52 rows=115222 width=0) (actual time=96.521..96.521 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.365 ms
 Execution time: 225.678 ms
(9 rows)

query 7 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235038.33..235038.33 rows=1 width=68) (actual time=3227.942..3227.942 rows=1 loops=1)
   ->  Sort  (cost=235038.33..235046.05 rows=3090 width=68) (actual time=3227.941..3227.941 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=234968.80..235022.88 rows=3090 width=68) (actual time=3227.276..3227.281 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=85376.71..234876.55 rows=6150 width=68) (actual time=818.193..3217.114 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84996.81..233675.32 rows=147770 width=46) (actual time=812.070..3186.193 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29609.91..169882.56 rows=1847510 width=24) (actual time=286.217..2426.286 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29148.03 rows=1847510 width=0) (actual time=265.760..265.760 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=525.418..525.418 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=53.755..501.080 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.003..281.153 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=53.739..53.739 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.018..51.733 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..37.607 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.012 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=4.844..4.844 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.013..4.723 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..3.748 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 20.627 ms
 Execution time: 3228.621 ms
(44 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=235038.33..235038.33 rows=1 width=68) (actual time=1017.322..1017.322 rows=1 loops=1)
   ->  Sort  (cost=235038.33..235046.05 rows=3090 width=68) (actual time=1017.321..1017.321 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=234968.80..235022.88 rows=3090 width=68) (actual time=1017.280..1017.286 rows=4 loops=1)
               Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=85376.71..234876.55 rows=6150 width=68) (actual time=530.509..1011.169 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84996.81..233675.32 rows=147770 width=46) (actual time=528.498..993.407 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=29609.91..169882.56 rows=1847510 width=24) (actual time=227.079..495.963 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..29148.03 rows=1847510 width=0) (actual time=206.639..206.639 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=301.134..301.134 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=27.467..281.656 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.003..76.292 rows=1500000 loops=1)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=27.454..27.454 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.016..26.021 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..7.928 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.012 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.917..1.917 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.013..1.841 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..0.564 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.009..0.009 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning time: 1.973 ms
 Execution time: 1017.426 ms
(44 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117728.10..117728.10 rows=1 width=42) (actual time=6384.884..6384.884 rows=1 loops=1)
   ->  Sort  (cost=117728.10..117729.88 rows=714 width=42) (actual time=6384.882..6384.882 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117708.46..117724.53 rows=714 width=42) (actual time=6384.868..6384.869 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=49662.14..117661.00 rows=2373 width=42) (actual time=705.530..6375.679 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 59640
                     ->  Hash Join  (cost=49662.14..116757.95 rows=2373 width=20) (actual time=705.506..6358.713 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49214.14..116277.32 rows=2373 width=20) (actual time=699.932..6351.360 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..66889.89 rows=39998 width=20) (actual time=1.836..5632.732 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.749..75.394 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.312..4.190 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48100.86..48100.86 rows=89028 width=8) (actual time=694.621..694.621 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=12733.16..48100.86 rows=89028 width=8) (actual time=113.093..676.028 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6396.13..39204.26 rows=445142 width=12) (actual time=53.273..524.461 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6284.85 rows=445142 width=0) (actual time=49.898..49.898 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=59.757..59.757 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.023..55.514 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..39.550 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.016..0.016 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.011..0.016 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.004 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.558..5.558 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.458 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.002 rows=25 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.008 rows=25 loops=1)
 Planning time: 23.550 ms
 Execution time: 6384.982 ms
(50 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=117728.10..117728.10 rows=1 width=42) (actual time=302.844..302.844 rows=1 loops=1)
   ->  Sort  (cost=117728.10..117729.88 rows=714 width=42) (actual time=302.843..302.843 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=117708.46..117724.53 rows=714 width=42) (actual time=302.822..302.822 rows=2 loops=1)
               Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=49662.14..117661.00 rows=2373 width=42) (actual time=217.207..300.248 rows=2485 loops=1)
                     Join Filter: (supplier.s_nationkey = n2.n_nationkey)
                     Rows Removed by Join Filter: 59640
                     ->  Hash Join  (cost=49662.14..116757.95 rows=2373 width=20) (actual time=217.185..292.456 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=49214.14..116277.32 rows=2373 width=20) (actual time=214.720..289.119 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.43..66889.89 rows=39998 width=20) (actual time=0.050..67.542 rows=39694 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=1333 width=4) (actual time=0.040..24.971 rows=1320 loops=1)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                             Rows Removed by Filter: 198680
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.92 rows=31 width=24) (actual time=0.003..0.028 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=48100.86..48100.86 rows=89028 width=8) (actual time=214.379..214.379 rows=91179 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 4586kB
                                       ->  Hash Join  (cost=12733.16..48100.86 rows=89028 width=8) (actual time=70.657..200.814 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6396.13..39204.26 rows=445142 width=12) (actual time=38.396..108.246 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Heap Blocks: exact=26131
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6284.85 rows=445142 width=0) (actual time=35.024..35.024 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=32.240..32.240 rows=29952 loops=1)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.020..28.821 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..8.379 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.014..0.014 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.009..0.014 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.000..0.001 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.004..0.004 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.451..2.451 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.406 rows=10000 loops=1)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=2485)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Planning time: 2.897 ms
 Execution time: 302.944 ms
(50 rows)

query 9 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103845.87..103845.91 rows=1 width=53) (actual time=18094.676..18094.677 rows=1 loops=1)
   ->  GroupAggregate  (cost=103845.87..103848.61 rows=73 width=53) (actual time=18094.675..18094.675 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=103845.87..103846.05 rows=73 width=53) (actual time=18093.454..18093.793 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 24040kB
               ->  Nested Loop  (cost=1.57..103843.61 rows=73 width=53) (actual time=0.816..16894.584 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=1.57..103814.56 rows=73 width=31) (actual time=0.783..15611.556 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..103584.15 rows=73 width=31) (actual time=0.237..11840.361 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..103368.23 rows=73 width=35) (actual time=0.230..11057.197 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..26350.63 rows=24175 width=18) (actual time=0.058..314.137 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=6061 width=4) (actual time=0.006..87.683 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.017..0.019 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.036..0.244 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Planning time: 25.688 ms
 Execution time: 18098.585 ms
(28 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103845.87..103845.91 rows=1 width=53) (actual time=3989.550..3989.551 rows=1 loops=1)
   ->  GroupAggregate  (cost=103845.87..103848.61 rows=73 width=53) (actual time=3989.549..3989.549 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=103845.87..103846.05 rows=73 width=53) (actual time=3988.324..3988.668 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Sort Method: external merge  Disk: 24040kB
               ->  Nested Loop  (cost=1.57..103843.61 rows=73 width=53) (actual time=0.046..2852.148 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 7822272
                     ->  Nested Loop  (cost=1.57..103814.56 rows=73 width=31) (actual time=0.028..1863.369 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..103584.15 rows=73 width=31) (actual time=0.024..957.169 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..103368.23 rows=73 width=35) (actual time=0.022..485.296 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..26350.63 rows=24175 width=18) (actual time=0.017..87.681 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=6061 width=4) (actual time=0.007..44.802 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.18 rows=1 width=29) (actual time=0.002..0.008 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.005 rows=25 loops=1)
 Planning time: 3.229 ms
 Execution time: 3992.737 ms
(28 rows)

query 10 run 1
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224422.80..224422.85 rows=20 width=182) (actual time=2289.299..2289.304 rows=20 loops=1)
   ->  Sort  (cost=224422.80..224565.57 rows=57106 width=182) (actual time=2289.298..2289.301 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=222189.41..222903.23 rows=57106 width=182) (actual time=2262.513..2279.920 rows=38076 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Nested Loop  (cost=7794.79..220761.76 rows=57106 width=182) (actual time=99.171..2078.659 rows=114347 loops=1)
                     ->  Hash Join  (cost=7794.35..36350.40 rows=57060 width=174) (actual time=98.549..637.298 rows=57111 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7792.79..35564.27 rows=57060 width=152) (actual time=98.521..620.827 rows=57111 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=820.79..27807.69 rows=57060 width=8) (actual time=11.524..493.485 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..806.53 rows=57060 width=0) (actual time=8.492..8.492 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=86.692..86.692 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.004..49.827 rows=150000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.008..0.008 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.023..0.024 rows=2 loops=57111)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_returnflag = 'R'::bpchar)
                           Rows Removed by Filter: 2
 Planning time: 17.636 ms
 Execution time: 2289.469 ms
(28 rows)

SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=224422.80..224422.85 rows=20 width=182) (actual time=528.438..528.443 rows=20 loops=1)
   ->  Sort  (cost=224422.80..224565.57 rows=57106 width=182) (actual time=528.437..528.439 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=222189.41..222903.23 rows=57106 width=182) (actual time=501.695..519.059 rows=38076 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Nested Loop  (cost=7794.79..220761.76 rows=57106 width=182) (actual time=69.619..361.468 rows=114347 loops=1)
                     ->  Hash Join  (cost=7794.35..36350.40 rows=57060 width=174) (actual time=69.592..145.701 rows=57111 loops=1)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=7792.79..35564.27 rows=57060 width=152) (actual time=69.578..134.093 rows=57111 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=820.79..27807.69 rows=57060 width=8) (actual time=8.980..43.551 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..806.53 rows=57060 width=0) (actual time=5.790..5.790 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=60.265..60.265 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.004..25.055 rows=150000 loops=1)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.006 rows=25 loops=1)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.22 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_returnflag = 'R'::bpchar)
                           Rows Removed by Filter: 2
 Planning time: 1.396 ms
 Execution time: 528.600 ms
(28 rows)

query 11 run 1
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22824.89..22824.90 rows=1 width=14) (actual time=751.257..751.257 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.44..10892.45 rows=1 width=10) (actual time=29.888..29.889 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.44 rows=32000 width=10) (actual time=0.063..19.369 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.058..0.275 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.050..0.222 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.034..0.034 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11932.44..12012.44 rows=32000 width=14) (actual time=751.256..751.256 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.44..11772.44 rows=32000 width=14) (actual time=742.458..751.118 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.44 rows=32000 width=14) (actual time=0.776..677.752 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.615..3.028 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.608..2.908 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.540..0.540 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.102..1.623 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 10.827 ms
 Execution time: 752.058 ms
(36 rows)

SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22824.89..22824.90 rows=1 width=14) (actual time=84.312..84.312 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=10892.44..10892.45 rows=1 width=10) (actual time=29.554..29.555 rows=1 loops=1)
           ->  Nested Loop  (cost=6.81..10652.44 rows=32000 width=10) (actual time=0.061..18.974 rows=32880 loops=1)
                 ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.057..0.265 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=6.38..225.26 rows=400 width=8) (actual time=0.048..0.210 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.032..0.032 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..25.25 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=11932.44..12012.44 rows=32000 width=14) (actual time=84.311..84.311 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11212.44..11772.44 rows=32000 width=14) (actual time=75.246..83.952 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=6.81..10652.44 rows=32000 width=14) (actual time=0.073..27.714 rows=32880 loops=1)
                     ->  Nested Loop  (cost=6.38..230.58 rows=400 width=4) (actual time=0.064..0.432 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=8) (actual time=0.055..0.367 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.037..0.037 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..25.25 rows=80 width=18) (actual time=0.004..0.056 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 0.799 ms
 Execution time: 84.393 ms
(36 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309223.11..309223.12 rows=1 width=27) (actual time=2108.973..2108.974 rows=1 loops=1)
   ->  Sort  (cost=309223.11..309223.12 rows=1 width=27) (actual time=2108.971..2108.971 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=309223.09..309223.10 rows=1 width=27) (actual time=2108.953..2108.953 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=249732.38..308716.92 rows=28924 width=27) (actual time=1600.344..2089.230 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..389.375 rows=1499957 loops=1)
                     ->  Sort  (cost=249731.95..249804.27 rows=28930 width=15) (actual time=1600.259..1604.145 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247588.19 rows=28930 width=15) (actual time=0.651..1593.796 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 14.507 ms
 Execution time: 2109.039 ms
(17 rows)

SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=309223.11..309223.12 rows=1 width=27) (actual time=1677.277..1677.277 rows=1 loops=1)
   ->  Sort  (cost=309223.11..309223.12 rows=1 width=27) (actual time=1677.276..1677.276 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=309223.09..309223.10 rows=1 width=27) (actual time=1677.259..1677.259 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=249732.38..308716.92 rows=28924 width=27) (actual time=1374.391..1662.352 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..193.848 rows=1499957 loops=1)
                     ->  Sort  (cost=249731.95..249804.27 rows=28930 width=15) (actual time=1374.369..1377.375 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Seq Scan on lineitem  (cost=0.00..247588.19 rows=28930 width=15) (actual time=0.115..1368.264 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning time: 0.519 ms
 Execution time: 1677.329 ms
(17 rows)

query 13 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81219.60..81219.60 rows=1 width=8) (actual time=1629.166..1629.166 rows=1 loops=1)
   ->  Sort  (cost=81219.60..81220.10 rows=200 width=8) (actual time=1629.166..1629.166 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81216.60..81218.60 rows=200 width=8) (actual time=1629.140..1629.147 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77466.60..78966.60 rows=150000 width=8) (actual time=1583.311..1609.642 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..70042.82 rows=1484756 width=8) (actual time=33.292..1125.089 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484756 width=8) (actual time=0.303..642.768 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.685..32.685 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.282..16.584 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 11.546 ms
 Execution time: 1629.863 ms
(19 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81219.60..81219.60 rows=1 width=8) (actual time=1429.164..1429.165 rows=1 loops=1)
   ->  Sort  (cost=81219.60..81220.10 rows=200 width=8) (actual time=1429.163..1429.163 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81216.60..81218.60 rows=200 width=8) (actual time=1429.140..1429.144 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77466.60..78966.60 rows=150000 width=8) (actual time=1383.366..1409.618 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4746.42..70042.82 rows=1484756 width=8) (actual time=28.852..955.164 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484756 width=8) (actual time=0.009..502.067 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.522..28.522 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.039..13.187 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.530 ms
 Execution time: 1429.849 ms
(19 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81450.13..81450.14 rows=1 width=33) (actual time=824.561..824.561 rows=1 loops=1)
   ->  Aggregate  (cost=81450.13..81450.14 rows=1 width=33) (actual time=824.560..824.560 rows=1 loops=1)
         ->  Hash Join  (cost=9901.32..80028.97 rows=81209 width=33) (actual time=107.314..750.989 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1302.32..70313.34 rows=81209 width=16) (actual time=20.550..617.355 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1282.02 rows=81209 width=0) (actual time=14.516..14.516 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=86.370..86.370 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.005..54.530 rows=200000 loops=1)
 Planning time: 13.147 ms
 Execution time: 824.630 ms
(14 rows)

SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81450.13..81450.14 rows=1 width=33) (actual time=204.535..204.536 rows=1 loops=1)
   ->  Aggregate  (cost=81450.13..81450.14 rows=1 width=33) (actual time=204.533..204.533 rows=1 loops=1)
         ->  Hash Join  (cost=9901.32..80028.97 rows=81209 width=33) (actual time=71.505..156.912 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1302.32..70313.34 rows=81209 width=16) (actual time=15.116..66.870 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1282.02 rows=81209 width=0) (actual time=9.377..9.377 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=55.987..55.987 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.005..27.248 rows=200000 loops=1)
 Planning time: 0.519 ms
 Execution time: 204.598 ms
(14 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246118.11..246119.27 rows=1 width=103) (actual time=1534.055..1534.055 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122172.47..122172.48 rows=1 width=32) (actual time=230.179..230.179 rows=1 loops=1)
           ->  HashAggregate  (cost=122162.74..122167.61 rows=389 width=16) (actual time=227.787..229.533 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3752.17..119822.51 rows=234023 width=16) (actual time=35.188..99.602 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3693.66 rows=234023 width=0) (actual time=24.203..24.203 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123945.63..124394.97 rows=389 width=103) (actual time=1534.053..1534.053 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.401..4.506 rows=8449 loops=1)
         ->  Sort  (cost=123945.35..123946.32 rows=389 width=36) (actual time=1529.053..1529.053 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123917.92..123928.61 rows=389 width=36) (actual time=1528.251..1529.044 rows=1 loops=1)
                     ->  HashAggregate  (cost=123917.92..123924.72 rows=389 width=16) (actual time=1528.251..1529.044 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3752.17..119822.51 rows=234023 width=16) (actual time=46.675..1068.775 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3693.66 rows=234023 width=0) (actual time=36.063..36.063 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 9.785 ms
 Execution time: 1534.137 ms
(28 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246118.11..246119.27 rows=1 width=103) (actual time=490.555..490.556 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122172.47..122172.48 rows=1 width=32) (actual time=226.820..226.820 rows=1 loops=1)
           ->  HashAggregate  (cost=122162.74..122167.61 rows=389 width=16) (actual time=224.458..226.182 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3752.17..119822.51 rows=234023 width=16) (actual time=33.565..97.832 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3693.66 rows=234023 width=0) (actual time=23.289..23.289 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=123945.63..124394.97 rows=389 width=103) (actual time=490.553..490.553 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.010..1.248 rows=8449 loops=1)
         ->  Sort  (cost=123945.35..123946.32 rows=389 width=36) (actual time=488.824..488.824 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123917.92..123928.61 rows=389 width=36) (actual time=488.004..488.815 rows=1 loops=1)
                     ->  HashAggregate  (cost=123917.92..123924.72 rows=389 width=16) (actual time=488.003..488.814 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3752.17..119822.51 rows=234023 width=16) (actual time=36.260..126.164 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3693.66 rows=234023 width=0) (actual time=25.407..25.407 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 0.728 ms
 Execution time: 490.740 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34787.91..34787.91 rows=1 width=40) (actual time=740.214..740.214 rows=1 loops=1)
   ->  Sort  (cost=34787.91..34795.45 rows=3015 width=40) (actual time=740.213..740.213 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33991.23..34772.83 rows=3015 width=40) (actual time=689.211..737.495 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33991.23..34141.52 rows=60116 width=40) (actual time=689.190..698.995 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9824.23..29219.39 rows=60116 width=40) (actual time=96.573..306.489 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=6.395..143.638 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.225..5.581 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=30144 width=40) (actual time=90.137..90.137 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=30144 width=40) (actual time=0.008..84.487 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 13.198 ms
 Execution time: 741.214 ms
(26 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34787.91..34787.91 rows=1 width=40) (actual time=688.236..688.237 rows=1 loops=1)
   ->  Sort  (cost=34787.91..34795.45 rows=3015 width=40) (actual time=688.235..688.235 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33991.23..34772.83 rows=3015 width=40) (actual time=637.690..685.511 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33991.23..34141.52 rows=60116 width=40) (actual time=637.671..647.321 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9824.23..29219.39 rows=60116 width=40) (actual time=63.327..254.686 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.267..123.848 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.084..2.239 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=30144 width=40) (actual time=61.028..61.028 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=30144 width=40) (actual time=0.006..56.354 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.588 ms
 Execution time: 688.287 ms
(26 rows)

query 17 run 1
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=983541.98..983541.99 rows=1 width=8) (actual time=7471.862..7471.863 rows=1 loops=1)
   ->  Aggregate  (cost=983541.98..983541.99 rows=1 width=8) (actual time=7471.862..7471.862 rows=1 loops=1)
         ->  Merge Join  (cost=914151.17..983536.92 rows=2020 width=8) (actual time=4447.603..7471.592 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914150.32..962059.41 rows=193313 width=9) (actual time=4439.371..7240.596 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914150.32..929153.45 rows=6001253 width=9) (actual time=4439.344..6243.667 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111392kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172572.53 rows=6001253 width=9) (actual time=0.399..951.362 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..18969.66 rows=6271 width=21) (actual time=1.582..219.167 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..18953.98 rows=6271 width=21) (actual time=1.577..217.196 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=209 width=4) (actual time=0.909..67.379 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.67 rows=31 width=17) (actual time=0.449..0.711 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 12.285 ms
 Execution time: 7487.088 ms
(21 rows)

SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=983541.98..983541.99 rows=1 width=8) (actual time=7001.350..7001.350 rows=1 loops=1)
   ->  Aggregate  (cost=983541.98..983541.99 rows=1 width=8) (actual time=7001.348..7001.348 rows=1 loops=1)
         ->  Merge Join  (cost=914151.17..983536.92 rows=2020 width=8) (actual time=4194.490..7001.161 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  GroupAggregate  (cost=914150.32..962059.41 rows=193313 width=9) (actual time=4187.929..6945.013 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Sort  (cost=914150.32..929153.45 rows=6001253 width=9) (actual time=4187.902..5946.565 rows=5979358 loops=1)
                           Sort Key: lineitem_1.l_partkey
                           Sort Method: external merge  Disk: 111392kB
                           ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172572.53 rows=6001253 width=9) (actual time=0.030..767.380 rows=6001215 loops=1)
               ->  Materialize  (cost=0.85..18969.66 rows=6271 width=21) (actual time=0.151..45.424 rows=6233 loops=1)
                     ->  Nested Loop  (cost=0.85..18953.98 rows=6271 width=21) (actual time=0.149..44.439 rows=6233 loops=1)
                           ->  Index Scan using part_pkey on part  (cost=0.42..8926.42 rows=209 width=4) (actual time=0.138..38.041 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.67 rows=31 width=17) (actual time=0.005..0.025 rows=30 loops=208)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 0.630 ms
 Execution time: 7016.540 ms
(21 rows)

query 18 run 1
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1080250.04..1080253.04 rows=100 width=44) (actual time=4266.679..4266.703 rows=9 loops=1)
   ->  GroupAggregate  (cost=1080250.04..1170250.04 rows=3000000 width=44) (actual time=4266.677..4266.700 rows=9 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=1080250.04..1087750.04 rows=3000000 width=44) (actual time=4265.799..4265.802 rows=63 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6990.97..698174.08 rows=3000000 width=44) (actual time=1028.896..4265.711 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=18.97..649952.08 rows=3000000 width=25) (actual time=960.728..4197.517 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..375839.94 rows=750000 width=24) (actual time=745.160..3372.513 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.005..310.896 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..298530.10 rows=1500313 width=4) (actual time=641.921..2993.268 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..279776.19 rows=1500313 width=9) (actual time=641.919..2993.250 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227265.23 rows=6001253 width=9) (actual time=0.004..1651.685 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227265.23 rows=6001253 width=9) (actual time=0.007..567.844 rows=4807580 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.832..67.832 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.004..42.828 rows=150000 loops=1)
 Planning time: 16.876 ms
 Execution time: 4267.425 ms
(25 rows)

SET
SET
                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1080250.04..1080253.04 rows=100 width=44) (actual time=3208.610..3208.633 rows=9 loops=1)
   ->  GroupAggregate  (cost=1080250.04..1170250.04 rows=3000000 width=44) (actual time=3208.610..3208.633 rows=9 loops=1)
         Group Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=1080250.04..1087750.04 rows=3000000 width=44) (actual time=3208.598..3208.600 rows=63 loops=1)
               Sort Key: orders.o_totalprice DESC, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=6990.97..698174.08 rows=3000000 width=44) (actual time=764.571..3208.520 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=18.97..649952.08 rows=3000000 width=25) (actual time=724.306..3168.226 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Semi Join  (cost=0.86..375839.94 rows=750000 width=24) (actual time=508.630..2346.214 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..54805.93 rows=1500000 width=20) (actual time=0.004..150.817 rows=1201687 loops=1)
                                 ->  Materialize  (cost=0.43..298530.10 rows=1500313 width=4) (actual time=451.546..2129.931 rows=9 loops=1)
                                       ->  GroupAggregate  (cost=0.43..279776.19 rows=1500313 width=9) (actual time=451.544..2129.920 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..227265.23 rows=6001253 width=9) (actual time=0.003..822.757 rows=6001215 loops=1)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..227265.23 rows=6001253 width=9) (actual time=0.006..565.710 rows=4807580 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=39.919..39.919 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..18.289 rows=150000 loops=1)
 Planning time: 1.260 ms
 Execution time: 3208.729 ms
(25 rows)

query 19 run 1
SET
SET


 Limit  (cost=35732.83..35732.84 rows=1 width=12) (actual time=2478.891..2478.891 rows=1 loops=1)
   ->  Aggregate  (cost=35732.83..35732.84 rows=1 width=12) (actual time=2478.891..2478.891 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35731.99 rows=111 width=12) (actual time=12.305..2478.474 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=481 width=30) (actual time=0.852..98.849 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.08 rows=1 width=21) (actual time=4.196..4.692 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 12.592 ms
 Execution time: 2478.935 ms
(12 rows)

SET
SET


 Limit  (cost=35732.83..35732.84 rows=1 width=12) (actual time=74.716..74.716 rows=1 loops=1)
   ->  Aggregate  (cost=35732.83..35732.84 rows=1 width=12) (actual time=74.714..74.714 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35731.99 rows=111 width=12) (actual time=0.370..74.620 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=481 width=30) (actual time=0.254..56.831 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.08 rows=1 width=21) (actual time=0.031..0.035 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning time: 0.806 ms
 Execution time: 74.754 ms
(12 rows)

query 20 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=164327.99..164328.00 rows=1 width=51) (actual time=3469.361..3469.362 rows=1 loops=1)
   ->  Sort  (cost=164327.99..164328.49 rows=200 width=51) (actual time=3469.359..3469.359 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=160843.49..164326.99 rows=200 width=51) (actual time=3279.007..3469.155 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1972713
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.424..3.766 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.412..2.875 rows=10000 loops=1)
               ->  Materialize  (cost=160843.49..163841.70 rows=6 width=8) (actual time=6.783..7.624 rows=4504 loops=438)
                     ->  Hash Join  (cost=160843.49..163841.67 rows=6 width=8) (actual time=2971.115..3276.055 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  HashAggregate  (cost=148101.94..149485.70 rows=92251 width=13) (actual time=2461.751..2716.733 rows=544869 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Bitmap Heap Scan on lineitem  (cost=14785.60..141183.16 rows=922504 width=13) (actual time=161.422..1896.475 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Heap Blocks: exact=104951
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14554.97 rows=922504 width=0) (actual time=141.245..141.245 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12620.70..12620.70 rows=8057 width=16) (actual time=509.298..509.298 rows=8748 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 539kB
                                 ->  Nested Loop  (cost=0.42..12620.70 rows=8057 width=16) (actual time=0.645..505.389 rows=8748 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.086..76.003 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.180..0.194 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 18.241 ms
 Execution time: 3470.727 ms
(36 rows)

SET
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=164327.99..164328.00 rows=1 width=51) (actual time=1324.964..1324.964 rows=1 loops=1)
   ->  Sort  (cost=164327.99..164328.49 rows=200 width=51) (actual time=1324.962..1324.962 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=160843.49..164326.99 rows=200 width=51) (actual time=1136.828..1324.800 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1972713
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.011..1.750 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.001..0.571 rows=10000 loops=1)
               ->  Materialize  (cost=160843.49..163841.70 rows=6 width=8) (actual time=1.894..2.734 rows=4504 loops=438)
                     ->  Hash Join  (cost=160843.49..163841.67 rows=6 width=8) (actual time=829.432..1134.421 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  HashAggregate  (cost=148101.94..149485.70 rows=92251 width=13) (actual time=796.076..1051.801 rows=544869 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Bitmap Heap Scan on lineitem  (cost=14785.60..141183.16 rows=922504 width=13) (actual time=118.897..310.561 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       Heap Blocks: exact=104951
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14554.97 rows=922504 width=0) (actual time=99.335..99.335 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=12620.70..12620.70 rows=8057 width=16) (actual time=33.309..33.309 rows=8748 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 539kB
                                 ->  Nested Loop  (cost=0.42..12620.70 rows=8057 width=16) (actual time=0.026..31.803 rows=8748 loops=1)
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.015..23.158 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..2.94 rows=4 width=12) (actual time=0.003..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Planning time: 1.457 ms
 Execution time: 1325.651 ms
(36 rows)

query 21 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393119.06..393119.06 rows=1 width=26) (actual time=2804.295..2804.307 rows=100 loops=1)
   ->  Sort  (cost=393119.06..393119.06 rows=1 width=26) (actual time=2804.294..2804.301 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=393119.04..393119.05 rows=1 width=26) (actual time=2803.760..2803.830 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=57260.69..393119.03 rows=1 width=26) (actual time=496.195..2800.515 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=57260.26..393112.67 rows=1 width=34) (actual time=491.312..2641.994 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 19078
                           ->  Hash Join  (cost=57259.83..257976.01 rows=39472 width=38) (actual time=491.297..2119.092 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.58..196112.98 rows=80017 width=34) (actual time=5.037..1530.037 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187575.66 rows=2000418 width=8) (actual time=0.003..1269.590 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                             Rows Removed by Filter: 2207919
                                       ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=4.971..4.971 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                             ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.672..4.885 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.005 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.666..4.801 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=184
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.623..0.623 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=740100 width=4) (actual time=484.866..484.866 rows=729413 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 21019kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=740100 width=4) (actual time=0.010..382.444 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.006..0.006 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 17.088 ms
 Execution time: 2805.158 ms
(41 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=393119.06..393119.06 rows=1 width=26) (actual time=2011.288..2011.299 rows=100 loops=1)
   ->  Sort  (cost=393119.06..393119.06 rows=1 width=26) (actual time=2011.287..2011.292 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=393119.04..393119.05 rows=1 width=26) (actual time=2010.761..2010.805 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Anti Join  (cost=57260.69..393119.03 rows=1 width=26) (actual time=312.577..2008.541 rows=4227 loops=1)
                     ->  Nested Loop Semi Join  (cost=57260.26..393112.67 rows=1 width=34) (actual time=310.881..1877.202 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 19078
                           ->  Hash Join  (cost=57259.83..257976.01 rows=39472 width=38) (actual time=310.867..1701.350 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=235.58..196112.98 rows=80017 width=34) (actual time=0.477..1298.542 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Seq Scan on lineitem l1  (cost=0.00..187575.66 rows=2000418 width=8) (actual time=0.004..1055.339 rows=3793296 loops=1)
                                             Filter: (l_receiptdate > l_commitdate)
                                             Rows Removed by Filter: 2207919
                                       ->  Hash  (cost=230.58..230.58 rows=400 width=30) (actual time=0.433..0.433 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                             ->  Nested Loop  (cost=6.38..230.58 rows=400 width=30) (actual time=0.066..0.359 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.003..0.004 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                         Rows Removed by Filter: 24
                                                   ->  Bitmap Heap Scan on supplier  (cost=6.38..225.26 rows=400 width=34) (actual time=0.059..0.307 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         Heap Blocks: exact=184
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.29 rows=400 width=0) (actual time=0.042..0.042 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=740100 width=4) (actual time=308.955..308.955 rows=729413 loops=1)
                                       Buckets: 1048576  Batches: 2  Memory Usage: 21019kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=740100 width=4) (actual time=0.010..213.491 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 1.618 ms
 Execution time: 2011.662 ms
(41 rows)

query 22 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16118.00..16118.01 rows=1 width=22) (actual time=237.288..237.288 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.42..7546.43 rows=1 width=6) (actual time=106.349..106.349 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4769 width=6) (actual time=0.007..100.723 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8571.57..8573.33 rows=706 width=22) (actual time=237.288..237.288 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8555.68..8568.04 rows=706 width=22) (actual time=237.266..237.270 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..8550.39 rows=706 width=22) (actual time=106.397..234.113 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=106.375..163.976 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 11.865 ms
 Execution time: 238.025 ms
(20 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16118.00..16118.01 rows=1 width=22) (actual time=170.748..170.749 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.42..7546.43 rows=1 width=6) (actual time=79.326..79.326 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4769 width=6) (actual time=0.007..74.144 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  Sort  (cost=8571.57..8573.33 rows=706 width=22) (actual time=170.746..170.746 rows=1 loops=1)
         Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8555.68..8568.04 rows=706 width=22) (actual time=170.713..170.717 rows=7 loops=1)
               Group Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Nested Loop Anti Join  (cost=0.43..8550.39 rows=706 width=22) (actual time=79.376..168.232 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=79.355..133.022 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.96 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.659 ms
 Execution time: 170.852 ms
(20 rows)

