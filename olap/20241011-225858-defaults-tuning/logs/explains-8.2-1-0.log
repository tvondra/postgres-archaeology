query 1 run 1
SET
SET
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Limit  (cost=381210.84..381210.84 rows=1 width=51)
   ->  Sort  (cost=381210.84..381210.85 rows=6 width=51)
         Sort Key: l_returnflag, l_linestatus
         ->  HashAggregate  (cost=381210.49..381210.76 rows=6 width=51)
               ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=5928012 width=51)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
(6 rows)

query 2 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54399.96..54399.96 rows=1 width=215)
   ->  Sort  (cost=54399.96..54399.96 rows=1 width=215)
         Sort Key: supplier.s_acctbal, nation.n_name, supplier.s_name, part.p_partkey
         ->  Hash Join  (cost=8562.79..54399.95 rows=1 width=215)
               Hash Cond: (partsupp.ps_partkey = part.p_partkey)
               Join Filter: (partsupp.ps_supplycost = (subplan))
               ->  Hash Join  (cost=444.03..32978.63 rows=159760 width=197)
                     Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                     ->  Seq Scan on partsupp  (cost=0.00..26937.00 rows=800000 width=19)
                     ->  Hash  (cost=419.03..419.03 rows=2000 width=186)
                           ->  Hash Join  (cost=2.53..419.03 rows=2000 width=186)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=161)
                                 ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                             Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                         Filter: (r_name = 'AMERICA'::bpchar)
               ->  Hash  (cost=8108.00..8108.00 rows=861 width=33)
                     ->  Seq Scan on part  (cost=0.00..8108.00 rows=861 width=33)
                           Filter: ((p_size = 16) AND ((p_type)::text ~~ '%NICKEL'::text))
               SubPlan
                 ->  Aggregate  (cost=18.71..18.72 rows=1 width=11)
                       ->  Nested Loop  (cost=0.00..18.71 rows=1 width=11)
                             Join Filter: (nation.n_regionkey = region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..17.60 rows=4 width=15)
                                   ->  Nested Loop  (cost=0.00..16.47 rows=4 width=15)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.35 rows=4 width=15)
                                               Index Cond: ($0 = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=8)
                                               Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8)
                                         Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(37 rows)

query 3 run 1
SET
SET
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=383318.27..383318.29 rows=10 width=34)
   ->  Sort  (cost=383318.27..384111.74 rows=317387 width=34)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))), orders.o_orderdate
         ->  GroupAggregate  (cost=344794.02..354315.63 rows=317387 width=34)
               ->  Sort  (cost=344794.02..345587.49 rows=317387 width=34)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Hash Join  (cost=67402.72..315791.38 rows=317387 width=34)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..233010.19 rows=3254561 width=26)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=65574.21..65574.21 rows=146281 width=12)
                                 ->  Hash Join  (cost=15053.06..65574.21 rows=146281 width=12)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=8581.74..49505.34 rows=723088 width=16)
                                             Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..8400.97 rows=723088 width=0)
                                                   Index Cond: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=6092.00..6092.00 rows=30345 width=4)
                                             ->  Seq Scan on customer  (cost=0.00..6092.00 rows=30345 width=4)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
(20 rows)

query 4 run 1
SET
SET
                                                     QUERY PLAN                                                     
--------------------------------------------------------------------------------------------------------------------
 Limit  (cost=61938.54..61938.54 rows=1 width=19)
   ->  Sort  (cost=61938.54..61938.54 rows=1 width=19)
         Sort Key: o_orderpriority
         ->  HashAggregate  (cost=61938.52..61938.53 rows=1 width=19)
               ->  Bitmap Heap Scan on orders  (cost=772.39..61803.07 rows=27090 width=19)
                     Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     Filter: (subplan)
                     ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..765.62 rows=54181 width=0)
                           Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     SubPlan
                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.92 rows=7 width=152)
                             Index Cond: (l_orderkey = $0)
                             Filter: (l_commitdate < l_receiptdate)
(13 rows)

query 5 run 1
SET
SET
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=229831.32..229831.32 rows=1 width=51)
   ->  Sort  (cost=229831.32..229831.38 rows=25 width=51)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  HashAggregate  (cost=229830.30..229830.74 rows=25 width=51)
               ->  Hash Join  (cost=10722.74..229794.05 rows=7250 width=51)
                     Hash Cond: ((customer.c_nationkey = supplier.s_nationkey) AND (lineitem.l_suppkey = supplier.s_suppkey))
                     ->  Nested Loop  (cost=10213.74..223771.23 rows=181377 width=63)
                           ->  Hash Join  (cost=10213.74..47085.55 rows=45335 width=41)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3256.71..38541.80 rows=226673 width=8)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3200.04 rows=226673 width=0)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=6582.03..6582.03 rows=30000 width=41)
                                       ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=41)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=33)
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=33)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=37)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.63 rows=21 width=30)
                                 Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(28 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=124719.25..124719.26 rows=1 width=22)
   ->  Aggregate  (cost=124719.25..124719.26 rows=1 width=22)
         ->  Bitmap Heap Scan on lineitem  (cost=24030.07..124421.66 rows=119032 width=22)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..24000.31 rows=119032 width=0)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
(6 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=295548.68..295548.72 rows=1 width=84)
   ->  GroupAggregate  (cost=295548.68..295751.93 rows=5807 width=84)
         ->  Sort  (cost=295548.68..295563.20 rows=5807 width=84)
               Sort Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
               ->  Hash Join  (cost=97203.54..295185.64 rows=5807 width=84)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=96694.54..290229.84 rows=145322 width=92)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=34916.06..220180.73 rows=1817978 width=34)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..34461.57 rows=1817978 width=0)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=60279.68..60279.68 rows=119904 width=66)
                                 ->  Hash Join  (cost=6570.68..60279.68 rows=119904 width=66)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..46885.00 rows=1500000 width=8)
                                       ->  Hash  (cost=6420.80..6420.80 rows=11990 width=66)
                                             ->  Hash Join  (cost=21.30..6420.80 rows=11990 width=66)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                   ->  Hash  (cost=21.27..21.27 rows=2 width=66)
                                                         ->  Nested Loop  (cost=1.27..21.27 rows=2 width=66)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=33)
                                                               ->  Materialize  (cost=1.27..1.52 rows=25 width=33)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
                     ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                           ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
(28 rows)

query 8 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=126750.51..126750.51 rows=1 width=55)
   ->  Sort  (cost=126750.51..126752.33 rows=728 width=55)
         Sort Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  HashAggregate  (cost=126690.42..126715.90 rows=728 width=55)
               ->  Hash Join  (cost=56968.65..126672.28 rows=2419 width=55)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=56967.09..126625.36 rows=2419 width=30)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=56483.09..126080.87 rows=2420 width=30)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..69423.58 rows=39998 width=30)
                                       ->  Seq Scan on part  (cost=0.00..7608.00 rows=1333 width=4)
                                             Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..45.99 rows=31 width=34)
                                             Index Cond: (part.p_partkey = lineitem.l_partkey)
                                 ->  Hash  (cost=55348.43..55348.43 rows=90773 width=8)
                                       ->  Hash Join  (cost=13478.44..55348.43 rows=90773 width=8)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=6521.41..45214.35 rows=453863 width=12)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6407.94 rows=453863 width=0)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=6582.03..6582.03 rows=30000 width=4)
                                                   ->  Hash Join  (cost=2.53..6582.03 rows=30000 width=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=8)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4)
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4)
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=359.00..359.00 rows=10000 width=8)
                                 ->  Seq Scan on supplier  (cost=0.00..359.00 rows=10000 width=8)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=33)
(37 rows)

query 9 run 1
SET
SET
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=286504.96..286505.00 rows=1 width=76)
   ->  GroupAggregate  (cost=286504.96..286513.02 rows=215 width=76)
         ->  Sort  (cost=286504.96..286505.50 rows=215 width=76)
               Sort Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Nested Loop  (cost=0.00..286496.63 rows=215 width=76)
                     ->  Nested Loop  (cost=0.00..286274.03 rows=215 width=51)
                           ->  Nested Loop  (cost=0.00..285625.67 rows=215 width=55)
                                 ->  Nested Loop  (cost=0.00..284955.62 rows=215 width=55)
                                       ->  Merge Join  (cost=0.00..46428.13 rows=71668 width=23)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..9435.26 rows=18182 width=4)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..34231.78 rows=800000 width=19)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..3.31 rows=1 width=44)
                                             Index Cond: ((partsupp.ps_partkey = lineitem.l_partkey) AND (partsupp.ps_suppkey = lineitem.l_suppkey))
                                 ->  Index Scan using orders_pkey on orders  (cost=0.00..3.10 rows=1 width=8)
                                       Index Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.00 rows=1 width=8)
                                 Index Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                     ->  Index Scan using nation_pkey on nation  (cost=0.00..1.02 rows=1 width=33)
                           Index Cond: (supplier.s_nationkey = nation.n_nationkey)
(21 rows)

query 10 run 1
SET
SET
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=259034.27..259034.32 rows=20 width=212)
   ->  Sort  (cost=259034.27..259169.25 rows=53993 width=212)
         Sort Key: sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))
         ->  GroupAggregate  (cost=252630.57..254790.29 rows=53993 width=212)
               ->  Sort  (cost=252630.57..252765.55 rows=53993 width=212)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=8386.18..248386.59 rows=53993 width=212)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=8384.62..247642.62 rows=53993 width=187)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=792.62..238768.29 rows=53993 width=26)
                                       ->  Bitmap Heap Scan on orders  (cost=792.62..31717.38 rows=55054 width=8)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..778.85 rows=55054 width=0)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..3.70 rows=5 width=26)
                                             Index Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=165)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=165)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=33)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=33)
(22 rows)

query 11 run 1
SET
SET
                                                        QUERY PLAN                                                        
--------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30397.45..30397.45 rows=1 width=19)
   InitPlan
     ->  Aggregate  (cost=13484.20..13484.22 rows=1 width=15)
           ->  Nested Loop  (cost=0.00..13404.32 rows=31952 width=15)
                 ->  Nested Loop  (cost=0.00..351.88 rows=400 width=4)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.57 rows=400 width=8)
                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.63 rows=80 width=19)
                       Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
   ->  Sort  (cost=16913.23..16993.11 rows=31952 width=19)
         Sort Key: sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
         ->  HashAggregate  (cost=13643.96..14522.64 rows=31952 width=19)
               Filter: (sum((ps_supplycost * (ps_availqty)::numeric)) > $0)
               ->  Nested Loop  (cost=0.00..13404.32 rows=31952 width=19)
                     ->  Nested Loop  (cost=0.00..351.88 rows=400 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..345.57 rows=400 width=8)
                                 Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..31.63 rows=80 width=23)
                           Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
(23 rows)

query 12 run 1
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=359887.08..359887.09 rows=1 width=33)
   ->  Sort  (cost=359887.08..359887.09 rows=1 width=33)
         Sort Key: lineitem.l_shipmode
         ->  HashAggregate  (cost=359887.05..359887.07 rows=1 width=33)
               ->  Merge Join  (cost=294983.46..359686.98 rows=26676 width=33)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=23)
                     ->  Sort  (cost=294983.46..295050.15 rows=26676 width=18)
                           Sort Key: lineitem.l_orderkey
                           ->  Seq Scan on lineitem  (cost=0.00..293022.34 rows=26676 width=18)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
(11 rows)

query 13 run 1
SET
SET
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Limit  (cost=173349.20..173349.20 rows=1 width=8)
   ->  Sort  (cost=173349.20..173349.70 rows=200 width=8)
         Sort Key: count(*), c_orders.c_count
         ->  HashAggregate  (cost=173339.05..173341.55 rows=200 width=8)
               ->  HashAggregate  (cost=169214.05..171089.05 rows=150000 width=8)
                     ->  Hash Left Join  (cost=76183.39..161865.50 rows=1469711 width=8)
                           Hash Cond: (customer.c_custkey = orders.o_custkey)
                           ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=4)
                           ->  Hash  (cost=50635.00..50635.00 rows=1469711 width=8)
                                 ->  Seq Scan on orders  (cost=0.00..50635.00 rows=1469711 width=8)
                                       Filter: ((o_comment)::text !~~ '%special%requests%'::text)
(11 rows)

query 14 run 1
SET
SET
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80815.80..80815.83 rows=1 width=46)
   ->  Aggregate  (cost=80815.80..80815.83 rows=1 width=46)
         ->  Hash Join  (cost=10913.37..80476.49 rows=67862 width=46)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1305.37..69511.25 rows=67862 width=26)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1288.41 rows=67862 width=0)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=7108.00..7108.00 rows=200000 width=28)
                     ->  Seq Scan on part  (cost=0.00..7108.00 rows=200000 width=28)
(10 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=292462.97..292464.27 rows=1 width=112)
   InitPlan
     ->  Aggregate  (cost=145941.18..145941.19 rows=1 width=32)
           ->  HashAggregate  (cost=145929.93..145936.49 rows=375 width=26)
                 ->  Bitmap Heap Scan on lineitem  (cost=4316.98..144806.42 rows=224702 width=26)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4260.81 rows=224702 width=0)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=146521.78..147007.16 rows=375 width=112)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..454.75 rows=10000 width=80)
         ->  Sort  (cost=146521.78..146522.72 rows=375 width=36)
               Sort Key: revenue0.supplier_no
               ->  Subquery Scan revenue0  (cost=146491.68..146505.75 rows=375 width=36)
                     ->  HashAggregate  (cost=146491.68..146502.00 rows=375 width=26)
                           Filter: (sum((l_extendedprice * (1::numeric - l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4316.98..144806.42 rows=224702 width=26)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4260.81 rows=224702 width=0)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
(20 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=49946.02..49946.02 rows=1 width=46)
   ->  Sort  (cost=49946.02..49952.90 rows=2751 width=46)
         Sort Key: count(DISTINCT partsupp.ps_suppkey), part.p_brand, part.p_type, part.p_size
         ->  GroupAggregate  (cost=49076.92..49788.86 rows=2751 width=46)
               ->  Sort  (cost=49076.92..49212.43 rows=54204 width=46)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=10835.79..44814.83 rows=54204 width=46)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=384.00..29321.00 rows=400000 width=8)
                                 Filter: (NOT (hashed subplan))
                                 SubPlan
                                   ->  Seq Scan on supplier  (cost=0.00..384.00 rows=1 width=4)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=10108.00..10108.00 rows=27503 width=46)
                                 ->  Seq Scan on part  (cost=0.00..10108.00 rows=27503 width=46)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
(16 rows)

query 17 run 1
SET
SET
                                                  QUERY PLAN                                                   
---------------------------------------------------------------------------------------------------------------
 Limit  (cost=271033.49..271033.50 rows=1 width=13)
   ->  Aggregate  (cost=271033.49..271033.50 rows=1 width=13)
         ->  Nested Loop  (cost=256123.68..271028.59 rows=1960 width=13)
               Join Filter: (public.lineitem.l_quantity < part_agg.avg_quantity)
               ->  Hash Join  (cost=256123.68..261736.90 rows=191 width=40)
                     Hash Cond: (part_agg.agg_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=248013.23..250940.87 rows=195176 width=14)
                           ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=8108.00..8108.00 rows=196 width=4)
                           ->  Seq Scan on part  (cost=0.00..8108.00 rows=196 width=4)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..48.18 rows=31 width=27)
                     Index Cond: (part.p_partkey = public.lineitem.l_partkey)
(13 rows)

query 18 run 1
SET
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=796023.91..796026.91 rows=100 width=57)
   ->  GroupAggregate  (cost=796023.91..830334.31 rows=1143680 width=57)
         ->  Sort  (cost=796023.91..798883.11 rows=1143680 width=57)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               ->  Hash Join  (cost=398834.41..650782.92 rows=1143680 width=57)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..218007.15 rows=6001215 width=14)
                     ->  Hash  (cost=395261.14..395261.14 rows=285862 width=51)
                           ->  Hash Join  (cost=317730.21..395261.14 rows=285862 width=51)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge IN Join  (cost=310138.21..380879.92 rows=285862 width=29)
                                       Merge Cond: (orders.o_orderkey = "IN_subquery".l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..60559.81 rows=1500000 width=25)
                                       ->  Materialize  (cost=310138.21..312996.83 rows=285862 width=4)
                                             ->  GroupAggregate  (cost=0.00..306993.73 rows=285862 width=14)
                                                   Filter: (sum(l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..272699.72 rows=6001215 width=14)
                                 ->  Hash  (cost=5717.00..5717.00 rows=150000 width=26)
                                       ->  Seq Scan on customer  (cost=0.00..5717.00 rows=150000 width=26)
(19 rows)

query 19 run 1
SET
SET


 Limit  (cost=355748.58..355748.60 rows=1 width=22)
   ->  Aggregate  (cost=355748.58..355748.60 rows=1 width=22)
         ->  Hash Join  (cost=10108.00..355748.28 rows=118 width=22)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..338031.45 rows=117059 width=36)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=7608.00..7608.00 rows=200000 width=36)
                     ->  Seq Scan on part  (cost=0.00..7608.00 rows=200000 width=36)
                           Filter: (p_size >= 1)
(10 rows)

query 20 run 1
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208345.45..208345.46 rows=1 width=57)
   ->  Sort  (cost=208345.45..208345.46 rows=1 width=57)
         Sort Key: supplier.s_name
         ->  Nested Loop  (cost=208341.87..208345.44 rows=1 width=57)
               ->  Nested Loop  (cost=208341.87..208345.16 rows=1 width=61)
                     ->  HashAggregate  (cost=208341.87..208341.88 rows=1 width=8)
                           ->  Nested Loop  (cost=202914.79..208341.86 rows=1 width=8)
                                 Join Filter: ((partsupp.ps_availqty)::numeric > agg_lineitem.agg_quantity)
                                 ->  Hash Join  (cost=202914.79..205604.07 rows=902 width=44)
                                       Hash Cond: (agg_lineitem.agg_partkey = part.p_partkey)
                                       ->  HashAggregate  (cost=195256.29..196596.42 rows=89342 width=18)
                                             ->  Bitmap Heap Scan on lineitem  (cost=17159.34..188555.64 rows=893420 width=18)
                                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16935.99 rows=893420 width=0)
                                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Hash  (cost=7633.25..7633.25 rows=2020 width=4)
                                             ->  HashAggregate  (cost=7613.05..7633.25 rows=2020 width=4)
                                                   ->  Seq Scan on part  (cost=0.00..7608.00 rows=2020 width=4)
                                                         Filter: ((p_name)::text ~~ 'olive%'::text)
                                 ->  Index Scan using partsupp_pkey on partsupp  (cost=0.00..3.02 rows=1 width=12)
                                       Index Cond: ((agg_lineitem.agg_partkey = partsupp.ps_partkey) AND (agg_lineitem.agg_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.27 rows=1 width=65)
                           Index Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=4)
                     Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     Filter: (n_name = 'IRAQ'::bpchar)
(26 rows)

query 21 run 1
SET
SET
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=4820285.83..4820286.08 rows=100 width=29)
   ->  Sort  (cost=4820285.83..4820310.22 rows=9754 width=29)
         Sort Key: count(*), supplier.s_name
         ->  HashAggregate  (cost=4819517.62..4819639.54 rows=9754 width=29)
               ->  Nested Loop  (cost=255.11..4819468.85 rows=9754 width=29)
                     ->  Hash Join  (cost=255.11..4757661.91 rows=19994 width=33)
                           Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on lineitem l1  (cost=0.00..4755331.49 rows=500101 width=8)
                                 Filter: ((l_receiptdate > l_commitdate) AND (subplan) AND (NOT (subplan)))
                                 SubPlan
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.00..3.97 rows=7 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: ((l_suppkey <> $1) AND (l_receiptdate > l_commitdate))
                                   ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..3.92 rows=21 width=152)
                                         Index Cond: (l_orderkey = $0)
                                         Filter: (l_suppkey <> $1)
                           ->  Hash  (cost=250.11..250.11 rows=400 width=33)
                                 ->  Nested Loop  (cost=6.35..250.11 rows=400 width=33)
                                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                             Filter: (n_name = 'PERU'::bpchar)
                                       ->  Bitmap Heap Scan on supplier  (cost=6.35..243.79 rows=400 width=37)
                                             Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..6.25 rows=400 width=0)
                                                   Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..3.08 rows=1 width=4)
                           Index Cond: (orders.o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
(27 rows)

query 22 run 1
SET
SET
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=259971.57..259971.60 rows=1 width=30)
   InitPlan
     ->  Aggregate  (cost=8166.26..8166.27 rows=1 width=11)
           ->  Seq Scan on customer  (cost=0.00..8154.50 rows=4704 width=11)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  GroupAggregate  (cost=251805.30..251831.16 rows=862 width=30)
         ->  Sort  (cost=251805.30..251807.45 rows=862 width=30)
               Sort Key: "substring"((customer.c_phone)::text, 1, 2)
               ->  Seq Scan on customer  (cost=0.00..251763.27 rows=862 width=30)
                     Filter: (("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])) AND (c_acctbal > $0) AND (NOT (subplan)))
                     SubPlan
                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..27.61 rows=17 width=124)
                             Index Cond: (o_custkey = $1)
(13 rows)

