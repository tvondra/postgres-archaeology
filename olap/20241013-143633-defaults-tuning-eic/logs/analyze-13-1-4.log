query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191614.24..191614.92 rows=1 width=236) (actual time=2083.479..2083.549 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191614.24..191618.30 rows=6 width=236) (actual time=2083.478..2083.547 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191614.24..191617.11 rows=24 width=236) (actual time=2083.444..2083.516 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190614.18..190614.20 rows=6 width=236) (actual time=2075.330..2075.331 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190613.94..190614.10 rows=6 width=236) (actual time=2075.302..2075.310 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.06 rows=1482447 width=25) (actual time=0.093..484.325 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 13.210 ms
 Execution Time: 2084.298 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191614.24..191614.92 rows=1 width=236) (actual time=1882.540..1882.608 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191614.24..191618.30 rows=6 width=236) (actual time=1882.539..1882.607 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191614.24..191617.11 rows=24 width=236) (actual time=1882.505..1882.575 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190614.18..190614.20 rows=6 width=236) (actual time=1877.999..1878.000 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190613.94..190614.10 rows=6 width=236) (actual time=1877.971..1877.979 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.06 rows=1482447 width=25) (actual time=0.029..271.311 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.543 ms
 Execution Time: 1882.680 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54640.55..54640.55 rows=1 width=192) (actual time=461.204..461.288 rows=100 loops=1)
   ->  Sort  (cost=54640.55..54640.55 rows=1 width=192) (actual time=461.203..461.273 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..54640.54 rows=1 width=192) (actual time=384.440..460.103 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6429.60 rows=806 width=30) (actual time=0.630..0.929 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=336 width=30) (actual time=0.893..34.567 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=383.055..383.059 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.988..315.324 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.497..196.793 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.480..6.483 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.730..5.980 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.350..4.345 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.374..0.375 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.368..0.373 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.217..0.218 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.143..0.143 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.138..0.139 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.047..0.047 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.040..0.045 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.034..0.043 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.033..0.039 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.030..0.031 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 16.682 ms
 Execution Time: 461.568 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54640.55..54640.55 rows=1 width=192) (actual time=274.182..274.264 rows=100 loops=1)
   ->  Sort  (cost=54640.55..54640.55 rows=1 width=192) (actual time=274.181..274.257 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=37849.01..54640.54 rows=1 width=192) (actual time=239.118..273.901 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6429.60 rows=806 width=30) (actual time=0.511..0.745 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=336 width=30) (actual time=0.021..14.036 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=238.156..238.159 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.794..175.730 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.006..48.795 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.780..2.783 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.038..2.283 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.009..0.672 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.026..0.028 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.020..0.026 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.712 ms
 Execution Time: 274.363 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232427.51..232427.53 rows=10 width=44) (actual time=1131.712..1133.119 rows=10 loops=1)
   ->  Sort  (cost=232427.51..233206.09 rows=311433 width=44) (actual time=1131.711..1133.116 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179843.83..225697.55 rows=311433 width=44) (actual time=1107.064..1130.220 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179843.83..217133.14 rows=311433 width=24) (actual time=1107.051..1113.334 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178843.77..179038.41 rows=77858 width=24) (actual time=1097.286..1097.570 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 654kB
                           Worker 0:  Sort Method: quicksort  Memory: 741kB
                           Worker 1:  Sort Method: quicksort  Memory: 727kB
                           Worker 2:  Sort Method: quicksort  Memory: 623kB
                           Worker 3:  Sort Method: quicksort  Memory: 603kB
                           ->  Parallel Hash Join  (cost=37897.39..172518.37 rows=77858 width=24) (actual time=239.939..1095.274 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.06 rows=814334 width=16) (actual time=0.924..784.815 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37318.92..37318.92 rows=46278 width=12) (actual time=237.500..237.503 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4535.34..37318.92 rows=46278 width=12) (actual time=25.785..227.898 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230161 width=16) (actual time=0.734..172.999 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12567 width=4) (actual time=24.944..24.945 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12567 width=4) (actual time=0.083..23.329 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 18.198 ms
 Execution Time: 1133.733 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232427.51..232427.53 rows=10 width=44) (actual time=467.306..470.103 rows=10 loops=1)
   ->  Sort  (cost=232427.51..233206.09 rows=311433 width=44) (actual time=467.305..470.100 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179843.83..225697.55 rows=311433 width=44) (actual time=442.284..467.137 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179843.83..217133.14 rows=311433 width=24) (actual time=442.269..450.032 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178843.77..179038.41 rows=77858 width=24) (actual time=437.907..438.183 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 690kB
                           Worker 0:  Sort Method: quicksort  Memory: 625kB
                           Worker 1:  Sort Method: quicksort  Memory: 676kB
                           Worker 2:  Sort Method: quicksort  Memory: 655kB
                           Worker 3:  Sort Method: quicksort  Memory: 701kB
                           ->  Parallel Hash Join  (cost=37897.39..172518.37 rows=77858 width=24) (actual time=102.025..436.240 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.06 rows=814334 width=16) (actual time=0.047..248.693 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37318.92..37318.92 rows=46278 width=12) (actual time=101.097..101.100 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4535.34..37318.92 rows=46278 width=12) (actual time=8.548..89.994 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230161 width=16) (actual time=0.012..53.938 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12567 width=4) (actual time=8.418..8.419 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12567 width=4) (actual time=0.012..6.242 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.011 ms
 Execution Time: 470.381 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29189.63..60133.84 rows=1 width=24) (actual time=2860.452..2863.927 rows=1 loops=1)
   ->  GroupAggregate  (cost=29189.63..183910.66 rows=5 width=24) (actual time=2860.451..2863.924 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29189.63..183647.42 rows=52639 width=16) (actual time=425.827..2855.407 rows=10479 loops=1)
               ->  Gather Merge  (cost=29189.20..35416.73 rows=52639 width=20) (actual time=425.142..441.050 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28189.16..28231.61 rows=16980 width=20) (actual time=418.224..418.705 rows=3578 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1481kB
                           Worker 0:  Sort Method: quicksort  Memory: 1478kB
                           Worker 1:  Sort Method: quicksort  Memory: 1509kB
                           Worker 2:  Sort Method: quicksort  Memory: 1444kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=610.48..26996.18 rows=16980 width=20) (actual time=5.495..412.215 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5796
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..597.32 rows=52639 width=0) (actual time=7.227..7.227 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.211..0.211 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 13.083 ms
 Execution Time: 2864.007 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29189.63..60133.84 rows=1 width=24) (actual time=78.270..83.152 rows=1 loops=1)
   ->  GroupAggregate  (cost=29189.63..183910.66 rows=5 width=24) (actual time=78.269..83.150 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29189.63..183647.42 rows=52639 width=16) (actual time=35.562..81.733 rows=10479 loops=1)
               ->  Gather Merge  (cost=29189.20..35416.73 rows=52639 width=20) (actual time=35.516..43.409 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28189.16..28231.61 rows=16980 width=20) (actual time=32.171..32.475 rows=3601 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1393kB
                           Worker 0:  Sort Method: quicksort  Memory: 1381kB
                           Worker 1:  Sort Method: quicksort  Memory: 1396kB
                           Worker 2:  Sort Method: quicksort  Memory: 2125kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=610.48..26996.18 rows=16980 width=20) (actual time=6.225..28.621 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5337
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..597.32 rows=52639 width=0) (actual time=5.485..5.485 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.710 ms
 Execution Time: 83.208 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82478.56..82478.56 rows=1 width=58) (actual time=2249.193..2259.809 rows=1 loops=1)
   ->  Sort  (cost=82478.56..82478.62 rows=25 width=58) (actual time=2249.192..2259.807 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=82440.07..82478.43 rows=25 width=58) (actual time=2248.497..2259.794 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=82440.07..82477.56 rows=75 width=58) (actual time=2248.317..2259.772 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=81440.03..81468.71 rows=25 width=58) (actual time=2241.244..2241.943 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=81440.03..81445.70 rows=2269 width=38) (actual time=2241.057..2241.139 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 191kB
                                 Worker 0:  Sort Method: quicksort  Memory: 193kB
                                 Worker 1:  Sort Method: quicksort  Memory: 195kB
                                 Worker 2:  Sort Method: quicksort  Memory: 204kB
                                 ->  Hash Join  (cost=7760.23..81313.56 rows=2269 width=38) (actual time=49.572..2239.333 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7287.23..80542.66 rows=56743 width=50) (actual time=44.954..2220.995 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7286.80..34806.81 rows=14185 width=38) (actual time=44.634..278.322 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2546.67..29741.59 rows=70928 width=8) (actual time=20.398..227.631 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6441
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2491.70 rows=219877 width=0) (actual time=16.105..16.105 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=24.096..24.098 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2400kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.492..21.827 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.092..16.883 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.392..0.393 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.382..0.389 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.047..0.049 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.327..0.328 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.041..0.043 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.162..0.170 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.722..3.723 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.099..2.320 rows=10000 loops=4)
 Planning Time: 21.819 ms
 Execution Time: 2260.488 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=82478.56..82478.56 rows=1 width=58) (actual time=143.347..157.763 rows=1 loops=1)
   ->  Sort  (cost=82478.56..82478.62 rows=25 width=58) (actual time=143.345..157.761 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=82440.07..82478.43 rows=25 width=58) (actual time=142.609..157.749 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=82440.07..82477.56 rows=75 width=58) (actual time=142.411..157.725 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=81440.03..81468.71 rows=25 width=58) (actual time=138.548..139.266 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=81440.03..81445.70 rows=2269 width=38) (actual time=138.368..138.454 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 198kB
                                 Worker 0:  Sort Method: quicksort  Memory: 194kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 193kB
                                 ->  Hash Join  (cost=7760.23..81313.56 rows=2269 width=38) (actual time=31.309..137.613 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7287.23..80542.66 rows=56743 width=50) (actual time=28.374..126.742 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7286.80..34806.81 rows=14185 width=38) (actual time=28.349..68.921 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2546.67..29741.59 rows=70928 width=8) (actual time=16.606..43.344 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6578
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2491.70 rows=219877 width=0) (actual time=12.712..12.713 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.606..11.608 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.211..9.516 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.375 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.198..0.199 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.191..0.197 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.012 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.176..0.176 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.839..2.840 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.430 rows=10000 loops=4)
 Planning Time: 3.393 ms
 Execution Time: 157.853 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106403.45..106403.46 rows=1 width=32) (actual time=1074.070..1079.606 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106403.45..106403.46 rows=1 width=32) (actual time=1074.069..1079.603 rows=1 loops=1)
         ->  Gather  (cost=106403.01..106403.42 rows=4 width=32) (actual time=1071.454..1079.585 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105403.01..105403.02 rows=1 width=32) (actual time=1063.901..1063.902 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21032.82..105257.02 rows=29198 width=12) (actual time=136.745..1047.750 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12992
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21003.62 rows=116792 width=0) (actual time=131.580..131.581 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 9.665 ms
 Execution Time: 1080.709 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=106403.45..106403.46 rows=1 width=32) (actual time=208.686..216.262 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=106403.45..106403.46 rows=1 width=32) (actual time=208.684..216.260 rows=1 loops=1)
         ->  Gather  (cost=106403.01..106403.42 rows=4 width=32) (actual time=206.183..216.240 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=105403.01..105403.02 rows=1 width=32) (actual time=202.354..202.355 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21032.82..105257.02 rows=29198 width=12) (actual time=116.167..195.258 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=10714
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21003.62 rows=116792 width=0) (actual time=107.584..107.585 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.459 ms
 Execution Time: 216.311 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141410.14..141568.54 rows=1 width=92) (actual time=2111.446..2112.577 rows=1 loops=1)
   ->  GroupAggregate  (cost=141410.14..1100026.46 rows=6052 width=92) (actual time=2111.445..2112.575 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141410.14..1099829.77 rows=6052 width=72) (actual time=849.434..2110.460 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32733
               ->  Nested Loop  (cost=141409.72..630196.62 rows=151295 width=76) (actual time=839.856..1587.970 rows=34092 loops=1)
                     ->  Gather Merge  (cost=141409.29..159530.41 rows=151344 width=76) (actual time=839.051..862.081 rows=34092 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140409.24..140503.83 rows=37836 width=76) (actual time=827.661..828.572 rows=7205 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 4988kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5123kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4781kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4910kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4392kB
                                 ->  Hash Join  (cost=381.77..137532.29 rows=37836 width=76) (actual time=3.420..805.253 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135067.27 rows=454676 width=24) (actual time=0.106..752.067 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.208..3.211 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.197..3.011 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.122..1.650 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.070..0.072 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.064..0.070 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.054..0.055 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.021..0.021 rows=1 loops=34092)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=34092)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 20.013 ms
 Execution Time: 2113.207 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141410.14..141568.54 rows=1 width=92) (actual time=510.174..511.270 rows=1 loops=1)
   ->  GroupAggregate  (cost=141410.14..1100026.46 rows=6052 width=92) (actual time=510.173..511.268 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141410.14..1099829.77 rows=6052 width=72) (actual time=340.928..510.107 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32674
               ->  Nested Loop  (cost=141409.72..630196.62 rows=151295 width=76) (actual time=340.117..437.213 rows=34033 loops=1)
                     ->  Gather Merge  (cost=141409.29..159530.41 rows=151344 width=76) (actual time=340.068..354.993 rows=34033 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140409.24..140503.83 rows=37836 width=76) (actual time=331.629..332.361 rows=7176 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 6540kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4194kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6168kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6325kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3271kB
                                 ->  Hash Join  (cost=381.77..137532.29 rows=37836 width=76) (actual time=2.326..311.415 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135067.27 rows=454676 width=24) (actual time=0.036..256.114 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.188..2.191 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.040..2.058 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..0.672 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.026..0.028 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.020..0.025 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.011..0.012 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34033)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34033)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.474 ms
 Execution Time: 511.357 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42046.37..42658.65 rows=1 width=40) (actual time=6002.102..6005.934 rows=1 loops=1)
   ->  GroupAggregate  (cost=42046.37..1515210.70 rows=2406 width=40) (actual time=6002.101..6005.932 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=42046.37..1515107.29 rows=2464 width=46) (actual time=254.814..6002.794 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14798
               ->  Nested Loop  (cost=42046.37..1514203.92 rows=2464 width=20) (actual time=254.770..5997.893 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42046.08..1506973.71 rows=2464 width=20) (actual time=254.558..5966.672 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42045.66..353189.45 rows=371712 width=24) (actual time=245.674..4803.480 rows=183107 loops=1)
                                 ->  Gather Merge  (cost=42045.23..53039.21 rows=92928 width=8) (actual time=244.506..277.782 rows=45686 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41045.19..41120.13 rows=29977 width=8) (actual time=235.962..237.483 rows=12377 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 1853kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1838kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1768kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1890kB
                                             ->  Parallel Hash Join  (cost=4740.13..38816.16 rows=29977 width=8) (actual time=24.111..231.667 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149884 width=12) (actual time=0.490..178.759 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=22.917..22.920 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.292..21.188 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.099..16.595 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.187..0.189 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.182..0.188 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.119..0.121 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.058..0.059 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.053..0.054 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.091..0.098 rows=4 loops=45686)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=183107)
                                 Index Cond: (p_partkey = lineitem.l_partkey)
                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.024..0.024 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.018 rows=25 loops=1)
 Planning Time: 23.964 ms
 Execution Time: 6006.634 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42046.37..42658.65 rows=1 width=40) (actual time=629.687..635.786 rows=1 loops=1)
   ->  GroupAggregate  (cost=42046.37..1515210.70 rows=2406 width=40) (actual time=629.685..635.784 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=42046.37..1515107.29 rows=2464 width=46) (actual time=100.262..634.657 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=42046.37..1514203.92 rows=2464 width=20) (actual time=100.250..632.354 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42046.08..1506973.71 rows=2464 width=20) (actual time=100.240..629.312 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42045.66..353189.45 rows=371712 width=24) (actual time=98.476..280.505 rows=182921 loops=1)
                                 ->  Gather Merge  (cost=42045.23..53039.21 rows=92928 width=8) (actual time=98.424..115.040 rows=45644 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41045.19..41120.13 rows=29977 width=8) (actual time=94.709..95.558 rows=12337 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 1837kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1833kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1841kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1838kB
                                             ->  Parallel Hash Join  (cost=4740.13..38816.16 rows=29977 width=8) (actual time=11.552..91.205 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149884 width=12) (actual time=0.006..58.059 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.335..11.339 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.106..9.858 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.367 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.093..0.095 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.087..0.094 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.068..0.070 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.016 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45644)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182921)
                                 Index Cond: (p_partkey = lineitem.l_partkey)
                                 Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.010 rows=25 loops=1)
 Planning Time: 3.660 ms
 Execution Time: 635.884 ms
(50 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22796.29..23830.55 rows=1 width=66) (actual time=4751.902..4755.148 rows=1 loops=1)
   ->  GroupAggregate  (cost=22796.29..125188.53 rows=99 width=66) (actual time=4751.900..4755.146 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=22796.29..125185.06 rows=99 width=57) (actual time=4750.968..4754.324 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=18530.17..125181.29 rows=99 width=57) (actual time=279.740..4733.178 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=99 width=53) (actual time=278.396..2580.195 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=277.630..283.440 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=271.123..271.272 rows=1020 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2467kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2428kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2379kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=4.788..261.114 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=4.655..257.861 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.759..248.012 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.180..47.399 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.052..0.054 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.872..3.873 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.144..2.608 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.065..0.066 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.058..0.060 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.286..1.260 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.155..0.155 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 25.526 ms
 Execution Time: 4755.886 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22796.29..23830.55 rows=1 width=66) (actual time=124.163..127.829 rows=1 loops=1)
   ->  GroupAggregate  (cost=22796.29..125188.53 rows=99 width=66) (actual time=124.161..127.826 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=22796.29..125185.06 rows=99 width=57) (actual time=123.245..127.018 rows=1210 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=18530.17..125181.29 rows=99 width=57) (actual time=52.422..121.218 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=99 width=53) (actual time=52.405..76.044 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=52.364..56.821 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=49.744..49.847 rows=1014 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2523kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2362kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2388kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=2.848..41.271 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=2.762..38.603 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.028..31.585 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.012..15.569 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.715..2.715 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.467 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.017 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 4.474 ms
 Execution Time: 127.924 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=104121.90..104121.95 rows=20 width=202) (actual time=2219.183..2223.829 rows=20 loops=1)
   ->  Sort  (cost=104121.90..104268.28 rows=58553 width=202) (actual time=2219.182..2223.825 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=101831.92..102563.83 rows=58553 width=202) (actual time=2187.797..2212.428 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6697.67..101100.00 rows=58553 width=182) (actual time=67.388..2074.993 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5697.67..94244.70 rows=18888 width=182) (actual time=58.020..2123.352 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5696.11..94185.15 rows=18888 width=160) (actual time=57.883..2112.697 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=692.86..89132.32 rows=18888 width=16) (actual time=13.875..2046.576 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=692.43..27112.57 rows=19276 width=8) (actual time=13.123..251.520 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5022
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..677.49 rows=59756 width=0) (actual time=9.145..9.146 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.120..0.125 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=43.573..43.574 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.100..23.178 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.061..0.061 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.052..0.055 rows=25 loops=4)
 Planning Time: 18.664 ms
 Execution Time: 2225.077 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=104121.90..104121.95 rows=20 width=202) (actual time=224.678..228.731 rows=20 loops=1)
   ->  Sort  (cost=104121.90..104268.28 rows=58553 width=202) (actual time=224.676..228.728 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=101831.92..102563.83 rows=58553 width=202) (actual time=192.818..217.226 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6697.67..101100.00 rows=58553 width=182) (actual time=43.268..113.793 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5697.67..94244.70 rows=18888 width=182) (actual time=39.352..149.194 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5696.11..94185.15 rows=18888 width=160) (actual time=39.265..142.452 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=692.86..89132.32 rows=18888 width=16) (actual time=11.030..100.569 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=692.43..27112.57 rows=19276 width=8) (actual time=10.988..27.333 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2099
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..677.49 rows=59756 width=0) (actual time=7.360..7.360 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.829..27.829 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.008..7.864 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.017 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
 Planning Time: 1.462 ms
 Execution Time: 229.131 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16312.28..16312.28 rows=1 width=36) (actual time=709.034..709.039 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.47..7689.48 rows=1 width=32) (actual time=25.159..25.161 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=10) (actual time=0.051..17.840 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.046..0.271 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.215 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.020 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8622.80..8649.47 rows=10667 width=36) (actual time=709.033..709.035 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8009.47..8569.47 rows=10667 width=36) (actual time=698.526..708.894 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=14) (actual time=1.378..643.526 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.829..4.199 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.245..0.248 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.575..3.841 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.306..0.306 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.047..1.538 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 11.944 ms
 Execution Time: 709.616 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16312.28..16312.28 rows=1 width=36) (actual time=79.458..79.463 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.47..7689.48 rows=1 width=32) (actual time=25.333..25.335 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=10) (actual time=0.050..17.970 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.282 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.033..0.220 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8622.80..8649.47 rows=10667 width=36) (actual time=79.457..79.459 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=8009.47..8569.47 rows=10667 width=36) (actual time=68.789..79.316 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.47 rows=32000 width=14) (actual time=0.063..26.304 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.053..0.411 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.042..0.343 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.024..0.024 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.054 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.988 ms
 Execution Time: 79.847 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147797.68..161553.11 rows=1 width=27) (actual time=2140.063..2141.112 rows=1 loops=1)
   ->  GroupAggregate  (cost=147797.68..244085.66 rows=7 width=27) (actual time=2140.062..2141.110 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147797.68..243567.05 rows=29631 width=27) (actual time=903.446..2129.147 rows=15492 loops=1)
               ->  Gather Merge  (cost=147797.25..151346.31 rows=29641 width=15) (actual time=902.708..913.506 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146797.19..146815.72 rows=7410 width=15) (actual time=891.697..892.079 rows=4079 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 499kB
                           Worker 0:  Sort Method: quicksort  Memory: 461kB
                           Worker 1:  Sort Method: quicksort  Memory: 468kB
                           Worker 2:  Sort Method: quicksort  Memory: 494kB
                           Worker 3:  Sort Method: quicksort  Memory: 491kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.91 rows=7410 width=15) (actual time=1.390..888.850 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.077..0.077 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 16.480 ms
 Execution Time: 2141.530 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147797.68..161553.11 rows=1 width=27) (actual time=409.048..410.051 rows=1 loops=1)
   ->  GroupAggregate  (cost=147797.68..244085.66 rows=7 width=27) (actual time=409.047..410.049 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147797.68..243567.05 rows=29631 width=27) (actual time=358.577..405.660 rows=15492 loops=1)
               ->  Gather Merge  (cost=147797.25..151346.31 rows=29641 width=15) (actual time=358.540..363.308 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146797.19..146815.72 rows=7410 width=15) (actual time=354.337..354.569 rows=4104 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 510kB
                           Worker 0:  Sort Method: quicksort  Memory: 517kB
                           Worker 1:  Sort Method: quicksort  Memory: 540kB
                           Worker 2:  Sort Method: quicksort  Memory: 416kB
                           Worker 3:  Sort Method: quicksort  Memory: 431kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.91 rows=7410 width=15) (actual time=0.112..352.117 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.844 ms
 Execution Time: 410.162 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1499.352..1499.355 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1499.350..1499.352 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1499.326..1499.332 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1459.713..1482.790 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=33.579..1107.320 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.567..664.038 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.651..32.652 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..15.806 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.074 ms
 Execution Time: 1501.118 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1302.902..1302.905 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1302.901..1302.903 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1302.876..1302.883 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1262.923..1286.080 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=28.573..928.108 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.012..509.248 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.162..28.163 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..12.530 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.713 ms
 Execution Time: 1304.061 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79368.14..79368.16 rows=1 width=32) (actual time=541.290..543.787 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=79368.14..79368.16 rows=1 width=32) (actual time=541.289..543.785 rows=1 loops=1)
         ->  Gather  (cost=79367.69..79368.10 rows=4 width=64) (actual time=537.413..543.765 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=78367.69..78367.70 rows=1 width=64) (actual time=528.251..528.253 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7354.94..77990.99 rows=21525 width=33) (actual time=65.687..513.523 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1380.95..71960.50 rows=21525 width=16) (actual time=21.883..454.214 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8442
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1359.42 rows=86099 width=0) (actual time=14.279..14.279 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=43.296..43.297 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14176kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.091..28.826 rows=40000 loops=5)
 Planning Time: 14.428 ms
 Execution Time: 544.514 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79368.14..79368.16 rows=1 width=32) (actual time=111.246..114.172 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=79368.14..79368.16 rows=1 width=32) (actual time=111.245..114.170 rows=1 loops=1)
         ->  Gather  (cost=79367.69..79368.10 rows=4 width=64) (actual time=107.033..114.135 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=78367.69..78367.70 rows=1 width=64) (actual time=103.415..103.418 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7354.94..77990.99 rows=21525 width=33) (actual time=39.595..95.396 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1380.95..71960.50 rows=21525 width=16) (actual time=14.756..62.420 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8963
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1359.42 rows=86099 width=0) (actual time=8.672..8.672 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.637..23.637 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..7.376 rows=40000 loops=5)
 Planning Time: 0.638 ms
 Execution Time: 114.217 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237523.63..237635.44 rows=1 width=103) (actual time=1261.616..1268.754 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120020.82..120020.83 rows=1 width=32) (actual time=229.086..229.087 rows=1 loops=1)
           ->  HashAggregate  (cost=119770.77..119895.80 rows=10002 width=36) (actual time=225.899..228.510 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3471.24..117606.57 rows=216420 width=16) (actual time=28.192..117.921 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3417.13 rows=216420 width=0) (actual time=19.140..19.140 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=117502.80..123093.12 rows=50 width=103) (actual time=1261.615..1268.751 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=117502.51..122967.99 rows=50 width=36) (actual time=1260.968..1268.103 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=117502.51..122292.86 rows=40008 width=36) (actual time=1003.675..1018.575 rows=41784 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=116502.46..116527.46 rows=10002 width=36) (actual time=993.018..993.819 rows=8887 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1157kB
                           Worker 0:  Sort Method: quicksort  Memory: 1158kB
                           Worker 1:  Sort Method: quicksort  Memory: 1156kB
                           Worker 2:  Sort Method: quicksort  Memory: 1158kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=115712.90..115837.92 rows=10002 width=36) (actual time=984.343..990.597 rows=9890 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3471.24..115171.85 rows=54105 width=16) (actual time=41.995..932.443 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13371
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3417.13 rows=216420 width=0) (actual time=37.147..37.147 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.641..0.642 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.513 ms
 Execution Time: 1269.387 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237523.63..237635.44 rows=1 width=103) (actual time=410.856..421.793 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120020.82..120020.83 rows=1 width=32) (actual time=216.313..216.314 rows=1 loops=1)
           ->  HashAggregate  (cost=119770.77..119895.80 rows=10002 width=36) (actual time=213.152..215.739 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3471.24..117606.57 rows=216420 width=16) (actual time=27.841..103.242 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3417.13 rows=216420 width=0) (actual time=18.792..18.792 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=117502.80..123093.12 rows=50 width=103) (actual time=410.855..421.789 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=117502.51..122967.99 rows=50 width=36) (actual time=410.835..421.768 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=117502.51..122292.86 rows=40008 width=36) (actual time=166.533..185.071 rows=41736 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=116502.46..116527.46 rows=10002 width=36) (actual time=157.691..158.497 rows=8892 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1159kB
                           Worker 0:  Sort Method: quicksort  Memory: 1146kB
                           Worker 1:  Sort Method: quicksort  Memory: 1156kB
                           Worker 2:  Sort Method: quicksort  Memory: 1159kB
                           Worker 3:  Sort Method: quicksort  Memory: 1160kB
                           ->  Partial HashAggregate  (cost=115712.90..115837.92 rows=10002 width=36) (actual time=149.200..155.258 rows=9877 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3471.24..115171.85 rows=54105 width=16) (actual time=32.576..112.072 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14167
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3417.13 rows=216420 width=0) (actual time=26.652..26.652 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.016..0.016 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.731 ms
 Execution Time: 422.159 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26589.88..26589.88 rows=1 width=44) (actual time=281.279..281.926 rows=1 loops=1)
   ->  Sort  (cost=26589.88..26629.61 rows=15894 width=44) (actual time=281.278..281.924 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18752.91..26510.41 rows=15894 width=44) (actual time=191.354..277.626 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18752.91..25765.77 rows=58570 width=40) (actual time=191.327..239.308 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17752.85..17789.46 rows=14642 width=40) (actual time=166.230..168.020 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2191kB
                           Worker 0:  Sort Method: quicksort  Memory: 2672kB
                           Worker 1:  Sort Method: quicksort  Memory: 2832kB
                           Worker 2:  Sort Method: quicksort  Memory: 2644kB
                           Worker 3:  Sort Method: quicksort  Memory: 2718kB
                           ->  Parallel Hash Join  (cost=6683.29..16739.79 rows=14642 width=40) (actual time=35.847..104.346 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.668..57.447 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.732..6.002 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12202 width=40) (actual time=29.002..29.002 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12202 width=40) (actual time=0.149..26.517 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 13.234 ms
 Execution Time: 281.992 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26589.88..26589.88 rows=1 width=44) (actual time=246.109..246.546 rows=1 loops=1)
   ->  Sort  (cost=26589.88..26629.61 rows=15894 width=44) (actual time=246.107..246.544 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18752.91..26510.41 rows=15894 width=44) (actual time=155.184..242.255 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18752.91..25765.77 rows=58570 width=40) (actual time=155.155..204.051 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17752.85..17789.46 rows=14642 width=40) (actual time=138.169..139.925 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2878kB
                           Worker 0:  Sort Method: quicksort  Memory: 2525kB
                           Worker 1:  Sort Method: quicksort  Memory: 2633kB
                           Worker 2:  Sort Method: quicksort  Memory: 2218kB
                           Worker 3:  Sort Method: quicksort  Memory: 2801kB
                           ->  Parallel Hash Join  (cost=6683.29..16739.79 rows=14642 width=40) (actual time=19.708..75.647 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.202..40.099 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.084..3.111 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12202 width=40) (actual time=16.145..16.146 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12202 width=40) (actual time=0.011..11.384 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.171 ms
 Execution Time: 246.609 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=335551.12..335551.13 rows=1 width=32) (actual time=2399.326..2403.534 rows=1 loops=1)
   ->  Aggregate  (cost=335551.12..335551.13 rows=1 width=32) (actual time=2399.325..2403.532 rows=1 loops=1)
         ->  Merge Join  (cost=222564.55..335546.53 rows=1837 width=8) (actual time=1674.343..2403.427 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221563.67..320232.83 rows=188322 width=36) (actual time=1667.347..2377.835 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221563.67..311758.34 rows=753288 width=36) (actual time=1667.328..1862.811 rows=993684 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220563.62..221034.42 rows=188322 width=36) (actual time=1575.832..1598.588 rows=199285 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 21752kB
                                 Worker 0:  Sort Method: quicksort  Memory: 21713kB
                                 Worker 1:  Sort Method: quicksort  Memory: 21716kB
                                 Worker 2:  Sort Method: quicksort  Memory: 21721kB
                                 Worker 3:  Sort Method: quicksort  Memory: 21733kB
                                 ->  Partial HashAggregate  (cost=187056.73..204063.93 rows=188322 width=36) (actual time=1141.170..1517.591 rows=199459 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 34865kB  Disk Usage: 23504kB
                                       Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19504kB
                                       Worker 1:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19432kB
                                       Worker 2:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19504kB
                                       Worker 3:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19912kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127564.85 rows=1500485 width=9) (actual time=0.226..483.529 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12876.17 rows=5852 width=21) (actual time=4.437..14.145 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12861.54 rows=5852 width=21) (actual time=4.432..13.349 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11186.05 rows=2438 width=21) (actual time=1.079..75.319 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=81 width=4) (actual time=0.818..32.606 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.18 rows=32 width=17) (actual time=0.368..0.606 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 13.365 ms
 Execution Time: 2407.726 ms
(38 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=335551.12..335551.13 rows=1 width=32) (actual time=2041.398..2046.488 rows=1 loops=1)
   ->  Aggregate  (cost=335551.12..335551.13 rows=1 width=32) (actual time=2041.397..2046.486 rows=1 loops=1)
         ->  Merge Join  (cost=222564.55..335546.53 rows=1837 width=8) (actual time=1326.741..2046.400 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=221563.67..320232.83 rows=188322 width=36) (actual time=1320.813..2028.590 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=221563.67..311758.34 rows=753288 width=36) (actual time=1320.794..1515.684 rows=993763 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=220563.62..221034.42 rows=188322 width=36) (actual time=1282.670..1305.697 rows=199312 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 21737kB
                                 Worker 0:  Sort Method: quicksort  Memory: 21740kB
                                 Worker 1:  Sort Method: quicksort  Memory: 21739kB
                                 Worker 2:  Sort Method: quicksort  Memory: 21719kB
                                 Worker 3:  Sort Method: quicksort  Memory: 21708kB
                                 ->  Partial HashAggregate  (cost=187056.73..204063.93 rows=188322 width=36) (actual time=846.030..1228.221 rows=199474 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19832kB
                                       Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 20048kB
                                       Worker 1:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19720kB
                                       Worker 2:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19368kB
                                       Worker 3:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 19408kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127564.85 rows=1500485 width=9) (actual time=0.041..160.355 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..12876.17 rows=5852 width=21) (actual time=3.462..6.321 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..12861.54 rows=5852 width=21) (actual time=3.453..5.586 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11186.05 rows=2438 width=21) (actual time=0.142..17.097 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=81 width=4) (actual time=0.125..14.254 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.18 rows=32 width=17) (actual time=0.006..0.036 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.761 ms
 Execution Time: 2049.613 ms
(38 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803668.51..803668.76 rows=100 width=71) (actual time=4435.101..4435.106 rows=9 loops=1)
   ->  Sort  (cost=803668.51..808670.13 rows=2000648 width=71) (actual time=4435.100..4435.104 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=667029.44..727205.18 rows=2000648 width=71) (actual time=4434.719..4435.070 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338915.17..559260.16 rows=2000648 width=44) (actual time=3703.037..4434.649 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331943.17..547036.31 rows=2000648 width=25) (actual time=3633.110..4364.701 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172579.39 rows=6001939 width=9) (actual time=0.766..328.260 rows=6001215 loops=1)
                           ->  Hash  (cost=325691.14..325691.14 rows=500162 width=24) (actual time=3436.628..3436.630 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280622.63..325691.14 rows=500162 width=24) (actual time=3076.503..3436.603 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.746..280.618 rows=1500000 loops=1)
                                       ->  Hash  (cost=274370.61..274370.61 rows=500162 width=4) (actual time=2975.432..2975.433 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269368.99 rows=500162 width=4) (actual time=637.223..2975.406 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216852.02 rows=6001939 width=9) (actual time=0.017..1615.969 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.624..69.624 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.440..43.449 rows=150000 loops=1)
 Planning Time: 18.364 ms
 Execution Time: 4435.883 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803668.51..803668.76 rows=100 width=71) (actual time=3383.406..3383.412 rows=9 loops=1)
   ->  Sort  (cost=803668.51..808670.13 rows=2000648 width=71) (actual time=3383.405..3383.410 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=667029.44..727205.18 rows=2000648 width=71) (actual time=3383.024..3383.377 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338915.17..559260.16 rows=2000648 width=44) (actual time=2644.510..3382.957 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331943.17..547036.31 rows=2000648 width=25) (actual time=2600.138..3338.565 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172579.39 rows=6001939 width=9) (actual time=0.009..327.318 rows=6001215 loops=1)
                           ->  Hash  (cost=325691.14..325691.14 rows=500162 width=24) (actual time=2402.852..2402.854 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280622.63..325691.14 rows=500162 width=24) (actual time=2184.804..2402.832 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.004..83.282 rows=1500000 loops=1)
                                       ->  Hash  (cost=274370.61..274370.61 rows=500162 width=4) (actual time=2125.815..2125.816 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269368.99 rows=500162 width=4) (actual time=449.574..2125.796 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216852.02 rows=6001939 width=9) (actual time=0.016..818.998 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.052..44.053 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.017..19.152 rows=150000 loops=1)
 Planning Time: 1.561 ms
 Execution Time: 3383.877 ms
(29 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

 Limit  (cost=18629.36..18629.37 rows=1 width=32) (actual time=875.702..877.167 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18629.36..18629.37 rows=1 width=32) (actual time=875.701..877.165 rows=1 loops=1)
         ->  Gather  (cost=18629.14..18629.35 rows=2 width=32) (actual time=875.688..877.155 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17629.14..17629.15 rows=1 width=32) (actual time=868.202..868.203 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17628.78 rows=47 width=12) (actual time=22.342..868.081 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.629..30.625 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.44 rows=1 width=21) (actual time=4.407..4.954 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.830 ms
 Execution Time: 877.236 ms
(16 rows)

SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18629.36..18629.37 rows=1 width=32) (actual time=28.878..32.691 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18629.36..18629.37 rows=1 width=32) (actual time=28.877..32.689 rows=1 loops=1)
         ->  Gather  (cost=18629.14..18629.35 rows=2 width=32) (actual time=28.736..32.672 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17629.14..17629.15 rows=1 width=32) (actual time=26.188..26.188 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17628.78 rows=47 width=12) (actual time=0.718..26.150 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=202 width=30) (actual time=0.201..17.079 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..49.44 rows=1 width=21) (actual time=0.047..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.234 ms
 Execution Time: 32.733 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=213772.20..213772.20 rows=1 width=51) (actual time=3852.682..3852.763 rows=1 loops=1)
   ->  Sort  (cost=213772.20..213772.20 rows=1 width=51) (actual time=3852.681..3852.761 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184383.82..213772.19 rows=1 width=51) (actual time=3684.936..3852.550 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.608..3.901 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.207..0.210 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.394..2.935 rows=10000 loops=1)
               ->  Materialize  (cost=184383.82..213316.88 rows=1 width=8) (actual time=5.795..8.551 rows=4356 loops=438)
                     ->  Nested Loop  (cost=184383.82..213316.87 rows=1 width=8) (actual time=2538.306..3678.242 rows=5898 loops=1)
                           ->  Hash Join  (cost=184383.40..206396.47 rows=4855 width=44) (actual time=2537.716..3154.154 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178015.48..193960.12 rows=480666 width=40) (actual time=2500.034..3065.479 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14340.32..140316.74 rows=894428 width=13) (actual time=129.282..2003.840 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14116.71 rows=894428 width=0) (actual time=112.471..112.471 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=37.663..37.740 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=1.329..37.200 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.165..29.981 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.088..0.088 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 17.426 ms
 Execution Time: 3857.892 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=213772.20..213772.20 rows=1 width=51) (actual time=1438.667..1438.740 rows=1 loops=1)
   ->  Sort  (cost=213772.20..213772.20 rows=1 width=51) (actual time=1438.666..1438.738 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184383.82..213772.19 rows=1 width=51) (actual time=1272.429..1438.561 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.025..1.731 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.011..0.621 rows=10000 loops=1)
               ->  Materialize  (cost=184383.82..213316.88 rows=1 width=8) (actual time=1.599..3.046 rows=4356 loops=438)
                     ->  Nested Loop  (cost=184383.82..213316.87 rows=1 width=8) (actual time=700.330..1269.183 rows=5898 loops=1)
                           ->  Hash Join  (cost=184383.40..206396.47 rows=4855 width=44) (actual time=700.311..1246.862 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178015.48..193960.12 rows=480666 width=40) (actual time=688.648..1196.899 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14340.32..140316.74 rows=894428 width=13) (actual time=91.198..297.753 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14116.71 rows=894428 width=0) (actual time=75.046..75.046 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.646..11.716 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.332..11.357 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.034..8.961 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.574 ms
 Execution Time: 1443.558 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194177.77..194177.78 rows=1 width=34) (actual time=1483.638..1483.759 rows=100 loops=1)
   ->  Sort  (cost=194177.77..194177.78 rows=1 width=34) (actual time=1483.637..1483.752 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194177.74..194177.76 rows=1 width=34) (actual time=1482.610..1483.340 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194177.74..194177.75 rows=1 width=26) (actual time=1482.602..1482.868 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194177.73 rows=1 width=26) (actual time=10.019..1469.008 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194174.34 rows=1 width=38) (actual time=9.754..1394.596 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194171.03 rows=1 width=34) (actual time=9.487..250.299 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193170.93 rows=1 width=34) (actual time=2.389..793.445 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133625.76 rows=20002 width=34) (actual time=1.716..592.024 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131316.06 rows=500162 width=8) (actual time=0.100..519.955 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.515..1.516 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.438..1.438 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.219..0.221 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.215..1.159 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.126..0.126 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.079..0.079 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.010..0.010 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 15.741 ms
 Execution Time: 1484.797 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194177.77..194177.78 rows=1 width=34) (actual time=497.865..497.973 rows=100 loops=1)
   ->  Sort  (cost=194177.77..194177.78 rows=1 width=34) (actual time=497.864..497.966 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194177.74..194177.76 rows=1 width=34) (actual time=496.834..497.553 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194177.74..194177.75 rows=1 width=26) (actual time=496.823..497.080 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194177.73 rows=1 width=26) (actual time=1.624..483.037 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194174.34 rows=1 width=38) (actual time=1.570..465.136 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194171.03 rows=1 width=34) (actual time=1.561..412.850 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193170.93 rows=1 width=34) (actual time=1.307..462.667 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133625.76 rows=20002 width=34) (actual time=0.879..353.816 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131316.06 rows=500162 width=8) (actual time=0.036..276.039 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.756..0.757 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.065..0.690 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.052..0.627 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.027..0.027 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.205 ms
 Execution Time: 498.061 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.17 rows=1 width=72) (actual time=179.574..181.308 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.84 rows=1 width=32) (actual time=49.181..49.259 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=49.048..49.241 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=42.208..42.209 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1990 width=6) (actual time=0.113..40.965 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7458.15 rows=742 width=72) (actual time=179.573..181.228 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7439.60 rows=742 width=38) (actual time=75.178..180.704 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=74.452..77.646 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.980..23.140 rows=1525 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 742kB
                           Worker 0:  Sort Method: quicksort  Memory: 657kB
                           Worker 1:  Sort Method: quicksort  Memory: 669kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.016..20.133 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.037..0.037 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 15.574 ms
 Execution Time: 181.741 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.17 rows=1 width=72) (actual time=60.390..61.866 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.84 rows=1 width=32) (actual time=28.844..28.914 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.729..28.903 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.629..26.629 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1990 width=6) (actual time=0.017..25.397 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7458.15 rows=742 width=72) (actual time=60.389..61.794 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7439.60 rows=742 width=38) (actual time=53.783..61.581 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=53.752..55.875 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.316..22.400 rows=1553 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 767kB
                           Worker 0:  Sort Method: quicksort  Memory: 639kB
                           Worker 1:  Sort Method: quicksort  Memory: 661kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..20.133 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.678 ms
 Execution Time: 61.921 ms
(30 rows)

