query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=395006.87..395006.87 rows=1 width=236) (actual time=7121.389..7121.390 rows=1 loops=1)
   ->  Sort  (cost=395006.87..395006.88 rows=6 width=236) (actual time=7121.387..7121.388 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=395006.67..395006.84 rows=6 width=236) (actual time=7121.351..7121.358 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187579.31 rows=5926496 width=25) (actual time=0.578..1162.697 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 13.665 ms
 Execution Time: 7121.742 ms
(12 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=395006.87..395006.87 rows=1 width=236) (actual time=6919.216..6919.218 rows=1 loops=1)
   ->  Sort  (cost=395006.87..395006.88 rows=6 width=236) (actual time=6919.215..6919.216 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=395006.67..395006.84 rows=6 width=236) (actual time=6919.184..6919.191 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               Batches: 1  Memory Usage: 24kB
               ->  Seq Scan on lineitem  (cost=0.00..187579.31 rows=5926496 width=25) (actual time=0.025..975.220 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 0.534 ms
 Execution Time: 6919.271 ms
(12 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47280.79..47280.80 rows=1 width=192) (actual time=477.397..477.414 rows=100 loops=1)
   ->  Sort  (cost=47280.79..47280.80 rows=1 width=192) (actual time=477.396..477.407 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=32942.01..47280.78 rows=1 width=192) (actual time=369.604..476.974 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=784 width=30) (actual time=0.424..64.673 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=368.434..368.438 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=7.049..302.978 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.549..185.736 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.491..6.494 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.774..6.016 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.336..4.377 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.430..0.432 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.419..0.429 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.189..0.192 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.220..0.220 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.214..0.216 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.032..0.032 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.025..0.031 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.019..0.029 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.017..0.025 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.015..0.016 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.182 ms
 Execution Time: 477.588 ms
(47 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47280.79..47280.80 rows=1 width=192) (actual time=293.591..293.608 rows=100 loops=1)
   ->  Sort  (cost=47280.79..47280.80 rows=1 width=192) (actual time=293.590..293.601 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 67kB
         ->  Hash Join  (cost=32942.01..47280.78 rows=1 width=192) (actual time=235.506..293.234 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Seq Scan on part  (cost=0.00..7099.00 rows=784 width=30) (actual time=0.016..37.078 rows=799 loops=1)
                     Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                     Rows Removed by Filter: 199201
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=235.069..235.072 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.569..174.209 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..54.248 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.560..2.563 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.027..2.119 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.723 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.023..0.025 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.018..0.023 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.912 ms
 Execution Time: 293.747 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285481.90..285481.92 rows=10 width=44) (actual time=2226.174..2226.179 rows=10 loops=1)
   ->  Sort  (cost=285481.90..286278.08 rows=318473 width=44) (actual time=2226.172..2226.176 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=270886.79..278599.81 rows=318473 width=44) (actual time=2219.652..2224.087 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51184.88..254142.08 rows=318473 width=24) (actual time=817.732..2197.864 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187579.31 rows=3251508 width=16) (actual time=0.645..1085.788 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49347.92..49347.92 rows=146957 width=12) (actual time=816.063..816.065 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12369.02..49347.92 rows=146957 width=12) (actual time=94.210..774.710 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6512.83..41608.99 rows=717213 width=16) (actual time=41.996..561.102 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6333.52 rows=717213 width=0) (actual time=37.647..37.647 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30735 width=4) (actual time=52.118..52.119 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30735 width=4) (actual time=0.444..47.466 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 15.579 ms
 Execution Time: 2227.525 ms
(28 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=285481.90..285481.92 rows=10 width=44) (actual time=1477.583..1477.588 rows=10 loops=1)
   ->  Sort  (cost=285481.90..286278.08 rows=318473 width=44) (actual time=1477.582..1477.586 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  HashAggregate  (cost=270886.79..278599.81 rows=318473 width=44) (actual time=1471.052..1475.485 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               Planned Partitions: 4  Batches: 1  Memory Usage: 12305kB
               ->  Hash Join  (cost=51184.88..254142.08 rows=318473 width=24) (actual time=286.796..1451.619 rows=30533 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..187579.31 rows=3251508 width=16) (actual time=0.042..881.704 rows=3261873 loops=1)
                           Filter: (l_shipdate > '1995-03-07'::date)
                           Rows Removed by Filter: 2739342
                     ->  Hash  (cost=49347.92..49347.92 rows=146957 width=12) (actual time=286.156..286.158 rows=146063 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                           ->  Hash Join  (cost=12369.02..49347.92 rows=146957 width=12) (actual time=60.486..260.860 rows=146063 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=6512.83..41608.99 rows=717213 width=16) (actual time=34.091..136.783 rows=722275 loops=1)
                                       Recheck Cond: (o_orderdate < '1995-03-07'::date)
                                       Heap Blocks: exact=26131
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6333.52 rows=717213 width=0) (actual time=30.512..30.512 rows=722275 loops=1)
                                             Index Cond: (o_orderdate < '1995-03-07'::date)
                                 ->  Hash  (cost=5472.00..5472.00 rows=30735 width=4) (actual time=26.369..26.370 rows=30142 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                       ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30735 width=4) (actual time=0.007..22.849 rows=30142 loops=1)
                                             Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                             Rows Removed by Filter: 119858
 Planning Time: 1.321 ms
 Execution Time: 1478.749 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=182372.07..182372.08 rows=1 width=24) (actual time=2070.396..2070.397 rows=1 loops=1)
   ->  Sort  (cost=182372.07..182372.09 rows=5 width=24) (actual time=2070.394..2070.395 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=182372.00..182372.05 rows=5 width=24) (actual time=2069.584..2069.586 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=636.91..182097.58 rows=54883 width=16) (actual time=9.430..2036.715 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=636.48..27590.72 rows=54883 width=20) (actual time=8.982..533.849 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..622.76 rows=54883 width=0) (actual time=5.300..5.300 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.026..0.026 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 13.756 ms
 Execution Time: 2071.422 ms
(19 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=182372.07..182372.08 rows=1 width=24) (actual time=195.505..195.506 rows=1 loops=1)
   ->  Sort  (cost=182372.07..182372.09 rows=5 width=24) (actual time=195.504..195.505 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=182372.00..182372.05 rows=5 width=24) (actual time=195.472..195.474 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               Batches: 1  Memory Usage: 24kB
               ->  Nested Loop Semi Join  (cost=636.91..182097.58 rows=54883 width=16) (actual time=6.887..180.087 rows=51398 loops=1)
                     ->  Bitmap Heap Scan on orders  (cost=636.48..27590.72 rows=54883 width=20) (actual time=6.866..41.032 rows=55973 loops=1)
                           Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                           Heap Blocks: exact=23186
                           ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..622.76 rows=54883 width=0) (actual time=3.591..3.592 rows=55973 loops=1)
                                 Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Filter: (l_commitdate < l_receiptdate)
                           Rows Removed by Filter: 1
 Planning Time: 0.786 ms
 Execution Time: 195.567 ms
(19 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=188731.06..188731.07 rows=1 width=58) (actual time=2211.151..2211.156 rows=1 loops=1)
   ->  Sort  (cost=188731.06..188731.13 rows=25 width=58) (actual time=2211.149..2211.154 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=188639.48..188730.94 rows=25 width=58) (actual time=2208.544..2211.134 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=188639.48..188657.71 rows=7292 width=38) (actual time=2207.888..2208.182 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 664kB
                     ->  Hash Join  (cost=9449.14..188171.62 rows=7292 width=38) (actual time=86.066..2203.364 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8976.14..186741.71 rows=182265 width=50) (actual time=79.758..2158.661 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8975.70..39834.20 rows=45566 width=38) (actual time=79.359..720.443 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2638.70..32187.16 rows=227831 width=8) (actual time=17.755..590.005 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2581.74 rows=227831 width=0) (actual time=13.641..13.642 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=61.543..61.545 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=1.140..55.640 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.559..38.439 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.569..0.570 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.557..0.567 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.266..0.269 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.277..0.277 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.268..0.270 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.029..0.031 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=6.123..6.124 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.369..4.826 rows=10000 loops=1)
 Planning Time: 21.856 ms
 Execution Time: 2211.782 ms
(41 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=188731.06..188731.07 rows=1 width=58) (actual time=330.562..330.567 rows=1 loops=1)
   ->  Sort  (cost=188731.06..188731.13 rows=25 width=58) (actual time=330.561..330.565 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=188639.48..188730.94 rows=25 width=58) (actual time=327.976..330.548 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=188639.48..188657.71 rows=7292 width=38) (actual time=327.324..327.613 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 664kB
                     ->  Hash Join  (cost=9449.14..188171.62 rows=7292 width=38) (actual time=52.329..324.668 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=8976.14..186741.71 rows=182265 width=50) (actual time=49.594..300.177 rows=182435 loops=1)
                                 ->  Hash Join  (cost=8975.70..39834.20 rows=45566 width=38) (actual time=49.579..148.056 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=2638.70..32187.16 rows=227831 width=8) (actual time=14.170..70.389 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2581.74 rows=227831 width=0) (actual time=10.676..10.677 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=35.376..35.378 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.036..30.536 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.010..10.546 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.021..0.023 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.016..0.021 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.002..0.003 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.714..2.715 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.449 rows=10000 loops=1)
 Planning Time: 3.303 ms
 Execution Time: 330.880 ms
(41 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107087.03..107087.04 rows=1 width=32) (actual time=1440.362..1440.363 rows=1 loops=1)
   ->  Aggregate  (cost=107087.03..107087.04 rows=1 width=32) (actual time=1440.360..1440.361 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20978.73..106511.22 rows=115161 width=12) (actual time=128.039..1356.949 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20949.94 rows=115161 width=0) (actual time=116.944..116.944 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.307 ms
 Execution Time: 1441.504 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107087.03..107087.04 rows=1 width=32) (actual time=210.313..210.314 rows=1 loops=1)
   ->  Aggregate  (cost=107087.03..107087.04 rows=1 width=32) (actual time=210.311..210.312 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=20978.73..106511.22 rows=115161 width=12) (actual time=101.821..180.045 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20949.94 rows=115161 width=0) (actual time=91.209..91.209 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.533 ms
 Execution Time: 210.400 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233436.04..233436.07 rows=1 width=116) (actual time=3211.229..3211.234 rows=1 loops=1)
   ->  GroupAggregate  (cost=233436.04..233631.17 rows=6004 width=116) (actual time=3211.227..3211.232 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=233436.04..233451.05 rows=6004 width=96) (actual time=3210.445..3210.503 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 730kB
               ->  Hash Join  (cost=84449.74..233059.24 rows=6004 width=96) (actual time=755.247..3205.617 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84084.64..231907.33 rows=144262 width=46) (actual time=749.042..3171.255 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=28919.74..168535.79 rows=1803737 width=24) (actual time=214.255..2369.125 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28468.80 rows=1803737 width=0) (actual time=193.129..193.129 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=534.506..534.509 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=55.282..510.456 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.569..278.983 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=54.688..54.690 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.630..52.433 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.579..37.799 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.030..0.031 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.021..0.025 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.625..5.627 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.550..5.496 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.301..4.250 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.242..0.242 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.237..0.239 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 21.146 ms
 Execution Time: 3211.604 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233436.04..233436.07 rows=1 width=116) (actual time=988.348..988.354 rows=1 loops=1)
   ->  GroupAggregate  (cost=233436.04..233631.17 rows=6004 width=116) (actual time=988.346..988.352 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
         ->  Sort  (cost=233436.04..233451.05 rows=6004 width=96) (actual time=987.585..987.643 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
               Sort Method: quicksort  Memory: 730kB
               ->  Hash Join  (cost=84449.74..233059.24 rows=6004 width=96) (actual time=465.261..984.350 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=84084.64..231907.33 rows=144262 width=46) (actual time=463.157..964.675 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=28919.74..168535.79 rows=1803737 width=24) (actual time=158.006..452.704 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..28468.80 rows=1803737 width=0) (actual time=137.657..137.657 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=305.058..305.061 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=29.331..285.583 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.007..92.161 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=29.311..29.313 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.019..27.720 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..10.225 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.031..2.032 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.017..1.934 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..0.717 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.008 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 2.803 ms
 Execution Time: 988.464 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114050.65..114050.69 rows=1 width=64) (actual time=6255.683..6255.690 rows=1 loops=1)
   ->  GroupAggregate  (cost=114050.65..114153.53 rows=2406 width=64) (actual time=6255.682..6255.688 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114050.65..114056.73 rows=2434 width=70) (actual time=6255.047..6255.102 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 271kB
               ->  Nested Loop  (cost=78896.89..113913.75 rows=2434 width=70) (actual time=5686.611..6253.342 rows=2485 loops=1)
                     ->  Hash Join  (cost=78896.74..113825.34 rows=2434 width=20) (actual time=5686.594..6249.755 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78448.74..113370.95 rows=2434 width=20) (actual time=5680.798..6242.884 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72111.74..106963.96 rows=12172 width=24) (actual time=5622.553..6181.369 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5311.99..38322.59 rows=458640 width=12) (actual time=29.544..511.179 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5197.33 rows=458640 width=0) (actual time=25.160..25.161 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66302.00..66302.00 rows=39820 width=20) (actual time=5592.872..5592.873 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66302.00 rows=39820 width=20) (actual time=1.986..5548.035 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1327 width=4) (actual time=1.349..72.871 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24) (actual time=0.247..4.127 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=58.224..58.226 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.970..54.142 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.537..37.381 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.426..0.427 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.415..0.425 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.189..0.192 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.216..0.217 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.212..0.213 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.788..5.789 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.380..4.586 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 24.850 ms
 Execution Time: 6256.346 ms
(52 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114050.65..114050.69 rows=1 width=64) (actual time=267.643..267.650 rows=1 loops=1)
   ->  GroupAggregate  (cost=114050.65..114153.53 rows=2406 width=64) (actual time=267.642..267.648 rows=1 loops=1)
         Group Key: (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=114050.65..114056.73 rows=2434 width=70) (actual time=267.028..267.081 rows=1235 loops=1)
               Sort Key: (EXTRACT(year FROM orders.o_orderdate))
               Sort Method: quicksort  Memory: 271kB
               ->  Nested Loop  (cost=78896.89..113913.75 rows=2434 width=70) (actual time=131.362..266.143 rows=2485 loops=1)
                     ->  Hash Join  (cost=78896.74..113825.34 rows=2434 width=20) (actual time=131.350..264.275 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=78448.74..113370.95 rows=2434 width=20) (actual time=128.841..260.839 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=72111.74..106963.96 rows=12172 width=24) (actual time=95.144..224.503 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=5311.99..38322.59 rows=458640 width=12) (actual time=23.222..100.140 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5197.33 rows=458640 width=0) (actual time=19.650..19.650 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=66302.00..66302.00 rows=39820 width=20) (actual time=71.877..71.878 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.43..66302.00 rows=39820 width=20) (actual time=0.054..64.267 rows=39694 loops=1)
                                                   ->  Seq Scan on part  (cost=0.00..6599.00 rows=1327 width=4) (actual time=0.042..24.008 rows=1320 loops=1)
                                                         Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                         Rows Removed by Filter: 198680
                                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..44.68 rows=31 width=24) (actual time=0.003..0.027 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=33.677..33.679 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.028..30.108 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.008..10.424 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.017..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.012..0.017 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.004 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.502..2.502 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.374 rows=10000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=2485)
                           Cache Key: supplier.s_nationkey
                           Cache Mode: logical
                           Hits: 2460  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation n2  (cost=0.14..0.91 rows=1 width=30) (actual time=0.002..0.002 rows=1 loops=25)
                                 Index Cond: (n_nationkey = supplier.s_nationkey)
 Planning Time: 3.823 ms
 Execution Time: 267.976 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102649.65..102649.68 rows=1 width=90) (actual time=16608.312..16608.316 rows=1 loops=1)
   ->  GroupAggregate  (cost=102649.65..102652.17 rows=72 width=90) (actual time=16608.311..16608.315 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=102649.65..102649.83 rows=72 width=81) (actual time=16607.233..16607.457 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 21200kB
               ->  Nested Loop  (cost=1.57..102647.42 rows=72 width=81) (actual time=2.919..16219.675 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 3898820
                     ->  Nested Loop  (cost=1.57..102619.97 rows=72 width=31) (actual time=2.660..15478.564 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..102393.44 rows=72 width=31) (actual time=1.805..11737.548 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..102181.19 rows=72 width=35) (actual time=1.407..10991.710 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..26328.13 rows=23922 width=18) (actual time=0.894..295.449 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=6061 width=4) (actual time=0.417..87.644 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.015..0.018 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.034..0.243 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.233..0.240 rows=25 loops=1)
 Planning Time: 26.270 ms
 Execution Time: 16611.317 ms
(28 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=102649.65..102649.68 rows=1 width=90) (actual time=2528.841..2528.845 rows=1 loops=1)
   ->  GroupAggregate  (cost=102649.65..102652.17 rows=72 width=90) (actual time=2528.840..2528.843 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Sort  (cost=102649.65..102649.83 rows=72 width=81) (actual time=2527.764..2527.987 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Sort Method: external merge  Disk: 21200kB
               ->  Nested Loop  (cost=1.57..102647.42 rows=72 width=81) (actual time=0.058..2200.584 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 3898820
                     ->  Nested Loop  (cost=1.57..102619.97 rows=72 width=31) (actual time=0.042..1678.182 rows=325928 loops=1)
                           ->  Nested Loop  (cost=1.14..102393.44 rows=72 width=31) (actual time=0.037..863.797 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.86..102181.19 rows=72 width=35) (actual time=0.033..442.196 rows=325928 loops=1)
                                       ->  Nested Loop  (cost=0.42..26328.13 rows=23922 width=18) (actual time=0.027..82.929 rows=43520 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=6061 width=4) (actual time=0.019..41.630 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                                   Rows Removed by Filter: 189120
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.22 rows=4 width=14) (actual time=0.002..0.003 rows=4 loops=10880)
                                                   Index Cond: (ps_partkey = part.p_partkey)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.002..0.007 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.95 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Planning Time: 4.859 ms
 Execution Time: 2531.635 ms
(28 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219561.00..219561.05 rows=20 width=202) (actual time=2229.034..2229.041 rows=20 loops=1)
   ->  Sort  (cost=219561.00..219699.28 rows=55314 width=202) (actual time=2229.033..2229.038 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=217397.69..218089.11 rows=55314 width=202) (actual time=2199.161..2217.959 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=7623.10..216706.26 rows=55314 width=182) (actual time=100.250..2073.994 rows=114347 loops=1)
                     ->  Hash Join  (cost=7622.96..215331.24 rows=55314 width=160) (actual time=100.000..2010.189 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=650.96..208214.04 rows=55314 width=16) (actual time=10.370..1865.552 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=650.52..27623.13 rows=56107 width=8) (actual time=9.210..502.715 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..636.50 rows=56107 width=0) (actual time=5.301..5.301 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.021..0.023 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=89.201..89.202 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.535..48.274 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.011..0.011 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 21.614 ms
 Execution Time: 2229.796 ms
(31 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219561.00..219561.05 rows=20 width=202) (actual time=534.587..534.594 rows=20 loops=1)
   ->  Sort  (cost=219561.00..219699.28 rows=55314 width=202) (actual time=534.586..534.591 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=217397.69..218089.11 rows=55314 width=202) (actual time=504.907..523.579 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Nested Loop  (cost=7623.10..216706.26 rows=55314 width=182) (actual time=71.752..413.303 rows=114347 loops=1)
                     ->  Hash Join  (cost=7622.96..215331.24 rows=55314 width=160) (actual time=71.735..364.053 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=650.96..208214.04 rows=55314 width=16) (actual time=6.943..256.654 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=650.52..27623.13 rows=56107 width=8) (actual time=6.903..43.545 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..636.50 rows=56107 width=0) (actual time=3.587..3.588 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.002..0.003 rows=2 loops=57111)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                       Rows Removed by Filter: 2
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=64.352..64.353 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.010..24.985 rows=150000 loops=1)
                     ->  Memoize  (cost=0.15..0.92 rows=1 width=30) (actual time=0.000..0.000 rows=1 loops=114347)
                           Cache Key: customer.c_nationkey
                           Cache Mode: logical
                           Hits: 114322  Misses: 25  Evictions: 0  Overflows: 0  Memory Usage: 4kB
                           ->  Index Scan using nation_pkey on nation  (cost=0.14..0.91 rows=1 width=30) (actual time=0.001..0.001 rows=1 loops=25)
                                 Index Cond: (n_nationkey = customer.c_nationkey)
 Planning Time: 1.374 ms
 Execution Time: 535.031 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.66..15992.66 rows=1 width=36) (actual time=684.652..684.657 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.66..7689.67 rows=1 width=32) (actual time=26.312..26.314 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=10) (actual time=0.053..18.321 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.278 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.99..8329.66 rows=10667 width=36) (actual time=684.651..684.652 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.65..8249.65 rows=10667 width=36) (actual time=674.046..684.501 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=14) (actual time=1.277..617.898 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.818..4.155 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.251..0.254 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.559..3.802 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.294..0.294 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.041..1.476 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 12.892 ms
 Execution Time: 685.000 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.66..15992.66 rows=1 width=36) (actual time=82.690..82.695 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.66..7689.67 rows=1 width=32) (actual time=26.536..26.538 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=10) (actual time=0.051..18.413 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.277 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.219 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.017 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.99..8329.66 rows=10667 width=36) (actual time=82.689..82.690 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.65..8249.65 rows=10667 width=36) (actual time=72.075..82.538 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.65 rows=32000 width=14) (actual time=0.064..27.247 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.052..0.422 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.041..0.356 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.021 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.904 ms
 Execution Time: 83.064 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302750.08..302832.19 rows=1 width=27) (actual time=2017.076..2017.078 rows=1 loops=1)
   ->  GroupAggregate  (cost=302750.08..303324.81 rows=7 width=27) (actual time=2017.074..2017.076 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302750.08..302821.91 rows=28733 width=27) (actual time=2012.516..2013.106 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2461kB
               ->  Hash Join  (cost=247954.01..300622.34 rows=28733 width=27) (actual time=1541.276..2005.854 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.605..274.686 rows=1500000 loops=1)
                     ->  Hash  (cost=247594.76..247594.76 rows=28740 width=15) (actual time=1540.548..1540.549 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247594.76 rows=28740 width=15) (actual time=1.150..1533.119 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 13.879 ms
 Execution Time: 2017.492 ms
(16 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302750.08..302832.19 rows=1 width=27) (actual time=1583.787..1583.789 rows=1 loops=1)
   ->  GroupAggregate  (cost=302750.08..303324.81 rows=7 width=27) (actual time=1583.785..1583.787 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Sort  (cost=302750.08..302821.91 rows=28733 width=27) (actual time=1579.154..1579.748 rows=15492 loops=1)
               Sort Key: lineitem.l_shipmode
               Sort Method: quicksort  Memory: 2461kB
               ->  Hash Join  (cost=247954.01..300622.34 rows=28733 width=27) (actual time=1312.570..1573.802 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.004..90.747 rows=1500000 loops=1)
                     ->  Hash  (cost=247594.76..247594.76 rows=28740 width=15) (actual time=1312.532..1312.532 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Seq Scan on lineitem  (cost=0.00..247594.76 rows=28740 width=15) (actual time=0.108..1306.061 rows=30953 loops=1)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 5970262
 Planning Time: 1.233 ms
 Execution Time: 1583.857 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1441.437..1441.440 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1441.436..1441.438 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1441.205..1441.213 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1401.607..1424.051 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=33.718..1051.831 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.598..625.610 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.819..32.820 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..16.061 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.008 ms
 Execution Time: 1442.563 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1256.172..1256.176 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1256.171..1256.174 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1256.147..1256.155 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1217.029..1239.081 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=30.135..887.271 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.011..484.463 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.781..29.782 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..13.100 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.674 ms
 Execution Time: 1257.270 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78222.73..78222.75 rows=1 width=32) (actual time=793.995..793.998 rows=1 loops=1)
   ->  Aggregate  (cost=78222.73..78222.75 rows=1 width=32) (actual time=793.994..793.996 rows=1 loops=1)
         ->  Hash Join  (cost=9837.47..76872.18 rows=77174 width=33) (actual time=107.059..738.651 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1238.47..68070.60 rows=77174 width=16) (actual time=19.505..610.174 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1219.17 rows=77174 width=0) (actual time=12.654..12.654 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=87.376..87.376 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.479..53.377 rows=200000 loops=1)
 Planning Time: 13.497 ms
 Execution Time: 794.089 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=78222.73..78222.75 rows=1 width=32) (actual time=184.300..184.303 rows=1 loops=1)
   ->  Aggregate  (cost=78222.73..78222.75 rows=1 width=32) (actual time=184.299..184.301 rows=1 loops=1)
         ->  Hash Join  (cost=9837.47..76872.18 rows=77174 width=33) (actual time=72.702..153.575 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1238.47..68070.60 rows=77174 width=16) (actual time=14.275..68.166 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1219.17 rows=77174 width=0) (actual time=7.966..7.966 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=58.239..58.240 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.010..27.244 rows=200000 loops=1)
 Planning Time: 0.731 ms
 Execution Time: 184.363 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241675.68..241684.57 rows=1 width=103) (actual time=1788.081..1788.084 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120886.67..120886.68 rows=1 width=32) (actual time=219.411..219.412 rows=1 loops=1)
           ->  HashAggregate  (cost=120637.02..120761.84 rows=9986 width=36) (actual time=216.082..218.797 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3529.89..118436.09 rows=220093 width=16) (actual time=29.525..101.942 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3474.86 rows=220093 width=0) (actual time=18.888..18.888 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=120789.00..121233.25 rows=50 width=103) (actual time=1788.080..1788.081 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.410..4.677 rows=8449 loops=1)
         ->  Sort  (cost=120788.72..120788.84 rows=50 width=36) (actual time=1782.873..1782.874 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=120637.02..120787.31 rows=50 width=36) (actual time=1780.490..1782.864 rows=1 loops=1)
                     ->  HashAggregate  (cost=120637.02..120786.81 rows=50 width=36) (actual time=1780.488..1782.862 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3529.89..118436.09 rows=220093 width=16) (actual time=40.761..1298.126 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3474.86 rows=220093 width=0) (actual time=29.252..29.253 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 12.258 ms
 Execution Time: 1789.066 ms
(30 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241675.68..241684.57 rows=1 width=103) (actual time=470.331..470.334 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=120886.67..120886.68 rows=1 width=32) (actual time=218.622..218.623 rows=1 loops=1)
           ->  HashAggregate  (cost=120637.02..120761.84 rows=9986 width=36) (actual time=215.286..218.011 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3529.89..118436.09 rows=220093 width=16) (actual time=29.456..101.410 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3474.86 rows=220093 width=0) (actual time=18.836..18.836 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=120789.00..121233.25 rows=50 width=103) (actual time=470.330..470.331 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..418.79 rows=10000 width=71) (actual time=0.008..1.274 rows=8449 loops=1)
         ->  Sort  (cost=120788.72..120788.84 rows=50 width=36) (actual time=468.583..468.584 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=120637.02..120787.31 rows=50 width=36) (actual time=466.205..468.579 rows=1 loops=1)
                     ->  HashAggregate  (cost=120637.02..120786.81 rows=50 width=36) (actual time=466.204..468.577 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Batches: 1  Memory Usage: 4497kB
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=3529.89..118436.09 rows=220093 width=16) (actual time=31.034..129.546 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3474.86 rows=220093 width=0) (actual time=20.276..20.276 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 0.729 ms
 Execution Time: 470.711 ms
(30 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33742.98..33742.98 rows=1 width=44) (actual time=674.613..674.617 rows=1 loops=1)
   ->  Sort  (cost=33742.98..33782.87 rows=15955 width=44) (actual time=674.612..674.615 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32774.98..33663.20 rows=15955 width=44) (actual time=636.471..671.677 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32774.98..32920.71 rows=58294 width=40) (actual time=636.457..642.980 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10954kB
                     ->  Hash Join  (cost=9816.68..28160.70 rows=58294 width=40) (actual time=86.514..301.230 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=5.778..146.818 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.076..5.580 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29540 width=40) (actual time=80.698..80.699 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29540 width=40) (actual time=0.464..74.415 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 17.317 ms
 Execution Time: 674.696 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33742.98..33742.98 rows=1 width=44) (actual time=622.436..622.440 rows=1 loops=1)
   ->  Sort  (cost=33742.98..33782.87 rows=15955 width=44) (actual time=622.435..622.438 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=32774.98..33663.20 rows=15955 width=44) (actual time=584.313..619.511 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=32774.98..32920.71 rows=58294 width=40) (actual time=584.299..590.853 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                     Sort Method: quicksort  Memory: 10954kB
                     ->  Hash Join  (cost=9816.68..28160.70 rows=58294 width=40) (actual time=53.699..249.143 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..17642.43 rows=400000 width=8) (actual time=2.140..125.852 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.087..2.122 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29540 width=40) (actual time=51.529..51.530 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29540 width=40) (actual time=0.007..46.113 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.920 ms
 Execution Time: 622.489 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222986.12..222986.13 rows=1 width=32) (actual time=3728.532..3728.535 rows=1 loops=1)
   ->  Aggregate  (cost=222986.12..222986.13 rows=1 width=32) (actual time=3728.531..3728.533 rows=1 loops=1)
         ->  Nested Loop  (cost=207826.98..222981.42 rows=1879 width=8) (actual time=3565.899..3728.303 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=207826.55..214926.06 rows=188 width=40) (actual time=3565.393..3617.106 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=1.309..52.806 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205443.20..205443.20 rows=190668 width=36) (actual time=3563.783..3563.784 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202583.17..205443.20 rows=190668 width=36) (actual time=3198.455..3530.199 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172575.45 rows=6001545 width=9) (actual time=0.590..757.134 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.388..0.533 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 13.552 ms
 Execution Time: 3735.287 ms
(21 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=222986.12..222986.13 rows=1 width=32) (actual time=3314.652..3314.655 rows=1 loops=1)
   ->  Aggregate  (cost=222986.12..222986.13 rows=1 width=32) (actual time=3314.651..3314.653 rows=1 loops=1)
         ->  Nested Loop  (cost=207826.98..222981.42 rows=1879 width=8) (actual time=3285.275..3314.551 rows=592 loops=1)
               Join Filter: (lineitem.l_partkey = part.p_partkey)
               ->  Hash Join  (cost=207826.55..214926.06 rows=188 width=40) (actual time=3285.240..3310.511 rows=208 loops=1)
                     Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=0.113..25.277 rows=208 loops=1)
                           Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 199792
                     ->  Hash  (cost=205443.20..205443.20 rows=190668 width=36) (actual time=3284.780..3284.781 rows=200000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                           ->  HashAggregate  (cost=202583.17..205443.20 rows=190668 width=36) (actual time=2914.658..3251.440 rows=200000 loops=1)
                                 Group Key: lineitem_1.l_partkey
                                 Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                 ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172575.45 rows=6001545 width=9) (actual time=0.034..553.017 rows=6001215 loops=1)
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.007..0.019 rows=3 loops=208)
                     Index Cond: (l_partkey = lineitem_1.l_partkey)
                     Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                     Rows Removed by Filter: 27
 Planning Time: 0.847 ms
 Execution Time: 3321.220 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794694.86..794695.11 rows=100 width=71) (actual time=4476.035..4476.041 rows=9 loops=1)
   ->  Sort  (cost=794694.86..799696.15 rows=2000516 width=71) (actual time=4476.033..4476.038 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658064.80..718236.58 rows=2000516 width=71) (actual time=4475.289..4475.989 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335216.23..550302.63 rows=2000516 width=44) (actual time=3706.764..4475.214 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172575.45 rows=6001545 width=9) (actual time=0.646..339.937 rows=6001215 loops=1)
                     ->  Hash  (cost=328964.62..328964.62 rows=500129 width=43) (actual time=3501.129..3501.132 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282583.23..328964.62 rows=500129 width=43) (actual time=3153.250..3501.106 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275611.23..320679.75 rows=500129 width=24) (actual time=3084.402..3432.249 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.568..268.684 rows=1500000 loops=1)
                                       ->  Hash  (cost=269359.62..269359.62 rows=500129 width=4) (actual time=2987.044..2987.045 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269359.62 rows=500129 width=4) (actual time=637.365..2987.018 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216846.11 rows=6001545 width=9) (actual time=0.016..1620.200 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.523..68.524 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.513..42.472 rows=150000 loops=1)
 Planning Time: 15.835 ms
 Execution Time: 4477.792 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794694.86..794695.11 rows=100 width=71) (actual time=3430.082..3430.088 rows=9 loops=1)
   ->  Sort  (cost=794694.86..799696.15 rows=2000516 width=71) (actual time=3430.081..3430.086 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658064.80..718236.58 rows=2000516 width=71) (actual time=3429.340..3430.039 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335216.23..550302.63 rows=2000516 width=44) (actual time=2663.241..3429.266 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172575.45 rows=6001545 width=9) (actual time=0.016..335.588 rows=6001215 loops=1)
                     ->  Hash  (cost=328964.62..328964.62 rows=500129 width=43) (actual time=2458.875..2458.878 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282583.23..328964.62 rows=500129 width=43) (actual time=2245.770..2458.856 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275611.23..320679.75 rows=500129 width=24) (actual time=2201.196..2414.274 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..90.740 rows=1500000 loops=1)
                                       ->  Hash  (cost=269359.62..269359.62 rows=500129 width=4) (actual time=2143.579..2143.580 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269359.62 rows=500129 width=4) (actual time=453.387..2143.563 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216846.11 rows=6001545 width=9) (actual time=0.016..838.941 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.200..44.200 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.011..19.403 rows=150000 loops=1)
 Planning Time: 1.141 ms
 Execution Time: 3431.218 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=35630.40..35630.41 rows=1 width=32) (actual time=2465.927..2465.929 rows=1 loops=1)
   ->  Aggregate  (cost=35630.40..35630.41 rows=1 width=32) (actual time=2465.926..2465.927 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35629.55 rows=112 width=12) (actual time=14.335..2465.547 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=479 width=30) (actual time=1.398..90.324 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.07 rows=1 width=21) (actual time=4.189..4.683 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 16.332 ms
 Execution Time: 2465.984 ms
(12 rows)

SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 Limit  (cost=35630.40..35630.41 rows=1 width=32) (actual time=65.688..65.689 rows=1 loops=1)
   ->  Aggregate  (cost=35630.40..35630.41 rows=1 width=32) (actual time=65.687..65.687 rows=1 loops=1)
         ->  Nested Loop  (cost=0.43..35629.55 rows=112 width=12) (actual time=0.344..65.598 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=479 width=30) (actual time=0.225..48.189 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.07 rows=1 width=21) (actual time=0.030..0.034 rows=0 loops=507)
                     Index Cond: (l_partkey = part.p_partkey)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 30
 Planning Time: 0.965 ms
 Execution Time: 65.725 ms
(12 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208996.00..208996.00 rows=1 width=51) (actual time=3816.633..3816.636 rows=1 loops=1)
   ->  Sort  (cost=208996.00..208996.00 rows=1 width=51) (actual time=3816.631..3816.635 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184457.82..208995.99 rows=1 width=51) (actual time=3633.519..3816.407 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.560..3.808 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.230..0.232 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.324..2.821 rows=10000 loops=1)
               ->  Materialize  (cost=184457.82..208540.68 rows=1 width=8) (actual time=5.856..8.475 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184457.82..208540.67 rows=1 width=8) (actual time=2564.693..3627.119 rows=5898 loops=1)
                           ->  Hash Join  (cost=184457.40..201628.68 rows=4849 width=44) (actual time=2563.913..3133.520 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=177833.15..193744.25 rows=480061 width=40) (actual time=2513.877..3036.025 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14301.14..140239.99 rows=891923 width=13) (actual time=128.343..1994.633 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14078.16 rows=891923 width=0) (actual time=108.507..108.507 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=50.011..50.012 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.427..49.419 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.083..0.083 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 21.965 ms
 Execution Time: 3821.367 ms
(37 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=208996.00..208996.00 rows=1 width=51) (actual time=1420.687..1420.691 rows=1 loops=1)
   ->  Sort  (cost=208996.00..208996.00 rows=1 width=51) (actual time=1420.685..1420.688 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184457.82..208995.99 rows=1 width=51) (actual time=1252.917..1420.502 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.601 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.699 rows=10000 loops=1)
               ->  Materialize  (cost=184457.82..208540.68 rows=1 width=8) (actual time=1.644..3.010 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184457.82..208540.67 rows=1 width=8) (actual time=720.253..1249.671 rows=5898 loops=1)
                           ->  Hash Join  (cost=184457.40..201628.68 rows=4849 width=44) (actual time=720.229..1227.553 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=177833.15..193744.25 rows=480061 width=40) (actual time=697.873..1167.086 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14301.14..140239.99 rows=891923 width=13) (actual time=96.089..308.548 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14078.16 rows=891923 width=0) (actual time=76.846..76.846 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=2020 width=4) (actual time=22.334..22.335 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.032..21.991 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.889 ms
 Execution Time: 1424.935 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360172.63..360172.64 rows=1 width=34) (actual time=2621.678..2621.692 rows=100 loops=1)
   ->  Sort  (cost=360172.63..360172.64 rows=1 width=34) (actual time=2621.677..2621.685 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=360172.60..360172.62 rows=1 width=34) (actual time=2620.670..2621.283 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=360172.60..360172.61 rows=1 width=26) (actual time=2620.661..2620.832 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=197116.66..360172.59 rows=1 width=26) (actual time=1499.391..2607.751 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197116.22..360169.20 rows=1 width=38) (actual time=1499.356..2593.404 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197115.79..245101.14 rows=38653 width=38) (actual time=1498.302..1998.343 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=724750 width=4) (actual time=0.544..359.190 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196115.53..196115.53 rows=80021 width=34) (actual time=1497.435..1497.438 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196115.53 rows=80021 width=34) (actual time=7.007..1459.098 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187579.31 rows=2000515 width=8) (actual time=0.575..1171.043 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=6.362..6.363 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=1.017..6.253 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.181..0.183 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.830..5.985 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.481..0.482 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.007..0.007 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 15.176 ms
 Execution Time: 2622.069 ms
(44 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=360172.63..360172.64 rows=1 width=34) (actual time=1751.191..1751.206 rows=100 loops=1)
   ->  Sort  (cost=360172.63..360172.64 rows=1 width=34) (actual time=1751.190..1751.198 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=360172.60..360172.62 rows=1 width=34) (actual time=1750.176..1750.793 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=360172.60..360172.61 rows=1 width=26) (actual time=1750.168..1750.339 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=197116.66..360172.59 rows=1 width=26) (actual time=1274.848..1737.565 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop Anti Join  (cost=197116.22..360169.20 rows=1 width=38) (actual time=1274.833..1727.126 rows=6909 loops=1)
                                 ->  Hash Join  (cost=197115.79..245101.14 rows=38653 width=38) (actual time=1274.713..1569.441 rows=76644 loops=1)
                                       Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=724750 width=4) (actual time=0.006..174.845 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 770587
                                       ->  Hash  (cost=196115.53..196115.53 rows=80021 width=34) (actual time=1274.409..1274.412 rows=159165 loops=1)
                                             Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                             ->  Hash Join  (cost=234.08..196115.53 rows=80021 width=34) (actual time=0.477..1237.953 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Seq Scan on lineitem l1  (cost=0.00..187579.31 rows=2000515 width=8) (actual time=0.035..967.029 rows=3793296 loops=1)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 2207919
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.419..0.421 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.050..0.364 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.043..0.316 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.021..0.021 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.001..0.001 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.135 ms
 Execution Time: 1751.318 ms
(44 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16083.02..16083.04 rows=1 width=72) (actual time=200.315..200.317 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=32) (actual time=100.881..100.882 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4780 width=6) (actual time=0.017..97.229 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8536.55..8556.44 rows=723 width=72) (actual time=200.314..200.314 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8536.55..8538.36 rows=723 width=38) (actual time=200.117..200.153 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 442kB
               ->  Nested Loop Anti Join  (cost=0.43..8502.22 rows=723 width=38) (actual time=101.360..197.706 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=101.344..155.716 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 13.048 ms
 Execution Time: 200.855 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16083.02..16083.04 rows=1 width=72) (actual time=158.222..158.224 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.45..7546.46 rows=1 width=32) (actual time=75.519..75.520 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4780 width=6) (actual time=0.007..72.211 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8536.55..8556.44 rows=723 width=72) (actual time=158.221..158.221 rows=1 loops=1)
         Group Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
         ->  Sort  (cost=8536.55..8538.36 rows=723 width=38) (actual time=158.025..158.061 rows=952 loops=1)
               Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
               Sort Method: quicksort  Memory: 442kB
               ->  Nested Loop Anti Join  (cost=0.43..8502.22 rows=723 width=38) (actual time=75.558..155.806 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=75.543..126.714 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.001..0.001 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.738 ms
 Execution Time: 158.267 ms
(20 rows)

