query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184204.57..184205.20 rows=1 width=236) (actual time=2088.701..2091.722 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184204.57..184208.38 rows=6 width=236) (actual time=2088.700..2091.720 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184204.57..184207.44 rows=24 width=236) (actual time=2088.677..2091.700 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183204.51..183204.52 rows=6 width=236) (actual time=2079.142..2079.143 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183204.30..183204.43 rows=6 width=236) (actual time=2079.110..2079.115 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.89 rows=1482583 width=25) (actual time=0.747..455.964 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 12.293 ms
 Execution Time: 2092.550 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184204.57..184205.20 rows=1 width=236) (actual time=1939.272..1939.353 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184204.57..184208.38 rows=6 width=236) (actual time=1939.271..1939.351 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184204.57..184207.44 rows=24 width=236) (actual time=1939.239..1939.323 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183204.51..183204.52 rows=6 width=236) (actual time=1934.862..1934.863 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183204.30..183204.43 rows=6 width=236) (actual time=1934.832..1934.838 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.89 rows=1482583 width=25) (actual time=0.026..295.020 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.794 ms
 Execution Time: 1939.430 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46694.58..46694.58 rows=1 width=192) (actual time=444.864..444.966 rows=100 loops=1)
   ->  Sort  (cost=46694.58..46694.58 rows=1 width=192) (actual time=444.863..444.959 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=33915.38..46694.57 rows=1 width=192) (actual time=380.298..444.554 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6428.60 rows=796 width=30) (actual time=1.972..2.239 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=332 width=30) (actual time=0.394..34.764 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30531.36..30531.36 rows=158935 width=172) (actual time=377.579..377.583 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30531.36 rows=158935 width=172) (actual time=8.186..307.749 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.545..185.294 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=7.627..7.630 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=1.252..7.122 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.339..4.965 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.907..0.909 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.901..0.906 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.706..0.707 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.188..0.189 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.184..0.185 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.049..0.049 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.042..0.047 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.036..0.045 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.034..0.041 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.032..0.033 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 21.561 ms
 Execution Time: 445.114 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=46694.58..46694.58 rows=1 width=192) (actual time=264.192..264.291 rows=100 loops=1)
   ->  Sort  (cost=46694.58..46694.58 rows=1 width=192) (actual time=264.191..264.283 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=33915.38..46694.57 rows=1 width=192) (actual time=243.915..263.938 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6428.60 rows=796 width=30) (actual time=0.267..0.479 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=332 width=30) (actual time=0.030..13.828 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30531.36..30531.36 rows=158935 width=172) (actual time=243.220..243.224 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30531.36 rows=158935 width=172) (actual time=2.821..178.603 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.005..56.510 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.809..2.812 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.041..2.300 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.773 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.036..0.037 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.030..0.035 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.009..0.013 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.008 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.902 ms
 Execution Time: 264.428 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232658.62..232658.64 rows=10 width=44) (actual time=1221.247..1222.898 rows=10 loops=1)
   ->  Sort  (cost=232658.62..233440.36 rows=312696 width=44) (actual time=1221.246..1222.896 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179861.68..225901.37 rows=312696 width=44) (actual time=1198.609..1220.624 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179861.68..217302.23 rows=312696 width=24) (actual time=1198.595..1204.591 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178861.63..179057.06 rows=78174 width=24) (actual time=1187.472..1187.751 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 511kB
                           Worker 0:  Sort Method: quicksort  Memory: 532kB
                           Worker 1:  Sort Method: quicksort  Memory: 518kB
                           Worker 2:  Sort Method: quicksort  Memory: 503kB
                           Worker 3:  Sort Method: quicksort  Memory: 509kB
                           ->  Parallel Hash Join  (cost=37913.17..172508.27 rows=78174 width=24) (actual time=261.426..1185.757 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.89 rows=807744 width=16) (actual time=0.532..852.258 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37327.68..37327.68 rows=46839 width=12) (actual time=259.535..259.537 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.84..37327.68 rows=46839 width=12) (actual time=32.147..250.088 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233689 width=16) (actual time=0.435..188.483 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12527 width=4) (actual time=31.606..31.606 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1568kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12527 width=4) (actual time=0.986..29.976 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 16.305 ms
 Execution Time: 1223.554 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232658.62..232658.64 rows=10 width=44) (actual time=459.497..462.872 rows=10 loops=1)
   ->  Sort  (cost=232658.62..233440.36 rows=312696 width=44) (actual time=459.496..462.870 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179861.68..225901.37 rows=312696 width=44) (actual time=436.991..460.608 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179861.68..217302.23 rows=312696 width=24) (actual time=436.976..444.704 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178861.63..179057.06 rows=78174 width=24) (actual time=432.314..432.584 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 545kB
                           Worker 0:  Sort Method: quicksort  Memory: 551kB
                           Worker 1:  Sort Method: quicksort  Memory: 511kB
                           Worker 2:  Sort Method: quicksort  Memory: 564kB
                           Worker 3:  Sort Method: quicksort  Memory: 307kB
                           ->  Parallel Hash Join  (cost=37913.17..172508.27 rows=78174 width=24) (actual time=98.780..429.365 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.89 rows=807744 width=16) (actual time=0.052..249.211 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37327.68..37327.68 rows=46839 width=12) (actual time=97.277..97.280 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.84..37327.68 rows=46839 width=12) (actual time=8.862..87.978 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233689 width=16) (actual time=0.014..53.317 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12527 width=4) (actual time=8.351..8.352 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12527 width=4) (actual time=0.011..6.264 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 0.990 ms
 Execution Time: 462.943 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29303.38..61837.25 rows=1 width=24) (actual time=2988.503..2993.611 rows=1 loops=1)
   ->  GroupAggregate  (cost=29303.38..191972.69 rows=5 width=24) (actual time=2988.501..2993.608 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29303.38..191695.84 rows=55361 width=16) (actual time=431.391..2984.386 rows=10479 loops=1)
               ->  Gather Merge  (cost=29302.95..35852.51 rows=55361 width=20) (actual time=430.741..448.288 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28302.91..28347.56 rows=17858 width=20) (actual time=422.246..422.705 rows=3792 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1051kB
                           Worker 0:  Sort Method: quicksort  Memory: 1038kB
                           Worker 1:  Sort Method: quicksort  Memory: 1041kB
                           Worker 2:  Sort Method: quicksort  Memory: 1031kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=642.88..27041.75 rows=17858 width=20) (actual time=5.051..416.809 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5813
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..629.04 rows=55361 width=0) (actual time=7.334..7.334 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.221..0.221 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 17.043 ms
 Execution Time: 2993.697 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29303.38..61837.25 rows=1 width=24) (actual time=75.715..81.247 rows=1 loops=1)
   ->  GroupAggregate  (cost=29303.38..191972.69 rows=5 width=24) (actual time=75.714..81.245 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29303.38..191695.84 rows=55361 width=16) (actual time=33.124..79.685 rows=10479 loops=1)
               ->  Gather Merge  (cost=29302.95..35852.51 rows=55361 width=20) (actual time=33.087..41.523 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28302.91..28347.56 rows=17858 width=20) (actual time=30.016..30.298 rows=3781 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1046kB
                           Worker 0:  Sort Method: quicksort  Memory: 1035kB
                           Worker 1:  Sort Method: quicksort  Memory: 1041kB
                           Worker 2:  Sort Method: quicksort  Memory: 1041kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=642.88..27041.75 rows=17858 width=20) (actual time=6.152..26.686 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5819
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..629.04 rows=55361 width=0) (actual time=5.424..5.424 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.810 ms
 Execution Time: 81.304 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83612.36..83612.36 rows=1 width=58) (actual time=2369.295..2379.375 rows=1 loops=1)
   ->  Sort  (cost=83612.36..83612.42 rows=25 width=58) (actual time=2369.294..2379.373 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83573.21..83612.23 rows=25 width=58) (actual time=2368.756..2379.363 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83573.21..83611.36 rows=75 width=58) (actual time=2368.539..2379.345 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82573.17..82602.51 rows=25 width=58) (actual time=2359.783..2360.492 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82573.17..82578.97 rows=2322 width=38) (actual time=2359.600..2359.686 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 166kB
                                 Worker 0:  Sort Method: quicksort  Memory: 166kB
                                 Worker 1:  Sort Method: quicksort  Memory: 164kB
                                 Worker 2:  Sort Method: quicksort  Memory: 170kB
                                 ->  Hash Join  (cost=7818.63..82443.36 rows=2322 width=38) (actual time=49.872..2357.881 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7345.63..81665.73 rows=58024 width=50) (actual time=44.720..2339.831 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7345.20..34896.58 rows=14506 width=38) (actual time=43.979..284.302 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2605.07..29824.02 rows=72530 width=8) (actual time=19.927..233.554 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6460
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2548.86 rows=224843 width=0) (actual time=15.905..15.905 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=23.906..23.909 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.314..21.597 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.140..16.851 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.104..0.105 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.098..0.103 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.046..0.047 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.171..0.180 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.837..3.838 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.085..2.406 rows=10000 loops=4)
 Planning Time: 23.585 ms
 Execution Time: 2379.470 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83612.36..83612.36 rows=1 width=58) (actual time=142.309..155.653 rows=1 loops=1)
   ->  Sort  (cost=83612.36..83612.42 rows=25 width=58) (actual time=142.307..155.650 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83573.21..83612.23 rows=25 width=58) (actual time=141.755..155.639 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83573.21..83611.36 rows=75 width=58) (actual time=141.551..155.620 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82573.17..82602.51 rows=25 width=58) (actual time=137.544..138.250 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82573.17..82578.97 rows=2322 width=38) (actual time=137.363..137.446 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 165kB
                                 Worker 0:  Sort Method: quicksort  Memory: 165kB
                                 Worker 1:  Sort Method: quicksort  Memory: 167kB
                                 Worker 2:  Sort Method: quicksort  Memory: 169kB
                                 ->  Hash Join  (cost=7818.63..82443.36 rows=2322 width=38) (actual time=31.533..136.528 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7345.63..81665.73 rows=58024 width=50) (actual time=28.523..125.576 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7345.20..34896.58 rows=14506 width=38) (actual time=28.354..68.271 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2605.07..29824.02 rows=72530 width=8) (actual time=16.551..42.599 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6500
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2548.86 rows=224843 width=0) (actual time=12.864..12.864 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.673..11.676 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.101..9.411 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.010..3.832 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.032 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.030 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.009..0.011 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.935..2.935 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.015..1.531 rows=10000 loops=4)
 Planning Time: 4.113 ms
 Execution Time: 155.744 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107638.24..107638.25 rows=1 width=32) (actual time=1084.430..1091.268 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107638.24..107638.25 rows=1 width=32) (actual time=1084.428..1091.266 rows=1 loops=1)
         ->  Gather  (cost=107637.81..107638.22 rows=4 width=32) (actual time=1083.996..1091.253 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106637.81..106637.82 rows=1 width=32) (actual time=1074.962..1074.963 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21403.01..106489.01 rows=29759 width=12) (actual time=130.035..1057.988 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13029
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21373.25 rows=119037 width=0) (actual time=126.089..126.089 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.649 ms
 Execution Time: 1092.675 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107638.24..107638.25 rows=1 width=32) (actual time=198.357..206.193 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107638.24..107638.25 rows=1 width=32) (actual time=198.355..206.191 rows=1 loops=1)
         ->  Gather  (cost=107637.81..107638.22 rows=4 width=32) (actual time=194.364..206.174 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106637.81..106637.82 rows=1 width=32) (actual time=191.830..191.831 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21403.01..106489.01 rows=29759 width=12) (actual time=106.924..184.201 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=9826
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21373.25 rows=119037 width=0) (actual time=98.646..98.646 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.452 ms
 Execution Time: 206.485 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141389.91..141548.31 rows=1 width=116) (actual time=3236.006..3239.482 rows=1 loops=1)
   ->  GroupAggregate  (cost=141389.91..1096858.27 rows=6032 width=116) (actual time=3236.005..3239.480 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141389.91..1096677.31 rows=6032 width=96) (actual time=909.475..3236.357 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32728
               ->  Nested Loop  (cost=141389.49..628558.53 rows=150812 width=76) (actual time=887.008..2673.617 rows=34087 loops=1)
                     ->  Gather Merge  (cost=141389.06..159450.19 rows=150843 width=76) (actual time=885.783..928.312 rows=34087 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140389.00..140483.28 rows=37711 width=76) (actual time=871.439..872.378 rows=7253 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3940kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3903kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3858kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3986kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3984kB
                                 ->  Hash Join  (cost=381.77..137522.46 rows=37711 width=76) (actual time=3.651..846.061 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.67 rows=453082 width=24) (actual time=0.565..791.330 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.001..3.003 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.254..2.860 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.172..1.663 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.074..0.076 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.066..0.071 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.056..0.057 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.050..0.050 rows=1 loops=34087)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.015..0.016 rows=1 loops=34087)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.345 ms
 Execution Time: 3239.859 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141389.91..141548.31 rows=1 width=116) (actual time=505.128..506.405 rows=1 loops=1)
   ->  GroupAggregate  (cost=141389.91..1096858.27 rows=6032 width=116) (actual time=505.127..506.403 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141389.91..1096677.31 rows=6032 width=96) (actual time=345.047..505.217 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32671
               ->  Nested Loop  (cost=141389.49..628558.53 rows=150812 width=76) (actual time=344.981..435.329 rows=34030 loops=1)
                     ->  Gather Merge  (cost=141389.06..159450.19 rows=150843 width=76) (actual time=344.937..363.215 rows=34030 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140389.00..140483.28 rows=37711 width=76) (actual time=335.227..335.915 rows=7223 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 5351kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3950kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4168kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3670kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3299kB
                                 ->  Hash Join  (cost=381.77..137522.46 rows=37711 width=76) (actual time=3.938..310.441 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.67 rows=453082 width=24) (actual time=0.033..255.754 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.823..3.827 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.037..3.685 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.587 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.027..0.029 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.018..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34030)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34030)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 3.031 ms
 Execution Time: 506.504 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41944.71..42317.65 rows=1 width=64) (actual time=4667.972..4673.348 rows=1 loops=1)
   ->  GroupAggregate  (cost=41944.71..932522.10 rows=2388 width=64) (actual time=4667.970..4673.346 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41944.71..932426.58 rows=2388 width=70) (actual time=276.722..4670.566 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14801
               ->  Nested Loop  (cost=41944.71..931557.03 rows=2388 width=20) (actual time=276.688..4666.210 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41944.43..924549.82 rows=2388 width=20) (actual time=276.482..4610.389 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41944.00..342983.15 rows=359632 width=24) (actual time=240.545..3625.574 rows=182866 loops=1)
                                 ->  Gather Merge  (cost=41943.57..52580.26 rows=89908 width=8) (actual time=239.934..277.132 rows=45631 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40943.53..41016.03 rows=29003 width=8) (actual time=229.466..230.638 rows=12418 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1636kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1680kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1660kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1659kB
                                             ->  Parallel Hash Join  (cost=4740.13..38793.84 rows=29003 width=8) (actual time=23.867..221.937 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145013 width=12) (actual time=0.550..167.857 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=23.125..23.129 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.799..21.219 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.505..16.469 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.286..0.288 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.281..0.287 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.074..0.075 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.083..0.084 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.077..0.078 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.067..0.072 rows=4 loops=45631)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=182866)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62896  Misses: 119970  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=119970)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.044..0.044 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.021 rows=25 loops=1)
 Planning Time: 27.585 ms
 Execution Time: 4674.414 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41944.71..42317.65 rows=1 width=64) (actual time=608.636..615.032 rows=1 loops=1)
   ->  GroupAggregate  (cost=41944.71..932522.10 rows=2388 width=64) (actual time=608.635..615.030 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41944.71..932426.58 rows=2388 width=70) (actual time=100.572..613.787 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14799
               ->  Nested Loop  (cost=41944.71..931557.03 rows=2388 width=20) (actual time=100.551..611.364 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41944.43..924549.82 rows=2388 width=20) (actual time=100.542..608.171 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41944.00..342983.15 rows=359632 width=24) (actual time=100.096..282.791 rows=182928 loops=1)
                                 ->  Gather Merge  (cost=41943.57..52580.26 rows=89908 width=8) (actual time=100.036..122.681 rows=45646 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40943.53..41016.03 rows=29003 width=8) (actual time=96.913..97.754 rows=12478 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1658kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1657kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1661kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1660kB
                                             ->  Parallel Hash Join  (cost=4740.13..38793.84 rows=29003 width=8) (actual time=11.004..90.415 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145013 width=12) (actual time=0.007..56.082 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.803..10.806 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.110..9.371 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.844 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.098..0.100 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.093..0.099 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.008 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45646)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182928)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62937  Misses: 119991  Evictions: 0  Overflows: 0  Memory Usage: 7997kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119991)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.008 rows=25 loops=1)
 Planning Time: 4.989 ms
 Execution Time: 616.213 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41428.37..42480.38 rows=1 width=90) (actual time=4744.145..4749.480 rows=1 loops=1)
   ->  GroupAggregate  (cost=41428.37..321262.89 rows=266 width=90) (actual time=4744.143..4749.478 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=41428.37..321254.25 rows=266 width=81) (actual time=4743.219..4748.602 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1528kB  Peak Memory: 1528kB
               ->  Nested Loop  (cost=29769.12..321245.89 rows=266 width=81) (actual time=189.486..4721.371 rows=13629 loops=1)
                     ->  Nested Loop  (cost=29768.69..320408.30 rows=266 width=53) (actual time=188.701..2574.920 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=29768.26..40214.24 rows=88296 width=48) (actual time=187.796..195.581 rows=1812 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Sort  (cost=28768.22..28839.42 rows=28483 width=48) (actual time=179.471..179.577 rows=982 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1238kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1241kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1190kB
                                       Worker 2:  Sort Method: quicksort  Memory: 1270kB
                                       ->  Hash Join  (cost=5705.97..26660.79 rows=28483 width=48) (actual time=41.046..172.616 rows=10880 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=5704.40..26571.78 rows=28483 width=26) (actual time=40.901..170.264 rows=10880 loops=4)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=5256.40..26048.48 rows=28674 width=18) (actual time=37.137..162.499 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.548..103.559 rows=200000 loops=4)
                                                         ->  Parallel Hash  (cost=5140.67..5140.67 rows=9259 width=4) (actual time=36.300..36.301 rows=2720 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 768kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=9259 width=4) (actual time=0.106..35.470 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.733..3.734 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.085..2.473 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.066..0.066 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.055..0.059 rows=25 loops=4)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.296..1.305 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.154..0.154 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 27.707 ms
 Execution Time: 4750.448 ms
(44 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41428.37..42480.38 rows=1 width=90) (actual time=148.055..153.300 rows=1 loops=1)
   ->  GroupAggregate  (cost=41428.37..321262.89 rows=266 width=90) (actual time=148.053..153.298 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=41428.37..321254.25 rows=266 width=81) (actual time=147.152..152.443 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 30kB  Peak Memory: 30kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1528kB  Peak Memory: 1528kB
               ->  Nested Loop  (cost=29769.12..321245.89 rows=266 width=81) (actual time=75.024..145.293 rows=13629 loops=1)
                     ->  Nested Loop  (cost=29768.69..320408.30 rows=266 width=53) (actual time=75.008..100.547 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=29768.26..40214.24 rows=88296 width=48) (actual time=74.960..80.986 rows=1812 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Sort  (cost=28768.22..28839.42 rows=28483 width=48) (actual time=71.838..71.925 rows=1033 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1242kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1218kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1245kB
                                       Worker 2:  Sort Method: quicksort  Memory: 1233kB
                                       ->  Hash Join  (cost=5705.97..26660.79 rows=28483 width=48) (actual time=15.380..65.566 rows=10880 loops=4)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=5704.40..26571.78 rows=28483 width=26) (actual time=15.287..63.542 rows=10880 loops=4)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Hash Join  (cost=5256.40..26048.48 rows=28674 width=18) (actual time=12.511..57.255 rows=10880 loops=4)
                                                         Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on partsupp  (cost=0.00..20114.65 rows=258065 width=14) (actual time=0.010..18.935 rows=200000 loops=4)
                                                         ->  Parallel Hash  (cost=5140.67..5140.67 rows=9259 width=4) (actual time=12.359..12.360 rows=2720 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 768kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=9259 width=4) (actual time=0.020..11.731 rows=2720 loops=4)
                                                                     Filter: ((p_name)::text ~~ '%navy%'::text)
                                                                     Rows Removed by Filter: 47280
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.750..2.750 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.490 rows=10000 loops=4)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=4)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.017 rows=25 loops=4)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.311 ms
 Execution Time: 153.397 ms
(44 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96264.30..96264.35 rows=20 width=202) (actual time=2101.568..2106.344 rows=20 loops=1)
   ->  Sort  (cost=96264.30..96398.84 rows=53816 width=202) (actual time=2101.566..2106.341 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=94159.57..94832.27 rows=53816 width=202) (actual time=2069.926..2094.786 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6618.96..93486.87 rows=53816 width=182) (actual time=62.534..1962.268 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Nested Loop  (cost=5618.96..87105.27 rows=17360 width=182) (actual time=52.094..2013.961 rows=28587 loops=4)
                           ->  Hash Join  (cost=5618.53..32103.04 rows=17082 width=174) (actual time=50.911..326.874 rows=14278 loops=4)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=5616.97..32049.04 rows=17082 width=152) (actual time=50.774..320.277 rows=14278 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=613.72..27000.95 rows=17082 width=8) (actual time=13.024..263.073 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4762
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..600.48 rows=52955 width=0) (actual time=9.161..9.161 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=37.254..37.255 rows=37500 loops=4)
                                             Buckets: 262144  Batches: 1  Memory Usage: 29280kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.124..16.714 rows=37500 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.057..0.057 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.046..0.049 rows=25 loops=4)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.113..0.117 rows=2 loops=57111)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_returnflag = 'R'::bpchar)
                                 Rows Removed by Filter: 2
 Planning Time: 21.509 ms
 Execution Time: 2106.475 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=96264.30..96264.35 rows=20 width=202) (actual time=211.413..215.549 rows=20 loops=1)
   ->  Sort  (cost=96264.30..96398.84 rows=53816 width=202) (actual time=211.411..215.546 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=94159.57..94832.27 rows=53816 width=202) (actual time=179.584..203.842 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6618.96..93486.87 rows=53816 width=182) (actual time=42.769..101.498 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Nested Loop  (cost=5618.96..87105.27 rows=17360 width=182) (actual time=39.141..143.521 rows=28587 loops=4)
                           ->  Hash Join  (cost=5618.53..32103.04 rows=17082 width=174) (actual time=39.102..69.968 rows=14278 loops=4)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=5616.97..32049.04 rows=17082 width=152) (actual time=39.005..66.450 rows=14278 loops=4)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=613.72..27000.95 rows=17082 width=8) (actual time=10.837..27.404 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2156
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..600.48 rows=52955 width=0) (actual time=7.444..7.444 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.721..27.722 rows=37500 loops=4)
                                             Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.006..7.762 rows=37500 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=4)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_returnflag = 'R'::bpchar)
                                 Rows Removed by Filter: 2
 Planning Time: 1.813 ms
 Execution Time: 215.668 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15829.50..15829.51 rows=1 width=36) (actual time=715.941..715.946 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7610.12..7610.13 rows=1 width=32) (actual time=26.158..26.160 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7371.72 rows=31787 width=10) (actual time=0.052..18.292 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.279 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.07 rows=79 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8219.37..8245.86 rows=10596 width=36) (actual time=715.940..715.941 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7689.59..8166.39 rows=10596 width=36) (actual time=705.308..715.787 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7371.72 rows=31787 width=14) (actual time=1.136..648.501 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.714..4.187 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.224..0.227 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.483..3.861 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.252..0.252 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.07 rows=79 width=18) (actual time=0.047..1.550 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.226 ms
 Execution Time: 716.347 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15829.50..15829.51 rows=1 width=36) (actual time=81.764..81.769 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7610.12..7610.13 rows=1 width=32) (actual time=26.117..26.119 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7371.72 rows=31787 width=10) (actual time=0.052..18.224 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.046..0.292 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.011 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.236 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.07 rows=79 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8219.37..8245.86 rows=10596 width=36) (actual time=81.763..81.765 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7689.59..8166.39 rows=10596 width=36) (actual time=71.120..81.612 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7371.72 rows=31787 width=14) (actual time=0.062..27.005 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.057..0.408 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.045..0.342 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.025..0.025 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.07 rows=79 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.995 ms
 Execution Time: 82.173 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147782.42..161243.67 rows=1 width=27) (actual time=1714.301..1717.854 rows=1 loops=1)
   ->  GroupAggregate  (cost=147782.42..242011.17 rows=7 width=27) (actual time=1714.300..1717.851 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147782.42..241503.62 rows=28999 width=27) (actual time=841.957..1706.981 rows=15492 loops=1)
               ->  Gather Merge  (cost=147781.99..151254.90 rows=29005 width=15) (actual time=841.393..852.898 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146781.94..146800.06 rows=7251 width=15) (actual time=831.830..832.176 rows=4239 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 440kB
                           Worker 0:  Sort Method: quicksort  Memory: 425kB
                           Worker 1:  Sort Method: quicksort  Memory: 438kB
                           Worker 2:  Sort Method: quicksort  Memory: 429kB
                           Worker 3:  Sort Method: quicksort  Memory: 440kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.00 rows=7251 width=15) (actual time=0.496..830.041 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.054..0.054 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 13.415 ms
 Execution Time: 1718.788 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147782.42..161243.67 rows=1 width=27) (actual time=415.066..416.243 rows=1 loops=1)
   ->  GroupAggregate  (cost=147782.42..242011.17 rows=7 width=27) (actual time=415.065..416.241 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147782.42..241503.62 rows=28999 width=27) (actual time=369.310..411.711 rows=15492 loops=1)
               ->  Gather Merge  (cost=147781.99..151254.90 rows=29005 width=15) (actual time=369.277..373.894 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146781.94..146800.06 rows=7251 width=15) (actual time=364.580..364.806 rows=4222 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 461kB
                           Worker 0:  Sort Method: quicksort  Memory: 446kB
                           Worker 1:  Sort Method: quicksort  Memory: 474kB
                           Worker 2:  Sort Method: quicksort  Memory: 398kB
                           Worker 3:  Sort Method: quicksort  Memory: 393kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146317.00 rows=7251 width=15) (actual time=0.087..363.112 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.792 ms
 Execution Time: 416.304 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1444.357..1444.360 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1444.356..1444.358 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1444.332..1444.339 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1405.222..1427.337 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=34.100..1056.907 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.657..631.386 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.041..33.042 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..16.109 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.037 ms
 Execution Time: 1445.423 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1250.478..1250.481 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1250.477..1250.479 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1250.452..1250.459 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1211.657..1233.444 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=30.188..882.778 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..484.092 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.713..29.714 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.120 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 1.121 ms
 Execution Time: 1251.567 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77218.67..77218.69 rows=1 width=32) (actual time=564.362..570.236 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=77218.67..77218.69 rows=1 width=32) (actual time=564.361..570.234 rows=1 loops=1)
         ->  Gather  (cost=77218.22..77218.63 rows=4 width=64) (actual time=564.346..570.221 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=76218.22..76218.23 rows=1 width=64) (actual time=553.895..553.897 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7290.61..75859.39 rows=20504 width=33) (actual time=54.550..537.992 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1316.62..69831.57 rows=20504 width=16) (actual time=21.103..488.657 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8343
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1296.11 rows=82018 width=0) (actual time=13.889..13.889 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=32.996..32.996 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.082..14.567 rows=40000 loops=5)
 Planning Time: 16.288 ms
 Execution Time: 570.285 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77218.67..77218.69 rows=1 width=32) (actual time=105.477..107.969 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=77218.67..77218.69 rows=1 width=32) (actual time=105.475..107.967 rows=1 loops=1)
         ->  Gather  (cost=77218.22..77218.63 rows=4 width=64) (actual time=100.209..107.945 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=76218.22..76218.23 rows=1 width=64) (actual time=95.886..95.888 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7290.61..75859.39 rows=20504 width=33) (actual time=42.087..87.344 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1316.62..69831.57 rows=20504 width=16) (actual time=14.967..51.388 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9730
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1296.11 rows=82018 width=0) (actual time=8.729..8.729 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=26.446..26.447 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.008..6.525 rows=40000 loops=5)
 Planning Time: 1.036 ms
 Execution Time: 108.006 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234842.17..234948.86 rows=1 width=103) (actual time=1316.722..1323.601 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=118627.81..118627.82 rows=1 width=32) (actual time=234.718..234.719 rows=1 loops=1)
           ->  HashAggregate  (cost=118379.24..118503.52 rows=9943 width=36) (actual time=231.418..234.156 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3379.11..116272.73 rows=210651 width=16) (actual time=29.818..120.548 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3326.44 rows=210651 width=0) (actual time=19.173..19.174 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=116214.35..121548.71 rows=50 width=103) (actual time=1316.721..1323.598 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=116214.07..121423.59 rows=50 width=36) (actual time=1316.031..1322.907 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=116214.07..120976.15 rows=39772 width=36) (actual time=1056.221..1070.758 rows=41794 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=115214.01..115238.87 rows=9943 width=36) (actual time=1045.714..1046.573 rows=8819 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1312kB
                           Worker 0:  Sort Method: quicksort  Memory: 1313kB
                           Worker 1:  Sort Method: quicksort  Memory: 1311kB
                           Worker 2:  Sort Method: quicksort  Memory: 1311kB
                           Worker 3:  Sort Method: quicksort  Memory: 1313kB
                           ->  Partial HashAggregate  (cost=114429.53..114553.82 rows=9943 width=36) (actual time=1037.820..1043.614 rows=9893 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3379.11..113902.90 rows=52663 width=16) (actual time=42.073..985.418 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13332
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3326.44 rows=210651 width=0) (actual time=37.745..37.745 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.685..0.685 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.249 ms
 Execution Time: 1324.526 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=234842.17..234948.86 rows=1 width=103) (actual time=404.444..413.912 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=118627.81..118627.82 rows=1 width=32) (actual time=218.093..218.094 rows=1 loops=1)
           ->  HashAggregate  (cost=118379.24..118503.52 rows=9943 width=36) (actual time=214.770..217.533 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3379.11..116272.73 rows=210651 width=16) (actual time=30.118..105.657 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3326.44 rows=210651 width=0) (actual time=19.439..19.439 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=116214.35..121548.71 rows=50 width=103) (actual time=404.443..413.909 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=116214.07..121423.59 rows=50 width=36) (actual time=404.412..413.877 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=116214.07..120976.15 rows=39772 width=36) (actual time=161.612..178.638 rows=41766 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=115214.01..115238.87 rows=9943 width=36) (actual time=153.964..154.797 rows=8825 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1316kB
                           Worker 0:  Sort Method: quicksort  Memory: 1304kB
                           Worker 1:  Sort Method: quicksort  Memory: 1308kB
                           Worker 2:  Sort Method: quicksort  Memory: 1316kB
                           Worker 3:  Sort Method: quicksort  Memory: 1312kB
                           ->  Partial HashAggregate  (cost=114429.53..114553.82 rows=9943 width=36) (actual time=146.141..151.640 rows=9886 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3379.11..113902.90 rows=52663 width=16) (actual time=33.783..111.071 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=15035
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3326.44 rows=210651 width=0) (actual time=27.437..27.437 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.027..0.027 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.741 ms
 Execution Time: 414.264 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26825.93..26825.93 rows=1 width=44) (actual time=293.299..294.293 rows=1 loops=1)
   ->  Sort  (cost=26825.93..26866.11 rows=16075 width=44) (actual time=293.297..294.291 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18786.45..26745.55 rows=16075 width=44) (actual time=215.701..291.227 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18786.45..25983.70 rows=60110 width=40) (actual time=215.684..270.654 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17786.39..17823.96 rows=15028 width=40) (actual time=178.006..179.437 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2502kB
                           Worker 0:  Sort Method: quicksort  Memory: 2244kB
                           Worker 1:  Sort Method: quicksort  Memory: 2140kB
                           Worker 2:  Sort Method: quicksort  Memory: 2624kB
                           Worker 3:  Sort Method: quicksort  Memory: 2214kB
                           ->  Parallel Hash Join  (cost=6687.30..16743.80 rows=15028 width=40) (actual time=37.426..102.513 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=7.994..54.952 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.484..7.195 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12523 width=40) (actual time=29.203..29.204 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12523 width=40) (actual time=0.769..26.699 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 17.351 ms
 Execution Time: 294.378 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26825.93..26825.93 rows=1 width=44) (actual time=253.307..253.732 rows=1 loops=1)
   ->  Sort  (cost=26825.93..26866.11 rows=16075 width=44) (actual time=253.305..253.730 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18786.45..26745.55 rows=16075 width=44) (actual time=174.932..250.593 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18786.45..25983.70 rows=60110 width=40) (actual time=174.915..229.755 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17786.39..17823.96 rows=15028 width=40) (actual time=152.577..153.964 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2354kB
                           Worker 0:  Sort Method: quicksort  Memory: 2424kB
                           Worker 1:  Sort Method: quicksort  Memory: 2261kB
                           Worker 2:  Sort Method: quicksort  Memory: 2376kB
                           Worker 3:  Sort Method: quicksort  Memory: 2309kB
                           ->  Parallel Hash Join  (cost=6687.30..16743.80 rows=15028 width=40) (actual time=18.947..75.993 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.949..42.073 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.838 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12523 width=40) (actual time=15.854..15.855 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12523 width=40) (actual time=0.015..12.467 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.815 ms
 Execution Time: 253.793 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217825.19..217825.20 rows=1 width=32) (actual time=4333.276..4337.699 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217825.19..217825.20 rows=1 width=32) (actual time=4333.275..4337.696 rows=1 loops=1)
         ->  Gather  (cost=217824.97..217825.18 rows=2 width=32) (actual time=4327.299..4337.682 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216824.97..216824.98 rows=1 width=32) (actual time=4317.896..4317.898 rows=1 loops=3)
                     ->  Nested Loop  (cost=207651.89..216822.87 rows=838 width=8) (actual time=4249.203..4317.812 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207651.46..213000.70 rows=84 width=40) (actual time=4248.324..4270.416 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=91 width=4) (actual time=0.579..22.572 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205345.65..205345.65 rows=184465 width=36) (actual time=4247.361..4247.362 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202578.67..205345.65 rows=184465 width=36) (actual time=3734.775..4210.411 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172572.45 rows=6001245 width=9) (actual time=0.445..1023.171 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..45.36 rows=11 width=17) (actual time=0.529..0.681 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 12.215 ms
 Execution Time: 4345.114 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217825.19..217825.20 rows=1 width=32) (actual time=3971.933..3975.016 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217825.19..217825.20 rows=1 width=32) (actual time=3971.931..3975.013 rows=1 loops=1)
         ->  Gather  (cost=217824.97..217825.18 rows=2 width=32) (actual time=3966.086..3975.000 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216824.97..216824.98 rows=1 width=32) (actual time=3961.963..3961.965 rows=1 loops=3)
                     ->  Nested Loop  (cost=207651.89..216822.87 rows=838 width=8) (actual time=3951.076..3961.912 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=207651.46..213000.70 rows=84 width=40) (actual time=3951.036..3960.275 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=91 width=4) (actual time=0.077..9.275 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205345.65..205345.65 rows=184465 width=36) (actual time=3950.509..3950.510 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202578.67..205345.65 rows=184465 width=36) (actual time=3436.887..3913.609 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172572.45 rows=6001245 width=9) (actual time=0.054..750.028 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..45.36 rows=11 width=17) (actual time=0.009..0.023 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 1.141 ms
 Execution Time: 3981.758 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794669.70..794669.95 rows=100 width=71) (actual time=4497.738..4497.744 rows=9 loops=1)
   ->  Sort  (cost=794669.70..799670.74 rows=2000416 width=71) (actual time=4497.736..4497.741 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658046.48..718215.24 rows=2000416 width=71) (actual time=4496.987..4497.693 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335208.41..550289.69 rows=2000416 width=44) (actual time=3734.179..4496.911 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172572.45 rows=6001245 width=9) (actual time=0.716..332.667 rows=6001215 loops=1)
                     ->  Hash  (cost=328957.11..328957.11 rows=500104 width=43) (actual time=3529.510..3529.513 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282575.80..328957.11 rows=500104 width=43) (actual time=3180.301..3529.488 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275603.80..320672.31 rows=500104 width=24) (actual time=3112.378..3461.554 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.764..269.978 rows=1500000 loops=1)
                                       ->  Hash  (cost=269352.50..269352.50 rows=500104 width=4) (actual time=3014.485..3014.486 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269352.50 rows=500104 width=4) (actual time=643.608..3014.460 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216841.61 rows=6001245 width=9) (actual time=0.017..1627.427 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=67.543..67.543 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.547..41.529 rows=150000 loops=1)
 Planning Time: 18.258 ms
 Execution Time: 4499.502 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794669.70..794669.95 rows=100 width=71) (actual time=3396.039..3396.044 rows=9 loops=1)
   ->  Sort  (cost=794669.70..799670.74 rows=2000416 width=71) (actual time=3396.037..3396.042 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658046.48..718215.24 rows=2000416 width=71) (actual time=3395.293..3395.994 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335208.41..550289.69 rows=2000416 width=44) (actual time=2628.845..3395.218 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172572.45 rows=6001245 width=9) (actual time=0.014..332.033 rows=6001215 loops=1)
                     ->  Hash  (cost=328957.11..328957.11 rows=500104 width=43) (actual time=2424.211..2424.214 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282575.80..328957.11 rows=500104 width=43) (actual time=2211.853..2424.191 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275603.80..320672.31 rows=500104 width=24) (actual time=2166.989..2379.318 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..90.418 rows=1500000 loops=1)
                                       ->  Hash  (cost=269352.50..269352.50 rows=500104 width=4) (actual time=2109.525..2109.526 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269352.50 rows=500104 width=4) (actual time=446.573..2109.509 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216841.61 rows=6001245 width=9) (actual time=0.016..831.176 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.433..44.434 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.011..19.458 rows=150000 loops=1)
 Planning Time: 1.573 ms
 Execution Time: 3397.122 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18812.44..18812.45 rows=1 width=32) (actual time=896.450..898.809 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18812.44..18812.45 rows=1 width=32) (actual time=896.449..898.807 rows=1 loops=1)
         ->  Gather  (cost=18812.22..18812.43 rows=2 width=32) (actual time=894.341..898.793 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17812.22..17812.23 rows=1 width=32) (actual time=887.329..887.330 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17811.86 rows=47 width=12) (actual time=36.063..887.215 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.605..29.933 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..50.85 rows=1 width=21) (actual time=4.500..5.071 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 14.467 ms
 Execution Time: 898.875 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18812.44..18812.45 rows=1 width=32) (actual time=29.386..33.209 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18812.44..18812.45 rows=1 width=32) (actual time=29.385..33.207 rows=1 loops=1)
         ->  Gather  (cost=18812.22..18812.43 rows=2 width=32) (actual time=29.262..33.197 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17812.22..17812.23 rows=1 width=32) (actual time=26.746..26.747 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17811.86 rows=47 width=12) (actual time=0.570..26.700 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.109..17.646 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..50.85 rows=1 width=21) (actual time=0.047..0.053 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.022 ms
 Execution Time: 33.253 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=209395.20..209395.21 rows=1 width=51) (actual time=3738.900..3738.985 rows=1 loops=1)
   ->  Sort  (cost=209395.20..209395.21 rows=1 width=51) (actual time=3738.898..3738.983 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184732.67..209395.19 rows=1 width=51) (actual time=3568.841..3738.760 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.575..3.757 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.240..0.243 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.328..2.759 rows=10000 loops=1)
               ->  Materialize  (cost=184732.67..208939.88 rows=1 width=8) (actual time=5.692..8.296 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184732.67..208939.88 rows=1 width=8) (actual time=2493.206..3562.618 rows=5898 loops=1)
                           ->  Hash Join  (cost=184732.24..202004.03 rows=4866 width=44) (actual time=2492.647..3060.635 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178364.33..194371.52 rows=481742 width=40) (actual time=2452.419..2970.386 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14417.54..140465.25 rows=899181 width=13) (actual time=129.196..1962.420 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14192.74 rows=899181 width=0) (actual time=109.160..109.161 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=40.204..40.286 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=1.716..39.837 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.145..31.080 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.084..0.084 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.580 ms
 Execution Time: 3744.021 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=209395.20..209395.21 rows=1 width=51) (actual time=1400.296..1400.374 rows=1 loops=1)
   ->  Sort  (cost=209395.20..209395.21 rows=1 width=51) (actual time=1400.294..1400.371 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=184732.67..209395.19 rows=1 width=51) (actual time=1231.917..1400.181 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.020..1.608 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.014 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.005..0.693 rows=10000 loops=1)
               ->  Materialize  (cost=184732.67..208939.88 rows=1 width=8) (actual time=1.619..2.963 rows=4340 loops=438)
                     ->  Nested Loop  (cost=184732.67..208939.88 rows=1 width=8) (actual time=709.284..1228.783 rows=5898 loops=1)
                           ->  Hash Join  (cost=184732.24..202004.03 rows=4866 width=44) (actual time=709.265..1206.533 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=178364.33..194371.52 rows=481742 width=40) (actual time=697.523..1156.507 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14417.54..140465.25 rows=899181 width=13) (actual time=96.408..309.698 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14192.74 rows=899181 width=0) (actual time=77.064..77.064 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.722..11.797 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.340..11.482 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.045..8.932 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.709 ms
 Execution Time: 1404.407 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194181.37..194181.38 rows=1 width=34) (actual time=1439.772..1439.892 rows=100 loops=1)
   ->  Sort  (cost=194181.37..194181.38 rows=1 width=34) (actual time=1439.771..1439.884 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194181.34..194181.36 rows=1 width=34) (actual time=1438.726..1439.448 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194181.34..194181.35 rows=1 width=26) (actual time=1438.717..1438.993 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194181.33 rows=1 width=26) (actual time=13.027..1426.450 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194177.94 rows=1 width=38) (actual time=12.670..1350.139 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194174.63 rows=1 width=34) (actual time=12.352..63.873 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193174.53 rows=1 width=34) (actual time=4.139..661.365 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.40 rows=20004 width=34) (actual time=2.610..565.945 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.89 rows=500104 width=8) (actual time=0.670..499.489 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.841..1.842 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.478..1.762 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.191..0.193 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.283..1.511 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.140..0.141 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.089..0.089 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.010..0.010 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.206 ms
 Execution Time: 1440.249 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194181.37..194181.38 rows=1 width=34) (actual time=478.778..478.881 rows=100 loops=1)
   ->  Sort  (cost=194181.37..194181.38 rows=1 width=34) (actual time=478.777..478.874 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194181.34..194181.36 rows=1 width=34) (actual time=477.762..478.468 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194181.34..194181.35 rows=1 width=26) (actual time=477.752..478.013 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 358kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194181.33 rows=1 width=26) (actual time=1.954..465.593 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194177.94 rows=1 width=38) (actual time=1.949..445.284 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194174.63 rows=1 width=34) (actual time=1.934..405.041 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193174.53 rows=1 width=34) (actual time=0.787..443.572 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133623.40 rows=20004 width=34) (actual time=0.510..348.759 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.89 rows=500104 width=8) (actual time=0.031..272.480 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.402..0.403 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.053..0.343 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.040..0.287 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.002..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.356 ms
 Execution Time: 479.199 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.15 rows=1 width=72) (actual time=149.340..151.253 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=44.775..44.858 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=44.697..44.848 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=36.059..36.059 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1983 width=6) (actual time=0.222..34.761 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7457.89 rows=743 width=72) (actual time=149.339..151.168 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7439.31 rows=743 width=38) (actual time=71.327..150.666 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=69.844..72.988 rows=2735 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.472..22.610 rows=1504 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 574kB
                           Worker 0:  Sort Method: quicksort  Memory: 518kB
                           Worker 1:  Sort Method: quicksort  Memory: 529kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.017..20.580 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.028..0.028 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 12.236 ms
 Execution Time: 151.321 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.15 rows=1 width=72) (actual time=60.458..62.170 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=29.869..29.947 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=29.733..29.936 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=27.426..27.427 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1983 width=6) (actual time=0.014..26.231 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7457.89 rows=743 width=72) (actual time=60.457..62.089 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7439.31 rows=743 width=38) (actual time=54.349..61.827 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=54.324..56.641 rows=2735 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.714..21.791 rows=1542 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 606kB
                           Worker 0:  Sort Method: quicksort  Memory: 509kB
                           Worker 1:  Sort Method: quicksort  Memory: 506kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..19.873 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.834 ms
 Execution Time: 62.225 ms
(30 rows)

