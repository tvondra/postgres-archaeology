query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184171.22..184171.85 rows=1 width=236) (actual time=2229.626..2229.694 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184171.22..184175.03 rows=6 width=236) (actual time=2229.624..2229.692 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184171.22..184174.09 rows=24 width=236) (actual time=2229.592..2229.664 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183171.16..183171.17 rows=6 width=236) (actual time=2218.478..2218.479 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183170.95..183171.08 rows=6 width=236) (actual time=2218.433..2218.440 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.02 rows=1481598 width=25) (actual time=0.112..434.708 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 11.686 ms
 Execution Time: 2230.587 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184171.22..184171.85 rows=1 width=236) (actual time=2157.180..2157.251 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184171.22..184175.03 rows=6 width=236) (actual time=2157.179..2157.250 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184171.22..184174.09 rows=24 width=236) (actual time=2157.146..2157.220 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183171.16..183171.17 rows=6 width=236) (actual time=2152.527..2152.528 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183170.95..183171.08 rows=6 width=236) (actual time=2152.487..2152.493 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.02 rows=1481598 width=25) (actual time=0.029..308.155 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.917 ms
 Execution Time: 2157.334 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48186.70..48186.71 rows=1 width=192) (actual time=432.139..432.236 rows=100 loops=1)
   ->  Sort  (cost=48186.70..48186.71 rows=1 width=192) (actual time=432.138..432.228 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 72kB
         ->  Hash Join  (cost=33942.01..48186.69 rows=1 width=192) (actual time=379.822..431.118 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6444.30 rows=953 width=30) (actual time=0.648..0.881 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=397 width=30) (actual time=0.485..34.745 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=378.481..378.485 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=7.068..316.952 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.278..192.467 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.783..6.786 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.944..6.244 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.302..4.244 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.373..0.375 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.367..0.373 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.182..0.183 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.178..0.179 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.174..0.175 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.039..0.039 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.032..0.037 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.025..0.035 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.024..0.031 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.022..0.023 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.352 ms
 Execution Time: 432.384 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=48186.70..48186.71 rows=1 width=192) (actual time=253.531..253.625 rows=100 loops=1)
   ->  Sort  (cost=48186.70..48186.71 rows=1 width=192) (actual time=253.530..253.618 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Hash Join  (cost=33942.01..48186.69 rows=1 width=192) (actual time=232.910..253.258 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6444.30 rows=953 width=30) (actual time=0.280..0.471 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=397 width=30) (actual time=0.030..13.912 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=232.196..232.199 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=3.034..176.823 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.003..47.947 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=3.024..3.027 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.261..2.541 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.644 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.029..0.030 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.022..0.028 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.005 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.015..0.015 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.014 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.012 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.008 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.831 ms
 Execution Time: 253.767 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233565.22..233565.25 rows=10 width=44) (actual time=1110.090..1111.684 rows=10 loops=1)
   ->  Sort  (cost=233565.22..234358.32 rows=317239 width=44) (actual time=1110.089..1111.681 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180001.23..226709.80 rows=317239 width=44) (actual time=1085.919..1109.117 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180001.23..217985.73 rows=317239 width=24) (actual time=1085.903..1092.025 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179001.17..179199.45 rows=79310 width=24) (actual time=1077.572..1077.840 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 595kB
                           Worker 0:  Sort Method: quicksort  Memory: 612kB
                           Worker 1:  Sort Method: quicksort  Memory: 600kB
                           Worker 2:  Sort Method: quicksort  Memory: 604kB
                           Worker 3:  Sort Method: quicksort  Memory: 640kB
                           ->  Parallel Hash Join  (cost=37915.89..172547.23 rows=79310 width=24) (actual time=210.520..1075.378 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.02 rows=816130 width=16) (actual time=0.590..793.432 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37327.97..37327.97 rows=47034 width=12) (actual time=208.624..208.627 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8928kB
                                       ->  Parallel Hash Join  (cost=4535.62..37327.97 rows=47034 width=12) (actual time=22.041..199.543 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233498 width=16) (actual time=0.481..146.684 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12590 width=4) (actual time=21.434..21.435 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12590 width=4) (actual time=0.086..19.650 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 18.642 ms
 Execution Time: 1112.106 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233565.22..233565.25 rows=10 width=44) (actual time=458.589..459.952 rows=10 loops=1)
   ->  Sort  (cost=233565.22..234358.32 rows=317239 width=44) (actual time=458.587..459.949 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180001.23..226709.80 rows=317239 width=44) (actual time=433.307..457.322 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180001.23..217985.73 rows=317239 width=24) (actual time=433.293..439.292 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179001.17..179199.45 rows=79310 width=24) (actual time=429.547..429.824 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 670kB
                           Worker 0:  Sort Method: quicksort  Memory: 619kB
                           Worker 1:  Sort Method: quicksort  Memory: 619kB
                           Worker 2:  Sort Method: quicksort  Memory: 535kB
                           Worker 3:  Sort Method: quicksort  Memory: 607kB
                           ->  Parallel Hash Join  (cost=37915.89..172547.23 rows=79310 width=24) (actual time=98.010..427.880 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.02 rows=816130 width=16) (actual time=0.051..250.523 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37327.97..37327.97 rows=47034 width=12) (actual time=97.228..97.231 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4535.62..37327.97 rows=47034 width=12) (actual time=10.348..88.392 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233498 width=16) (actual time=0.010..49.488 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12590 width=4) (actual time=9.231..9.232 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12590 width=4) (actual time=0.013..6.696 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.255 ms
 Execution Time: 460.020 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29306.75..61889.56 rows=1 width=24) (actual time=2936.935..2940.099 rows=1 loops=1)
   ->  GroupAggregate  (cost=29306.75..192220.80 rows=5 width=24) (actual time=2936.934..2940.096 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29306.75..191943.53 rows=55445 width=16) (actual time=423.281..2930.850 rows=10479 loops=1)
               ->  Gather Merge  (cost=29306.32..35865.82 rows=55445 width=20) (actual time=422.628..439.327 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28306.28..28350.99 rows=17885 width=20) (actual time=413.377..413.854 rows=3789 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1265kB
                           Worker 0:  Sort Method: quicksort  Memory: 1261kB
                           Worker 1:  Sort Method: quicksort  Memory: 1266kB
                           Worker 2:  Sort Method: quicksort  Memory: 1244kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=643.74..27043.02 rows=17885 width=20) (actual time=2.891..407.766 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5799
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..629.88 rows=55445 width=0) (actual time=7.140..7.140 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.217..0.217 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 14.158 ms
 Execution Time: 2940.867 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29306.75..61889.56 rows=1 width=24) (actual time=76.502..81.872 rows=1 loops=1)
   ->  GroupAggregate  (cost=29306.75..192220.80 rows=5 width=24) (actual time=76.501..81.870 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29306.75..191943.53 rows=55445 width=16) (actual time=33.251..80.246 rows=10479 loops=1)
               ->  Gather Merge  (cost=29306.32..35865.82 rows=55445 width=20) (actual time=33.209..41.714 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28306.28..28350.99 rows=17885 width=20) (actual time=30.202..30.494 rows=3777 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1271kB
                           Worker 0:  Sort Method: quicksort  Memory: 1264kB
                           Worker 1:  Sort Method: quicksort  Memory: 1253kB
                           Worker 2:  Sort Method: quicksort  Memory: 1249kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=643.74..27043.02 rows=17885 width=20) (actual time=6.162..26.672 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5855
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..629.88 rows=55445 width=0) (actual time=5.469..5.469 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.821 ms
 Execution Time: 81.927 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84275.01..84275.01 rows=1 width=58) (actual time=2297.071..2306.968 rows=1 loops=1)
   ->  Sort  (cost=84275.01..84275.07 rows=25 width=58) (actual time=2297.069..2306.966 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84235.49..84274.88 rows=25 width=58) (actual time=2296.479..2306.955 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84235.49..84274.01 rows=75 width=58) (actual time=2296.234..2306.934 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83235.45..83265.15 rows=25 width=58) (actual time=2287.555..2288.338 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83235.45..83241.33 rows=2351 width=38) (actual time=2287.354..2287.443 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 196kB
                                 Worker 0:  Sort Method: quicksort  Memory: 192kB
                                 Worker 1:  Sort Method: quicksort  Memory: 197kB
                                 Worker 2:  Sort Method: quicksort  Memory: 197kB
                                 ->  Hash Join  (cost=7851.48..83103.81 rows=2351 width=38) (actual time=49.068..2285.501 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7378.48..82322.24 rows=58775 width=50) (actual time=43.705..2266.938 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7378.05..34947.82 rows=14694 width=38) (actual time=43.236..302.134 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2637.92..29870.96 rows=73469 width=8) (actual time=19.811..251.887 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6512
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2580.98 rows=227755 width=0) (actual time=15.777..15.777 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=23.244..23.247 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.231..20.928 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.099..16.053 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.126..0.128 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.120..0.126 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.056..0.057 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.058..0.059 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.052..0.056 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.163..0.172 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=4.115..4.115 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.089..2.286 rows=10000 loops=4)
 Planning Time: 22.800 ms
 Execution Time: 2307.070 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84275.01..84275.01 rows=1 width=58) (actual time=144.809..158.485 rows=1 loops=1)
   ->  Sort  (cost=84275.01..84275.07 rows=25 width=58) (actual time=144.807..158.483 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84235.49..84274.88 rows=25 width=58) (actual time=144.196..158.472 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84235.49..84274.01 rows=75 width=58) (actual time=143.961..158.453 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83235.45..83265.15 rows=25 width=58) (actual time=139.574..140.355 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83235.45..83241.33 rows=2351 width=38) (actual time=139.378..139.462 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 200kB
                                 Worker 0:  Sort Method: quicksort  Memory: 194kB
                                 Worker 1:  Sort Method: quicksort  Memory: 198kB
                                 Worker 2:  Sort Method: quicksort  Memory: 192kB
                                 ->  Hash Join  (cost=7851.48..83103.81 rows=2351 width=38) (actual time=31.161..138.606 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7378.48..82322.24 rows=58775 width=50) (actual time=28.005..127.418 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7378.05..34947.82 rows=14694 width=38) (actual time=27.982..68.318 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2637.92..29870.96 rows=73469 width=8) (actual time=16.246..42.834 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6542
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2580.98 rows=227755 width=0) (actual time=12.539..12.540 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.591..11.593 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.042..9.544 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.399 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.032 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.030 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.009 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.069..3.069 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.014..1.403 rows=10000 loops=4)
 Planning Time: 4.295 ms
 Execution Time: 158.568 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107151.68..107151.69 rows=1 width=32) (actual time=1073.868..1079.761 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107151.68..107151.69 rows=1 width=32) (actual time=1073.866..1079.759 rows=1 loops=1)
         ->  Gather  (cost=107151.25..107151.66 rows=4 width=32) (actual time=1069.286..1079.745 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106151.25..106151.26 rows=1 width=32) (actual time=1062.091..1062.093 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20948.57..106002.55 rows=29738 width=12) (actual time=132.658..1044.666 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13280
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20918.84 rows=118953 width=0) (actual time=128.784..128.784 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 11.707 ms
 Execution Time: 1081.200 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107151.68..107151.69 rows=1 width=32) (actual time=207.442..211.851 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107151.68..107151.69 rows=1 width=32) (actual time=207.441..211.849 rows=1 loops=1)
         ->  Gather  (cost=107151.25..107151.66 rows=4 width=32) (actual time=202.935..211.831 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106151.25..106151.26 rows=1 width=32) (actual time=199.590..199.591 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20948.57..106002.55 rows=29738 width=12) (actual time=106.869..191.327 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=11579
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20918.84 rows=118953 width=0) (actual time=98.704..98.704 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.496 ms
 Execution Time: 212.126 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141428.16..141586.55 rows=1 width=116) (actual time=2390.582..2391.800 rows=1 loops=1)
   ->  GroupAggregate  (cost=141428.16..1103624.56 rows=6075 width=116) (actual time=2390.581..2391.798 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141428.16..1103442.31 rows=6075 width=96) (actual time=822.524..2389.566 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32697
               ->  Nested Loop  (cost=141427.74..632042.60 rows=151869 width=76) (actual time=803.395..1855.335 rows=34056 loops=1)
                     ->  Gather Merge  (cost=141427.31..159616.21 rows=151910 width=76) (actual time=802.435..834.655 rows=34056 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140427.26..140522.20 rows=37978 width=76) (actual time=790.655..791.521 rows=7207 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4510kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4270kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4484kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4278kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4390kB
                                 ->  Hash Join  (cost=381.77..137538.48 rows=37978 width=76) (actual time=3.867..766.080 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.02 rows=456284 width=24) (actual time=0.796..710.336 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.981..2.984 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.144..2.784 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.069..1.513 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.069..0.070 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.063..0.068 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.052..0.054 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.029..0.029 rows=1 loops=34056)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.015..0.015 rows=1 loops=34056)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.478 ms
 Execution Time: 2392.434 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141428.16..141586.55 rows=1 width=116) (actual time=508.534..510.241 rows=1 loops=1)
   ->  GroupAggregate  (cost=141428.16..1103624.56 rows=6075 width=116) (actual time=508.533..510.239 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141428.16..1103442.31 rows=6075 width=96) (actual time=341.235..509.026 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32702
               ->  Nested Loop  (cost=141427.74..632042.60 rows=151869 width=76) (actual time=341.206..437.227 rows=34061 loops=1)
                     ->  Gather Merge  (cost=141427.31..159616.21 rows=151910 width=76) (actual time=341.152..361.552 rows=34061 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140427.26..140522.20 rows=37978 width=76) (actual time=331.924..332.583 rows=7237 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 5639kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5984kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4536kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4230kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3079kB
                                 ->  Hash Join  (cost=381.77..137538.48 rows=37978 width=76) (actual time=2.493..303.634 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.02 rows=456284 width=24) (actual time=0.051..247.619 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.354..2.358 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.036..2.171 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.716 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.025..0.028 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.019..0.026 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34061)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34061)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.872 ms
 Execution Time: 510.336 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41999.71..42385.90 rows=1 width=64) (actual time=4787.647..4791.475 rows=1 loops=1)
   ->  GroupAggregate  (cost=41999.71..971176.11 rows=2406 width=64) (actual time=4787.645..4791.472 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41999.71..971079.37 rows=2431 width=70) (actual time=255.409..4788.702 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14807
               ->  Nested Loop  (cost=41999.71..970193.93 rows=2431 width=20) (actual time=255.392..4784.386 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41999.42..963060.55 rows=2431 width=20) (actual time=254.820..4745.673 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41998.99..348511.95 rows=366178 width=24) (actual time=229.320..3747.156 rows=183037 loops=1)
                                 ->  Gather Merge  (cost=41998.56..52828.81 rows=91544 width=8) (actual time=228.738..264.574 rows=45677 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40998.52..41072.35 rows=29530 width=8) (actual time=220.458..221.766 rows=12427 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 2079kB
                                             Worker 0:  Sort Method: quicksort  Memory: 2023kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1993kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1965kB
                                             ->  Parallel Hash Join  (cost=4740.13..38805.93 rows=29530 width=8) (actual time=24.265..212.215 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147652 width=12) (actual time=0.443..156.910 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=23.610..23.613 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.251..21.741 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.107..17.033 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.137..0.139 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.131..0.137 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.058..0.059 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.069..0.069 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.063..0.064 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.070..0.075 rows=4 loops=45677)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=183037)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62996  Misses: 120041  Evictions: 0  Overflows: 0  Memory Usage: 8001kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=120041)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.030..0.030 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.017 rows=25 loops=1)
 Planning Time: 25.635 ms
 Execution Time: 4792.624 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41999.71..42385.90 rows=1 width=64) (actual time=635.638..641.590 rows=1 loops=1)
   ->  GroupAggregate  (cost=41999.71..971176.11 rows=2406 width=64) (actual time=635.636..641.587 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=41999.71..971079.37 rows=2431 width=70) (actual time=103.074..640.292 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14806
               ->  Nested Loop  (cost=41999.71..970193.93 rows=2431 width=20) (actual time=103.039..637.869 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41999.42..963060.55 rows=2431 width=20) (actual time=103.023..634.575 rows=1235 loops=1)
                           ->  Nested Loop  (cost=41998.99..348511.95 rows=366178 width=24) (actual time=102.062..292.311 rows=182874 loops=1)
                                 ->  Gather Merge  (cost=41998.56..52828.81 rows=91544 width=8) (actual time=102.008..124.879 rows=45634 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40998.52..41072.35 rows=29530 width=8) (actual time=97.637..98.538 rows=12426 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 2030kB
                                             Worker 0:  Sort Method: quicksort  Memory: 2001kB
                                             Worker 1:  Sort Method: quicksort  Memory: 2004kB
                                             Worker 2:  Sort Method: quicksort  Memory: 2026kB
                                             ->  Parallel Hash Join  (cost=4740.13..38805.93 rows=29530 width=8) (actual time=11.794..90.926 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=147652 width=12) (actual time=0.010..55.656 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.601..11.604 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.044..9.169 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.224 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.033..0.035 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.028..0.033 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45634)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=182874)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62899  Misses: 119975  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=119975)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.017 rows=25 loops=1)
 Planning Time: 5.045 ms
 Execution Time: 642.804 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22796.28..23830.54 rows=1 width=90) (actual time=4773.563..4776.539 rows=1 loops=1)
   ->  GroupAggregate  (cost=22796.28..125188.03 rows=99 width=90) (actual time=4773.562..4776.537 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=22796.28..125184.82 rows=99 width=81) (actual time=4772.579..4775.603 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1741kB  Peak Memory: 1741kB
               ->  Nested Loop  (cost=18530.17..125181.05 rows=99 width=81) (actual time=307.929..4747.776 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=99 width=53) (actual time=307.065..2616.195 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=306.053..311.746 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=299.275..299.415 rows=1034 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1823kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1639kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1771kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=4.245..289.555 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=4.079..285.965 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.200..275.933 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.123..37.592 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.061..0.064 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.868..3.868 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.102..2.600 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.087..0.087 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.077..0.081 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.289..1.264 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.153..0.153 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 27.052 ms
 Execution Time: 4776.630 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22796.28..23830.54 rows=1 width=90) (actual time=126.458..130.357 rows=1 loops=1)
   ->  GroupAggregate  (cost=22796.28..125188.03 rows=99 width=90) (actual time=126.457..130.355 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=22796.28..125184.82 rows=99 width=81) (actual time=125.503..129.447 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 31kB  Peak Memory: 31kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1741kB  Peak Memory: 1741kB
               ->  Nested Loop  (cost=18530.17..125181.05 rows=99 width=81) (actual time=50.893..121.906 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18529.74..124869.31 rows=99 width=53) (actual time=50.872..75.459 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18529.31..22293.97 rows=32324 width=48) (actual time=50.836..55.553 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17529.28..17562.95 rows=13468 width=48) (actual time=48.274..48.365 rows=1093 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1816kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1709kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1709kB
                                       ->  Hash Join  (cost=449.99..16605.56 rows=13468 width=48) (actual time=2.771..40.570 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16562.65 rows=13468 width=26) (actual time=2.674..37.616 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13468 width=18) (actual time=0.028..30.468 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.014..14.630 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.637..2.637 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.436 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.030..0.030 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.022..0.025 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.459 ms
 Execution Time: 130.459 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99964.79..99964.84 rows=20 width=202) (actual time=2054.686..2059.494 rows=20 loops=1)
   ->  Sort  (cost=99964.79..100103.06 rows=55305 width=202) (actual time=2054.685..2059.491 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97801.84..98493.15 rows=55305 width=202) (actual time=2022.478..2048.250 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6657.39..97110.52 rows=55305 width=182) (actual time=59.606..1912.665 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5657.39..90580.02 rows=17840 width=182) (actual time=50.903..1967.990 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5655.83..90523.69 rows=17840 width=160) (actual time=50.751..1957.727 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=652.58..85473.61 rows=17840 width=16) (actual time=14.435..1899.557 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=652.14..27055.39 rows=18150 width=8) (actual time=12.929..254.081 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4897
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..638.08 rows=56265 width=0) (actual time=9.165..9.165 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.110..0.114 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=35.903..35.903 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.092..15.283 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.070..0.071 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.055..0.059 rows=25 loops=4)
 Planning Time: 19.158 ms
 Execution Time: 2059.907 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=99964.79..99964.84 rows=20 width=202) (actual time=220.951..225.013 rows=20 loops=1)
   ->  Sort  (cost=99964.79..100103.06 rows=55305 width=202) (actual time=220.950..225.009 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=97801.84..98493.15 rows=55305 width=202) (actual time=187.653..212.745 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6657.39..97110.52 rows=55305 width=182) (actual time=42.797..105.099 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5657.39..90580.02 rows=17840 width=182) (actual time=39.185..149.760 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5655.83..90523.69 rows=17840 width=160) (actual time=39.076..142.664 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=652.58..85473.61 rows=17840 width=16) (actual time=11.062..100.391 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=652.14..27055.39 rows=18150 width=8) (actual time=10.923..27.483 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2223
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..638.08 rows=56265 width=0) (actual time=7.550..7.550 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.602..27.602 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.006..7.906 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.027 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.014 rows=25 loops=4)
 Planning Time: 1.740 ms
 Execution Time: 225.407 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.64..15992.64 rows=1 width=36) (actual time=716.494..716.498 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.65..7689.66 rows=1 width=32) (actual time=26.410..26.412 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.64 rows=32000 width=10) (actual time=0.051..18.330 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.045..0.279 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.227 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.98..8329.65 rows=10667 width=36) (actual time=716.492..716.494 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.64..8249.64 rows=10667 width=36) (actual time=705.089..716.331 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.64 rows=32000 width=14) (actual time=0.887..645.645 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.658..4.226 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.185..0.189 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.467..3.937 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.249..0.249 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.043..1.542 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.330 ms
 Execution Time: 716.854 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.64..15992.64 rows=1 width=36) (actual time=82.830..82.835 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.65..7689.66 rows=1 width=32) (actual time=25.864..25.866 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.64 rows=32000 width=10) (actual time=0.050..17.759 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.272 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.034..0.219 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.98..8329.65 rows=10667 width=36) (actual time=82.829..82.831 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.64..8249.64 rows=10667 width=36) (actual time=71.750..82.675 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.64 rows=32000 width=14) (actual time=0.058..26.715 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.052..0.440 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.042..0.379 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.018 ms
 Execution Time: 83.177 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147783.23..161213.11 rows=1 width=27) (actual time=1992.631..1993.560 rows=1 loops=1)
   ->  GroupAggregate  (cost=147783.23..241792.36 rows=7 width=27) (actual time=1992.630..1993.558 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147783.23..241286.03 rows=28929 width=27) (actual time=837.640..1981.432 rows=15492 loops=1)
               ->  Gather Merge  (cost=147782.81..151247.57 rows=28937 width=15) (actual time=836.547..847.075 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146782.75..146800.83 rows=7234 width=15) (actual time=829.127..829.517 rows=4240 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 542kB
                           Worker 0:  Sort Method: quicksort  Memory: 538kB
                           Worker 1:  Sort Method: quicksort  Memory: 519kB
                           Worker 2:  Sort Method: quicksort  Memory: 520kB
                           Worker 3:  Sort Method: quicksort  Memory: 536kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146319.03 rows=7234 width=15) (actual time=0.642..827.110 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.072..0.072 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.370 ms
 Execution Time: 1994.355 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147783.23..161213.11 rows=1 width=27) (actual time=410.803..411.691 rows=1 loops=1)
   ->  GroupAggregate  (cost=147783.23..241792.36 rows=7 width=27) (actual time=410.802..411.689 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147783.23..241286.03 rows=28929 width=27) (actual time=362.823..406.955 rows=15492 loops=1)
               ->  Gather Merge  (cost=147782.81..151247.57 rows=28937 width=15) (actual time=362.787..367.516 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146782.75..146800.83 rows=7234 width=15) (actual time=358.577..358.809 rows=4212 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 523kB
                           Worker 0:  Sort Method: quicksort  Memory: 495kB
                           Worker 1:  Sort Method: quicksort  Memory: 615kB
                           Worker 2:  Sort Method: quicksort  Memory: 553kB
                           Worker 3:  Sort Method: quicksort  Memory: 468kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146319.03 rows=7234 width=15) (actual time=0.088..355.397 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.769 ms
 Execution Time: 411.747 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1450.430..1450.432 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1450.428..1450.430 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1450.401..1450.408 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1410.398..1433.456 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=34.627..1052.989 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.568..621.107 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.714..33.715 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..16.558 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 12.832 ms
 Execution Time: 1451.560 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1242.482..1242.484 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1242.480..1242.482 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1242.453..1242.460 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1201.242..1225.628 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=29.345..866.282 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..464.589 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=28.947..28.947 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..12.980 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.693 ms
 Execution Time: 1243.649 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73772.55..73772.57 rows=1 width=32) (actual time=556.495..560.356 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=73772.55..73772.57 rows=1 width=32) (actual time=556.493..560.354 rows=1 loops=1)
         ->  Gather  (cost=73772.10..73772.51 rows=4 width=64) (actual time=553.506..560.330 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=72772.10..72772.11 rows=1 width=64) (actual time=544.802..544.804 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7190.51..72440.63 rows=18941 width=33) (actual time=55.306..528.444 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1216.51..66416.91 rows=18941 width=16) (actual time=21.406..479.492 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8514
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1197.57 rows=75764 width=0) (actual time=14.339..14.339 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.435..33.436 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.080..19.439 rows=40000 loops=5)
 Planning Time: 15.293 ms
 Execution Time: 560.420 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=73772.55..73772.57 rows=1 width=32) (actual time=108.857..116.342 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=73772.55..73772.57 rows=1 width=32) (actual time=108.855..116.340 rows=1 loops=1)
         ->  Gather  (cost=73772.10..73772.51 rows=4 width=64) (actual time=107.082..116.321 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=72772.10..72772.11 rows=1 width=64) (actual time=103.140..103.142 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7190.51..72440.63 rows=18941 width=33) (actual time=39.346..94.387 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1216.51..66416.91 rows=18941 width=16) (actual time=15.082..62.660 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9069
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1197.57 rows=75764 width=0) (actual time=8.685..8.685 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=23.862..23.863 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.010..6.806 rows=40000 loops=5)
 Planning Time: 0.773 ms
 Execution Time: 116.382 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241667.36..241774.32 rows=1 width=103) (actual time=1290.126..1297.409 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122212.98..122212.99 rows=1 width=32) (actual time=250.101..250.103 rows=1 loops=1)
           ->  HashAggregate  (cost=121963.76..122088.37 rows=9969 width=36) (actual time=246.660..249.510 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3675.16..119672.32 rows=229144 width=16) (actual time=29.172..123.276 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3617.87 rows=229144 width=0) (actual time=18.880..18.881 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119454.37..124802.35 rows=50 width=103) (actual time=1290.125..1297.404 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119454.08..124677.23 rows=50 width=36) (actual time=1289.613..1296.892 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119454.08..124228.62 rows=39876 width=36) (actual time=1014.489..1029.443 rows=41792 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118454.02..118478.95 rows=9969 width=36) (actual time=1003.911..1004.770 rows=8820 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1467kB
                           Worker 0:  Sort Method: quicksort  Memory: 1465kB
                           Worker 1:  Sort Method: quicksort  Memory: 1468kB
                           Worker 2:  Sort Method: quicksort  Memory: 1465kB
                           Worker 3:  Sort Method: quicksort  Memory: 1468kB
                           ->  Partial HashAggregate  (cost=117667.31..117791.92 rows=9969 width=36) (actual time=995.997..1001.709 rows=9892 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3675.16..117094.45 rows=57286 width=16) (actual time=42.966..938.531 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13716
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3617.87 rows=229144 width=0) (actual time=38.703..38.703 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.506..0.506 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 11.627 ms
 Execution Time: 1298.520 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241667.36..241774.32 rows=1 width=103) (actual time=421.672..432.331 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122212.98..122212.99 rows=1 width=32) (actual time=234.857..234.858 rows=1 loops=1)
           ->  HashAggregate  (cost=121963.76..122088.37 rows=9969 width=36) (actual time=231.361..234.263 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3675.16..119672.32 rows=229144 width=16) (actual time=28.919..110.359 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3617.87 rows=229144 width=0) (actual time=18.620..18.620 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119454.37..124802.35 rows=50 width=103) (actual time=421.671..432.328 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119454.08..124677.23 rows=50 width=36) (actual time=421.639..432.295 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119454.08..124228.62 rows=39876 width=36) (actual time=162.192..180.355 rows=41680 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118454.02..118478.95 rows=9969 width=36) (actual time=154.849..155.669 rows=8814 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1464kB
                           Worker 0:  Sort Method: quicksort  Memory: 1474kB
                           Worker 1:  Sort Method: quicksort  Memory: 1452kB
                           Worker 2:  Sort Method: quicksort  Memory: 1464kB
                           Worker 3:  Sort Method: quicksort  Memory: 1464kB
                           ->  Partial HashAggregate  (cost=117667.31..117791.92 rows=9969 width=36) (actual time=146.704..152.298 rows=9866 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3675.16..117094.45 rows=57286 width=16) (actual time=33.796..108.613 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12722
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3617.87 rows=229144 width=0) (actual time=26.658..26.659 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.028..0.028 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.739 ms
 Execution Time: 432.723 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26791.60..26791.60 rows=1 width=44) (actual time=276.511..277.155 rows=1 loops=1)
   ->  Sort  (cost=26791.60..26831.72 rows=16049 width=44) (actual time=276.510..277.153 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18781.58..26711.36 rows=16049 width=44) (actual time=184.410..271.984 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18781.58..25952.01 rows=59886 width=40) (actual time=184.382..231.893 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17781.52..17818.95 rows=14972 width=40) (actual time=160.175..161.948 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2910kB
                           Worker 0:  Sort Method: quicksort  Memory: 2705kB
                           Worker 1:  Sort Method: quicksort  Memory: 2703kB
                           Worker 2:  Sort Method: quicksort  Memory: 2708kB
                           Worker 3:  Sort Method: quicksort  Memory: 2541kB
                           ->  Parallel Hash Join  (cost=6686.71..16743.21 rows=14972 width=40) (actual time=34.448..100.420 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.994..55.298 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.863..6.293 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12476 width=40) (actual time=27.311..27.312 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12476 width=40) (actual time=0.177..25.138 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 16.756 ms
 Execution Time: 277.231 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26791.60..26791.60 rows=1 width=44) (actual time=243.720..244.121 rows=1 loops=1)
   ->  Sort  (cost=26791.60..26831.72 rows=16049 width=44) (actual time=243.719..244.119 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18781.58..26711.36 rows=16049 width=44) (actual time=152.277..239.558 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18781.58..25952.01 rows=59886 width=40) (actual time=152.246..199.416 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17781.52..17818.95 rows=14972 width=40) (actual time=135.044..136.788 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2362kB
                           Worker 0:  Sort Method: quicksort  Memory: 2733kB
                           Worker 1:  Sort Method: quicksort  Memory: 2790kB
                           Worker 2:  Sort Method: quicksort  Memory: 2686kB
                           Worker 3:  Sort Method: quicksort  Memory: 2996kB
                           ->  Parallel Hash Join  (cost=6686.71..16743.21 rows=14972 width=40) (actual time=18.501..75.583 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.733..41.678 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.085..2.480 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12476 width=40) (actual time=15.575..15.576 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12476 width=40) (actual time=0.015..12.620 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.827 ms
 Execution Time: 244.176 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219848.81..219848.82 rows=1 width=32) (actual time=4707.045..4709.311 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=219848.81..219848.82 rows=1 width=32) (actual time=4707.043..4709.309 rows=1 loops=1)
         ->  Gather  (cost=219848.58..219848.79 rows=2 width=32) (actual time=4698.606..4709.296 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=218848.58..218848.59 rows=1 width=32) (actual time=4690.823..4690.826 rows=1 loops=3)
                     ->  Nested Loop  (cost=209898.43..218846.48 rows=841 width=8) (actual time=4612.751..4690.736 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Hash Join  (cost=209898.00..215247.23 rows=84 width=40) (actual time=4612.391..4643.403 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=86 width=4) (actual time=0.576..31.493 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=207460.03..207460.03 rows=195038 width=36) (actual time=4611.405..4611.406 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202584.08..205509.65 rows=195038 width=36) (actual time=3865.933..4574.529 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 56504kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56472kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56472kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172576.05 rows=6001605 width=9) (actual time=0.427..1053.675 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.483..0.680 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 13.265 ms
 Execution Time: 4718.882 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219848.81..219848.82 rows=1 width=32) (actual time=4325.037..4327.819 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=219848.81..219848.82 rows=1 width=32) (actual time=4325.035..4327.815 rows=1 loops=1)
         ->  Gather  (cost=219848.58..219848.79 rows=2 width=32) (actual time=4316.718..4327.803 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=218848.58..218848.59 rows=1 width=32) (actual time=4313.010..4313.013 rows=1 loops=3)
                     ->  Nested Loop  (cost=209898.43..218846.48 rows=841 width=8) (actual time=4302.046..4312.977 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Hash Join  (cost=209898.00..215247.23 rows=84 width=40) (actual time=4302.005..4311.396 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=86 width=4) (actual time=0.072..9.420 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=207460.03..207460.03 rows=195038 width=36) (actual time=4301.448..4301.449 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202584.08..205509.65 rows=195038 width=36) (actual time=3558.940..4264.928 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 56472kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56456kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 56456kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172576.05 rows=6001605 width=9) (actual time=0.057..773.016 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..42.72 rows=10 width=17) (actual time=0.009..0.022 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 1.152 ms
 Execution Time: 4336.493 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799701.23..799701.48 rows=100 width=71) (actual time=4552.744..4552.750 rows=9 loops=1)
   ->  Sort  (cost=799701.23..804702.57 rows=2000536 width=71) (actual time=4552.743..4552.748 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=663069.81..723242.18 rows=2000536 width=71) (actual time=4551.999..4552.700 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=340219.13..555306.56 rows=2000536 width=44) (actual time=3804.314..4551.922 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172576.05 rows=6001605 width=9) (actual time=0.683..330.247 rows=6001215 loops=1)
                     ->  Hash  (cost=333967.46..333967.46 rows=500134 width=43) (actual time=3603.585..3603.588 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=287586.06..333967.46 rows=500134 width=43) (actual time=3246.354..3603.563 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280614.06..325682.57 rows=500134 width=24) (actual time=3176.825..3534.022 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.556..275.521 rows=1500000 loops=1)
                                       ->  Hash  (cost=274362.39..274362.39 rows=500134 width=4) (actual time=3076.814..3076.815 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269361.05 rows=500134 width=4) (actual time=657.529..3076.790 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216847.01 rows=6001605 width=9) (actual time=0.019..1669.033 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.151..69.151 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.497..43.065 rows=150000 loops=1)
 Planning Time: 16.636 ms
 Execution Time: 4554.469 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=799701.23..799701.48 rows=100 width=71) (actual time=3456.050..3456.055 rows=9 loops=1)
   ->  Sort  (cost=799701.23..804702.57 rows=2000536 width=71) (actual time=3456.048..3456.052 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=663069.81..723242.18 rows=2000536 width=71) (actual time=3455.305..3456.005 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=340219.13..555306.56 rows=2000536 width=44) (actual time=2698.766..3455.230 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172576.05 rows=6001605 width=9) (actual time=0.016..330.847 rows=6001215 loops=1)
                     ->  Hash  (cost=333967.46..333967.46 rows=500134 width=43) (actual time=2496.140..2496.143 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=287586.06..333967.46 rows=500134 width=43) (actual time=2285.152..2496.120 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=280614.06..325682.57 rows=500134 width=24) (actual time=2239.957..2450.915 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..80.452 rows=1500000 loops=1)
                                       ->  Hash  (cost=274362.39..274362.39 rows=500134 width=4) (actual time=2182.773..2182.774 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269361.05 rows=500134 width=4) (actual time=461.200..2182.757 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216847.01 rows=6001605 width=9) (actual time=0.016..862.472 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.781..44.782 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.010..19.575 rows=150000 loops=1)
 Planning Time: 1.427 ms
 Execution Time: 3457.184 ms
(29 rows)

query 19 run 1
SET
SET
SET

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18166.54..18166.55 rows=1 width=32) (actual time=857.000..859.694 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18166.54..18166.55 rows=1 width=32) (actual time=856.998..859.692 rows=1 loops=1)
         ->  Gather  (cost=18166.32..18166.53 rows=2 width=32) (actual time=854.574..859.679 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17166.32..17166.33 rows=1 width=32) (actual time=849.981..849.982 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17165.96 rows=48 width=12) (actual time=18.699..849.869 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.620..28.738 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.10 rows=1 width=21) (actual time=4.319..4.857 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 15.083 ms
 Execution Time: 860.100 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18166.54..18166.55 rows=1 width=32) (actual time=28.530..32.340 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18166.54..18166.55 rows=1 width=32) (actual time=28.529..32.338 rows=1 loops=1)
         ->  Gather  (cost=18166.32..18166.53 rows=2 width=32) (actual time=28.447..32.330 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17166.32..17166.33 rows=1 width=32) (actual time=26.143..26.144 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17165.96 rows=48 width=12) (actual time=0.422..26.104 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=198 width=30) (actual time=0.112..16.965 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.10 rows=1 width=21) (actual time=0.048..0.054 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.973 ms
 Execution Time: 32.381 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215780.42..215780.42 rows=1 width=51) (actual time=3835.770..3835.852 rows=1 loops=1)
   ->  Sort  (cost=215780.42..215780.42 rows=1 width=51) (actual time=3835.768..3835.850 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185972.71..215780.41 rows=1 width=51) (actual time=3665.184..3835.621 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.575..3.934 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.249..0.252 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.318..2.878 rows=10000 loops=1)
               ->  Materialize  (cost=185972.71..215325.10 rows=1 width=8) (actual time=5.753..8.510 rows=4320 loops=438)
                     ->  Nested Loop  (cost=185972.71..215325.09 rows=1 width=8) (actual time=2519.597..3658.051 rows=5898 loops=1)
                           ->  Hash Join  (cost=185972.28..208334.55 rows=4905 width=44) (actual time=2519.162..3149.137 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179604.37..195835.49 rows=485634 width=40) (actual time=2487.999..3060.425 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14688.80..140990.79 rows=916133 width=13) (actual time=130.607..1977.279 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14459.76 rows=916133 width=0) (actual time=111.618..111.618 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=31.139..31.217 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.710..30.787 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.155..24.193 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.085..0.085 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 17.369 ms
 Execution Time: 3841.408 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=215780.42..215780.42 rows=1 width=51) (actual time=1487.762..1487.844 rows=1 loops=1)
   ->  Sort  (cost=215780.42..215780.42 rows=1 width=51) (actual time=1487.761..1487.842 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185972.71..215780.41 rows=1 width=51) (actual time=1321.839..1487.653 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1891765
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.019..1.688 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.015 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.004..0.590 rows=10000 loops=1)
               ->  Materialize  (cost=185972.71..215325.10 rows=1 width=8) (actual time=1.671..3.162 rows=4320 loops=438)
                     ->  Nested Loop  (cost=185972.71..215325.09 rows=1 width=8) (actual time=731.897..1318.412 rows=5898 loops=1)
                           ->  Hash Join  (cost=185972.28..208334.55 rows=4905 width=44) (actual time=731.878..1296.202 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179604.37..195835.49 rows=485634 width=40) (actual time=720.059..1238.335 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 27456kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14688.80..140990.79 rows=916133 width=13) (actual time=92.990..310.633 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14459.76 rows=916133 width=0) (actual time=74.476..74.476 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.797..11.876 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.363..11.559 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.047..8.991 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.708 ms
 Execution Time: 1492.669 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194185.58..194185.59 rows=1 width=34) (actual time=1372.450..1372.566 rows=100 loops=1)
   ->  Sort  (cost=194185.58..194185.59 rows=1 width=34) (actual time=1372.449..1372.558 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194185.55..194185.57 rows=1 width=34) (actual time=1371.386..1372.150 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194185.55..194185.56 rows=1 width=26) (actual time=1371.377..1371.650 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 490kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194185.54 rows=1 width=26) (actual time=11.910..1357.342 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194182.15 rows=1 width=38) (actual time=11.577..1264.874 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194178.84 rows=1 width=34) (actual time=11.294..22.126 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193178.74 rows=1 width=34) (actual time=4.208..615.069 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133624.64 rows=20005 width=34) (actual time=2.589..495.154 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.02 rows=500134 width=8) (actual time=0.887..427.316 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.611..1.612 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.316..1.535 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.067..0.069 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.246..1.408 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.116..0.116 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.086..0.086 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.012..0.013 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.596 ms
 Execution Time: 1372.941 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194185.58..194185.59 rows=1 width=34) (actual time=491.187..491.288 rows=100 loops=1)
   ->  Sort  (cost=194185.58..194185.59 rows=1 width=34) (actual time=491.186..491.281 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194185.55..194185.57 rows=1 width=34) (actual time=490.112..490.871 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194185.55..194185.56 rows=1 width=26) (actual time=490.103..490.358 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 490kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194185.54 rows=1 width=26) (actual time=1.556..477.310 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194182.15 rows=1 width=38) (actual time=1.550..455.302 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194178.84 rows=1 width=34) (actual time=1.387..404.558 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193178.74 rows=1 width=34) (actual time=0.877..453.568 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133624.64 rows=20005 width=34) (actual time=0.530..353.270 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.02 rows=500134 width=8) (actual time=0.030..273.898 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.416..0.418 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.051..0.355 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.040..0.298 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.020..0.020 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.715 ms
 Execution Time: 491.382 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.20 rows=1 width=72) (actual time=149.682..151.407 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=49.111..49.191 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=48.995..49.180 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=42.141..42.142 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.371..40.815 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7461.41 rows=726 width=72) (actual time=149.680..151.324 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7443.26 rows=726 width=38) (actual time=74.759..150.866 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=74.354..77.451 rows=2736 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.519..22.662 rows=1510 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 694kB
                           Worker 0:  Sort Method: quicksort  Memory: 606kB
                           Worker 1:  Sort Method: quicksort  Memory: 619kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.021..20.622 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.026..0.026 rows=1 loops=2736)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.781 ms
 Execution Time: 151.785 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.20 rows=1 width=72) (actual time=60.056..61.549 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=29.058..29.133 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=28.941..29.124 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=26.921..26.922 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.017..25.723 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7461.41 rows=726 width=72) (actual time=60.055..61.471 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7443.26 rows=726 width=38) (actual time=53.848..61.252 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=53.818..55.966 rows=2737 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.202..22.283 rows=1617 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 706kB
                           Worker 0:  Sort Method: quicksort  Memory: 599kB
                           Worker 1:  Sort Method: quicksort  Memory: 614kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..20.224 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 1.022 ms
 Execution Time: 61.605 ms
(30 rows)

