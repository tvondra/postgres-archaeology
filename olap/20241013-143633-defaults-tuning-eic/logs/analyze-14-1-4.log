query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184180.85..184181.48 rows=1 width=236) (actual time=2157.824..2157.902 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184180.85..184184.67 rows=6 width=236) (actual time=2157.823..2157.900 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184180.85..184183.72 rows=24 width=236) (actual time=2157.789..2157.869 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183180.79..183180.81 rows=6 width=236) (actual time=2149.213..2149.214 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183180.58..183180.71 rows=6 width=236) (actual time=2149.188..2149.196 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.76 rows=1481909 width=25) (actual time=0.404..412.679 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 13.398 ms
 Execution Time: 2158.605 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184180.85..184181.48 rows=1 width=236) (actual time=2045.676..2045.753 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184180.85..184184.67 rows=6 width=236) (actual time=2045.675..2045.752 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184180.85..184183.72 rows=24 width=236) (actual time=2045.638..2045.720 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183180.79..183180.81 rows=6 width=236) (actual time=2040.869..2040.870 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=183180.58..183180.71 rows=6 width=236) (actual time=2040.844..2040.852 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 32kB
                           Worker 0:  Batches: 1  Memory Usage: 32kB
                           Worker 1:  Batches: 1  Memory Usage: 32kB
                           Worker 2:  Batches: 1  Memory Usage: 32kB
                           Worker 3:  Batches: 1  Memory Usage: 32kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.76 rows=1481909 width=25) (actual time=0.032..282.995 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.558 ms
 Execution Time: 2046.035 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54211.17..54211.17 rows=1 width=192) (actual time=454.722..454.809 rows=100 loops=1)
   ->  Sort  (cost=54211.17..54211.17 rows=1 width=192) (actual time=454.720..454.795 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..54211.16 rows=1 width=192) (actual time=395.784..454.416 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6425.00 rows=760 width=30) (actual time=0.555..0.814 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=317 width=30) (actual time=0.361..34.882 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=394.531..394.535 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=7.036..316.739 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.484..194.234 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.540..6.543 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.684..6.027 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.333..4.349 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.341..0.343 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.329..0.339 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.154..0.157 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.167..0.167 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.160..0.162 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.034..0.034 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.028..0.032 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.021..0.031 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.020..0.026 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.017..0.018 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 18.768 ms
 Execution Time: 455.430 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=54211.17..54211.17 rows=1 width=192) (actual time=289.209..289.297 rows=100 loops=1)
   ->  Sort  (cost=54211.17..54211.17 rows=1 width=192) (actual time=289.208..289.289 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=37849.01..54211.16 rows=1 width=192) (actual time=253.197..288.934 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6425.00 rows=760 width=30) (actual time=0.287..0.491 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=317 width=30) (actual time=0.063..14.093 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=252.461..252.464 rows=162880 loops=1)
                     Buckets: 262144  Batches: 2  Memory Usage: 18709kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.846..180.705 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.004..49.951 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.835..2.838 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.031..2.351 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.002..0.672 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.025..0.027 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.019..0.025 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 2.120 ms
 Execution Time: 289.397 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232365.80..232365.83 rows=10 width=44) (actual time=1111.302..1112.920 rows=10 loops=1)
   ->  Sort  (cost=232365.80..233143.42 rows=311048 width=44) (actual time=1111.301..1112.917 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179847.13..225644.17 rows=311048 width=44) (actual time=1087.251..1110.683 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179847.13..217090.35 rows=311048 width=24) (actual time=1087.236..1093.589 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178847.07..179041.47 rows=77762 width=24) (actual time=1076.776..1077.066 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 670kB
                           Worker 0:  Sort Method: quicksort  Memory: 671kB
                           Worker 1:  Sort Method: quicksort  Memory: 689kB
                           Worker 2:  Sort Method: quicksort  Memory: 658kB
                           Worker 3:  Sort Method: quicksort  Memory: 659kB
                           ->  Parallel Hash Join  (cost=37892.42..172530.16 rows=77762 width=24) (actual time=231.971..1074.616 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.76 rows=819499 width=16) (actual time=0.526..770.263 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37318.37..37318.37 rows=45924 width=12) (actual time=230.297..230.300 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4533.90..37318.37 rows=45924 width=12) (actual time=21.272..220.968 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230501 width=16) (actual time=0.406..169.404 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12452 width=4) (actual time=20.757..20.758 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12452 width=4) (actual time=0.082..19.006 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 16.260 ms
 Execution Time: 1113.378 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=232365.80..232365.83 rows=10 width=44) (actual time=460.401..462.981 rows=10 loops=1)
   ->  Sort  (cost=232365.80..233143.42 rows=311048 width=44) (actual time=460.400..462.978 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179847.13..225644.17 rows=311048 width=44) (actual time=436.299..460.781 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179847.13..217090.35 rows=311048 width=24) (actual time=436.286..443.890 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178847.07..179041.47 rows=77762 width=24) (actual time=430.575..430.858 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 620kB
                           Worker 0:  Sort Method: quicksort  Memory: 769kB
                           Worker 1:  Sort Method: quicksort  Memory: 630kB
                           Worker 2:  Sort Method: quicksort  Memory: 646kB
                           Worker 3:  Sort Method: quicksort  Memory: 683kB
                           ->  Parallel Hash Join  (cost=37892.42..172530.16 rows=77762 width=24) (actual time=99.668..428.060 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.76 rows=819499 width=16) (actual time=0.051..235.343 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37318.37..37318.37 rows=45924 width=12) (actual time=98.921..98.924 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4533.90..37318.37 rows=45924 width=12) (actual time=8.995..87.843 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=230501 width=16) (actual time=0.015..50.024 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12452 width=4) (actual time=8.126..8.126 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1536kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12452 width=4) (actual time=0.012..6.604 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.379 ms
 Execution Time: 463.049 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29286.41..61594.76 rows=1 width=24) (actual time=2865.438..2868.772 rows=1 loops=1)
   ->  GroupAggregate  (cost=29286.41..190828.14 rows=5 width=24) (actual time=2865.436..2868.769 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29286.41..190553.22 rows=54975 width=16) (actual time=425.312..2860.793 rows=10479 loops=1)
               ->  Gather Merge  (cost=29285.98..35789.88 rows=54975 width=20) (actual time=424.796..440.671 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28285.94..28330.27 rows=17734 width=20) (actual time=417.340..417.832 rows=3782 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1458kB
                           Worker 0:  Sort Method: quicksort  Memory: 1508kB
                           Worker 1:  Sort Method: quicksort  Memory: 1471kB
                           Worker 2:  Sort Method: quicksort  Memory: 1474kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=637.42..27034.43 rows=17734 width=20) (actual time=5.206..411.518 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5683
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..623.68 rows=54975 width=0) (actual time=7.156..7.156 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.211..0.211 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 14.702 ms
 Execution Time: 2869.435 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29286.41..61594.76 rows=1 width=24) (actual time=77.522..82.874 rows=1 loops=1)
   ->  GroupAggregate  (cost=29286.41..190828.14 rows=5 width=24) (actual time=77.521..82.872 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29286.41..190553.22 rows=54975 width=16) (actual time=33.875..81.433 rows=10479 loops=1)
               ->  Gather Merge  (cost=29285.98..35789.88 rows=54975 width=20) (actual time=33.833..42.133 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28285.94..28330.27 rows=17734 width=20) (actual time=30.494..30.791 rows=3789 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1483kB
                           Worker 0:  Sort Method: quicksort  Memory: 1482kB
                           Worker 1:  Sort Method: quicksort  Memory: 1477kB
                           Worker 2:  Sort Method: quicksort  Memory: 1468kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=637.42..27034.43 rows=17734 width=20) (actual time=6.096..26.719 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5834
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..623.68 rows=54975 width=0) (actual time=5.456..5.456 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.783 ms
 Execution Time: 82.930 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83365.01..83365.01 rows=1 width=58) (actual time=2273.248..2283.598 rows=1 loops=1)
   ->  Sort  (cost=83365.01..83365.07 rows=25 width=58) (actual time=2273.247..2283.596 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83326.06..83364.88 rows=25 width=58) (actual time=2272.511..2283.584 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83326.06..83364.01 rows=75 width=58) (actual time=2272.316..2283.561 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82326.02..82355.15 rows=25 width=58) (actual time=2263.339..2264.052 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82326.02..82331.78 rows=2306 width=38) (actual time=2263.154..2263.239 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 199kB
                                 Worker 0:  Sort Method: quicksort  Memory: 197kB
                                 Worker 1:  Sort Method: quicksort  Memory: 190kB
                                 Worker 2:  Sort Method: quicksort  Memory: 196kB
                                 ->  Hash Join  (cost=7806.07..82197.21 rows=2306 width=38) (actual time=52.797..2261.404 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7333.07..81421.05 rows=57745 width=50) (actual time=48.400..2243.329 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7332.64..34877.20 rows=14436 width=38) (actual time=47.941..284.841 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2592.51..29806.24 rows=72182 width=8) (actual time=20.018..230.821 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6548
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2536.57 rows=223764 width=0) (actual time=16.031..16.031 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=27.766..27.768 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.213..25.461 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.092..20.685 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.112..0.114 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.104..0.111 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.047..0.049 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.046..0.047 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.163..0.171 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.841..3.841 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.088..2.405 rows=10000 loops=4)
 Planning Time: 24.011 ms
 Execution Time: 2283.700 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83365.01..83365.01 rows=1 width=58) (actual time=143.386..157.823 rows=1 loops=1)
   ->  Sort  (cost=83365.01..83365.07 rows=25 width=58) (actual time=143.384..157.821 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83326.06..83364.88 rows=25 width=58) (actual time=142.660..157.809 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83326.06..83364.01 rows=75 width=58) (actual time=142.472..157.786 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82326.02..82355.15 rows=25 width=58) (actual time=138.882..139.589 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82326.02..82331.78 rows=2306 width=38) (actual time=138.697..138.783 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 193kB
                                 Worker 0:  Sort Method: quicksort  Memory: 192kB
                                 Worker 1:  Sort Method: quicksort  Memory: 196kB
                                 Worker 2:  Sort Method: quicksort  Memory: 203kB
                                 ->  Hash Join  (cost=7806.07..82197.21 rows=2306 width=38) (actual time=31.110..137.935 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7333.07..81421.05 rows=57745 width=50) (actual time=28.282..127.214 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7332.64..34877.20 rows=14436 width=38) (actual time=28.259..69.353 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2592.51..29806.24 rows=72182 width=8) (actual time=16.435..43.730 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6522
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2536.57 rows=223764 width=0) (actual time=12.800..12.801 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.691..11.694 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.040..9.566 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.005..3.433 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.031 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.030 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.010..0.011 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.003..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.757..2.758 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.365 rows=10000 loops=4)
 Planning Time: 4.270 ms
 Execution Time: 157.915 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108151.90..108151.91 rows=1 width=32) (actual time=1081.290..1088.645 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=108151.90..108151.91 rows=1 width=32) (actual time=1081.288..1088.643 rows=1 loops=1)
         ->  Gather  (cost=108151.47..108151.88 rows=4 width=32) (actual time=1080.869..1088.631 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=107151.47..107151.48 rows=1 width=32) (actual time=1072.780..1072.781 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21244.09..107000.46 rows=30202 width=12) (actual time=143.255..1055.254 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13235
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21213.88 rows=120810 width=0) (actual time=139.036..139.036 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 8.904 ms
 Execution Time: 1089.724 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108151.90..108151.91 rows=1 width=32) (actual time=213.999..218.931 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=108151.90..108151.91 rows=1 width=32) (actual time=213.998..218.928 rows=1 loops=1)
         ->  Gather  (cost=108151.47..108151.88 rows=4 width=32) (actual time=211.357..218.911 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=107151.47..107151.48 rows=1 width=32) (actual time=207.751..207.752 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21244.09..107000.46 rows=30202 width=12) (actual time=119.388..199.311 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13717
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21213.88 rows=120810 width=0) (actual time=111.408..111.408 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.460 ms
 Execution Time: 218.981 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141497.61..141655.99 rows=1 width=116) (actual time=2572.377..2573.880 rows=1 loops=1)
   ->  GroupAggregate  (cost=141497.61..1116153.52 rows=6154 width=116) (actual time=2572.376..2573.878 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141497.61..1115968.90 rows=6154 width=96) (actual time=832.476..2571.521 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32749
               ->  Nested Loop  (cost=141497.19..638448.12 rows=153841 width=76) (actual time=829.192..2076.131 rows=34108 loops=1)
                     ->  Gather Merge  (cost=141496.76..159920.57 rows=153872 width=76) (actual time=828.135..862.397 rows=34108 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140496.70..140592.87 rows=38468 width=76) (actual time=813.999..814.907 rows=7248 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 4657kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5017kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4962kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4666kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4893kB
                                 ->  Hash Join  (cost=381.77..137567.10 rows=38468 width=76) (actual time=4.004..787.007 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.52 rows=463010 width=24) (actual time=0.885..731.093 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.033..3.035 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.138..2.891 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.071..1.540 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.063..0.065 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.057..0.063 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.047..0.049 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.035..0.035 rows=1 loops=34108)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=34108)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 23.026 ms
 Execution Time: 2574.864 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141497.61..141655.99 rows=1 width=116) (actual time=524.702..525.838 rows=1 loops=1)
   ->  GroupAggregate  (cost=141497.61..1116153.52 rows=6154 width=116) (actual time=524.700..525.836 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141497.61..1115968.90 rows=6154 width=96) (actual time=348.073..524.559 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32701
               ->  Nested Loop  (cost=141497.19..638448.12 rows=153841 width=76) (actual time=348.049..445.854 rows=34060 loops=1)
                     ->  Gather Merge  (cost=141496.76..159920.57 rows=153872 width=76) (actual time=348.004..367.501 rows=34060 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140496.70..140592.87 rows=38468 width=76) (actual time=338.342..339.043 rows=7232 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 6525kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3245kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4059kB
                                 Worker 2:  Sort Method: quicksort  Memory: 6575kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5326kB
                                 ->  Hash Join  (cost=381.77..137567.10 rows=38468 width=76) (actual time=2.351..310.204 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.52 rows=463010 width=24) (actual time=0.040..253.064 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.234..2.237 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.033..2.102 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..0.698 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.023..0.025 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.017..0.023 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.004 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34060)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34060)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.910 ms
 Execution Time: 526.149 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42029.25..42414.75 rows=1 width=64) (actual time=4520.154..4524.025 rows=1 loops=1)
   ->  GroupAggregate  (cost=42029.25..969555.37 rows=2406 width=64) (actual time=4520.153..4524.023 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42029.25..969458.29 rows=2448 width=70) (actual time=230.343..4521.569 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14804
               ->  Nested Loop  (cost=42029.25..968566.78 rows=2448 width=20) (actual time=230.304..4517.380 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42028.96..961368.84 rows=2453 width=20) (actual time=230.119..4490.575 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42028.53..351469.30 rows=369678 width=24) (actual time=225.593..3459.911 rows=182883 loops=1)
                                 ->  Gather Merge  (cost=42028.10..52961.86 rows=92419 width=8) (actual time=224.831..260.347 rows=45636 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41028.06..41102.59 rows=29813 width=8) (actual time=216.686..217.897 rows=12448 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1901kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1818kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1829kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1800kB
                                             ->  Parallel Hash Join  (cost=4740.13..38812.41 rows=29813 width=8) (actual time=22.712..209.206 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149064 width=12) (actual time=0.443..156.359 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=22.076..22.080 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.242..20.328 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.104..15.524 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.131..0.133 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.126..0.132 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.057..0.058 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.063..0.064 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.058..0.059 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.064..0.069 rows=4 loops=45636)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=182883)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62910  Misses: 119973  Evictions: 0  Overflows: 0  Memory Usage: 7996kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.007..0.007 rows=0 loops=119973)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.021..0.021 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.018 rows=25 loops=1)
 Planning Time: 24.592 ms
 Execution Time: 4525.068 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42029.25..42414.75 rows=1 width=64) (actual time=628.048..634.366 rows=1 loops=1)
   ->  GroupAggregate  (cost=42029.25..969555.37 rows=2406 width=64) (actual time=628.046..634.364 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42029.25..969458.29 rows=2448 width=70) (actual time=99.668..633.181 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14810
               ->  Nested Loop  (cost=42029.25..968566.78 rows=2448 width=20) (actual time=99.649..630.637 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42028.96..961368.84 rows=2453 width=20) (actual time=99.633..627.215 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42028.53..351469.30 rows=369678 width=24) (actual time=99.402..286.925 rows=183051 loops=1)
                                 ->  Gather Merge  (cost=42028.10..52961.86 rows=92419 width=8) (actual time=99.356..122.378 rows=45683 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41028.06..41102.59 rows=29813 width=8) (actual time=95.914..96.736 rows=12478 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1839kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1833kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1852kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1824kB
                                             ->  Parallel Hash Join  (cost=4740.13..38812.41 rows=29813 width=8) (actual time=11.695..89.578 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=149064 width=12) (actual time=0.010..55.501 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=11.462..11.465 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.042..9.755 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.006..3.481 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.031..0.033 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.026..0.032 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.007 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.016..0.016 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45683)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=183051)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 63004  Misses: 120047  Evictions: 0  Overflows: 0  Memory Usage: 8001kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=120047)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.010 rows=25 loops=1)
 Planning Time: 5.066 ms
 Execution Time: 635.513 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30924.73..31962.44 rows=1 width=90) (actual time=4691.731..4695.041 rows=1 loops=1)
   ->  GroupAggregate  (cost=30924.73..184505.29 rows=148 width=90) (actual time=4691.729..4695.039 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=30924.73..184500.48 rows=148 width=81) (actual time=4690.758..4694.117 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=24525.85..184494.45 rows=148 width=81) (actual time=256.265..4665.999 rows=13629 loops=1)
                     ->  Nested Loop  (cost=24525.42..184028.42 rows=148 width=53) (actual time=255.480..2558.462 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=24524.99..30171.75 rows=48484 width=48) (actual time=254.403..260.366 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=23524.96..23575.47 rows=20202 width=48) (actual time=246.391..246.552 rows=1093 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2437kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2415kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2422kB
                                       ->  Hash Join  (cost=449.99..22080.30 rows=20202 width=48) (actual time=4.333..236.582 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..22016.72 rows=20202 width=26) (actual time=4.194..233.180 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..21515.66 rows=20202 width=18) (actual time=0.265..223.290 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.120..31.527 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.049..0.052 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.912..3.913 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.113..2.637 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.075..0.075 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.066..0.069 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.287..1.260 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.151..0.151 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 26.650 ms
 Execution Time: 4695.143 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30924.73..31962.44 rows=1 width=90) (actual time=128.043..131.758 rows=1 loops=1)
   ->  GroupAggregate  (cost=30924.73..184505.29 rows=148 width=90) (actual time=128.042..131.755 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=30924.73..184500.48 rows=148 width=81) (actual time=127.116..130.884 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 2301kB  Peak Memory: 2301kB
               ->  Nested Loop  (cost=24525.85..184494.45 rows=148 width=81) (actual time=52.023..122.787 rows=13629 loops=1)
                     ->  Nested Loop  (cost=24525.42..184028.42 rows=148 width=53) (actual time=52.001..76.211 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=24524.99..30171.75 rows=48484 width=48) (actual time=51.966..56.454 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=23524.96..23575.47 rows=20202 width=48) (actual time=49.092..49.191 rows=1088 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 2551kB
                                       Worker 0:  Sort Method: quicksort  Memory: 2353kB
                                       Worker 1:  Sort Method: quicksort  Memory: 2369kB
                                       ->  Hash Join  (cost=449.99..22080.30 rows=20202 width=48) (actual time=2.781..40.453 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..22016.72 rows=20202 width=26) (actual time=2.710..37.572 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..21515.66 rows=20202 width=18) (actual time=0.027..30.489 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.012..15.090 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.667..2.668 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..1.453 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.016 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.010 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.261 ms
 Execution Time: 131.846 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100777.96..100778.01 rows=20 width=202) (actual time=2050.534..2055.161 rows=20 loops=1)
   ->  Sort  (cost=100777.96..100918.56 rows=56237 width=202) (actual time=2050.533..2055.158 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98578.55..99281.52 rows=56237 width=202) (actual time=2018.191..2043.391 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6665.45..97875.59 rows=56237 width=182) (actual time=59.667..1903.904 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5665.45..91251.89 rows=18141 width=182) (actual time=50.572..1960.969 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5663.89..91194.63 rows=18141 width=160) (actual time=50.442..1950.273 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=660.64..86143.76 rows=18141 width=16) (actual time=13.722..1892.406 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=660.20..27066.55 rows=18356 width=8) (actual time=13.056..172.396 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4834
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..645.98 rows=56905 width=0) (actual time=9.262..9.262 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.115..0.119 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=36.218..36.218 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.083..15.540 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.060..0.061 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.052..0.055 rows=25 loops=4)
 Planning Time: 16.306 ms
 Execution Time: 2055.860 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=100777.96..100778.01 rows=20 width=202) (actual time=219.451..223.395 rows=20 loops=1)
   ->  Sort  (cost=100777.96..100918.56 rows=56237 width=202) (actual time=219.450..223.392 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=98578.55..99281.52 rows=56237 width=202) (actual time=187.286..212.112 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 26129kB
               ->  Gather  (cost=6665.45..97875.59 rows=56237 width=182) (actual time=42.491..102.145 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5665.45..91251.89 rows=18141 width=182) (actual time=39.015..147.668 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5663.89..91194.63 rows=18141 width=160) (actual time=38.929..140.887 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=660.64..86143.76 rows=18141 width=16) (actual time=10.731..99.681 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=660.20..27066.55 rows=18356 width=8) (actual time=10.693..27.195 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1814
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..645.98 rows=56905 width=0) (actual time=7.362..7.362 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.757..27.758 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.005..8.042 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning Time: 1.821 ms
 Execution Time: 223.758 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.47..15992.47 rows=1 width=36) (actual time=719.224..719.228 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.56..7689.57 rows=1 width=32) (actual time=25.147..25.149 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.56 rows=32000 width=10) (actual time=0.050..17.633 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.288 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.035..0.237 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.89..8329.56 rows=10667 width=36) (actual time=719.223..719.224 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.56..8249.56 rows=10667 width=36) (actual time=708.360..719.076 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.56 rows=32000 width=14) (actual time=1.162..649.416 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.816..4.313 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.241..0.245 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.566..3.967 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.307..0.307 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.048..1.552 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 13.886 ms
 Execution Time: 719.655 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15992.47..15992.47 rows=1 width=36) (actual time=84.072..84.076 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=7689.56..7689.57 rows=1 width=32) (actual time=25.486..25.489 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.56 rows=32000 width=10) (actual time=0.050..17.744 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.044..0.293 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.034..0.240 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.017..0.017 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8302.89..8329.56 rows=10667 width=36) (actual time=84.070..84.072 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7769.56..8249.56 rows=10667 width=36) (actual time=73.246..83.924 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 15889kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.56 rows=32000 width=14) (actual time=0.066..27.702 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.060..0.425 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.049..0.363 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.029..0.030 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.057 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.448 ms
 Execution Time: 84.412 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147775.13..161053.96 rows=1 width=27) (actual time=1770.964..1771.987 rows=1 loops=1)
   ->  GroupAggregate  (cost=147775.13..240726.90 rows=7 width=27) (actual time=1770.963..1771.986 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147775.13..240226.26 rows=28604 width=27) (actual time=782.683..1762.607 rows=15492 loops=1)
               ->  Gather Merge  (cost=147774.71..151200.31 rows=28610 width=15) (actual time=782.061..791.393 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146774.65..146792.53 rows=7152 width=15) (actual time=772.590..772.930 rows=4251 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 490kB
                           Worker 0:  Sort Method: quicksort  Memory: 486kB
                           Worker 1:  Sort Method: quicksort  Memory: 479kB
                           Worker 2:  Sort Method: quicksort  Memory: 470kB
                           Worker 3:  Sort Method: quicksort  Memory: 489kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146316.77 rows=7152 width=15) (actual time=0.394..770.609 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.062..0.062 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 12.200 ms
 Execution Time: 1772.451 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147775.13..161053.96 rows=1 width=27) (actual time=401.424..402.435 rows=1 loops=1)
   ->  GroupAggregate  (cost=147775.13..240726.90 rows=7 width=27) (actual time=401.423..402.433 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147775.13..240226.26 rows=28604 width=27) (actual time=354.780..397.815 rows=15492 loops=1)
               ->  Gather Merge  (cost=147774.71..151200.31 rows=28610 width=15) (actual time=354.724..359.386 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146774.65..146792.53 rows=7152 width=15) (actual time=350.990..351.221 rows=4281 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 544kB
                           Worker 0:  Sort Method: quicksort  Memory: 497kB
                           Worker 1:  Sort Method: quicksort  Memory: 443kB
                           Worker 2:  Sort Method: quicksort  Memory: 496kB
                           Worker 3:  Sort Method: quicksort  Memory: 434kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146316.77 rows=7152 width=15) (actual time=0.815..348.747 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.781 ms
 Execution Time: 402.486 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1450.809..1450.811 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1450.807..1450.809 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1450.780..1450.788 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1411.163..1433.737 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=34.927..1049.615 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.709..618.029 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=33.838..33.839 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.014..16.329 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.107 ms
 Execution Time: 1451.892 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1258.294..1258.298 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1258.293..1258.295 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1258.267..1258.274 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1218.932..1241.429 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=29.423..874.728 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..466.152 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.031..29.032 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.013..12.937 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.663 ms
 Execution Time: 1259.459 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75553.00..75553.01 rows=1 width=32) (actual time=540.814..543.325 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=75553.00..75553.01 rows=1 width=32) (actual time=540.812..543.322 rows=1 loops=1)
         ->  Gather  (cost=75552.54..75552.95 rows=4 width=64) (actual time=536.242..543.298 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=74552.54..74552.55 rows=1 width=64) (actual time=526.496..526.499 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7241.19..74207.12 rows=19738 width=33) (actual time=54.750..509.909 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1267.19..68181.32 rows=19738 width=16) (actual time=20.745..460.981 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8022
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1247.45 rows=78952 width=0) (actual time=13.923..13.923 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.547..33.548 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.080..19.533 rows=40000 loops=5)
 Planning Time: 16.379 ms
 Execution Time: 543.382 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75553.00..75553.01 rows=1 width=32) (actual time=107.670..110.420 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=75553.00..75553.01 rows=1 width=32) (actual time=107.669..110.417 rows=1 loops=1)
         ->  Gather  (cost=75552.54..75552.95 rows=4 width=64) (actual time=107.647..110.399 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=74552.54..74552.55 rows=1 width=64) (actual time=100.108..100.110 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7241.19..74207.12 rows=19738 width=33) (actual time=39.518..90.945 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1267.19..68181.32 rows=19738 width=16) (actual time=14.293..58.408 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=9072
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1247.45 rows=78952 width=0) (actual time=8.583..8.583 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=24.121..24.121 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..6.930 rows=40000 loops=5)
 Planning Time: 0.979 ms
 Execution Time: 110.459 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242204.33..242311.81 rows=1 width=103) (actual time=1279.612..1287.205 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122558.87..122558.88 rows=1 width=32) (actual time=247.474..247.475 rows=1 loops=1)
           ->  HashAggregate  (cost=122308.42..122433.65 rows=10018 width=36) (actual time=244.035..246.863 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3809.42..119932.82 rows=237560 width=16) (actual time=28.703..122.376 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3750.03 rows=237560 width=0) (actual time=18.529..18.530 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119645.45..125019.11 rows=50 width=103) (actual time=1279.610..1287.201 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119645.17..124893.98 rows=50 width=36) (actual time=1279.014..1286.603 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119645.17..124443.17 rows=40072 width=36) (actual time=1005.122..1020.434 rows=41768 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118645.11..118670.15 rows=10018 width=36) (actual time=992.536..993.516 rows=8851 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1777kB
                           Worker 0:  Sort Method: quicksort  Memory: 1776kB
                           Worker 1:  Sort Method: quicksort  Memory: 1773kB
                           Worker 2:  Sort Method: quicksort  Memory: 1772kB
                           Worker 3:  Sort Method: quicksort  Memory: 1777kB
                           ->  Partial HashAggregate  (cost=117854.17..117979.40 rows=10018 width=36) (actual time=983.925..989.989 rows=9888 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3809.42..117260.27 rows=59390 width=16) (actual time=41.176..928.954 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13723
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3750.03 rows=237560 width=0) (actual time=37.861..37.862 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.591..0.591 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 13.233 ms
 Execution Time: 1288.007 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242204.33..242311.81 rows=1 width=103) (actual time=423.504..433.347 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122558.87..122558.88 rows=1 width=32) (actual time=230.697..230.698 rows=1 loops=1)
           ->  HashAggregate  (cost=122308.42..122433.65 rows=10018 width=36) (actual time=227.210..230.095 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3809.42..119932.82 rows=237560 width=16) (actual time=28.462..107.626 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3750.03 rows=237560 width=0) (actual time=18.304..18.305 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119645.45..125019.11 rows=50 width=103) (actual time=423.502..433.344 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119645.17..124893.98 rows=50 width=36) (actual time=423.482..433.322 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119645.17..124443.17 rows=40072 width=36) (actual time=166.766..184.213 rows=41714 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118645.11..118670.15 rows=10018 width=36) (actual time=158.523..159.455 rows=8845 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1775kB
                           Worker 0:  Sort Method: quicksort  Memory: 1756kB
                           Worker 1:  Sort Method: quicksort  Memory: 1782kB
                           Worker 2:  Sort Method: quicksort  Memory: 1784kB
                           Worker 3:  Sort Method: quicksort  Memory: 1768kB
                           ->  Partial HashAggregate  (cost=117854.17..117979.40 rows=10018 width=36) (actual time=150.141..156.189 rows=9875 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3809.42..117260.27 rows=59390 width=16) (actual time=33.595..112.223 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13303
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3750.03 rows=237560 width=0) (actual time=27.117..27.118 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.016..0.017 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.016 ms
 Execution Time: 433.472 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26859.02..26859.03 rows=1 width=44) (actual time=281.557..282.242 rows=1 loops=1)
   ->  Sort  (cost=26859.02..26899.27 rows=16100 width=44) (actual time=281.556..282.241 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18791.15..26778.52 rows=16100 width=44) (actual time=189.991..277.982 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18791.15..26014.26 rows=60326 width=40) (actual time=189.965..239.086 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17791.09..17828.80 rows=15082 width=40) (actual time=164.562..166.349 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2473kB
                           Worker 0:  Sort Method: quicksort  Memory: 2494kB
                           Worker 1:  Sort Method: quicksort  Memory: 2593kB
                           Worker 2:  Sort Method: quicksort  Memory: 2755kB
                           Worker 3:  Sort Method: quicksort  Memory: 2742kB
                           ->  Parallel Hash Join  (cost=6687.86..16744.36 rows=15082 width=40) (actual time=35.422..101.237 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.869..54.536 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.529..6.180 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12568 width=40) (actual time=28.368..28.369 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12568 width=40) (actual time=0.149..25.948 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 16.094 ms
 Execution Time: 282.328 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26859.02..26859.03 rows=1 width=44) (actual time=245.906..246.311 rows=1 loops=1)
   ->  Sort  (cost=26859.02..26899.27 rows=16100 width=44) (actual time=245.905..246.310 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18791.15..26778.52 rows=16100 width=44) (actual time=155.290..242.038 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18791.15..26014.26 rows=60326 width=40) (actual time=155.262..203.615 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17791.09..17828.80 rows=15082 width=40) (actual time=136.438..138.171 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2747kB
                           Worker 0:  Sort Method: quicksort  Memory: 2254kB
                           Worker 1:  Sort Method: quicksort  Memory: 2743kB
                           Worker 2:  Sort Method: quicksort  Memory: 2575kB
                           Worker 3:  Sort Method: quicksort  Memory: 2736kB
                           ->  Parallel Hash Join  (cost=6687.86..16744.36 rows=15082 width=40) (actual time=18.664..74.974 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.722..39.903 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.626 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12568 width=40) (actual time=15.779..15.780 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12568 width=40) (actual time=0.019..12.269 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.800 ms
 Execution Time: 246.368 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=339212.77..339212.78 rows=1 width=32) (actual time=2455.157..2463.912 rows=1 loops=1)
   ->  Aggregate  (cost=339212.77..339212.78 rows=1 width=32) (actual time=2455.156..2463.909 rows=1 loops=1)
         ->  Merge Join  (cost=223111.16..339207.62 rows=2061 width=8) (actual time=1757.043..2463.810 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=222110.29..323498.68 rows=193512 width=36) (actual time=1749.474..2434.228 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=222110.29..314790.64 rows=774048 width=36) (actual time=1749.454..1944.784 rows=993438 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=221110.23..221594.01 rows=193512 width=36) (actual time=1665.102..1686.537 rows=199181 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: quicksort  Memory: 32650kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32763kB
                                 Worker 1:  Sort Method: quicksort  Memory: 32684kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32745kB
                                 Worker 3:  Sort Method: external merge  Disk: 13496kB
                                 ->  Partial HashAggregate  (cost=187047.60..204117.88 rows=193512 width=36) (actual time=1089.831..1600.887 rows=199409 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 23680kB
                                       Worker 0:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 28152kB
                                       Worker 1:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 23928kB
                                       Worker 2:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27800kB
                                       Worker 3:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 31496kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.01 rows=1500301 width=9) (actual time=0.248..426.415 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13196.75 rows=6391 width=21) (actual time=4.991..14.586 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13180.78 rows=6391 width=21) (actual time=4.986..13.842 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11443.07 rows=2663 width=21) (actual time=1.165..71.301 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=89 width=4) (actual time=0.750..27.851 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.63 rows=31 width=17) (actual time=0.382..0.617 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 12.373 ms
 Execution Time: 2468.175 ms
(38 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=339212.77..339212.78 rows=1 width=32) (actual time=2317.099..2323.881 rows=1 loops=1)
   ->  Aggregate  (cost=339212.77..339212.78 rows=1 width=32) (actual time=2317.098..2323.880 rows=1 loops=1)
         ->  Merge Join  (cost=223111.16..339207.62 rows=2061 width=8) (actual time=1632.424..2323.794 rows=592 loops=1)
               Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
               Join Filter: (lineitem.l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
               Rows Removed by Join Filter: 5641
               ->  Finalize GroupAggregate  (cost=222110.29..323498.68 rows=193512 width=36) (actual time=1626.610..2301.981 rows=199276 loops=1)
                     Group Key: lineitem_1.l_partkey
                     ->  Gather Merge  (cost=222110.29..314790.64 rows=774048 width=36) (actual time=1626.593..1820.143 rows=993154 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=221110.23..221594.01 rows=193512 width=36) (actual time=1442.337..1464.957 rows=199166 loops=5)
                                 Sort Key: lineitem_1.l_partkey
                                 Sort Method: external merge  Disk: 13496kB
                                 Worker 0:  Sort Method: quicksort  Memory: 32767kB
                                 Worker 1:  Sort Method: quicksort  Memory: 32735kB
                                 Worker 2:  Sort Method: quicksort  Memory: 32582kB
                                 Worker 3:  Sort Method: quicksort  Memory: 32722kB
                                 ->  Partial HashAggregate  (cost=187047.60..204117.88 rows=193512 width=36) (actual time=879.356..1382.563 rows=199353 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 33841kB  Disk Usage: 31640kB
                                       Worker 0:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 28328kB
                                       Worker 1:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 27608kB
                                       Worker 2:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 20168kB
                                       Worker 3:  Batches: 5  Memory Usage: 33841kB  Disk Usage: 26376kB
                                       ->  Parallel Seq Scan on lineitem lineitem_1  (cost=0.00..127563.01 rows=1500301 width=9) (actual time=0.050..164.799 rows=1200243 loops=5)
               ->  Materialize  (cost=1000.88..13196.75 rows=6391 width=21) (actual time=3.517..5.906 rows=6233 loops=1)
                     ->  Gather Merge  (cost=1000.88..13180.78 rows=6391 width=21) (actual time=3.513..5.208 rows=6233 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop  (cost=0.85..11443.07 rows=2663 width=21) (actual time=0.147..17.052 rows=2078 loops=3)
                                 ->  Parallel Index Scan using part_pkey on part  (cost=0.42..7176.42 rows=89 width=4) (actual time=0.130..14.366 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..47.63 rows=31 width=17) (actual time=0.005..0.034 rows=30 loops=208)
                                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.878 ms
 Execution Time: 2330.374 ms
(38 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803605.34..803605.59 rows=100 width=71) (actual time=4663.295..4663.300 rows=9 loops=1)
   ->  Sort  (cost=803605.34..808606.34 rows=2000400 width=71) (actual time=4663.293..4663.298 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=666983.21..727151.49 rows=2000400 width=71) (actual time=4662.912..4663.264 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338895.54..559227.29 rows=2000400 width=44) (actual time=3891.747..4662.843 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331923.54..547004.09 rows=2000400 width=25) (actual time=3821.254..4592.330 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172572.04 rows=6001204 width=9) (actual time=0.606..331.605 rows=6001215 loops=1)
                           ->  Hash  (cost=325672.29..325672.29 rows=500100 width=24) (actual time=3614.442..3614.444 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280603.78..325672.29 rows=500100 width=24) (actual time=3256.284..3614.415 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.584..276.517 rows=1500000 loops=1)
                                       ->  Hash  (cost=274352.53..274352.53 rows=500100 width=4) (actual time=3156.085..3156.086 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269351.53 rows=500100 width=4) (actual time=674.659..3156.058 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216840.99 rows=6001204 width=9) (actual time=0.017..1675.160 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=70.197..70.198 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.321..42.235 rows=150000 loops=1)
 Planning Time: 15.606 ms
 Execution Time: 4664.000 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=803605.34..803605.59 rows=100 width=71) (actual time=3516.399..3516.405 rows=9 loops=1)
   ->  Sort  (cost=803605.34..808606.34 rows=2000400 width=71) (actual time=3516.397..3516.402 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=666983.21..727151.49 rows=2000400 width=71) (actual time=3516.016..3516.368 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=338895.54..559227.29 rows=2000400 width=44) (actual time=2743.715..3515.948 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Hash Join  (cost=331923.54..547004.09 rows=2000400 width=25) (actual time=2697.029..3469.242 rows=63 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..172572.04 rows=6001204 width=9) (actual time=0.018..331.569 rows=6001215 loops=1)
                           ->  Hash  (cost=325672.29..325672.29 rows=500100 width=24) (actual time=2490.811..2490.813 rows=9 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                 ->  Hash Join  (cost=280603.78..325672.29 rows=500100 width=24) (actual time=2268.298..2490.790 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.005..83.131 rows=1500000 loops=1)
                                       ->  Hash  (cost=274352.53..274352.53 rows=500100 width=4) (actual time=2208.171..2208.172 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269351.53 rows=500100 width=4) (actual time=466.879..2208.152 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216840.99 rows=6001204 width=9) (actual time=0.044..875.303 rows=6001215 loops=1)
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=46.364..46.365 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..19.428 rows=150000 loops=1)
 Planning Time: 1.614 ms
 Execution Time: 3516.892 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18257.53..18257.54 rows=1 width=32) (actual time=858.591..861.523 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18257.53..18257.54 rows=1 width=32) (actual time=858.590..861.521 rows=1 loops=1)
         ->  Gather  (cost=18257.31..18257.52 rows=2 width=32) (actual time=857.530..861.508 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17257.31..17257.32 rows=1 width=32) (actual time=851.279..851.282 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17256.95 rows=47 width=12) (actual time=18.398..851.164 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.576..30.079 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.07 rows=1 width=21) (actual time=4.340..4.857 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 15.068 ms
 Execution Time: 862.151 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18257.53..18257.54 rows=1 width=32) (actual time=28.472..32.343 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18257.53..18257.54 rows=1 width=32) (actual time=28.470..32.341 rows=1 loops=1)
         ->  Gather  (cost=18257.31..18257.52 rows=2 width=32) (actual time=28.394..32.332 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17257.31..17257.32 rows=1 width=32) (actual time=26.072..26.073 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17256.95 rows=47 width=12) (actual time=0.415..26.033 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=200 width=30) (actual time=0.082..16.838 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..48.07 rows=1 width=21) (actual time=0.048..0.054 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 0.958 ms
 Execution Time: 32.391 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=223533.63..223533.64 rows=1 width=51) (actual time=3924.257..3924.261 rows=1 loops=1)
   ->  Sort  (cost=223533.63..223533.64 rows=1 width=51) (actual time=3924.256..3924.259 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186624.52..223533.62 rows=1 width=51) (actual time=3748.835..3923.821 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.679..3.940 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.315..0.318 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.357..2.834 rows=10000 loops=1)
               ->  Materialize  (cost=186624.52..223078.31 rows=1 width=8) (actual time=5.875..8.703 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186624.52..223078.31 rows=1 width=8) (actual time=2573.341..3741.663 rows=5898 loops=1)
                           ->  Hash Join  (cost=186624.09..209066.41 rows=9832 width=44) (actual time=2572.762..3209.957 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179974.59..196271.71 rows=486747 width=40) (actual time=2522.469..3111.026 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14770.54..141148.25 rows=921181 width=13) (actual time=130.483..2026.129 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14540.24 rows=921181 width=0) (actual time=111.567..111.567 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=4040 width=4) (actual time=50.269..50.270 rows=2187 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4) (actual time=0.446..49.585 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.089..0.089 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 19.557 ms
 Execution Time: 3929.347 ms
(37 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=223533.63..223533.64 rows=1 width=51) (actual time=1483.279..1483.283 rows=1 loops=1)
   ->  Sort  (cost=223533.63..223533.64 rows=1 width=51) (actual time=1483.278..1483.281 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=186624.52..223533.62 rows=1 width=51) (actual time=1312.844..1483.097 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900814
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.014..1.752 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.622 rows=10000 loops=1)
               ->  Materialize  (cost=186624.52..223078.31 rows=1 width=8) (actual time=1.637..3.144 rows=4340 loops=438)
                     ->  Nested Loop  (cost=186624.52..223078.31 rows=1 width=8) (actual time=717.086..1309.363 rows=5898 loops=1)
                           ->  Hash Join  (cost=186624.09..209066.41 rows=9832 width=44) (actual time=717.064..1286.561 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179974.59..196271.71 rows=486747 width=40) (actual time=695.328..1225.739 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 33873kB  Disk Usage: 32032kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14770.54..141148.25 rows=921181 width=13) (actual time=91.750..307.635 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14540.24 rows=921181 width=0) (actual time=73.401..73.401 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6599.00..6599.00 rows=4040 width=4) (actual time=21.500..21.500 rows=2187 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 109kB
                                       ->  Seq Scan on part  (cost=0.00..6599.00 rows=4040 width=4) (actual time=0.028..21.132 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((lineitem.l_suppkey = ps_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 2.070 ms
 Execution Time: 1487.815 ms
(37 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194073.68..194073.69 rows=1 width=34) (actual time=1352.093..1352.201 rows=100 loops=1)
   ->  Sort  (cost=194073.68..194073.69 rows=1 width=34) (actual time=1352.084..1352.186 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194073.65..194073.67 rows=1 width=34) (actual time=1351.007..1351.753 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194073.65..194073.66 rows=1 width=26) (actual time=1350.999..1351.258 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194073.64 rows=1 width=26) (actual time=13.626..1337.229 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194070.25 rows=1 width=38) (actual time=12.928..1255.979 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194066.94 rows=1 width=34) (actual time=10.042..13.527 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193066.84 rows=1 width=34) (actual time=4.025..571.940 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133622.89 rows=19968 width=34) (actual time=2.654..447.164 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.76 rows=500100 width=8) (actual time=0.733..379.756 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.559..1.561 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.270..1.464 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.061..0.062 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.205..1.341 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.120..0.120 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.086..0.086 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 18.458 ms
 Execution Time: 1352.915 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194073.68..194073.69 rows=1 width=34) (actual time=487.789..487.898 rows=100 loops=1)
   ->  Sort  (cost=194073.68..194073.69 rows=1 width=34) (actual time=487.788..487.890 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=194073.65..194073.67 rows=1 width=34) (actual time=486.747..487.485 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194073.65..194073.66 rows=1 width=26) (actual time=486.736..486.994 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194073.64 rows=1 width=26) (actual time=1.898..473.503 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194070.25 rows=1 width=38) (actual time=1.732..449.017 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194066.94 rows=1 width=34) (actual time=1.028..381.311 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193066.84 rows=1 width=34) (actual time=2.061..449.209 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133622.89 rows=19968 width=34) (actual time=0.746..345.373 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131313.76 rows=500100 width=8) (actual time=0.031..261.573 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.437..0.438 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.065..0.373 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.015..0.017 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.047..0.308 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.026..0.026 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.958 ms
 Execution Time: 487.994 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.22 rows=1 width=72) (actual time=161.696..163.390 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=47.634..47.718 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=47.514..47.707 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=39.940..39.940 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.121..38.655 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7462.81 rows=719 width=72) (actual time=161.695..163.303 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7444.83 rows=719 width=38) (actual time=72.789..162.761 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=71.926..75.001 rows=2737 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.947..22.099 rows=1596 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 736kB
                           Worker 0:  Sort Method: quicksort  Memory: 661kB
                           Worker 1:  Sort Method: quicksort  Memory: 671kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.019..20.029 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.031..0.031 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.049 ms
 Execution Time: 164.080 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.22 rows=1 width=72) (actual time=58.706..60.174 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.383..28.456 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=28.259..28.445 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=26.153..26.153 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1987 width=6) (actual time=0.017..25.001 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7462.81 rows=719 width=72) (actual time=58.705..60.100 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7444.83 rows=719 width=38) (actual time=52.674..59.878 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=52.621..54.726 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.598..21.672 rows=1516 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 763kB
                           Worker 0:  Sort Method: quicksort  Memory: 646kB
                           Worker 1:  Sort Method: quicksort  Memory: 658kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..19.668 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.746 ms
 Execution Time: 60.232 ms
(30 rows)

