query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184216.37..184217.01 rows=1 width=236) (actual time=1797.671..1800.252 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184216.37..184220.19 rows=6 width=236) (actual time=1797.670..1800.250 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184216.37..184219.25 rows=24 width=236) (actual time=1797.649..1800.230 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183216.31..183216.33 rows=6 width=236) (actual time=1788.302..1788.303 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183216.10..183216.24 rows=6 width=236) (actual time=1788.265..1788.270 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.76 rows=1482867 width=25) (actual time=0.128..446.936 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 14.402 ms
 Execution Time: 1801.412 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184216.37..184217.01 rows=1 width=236) (actual time=1635.139..1635.478 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184216.37..184220.19 rows=6 width=236) (actual time=1635.138..1635.476 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184216.37..184219.25 rows=24 width=236) (actual time=1635.108..1635.454 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183216.31..183216.33 rows=6 width=236) (actual time=1630.505..1630.507 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183216.10..183216.24 rows=6 width=236) (actual time=1630.475..1630.481 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.76 rows=1482867 width=25) (actual time=0.033..243.753 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.600 ms
 Execution Time: 1635.763 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=45050.11..45050.11 rows=1 width=192) (actual time=385.587..385.671 rows=0 loops=1)
   ->  Sort  (cost=45050.11..45050.11 rows=1 width=192) (actual time=385.586..385.669 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=33932.43..45050.10 rows=1 width=192) (actual time=385.561..385.644 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6410.80 rows=618 width=30) (actual time=1.693..2.021 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=258 width=30) (actual time=0.509..33.317 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30538.18..30538.18 rows=159617 width=172) (actual time=325.905..325.909 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30538.18 rows=159617 width=172) (actual time=6.423..268.562 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.465..154.069 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=5.948..5.950 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.712..5.485 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.281..3.912 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.426..0.428 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.420..0.426 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.243..0.244 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.170..0.170 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.165..0.166 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.071..0.071 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.064..0.069 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.054..0.066 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.052..0.061 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.049..0.050 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.271 ms
 Execution Time: 385.841 ms
(50 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=45050.11..45050.11 rows=1 width=192) (actual time=240.775..240.863 rows=0 loops=1)
   ->  Sort  (cost=45050.11..45050.11 rows=1 width=192) (actual time=240.774..240.861 rows=0 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=33932.43..45050.10 rows=1 width=192) (actual time=240.750..240.837 rows=0 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6410.80 rows=618 width=30) (actual time=0.278..0.486 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=258 width=30) (actual time=0.036..13.157 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30538.18..30538.18 rows=159617 width=172) (actual time=225.683..225.686 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30538.18 rows=159617 width=172) (actual time=2.695..171.062 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.020..52.070 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.670..2.673 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.039..2.195 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.003..0.737 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.025..0.027 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.019..0.025 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.008 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.012..0.016 rows=1 loops=799)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.006..0.015 rows=4 loops=799)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.005..0.010 rows=4 loops=799)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.003..0.004 rows=4 loops=799)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.932 ms
 Execution Time: 241.008 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233483.39..233483.41 rows=10 width=44) (actual time=1138.127..1139.573 rows=10 loops=1)
   ->  Sort  (cost=233483.39..234275.25 rows=316747 width=44) (actual time=1138.126..1139.570 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180002.47..226638.60 rows=316747 width=44) (actual time=1116.234..1137.396 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180002.47..217928.06 rows=316747 width=24) (actual time=1116.220..1121.924 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179002.41..179200.38 rows=79187 width=24) (actual time=1105.166..1105.432 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 451kB
                           Worker 0:  Sort Method: quicksort  Memory: 476kB
                           Worker 1:  Sort Method: quicksort  Memory: 469kB
                           Worker 2:  Sort Method: quicksort  Memory: 503kB
                           Worker 3:  Sort Method: quicksort  Memory: 435kB
                           ->  Parallel Hash Join  (cost=37907.98..172559.37 rows=79187 width=24) (actual time=214.235..1103.310 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.76 rows=821384 width=16) (actual time=0.564..822.588 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37324.69..37324.69 rows=46663 width=12) (actual time=212.385..212.387 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4535.07..37324.69 rows=46663 width=12) (actual time=22.102..203.883 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232461 width=16) (actual time=0.620..154.050 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12546 width=4) (actual time=21.388..21.389 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12546 width=4) (actual time=0.181..19.235 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 18.912 ms
 Execution Time: 1140.031 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233483.39..233483.41 rows=10 width=44) (actual time=421.139..422.514 rows=10 loops=1)
   ->  Sort  (cost=233483.39..234275.25 rows=316747 width=44) (actual time=421.138..422.511 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180002.47..226638.60 rows=316747 width=44) (actual time=399.217..420.301 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180002.47..217928.06 rows=316747 width=24) (actual time=399.204..404.857 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179002.41..179200.38 rows=79187 width=24) (actual time=393.848..394.108 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 475kB
                           Worker 0:  Sort Method: quicksort  Memory: 411kB
                           Worker 1:  Sort Method: quicksort  Memory: 457kB
                           Worker 2:  Sort Method: quicksort  Memory: 511kB
                           Worker 3:  Sort Method: quicksort  Memory: 480kB
                           ->  Parallel Hash Join  (cost=37907.98..172559.37 rows=79187 width=24) (actual time=90.599..392.375 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131315.76 rows=821384 width=16) (actual time=0.056..220.089 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37324.69..37324.69 rows=46663 width=12) (actual time=89.485..89.488 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4535.07..37324.69 rows=46663 width=12) (actual time=8.360..79.965 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=232461 width=16) (actual time=0.015..48.279 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12546 width=4) (actual time=7.656..7.657 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12546 width=4) (actual time=0.012..5.645 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.317 ms
 Execution Time: 422.577 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29371.95..62878.63 rows=1 width=24) (actual time=3072.345..3077.635 rows=1 loops=1)
   ->  GroupAggregate  (cost=29371.95..196905.32 rows=5 width=24) (actual time=3072.344..3077.632 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29371.95..196620.13 rows=57027 width=16) (actual time=428.811..3068.827 rows=10479 loops=1)
               ->  Gather Merge  (cost=29371.52..36118.18 rows=57027 width=20) (actual time=428.036..444.574 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28371.48..28417.47 rows=18396 width=20) (actual time=420.191..420.592 rows=3760 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 918kB
                           Worker 0:  Sort Method: quicksort  Memory: 924kB
                           Worker 1:  Sort Method: quicksort  Memory: 935kB
                           Worker 2:  Sort Method: quicksort  Memory: 948kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=661.45..27068.39 rows=18396 width=20) (actual time=5.626..414.783 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5666
                                 Worker 0:  Heap Blocks: exact=5747
                                 Worker 1:  Heap Blocks: exact=5849
                                 Worker 2:  Heap Blocks: exact=5924
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..647.20 rows=57027 width=0) (actual time=7.891..7.892 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.229..0.229 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 15.021 ms
 Execution Time: 3078.368 ms
(27 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29371.95..62878.63 rows=1 width=24) (actual time=78.209..83.820 rows=1 loops=1)
   ->  GroupAggregate  (cost=29371.95..196905.32 rows=5 width=24) (actual time=78.207..83.818 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29371.95..196620.13 rows=57027 width=16) (actual time=33.543..82.412 rows=10479 loops=1)
               ->  Gather Merge  (cost=29371.52..36118.18 rows=57027 width=20) (actual time=33.506..42.126 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28371.48..28417.47 rows=18396 width=20) (actual time=30.432..30.691 rows=3810 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 937kB
                           Worker 0:  Sort Method: quicksort  Memory: 932kB
                           Worker 1:  Sort Method: quicksort  Memory: 925kB
                           Worker 2:  Sort Method: quicksort  Memory: 931kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=661.45..27068.39 rows=18396 width=20) (actual time=5.977..26.877 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5816
                                 Worker 0:  Heap Blocks: exact=5822
                                 Worker 1:  Heap Blocks: exact=5777
                                 Worker 2:  Heap Blocks: exact=5771
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..647.20 rows=57027 width=0) (actual time=5.300..5.301 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.826 ms
 Execution Time: 83.875 ms
(27 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84113.29..84113.29 rows=1 width=58) (actual time=2279.003..2289.180 rows=1 loops=1)
   ->  Sort  (cost=84113.29..84113.35 rows=25 width=58) (actual time=2279.002..2289.178 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84073.60..84113.17 rows=25 width=58) (actual time=2278.501..2289.167 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84073.60..84112.27 rows=78 width=58) (actual time=2278.337..2289.139 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83073.56..83103.06 rows=25 width=58) (actual time=2267.023..2267.635 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83073.56..83079.40 rows=2335 width=38) (actual time=2266.136..2266.222 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 151kB
                                 Worker 0:  Sort Method: quicksort  Memory: 152kB
                                 Worker 1:  Sort Method: quicksort  Memory: 151kB
                                 Worker 2:  Sort Method: quicksort  Memory: 152kB
                                 ->  Hash Join  (cost=7844.18..82942.93 rows=2335 width=38) (actual time=48.100..2264.452 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7371.18..82162.32 rows=58592 width=50) (actual time=43.625..2246.540 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7370.75..34936.03 rows=14648 width=38) (actual time=43.177..255.694 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2630.62..29860.21 rows=73240 width=8) (actual time=20.138..206.308 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6488
                                                         Worker 0:  Heap Blocks: exact=6532
                                                         Worker 1:  Heap Blocks: exact=6449
                                                         Worker 2:  Heap Blocks: exact=6658
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2573.86 rows=227043 width=0) (actual time=15.997..15.997 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=22.865..22.867 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2432kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.267..20.460 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.136..15.971 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.126..0.128 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.117..0.124 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.052..0.054 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.060..0.061 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.057..0.058 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.166..0.174 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.973..3.973 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.086..2.222 rows=10000 loops=4)
 Planning Time: 27.064 ms
 Execution Time: 2289.269 ms
(52 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84113.29..84113.29 rows=1 width=58) (actual time=146.974..160.835 rows=1 loops=1)
   ->  Sort  (cost=84113.29..84113.35 rows=25 width=58) (actual time=146.973..160.833 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=84073.60..84113.17 rows=25 width=58) (actual time=146.505..160.822 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=84073.60..84112.27 rows=78 width=58) (actual time=146.314..160.798 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=83073.56..83103.06 rows=25 width=58) (actual time=142.272..142.877 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=83073.56..83079.40 rows=2335 width=38) (actual time=142.109..142.192 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 150kB
                                 Worker 0:  Sort Method: quicksort  Memory: 153kB
                                 Worker 1:  Sort Method: quicksort  Memory: 151kB
                                 Worker 2:  Sort Method: quicksort  Memory: 153kB
                                 ->  Hash Join  (cost=7844.18..82942.93 rows=2335 width=38) (actual time=30.908..141.318 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7371.18..82162.32 rows=58592 width=50) (actual time=27.672..129.754 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7370.75..34936.03 rows=14648 width=38) (actual time=27.647..68.410 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2630.62..29860.21 rows=73240 width=8) (actual time=16.460..43.159 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6465
                                                         Worker 0:  Heap Blocks: exact=6582
                                                         Worker 1:  Heap Blocks: exact=6543
                                                         Worker 2:  Heap Blocks: exact=6537
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2573.86 rows=227043 width=0) (actual time=12.697..12.697 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.043..11.046 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.048..9.056 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.633 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.037..0.039 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.032..0.037 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.013..0.015 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.139..3.139 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..1.495 rows=10000 loops=4)
 Planning Time: 4.102 ms
 Execution Time: 160.919 ms
(52 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107677.14..107677.15 rows=1 width=32) (actual time=1102.062..1108.865 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107677.14..107677.15 rows=1 width=32) (actual time=1102.060..1108.863 rows=1 loops=1)
         ->  Gather  (cost=107676.70..107677.11 rows=4 width=32) (actual time=1101.461..1108.851 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106676.70..106676.71 rows=1 width=32) (actual time=1092.183..1092.183 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20891.20..106526.09 rows=30122 width=12) (actual time=133.028..1076.123 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13036
                           Worker 0:  Heap Blocks: exact=13030
                           Worker 1:  Heap Blocks: exact=13346
                           Worker 2:  Heap Blocks: exact=13580
                           Worker 3:  Heap Blocks: exact=13151
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20861.08 rows=120487 width=0) (actual time=128.473..128.473 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 10.943 ms
 Execution Time: 1110.106 ms
(17 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=107677.14..107677.15 rows=1 width=32) (actual time=197.431..200.319 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=107677.14..107677.15 rows=1 width=32) (actual time=197.430..200.317 rows=1 loops=1)
         ->  Gather  (cost=107676.70..107677.11 rows=4 width=32) (actual time=190.012..200.298 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=106676.70..106676.71 rows=1 width=32) (actual time=187.119..187.120 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=20891.20..106526.09 rows=30122 width=12) (actual time=104.682..180.070 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12740
                           Worker 0:  Heap Blocks: exact=9839
                           Worker 1:  Heap Blocks: exact=11603
                           Worker 2:  Heap Blocks: exact=19478
                           Worker 3:  Heap Blocks: exact=12483
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..20861.08 rows=120487 width=0) (actual time=96.750..96.750 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.462 ms
 Execution Time: 200.593 ms
(17 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141435.80..141594.21 rows=1 width=116) (actual time=3318.434..3321.934 rows=1 loops=1)
   ->  GroupAggregate  (cost=141435.80..1103607.09 rows=6074 width=116) (actual time=3318.433..3321.932 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141435.80..1103424.87 rows=6074 width=96) (actual time=845.070..3318.646 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32737
               ->  Nested Loop  (cost=141435.38..632046.90 rows=151862 width=76) (actual time=842.491..2729.831 rows=34096 loops=1)
                     ->  Gather Merge  (cost=141434.95..159623.72 rows=151909 width=76) (actual time=841.416..883.078 rows=34096 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140434.89..140529.84 rows=37977 width=76) (actual time=825.003..825.878 rows=7242 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3573kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3710kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3746kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3773kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3738kB
                                 ->  Hash Join  (cost=381.77..137546.21 rows=37977 width=76) (actual time=4.194..800.289 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.91 rows=458106 width=24) (actual time=1.265..752.128 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.906..2.909 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.246..2.780 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.103..1.505 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.138..0.140 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.130..0.135 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.070..0.072 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.028..0.029 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.053..0.053 rows=1 loops=34096)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=34096)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.848 ms
 Execution Time: 3322.392 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141435.80..141594.21 rows=1 width=116) (actual time=504.808..506.226 rows=1 loops=1)
   ->  GroupAggregate  (cost=141435.80..1103607.09 rows=6074 width=116) (actual time=504.807..506.224 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141435.80..1103424.87 rows=6074 width=96) (actual time=320.396..505.192 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32684
               ->  Nested Loop  (cost=141435.38..632046.90 rows=151862 width=76) (actual time=320.166..423.243 rows=34043 loops=1)
                     ->  Gather Merge  (cost=141434.95..159623.72 rows=151909 width=76) (actual time=320.105..338.666 rows=34043 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140434.89..140529.84 rows=37977 width=76) (actual time=311.214..311.828 rows=7259 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3172kB
                                 Worker 0:  Sort Method: quicksort  Memory: 2998kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3972kB
                                 Worker 2:  Sort Method: quicksort  Memory: 4066kB
                                 Worker 3:  Sort Method: quicksort  Memory: 5099kB
                                 ->  Hash Join  (cost=381.77..137546.21 rows=37977 width=76) (actual time=2.130..283.108 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135066.91 rows=458106 width=24) (actual time=0.051..233.943 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.059..2.062 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.090..1.930 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.697 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.079..0.081 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.071..0.076 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.014..0.016 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.026..0.028 rows=2 loops=10)
                                                                     Storage: Memory  Maximum Storage: 17kB
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34043)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34043)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.750 ms
 Execution Time: 506.307 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42022.04..42412.52 rows=1 width=64) (actual time=4737.774..4743.213 rows=1 loops=1)
   ->  GroupAggregate  (cost=42022.04..981529.66 rows=2406 width=64) (actual time=4737.773..4743.211 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42022.04..981432.94 rows=2430 width=70) (actual time=276.628..4740.759 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14811
               ->  Nested Loop  (cost=42022.04..980547.88 rows=2430 width=20) (actual time=276.581..4736.356 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42021.75..973388.10 rows=2440 width=20) (actual time=276.379..4686.625 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42021.32..350749.58 rows=368823 width=24) (actual time=257.914..3581.186 rows=182987 loops=1)
                                 ->  Gather Merge  (cost=42020.89..52929.45 rows=92206 width=8) (actual time=257.311..293.841 rows=45668 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41020.85..41095.21 rows=29744 width=8) (actual time=248.027..249.121 rows=12426 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1493kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1463kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1479kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1489kB
                                             ->  Parallel Hash Join  (cost=4740.13..38810.82 rows=29744 width=8) (actual time=26.661..242.114 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148719 width=12) (actual time=0.524..188.767 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=26.021..26.024 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.394..24.230 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.151..19.577 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.239..0.241 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.134..0.142 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.057..0.059 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.072..0.073 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.069..0.070 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.066..0.071 rows=4 loops=45668)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=182987)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62959  Misses: 120028  Evictions: 0  Overflows: 0  Memory Usage: 8000kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=120028)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.039..0.039 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     Storage: Memory  Maximum Storage: 18kB
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.015..0.021 rows=25 loops=1)
 Planning Time: 30.323 ms
 Execution Time: 4743.307 ms
(55 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42022.04..42412.52 rows=1 width=64) (actual time=651.387..655.623 rows=1 loops=1)
   ->  GroupAggregate  (cost=42022.04..981529.66 rows=2406 width=64) (actual time=651.386..655.621 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42022.04..981432.94 rows=2430 width=70) (actual time=97.020..654.586 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14809
               ->  Nested Loop  (cost=42022.04..980547.88 rows=2430 width=20) (actual time=96.996..652.197 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42021.75..973388.10 rows=2440 width=20) (actual time=96.987..648.589 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42021.32..350749.58 rows=368823 width=24) (actual time=93.594..287.126 rows=183039 loops=1)
                                 ->  Gather Merge  (cost=42020.89..52929.45 rows=92206 width=8) (actual time=93.541..113.752 rows=45679 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41020.85..41095.21 rows=29744 width=8) (actual time=89.836..90.581 rows=12443 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1494kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1479kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1479kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1472kB
                                             ->  Parallel Hash Join  (cost=4740.13..38810.82 rows=29744 width=8) (actual time=10.657..84.268 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148719 width=12) (actual time=0.012..52.438 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.472..10.475 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.106..9.048 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.007..3.646 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.095..0.097 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.029..0.035 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.012..0.013 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45679)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=183039)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62991  Misses: 120048  Evictions: 0  Overflows: 0  Memory Usage: 8001kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=120048)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     Storage: Memory  Maximum Storage: 18kB
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=1)
 Planning Time: 5.037 ms
 Execution Time: 655.716 ms
(55 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30905.14..31954.50 rows=1 width=90) (actual time=4633.211..4638.646 rows=1 loops=1)
   ->  GroupAggregate  (cost=30905.14..184111.45 rows=146 width=90) (actual time=4633.210..4638.644 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=30905.14..184106.70 rows=146 width=81) (actual time=4632.431..4637.914 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=24521.84..184102.52 rows=146 width=81) (actual time=268.312..4612.544 rows=13629 loops=1)
                     ->  Nested Loop  (cost=24521.41..183642.79 rows=146 width=53) (actual time=267.805..2531.800 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=24520.98..30154.23 rows=48368 width=48) (actual time=266.971..274.735 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=23520.96..23571.34 rows=20153 width=48) (actual time=258.957..259.081 rows=1038 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1472kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1379kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1363kB
                                       ->  Hash Join  (cost=449.99..22080.15 rows=20153 width=48) (actual time=4.989..249.673 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..22016.72 rows=20153 width=26) (actual time=4.902..246.710 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..21515.66 rows=20202 width=18) (actual time=1.234..237.528 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.106..24.742 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.054..0.058 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.648..3.649 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.115..2.447 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.081..0.081 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.071..0.074 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.281..1.238 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.150..0.150 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 27.527 ms
 Execution Time: 4639.424 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=30905.14..31954.50 rows=1 width=90) (actual time=130.998..134.577 rows=1 loops=1)
   ->  GroupAggregate  (cost=30905.14..184111.45 rows=146 width=90) (actual time=130.997..134.575 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=30905.14..184106.70 rows=146 width=81) (actual time=130.240..133.865 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=24521.84..184102.52 rows=146 width=81) (actual time=50.766..125.722 rows=13629 loops=1)
                     ->  Nested Loop  (cost=24521.41..183642.79 rows=146 width=53) (actual time=50.743..76.762 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=24520.98..30154.23 rows=48368 width=48) (actual time=50.706..55.093 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=23520.96..23571.34 rows=20153 width=48) (actual time=47.793..47.885 rows=1090 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1471kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1367kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1376kB
                                       ->  Hash Join  (cost=449.99..22080.15 rows=20153 width=48) (actual time=2.659..39.645 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..22016.72 rows=20153 width=26) (actual time=2.629..37.156 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..21515.66 rows=20202 width=18) (actual time=0.030..30.489 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=5050 width=4) (actual time=0.009..12.962 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.20 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.583..2.583 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..1.400 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.027 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.017..0.020 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.005..0.010 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.115 ms
 Execution Time: 134.665 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98133.10..98133.15 rows=20 width=202) (actual time=2093.322..2098.094 rows=20 loops=1)
   ->  Sort  (cost=98133.10..98266.39 rows=53317 width=202) (actual time=2093.321..2098.091 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=96047.89..96714.35 rows=53317 width=202) (actual time=2062.049..2086.539 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6640.95..95381.43 rows=53317 width=182) (actual time=61.518..1962.992 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5640.95..89049.73 rows=17199 width=182) (actual time=50.703..2007.571 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5639.39..88995.36 rows=17199 width=160) (actual time=50.627..1997.608 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=636.14..83946.97 rows=17199 width=16) (actual time=14.366..1938.987 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=635.71..27031.91 rows=17680 width=8) (actual time=13.606..271.632 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=5032
                                             Worker 0:  Heap Blocks: exact=6087
                                             Worker 1:  Heap Blocks: exact=6116
                                             Worker 2:  Heap Blocks: exact=6142
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..622.01 rows=54808 width=0) (actual time=9.435..9.435 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.112..0.116 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=35.816..35.816 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.144..15.381 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.071..0.072 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.064..0.066 rows=25 loops=4)
 Planning Time: 21.426 ms
 Execution Time: 2098.441 ms
(35 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98133.10..98133.15 rows=20 width=202) (actual time=220.008..224.144 rows=20 loops=1)
   ->  Sort  (cost=98133.10..98266.39 rows=53317 width=202) (actual time=220.006..224.141 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=96047.89..96714.35 rows=53317 width=202) (actual time=188.581..212.592 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6640.95..95381.43 rows=53317 width=182) (actual time=41.918..116.010 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5640.95..89049.73 rows=17199 width=182) (actual time=38.293..153.620 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5639.39..88995.36 rows=17199 width=160) (actual time=38.265..146.799 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=636.14..83946.97 rows=17199 width=16) (actual time=10.791..105.206 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=635.71..27031.91 rows=17680 width=8) (actual time=10.636..28.372 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2654
                                             Worker 0:  Heap Blocks: exact=6907
                                             Worker 1:  Heap Blocks: exact=6887
                                             Worker 2:  Heap Blocks: exact=6929
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..622.01 rows=54808 width=0) (actual time=7.295..7.296 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.056..27.056 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.009..7.525 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.023..0.024 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.016..0.018 rows=25 loops=4)
 Planning Time: 1.517 ms
 Execution Time: 224.516 ms
(35 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15989.52..15989.52 rows=1 width=36) (actual time=696.261..696.266 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7688.82..7688.84 rows=1 width=32) (actual time=26.664..26.666 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.40 rows=31923 width=10) (actual time=0.056..19.985 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.300 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.012 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.246 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8300.68..8327.28 rows=10641 width=36) (actual time=696.260..696.262 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.63..8247.47 rows=10641 width=36) (actual time=685.987..696.120 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.40 rows=31923 width=14) (actual time=1.027..630.492 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.655..4.280 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.208..0.211 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.443..3.955 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.244..0.244 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.047..1.506 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 11.989 ms
 Execution Time: 696.659 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15989.52..15989.52 rows=1 width=36) (actual time=83.226..83.231 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7688.82..7688.84 rows=1 width=32) (actual time=26.876..26.878 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7449.40 rows=31923 width=10) (actual time=0.055..20.147 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.047..0.306 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.252 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.040 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8300.68..8327.28 rows=10641 width=36) (actual time=83.225..83.226 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.63..8247.47 rows=10641 width=36) (actual time=72.945..83.080 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7449.40 rows=31923 width=14) (actual time=0.072..29.532 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.063..0.500 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.019 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.044..0.432 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.024..0.024 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.061 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.016 ms
 Execution Time: 83.614 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147782.86..161168.31 rows=1 width=27) (actual time=1702.708..1706.118 rows=1 loops=1)
   ->  GroupAggregate  (cost=147782.86..241481.07 rows=7 width=27) (actual time=1702.707..1706.116 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147782.86..240976.44 rows=28832 width=27) (actual time=840.107..1696.541 rows=15492 loops=1)
               ->  Gather Merge  (cost=147782.43..151235.69 rows=28841 width=15) (actual time=839.504..850.772 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146782.37..146800.40 rows=7210 width=15) (actual time=826.711..827.034 rows=4249 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 393kB
                           Worker 0:  Sort Method: quicksort  Memory: 386kB
                           Worker 1:  Sort Method: quicksort  Memory: 378kB
                           Worker 2:  Sort Method: quicksort  Memory: 385kB
                           Worker 3:  Sort Method: quicksort  Memory: 387kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.36 rows=7210 width=15) (actual time=0.304..825.029 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.054..0.054 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.035 ms
 Execution Time: 1706.470 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147782.86..161168.31 rows=1 width=27) (actual time=391.577..392.807 rows=1 loops=1)
   ->  GroupAggregate  (cost=147782.86..241481.07 rows=7 width=27) (actual time=391.576..392.805 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147782.86..240976.44 rows=28832 width=27) (actual time=342.401..388.882 rows=15492 loops=1)
               ->  Gather Merge  (cost=147782.43..151235.69 rows=28841 width=15) (actual time=342.361..347.302 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146782.37..146800.40 rows=7210 width=15) (actual time=338.003..338.210 rows=4172 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 397kB
                           Worker 0:  Sort Method: quicksort  Memory: 335kB
                           Worker 1:  Sort Method: quicksort  Memory: 412kB
                           Worker 2:  Sort Method: quicksort  Memory: 416kB
                           Worker 3:  Sort Method: quicksort  Memory: 369kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.36 rows=7210 width=15) (actual time=0.124..336.723 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.827 ms
 Execution Time: 392.859 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1388.532..1388.535 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1388.530..1388.532 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1388.505..1388.512 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1349.357..1371.909 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=33.940..999.302 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.653..572.456 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=32.875..32.876 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.016..16.670 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 14.451 ms
 Execution Time: 1389.650 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64816.89..64816.89 rows=1 width=16) (actual time=1260.305..1260.308 rows=1 loops=1)
   ->  Sort  (cost=64816.89..64817.39 rows=200 width=16) (actual time=1260.303..1260.306 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64813.89..64815.89 rows=200 width=16) (actual time=1260.278..1260.285 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61063.89..62563.89 rows=150000 width=12) (actual time=1221.113..1243.499 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53564.64 rows=1499850 width=8) (actual time=30.235..879.160 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.018..472.195 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.893..29.895 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..13.479 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.721 ms
 Execution Time: 1261.414 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74257.42..74257.43 rows=1 width=32) (actual time=548.340..554.373 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74257.42..74257.43 rows=1 width=32) (actual time=548.338..554.371 rows=1 loops=1)
         ->  Gather  (cost=74256.96..74257.37 rows=4 width=64) (actual time=548.322..554.357 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73256.96..73256.97 rows=1 width=64) (actual time=538.369..538.371 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7203.83..72921.73 rows=19156 width=33) (actual time=55.572..524.367 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1229.84..66897.45 rows=19156 width=16) (actual time=21.414..474.110 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8502
                                 Worker 0:  Heap Blocks: exact=8465
                                 Worker 1:  Heap Blocks: exact=8536
                                 Worker 2:  Heap Blocks: exact=8503
                                 Worker 3:  Heap Blocks: exact=7675
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1210.68 rows=76625 width=0) (actual time=14.253..14.253 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=33.785..33.786 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.080..16.926 rows=40000 loops=5)
 Planning Time: 14.662 ms
 Execution Time: 554.632 ms
(22 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74257.42..74257.43 rows=1 width=32) (actual time=112.673..119.128 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=74257.42..74257.43 rows=1 width=32) (actual time=112.672..119.126 rows=1 loops=1)
         ->  Gather  (cost=74256.96..74257.37 rows=4 width=64) (actual time=112.016..119.110 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=73256.96..73256.97 rows=1 width=64) (actual time=106.868..106.872 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7203.83..72921.73 rows=19156 width=33) (actual time=37.880..99.184 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1229.84..66897.45 rows=19156 width=16) (actual time=14.553..65.948 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=6814
                                 Worker 0:  Heap Blocks: exact=8748
                                 Worker 1:  Heap Blocks: exact=10275
                                 Worker 2:  Heap Blocks: exact=7763
                                 Worker 3:  Heap Blocks: exact=8081
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1210.68 rows=76625 width=0) (actual time=8.199..8.206 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=22.850..22.850 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..7.010 rows=40000 loops=5)
 Planning Time: 1.139 ms
 Execution Time: 119.193 ms
(22 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238695.23..238802.94 rows=1 width=103) (actual time=1269.837..1277.065 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=120629.55..120629.56 rows=1 width=32) (actual time=230.926..230.928 rows=1 loops=1)
           ->  HashAggregate  (cost=120378.55..120504.05 rows=10040 width=36) (actual time=227.669..230.348 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3512.58..118188.65 rows=218990 width=16) (actual time=27.973..122.106 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3457.83 rows=218990 width=0) (actual time=17.449..17.450 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118065.67..123450.85 rows=50 width=103) (actual time=1269.835..1277.061 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118065.39..123325.73 rows=50 width=36) (actual time=1269.220..1276.445 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118065.39..122873.93 rows=40160 width=36) (actual time=1016.063..1030.498 rows=41807 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117065.33..117090.43 rows=10040 width=36) (actual time=1005.353..1006.108 rows=8851 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1234kB
                           Worker 0:  Sort Method: quicksort  Memory: 1237kB
                           Worker 1:  Sort Method: quicksort  Memory: 1235kB
                           Worker 2:  Sort Method: quicksort  Memory: 1236kB
                           Worker 3:  Sort Method: quicksort  Memory: 1233kB
                           ->  Partial HashAggregate  (cost=116272.50..116398.00 rows=10040 width=36) (actual time=997.287..1003.156 rows=9897 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3512.58..115725.02 rows=54748 width=16) (actual time=40.404..947.119 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13432
                                       Worker 0:  Heap Blocks: exact=13393
                                       Worker 1:  Heap Blocks: exact=13475
                                       Worker 2:  Heap Blocks: exact=13459
                                       Worker 3:  Heap Blocks: exact=13069
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3457.83 rows=218990 width=0) (actual time=36.583..36.584 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.609..0.609 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 12.420 ms
 Execution Time: 1277.501 ms
(46 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=238695.23..238802.94 rows=1 width=103) (actual time=409.707..418.785 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=120629.55..120629.56 rows=1 width=32) (actual time=218.341..218.342 rows=1 loops=1)
           ->  HashAggregate  (cost=120378.55..120504.05 rows=10040 width=36) (actual time=215.087..217.763 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3512.58..118188.65 rows=218990 width=16) (actual time=27.782..110.421 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3457.83 rows=218990 width=0) (actual time=17.245..17.245 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=118065.67..123450.85 rows=50 width=103) (actual time=409.706..418.782 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=118065.39..123325.73 rows=50 width=36) (actual time=409.679..418.754 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=118065.39..122873.93 rows=40160 width=36) (actual time=169.052..185.599 rows=41762 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=117065.33..117090.43 rows=10040 width=36) (actual time=161.010..161.751 rows=8849 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1232kB
                           Worker 0:  Sort Method: quicksort  Memory: 1240kB
                           Worker 1:  Sort Method: quicksort  Memory: 1238kB
                           Worker 2:  Sort Method: quicksort  Memory: 1224kB
                           Worker 3:  Sort Method: quicksort  Memory: 1235kB
                           ->  Partial HashAggregate  (cost=116272.50..116398.00 rows=10040 width=36) (actual time=153.165..158.067 rows=9882 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3512.58..115725.02 rows=54748 width=16) (actual time=32.006..119.048 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=12504
                                       Worker 0:  Heap Blocks: exact=15628
                                       Worker 1:  Heap Blocks: exact=14474
                                       Worker 2:  Heap Blocks: exact=10784
                                       Worker 3:  Heap Blocks: exact=13438
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3457.83 rows=218990 width=0) (actual time=25.759..25.759 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.022..0.022 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.002 ms
 Execution Time: 418.904 ms
(46 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26521.92..26521.92 rows=1 width=44) (actual time=287.824..288.900 rows=1 loops=1)
   ->  Sort  (cost=26521.92..26561.52 rows=15840 width=44) (actual time=287.823..288.899 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18743.36..26442.72 rows=15840 width=44) (actual time=212.985..285.593 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18743.36..25703.06 rows=58126 width=40) (actual time=212.970..267.851 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17743.30..17779.63 rows=14532 width=40) (actual time=175.906..177.221 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2134kB
                           Worker 0:  Sort Method: quicksort  Memory: 2365kB
                           Worker 1:  Sort Method: quicksort  Memory: 1993kB
                           Worker 2:  Sort Method: quicksort  Memory: 2270kB
                           Worker 3:  Sort Method: quicksort  Memory: 2041kB
                           ->  Parallel Hash Join  (cost=6682.14..16738.64 rows=14532 width=40) (actual time=36.399..100.760 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.040..53.467 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.873..5.311 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12110 width=40) (actual time=30.214..30.215 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12110 width=40) (actual time=0.205..27.958 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 16.394 ms
 Execution Time: 288.975 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26521.92..26521.92 rows=1 width=44) (actual time=246.788..247.206 rows=1 loops=1)
   ->  Sort  (cost=26521.92..26561.52 rows=15840 width=44) (actual time=246.786..247.204 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18743.36..26442.72 rows=15840 width=44) (actual time=171.577..243.954 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18743.36..25703.06 rows=58126 width=40) (actual time=171.561..225.902 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17743.30..17779.63 rows=14532 width=40) (actual time=154.005..155.310 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2362kB
                           Worker 0:  Sort Method: quicksort  Memory: 1989kB
                           Worker 1:  Sort Method: quicksort  Memory: 2051kB
                           Worker 2:  Sort Method: quicksort  Memory: 2206kB
                           Worker 3:  Sort Method: quicksort  Memory: 2195kB
                           ->  Parallel Hash Join  (cost=6682.14..16738.64 rows=14532 width=40) (actual time=20.323..75.972 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=2.642..41.975 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.081..2.390 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12110 width=40) (actual time=17.563..17.564 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12110 width=40) (actual time=0.014..13.441 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.842 ms
 Execution Time: 247.262 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217737.34..217737.35 rows=1 width=32) (actual time=4032.170..4036.454 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217737.34..217737.35 rows=1 width=32) (actual time=4032.168..4036.451 rows=1 loops=1)
         ->  Gather  (cost=217737.12..217737.33 rows=2 width=32) (actual time=4026.294..4036.439 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216737.12..216737.13 rows=1 width=32) (actual time=4015.052..4015.054 rows=1 loops=3)
                     ->  Nested Loop  (cost=208022.70..216735.10 rows=807 width=8) (actual time=3948.630..4014.967 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=208022.26..213371.48 rows=81 width=40) (actual time=3948.342..3966.080 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=82 width=4) (actual time=0.495..18.140 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205551.98..205551.98 rows=197623 width=36) (actual time=3947.321..3947.322 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202587.63..205551.98 rows=197623 width=36) (actual time=3453.673..3912.577 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172578.42 rows=6001842 width=9) (actual time=0.259..797.066 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.547..0.703 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 13.844 ms
 Execution Time: 4043.365 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217737.34..217737.35 rows=1 width=32) (actual time=3690.364..3693.588 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217737.34..217737.35 rows=1 width=32) (actual time=3690.363..3693.586 rows=1 loops=1)
         ->  Gather  (cost=217737.12..217737.33 rows=2 width=32) (actual time=3684.267..3693.574 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216737.12..216737.13 rows=1 width=32) (actual time=3680.066..3680.068 rows=1 loops=3)
                     ->  Nested Loop  (cost=208022.70..216735.10 rows=807 width=8) (actual time=3669.468..3680.034 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=208022.26..213371.48 rows=81 width=40) (actual time=3669.424..3678.154 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=82 width=4) (actual time=0.071..8.759 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205551.98..205551.98 rows=197623 width=36) (actual time=3668.761..3668.762 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202587.63..205551.98 rows=197623 width=36) (actual time=3177.659..3634.122 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39816kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172578.42 rows=6001842 width=9) (actual time=0.084..545.799 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.011..0.026 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 0.950 ms
 Execution Time: 3700.369 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794719.47..794719.72 rows=100 width=71) (actual time=4316.303..4316.309 rows=9 loops=1)
   ->  Sort  (cost=794719.47..799721.01 rows=2000613 width=71) (actual time=4316.301..4316.306 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658082.80..718257.48 rows=2000613 width=71) (actual time=4315.560..4316.259 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335223.94..550315.40 rows=2000613 width=44) (actual time=3590.827..4315.483 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172578.42 rows=6001842 width=9) (actual time=0.772..307.674 rows=6001215 loops=1)
                     ->  Hash  (cost=328972.03..328972.03 rows=500153 width=43) (actual time=3396.083..3396.087 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282590.59..328972.03 rows=500153 width=43) (actual time=3083.469..3396.060 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275618.59..320687.10 rows=500153 width=24) (actual time=3021.873..3334.454 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.939..227.636 rows=1500000 loops=1)
                                       ->  Hash  (cost=269366.67..269366.67 rows=500153 width=4) (actual time=2933.052..2933.054 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269366.67 rows=500153 width=4) (actual time=627.186..2933.030 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216850.56 rows=6001842 width=9) (actual time=0.021..1630.031 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=61.244..61.244 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.592..35.997 rows=150000 loops=1)
 Planning Time: 19.328 ms
 Execution Time: 4317.873 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794719.47..794719.72 rows=100 width=71) (actual time=3299.965..3299.971 rows=9 loops=1)
   ->  Sort  (cost=794719.47..799721.01 rows=2000613 width=71) (actual time=3299.964..3299.969 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658082.80..718257.48 rows=2000613 width=71) (actual time=3299.211..3299.921 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335223.94..550315.40 rows=2000613 width=44) (actual time=2571.950..3299.136 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172578.42 rows=6001842 width=9) (actual time=0.018..307.755 rows=6001215 loops=1)
                     ->  Hash  (cost=328972.03..328972.03 rows=500153 width=43) (actual time=2377.487..2377.490 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282590.59..328972.03 rows=500153 width=43) (actual time=2172.293..2377.469 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275618.59..320687.10 rows=500153 width=24) (actual time=2129.173..2334.341 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..85.766 rows=1500000 loops=1)
                                       ->  Hash  (cost=269366.67..269366.67 rows=500153 width=4) (actual time=2073.504..2073.506 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269366.67 rows=500153 width=4) (actual time=438.941..2073.487 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216850.56 rows=6001842 width=9) (actual time=0.018..849.645 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=42.712..42.712 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.022..18.828 rows=150000 loops=1)
 Planning Time: 1.440 ms
 Execution Time: 3301.273 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=17930.77..17930.78 rows=1 width=32) (actual time=854.642..857.398 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=17930.77..17930.78 rows=1 width=32) (actual time=854.641..857.396 rows=1 loops=1)
         ->  Gather  (cost=17930.55..17930.76 rows=2 width=32) (actual time=845.616..857.385 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=16930.55..16930.56 rows=1 width=32) (actual time=837.634..837.635 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..16930.18 rows=48 width=12) (actual time=14.399..837.524 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=199 width=30) (actual time=0.906..26.987 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.67 rows=1 width=21) (actual time=4.277..4.795 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 16.371 ms
 Execution Time: 858.471 ms
(16 rows)

SET
SET
SET


 Limit  (cost=17930.77..17930.78 rows=1 width=32) (actual time=29.052..32.646 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=17930.77..17930.78 rows=1 width=32) (actual time=29.051..32.644 rows=1 loops=1)
         ->  Gather  (cost=17930.55..17930.76 rows=2 width=32) (actual time=28.907..32.635 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=16930.55..16930.56 rows=1 width=32) (actual time=26.168..26.169 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..16930.18 rows=48 width=12) (actual time=0.666..26.130 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=199 width=30) (actual time=0.115..17.360 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.67 rows=1 width=21) (actual time=0.046..0.051 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.002 ms
 Execution Time: 32.691 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=210771.43..210771.43 rows=1 width=51) (actual time=3683.396..3683.479 rows=1 loops=1)
   ->  Sort  (cost=210771.43..210771.43 rows=1 width=51) (actual time=3683.394..3683.477 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185848.64..210771.42 rows=1 width=51) (actual time=3518.333..3683.071 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.559..3.097 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.253..0.256 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.298..2.132 rows=10000 loops=1)
               ->  Materialize  (cost=185848.64..210316.11 rows=1 width=8) (actual time=5.628..8.173 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=185848.64..210316.10 rows=1 width=8) (actual time=2464.820..3511.657 rows=5898 loops=1)
                           ->  Hash Join  (cost=185848.22..203331.19 rows=4901 width=44) (actual time=2464.163..3007.145 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179480.30..195689.43 rows=485265 width=40) (actual time=2430.347..2923.271 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14661.02..140937.74 rows=914448 width=13) (actual time=124.808..1940.341 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14432.41 rows=914448 width=0) (actual time=105.088..105.088 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=33.797..33.877 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=2.312..33.497 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.163..20.996 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.085..0.085 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 20.301 ms
 Execution Time: 3687.999 ms
(41 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=210771.43..210771.43 rows=1 width=51) (actual time=1359.632..1359.717 rows=1 loops=1)
   ->  Sort  (cost=210771.43..210771.43 rows=1 width=51) (actual time=1359.631..1359.715 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=185848.64..210771.42 rows=1 width=51) (actual time=1195.299..1359.302 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.034..1.573 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.024 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.009..0.667 rows=10000 loops=1)
               ->  Materialize  (cost=185848.64..210316.11 rows=1 width=8) (actual time=1.588..2.872 rows=4340 loops=438)
                     Storage: Memory  Maximum Storage: 249kB
                     ->  Nested Loop  (cost=185848.64..210316.10 rows=1 width=8) (actual time=695.315..1191.976 rows=5898 loops=1)
                           ->  Hash Join  (cost=185848.22..203331.19 rows=4901 width=44) (actual time=695.291..1168.747 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=179480.30..195689.43 rows=485265 width=40) (actual time=684.415..1119.895 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=14661.02..140937.74 rows=914448 width=13) (actual time=87.592..300.828 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14432.41 rows=914448 width=0) (actual time=68.597..68.598 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=10.857..10.938 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.331..10.637 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.034..7.965 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.42 rows=1 width=12) (actual time=0.004..0.004 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.616 ms
 Execution Time: 1364.111 ms
(41 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193950.40..193950.40 rows=1 width=34) (actual time=1459.007..1459.124 rows=100 loops=1)
   ->  Sort  (cost=193950.40..193950.40 rows=1 width=34) (actual time=1459.006..1459.117 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=193950.37..193950.39 rows=1 width=34) (actual time=1458.019..1458.709 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=193950.37..193950.37 rows=1 width=26) (actual time=1458.011..1458.284 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..193950.36 rows=1 width=26) (actual time=15.137..1444.572 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..193946.97 rows=1 width=38) (actual time=12.403..1361.297 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..193943.65 rows=1 width=34) (actual time=11.461..35.716 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..192943.55 rows=1 width=34) (actual time=3.512..622.699 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133624.67 rows=19926 width=34) (actual time=2.366..518.252 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.76 rows=500154 width=8) (actual time=0.573..458.816 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.766..1.768 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.499..1.699 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.190..0.191 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.307..1.454 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.131..0.131 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.092..0.092 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 17.114 ms
 Execution Time: 1459.425 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=193950.40..193950.40 rows=1 width=34) (actual time=471.386..471.499 rows=100 loops=1)
   ->  Sort  (cost=193950.40..193950.40 rows=1 width=34) (actual time=471.385..471.491 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=193950.37..193950.39 rows=1 width=34) (actual time=470.391..471.082 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=193950.37..193950.37 rows=1 width=26) (actual time=470.380..470.649 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..193950.36 rows=1 width=26) (actual time=1.702..455.702 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..193946.97 rows=1 width=38) (actual time=1.202..432.502 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..193943.65 rows=1 width=34) (actual time=1.184..385.482 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..192943.55 rows=1 width=34) (actual time=0.882..434.395 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133624.67 rows=19926 width=34) (actual time=0.462..327.514 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131315.76 rows=500154 width=8) (actual time=0.044..260.026 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.408..0.410 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.064..0.352 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.050..0.296 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.026..0.026 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.713 ms
 Execution Time: 471.581 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.16 rows=1 width=72) (actual time=160.011..161.879 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=42.254..42.336 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=42.116..42.318 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=33.925..33.925 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1988 width=6) (actual time=0.177..32.665 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7457.49 rows=745 width=72) (actual time=160.010..161.794 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7438.87 rows=745 width=38) (actual time=66.917..161.239 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=66.128..69.432 rows=2737 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.126..21.272 rows=1523 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 531kB
                           Worker 0:  Sort Method: quicksort  Memory: 471kB
                           Worker 1:  Sort Method: quicksort  Memory: 470kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.024..19.195 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.033..0.033 rows=1 loops=2737)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.703 ms
 Execution Time: 161.949 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.16 rows=1 width=72) (actual time=57.504..59.148 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=27.622..27.706 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=27.491..27.695 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=25.045..25.046 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1988 width=6) (actual time=0.017..23.905 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7457.49 rows=745 width=72) (actual time=57.503..59.062 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7438.87 rows=745 width=38) (actual time=51.039..58.853 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=51.004..53.274 rows=2741 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.464..20.539 rows=1534 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 550kB
                           Worker 0:  Sort Method: quicksort  Memory: 459kB
                           Worker 1:  Sort Method: quicksort  Memory: 463kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.021..18.524 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2741)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.899 ms
 Execution Time: 59.203 ms
(29 rows)

