query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184175.21..184175.85 rows=1 width=236) (actual time=2046.886..2049.125 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184175.21..184179.03 rows=6 width=236) (actual time=2046.885..2049.123 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184175.21..184178.09 rows=24 width=236) (actual time=2046.861..2049.102 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183175.16..183175.17 rows=6 width=236) (actual time=2035.934..2035.935 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183174.94..183175.08 rows=6 width=236) (actual time=2035.899..2035.904 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.00 rows=1481684 width=25) (actual time=2.182..497.915 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 13.304 ms
 Execution Time: 2049.522 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=184175.21..184175.85 rows=1 width=236) (actual time=1880.168..1880.258 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=184175.21..184179.03 rows=6 width=236) (actual time=1880.166..1880.256 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=184175.21..184178.09 rows=24 width=236) (actual time=1880.147..1880.239 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=183175.16..183175.17 rows=6 width=236) (actual time=1874.631..1874.632 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 26kB
                     Worker 0:  Sort Method: quicksort  Memory: 26kB
                     Worker 1:  Sort Method: quicksort  Memory: 26kB
                     Worker 2:  Sort Method: quicksort  Memory: 26kB
                     Worker 3:  Sort Method: quicksort  Memory: 26kB
                     ->  Partial HashAggregate  (cost=183174.94..183175.08 rows=6 width=236) (actual time=1874.600..1874.605 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.00 rows=1481684 width=25) (actual time=0.032..258.466 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 0.563 ms
 Execution Time: 1880.322 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47832.00..47832.00 rows=1 width=192) (actual time=393.691..393.789 rows=100 loops=1)
   ->  Sort  (cost=47832.00..47832.00 rows=1 width=192) (actual time=393.690..393.782 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 69kB
         ->  Hash Join  (cost=33942.01..47831.99 rows=1 width=192) (actual time=332.951..393.399 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6440.50 rows=915 width=30) (actual time=1.620..1.894 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=381 width=30) (actual time=0.402..30.793 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=330.617..330.621 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=6.872..270.681 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.464..155.640 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=6.138..6.141 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.730..5.627 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.325..4.046 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.396..0.398 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.390..0.396 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.195..0.197 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.187..0.188 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.180..0.181 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.046..0.046 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.039..0.044 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.032..0.042 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.030..0.037 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.028..0.029 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 20.916 ms
 Execution Time: 393.944 ms
(50 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47832.00..47832.00 rows=1 width=192) (actual time=249.412..249.510 rows=100 loops=1)
   ->  Sort  (cost=47832.00..47832.00 rows=1 width=192) (actual time=249.411..249.503 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 70kB
         ->  Hash Join  (cost=33942.01..47831.99 rows=1 width=192) (actual time=227.388..249.170 rows=489 loops=1)
               Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
               ->  Gather  (cost=1000.00..6440.50 rows=915 width=30) (actual time=0.273..0.471 rows=799 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=381 width=30) (actual time=0.036..13.524 rows=266 loops=3)
                           Filter: (((p_type)::text ~~ '%NICKEL'::text) AND (p_size = 16))
                           Rows Removed by Filter: 66400
               ->  Hash  (cost=30542.01..30542.01 rows=160000 width=172) (actual time=226.715..226.719 rows=162880 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 35361kB
                     ->  Hash Join  (cost=408.01..30542.01 rows=160000 width=172) (actual time=2.953..169.543 rows=162880 loops=1)
                           Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.007..50.955 rows=800000 loops=1)
                           ->  Hash  (cost=383.01..383.01 rows=2000 width=166) (actual time=2.694..2.697 rows=2036 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 419kB
                                 ->  Hash Join  (cost=2.51..383.01 rows=2000 width=166) (actual time=0.035..2.190 rows=2036 loops=1)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.004..0.727 rows=10000 loops=1)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.026..0.028 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.020..0.026 rows=5 loops=1)
                                                   Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.003..0.004 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
               SubPlan 1
                 ->  Aggregate  (cost=18.44..18.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=1288)
                       ->  Nested Loop  (cost=0.85..18.44 rows=1 width=6) (actual time=0.010..0.015 rows=1 loops=1288)
                             Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                             Rows Removed by Join Filter: 3
                             ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=1288)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                                   Rows Removed by Filter: 4
                             ->  Nested Loop  (cost=0.85..17.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=1288)
                                   ->  Nested Loop  (cost=0.71..16.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=1288)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..3.50 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=1288)
                                               Index Cond: (ps_partkey = part.p_partkey)
                                         ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..3.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                               Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=5152)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.698 ms
 Execution Time: 249.677 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231901.07..231901.09 rows=10 width=44) (actual time=1150.048..1152.473 rows=10 loops=1)
   ->  Sort  (cost=231901.07..232673.10 rows=308812 width=44) (actual time=1150.047..1152.470 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179759.93..225227.75 rows=308812 width=44) (actual time=1127.667..1150.093 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179759.93..216735.42 rows=308812 width=24) (actual time=1127.653..1134.551 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178759.87..178952.88 rows=77203 width=24) (actual time=1112.358..1112.636 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 438kB
                           Worker 0:  Sort Method: quicksort  Memory: 453kB
                           Worker 1:  Sort Method: quicksort  Memory: 476kB
                           Worker 2:  Sort Method: quicksort  Memory: 484kB
                           Worker 3:  Sort Method: quicksort  Memory: 484kB
                           ->  Parallel Hash Join  (cost=37900.21..172492.39 rows=77203 width=24) (actual time=229.826..1110.505 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.00 rows=807236 width=16) (actual time=0.517..811.677 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37321.56..37321.56 rows=46292 width=12) (actual time=227.964..227.966 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.48..37321.56 rows=46292 width=12) (actual time=20.440..219.041 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231496 width=16) (actual time=0.475..168.854 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12498 width=4) (actual time=19.821..19.822 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12498 width=4) (actual time=0.218..18.208 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 18.910 ms
 Execution Time: 1153.639 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=231901.07..231901.09 rows=10 width=44) (actual time=423.205..424.557 rows=10 loops=1)
   ->  Sort  (cost=231901.07..232673.10 rows=308812 width=44) (actual time=423.204..424.555 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=179759.93..225227.75 rows=308812 width=44) (actual time=401.025..422.181 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=179759.93..216735.42 rows=308812 width=24) (actual time=401.013..406.744 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=178759.87..178952.88 rows=77203 width=24) (actual time=397.137..397.413 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 447kB
                           Worker 0:  Sort Method: quicksort  Memory: 461kB
                           Worker 1:  Sort Method: quicksort  Memory: 513kB
                           Worker 2:  Sort Method: quicksort  Memory: 457kB
                           Worker 3:  Sort Method: quicksort  Memory: 457kB
                           ->  Parallel Hash Join  (cost=37900.21..172492.39 rows=77203 width=24) (actual time=92.287..394.832 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131316.00 rows=807236 width=16) (actual time=0.049..222.948 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37321.56..37321.56 rows=46292 width=12) (actual time=91.150..91.153 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.48..37321.56 rows=46292 width=12) (actual time=9.344..81.341 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=231496 width=16) (actual time=0.016..44.710 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12498 width=4) (actual time=9.147..9.148 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12498 width=4) (actual time=0.015..5.807 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.240 ms
 Execution Time: 424.624 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29304.37..61852.33 rows=1 width=24) (actual time=2923.652..2928.604 rows=1 loops=1)
   ->  GroupAggregate  (cost=29304.37..192044.17 rows=5 width=24) (actual time=2923.650..2928.602 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29304.37..191767.19 rows=55385 width=16) (actual time=426.289..2919.895 rows=10479 loops=1)
               ->  Gather Merge  (cost=29303.94..35856.34 rows=55385 width=20) (actual time=425.555..441.923 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28303.90..28348.56 rows=17866 width=20) (actual time=417.859..418.271 rows=3794 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 941kB
                           Worker 0:  Sort Method: quicksort  Memory: 926kB
                           Worker 1:  Sort Method: quicksort  Memory: 926kB
                           Worker 2:  Sort Method: quicksort  Memory: 932kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=643.12..27042.12 rows=17866 width=20) (actual time=5.315..412.851 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5906
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..629.28 rows=55385 width=0) (actual time=6.850..6.850 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.216..0.216 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 13.425 ms
 Execution Time: 2929.092 ms
(24 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29304.37..61852.33 rows=1 width=24) (actual time=77.638..83.255 rows=1 loops=1)
   ->  GroupAggregate  (cost=29304.37..192044.17 rows=5 width=24) (actual time=77.637..83.254 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29304.37..191767.19 rows=55385 width=16) (actual time=33.281..81.421 rows=10479 loops=1)
               ->  Gather Merge  (cost=29303.94..35856.34 rows=55385 width=20) (actual time=33.241..41.725 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28303.90..28348.56 rows=17866 width=20) (actual time=29.796..30.061 rows=3790 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 930kB
                           Worker 0:  Sort Method: quicksort  Memory: 926kB
                           Worker 1:  Sort Method: quicksort  Memory: 939kB
                           Worker 2:  Sort Method: quicksort  Memory: 929kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=643.12..27042.12 rows=17866 width=20) (actual time=6.061..26.481 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5775
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..629.28 rows=55385 width=0) (actual time=5.582..5.583 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.20 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Filter: (l_commitdate < l_receiptdate)
                     Rows Removed by Filter: 1
 Planning Time: 0.842 ms
 Execution Time: 83.314 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83748.54..83748.54 rows=1 width=58) (actual time=2248.365..2258.766 rows=1 loops=1)
   ->  Sort  (cost=83748.54..83748.60 rows=25 width=58) (actual time=2248.363..2258.764 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83709.40..83748.41 rows=25 width=58) (actual time=2247.843..2258.753 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83709.40..83747.54 rows=75 width=58) (actual time=2247.654..2258.734 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82709.36..82738.69 rows=25 width=58) (actual time=2237.214..2237.893 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82709.36..82715.16 rows=2321 width=38) (actual time=2237.042..2237.125 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 148kB
                                 Worker 0:  Sort Method: quicksort  Memory: 154kB
                                 Worker 1:  Sort Method: quicksort  Memory: 151kB
                                 Worker 2:  Sort Method: quicksort  Memory: 153kB
                                 ->  Hash Join  (cost=7824.76..82579.61 rows=2321 width=38) (actual time=53.210..2235.401 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7351.76..81801.18 rows=58178 width=50) (actual time=48.680..2217.616 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7351.33..34906.49 rows=14545 width=38) (actual time=48.222..319.032 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2611.20..29833.04 rows=72723 width=8) (actual time=19.657..263.930 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6485
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2554.84 rows=225441 width=0) (actual time=15.581..15.581 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=28.312..28.314 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.263..25.759 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.131..21.046 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.124..0.126 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.117..0.123 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.055..0.057 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.056..0.056 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.053..0.054 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.158..0.166 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.695..3.695 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.099..2.297 rows=10000 loops=4)
 Planning Time: 24.608 ms
 Execution Time: 2259.482 ms
(49 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83748.54..83748.54 rows=1 width=58) (actual time=143.689..158.103 rows=1 loops=1)
   ->  Sort  (cost=83748.54..83748.60 rows=25 width=58) (actual time=143.687..158.101 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=83709.40..83748.41 rows=25 width=58) (actual time=143.156..158.089 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=83709.40..83747.54 rows=75 width=58) (actual time=142.963..158.071 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=82709.36..82738.69 rows=25 width=58) (actual time=138.976..139.648 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=82709.36..82715.16 rows=2321 width=38) (actual time=138.803..138.887 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 151kB
                                 Worker 0:  Sort Method: quicksort  Memory: 152kB
                                 Worker 1:  Sort Method: quicksort  Memory: 152kB
                                 Worker 2:  Sort Method: quicksort  Memory: 151kB
                                 ->  Hash Join  (cost=7824.76..82579.61 rows=2321 width=38) (actual time=30.499..137.993 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7351.76..81801.18 rows=58178 width=50) (actual time=27.606..126.997 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7351.33..34906.49 rows=14545 width=38) (actual time=27.574..67.468 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2611.20..29833.04 rows=72723 width=8) (actual time=16.243..42.138 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6525
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2554.84 rows=225441 width=0) (actual time=12.494..12.495 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.209..11.211 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.052..9.110 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.010..3.593 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.036..0.037 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.030..0.035 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.011..0.013 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.014..0.014 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.012 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.18 rows=4 width=20) (actual time=0.004..0.004 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.750..2.751 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.015..1.407 rows=10000 loops=4)
 Planning Time: 4.097 ms
 Execution Time: 158.187 ms
(49 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108816.73..108816.74 rows=1 width=32) (actual time=1086.694..1093.932 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=108816.73..108816.74 rows=1 width=32) (actual time=1086.692..1093.929 rows=1 loops=1)
         ->  Gather  (cost=108816.30..108816.71 rows=4 width=32) (actual time=1086.303..1093.918 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=107816.30..107816.31 rows=1 width=32) (actual time=1077.166..1077.167 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21420.30..107663.66 rows=30528 width=12) (actual time=131.567..1060.252 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13060
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21389.77 rows=122114 width=0) (actual time=127.132..127.132 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 9.577 ms
 Execution Time: 1095.189 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=108816.73..108816.74 rows=1 width=32) (actual time=200.340..205.992 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=108816.73..108816.74 rows=1 width=32) (actual time=200.339..205.989 rows=1 loops=1)
         ->  Gather  (cost=108816.30..108816.71 rows=4 width=32) (actual time=200.319..205.971 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=107816.30..107816.31 rows=1 width=32) (actual time=194.994..194.995 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=21420.30..107663.66 rows=30528 width=12) (actual time=102.696..187.006 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=14032
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..21389.77 rows=122114 width=0) (actual time=94.513..94.513 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.557 ms
 Execution Time: 206.095 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141443.61..141602.01 rows=1 width=116) (actual time=3790.890..3794.501 rows=1 loops=1)
   ->  GroupAggregate  (cost=141443.61..1105363.41 rows=6085 width=116) (actual time=3790.889..3794.499 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141443.61..1105180.86 rows=6085 width=96) (actual time=915.676..3791.217 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32677
               ->  Nested Loop  (cost=141443.19..632949.29 rows=152137 width=76) (actual time=901.454..3254.954 rows=34036 loops=1)
                     ->  Gather Merge  (cost=141442.76..159664.69 rows=152186 width=76) (actual time=900.080..946.832 rows=34036 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140442.70..140537.82 rows=38046 width=76) (actual time=886.961..887.882 rows=7207 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3613kB
                                 Worker 0:  Sort Method: quicksort  Memory: 3657kB
                                 Worker 1:  Sort Method: quicksort  Memory: 3769kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3692kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3808kB
                                 ->  Hash Join  (cost=381.77..137548.26 rows=38046 width=76) (actual time=5.336..863.919 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135067.20 rows=458392 width=24) (actual time=2.324..812.061 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.879..2.882 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.152..2.744 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.078..1.478 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.069..0.071 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.059..0.064 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.046..0.047 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.004..0.006 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.008 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.067..0.067 rows=1 loops=34036)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.014..0.015 rows=1 loops=34036)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 21.770 ms
 Execution Time: 3794.965 ms
(45 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141443.61..141602.01 rows=1 width=116) (actual time=482.681..483.979 rows=1 loops=1)
   ->  GroupAggregate  (cost=141443.61..1105363.41 rows=6085 width=116) (actual time=482.680..483.977 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, EXTRACT(year FROM lineitem.l_shipdate)
         ->  Nested Loop  (cost=141443.61..1105180.86 rows=6085 width=96) (actual time=311.128..482.864 rows=1359 loops=1)
               Join Filter: (customer.c_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 32670
               ->  Nested Loop  (cost=141443.19..632949.29 rows=152137 width=76) (actual time=310.914..407.471 rows=34029 loops=1)
                     ->  Gather Merge  (cost=141442.76..159664.69 rows=152186 width=76) (actual time=310.870..329.134 rows=34029 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140442.70..140537.82 rows=38046 width=76) (actual time=302.979..303.594 rows=7206 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (EXTRACT(year FROM lineitem.l_shipdate))
                                 Sort Method: quicksort  Memory: 3058kB
                                 Worker 0:  Sort Method: quicksort  Memory: 5190kB
                                 Worker 1:  Sort Method: quicksort  Memory: 5236kB
                                 Worker 2:  Sort Method: quicksort  Memory: 3981kB
                                 Worker 3:  Sort Method: quicksort  Memory: 2611kB
                                 ->  Hash Join  (cost=381.77..137548.26 rows=38046 width=76) (actual time=2.185..280.180 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135067.20 rows=458392 width=24) (actual time=0.041..227.924 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=2.067..2.070 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.041..1.934 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.008..0.693 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.029..0.030 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.020..0.025 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.003..0.005 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34029)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Scan using customer_pkey on customer  (cost=0.42..3.09 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34029)
                     Index Cond: (c_custkey = orders.o_custkey)
 Planning Time: 2.927 ms
 Execution Time: 484.120 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42011.29..42405.48 rows=1 width=64) (actual time=5381.569..5387.087 rows=1 loops=1)
   ->  GroupAggregate  (cost=42011.29..990440.87 rows=2406 width=64) (actual time=5381.568..5387.085 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42011.29..990344.35 rows=2420 width=70) (actual time=282.017..5384.474 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14812
               ->  Nested Loop  (cost=42011.29..989463.07 rows=2420 width=20) (actual time=281.983..5380.170 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42011.00..982344.36 rows=2426 width=20) (actual time=281.794..5358.286 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42010.57..349674.60 rows=367550 width=24) (actual time=239.667..4262.552 rows=182925 loops=1)
                                 ->  Gather Merge  (cost=42010.14..52881.08 rows=91888 width=8) (actual time=238.630..277.433 rows=45648 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41010.10..41084.20 rows=29641 width=8) (actual time=228.419..229.703 rows=12534 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1466kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1475kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1492kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1490kB
                                             ->  Parallel Hash Join  (cost=4740.13..38808.47 rows=29641 width=8) (actual time=23.258..222.796 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148206 width=12) (actual time=0.587..172.440 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=22.443..22.446 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.678..20.589 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.149..15.754 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.520..0.522 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.132..0.144 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.062..0.066 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.062..0.063 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.056..0.057 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.080..0.086 rows=4 loops=45648)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.006..0.006 rows=0 loops=182925)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62934  Misses: 119991  Evictions: 0  Overflows: 0  Memory Usage: 7997kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=119991)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.017..0.017 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.014..0.023 rows=25 loops=1)
 Planning Time: 26.752 ms
 Execution Time: 5387.175 ms
(54 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=42011.29..42405.48 rows=1 width=64) (actual time=627.127..631.300 rows=1 loops=1)
   ->  GroupAggregate  (cost=42011.29..990440.87 rows=2406 width=64) (actual time=627.126..631.298 rows=1 loops=1)
         Group Key: EXTRACT(year FROM orders.o_orderdate)
         ->  Nested Loop  (cost=42011.29..990344.35 rows=2420 width=70) (actual time=94.290..630.116 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14804
               ->  Nested Loop  (cost=42011.29..989463.07 rows=2420 width=20) (actual time=94.269..627.722 rows=1235 loops=1)
                     ->  Nested Loop  (cost=42011.00..982344.36 rows=2426 width=20) (actual time=94.250..624.317 rows=1235 loops=1)
                           ->  Nested Loop  (cost=42010.57..349674.60 rows=367550 width=24) (actual time=92.996..282.396 rows=183031 loops=1)
                                 ->  Gather Merge  (cost=42010.14..52881.08 rows=91888 width=8) (actual time=92.957..113.447 rows=45673 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=41010.10..41084.20 rows=29641 width=8) (actual time=89.180..89.987 rows=12410 loops=4)
                                             Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                                             Sort Method: quicksort  Memory: 1485kB
                                             Worker 0:  Sort Method: quicksort  Memory: 1478kB
                                             Worker 1:  Sort Method: quicksort  Memory: 1483kB
                                             Worker 2:  Sort Method: quicksort  Memory: 1478kB
                                             ->  Parallel Hash Join  (cost=4740.13..38808.47 rows=29641 width=8) (actual time=11.173..83.740 rows=22795 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148206 width=12) (actual time=0.010..50.770 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=4) (actual time=10.957..10.960 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1440kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=4) (actual time=0.233..9.258 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.011..3.589 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.216..0.217 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.032..0.039 rows=5 loops=4)
                                                                           Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.011..0.013 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.018..0.018 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.014 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.19 rows=4 width=24) (actual time=0.002..0.003 rows=4 loops=45673)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                           ->  Memoize  (cost=0.43..3.11 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=183031)
                                 Cache Key: lineitem.l_partkey
                                 Cache Mode: logical
                                 Hits: 62999  Misses: 120032  Evictions: 0  Overflows: 0  Memory Usage: 8000kB
                                 ->  Index Scan using part_pkey on part  (cost=0.42..3.10 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=120032)
                                       Index Cond: (p_partkey = lineitem.l_partkey)
                                       Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       Rows Removed by Filter: 1
                     ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.93 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=1)
 Planning Time: 4.741 ms
 Execution Time: 631.392 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22670.82..23734.58 rows=1 width=90) (actual time=4890.026..4895.305 rows=1 loops=1)
   ->  GroupAggregate  (cost=22670.82..122664.84 rows=94 width=90) (actual time=4890.025..4895.304 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=22670.82..122661.79 rows=94 width=81) (actual time=4889.139..4894.469 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=18504.60..122659.21 rows=94 width=81) (actual time=273.340..4866.557 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18504.17..122363.22 rows=94 width=53) (actual time=272.505..2643.014 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18503.74..22180.58 rows=31570 width=48) (actual time=271.182..279.017 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17503.71..17536.60 rows=13154 width=48) (actual time=262.682..262.814 rows=1039 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1441kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1423kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1350kB
                                       ->  Hash Join  (cost=449.99..16603.77 rows=13154 width=48) (actual time=5.489..253.347 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16561.83 rows=13154 width=26) (actual time=5.350..250.082 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13154 width=18) (actual time=1.511..240.399 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.127..25.192 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.055..0.058 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.738..3.739 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.176..2.509 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.081..0.082 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.069..0.074 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.295..1.296 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.160..0.160 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 26.604 ms
 Execution Time: 4895.396 ms
(41 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=22670.82..23734.58 rows=1 width=90) (actual time=128.323..131.983 rows=1 loops=1)
   ->  GroupAggregate  (cost=22670.82..122664.84 rows=94 width=90) (actual time=128.321..131.981 rows=1 loops=1)
         Group Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate))
         ->  Incremental Sort  (cost=22670.82..122661.79 rows=94 width=81) (actual time=127.459..131.167 rows=1210 loops=1)
               Sort Key: nation.n_name, (EXTRACT(year FROM orders.o_orderdate)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 29kB  Peak Memory: 29kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 1422kB  Peak Memory: 1422kB
               ->  Nested Loop  (cost=18504.60..122659.21 rows=94 width=81) (actual time=51.113..123.183 rows=13629 loops=1)
                     ->  Nested Loop  (cost=18504.17..122363.22 rows=94 width=53) (actual time=51.103..75.718 rows=13629 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=18503.74..22180.58 rows=31570 width=48) (actual time=51.071..55.500 rows=1812 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Sort  (cost=17503.71..17536.60 rows=13154 width=48) (actual time=48.048..48.145 rows=1094 loops=3)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 1456kB
                                       Worker 0:  Sort Method: quicksort  Memory: 1375kB
                                       Worker 1:  Sort Method: quicksort  Memory: 1382kB
                                       ->  Hash Join  (cost=449.99..16603.77 rows=13154 width=48) (actual time=2.778..39.893 rows=14507 loops=3)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Hash Join  (cost=448.43..16561.83 rows=13154 width=26) (actual time=2.705..37.151 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..16079.29 rows=13154 width=18) (actual time=0.029..30.344 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=3367 width=4) (actual time=0.007..13.430 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..3.21 rows=4 width=14) (actual time=0.003..0.004 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.581..2.582 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.402 rows=10000 loops=3)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.021 rows=25 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.011..0.013 rows=25 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..3.16 rows=1 width=29) (actual time=0.004..0.009 rows=8 loops=1812)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..3.15 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=13629)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.016 ms
 Execution Time: 132.072 ms
(41 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103092.67..103092.72 rows=20 width=202) (actual time=1997.405..2002.338 rows=20 loops=1)
   ->  Sort  (cost=103092.67..103237.56 rows=57957 width=202) (actual time=1997.404..2002.335 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=100825.99..101550.46 rows=57957 width=202) (actual time=1966.372..1990.921 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6688.48..100101.53 rows=57957 width=182) (actual time=60.862..1864.494 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5688.48..93305.83 rows=18696 width=182) (actual time=49.519..1912.038 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5686.91..93246.87 rows=18696 width=160) (actual time=49.376..1902.667 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=683.66..88194.54 rows=18696 width=16) (actual time=14.122..1845.631 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=683.23..27099.03 rows=18987 width=8) (actual time=13.101..233.012 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4922
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..668.52 rows=58859 width=0) (actual time=9.266..9.267 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.108..0.112 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=34.834..34.835 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.141..13.899 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.066..0.067 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.055..0.058 rows=25 loops=4)
 Planning Time: 19.878 ms
 Execution Time: 2003.006 ms
(32 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103092.67..103092.72 rows=20 width=202) (actual time=217.705..221.749 rows=20 loops=1)
   ->  Sort  (cost=103092.67..103237.56 rows=57957 width=202) (actual time=217.703..221.745 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=100825.99..101550.46 rows=57957 width=202) (actual time=186.170..210.221 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 24081kB
               ->  Gather  (cost=6688.48..100101.53 rows=57957 width=182) (actual time=41.983..108.355 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5688.48..93305.83 rows=18696 width=182) (actual time=38.513..149.575 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5686.91..93246.87 rows=18696 width=160) (actual time=38.423..143.526 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=683.66..88194.54 rows=18696 width=16) (actual time=10.550..101.796 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=683.23..27099.03 rows=18987 width=8) (actual time=10.478..27.224 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=2363
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..668.52 rows=58859 width=0) (actual time=7.117..7.117 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.21 rows=1 width=16) (actual time=0.004..0.005 rows=2 loops=57111)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Filter: (l_returnflag = 'R'::bpchar)
                                             Rows Removed by Filter: 2
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=27.508..27.508 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.006..7.609 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.021..0.021 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.012 rows=25 loops=4)
 Planning Time: 1.537 ms
 Execution Time: 222.158 ms
(32 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15990.65..15990.65 rows=1 width=36) (actual time=715.070..715.075 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7688.65..7688.66 rows=1 width=32) (actual time=25.187..25.189 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7448.65 rows=32000 width=10) (actual time=0.056..18.008 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.280 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.013 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.037..0.225 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.98..8328.65 rows=10667 width=36) (actual time=715.069..715.070 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.65..8248.65 rows=10667 width=36) (actual time=704.947..714.929 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7448.65 rows=32000 width=14) (actual time=1.189..648.814 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.766..4.362 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.260..0.264 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.501..4.001 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.288..0.288 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.044..1.551 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.157 ms
 Execution Time: 715.434 ms
(37 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=15990.65..15990.65 rows=1 width=36) (actual time=80.255..80.260 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=7688.65..7688.66 rows=1 width=32) (actual time=25.367..25.370 rows=1 loops=1)
           ->  Nested Loop  (cost=5.31..7448.65 rows=32000 width=10) (actual time=0.055..18.100 rows=32880 loops=1)
                 ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.048..0.278 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.014 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=4.88..223.76 rows=400 width=8) (actual time=0.036..0.223 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.018..0.018 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..17.25 rows=80 width=14) (actual time=0.002..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=8301.98..8328.65 rows=10667 width=36) (actual time=80.254..80.256 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=7768.65..8248.65 rows=10667 width=36) (actual time=69.956..80.108 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > (InitPlan 1).col1)
               Batches: 1  Memory Usage: 13841kB
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=5.31..7448.65 rows=32000 width=14) (actual time=0.068..26.906 rows=32880 loops=1)
                     ->  Nested Loop  (cost=4.88..229.08 rows=400 width=4) (actual time=0.055..0.407 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.012..0.016 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=8) (actual time=0.040..0.341 rows=411 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=183
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.019..0.019 rows=411 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..17.25 rows=80 width=18) (actual time=0.003..0.055 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.974 ms
 Execution Time: 80.659 ms
(37 rows)

query 12 run 1
SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147788.15..161299.01 rows=1 width=27) (actual time=1912.282..1915.720 rows=1 loops=1)
   ->  GroupAggregate  (cost=147788.15..242364.15 rows=7 width=27) (actual time=1912.281..1915.719 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147788.15..241854.78 rows=29103 width=27) (actual time=884.767..1905.194 rows=15492 loops=1)
               ->  Gather Merge  (cost=147787.72..151273.44 rows=29112 width=15) (actual time=884.135..895.714 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146787.66..146805.86 rows=7278 width=15) (actual time=868.953..869.302 rows=4219 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 391kB
                           Worker 0:  Sort Method: quicksort  Memory: 385kB
                           Worker 1:  Sort Method: quicksort  Memory: 382kB
                           Worker 2:  Sort Method: quicksort  Memory: 389kB
                           Worker 3:  Sort Method: quicksort  Memory: 384kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.81 rows=7278 width=15) (actual time=0.859..867.277 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.064..0.064 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 14.687 ms
 Execution Time: 1916.919 ms
(21 rows)

SET
SET
SET
                                                                                                                    QUERY PLAN                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=147788.15..161299.01 rows=1 width=27) (actual time=399.838..401.002 rows=1 loops=1)
   ->  GroupAggregate  (cost=147788.15..242364.15 rows=7 width=27) (actual time=399.837..401.000 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=147788.15..241854.78 rows=29103 width=27) (actual time=351.305..395.988 rows=15492 loops=1)
               ->  Gather Merge  (cost=147787.72..151273.44 rows=29112 width=15) (actual time=351.248..355.805 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=146787.66..146805.86 rows=7278 width=15) (actual time=346.691..346.912 rows=4182 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 368kB
                           Worker 0:  Sort Method: quicksort  Memory: 391kB
                           Worker 1:  Sort Method: quicksort  Memory: 347kB
                           Worker 2:  Sort Method: quicksort  Memory: 417kB
                           Worker 3:  Sort Method: quicksort  Memory: 407kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..146320.81 rows=7278 width=15) (actual time=0.095..344.599 rows=6191 loops=5)
                                 Filter: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Rows Removed by Filter: 1194052
               ->  Index Scan using orders_pkey on orders  (cost=0.43..3.11 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.817 ms
 Execution Time: 401.054 ms
(21 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1378.679..1378.682 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1378.677..1378.680 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1378.653..1378.660 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1339.336..1361.952 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=35.109..998.245 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.618..578.020 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=34.128..34.129 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.015..17.131 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.984 ms
 Execution Time: 1380.394 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=64702.50..64702.50 rows=1 width=16) (actual time=1245.688..1245.691 rows=1 loops=1)
   ->  Sort  (cost=64702.50..64703.00 rows=200 width=16) (actual time=1245.687..1245.690 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=64699.50..64701.50 rows=200 width=16) (actual time=1245.662..1245.669 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=60949.50..62449.50 rows=150000 width=12) (actual time=1206.389..1229.009 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 16401kB
                     ->  Hash Right Join  (cost=4746.42..53525.26 rows=1484848 width=8) (actual time=30.141..877.496 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1484848 width=8) (actual time=0.015..479.661 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=2871.42..2871.42 rows=150000 width=4) (actual time=29.679..29.680 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..2871.42 rows=150000 width=4) (actual time=0.017..13.429 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.782 ms
 Execution Time: 1246.844 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75973.20..75973.22 rows=1 width=32) (actual time=559.371..568.196 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=75973.20..75973.22 rows=1 width=32) (actual time=559.370..568.194 rows=1 loops=1)
         ->  Gather  (cost=75972.75..75973.16 rows=4 width=64) (actual time=558.497..568.178 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=74972.75..74972.76 rows=1 width=64) (actual time=546.571..546.573 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7253.56..74625.47 rows=19844 width=33) (actual time=60.766..531.786 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1279.56..68599.16 rows=19930 width=16) (actual time=20.687..475.474 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8878
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1259.63 rows=79720 width=0) (actual time=13.679..13.679 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=39.622..39.623 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.096..23.278 rows=40000 loops=5)
 Planning Time: 15.080 ms
 Execution Time: 568.243 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=75973.20..75973.22 rows=1 width=32) (actual time=116.990..119.318 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=75973.20..75973.22 rows=1 width=32) (actual time=116.989..119.316 rows=1 loops=1)
         ->  Gather  (cost=75972.75..75973.16 rows=4 width=64) (actual time=111.111..119.296 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=74972.75..74972.76 rows=1 width=64) (actual time=107.018..107.021 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7253.56..74625.47 rows=19844 width=33) (actual time=39.910..98.563 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1279.56..68599.16 rows=19930 width=16) (actual time=14.586..62.970 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8685
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1259.63 rows=79720 width=0) (actual time=8.205..8.205 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=24.886..24.887 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.011..6.661 rows=40000 loops=5)
 Planning Time: 1.063 ms
 Execution Time: 119.355 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241810.11..241917.69 rows=1 width=103) (actual time=1295.936..1302.945 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122302.88..122302.89 rows=1 width=32) (actual time=233.815..233.817 rows=1 loops=1)
           ->  HashAggregate  (cost=122052.18..122177.53 rows=10028 width=36) (actual time=230.563..233.231 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3709.38..119739.06 rows=231312 width=16) (actual time=27.798..121.705 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.55 rows=231312 width=0) (actual time=17.148..17.148 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119507.22..124886.12 rows=50 width=103) (actual time=1295.935..1302.941 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119506.94..124760.99 rows=50 width=36) (actual time=1295.351..1302.355 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119506.94..124309.73 rows=40112 width=36) (actual time=1038.809..1053.393 rows=41792 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118506.88..118531.95 rows=10028 width=36) (actual time=1026.708..1027.559 rows=8786 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1236kB
                           Worker 0:  Sort Method: quicksort  Memory: 1235kB
                           Worker 1:  Sort Method: quicksort  Memory: 1233kB
                           Worker 2:  Sort Method: quicksort  Memory: 1235kB
                           Worker 3:  Sort Method: quicksort  Memory: 1234kB
                           ->  Partial HashAggregate  (cost=117715.08..117840.43 rows=10028 width=36) (actual time=1019.523..1024.463 rows=9892 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3709.38..117136.80 rows=57828 width=16) (actual time=40.728..968.544 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13638
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.55 rows=231312 width=0) (actual time=37.176..37.176 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.578..0.579 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 11.421 ms
 Execution Time: 1303.925 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=241810.11..241917.69 rows=1 width=103) (actual time=391.642..405.816 rows=1 loops=1)
   InitPlan 1
     ->  Aggregate  (cost=122302.88..122302.89 rows=1 width=32) (actual time=216.526..216.527 rows=1 loops=1)
           ->  HashAggregate  (cost=122052.18..122177.53 rows=10028 width=36) (actual time=213.305..215.928 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=3709.38..119739.06 rows=231312 width=16) (actual time=27.763..106.687 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.55 rows=231312 width=0) (actual time=17.128..17.128 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119507.22..124886.12 rows=50 width=103) (actual time=391.641..405.813 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119506.94..124760.99 rows=50 width=36) (actual time=391.615..405.786 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = (InitPlan 1).col1)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119506.94..124309.73 rows=40112 width=36) (actual time=152.738..174.331 rows=41452 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118506.88..118531.95 rows=10028 width=36) (actual time=144.800..145.645 rows=8819 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1235kB
                           Worker 0:  Sort Method: quicksort  Memory: 1220kB
                           Worker 1:  Sort Method: quicksort  Memory: 1202kB
                           Worker 2:  Sort Method: quicksort  Memory: 1241kB
                           Worker 3:  Sort Method: quicksort  Memory: 1241kB
                           ->  Partial HashAggregate  (cost=117715.08..117840.43 rows=10028 width=36) (actual time=137.646..142.775 rows=9813 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=3709.38..117136.80 rows=57828 width=16) (actual time=31.084..99.400 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13734
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3651.55 rows=231312 width=0) (actual time=24.769..24.769 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..2.49 rows=1 width=71) (actual time=0.022..0.022 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 0.762 ms
 Execution Time: 406.207 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26500.56..26500.56 rows=1 width=44) (actual time=289.463..290.165 rows=1 loops=1)
   ->  Sort  (cost=26500.56..26540.52 rows=15984 width=44) (actual time=289.462..290.163 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18743.06..26420.64 rows=15984 width=44) (actual time=212.670..286.850 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18743.06..25681.33 rows=57947 width=40) (actual time=212.654..266.997 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17743.00..17779.22 rows=14487 width=40) (actual time=181.975..183.342 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2246kB
                           Worker 0:  Sort Method: quicksort  Memory: 2292kB
                           Worker 1:  Sort Method: quicksort  Memory: 2104kB
                           Worker 2:  Sort Method: quicksort  Memory: 2355kB
                           Worker 3:  Sort Method: quicksort  Memory: 1806kB
                           ->  Parallel Hash Join  (cost=6685.27..16741.77 rows=14487 width=40) (actual time=37.661..109.346 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=6.242..60.222 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.905..5.567 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12361 width=40) (actual time=31.244..31.244 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12361 width=40) (actual time=0.731..28.875 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 17.097 ms
 Execution Time: 290.751 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=26500.56..26500.56 rows=1 width=44) (actual time=253.347..253.769 rows=1 loops=1)
   ->  Sort  (cost=26500.56..26540.52 rows=15984 width=44) (actual time=253.346..253.767 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=18743.06..26420.64 rows=15984 width=44) (actual time=176.486..250.492 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=18743.06..25681.33 rows=57947 width=40) (actual time=176.468..230.077 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=17743.00..17779.22 rows=14487 width=40) (actual time=153.255..154.594 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size, partsupp.ps_suppkey
                           Sort Method: quicksort  Memory: 2168kB
                           Worker 0:  Sort Method: quicksort  Memory: 2196kB
                           Worker 1:  Sort Method: quicksort  Memory: 1901kB
                           Worker 2:  Sort Method: quicksort  Memory: 2360kB
                           Worker 3:  Sort Method: quicksort  Memory: 2178kB
                           ->  Parallel Hash Join  (cost=6685.27..16741.77 rows=14487 width=40) (actual time=18.404..76.500 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..10142.43 rows=100000 width=8) (actual time=3.164..43.029 rows=159936 loops=5)
                                       Filter: (NOT (ANY (ps_suppkey = (hashed SubPlan 1).col1)))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.088..2.887 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12361 width=40) (actual time=15.078..15.078 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12361 width=40) (actual time=0.020..12.290 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 0.884 ms
 Execution Time: 253.826 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217744.49..217744.50 rows=1 width=32) (actual time=4062.460..4066.794 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217744.49..217744.50 rows=1 width=32) (actual time=4062.459..4066.792 rows=1 loops=1)
         ->  Gather  (cost=217744.26..217744.47 rows=2 width=32) (actual time=4055.849..4066.769 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216744.26..216744.27 rows=1 width=32) (actual time=4046.501..4046.503 rows=1 loops=3)
                     ->  Nested Loop  (cost=208113.03..216742.30 rows=784 width=8) (actual time=3977.759..4046.419 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=208112.60..213461.81 rows=79 width=40) (actual time=3977.474..3995.267 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=78 width=4) (actual time=0.485..18.195 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205601.79..205601.79 rows=200865 width=36) (actual time=3976.462..3976.462 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202588.81..205601.79 rows=200865 width=36) (actual time=3475.875..3940.606 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39824kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172579.21 rows=6001921 width=9) (actual time=0.470..808.352 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.585..0.735 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 16.749 ms
 Execution Time: 4074.632 ms
(27 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=217744.49..217744.50 rows=1 width=32) (actual time=3713.708..3715.996 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=217744.49..217744.50 rows=1 width=32) (actual time=3713.706..3715.993 rows=1 loops=1)
         ->  Gather  (cost=217744.26..217744.47 rows=2 width=32) (actual time=3707.036..3715.980 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=216744.26..216744.27 rows=1 width=32) (actual time=3702.919..3702.922 rows=1 loops=3)
                     ->  Nested Loop  (cost=208113.03..216742.30 rows=784 width=8) (actual time=3692.229..3702.889 rows=197 loops=3)
                           Join Filter: (lineitem.l_partkey = part.p_partkey)
                           ->  Hash Join  (cost=208112.60..213461.81 rows=79 width=40) (actual time=3692.186..3701.242 rows=69 loops=3)
                                 Hash Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=78 width=4) (actual time=0.080..9.094 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
                                 ->  Hash  (cost=205601.79..205601.79 rows=200865 width=36) (actual time=3691.444..3691.445 rows=200000 loops=3)
                                       Buckets: 262144  Batches: 1  Memory Usage: 11623kB
                                       ->  HashAggregate  (cost=202588.81..205601.79 rows=200865 width=36) (actual time=3189.305..3655.636 rows=200000 loops=3)
                                             Group Key: lineitem_1.l_partkey
                                             Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 0:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             Worker 1:  Batches: 5  Memory Usage: 65585kB  Disk Usage: 39832kB
                                             ->  Seq Scan on lineitem lineitem_1  (cost=0.00..172579.21 rows=6001921 width=9) (actual time=0.119..537.303 rows=6001215 loops=3)
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..41.40 rows=10 width=17) (actual time=0.010..0.023 rows=3 loops=208)
                                 Index Cond: (l_partkey = lineitem_1.l_partkey)
                                 Filter: (l_quantity < ((0.2 * avg(lineitem_1.l_quantity))))
                                 Rows Removed by Filter: 27
 Planning Time: 0.975 ms
 Execution Time: 3722.624 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794726.20..794726.45 rows=100 width=71) (actual time=4434.518..4434.524 rows=9 loops=1)
   ->  Sort  (cost=794726.20..799727.80 rows=2000640 width=71) (actual time=4434.516..4434.521 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658087.68..718263.18 rows=2000640 width=71) (actual time=4433.771..4434.472 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335226.02..550318.83 rows=2000640 width=44) (actual time=3709.507..4433.695 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172579.21 rows=6001921 width=9) (actual time=0.731..297.208 rows=6001215 loops=1)
                     ->  Hash  (cost=328974.02..328974.02 rows=500160 width=43) (actual time=3515.227..3515.231 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282592.55..328974.02 rows=500160 width=43) (actual time=3203.961..3515.203 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275620.55..320689.06 rows=500160 width=24) (actual time=3141.391..3452.622 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.763..226.070 rows=1500000 loops=1)
                                       ->  Hash  (cost=269368.55..269368.55 rows=500160 width=4) (actual time=3053.099..3053.100 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269368.55 rows=500160 width=4) (actual time=652.147..3053.074 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216851.75 rows=6001921 width=9) (actual time=0.019..1675.591 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=62.249..62.250 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.543..36.986 rows=150000 loops=1)
 Planning Time: 19.739 ms
 Execution Time: 4436.521 ms
(29 rows)

SET
SET
SET
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=794726.20..794726.45 rows=100 width=71) (actual time=3397.094..3397.100 rows=9 loops=1)
   ->  Sort  (cost=794726.20..799727.80 rows=2000640 width=71) (actual time=3397.093..3397.098 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=658087.68..718263.18 rows=2000640 width=71) (actual time=3396.352..3397.051 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 16  Batches: 1  Memory Usage: 6169kB
               ->  Hash Join  (cost=335226.02..550318.83 rows=2000640 width=44) (actual time=2668.863..3396.278 rows=63 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172579.21 rows=6001921 width=9) (actual time=0.018..296.959 rows=6001215 loops=1)
                     ->  Hash  (cost=328974.02..328974.02 rows=500160 width=43) (actual time=2474.520..2474.524 rows=9 loops=1)
                           Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                           ->  Hash Join  (cost=282592.55..328974.02 rows=500160 width=43) (actual time=2272.738..2474.501 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=275620.55..320689.06 rows=500160 width=24) (actual time=2228.922..2430.677 rows=9 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.007..81.683 rows=1500000 loops=1)
                                       ->  Hash  (cost=269368.55..269368.55 rows=500160 width=4) (actual time=2174.453..2174.454 rows=9 loops=1)
                                             Buckets: 524288  Batches: 1  Memory Usage: 4097kB
                                             ->  GroupAggregate  (cost=0.43..269368.55 rows=500160 width=4) (actual time=459.485..2174.433 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..216851.75 rows=6001921 width=9) (actual time=0.017..879.676 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=43.456..43.457 rows=150000 loops=1)
                                       Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.014..18.991 rows=150000 loops=1)
 Planning Time: 1.384 ms
 Execution Time: 3398.212 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=18106.95..18106.96 rows=1 width=32) (actual time=870.095..871.867 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18106.95..18106.96 rows=1 width=32) (actual time=870.094..871.865 rows=1 loops=1)
         ->  Gather  (cost=18106.72..18106.93 rows=2 width=32) (actual time=870.080..871.857 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17106.72..17106.73 rows=1 width=32) (actual time=859.945..859.946 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17106.37 rows=47 width=12) (actual time=15.003..859.837 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=203 width=30) (actual time=0.765..26.592 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.62 rows=1 width=21) (actual time=4.408..4.929 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 18.138 ms
 Execution Time: 872.676 ms
(16 rows)

SET
SET
SET


 Limit  (cost=18106.95..18106.96 rows=1 width=32) (actual time=28.249..31.871 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=18106.95..18106.96 rows=1 width=32) (actual time=28.248..31.870 rows=1 loops=1)
         ->  Gather  (cost=18106.72..18106.93 rows=2 width=32) (actual time=28.153..31.862 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=17106.72..17106.73 rows=1 width=32) (actual time=25.590..25.591 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.43..17106.37 rows=47 width=12) (actual time=0.684..25.553 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=203 width=30) (actual time=0.146..16.975 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..46.62 rows=1 width=21) (actual time=0.045..0.050 rows=0 loops=507)
                                 Index Cond: (l_partkey = part.p_partkey)
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 30
 Planning Time: 1.002 ms
 Execution Time: 31.917 ms
(16 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=212743.69..212743.70 rows=1 width=51) (actual time=3729.893..3729.977 rows=1 loops=1)
   ->  Sort  (cost=212743.69..212743.70 rows=1 width=51) (actual time=3729.892..3729.975 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=187452.64..212743.68 rows=1 width=51) (actual time=3563.869..3729.782 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.643..3.149 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.313..0.316 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.324..2.127 rows=10000 loops=1)
               ->  Materialize  (cost=187452.64..212288.37 rows=1 width=8) (actual time=5.693..8.275 rows=4340 loops=438)
                     ->  Nested Loop  (cost=187452.64..212288.37 rows=1 width=8) (actual time=2493.551..3557.181 rows=5898 loops=1)
                           ->  Hash Join  (cost=187452.21..205234.75 rows=4950 width=44) (actual time=2493.012..3039.044 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=181084.30..197580.23 rows=490123 width=40) (actual time=2455.861..2953.745 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=15013.07..141618.40 rows=936355 width=13) (actual time=124.855..1964.071 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14778.98 rows=936355 width=0) (actual time=105.023..105.023 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=37.128..37.209 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=2.510..36.802 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.207..22.768 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.41 rows=1 width=12) (actual time=0.087..0.087 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 21.723 ms
 Execution Time: 3735.234 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=212743.69..212743.70 rows=1 width=51) (actual time=1363.156..1363.237 rows=1 loops=1)
   ->  Sort  (cost=212743.69..212743.70 rows=1 width=51) (actual time=1363.155..1363.236 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=187452.64..212743.68 rows=1 width=51) (actual time=1199.212..1363.049 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1900820
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.024..1.582 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.014..0.017 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.652 rows=10000 loops=1)
               ->  Materialize  (cost=187452.64..212288.37 rows=1 width=8) (actual time=1.600..2.879 rows=4340 loops=438)
                     ->  Nested Loop  (cost=187452.64..212288.37 rows=1 width=8) (actual time=700.979..1196.040 rows=5898 loops=1)
                           ->  Hash Join  (cost=187452.21..205234.75 rows=4950 width=44) (actual time=700.958..1173.975 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=181084.30..197580.23 rows=490123 width=40) (actual time=689.070..1125.026 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 4  Batches: 5  Memory Usage: 65585kB  Disk Usage: 24072kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=15013.07..141618.40 rows=936355 width=13) (actual time=87.510..301.035 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..14778.98 rows=936355 width=0) (actual time=68.374..68.374 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=6342.67..6342.67 rows=2020 width=4) (actual time=11.868..11.946 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.345..11.628 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.036..8.741 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..1.41 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: (ps_partkey = lineitem.l_partkey)
                                 Filter: ((ps_suppkey = lineitem.l_suppkey) AND ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                                 Rows Removed by Filter: 2
 Planning Time: 1.734 ms
 Execution Time: 1367.547 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194022.38..194022.39 rows=1 width=34) (actual time=1444.149..1444.270 rows=100 loops=1)
   ->  Sort  (cost=194022.38..194022.39 rows=1 width=34) (actual time=1444.148..1444.263 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194022.35..194022.37 rows=1 width=34) (actual time=1443.147..1443.857 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194022.35..194022.36 rows=1 width=26) (actual time=1443.139..1443.413 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194022.34 rows=1 width=26) (actual time=13.353..1430.489 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194018.95 rows=1 width=38) (actual time=13.038..1348.878 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194015.64 rows=1 width=34) (actual time=10.835..33.304 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193015.54 rows=1 width=34) (actual time=4.201..626.373 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133625.19 rows=19950 width=34) (actual time=2.817..525.564 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131316.00 rows=500160 width=8) (actual time=0.988..462.482 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=1.715..1.716 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.426..1.637 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.178..0.181 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.246..1.400 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.128..0.128 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.091..0.091 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.011..0.011 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 16.561 ms
 Execution Time: 1445.189 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=194022.38..194022.39 rows=1 width=34) (actual time=474.763..474.878 rows=100 loops=1)
   ->  Sort  (cost=194022.38..194022.39 rows=1 width=34) (actual time=474.762..474.871 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 36kB
         ->  GroupAggregate  (cost=194022.35..194022.37 rows=1 width=34) (actual time=473.754..474.458 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=194022.35..194022.36 rows=1 width=26) (actual time=473.742..474.011 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 193kB
                     ->  Nested Loop Semi Join  (cost=1235.37..194022.34 rows=1 width=26) (actual time=1.723..460.896 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 4309
                           ->  Nested Loop  (cost=1234.94..194018.95 rows=1 width=38) (actual time=1.507..438.268 rows=6909 loops=1)
                                 ->  Gather  (cost=1234.51..194015.64 rows=1 width=34) (actual time=1.492..392.791 rows=14289 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Nested Loop Anti Join  (cost=234.51..193015.54 rows=1 width=34) (actual time=0.796..441.073 rows=2858 loops=5)
                                             ->  Hash Join  (cost=234.08..133625.19 rows=19950 width=34) (actual time=0.534..340.561 rows=31833 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Seq Scan on lineitem l1  (cost=0.00..131316.00 rows=500160 width=8) (actual time=0.033..266.361 rows=758659 loops=5)
                                                         Filter: (l_receiptdate > l_commitdate)
                                                         Rows Removed by Filter: 441584
                                                   ->  Hash  (cost=229.08..229.08 rows=400 width=30) (actual time=0.417..0.418 rows=421 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=4.88..229.08 rows=400 width=30) (actual time=0.061..0.352 rows=421 loops=5)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.012 rows=1 loops=5)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=4.88..223.76 rows=400 width=34) (actual time=0.049..0.293 rows=421 loops=5)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..4.79 rows=400 width=0) (actual time=0.025..0.025 rows=421 loops=5)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..3.39 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=159165)
                                                   Index Cond: (l_orderkey = l1.l_orderkey)
                                                   Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                                   Rows Removed by Filter: 1
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..3.31 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=14289)
                                       Index Cond: (o_orderkey = l1.l_orderkey)
                                       Filter: (o_orderstatus = 'F'::bpchar)
                                       Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..3.37 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 2.679 ms
 Execution Time: 474.964 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.20 rows=1 width=72) (actual time=163.623..165.417 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=43.203..43.284 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=43.075..43.272 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=34.611..34.611 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.194..33.387 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7461.12 rows=727 width=72) (actual time=163.622..165.333 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7442.95 rows=727 width=38) (actual time=68.215..164.790 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=67.613..70.778 rows=2735 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=21.603..21.753 rows=1518 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 531kB
                           Worker 0:  Sort Method: quicksort  Memory: 474kB
                           Worker 1:  Sort Method: quicksort  Memory: 467kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..19.634 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.034..0.034 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 13.907 ms
 Execution Time: 165.489 ms
(29 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.56..12517.20 rows=1 width=72) (actual time=59.022..60.632 rows=1 loops=1)
   InitPlan 1
     ->  Finalize Aggregate  (cost=6242.81..6242.82 rows=1 width=32) (actual time=28.687..28.767 rows=1 loops=1)
           ->  Gather  (cost=6242.59..6242.80 rows=2 width=32) (actual time=28.587..28.757 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.59..5242.60 rows=1 width=32) (actual time=26.305..26.306 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1986 width=6) (actual time=0.021..25.182 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7461.12 rows=727 width=72) (actual time=59.021..60.551 rows=1 loops=1)
         Group Key: SUBSTRING(customer.c_phone FROM 1 FOR 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7442.95 rows=727 width=38) (actual time=52.425..60.304 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=52.401..54.665 rows=2735 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=20.927..21.007 rows=1542 loops=3)
                           Sort Key: (SUBSTRING(customer.c_phone FROM 1 FOR 2))
                           Sort Method: quicksort  Memory: 553kB
                           Worker 0:  Sort Method: quicksort  Memory: 451kB
                           Worker 1:  Sort Method: quicksort  Memory: 467kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.022..18.947 rows=6359 loops=3)
                                 Filter: ((c_acctbal > (InitPlan 1).col1) AND (SUBSTRING(c_phone FROM 1 FOR 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..1.68 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2735)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.967 ms
 Execution Time: 60.907 ms
(29 rows)

