query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191632.84..191633.04 rows=1 width=236) (actual time=2782.821..2782.821 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191632.84..191634.08 rows=6 width=236) (actual time=2782.820..2782.820 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191632.84..191632.90 rows=24 width=236) (actual time=2782.797..2782.797 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191629.72..191632.29 rows=24 width=236) (actual time=2782.390..2783.434 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190629.72..190629.89 rows=6 width=236) (actual time=2775.441..2775.451 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=1482916 width=25) (actual time=0.072..542.851 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 18.131 ms
 Execution time: 2783.593 ms
(16 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191632.84..191633.04 rows=1 width=236) (actual time=2602.455..2602.455 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191632.84..191634.08 rows=6 width=236) (actual time=2602.454..2602.454 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Sort  (cost=191632.84..191632.90 rows=24 width=236) (actual time=2602.431..2602.433 rows=6 loops=1)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 35kB
               ->  Gather  (cost=191629.72..191632.29 rows=24 width=236) (actual time=2602.027..2603.320 rows=20 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial HashAggregate  (cost=190629.72..190629.89 rows=6 width=236) (actual time=2598.726..2598.736 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=1482916 width=25) (actual time=0.026..365.937 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning time: 0.972 ms
 Execution time: 2603.706 ms
(16 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18881.82..18881.83 rows=1 width=192) (actual time=171.085..171.096 rows=100 loops=1)
   ->  Sort  (cost=18881.82..18881.83 rows=1 width=192) (actual time=171.083..171.090 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.16..18881.81 rows=1 width=192) (actual time=6.663..170.710 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.009..0.016 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
               ->  Materialize  (cost=15.16..18879.11 rows=1 width=170) (actual time=0.658..34.057 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.16..18879.11 rows=1 width=170) (actual time=3.286..169.831 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.88..18877.83 rows=1 width=34) (actual time=2.938..134.979 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5476.01 rows=823 width=30) (actual time=0.826..24.955 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.46..16.27 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=32) (actual time=0.134..0.134 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.122..0.132 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.100..0.129 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.098..0.123 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.093..0.094 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.006..0.007 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.070..0.071 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 22.390 ms
 Execution time: 171.179 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18881.82..18881.83 rows=1 width=192) (actual time=22.661..22.674 rows=100 loops=1)
   ->  Sort  (cost=18881.82..18881.83 rows=1 width=192) (actual time=22.660..22.667 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Nested Loop  (cost=15.16..18881.81 rows=1 width=192) (actual time=0.172..22.347 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.007..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=15.16..18879.11 rows=1 width=170) (actual time=0.015..4.406 rows=489 loops=5)
                     ->  Nested Loop  (cost=15.16..18879.11 rows=1 width=170) (actual time=0.072..21.803 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.88..18877.83 rows=1 width=34) (actual time=0.068..20.732 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5476.01 rows=823 width=30) (actual time=0.015..6.317 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=14.46..16.27 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=14.02..14.03 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.97..14.02 rows=1 width=6) (actual time=0.011..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.97..12.91 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.83..12.24 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.41..2.43 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning time: 2.289 ms
 Execution time: 22.746 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=268846.99..268847.01 rows=10 width=44) (actual time=1561.635..1561.637 rows=10 loops=1)
   ->  Sort  (cost=268846.99..269629.43 rows=312976 width=44) (actual time=1561.634..1561.635 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=252694.41..262083.69 rows=312976 width=44) (actual time=1540.552..1559.393 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=252694.41..253476.85 rows=312976 width=24) (actual time=1540.532..1542.645 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Gather  (cost=57681.24..224126.44 rows=312976 width=24) (actual time=658.151..1531.701 rows=30533 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=56681.24..191828.84 rows=78244 width=24) (actual time=649.578..1521.051 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=813924 width=16) (actual time=0.059..810.397 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Hash  (cost=54878.76..54878.76 rows=144198 width=12) (actual time=647.364..647.364 rows=146063 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                       ->  Hash Join  (cost=5846.19..54878.76 rows=144198 width=12) (actual time=62.516..619.106 rows=146063 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Seq Scan on orders  (cost=0.00..44881.00 rows=722558 width=16) (actual time=0.032..414.491 rows=722275 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 777725
                                             ->  Hash  (cost=5472.00..5472.00 rows=29935 width=4) (actual time=62.414..62.414 rows=30142 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                   ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29935 width=4) (actual time=0.015..57.690 rows=30142 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 119858
 Planning time: 24.132 ms
 Execution time: 1561.793 ms
(31 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=268846.99..268847.01 rows=10 width=44) (actual time=889.119..889.120 rows=10 loops=1)
   ->  Sort  (cost=268846.99..269629.43 rows=312976 width=44) (actual time=889.118..889.119 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=252694.41..262083.69 rows=312976 width=44) (actual time=868.031..887.082 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=252694.41..253476.85 rows=312976 width=24) (actual time=868.013..870.176 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Gather  (cost=57681.24..224126.44 rows=312976 width=24) (actual time=491.260..859.703 rows=30533 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Hash Join  (cost=56681.24..191828.84 rows=78244 width=24) (actual time=498.449..851.968 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.08 rows=813924 width=16) (actual time=1.052..286.337 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Hash  (cost=54878.76..54878.76 rows=144198 width=12) (actual time=496.773..496.773 rows=146063 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                       ->  Hash Join  (cost=5846.19..54878.76 rows=144198 width=12) (actual time=41.067..465.703 rows=146063 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Seq Scan on orders  (cost=0.00..44881.00 rows=722558 width=16) (actual time=0.020..254.487 rows=722275 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 777725
                                             ->  Hash  (cost=5472.00..5472.00 rows=29935 width=4) (actual time=41.022..41.022 rows=30142 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                                   ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29935 width=4) (actual time=0.013..35.020 rows=30142 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 119858
 Planning time: 1.286 ms
 Execution time: 889.282 ms
(31 rows)

query 4 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70567.02..70567.05 rows=1 width=24) (actual time=316.819..316.819 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70567.02..70567.18 rows=5 width=24) (actual time=316.819..316.819 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=70567.02..70567.05 rows=15 width=24) (actual time=316.815..316.815 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=70565.17..70566.72 rows=15 width=24) (actual time=315.926..322.260 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=69565.17..69565.22 rows=5 width=24) (actual time=307.403..307.404 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.43..69474.11 rows=18212 width=16) (actual time=0.293..301.927 rows=12850 loops=4)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18212 width=20) (actual time=0.030..191.959 rows=13993 loops=4)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 361007
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..2.23 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 21.994 ms
 Execution time: 323.177 ms
(20 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=70567.02..70567.05 rows=1 width=24) (actual time=102.335..102.336 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=70567.02..70567.18 rows=5 width=24) (actual time=102.334..102.334 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Sort  (cost=70567.02..70567.05 rows=15 width=24) (actual time=102.330..102.330 rows=5 loops=1)
               Sort Key: orders.o_orderpriority
               Sort Method: quicksort  Memory: 26kB
               ->  Gather  (cost=70565.17..70566.72 rows=15 width=24) (actual time=102.257..109.803 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial HashAggregate  (cost=69565.17..69565.22 rows=5 width=24) (actual time=99.867..99.868 rows=5 loops=4)
                           Group Key: orders.o_orderpriority
                           ->  Nested Loop Semi Join  (cost=0.43..69474.11 rows=18212 width=16) (actual time=0.030..96.498 rows=12850 loops=4)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18212 width=20) (actual time=0.011..64.427 rows=13993 loops=4)
                                       Filter: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                       Rows Removed by Filter: 361007
                                 ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..2.23 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=55973)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
 Planning time: 1.470 ms
 Execution time: 109.897 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79419.64..79419.64 rows=1 width=58) (actual time=570.389..570.389 rows=1 loops=1)
   ->  Sort  (cost=79419.64..79419.70 rows=25 width=58) (actual time=570.389..570.389 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=79418.45..79419.52 rows=25 width=58) (actual time=570.364..570.375 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=79418.45..79418.64 rows=75 width=58) (actual time=570.357..570.360 rows=20 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 27kB
                     ->  Gather  (cost=79378.34..79416.12 rows=75 width=58) (actual time=569.319..577.686 rows=20 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Partial GroupAggregate  (cost=78378.34..78408.62 rows=25 width=58) (actual time=563.560..564.438 rows=5 loops=4)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=78378.34..78384.34 rows=2397 width=38) (actual time=563.328..563.464 rows=1885 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 194kB
                                       ->  Hash Join  (cost=6810.59..78243.79 rows=2397 width=38) (actual time=74.882..562.184 rows=1885 loops=4)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=6337.59..77297.20 rows=59948 width=50) (actual time=71.168..548.532 rows=45609 loops=4)
                                                   ->  Hash Join  (cost=6337.03..40156.91 rows=14985 width=38) (actual time=70.159..267.394 rows=11324 loops=4)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=74923 width=8) (actual time=0.319..182.165 rows=56661 loops=4)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 318339
                                                         ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=69.801..69.801 rows=29952 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                               ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.240..63.753 rows=29952 loops=4)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.011..40.460 rows=150000 loops=4)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.224..0.224 rows=5 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.022..0.027 rows=5 loops=4)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=4)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.023..0.024 rows=4 loops=45297)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.619..3.619 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.016..2.304 rows=10000 loops=4)
 Planning time: 34.171 ms
 Execution time: 577.815 ms
(48 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79419.64..79419.64 rows=1 width=58) (actual time=178.858..178.858 rows=1 loops=1)
   ->  Sort  (cost=79419.64..79419.70 rows=25 width=58) (actual time=178.857..178.857 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=79418.45..79419.52 rows=25 width=58) (actual time=178.830..178.840 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=79418.45..79418.64 rows=75 width=58) (actual time=178.822..178.825 rows=20 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 27kB
                     ->  Gather  (cost=79378.34..79416.12 rows=75 width=58) (actual time=177.852..189.812 rows=20 loops=1)
                           Workers Planned: 3
                           Workers Launched: 3
                           ->  Partial GroupAggregate  (cost=78378.34..78408.62 rows=25 width=58) (actual time=175.177..176.059 rows=5 loops=4)
                                 Group Key: nation.n_name
                                 ->  Sort  (cost=78378.34..78384.34 rows=2397 width=38) (actual time=174.947..175.065 rows=1885 loops=4)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 196kB
                                       ->  Hash Join  (cost=6810.59..78243.79 rows=2397 width=38) (actual time=38.206..174.156 rows=1885 loops=4)
                                             Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                             ->  Nested Loop  (cost=6337.59..77297.20 rows=59948 width=50) (actual time=35.309..163.345 rows=45609 loops=4)
                                                   ->  Hash Join  (cost=6337.03..40156.91 rows=14985 width=38) (actual time=35.278..117.875 rows=11324 loops=4)
                                                         Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                         ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=74923 width=8) (actual time=0.011..69.487 rows=56661 loops=4)
                                                               Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                               Rows Removed by Filter: 318339
                                                         ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=35.202..35.202 rows=29952 loops=4)
                                                               Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                                               ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.341..29.862 rows=29952 loops=4)
                                                                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                                     ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.021..8.963 rows=150000 loops=4)
                                                                     ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.312..0.312 rows=5 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.020..0.028 rows=5 loops=4)
                                                                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.009 rows=25 loops=4)
                                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=4)
                                                                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=4)
                                                                                             Filter: (r_name = 'AMERICA'::bpchar)
                                                                                             Rows Removed by Filter: 4
                                                   ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.44 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.829..2.830 rows=10000 loops=4)
                                                   Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.571 rows=10000 loops=4)
 Planning time: 3.383 ms
 Execution time: 189.942 ms
(48 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116883.48..116883.49 rows=1 width=32) (actual time=1497.160..1497.161 rows=1 loops=1)
   ->  Aggregate  (cost=116883.48..116883.49 rows=1 width=32) (actual time=1497.159..1497.159 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22732.04..116289.58 rows=118779 width=12) (actual time=141.144..1387.629 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22702.35 rows=118779 width=0) (actual time=130.104..130.104 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 14.936 ms
 Execution time: 1497.224 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116883.48..116883.49 rows=1 width=32) (actual time=230.769..230.769 rows=1 loops=1)
   ->  Aggregate  (cost=116883.48..116883.49 rows=1 width=32) (actual time=230.768..230.768 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22732.04..116289.58 rows=118779 width=12) (actual time=110.663..187.702 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22702.35 rows=118779 width=0) (actual time=100.255..100.255 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning time: 0.834 ms
 Execution time: 231.030 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=195096.03..195096.07 rows=1 width=92) (actual time=1469.772..1469.772 rows=1 loops=1)
   ->  GroupAggregate  (cost=195096.03..195307.01 rows=6028 width=92) (actual time=1469.771..1469.771 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=195096.03..195111.10 rows=6028 width=72) (actual time=1468.825..1468.932 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Gather  (cost=56766.80..194717.55 rows=6028 width=72) (actual time=640.888..1469.390 rows=5729 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Hash Join  (cost=55766.80..193092.15 rows=1507 width=72) (actual time=635.690..1456.886 rows=1146 loops=5)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                           Rows Removed by Join Filter: 1165
                           ->  Hash Join  (cost=379.90..137503.99 rows=36212 width=46) (actual time=3.626..817.055 rows=28944 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.70 rows=452874 width=24) (actual time=0.794..774.878 rows=365690 loops=5)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 834553
                                 ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=2.684..2.684 rows=794 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.036..2.559 rows=794 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.013..1.331 rows=10000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.015..0.015 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.013 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=630.712..630.712 rows=118477 loops=5)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=68.368..604.933 rows=118477 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.021..322.316 rows=1500000 loops=5)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=68.333..68.333 rows=11896 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.025..66.100 rows=11896 loops=5)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..47.506 rows=150000 loops=5)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.011..0.011 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=5)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
 Planning time: 29.980 ms
 Execution time: 1473.319 ms
(45 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=195096.03..195096.07 rows=1 width=92) (actual time=844.081..844.081 rows=1 loops=1)
   ->  GroupAggregate  (cost=195096.03..195307.01 rows=6028 width=92) (actual time=844.081..844.082 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=195096.03..195111.10 rows=6028 width=72) (actual time=843.133..843.266 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Gather  (cost=56766.80..194717.55 rows=6028 width=72) (actual time=422.949..845.377 rows=5729 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Hash Join  (cost=55766.80..193092.15 rows=1507 width=72) (actual time=461.399..834.865 rows=1146 loops=5)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                           Rows Removed by Join Filter: 1165
                           ->  Hash Join  (cost=379.90..137503.99 rows=36212 width=46) (actual time=2.130..366.317 rows=28944 loops=5)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..135063.70 rows=452874 width=24) (actual time=0.033..318.166 rows=365690 loops=5)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 834553
                                 ->  Hash  (cost=369.90..369.90 rows=800 width=30) (actual time=1.980..1.980 rows=794 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 57kB
                                       ->  Hash Join  (cost=1.40..369.90 rows=800 width=30) (actual time=0.034..1.868 rows=794 loops=5)
                                             Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..0.613 rows=10000 loops=5)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.014..0.014 rows=2 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.009..0.011 rows=2 loops=5)
                                                         Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                         Rows Removed by Filter: 23
                           ->  Hash  (cost=53886.90..53886.90 rows=120000 width=30) (actual time=458.866..458.866 rows=118477 loops=5)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5930.90..53886.90 rows=120000 width=30) (actual time=43.411..430.599 rows=118477 loops=5)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.020..99.533 rows=1500000 loops=5)
                                       ->  Hash  (cost=5780.90..5780.90 rows=12000 width=30) (actual time=43.379..43.380 rows=11896 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5780.90 rows=12000 width=30) (actual time=0.021..41.520 rows=11896 loops=5)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..11.264 rows=150000 loops=5)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.010..0.010 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.007..0.009 rows=2 loops=5)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
 Planning time: 2.893 ms
 Execution time: 849.021 ms
(45 rows)

query 8 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=56172.40..56172.44 rows=1 width=40) (actual time=710.362..710.362 rows=1 loops=1)
   ->  GroupAggregate  (cost=56172.40..56279.41 rows=2378 width=40) (actual time=710.360..710.360 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=56172.40..56178.34 rows=2378 width=46) (actual time=709.448..709.547 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Gather  (cost=18174.15..56039.05 rows=2378 width=46) (actual time=497.663..712.514 rows=2485 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=17174.15..54793.19 rows=767 width=46) (actual time=492.374..702.495 rows=621 loops=4)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=17172.59..54777.25 rows=767 width=20) (actual time=492.272..701.700 rows=621 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=16724.59..54318.69 rows=768 width=20) (actual time=488.318..697.373 rows=621 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Hash Join  (cost=6337.03..40565.56 rows=29199 width=8) (actual time=65.202..270.514 rows=22795 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145994 width=12) (actual time=0.055..178.695 rows=114316 loops=4)
                                                   Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Rows Removed by Filter: 260684
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=65.099..65.099 rows=29952 loops=4)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.049..60.370 rows=29952 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.011..37.821 rows=150000 loops=4)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.031..0.031 rows=5 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.025..0.030 rows=5 loops=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.009 rows=25 loops=4)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                                       ->  Hash  (cost=9894.62..9894.62 rows=39435 width=20) (actual time=421.689..421.689 rows=39694 loops=4)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.98..9894.62 rows=39435 width=20) (actual time=3.428..411.822 rows=39694 loops=4)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.75 rows=1333 width=4) (actual time=2.071..20.956 rows=1320 loops=4)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.04 rows=30 width=24) (actual time=0.241..0.292 rows=30 loops=5280)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.890..3.891 rows=10000 loops=4)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..2.299 rows=10000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.026 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.013..0.017 rows=25 loops=4)
 Planning time: 32.196 ms
 Execution time: 714.240 ms
(52 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=56172.40..56172.44 rows=1 width=40) (actual time=164.204..164.204 rows=1 loops=1)
   ->  GroupAggregate  (cost=56172.40..56279.41 rows=2378 width=40) (actual time=164.204..164.204 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=56172.40..56178.34 rows=2378 width=46) (actual time=163.293..163.383 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Gather  (cost=18174.15..56039.05 rows=2378 width=46) (actual time=67.654..169.232 rows=2485 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=17174.15..54793.19 rows=767 width=46) (actual time=66.427..159.923 rows=621 loops=4)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Hash Join  (cost=17172.59..54777.25 rows=767 width=20) (actual time=66.314..159.430 rows=621 loops=4)
                                 Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                 ->  Hash Join  (cost=16724.59..54318.69 rows=768 width=20) (actual time=63.133..155.972 rows=621 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Hash Join  (cost=6337.03..40565.56 rows=29199 width=8) (actual time=34.269..123.301 rows=22795 loops=4)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=145994 width=12) (actual time=0.013..66.865 rows=114316 loops=4)
                                                   Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Rows Removed by Filter: 260684
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=34.202..34.202 rows=29952 loops=4)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.060..30.178 rows=29952 loops=4)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.024..9.196 rows=150000 loops=4)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.027..0.028 rows=5 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.021..0.026 rows=5 loops=4)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.003 rows=25 loops=4)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=4)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=4)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                                                                                 Rows Removed by Filter: 4
                                       ->  Hash  (cost=9894.62..9894.62 rows=39435 width=20) (actual time=28.367..28.367 rows=39694 loops=4)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.98..9894.62 rows=39435 width=20) (actual time=0.076..21.256 rows=39694 loops=4)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5435.75 rows=1333 width=4) (actual time=0.049..6.941 rows=1320 loops=4)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.04 rows=30 width=24) (actual time=0.004..0.008 rows=30 loops=5280)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.119..3.119 rows=10000 loops=4)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..1.529 rows=10000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.026..0.026 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.017 rows=25 loops=4)
 Planning time: 4.047 ms
 Execution time: 170.766 ms
(52 rows)

query 9 run 1
SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=92507.85..92507.86 rows=1 width=66) (actual time=2091.871..2091.871 rows=1 loops=1)
   ->  Sort  (cost=92507.85..92657.18 rows=59729 width=66) (actual time=2091.870..2091.870 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=91163.95..92209.21 rows=59729 width=66) (actual time=2090.958..2091.048 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=27488.96..90118.69 rows=59729 width=57) (actual time=948.334..1759.895 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Merge Join  (cost=27487.39..88997.21 rows=59729 width=31) (actual time=948.287..1634.099 rows=325928 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=8) (actual time=0.301..420.285 rows=1499997 loops=1)
                           ->  Sort  (cost=27486.96..27636.28 rows=59729 width=31) (actual time=947.976..1020.216 rows=325928 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 Sort Method: external sort  Disk: 15584kB
                                 ->  Gather  (cost=1448.98..22748.61 rows=59729 width=31) (actual time=9.622..756.928 rows=325928 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=448.98..15775.71 rows=24887 width=31) (actual time=4.920..743.313 rows=108643 loops=3)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=448.43..7614.22 rows=3367 width=26) (actual time=3.935..75.503 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..7120.08 rows=3367 width=18) (actual time=0.202..64.408 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.039..33.819 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.31 rows=4 width=14) (actual time=0.007..0.008 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.669..3.669 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.010..2.542 rows=10000 loops=3)
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.41 rows=1 width=29) (actual time=0.038..0.045 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                                   Heap Fetches: 0
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.015 rows=25 loops=1)
 Planning time: 36.427 ms
 Execution time: 2094.209 ms
(39 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=92507.85..92507.86 rows=1 width=66) (actual time=1177.972..1177.972 rows=1 loops=1)
   ->  Sort  (cost=92507.85..92657.18 rows=59729 width=66) (actual time=1177.971..1177.971 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=91163.95..92209.21 rows=59729 width=66) (actual time=1177.819..1177.907 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=27488.96..90118.69 rows=59729 width=57) (actual time=303.306..867.053 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Merge Join  (cost=27487.39..88997.21 rows=59729 width=31) (actual time=303.276..749.547 rows=325928 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=8) (actual time=0.005..201.792 rows=1499997 loops=1)
                           ->  Sort  (cost=27486.96..27636.28 rows=59729 width=31) (actual time=303.261..365.600 rows=325928 loops=1)
                                 Sort Key: lineitem.l_orderkey
                                 Sort Method: external sort  Disk: 15584kB
                                 ->  Gather  (cost=1448.98..22748.61 rows=59729 width=31) (actual time=3.347..122.304 rows=325928 loops=1)
                                       Workers Planned: 2
                                       Workers Launched: 2
                                       ->  Nested Loop  (cost=448.98..15775.71 rows=24887 width=31) (actual time=2.691..104.713 rows=108643 loops=3)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=448.43..7614.22 rows=3367 width=26) (actual time=2.665..32.900 rows=14507 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..7120.08 rows=3367 width=18) (actual time=0.034..25.167 rows=14507 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.015..15.247 rows=3627 loops=3)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 63040
                                                         ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.31 rows=4 width=14) (actual time=0.002..0.002 rows=4 loops=10880)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.565..2.565 rows=10000 loops=3)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.012..1.499 rows=10000 loops=3)
                                             ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.41 rows=1 width=29) (actual time=0.002..0.004 rows=7 loops=43520)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                                   Heap Fetches: 0
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.015..0.015 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.007..0.012 rows=25 loops=1)
 Planning time: 4.737 ms
 Execution time: 1180.307 ms
(39 rows)

query 10 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94453.93..94453.98 rows=20 width=202) (actual time=656.930..656.934 rows=20 loops=1)
   ->  Sort  (cost=94453.93..94594.73 rows=56321 width=202) (actual time=656.929..656.933 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=92251.23..92955.25 rows=56321 width=202) (actual time=628.712..646.422 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=7974.12..91547.22 rows=56321 width=182) (actual time=107.099..533.022 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6974.12..84915.12 rows=18168 width=182) (actual time=100.359..579.437 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=6972.56..84663.75 rows=18168 width=160) (actual time=100.271..572.540 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=0.56..77441.94 rows=18168 width=16) (actual time=0.480..460.251 rows=28587 loops=4)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18341 width=8) (actual time=0.064..211.601 rows=14278 loops=4)
                                             Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Rows Removed by Filter: 360722
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.39 rows=1 width=16) (actual time=0.016..0.017 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=99.082..99.082 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.034..53.526 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.017..0.017 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=4)
 Planning time: 26.431 ms
 Execution time: 657.395 ms
(28 rows)

SET
SET
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=94453.93..94453.98 rows=20 width=202) (actual time=282.028..282.030 rows=20 loops=1)
   ->  Sort  (cost=94453.93..94594.73 rows=56321 width=202) (actual time=282.027..282.028 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=92251.23..92955.25 rows=56321 width=202) (actual time=253.236..271.319 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather  (cost=7974.12..91547.22 rows=56321 width=182) (actual time=74.749..165.112 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=6974.12..84915.12 rows=18168 width=182) (actual time=74.876..211.055 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=6972.56..84663.75 rows=18168 width=160) (actual time=74.784..205.060 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=0.56..77441.94 rows=18168 width=16) (actual time=0.056..119.776 rows=28587 loops=4)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=18341 width=8) (actual time=0.014..65.852 rows=14278 loops=4)
                                             Filter: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Rows Removed by Filter: 360722
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.39 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=73.842..73.842 rows=150000 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.032..28.739 rows=150000 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.019..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.015 rows=25 loops=4)
 Planning time: 1.566 ms
 Execution time: 282.505 ms
(28 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29214.69..29214.69 rows=1 width=36) (actual time=748.369..748.369 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14019.91..14019.92 rows=1 width=32) (actual time=33.279..33.279 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13779.91 rows=32000 width=10) (actual time=0.790..21.059 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.785..1.016 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.775..0.956 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.746..0.746 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.038 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15194.77..15274.77 rows=32000 width=36) (actual time=748.368..748.368 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14554.77..15034.77 rows=32000 width=36) (actual time=739.554..748.214 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13994.77 rows=32000 width=14) (actual time=0.254..672.708 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.070..3.857 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..2.778 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.095..1.608 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 15.121 ms
 Execution time: 748.668 ms
(34 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29214.69..29214.69 rows=1 width=36) (actual time=89.629..89.629 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14019.91..14019.92 rows=1 width=32) (actual time=32.085..32.085 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13779.91 rows=32000 width=10) (actual time=0.068..20.025 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.064..0.288 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.054..0.222 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.037..0.037 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.06 rows=80 width=14) (actual time=0.003..0.037 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15194.77..15274.77 rows=32000 width=36) (actual time=89.628..89.628 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14554.77..15034.77 rows=32000 width=36) (actual time=80.631..89.481 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..13994.77 rows=32000 width=14) (actual time=0.026..29.851 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.020..1.857 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..0.604 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.06 rows=80 width=18) (actual time=0.004..0.057 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 1.060 ms
 Execution time: 89.710 ms
(34 rows)

query 12 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76153.37..76153.37 rows=1 width=27) (actual time=602.363..602.363 rows=1 loops=1)
   ->  Sort  (cost=76153.37..76153.39 rows=7 width=27) (actual time=602.361..602.361 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=76153.27..76153.34 rows=7 width=27) (actual time=602.343..602.343 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=1.36..75647.29 rows=28913 width=27) (actual time=1.090..582.885 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.302..395.882 rows=1499957 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14671.50 rows=28913 width=15) (actual time=0.728..88.584 rows=30953 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 77481
                           Heap Fetches: 0
 Planning time: 18.672 ms
 Execution time: 602.432 ms
(16 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=76153.37..76153.37 rows=1 width=27) (actual time=360.127..360.127 rows=1 loops=1)
   ->  Sort  (cost=76153.37..76153.39 rows=7 width=27) (actual time=360.127..360.127 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=76153.27..76153.34 rows=7 width=27) (actual time=360.109..360.109 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Merge Join  (cost=1.36..75647.29 rows=28913 width=27) (actual time=0.053..345.706 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.010..194.221 rows=1499957 loops=1)
                     ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14671.50 rows=28913 width=15) (actual time=0.027..59.370 rows=30953 loops=1)
                           Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                           Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                           Rows Removed by Filter: 77481
                           Heap Fetches: 0
 Planning time: 1.169 ms
 Execution time: 360.178 ms
(16 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81709.61..81709.61 rows=1 width=16) (actual time=1625.686..1625.687 rows=1 loops=1)
   ->  Sort  (cost=81709.61..81710.11 rows=200 width=16) (actual time=1625.685..1625.685 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81706.61..81708.61 rows=200 width=16) (actual time=1625.659..1625.663 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77956.61..79456.61 rows=150000 width=12) (actual time=1579.685..1605.427 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..70457.36 rows=1499850 width=8) (actual time=33.270..1122.124 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.434..640.322 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=32.534..32.534 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.596..16.091 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 16.448 ms
 Execution time: 1626.970 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=81709.61..81709.61 rows=1 width=16) (actual time=1415.505..1415.506 rows=1 loops=1)
   ->  Sort  (cost=81709.61..81710.11 rows=200 width=16) (actual time=1415.503..1415.503 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=81706.61..81708.61 rows=200 width=16) (actual time=1415.478..1415.482 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=77956.61..79456.61 rows=150000 width=12) (actual time=1369.013..1395.825 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..70457.36 rows=1499850 width=8) (actual time=28.487..943.805 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.021..489.580 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=28.157..28.157 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.050..12.457 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning time: 0.795 ms
 Execution time: 1416.293 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84902.22..84902.23 rows=1 width=32) (actual time=840.568..840.568 rows=1 loops=1)
   ->  Aggregate  (cost=84902.22..84902.23 rows=1 width=32) (actual time=840.567..840.567 rows=1 loops=1)
         ->  Hash Join  (cost=9909.20..83643.47 rows=71928 width=33) (actual time=112.601..770.532 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1310.20..74051.62 rows=72953 width=16) (actual time=20.616..630.086 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1291.96 rows=72953 width=0) (actual time=14.689..14.689 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=91.619..91.619 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.008..56.269 rows=200000 loops=1)
 Planning time: 20.917 ms
 Execution time: 840.638 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=84902.22..84902.23 rows=1 width=32) (actual time=205.696..205.696 rows=1 loops=1)
   ->  Aggregate  (cost=84902.22..84902.23 rows=1 width=32) (actual time=205.695..205.695 rows=1 loops=1)
         ->  Hash Join  (cost=9909.20..83643.47 rows=71928 width=33) (actual time=74.980..159.285 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1310.20..74051.62 rows=72953 width=16) (actual time=14.996..65.439 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1291.96 rows=72953 width=0) (actual time=9.415..9.415 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=59.618..59.618 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.009..27.416 rows=200000 loops=1)
 Planning time: 1.105 ms
 Execution time: 205.764 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247252.92..247252.98 rows=1 width=103) (actual time=1520.021..1520.021 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122450.44..122450.45 rows=1 width=32) (actual time=230.617..230.617 rows=1 loops=1)
           ->  HashAggregate  (cost=122200.31..122325.38 rows=10005 width=36) (actual time=227.870..229.933 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4040.00..119950.98 rows=224933 width=16) (actual time=33.047..98.099 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3983.76 rows=224933 width=0) (actual time=23.522..23.522 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124802.48..125411.55 rows=10005 width=103) (actual time=1520.019..1520.019 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.415..4.536 rows=8449 loops=1)
         ->  Sort  (cost=124802.19..124827.20 rows=10005 width=36) (actual time=1514.991..1514.991 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123887.31..124137.44 rows=10005 width=36) (actual time=1513.348..1514.981 rows=1 loops=1)
                     ->  HashAggregate  (cost=123887.31..124037.39 rows=10005 width=36) (actual time=1513.348..1514.981 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4040.00..119950.98 rows=224933 width=16) (actual time=47.218..1058.375 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3983.76 rows=224933 width=0) (actual time=35.600..35.600 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 16.914 ms
 Execution time: 1520.841 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=247252.92..247252.98 rows=1 width=103) (actual time=499.415..499.415 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122450.44..122450.45 rows=1 width=32) (actual time=230.170..230.171 rows=1 loops=1)
           ->  HashAggregate  (cost=122200.31..122325.38 rows=10005 width=36) (actual time=227.569..229.257 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4040.00..119950.98 rows=224933 width=16) (actual time=32.468..97.522 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3983.76 rows=224933 width=0) (actual time=22.901..22.901 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124802.48..125411.55 rows=10005 width=103) (actual time=499.414..499.414 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.013..1.281 rows=8449 loops=1)
         ->  Sort  (cost=124802.19..124827.20 rows=10005 width=36) (actual time=497.669..497.669 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=123887.31..124137.44 rows=10005 width=36) (actual time=496.056..497.664 rows=1 loops=1)
                     ->  HashAggregate  (cost=123887.31..124037.39 rows=10005 width=36) (actual time=496.056..497.663 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4040.00..119950.98 rows=224933 width=16) (actual time=36.080..127.645 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3983.76 rows=224933 width=0) (actual time=25.865..25.865 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning time: 1.107 ms
 Execution time: 499.524 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35785.60..35785.60 rows=1 width=44) (actual time=623.803..623.804 rows=1 loops=1)
   ->  Sort  (cost=35785.60..35825.07 rows=15791 width=44) (actual time=623.802..623.802 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34827.18..35706.64 rows=15791 width=44) (actual time=563.870..620.818 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34827.18..34971.49 rows=57724 width=40) (actual time=563.849..577.959 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9808.20..30262.11 rows=57724 width=40) (actual time=96.855..303.197 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=6.506..140.346 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=1.568..5.874 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=28862 width=40) (actual time=90.309..90.309 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=28862 width=40) (actual time=0.009..84.636 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 16.008 ms
 Execution time: 624.513 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=35785.60..35785.60 rows=1 width=44) (actual time=569.709..569.709 rows=1 loops=1)
   ->  Sort  (cost=35785.60..35825.07 rows=15791 width=44) (actual time=569.708..569.708 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=34827.18..35706.64 rows=15791 width=44) (actual time=509.646..566.886 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=34827.18..34971.49 rows=57724 width=40) (actual time=509.626..524.117 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9808.20..30262.11 rows=57724 width=40) (actual time=63.211..249.440 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.209..118.744 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.090..2.183 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=28862 width=40) (actual time=60.970..60.970 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=28862 width=40) (actual time=0.009..56.396 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning time: 0.835 ms
 Execution time: 569.764 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178831.77..178831.78 rows=1 width=32) (actual time=2210.051..2210.051 rows=1 loops=1)
   ->  Aggregate  (cost=178831.77..178831.78 rows=1 width=32) (actual time=2210.051..2210.052 rows=1 loops=1)
         ->  Nested Loop  (cost=6379.82..178826.39 rows=2150 width=8) (actual time=43.362..2209.609 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=6379.26..178200.60 rows=218 width=40) (actual time=42.484..2093.398 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169282.89 rows=202849 width=36) (actual time=1.018..2044.810 rows=199276 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.968..1101.364 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=6378.83..6379.37 rows=215 width=4) (actual time=34.664..34.820 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Gather  (cost=1000.00..6370.50 rows=215 width=4) (actual time=0.870..34.676 rows=208 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=90 width=4) (actual time=0.462..28.462 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.75 rows=10 width=17) (actual time=0.515..0.556 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 22.627 ms
 Execution time: 2210.761 ms
(24 rows)

SET
SET
SET
                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178831.77..178831.78 rows=1 width=32) (actual time=1853.304..1853.305 rows=1 loops=1)
   ->  Aggregate  (cost=178831.77..178831.78 rows=1 width=32) (actual time=1853.303..1853.303 rows=1 loops=1)
         ->  Nested Loop  (cost=6379.82..178826.39 rows=2150 width=8) (actual time=17.764..1853.187 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=6379.26..178200.60 rows=218 width=40) (actual time=17.748..1851.589 rows=208 loops=1)
                     Merge Cond: (lineitem_1.l_partkey = part.p_partkey)
                     ->  GroupAggregate  (cost=0.43..169282.89 rows=202849 width=36) (actual time=0.045..1828.122 rows=199276 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.018..912.411 rows=5979358 loops=1)
                                 Heap Fetches: 0
                     ->  Sort  (cost=6378.83..6379.37 rows=215 width=4) (actual time=11.843..11.885 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Gather  (cost=1000.00..6370.50 rows=215 width=4) (actual time=0.288..11.870 rows=208 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=90 width=4) (actual time=0.188..9.845 rows=69 loops=3)
                                       Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                       Rows Removed by Filter: 66597
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.75 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning time: 1.264 ms
 Execution time: 1853.427 ms
(24 rows)

query 18 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1085375.93..1085376.18 rows=100 width=71) (actual time=2872.826..2872.827 rows=9 loops=1)
   ->  Sort  (cost=1085375.93..1092877.16 rows=3000493 width=71) (actual time=2872.825..2872.825 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=903188.15..970699.25 rows=3000493 width=71) (actual time=2872.794..2872.811 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=903188.15..910689.39 rows=3000493 width=44) (actual time=2872.787..2872.792 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6978.81..514453.59 rows=3000493 width=44) (actual time=716.428..2872.760 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=6.81..466224.81 rows=3000493 width=25) (actual time=647.995..2804.298 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..283113.80 rows=750000 width=24) (actual time=501.333..2244.474 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.306..309.987 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..203746.30 rows=1500246 width=4) (actual time=397.293..1867.588 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..184993.23 rows=1500246 width=4) (actual time=397.289..1867.575 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.790..668.523 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.009..359.546 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=68.123..68.123 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.007..43.698 rows=150000 loops=1)
 Planning time: 26.830 ms
 Execution time: 2872.910 ms
(30 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1085375.93..1085376.18 rows=100 width=71) (actual time=2480.676..2480.678 rows=9 loops=1)
   ->  Sort  (cost=1085375.93..1092877.16 rows=3000493 width=71) (actual time=2480.676..2480.677 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=903188.15..970699.25 rows=3000493 width=71) (actual time=2480.644..2480.661 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=903188.15..910689.39 rows=3000493 width=44) (actual time=2480.639..2480.641 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6978.81..514453.59 rows=3000493 width=44) (actual time=595.254..2480.607 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=6.81..466224.81 rows=3000493 width=25) (actual time=554.555..2439.883 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Semi Join  (cost=0.86..283113.80 rows=750000 width=24) (actual time=408.438..1882.433 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.011..147.355 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.43..203746.30 rows=1500246 width=4) (actual time=352.175..1669.913 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.43..184993.23 rows=1500246 width=4) (actual time=352.174..1669.903 rows=9 loops=1)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                                   Rows Removed by Filter: 1499991
                                                   ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.017..493.875 rows=6001215 loops=1)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136235.22 rows=6000986 width=9) (actual time=0.009..356.118 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=40.397..40.397 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.008..18.645 rows=150000 loops=1)
 Planning time: 1.510 ms
 Execution time: 2480.767 ms
(30 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=9345.79..9345.80 rows=1 width=32) (actual time=134.947..134.947 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9345.79..9345.80 rows=1 width=32) (actual time=134.947..134.947 rows=1 loops=1)
         ->  Gather  (cost=9345.57..9345.78 rows=2 width=32) (actual time=134.901..136.288 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8345.57..8345.58 rows=1 width=32) (actual time=128.827..128.827 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8345.21 rows=48 width=12) (actual time=1.496..128.735 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=209 width=30) (actual time=0.460..33.746 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.36 rows=1 width=21) (actual time=0.542..0.561 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 22.015 ms
 Execution time: 136.812 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9345.79..9345.80 rows=1 width=32) (actual time=24.757..24.757 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9345.79..9345.80 rows=1 width=32) (actual time=24.756..24.756 rows=1 loops=1)
         ->  Gather  (cost=9345.57..9345.78 rows=2 width=32) (actual time=24.703..26.636 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8345.57..8345.58 rows=1 width=32) (actual time=22.565..22.566 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8345.21 rows=48 width=12) (actual time=0.706..22.521 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=209 width=30) (actual time=0.169..20.430 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.36 rows=1 width=21) (actual time=0.011..0.012 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning time: 3.144 ms
 Execution time: 26.685 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=279828.87..279828.87 rows=1 width=51) (actual time=3374.237..3374.237 rows=1 loops=1)
   ->  Sort  (cost=279828.87..279829.37 rows=200 width=51) (actual time=3374.236..3374.236 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=255588.91..279827.87 rows=200 width=51) (actual time=3188.531..3374.047 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.363..3.778 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.355..2.938 rows=10000 loops=1)
               ->  Materialize  (cost=255588.91..279372.56 rows=1 width=8) (actual time=6.160..7.416 rows=4371 loops=438)
                     ->  Merge Join  (cost=255588.91..279372.56 rows=1 width=8) (actual time=2698.101..3185.573 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=244597.14..261037.39 rows=485518 width=40) (actual time=2631.728..3085.068 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=244597.14..246886.51 rows=915748 width=13) (actual time=2631.711..2747.818 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16440.85..142737.07 rows=915748 width=13) (actual time=160.239..2237.492 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16211.91 rows=915748 width=0) (actual time=140.982..140.982 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=10991.76..11011.96 rows=8080 width=16) (actual time=66.077..66.737 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=1000.42..10467.37 rows=8080 width=16) (actual time=0.885..63.867 rows=8748 loops=1)
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.321..7.251 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.064..28.456 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.025..0.025 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 25.723 ms
 Execution time: 3377.041 ms
(44 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=279828.87..279828.87 rows=1 width=51) (actual time=1410.274..1410.274 rows=1 loops=1)
   ->  Sort  (cost=279828.87..279829.37 rows=200 width=51) (actual time=1410.273..1410.273 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=255588.91..279827.87 rows=200 width=51) (actual time=1226.529..1410.127 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.011..1.775 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.002..0.579 rows=10000 loops=1)
               ->  Materialize  (cost=255588.91..279372.56 rows=1 width=8) (actual time=1.680..2.938 rows=4371 loops=438)
                     ->  Merge Join  (cost=255588.91..279372.56 rows=1 width=8) (actual time=735.770..1224.002 rows=5898 loops=1)
                           Merge Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           Rows Removed by Join Filter: 16
                           ->  GroupAggregate  (cost=244597.14..261037.39 rows=485518 width=40) (actual time=720.626..1175.637 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=244597.14..246886.51 rows=915748 width=13) (actual time=720.611..837.640 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20544kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16440.85..142737.07 rows=915748 width=13) (actual time=121.882..357.360 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16211.91 rows=915748 width=0) (actual time=103.354..103.354 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Sort  (cost=10991.76..11011.96 rows=8080 width=16) (actual time=14.834..15.494 rows=8748 loops=1)
                                 Sort Key: partsupp.ps_partkey, partsupp.ps_suppkey
                                 Sort Method: quicksort  Memory: 795kB
                                 ->  Nested Loop  (cost=1000.42..10467.37 rows=8080 width=16) (actual time=0.270..12.806 rows=8748 loops=1)
                                       ->  Gather  (cost=1000.00..6342.67 rows=2020 width=4) (actual time=0.244..6.115 rows=2187 loops=1)
                                             Workers Planned: 2
                                             Workers Launched: 2
                                             ->  Parallel Seq Scan on part  (cost=0.00..5140.67 rows=842 width=4) (actual time=0.049..9.037 rows=729 loops=3)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 65938
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning time: 2.102 ms
 Execution time: 1413.282 ms
(44 rows)

query 21 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=122494.64..122494.65 rows=1 width=34) (actual time=1165.514..1165.524 rows=100 loops=1)
   ->  Sort  (cost=122494.64..122494.65 rows=1 width=34) (actual time=1165.513..1165.519 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=122494.61..122494.63 rows=1 width=34) (actual time=1164.238..1165.029 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=122494.61..122494.62 rows=1 width=26) (actual time=1164.228..1164.498 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=51556.31..122494.60 rows=1 width=26) (actual time=723.452..1150.149 rows=4227 loops=1)
                           ->  Gather  (cost=51555.88..122490.30 rows=1 width=34) (actual time=723.147..1027.121 rows=73962 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Nested Loop Semi Join  (cost=50555.88..121490.20 rows=1 width=34) (actual time=716.476..1102.836 rows=18490 loops=4)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 2063
                                       ->  Hash Join  (cost=50555.44..90511.97 rows=12552 width=38) (actual time=716.339..921.470 rows=19161 loops=4)
                                             Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=235435 width=4) (actual time=0.034..167.007 rows=182353 loops=4)
                                                   Filter: (o_orderstatus = 'F'::bpchar)
                                                   Rows Removed by Filter: 192647
                                             ->  Hash  (cost=49555.78..49555.78 rows=79973 width=34) (actual time=715.779..715.779 rows=159165 loops=4)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                                   ->  Hash Join  (cost=239.88..49555.78 rows=79973 width=34) (actual time=1.846..675.619 rows=159165 loops=4)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..41015.36 rows=2000329 width=8) (actual time=0.265..420.377 rows=3793296 loops=4)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=1.561..1.561 rows=421 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.232..1.431 rows=421 loops=4)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.018 rows=1 loops=4)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.210..1.353 rows=421 loops=4)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.188..0.188 rows=421 loops=4)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.009..0.009 rows=1 loops=76644)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..2.36 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 24.339 ms
 Execution time: 1165.734 ms
(48 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=122494.64..122494.65 rows=1 width=34) (actual time=803.119..803.131 rows=100 loops=1)
   ->  Sort  (cost=122494.64..122494.65 rows=1 width=34) (actual time=803.119..803.127 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  GroupAggregate  (cost=122494.61..122494.63 rows=1 width=34) (actual time=801.879..802.665 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=122494.61..122494.62 rows=1 width=26) (actual time=801.870..802.155 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Anti Join  (cost=51556.31..122494.60 rows=1 width=26) (actual time=610.017..788.701 rows=4227 loops=1)
                           ->  Gather  (cost=51555.88..122490.30 rows=1 width=34) (actual time=609.932..675.378 rows=73962 loops=1)
                                 Workers Planned: 3
                                 Workers Launched: 3
                                 ->  Nested Loop Semi Join  (cost=50555.88..121490.20 rows=1 width=34) (actual time=607.639..748.696 rows=18490 loops=4)
                                       Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 2063
                                       ->  Hash Join  (cost=50555.44..90511.97 rows=12552 width=38) (actual time=607.603..700.813 rows=19161 loops=4)
                                             Hash Cond: (orders.o_orderkey = l1.l_orderkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=235435 width=4) (actual time=0.014..59.141 rows=182353 loops=4)
                                                   Filter: (o_orderstatus = 'F'::bpchar)
                                                   Rows Removed by Filter: 192647
                                             ->  Hash  (cost=49555.78..49555.78 rows=79973 width=34) (actual time=607.254..607.254 rows=159165 loops=4)
                                                   Buckets: 262144 (originally 131072)  Batches: 1 (originally 1)  Memory Usage: 12618kB
                                                   ->  Hash Join  (cost=239.88..49555.78 rows=79973 width=34) (actual time=0.485..571.476 rows=159165 loops=4)
                                                         Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                         ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..41015.36 rows=2000329 width=8) (actual time=0.029..319.096 rows=3793296 loops=4)
                                                               Heap Fetches: 0
                                                         ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.442..0.442 rows=421 loops=4)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                               ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.072..0.375 rows=421 loops=4)
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.013 rows=1 loops=4)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                                                     ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.058..0.310 rows=421 loops=4)
                                                                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                           Heap Blocks: exact=184
                                                                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.040..0.040 rows=421 loops=4)
                                                                                 Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..2.36 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning time: 2.719 ms
 Execution time: 803.328 ms
(48 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14874.60..14874.62 rows=1 width=72) (actual time=182.789..182.789 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=49.681..49.681 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=49.639..49.752 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=44.495..44.495 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1992 width=6) (actual time=0.273..42.360 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8631.76..8652.79 rows=765 width=72) (actual time=182.789..182.789 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8631.76..8633.67 rows=765 width=38) (actual time=182.533..182.590 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8595.11 rows=765 width=38) (actual time=49.733..180.470 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=49.710..109.004 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.39 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 15.831 ms
 Execution time: 183.424 ms
(24 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14874.60..14874.62 rows=1 width=72) (actual time=122.428..122.428 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Finalize Aggregate  (cost=6242.83..6242.84 rows=1 width=32) (actual time=31.323..31.324 rows=1 loops=1)
           ->  Gather  (cost=6242.61..6242.82 rows=2 width=32) (actual time=31.282..31.391 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.61..5242.62 rows=1 width=32) (actual time=29.391..29.391 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1992 width=6) (actual time=0.019..27.467 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=8631.76..8652.79 rows=765 width=72) (actual time=122.427..122.427 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8631.76..8633.67 rows=765 width=38) (actual time=122.172..122.225 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8595.11 rows=765 width=38) (actual time=31.363..120.430 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=31.348..85.774 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.39 rows=18 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning time: 0.666 ms
 Execution time: 122.554 ms
(24 rows)

