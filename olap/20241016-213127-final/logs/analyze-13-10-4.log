query 1 run 1
SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906257.91..1906258.58 rows=1 width=236) (actual time=21121.107..21121.179 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906257.91..1906261.96 rows=6 width=236) (actual time=21121.106..21121.178 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906257.91..1906260.78 rows=24 width=236) (actual time=21121.067..21121.143 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905257.85..1905257.86 rows=6 width=236) (actual time=21112.137..21112.138 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905257.60..1905257.77 rows=6 width=236) (actual time=21112.106..21112.113 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312584.32 rows=14816832 width=25) (actual time=0.123..5442.721 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 23.026 ms
 Execution Time: 21122.390 ms
(25 rows)

SET
SET
SET
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1906257.91..1906258.58 rows=1 width=236) (actual time=18690.737..18691.318 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=1906257.91..1906261.96 rows=6 width=236) (actual time=18690.736..18691.317 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=1906257.91..1906260.78 rows=24 width=236) (actual time=18690.708..18691.291 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=1905257.85..1905257.86 rows=6 width=236) (actual time=18686.382..18686.383 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=1905257.60..1905257.77 rows=6 width=236) (actual time=18686.352..18686.360 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..1312584.32 rows=14816832 width=25) (actual time=0.027..2591.028 rows=11856890 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 140321
 Planning Time: 1.116 ms
 Execution Time: 18691.408 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=511194.69..511194.69 rows=1 width=192) (actual time=30537.398..30537.412 rows=100 loops=1)
   ->  Sort  (cost=511194.69..511194.69 rows=1 width=192) (actual time=30537.397..30537.405 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=47.90..511194.68 rows=1 width=192) (actual time=33.328..30534.572 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.475..0.482 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.235..0.236 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.234..0.237 rows=25 loops=1)
               ->  Materialize  (cost=47.90..511191.98 rows=1 width=170) (actual time=5.390..6105.898 rows=4737 loops=5)
                     ->  Nested Loop  (cost=47.90..511191.97 rows=1 width=170) (actual time=26.945..30518.526 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=47.90..506720.97 rows=1 width=34) (actual time=2.112..1265.679 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54303.47 rows=9132 width=30) (actual time=0.318..273.333 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=47.47..49.53 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=47.03..47.04 rows=1 width=32) (actual time=0.118..0.118 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..47.02 rows=3 width=6) (actual time=0.104..0.114 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..45.74 rows=17 width=10) (actual time=0.087..0.111 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..44.13 rows=17 width=10) (actual time=0.086..0.108 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.73 rows=17 width=10) (actual time=0.078..0.080 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.664 rows=49972 loops=4737)
 Planning Time: 24.193 ms
 Execution Time: 30537.715 ms
(50 rows)

SET
SET
SET
                                                                                                 QUERY PLAN                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=511194.69..511194.69 rows=1 width=192) (actual time=30167.760..30167.774 rows=100 loops=1)
   ->  Sort  (cost=511194.69..511194.69 rows=1 width=192) (actual time=30167.759..30167.767 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 68kB
         ->  Nested Loop  (cost=47.90..511194.68 rows=1 width=192) (actual time=14.202..30165.086 rows=4737 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 18948
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.013..0.019 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.004 rows=25 loops=1)
               ->  Materialize  (cost=47.90..511191.98 rows=1 width=170) (actual time=2.166..6032.096 rows=4737 loops=5)
                     ->  Nested Loop  (cost=47.90..511191.97 rows=1 width=170) (actual time=10.825..30150.091 rows=4737 loops=1)
                           Join Filter: (partsupp.ps_suppkey = supplier.s_suppkey)
                           Rows Removed by Join Filter: 236714834
                           ->  Nested Loop  (cost=47.90..506720.97 rows=1 width=34) (actual time=0.059..325.292 rows=4737 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.43..54303.47 rows=9132 width=30) (actual time=0.007..86.680 rows=8046 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 32185
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=47.47..49.53 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=8046)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=47.03..47.04 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=8046)
                                               ->  Nested Loop  (cost=2.41..47.02 rows=3 width=6) (actual time=0.017..0.021 rows=1 loops=8046)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=8046)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Hash Join  (cost=2.41..45.74 rows=17 width=10) (actual time=0.010..0.018 rows=4 loops=8046)
                                                           Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                                           ->  Nested Loop  (cost=0.85..44.13 rows=17 width=10) (actual time=0.008..0.016 rows=4 loops=8046)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.43..2.73 rows=17 width=10) (actual time=0.005..0.005 rows=4 loops=8046)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..2.43 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=32184)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Hash  (cost=1.25..1.25 rows=25 width=8) (actual time=0.010..0.010 rows=25 loops=1)
                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                 ->  Seq Scan on nation nation_1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.005 rows=25 loops=1)
                           ->  Seq Scan on supplier  (cost=0.00..3221.00 rows=100000 width=144) (actual time=0.001..2.657 rows=49972 loops=4737)
 Planning Time: 2.591 ms
 Execution Time: 30167.863 ms
(50 rows)

query 3 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2320596.70..2320596.73 rows=10 width=44) (actual time=11341.847..11352.391 rows=10 loops=1)
   ->  Sort  (cost=2320596.70..2328410.49 rows=3125517 width=44) (actual time=11341.846..11352.389 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1792871.03..2253055.40 rows=3125517 width=44) (actual time=11104.075..11330.624 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1792871.03..2167103.68 rows=3125517 width=24) (actual time=11104.061..11164.167 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1791870.97..1793824.42 rows=781379 width=24) (actual time=11094.732..11097.915 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 6448kB
                           Worker 0:  Sort Method: quicksort  Memory: 6225kB
                           Worker 1:  Sort Method: quicksort  Memory: 6321kB
                           Worker 2:  Sort Method: quicksort  Memory: 6340kB
                           Worker 3:  Sort Method: quicksort  Memory: 5905kB
                           ->  Parallel Hash Join  (cost=358984.72..1703943.41 rows=781379 width=24) (actual time=2472.020..11076.380 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312584.32 rows=8112244 width=16) (actual time=1.220..7745.676 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354470.15..354470.15 rows=361166 width=12) (actual time=2465.906..2466.084 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84608kB
                                       ->  Parallel Hash Join  (cost=41567.10..354470.15 rows=361166 width=12) (actual time=297.568..2353.711 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308138.12 rows=1815207 width=16) (actual time=4.361..1698.141 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.45..40634.45 rows=74612 width=4) (actual time=292.661..292.662 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15904kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.45 rows=74612 width=4) (actual time=0.470..272.410 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 29.985 ms
 Execution Time: 11352.753 ms
(35 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2320596.70..2320596.73 rows=10 width=44) (actual time=4847.329..4857.567 rows=10 loops=1)
   ->  Sort  (cost=2320596.70..2328410.49 rows=3125517 width=44) (actual time=4847.328..4857.565 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=1792871.03..2253055.40 rows=3125517 width=44) (actual time=4613.607..4835.913 rows=113934 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=1792871.03..2167103.68 rows=3125517 width=24) (actual time=4613.593..4673.248 rows=301530 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1791870.97..1793824.42 rows=781379 width=24) (actual time=4608.329..4611.436 rows=60306 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 6470kB
                           Worker 0:  Sort Method: quicksort  Memory: 6253kB
                           Worker 1:  Sort Method: quicksort  Memory: 6178kB
                           Worker 2:  Sort Method: quicksort  Memory: 6048kB
                           Worker 3:  Sort Method: quicksort  Memory: 6291kB
                           ->  Parallel Hash Join  (cost=358984.72..1703943.41 rows=781379 width=24) (actual time=1130.419..4590.546 rows=60306 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..1312584.32 rows=8112244 width=16) (actual time=0.036..2485.335 rows=6506846 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 5490365
                                 ->  Parallel Hash  (cost=354470.15..354470.15 rows=361166 width=12) (actual time=1127.900..1128.069 rows=290361 loops=5)
                                       Buckets: 2097152  Batches: 1  Memory Usage: 84576kB
                                       ->  Parallel Hash Join  (cost=41567.10..354470.15 rows=361166 width=12) (actual time=95.467..1002.770 rows=290361 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..308138.12 rows=1815207 width=16) (actual time=0.049..491.934 rows=1447887 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 1552113
                                             ->  Parallel Hash  (cost=40634.45..40634.45 rows=74612 width=4) (actual time=94.889..94.890 rows=60055 loops=5)
                                                   Buckets: 524288  Batches: 1  Memory Usage: 15936kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..40634.45 rows=74612 width=4) (actual time=0.019..72.530 rows=60055 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 239945
 Planning Time: 1.775 ms
 Execution Time: 4857.635 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=282543.22..532524.95 rows=1 width=24) (actual time=10247.416..10272.948 rows=1 loops=1)
   ->  GroupAggregate  (cost=282543.22..1532451.88 rows=5 width=24) (actual time=10247.415..10272.946 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=282543.22..1529715.42 rows=547282 width=16) (actual time=4270.299..10234.903 rows=103030 loops=1)
               ->  Gather Merge  (cost=282542.78..348085.04 rows=547396 width=20) (actual time=4269.082..4359.179 rows=112213 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=281542.72..281884.84 rows=136849 width=20) (actual time=4258.644..4261.742 rows=23279 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 11783kB
                           Worker 0:  Sort Method: quicksort  Memory: 11905kB
                           Worker 1:  Sort Method: quicksort  Memory: 11810kB
                           Worker 2:  Sort Method: quicksort  Memory: 11909kB
                           Worker 3:  Sort Method: quicksort  Memory: 11739kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6547.24..269867.98 rows=136849 width=20) (actual time=134.016..4205.295 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=45926
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6410.40 rows=547396 width=0) (actual time=86.355..86.355 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=112213)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 27.092 ms
 Execution Time: 10273.295 ms
(24 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=282543.22..532524.95 rows=1 width=24) (actual time=1156.652..1179.422 rows=1 loops=1)
   ->  GroupAggregate  (cost=282543.22..1532451.88 rows=5 width=24) (actual time=1156.651..1179.420 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=282543.22..1529715.42 rows=547282 width=16) (actual time=718.264..1165.761 rows=103030 loops=1)
               ->  Gather Merge  (cost=282542.78..348085.04 rows=547396 width=20) (actual time=718.216..771.011 rows=112214 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=281542.72..281884.84 rows=136849 width=20) (actual time=710.710..713.072 rows=23234 loops=5)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 12847kB
                           Worker 0:  Sort Method: quicksort  Memory: 12316kB
                           Worker 1:  Sort Method: quicksort  Memory: 12210kB
                           Worker 2:  Sort Method: quicksort  Memory: 11004kB
                           Worker 3:  Sort Method: quicksort  Memory: 10769kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=6547.24..269867.98 rows=136849 width=20) (actual time=133.192..670.623 rows=112085 loops=5)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=51709
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6410.40 rows=547396 width=0) (actual time=83.720..83.721 rows=560424 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.44..2.44 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=112214)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 2.322 ms
 Execution Time: 1179.489 ms
(24 rows)

query 5 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=650968.12..650968.13 rows=1 width=58) (actual time=7628.018..7674.261 rows=1 loops=1)
   ->  Sort  (cost=650968.12..650968.19 rows=25 width=58) (actual time=7628.017..7674.258 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=650728.91..650968.00 rows=25 width=58) (actual time=7619.530..7674.242 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=650728.91..650966.94 rows=100 width=58) (actual time=7618.157..7674.208 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=649728.86..649954.97 rows=25 width=58) (actual time=7607.326..7613.738 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=649728.86..649774.02 rows=18064 width=38) (actual time=7605.825..7606.843 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1502kB
                                 Worker 0:  Sort Method: quicksort  Memory: 1507kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1522kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1536kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1483kB
                                 ->  Parallel Hash Join  (cost=73538.78..648451.66 rows=18064 width=38) (actual time=581.385..7594.615 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=69847.19..642385.51 rows=452296 width=50) (actual time=564.086..7458.783 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=69846.62..342000.26 rows=113098 width=38) (actual time=562.333..5375.688 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=27053.44..296803.76 rows=565488 width=8) (actual time=262.761..4860.538 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=52083
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26487.96 rows=2261952 width=0) (actual time=202.709..202.709 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.69..41855.69 rows=74999 width=38) (actual time=298.745..298.748 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25280kB
                                                         ->  Hash Join  (cost=2.51..41855.69 rows=74999 width=38) (actual time=0.946..271.241 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.96 rows=374996 width=8) (actual time=0.495..231.493 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.438..0.440 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.429..0.438 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.263..0.266 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.156..0.156 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.151..0.153 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.021..0.022 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=15.872..15.873 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.262..9.906 rows=20000 loops=5)
 Planning Time: 34.768 ms
 Execution Time: 7675.281 ms
(51 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=650968.12..650968.13 rows=1 width=58) (actual time=2080.950..2119.876 rows=1 loops=1)
   ->  Sort  (cost=650968.12..650968.19 rows=25 width=58) (actual time=2080.949..2119.874 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=650728.91..650968.00 rows=25 width=58) (actual time=2070.203..2119.857 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=650728.91..650966.94 rows=100 width=58) (actual time=2067.717..2119.812 rows=25 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Partial GroupAggregate  (cost=649728.86..649954.97 rows=25 width=58) (actual time=2059.076..2064.431 rows=5 loops=5)
                           Group Key: nation.n_name
                           ->  Sort  (cost=649728.86..649774.02 rows=18064 width=38) (actual time=2057.772..2058.488 rows=14407 loops=5)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 1476kB
                                 Worker 0:  Sort Method: quicksort  Memory: 2069kB
                                 Worker 1:  Sort Method: quicksort  Memory: 1279kB
                                 Worker 2:  Sort Method: quicksort  Memory: 1524kB
                                 Worker 3:  Sort Method: quicksort  Memory: 1586kB
                                 ->  Parallel Hash Join  (cost=73538.78..648451.66 rows=18064 width=38) (actual time=426.012..2050.204 rows=14407 loops=5)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=69847.19..642385.51 rows=452296 width=50) (actual time=409.287..1918.162 rows=363065 loops=5)
                                             ->  Parallel Hash Join  (cost=69846.62..342000.26 rows=113098 width=38) (actual time=409.236..1031.974 rows=90680 loops=5)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=27053.44..296803.76 rows=565488 width=8) (actual time=252.467..702.344 rows=455328 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=49961
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..26487.96 rows=2261952 width=0) (actual time=192.375..192.375 rows=2276638 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=41855.69..41855.69 rows=74999 width=38) (actual time=156.063..156.066 rows=59887 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25312kB
                                                         ->  Hash Join  (cost=2.51..41855.69 rows=74999 width=38) (actual time=0.080..125.925 rows=59887 loops=5)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..39696.96 rows=374996 width=8) (actual time=0.029..86.506 rows=300000 loops=5)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.039..0.041 rows=5 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.033..0.039 rows=5 loops=5)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.014..0.016 rows=25 loops=5)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=5)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=5)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.56..2.62 rows=4 width=20) (actual time=0.008..0.009 rows=4 loops=453399)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=15.906..15.907 rows=20000 loops=5)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4992kB
                                             ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.034..7.172 rows=20000 loops=5)
 Planning Time: 5.253 ms
 Execution Time: 2119.981 ms
(51 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1377259.39..1377259.40 rows=1 width=32) (actual time=10890.617..10934.678 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1377259.39..1377259.40 rows=1 width=32) (actual time=10890.616..10934.675 rows=1 loops=1)
         ->  Gather  (cost=1377258.95..1377259.36 rows=4 width=32) (actual time=10886.129..10934.657 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1376258.95..1376258.96 rows=1 width=32) (actual time=10878.885..10878.887 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=233578.95..1374752.42 rows=301306 width=12) (actual time=1444.498..10732.932 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=79994 lossy=53732
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..233277.65 rows=1205224 width=0) (actual time=1352.618..1352.618 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 21.383 ms
 Execution Time: 10935.830 ms
(14 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1377259.39..1377259.40 rows=1 width=32) (actual time=3223.043..3265.774 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1377259.39..1377259.40 rows=1 width=32) (actual time=3223.042..3265.772 rows=1 loops=1)
         ->  Gather  (cost=1377258.95..1377259.36 rows=4 width=32) (actual time=3221.972..3265.759 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1376258.95..1376258.96 rows=1 width=32) (actual time=3216.274..3216.275 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=233578.95..1374752.42 rows=301306 width=12) (actual time=1283.342..3118.474 rows=238912 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Rows Removed by Index Recheck: 2744818
                           Heap Blocks: exact=75589 lossy=50626
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..233277.65 rows=1205224 width=0) (actual time=1190.528..1190.528 rows=1194558 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 1.770 ms
 Execution Time: 3265.866 ms
(14 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1420379.90..1421428.23 rows=1 width=92) (actual time=34773.475..34778.254 rows=1 loops=1)
   ->  GroupAggregate  (cost=1420379.90..11928910.65 rows=10024 width=92) (actual time=34773.474..34778.252 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=1420379.90..11927829.77 rows=60364 width=72) (actual time=8797.199..34747.830 rows=14421 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 349139
               ->  Nested Loop  (cost=1420379.47..8252870.24 rows=1509106 width=76) (actual time=8773.758..29710.896 rows=363560 loops=1)
                     ->  Gather Merge  (cost=1420379.03..1601071.30 rows=1509106 width=76) (actual time=8772.552..9149.496 rows=363560 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1419378.98..1420322.17 rows=377276 width=76) (actual time=8746.620..8783.469 rows=73102 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: external merge  Disk: 27672kB
                                 Worker 0:  Sort Method: external merge  Disk: 28368kB
                                 Worker 1:  Sort Method: external merge  Disk: 28248kB
                                 Worker 2:  Sort Method: external merge  Disk: 28048kB
                                 Worker 3:  Sort Method: external merge  Disk: 27264kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372458.30 rows=377276 width=76) (actual time=13.552..8478.827 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350072.59 rows=4540128 width=24) (actual time=0.691..7868.554 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=12.611..12.614 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 928kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.525..11.982 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.428..9.600 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.085..0.087 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.075..0.081 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.059..0.061 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.056..0.056 rows=1 loops=363560)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=363560)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 35.524 ms
 Execution Time: 34781.924 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1420379.90..1421428.23 rows=1 width=92) (actual time=5640.460..5646.207 rows=1 loops=1)
   ->  GroupAggregate  (cost=1420379.90..11928910.65 rows=10024 width=92) (actual time=5640.458..5646.204 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=1420379.90..11927829.77 rows=60364 width=72) (actual time=3542.260..5632.936 rows=14421 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 349030
               ->  Nested Loop  (cost=1420379.47..8252870.24 rows=1509106 width=76) (actual time=3541.720..4760.459 rows=363451 loops=1)
                     ->  Gather Merge  (cost=1420379.03..1601071.30 rows=1509106 width=76) (actual time=3541.667..3714.724 rows=363451 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=1419378.98..1420322.17 rows=377276 width=76) (actual time=3516.511..3540.558 rows=73084 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: external merge  Disk: 26304kB
                                 Worker 0:  Sort Method: external merge  Disk: 27624kB
                                 Worker 1:  Sort Method: external merge  Disk: 27992kB
                                 Worker 2:  Sort Method: external merge  Disk: 31184kB
                                 Worker 3:  Sort Method: external merge  Disk: 26504kB
                                 ->  Parallel Hash Join  (cost=3140.96..1372458.30 rows=377276 width=76) (actual time=13.341..3231.088 rows=291139 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..1350072.59 rows=4540128 width=24) (actual time=0.038..2584.663 rows=3646065 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 8351145
                                       ->  Parallel Hash  (cost=3079.76..3079.76 rows=4896 width=60) (actual time=12.231..12.234 rows=1596 loops=5)
                                             Buckets: 16384  Batches: 1  Memory Usage: 992kB
                                             ->  Hash Join  (cost=2.87..3079.76 rows=4896 width=60) (actual time=0.083..10.274 rows=1596 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.034..8.115 rows=20000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.042..0.044 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.032..0.038 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.016..0.018 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.004..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=363451)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=363451)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 4.435 ms
 Execution Time: 5649.678 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=384272.65..384421.09 rows=1 width=40) (actual time=6758.618..6767.527 rows=1 loops=1)
   ->  GroupAggregate  (cost=384272.65..741406.53 rows=2406 width=40) (actual time=6758.617..6767.525 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=384272.65..740903.57 rows=22441 width=46) (actual time=3219.908..6749.794 rows=11818 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 142670
               ->  Nested Loop  (cost=384272.65..732685.52 rows=22441 width=20) (actual time=3219.874..6719.548 rows=11818 loops=1)
                     ->  Nested Loop  (cost=384272.23..678479.53 rows=22477 width=20) (actual time=3219.502..6525.138 rows=11818 loops=1)
                           Join Filter: (n1.n_nationkey = customer.c_nationkey)
                           Rows Removed by Join Filter: 284803
                           ->  Nested Loop  (cost=384271.16..670048.27 rows=112384 width=24) (actual time=3216.932..6459.113 rows=59325 loops=1)
                                 ->  Gather Merge  (cost=384270.73..397726.99 rows=112384 width=24) (actual time=3216.526..3255.401 rows=59325 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=383270.67..383340.91 rows=28096 width=24) (actual time=3208.472..3209.620 rows=12553 loops=5)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 2617kB
                                             Worker 0:  Sort Method: quicksort  Memory: 2490kB
                                             Worker 1:  Sort Method: quicksort  Memory: 2564kB
                                             Worker 2:  Sort Method: quicksort  Memory: 2575kB
                                             Worker 3:  Sort Method: quicksort  Memory: 2862kB
                                             ->  Parallel Hash Join  (cost=59385.87..381194.65 rows=28096 width=24) (actual time=1199.396..3199.858 rows=23719 loops=5)
                                                   Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..317512.14 rows=1127040 width=12) (actual time=0.435..1773.296 rows=911503 loops=5)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 2088497
                                                   ->  Parallel Hash  (cost=58217.44..58217.44 rows=93474 width=20) (actual time=1197.352..1197.353 rows=77904 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25504kB
                                                         ->  Nested Loop  (cost=0.56..58217.44 rows=93474 width=20) (actual time=0.766..1167.548 rows=77904 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47231.08 rows=3310 width=4) (actual time=0.356..147.162 rows=2602 loops=5)
                                                                     Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                     Rows Removed by Filter: 397398
                                                               ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.04 rows=28 width=24) (actual time=0.326..0.388 rows=30 loops=13011)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                 ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.053..0.053 rows=1 loops=59325)
                                       Index Cond: (c_custkey = orders.o_custkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=1.07..2.47 rows=5 width=4) (actual time=0.000..0.000 rows=5 loops=59325)
                                 ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.433..0.443 rows=5 loops=1)
                                       Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                       ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.218..0.221 rows=25 loops=1)
                                       ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.200..0.200 rows=1 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.193..0.195 rows=1 loops=1)
                                                   Filter: (r_name = 'AMERICA'::bpchar)
                                                   Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.016..0.016 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=11818)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.011 rows=25 loops=1)
 Planning Time: 40.906 ms
 Execution Time: 6768.507 ms
(54 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=384272.65..384421.09 rows=1 width=40) (actual time=1185.000..1194.098 rows=1 loops=1)
   ->  GroupAggregate  (cost=384272.65..741406.53 rows=2406 width=40) (actual time=1184.999..1194.096 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=384272.65..740903.57 rows=22441 width=46) (actual time=943.830..1186.611 rows=11818 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 142660
               ->  Nested Loop  (cost=384272.65..732685.52 rows=22441 width=20) (actual time=943.821..1168.198 rows=11818 loops=1)
                     ->  Nested Loop  (cost=384272.23..678479.53 rows=22477 width=20) (actual time=943.804..1143.113 rows=11818 loops=1)
                           Join Filter: (n1.n_nationkey = customer.c_nationkey)
                           Rows Removed by Join Filter: 284813
                           ->  Nested Loop  (cost=384271.16..670048.27 rows=112384 width=24) (actual time=943.752..1106.345 rows=59327 loops=1)
                                 ->  Gather Merge  (cost=384270.73..397726.99 rows=112384 width=24) (actual time=943.714..966.787 rows=59327 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=383270.67..383340.91 rows=28096 width=24) (actual time=939.090..939.885 rows=12524 loops=5)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 2355kB
                                             Worker 0:  Sort Method: quicksort  Memory: 2507kB
                                             Worker 1:  Sort Method: quicksort  Memory: 2529kB
                                             Worker 2:  Sort Method: quicksort  Memory: 2756kB
                                             Worker 3:  Sort Method: quicksort  Memory: 2961kB
                                             ->  Parallel Hash Join  (cost=59385.87..381194.65 rows=28096 width=24) (actual time=157.808..928.358 rows=23719 loops=5)
                                                   Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..317512.14 rows=1127040 width=12) (actual time=0.770..521.846 rows=911503 loops=5)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 2088497
                                                   ->  Parallel Hash  (cost=58217.44..58217.44 rows=93474 width=20) (actual time=156.231..156.232 rows=77904 loops=5)
                                                         Buckets: 524288  Batches: 1  Memory Usage: 25504kB
                                                         ->  Nested Loop  (cost=0.56..58217.44 rows=93474 width=20) (actual time=0.051..121.177 rows=77904 loops=5)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..47231.08 rows=3310 width=4) (actual time=0.026..70.332 rows=2602 loops=5)
                                                                     Filter: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                                                     Rows Removed by Filter: 397398
                                                               ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.56..3.04 rows=28 width=24) (actual time=0.007..0.016 rows=30 loops=13011)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                 ->  Index Only Scan using q10_idx_1 on customer  (cost=0.43..2.42 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=59327)
                                       Index Cond: (c_custkey = orders.o_custkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=1.07..2.47 rows=5 width=4) (actual time=0.000..0.000 rows=5 loops=59327)
                                 ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.025..0.031 rows=5 loops=1)
                                       Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                       ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.009 rows=25 loops=1)
                                       ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.008 rows=1 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                   Filter: (r_name = 'AMERICA'::bpchar)
                                                   Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.42..2.41 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=11818)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=11818)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Planning Time: 5.134 ms
 Execution Time: 1194.211 ms
(54 rows)

query 9 run 1
SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=435521.18..435656.40 rows=1 width=66) (actual time=24550.048..24556.451 rows=1 loops=1)
   ->  GroupAggregate  (cost=435521.18..8568887.54 rows=60150 width=66) (actual time=24550.046..24556.449 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=435521.18..8537935.62 rows=1708531 width=57) (actual time=24541.429..24548.918 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 21136kB  Peak Memory: 21136kB
               ->  Nested Loop  (cost=98899.44..8301148.55 rows=1708531 width=57) (actual time=616.665..24371.152 rows=128453 loops=1)
                     ->  Nested Loop  (cost=98899.01..753450.32 rows=1708531 width=53) (actual time=614.859..3900.595 rows=128453 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=98898.44..127919.01 rows=242374 width=48) (actual time=613.283..640.214 rows=17183 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Sort  (cost=97898.39..98049.87 rows=60594 width=48) (actual time=592.235..592.868 rows=3961 loops=5)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 14910kB
                                       Worker 0:  Sort Method: quicksort  Memory: 15856kB
                                       Worker 1:  Sort Method: quicksort  Memory: 14679kB
                                       Worker 2:  Sort Method: quicksort  Memory: 15513kB
                                       Worker 3:  Sort Method: quicksort  Memory: 15331kB
                                       ->  Hash Join  (cost=3546.96..93085.14 rows=60594 width=48) (actual time=19.301..524.663 rows=86650 loops=5)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Parallel Hash Join  (cost=3545.40..92897.55 rows=60594 width=26) (actual time=19.172..507.019 rows=86650 loops=5)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.86..89193.94 rows=60594 width=18) (actual time=0.912..450.021 rows=86650 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.65 rows=15152 width=4) (actual time=0.154..223.314 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.71 rows=17 width=14) (actual time=0.009..0.010 rows=4 loops=108312)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=17.909..17.909 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5024kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.137..11.961 rows=20000 loops=5)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.051..0.052 rows=25 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.043..0.046 rows=25 loops=5)
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.57 rows=1 width=29) (actual time=0.168..0.186 rows=7 loops=17183)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 Heap Fetches: 0
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.157..0.157 rows=1 loops=128453)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 40.513 ms
 Execution Time: 24557.447 ms
(46 rows)

SET
SET
SET
                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=435521.18..435656.40 rows=1 width=66) (actual time=1008.969..1016.861 rows=1 loops=1)
   ->  GroupAggregate  (cost=435521.18..8568887.54 rows=60150 width=66) (actual time=1008.967..1016.859 rows=1 loops=1)
         Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Incremental Sort  (cost=435521.18..8537935.62 rows=1708531 width=57) (actual time=1000.463..1009.416 rows=11401 loops=1)
               Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
               Presorted Key: nation.n_name
               Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 34kB  Peak Memory: 34kB
               Pre-sorted Groups: 1  Sort Method: quicksort  Average Memory: 21136kB  Peak Memory: 21136kB
               ->  Nested Loop  (cost=98899.44..8301148.55 rows=1708531 width=57) (actual time=357.870..957.914 rows=128453 loops=1)
                     ->  Nested Loop  (cost=98899.01..753450.32 rows=1708531 width=53) (actual time=357.832..503.658 rows=128453 loops=1)
                           Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                           ->  Gather Merge  (cost=98898.44..127919.01 rows=242374 width=48) (actual time=357.767..372.590 rows=17183 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Sort  (cost=97898.39..98049.87 rows=60594 width=48) (actual time=346.662..347.142 rows=3936 loops=5)
                                       Sort Key: nation.n_name
                                       Sort Method: quicksort  Memory: 16081kB
                                       Worker 0:  Sort Method: quicksort  Memory: 16123kB
                                       Worker 1:  Sort Method: quicksort  Memory: 13361kB
                                       Worker 2:  Sort Method: quicksort  Memory: 14216kB
                                       Worker 3:  Sort Method: quicksort  Memory: 16507kB
                                       ->  Hash Join  (cost=3546.96..93085.14 rows=60594 width=48) (actual time=16.144..280.340 rows=86650 loops=5)
                                             Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             ->  Parallel Hash Join  (cost=3545.40..92897.55 rows=60594 width=26) (actual time=16.047..261.764 rows=86650 loops=5)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.86..89193.94 rows=60594 width=18) (actual time=0.074..212.459 rows=86650 loops=5)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.65 rows=15152 width=4) (actual time=0.048..137.304 rows=21662 loops=5)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 378338
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.43..2.71 rows=17 width=14) (actual time=0.002..0.003 rows=4 loops=108312)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2809.24..2809.24 rows=58824 width=8) (actual time=14.093..14.094 rows=20000 loops=5)
                                                         Buckets: 131072  Batches: 1  Memory Usage: 5056kB
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=8) (actual time=0.008..3.466 rows=20000 loops=5)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.020..0.021 rows=25 loops=5)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.012..0.015 rows=25 loops=5)
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.57 rows=1 width=29) (actual time=0.004..0.007 rows=7 loops=17183)
                                 Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 Heap Fetches: 0
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=128453)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 6.047 ms
 Execution Time: 1016.975 ms
(46 rows)

query 10 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=779705.44..779705.49 rows=20 width=201) (actual time=8044.535..8100.761 rows=20 loops=1)
   ->  Sort  (cost=779705.44..781070.48 rows=546018 width=201) (actual time=8044.534..8100.757 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=686148.38..765176.10 rows=546018 width=201) (actual time=6991.599..7979.513 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=686148.38..751525.65 rows=546018 width=181) (actual time=6991.580..7272.007 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=685148.32..685489.58 rows=136504 width=181) (actual time=6973.523..7004.651 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 42464kB
                           Worker 0:  Sort Method: external merge  Disk: 42448kB
                           Worker 1:  Sort Method: external merge  Disk: 42424kB
                           Worker 2:  Sort Method: external merge  Disk: 47720kB
                           Worker 3:  Sort Method: external merge  Disk: 43488kB
                           ->  Hash Join  (cost=629767.00..673505.50 rows=136504 width=181) (actual time=6464.490..6830.814 rows=229080 loops=5)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=629765.43..673084.87 rows=136504 width=159) (actual time=6464.343..6780.639 rows=229080 loops=5)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..39696.96 rows=374996 width=147) (actual time=0.249..161.508 rows=300000 loops=5)
                                       ->  Parallel Hash  (cost=628059.13..628059.13 rows=136504 width=16) (actual time=6463.012..6463.014 rows=229080 loops=5)
                                             Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85184kB
                                             ->  Nested Loop  (cost=6651.92..628059.13 rows=136504 width=16) (actual time=138.094..6325.045 rows=229080 loops=5)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=6651.35..270004.32 rows=138998 width=8) (actual time=137.129..4216.762 rows=114632 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=46889
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6512.36 rows=555992 width=0) (actual time=86.428..86.428 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.017..0.017 rows=2 loops=573160)
                                                         Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.052..0.053 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.041..0.044 rows=25 loops=5)
 Planning Time: 37.158 ms
 Execution Time: 8106.313 ms
(37 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=779705.44..779705.49 rows=20 width=201) (actual time=3136.173..3186.460 rows=20 loops=1)
   ->  Sort  (cost=779705.44..781070.48 rows=546018 width=201) (actual time=3136.171..3186.457 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  GroupAggregate  (cost=686148.38..765176.10 rows=546018 width=201) (actual time=2083.187..3065.036 rows=381205 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Gather Merge  (cost=686148.38..751525.65 rows=546018 width=181) (actual time=2083.169..2356.553 rows=1145402 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=685148.32..685489.58 rows=136504 width=181) (actual time=2063.516..2093.422 rows=229080 loops=5)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 50368kB
                           Worker 0:  Sort Method: external merge  Disk: 42024kB
                           Worker 1:  Sort Method: external merge  Disk: 46088kB
                           Worker 2:  Sort Method: external merge  Disk: 42984kB
                           Worker 3:  Sort Method: external merge  Disk: 37072kB
                           ->  Hash Join  (cost=629767.00..673505.50 rows=136504 width=181) (actual time=1639.916..1923.326 rows=229080 loops=5)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=629765.43..673084.87 rows=136504 width=159) (actual time=1639.797..1871.352 rows=229080 loops=5)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..39696.96 rows=374996 width=147) (actual time=0.029..67.125 rows=300000 loops=5)
                                       ->  Parallel Hash  (cost=628059.13..628059.13 rows=136504 width=16) (actual time=1637.517..1637.519 rows=229080 loops=5)
                                             Buckets: 2097152 (originally 1048576)  Batches: 1 (originally 1)  Memory Usage: 85152kB
                                             ->  Nested Loop  (cost=6651.92..628059.13 rows=136504 width=16) (actual time=133.223..1511.651 rows=229080 loops=5)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=6651.35..270004.32 rows=138998 width=8) (actual time=132.984..512.728 rows=114632 loops=5)
                                                         Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                         Heap Blocks: exact=53548
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..6512.36 rows=555992 width=0) (actual time=83.102..83.103 rows=573160 loops=1)
                                                               Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                                   ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.56..2.57 rows=1 width=16) (actual time=0.008..0.008 rows=2 loops=573160)
                                                         Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.022..0.022 rows=25 loops=5)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.014 rows=25 loops=5)
 Planning Time: 3.266 ms
 Execution Time: 3193.346 ms
(37 rows)

query 11 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=430236.14..430236.14 rows=1 width=36) (actual time=3524.614..3542.913 rows=0 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=187142.31..187142.32 rows=1 width=32) (actual time=146.326..146.416 rows=1 loops=1)
           ->  Gather  (cost=187141.88..187142.29 rows=4 width=32) (actual time=146.316..146.407 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=186141.88..186141.89 rows=1 width=32) (actual time=143.269..143.270 rows=1 loops=4)
                       ->  Nested Loop  (cost=0.99..185541.99 rows=79984 width=10) (actual time=0.126..122.396 rows=80200 loops=4)
                             ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.111..32.212 rows=1002 loops=4)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.055..5.337 rows=25000 loops=4)
                                         Heap Fetches: 0
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..151.27 rows=81 width=14) (actual time=0.004..0.081 rows=80 loops=4010)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=243093.82..243360.43 rows=106645 width=36) (actual time=3524.613..3542.822 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=193055.72..242560.59 rows=106645 width=36) (actual time=3524.604..3542.813 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=193055.72..231362.90 rows=319934 width=14) (actual time=3125.051..3202.387 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=192055.66..192255.62 rows=79984 width=14) (actual time=3115.616..3120.230 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 4578kB
                           Worker 0:  Sort Method: quicksort  Memory: 4499kB
                           Worker 1:  Sort Method: quicksort  Memory: 4450kB
                           Worker 2:  Sort Method: quicksort  Memory: 4585kB
                           Worker 3:  Sort Method: quicksort  Memory: 4608kB
                           ->  Nested Loop  (cost=0.99..185541.99 rows=79984 width=14) (actual time=0.666..3086.014 rows=64160 loops=5)
                                 ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.347..35.740 rows=802 loops=5)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.235..10.455 rows=20000 loops=5)
                                             Heap Fetches: 0
                                       ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                             Index Cond: (n_nationkey = supplier.s_nationkey)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..151.27 rows=81 width=18) (actual time=0.120..3.781 rows=80 loops=4010)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 18.876 ms
 Execution Time: 3543.349 ms
(46 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=430236.14..430236.14 rows=1 width=36) (actual time=567.710..587.121 rows=0 loops=1)
   InitPlan 1 (returns $3)
     ->  Finalize Aggregate  (cost=187142.31..187142.32 rows=1 width=32) (actual time=142.289..142.395 rows=1 loops=1)
           ->  Gather  (cost=187141.88..187142.29 rows=4 width=32) (actual time=141.933..142.380 rows=4 loops=1)
                 Workers Planned: 4
                 Workers Launched: 3
                 ->  Partial Aggregate  (cost=186141.88..186141.89 rows=1 width=32) (actual time=139.099..139.100 rows=1 loops=4)
                       ->  Nested Loop  (cost=0.99..185541.99 rows=79984 width=10) (actual time=0.128..118.421 rows=80200 loops=4)
                             ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.113..31.981 rows=1002 loops=4)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.058..5.276 rows=25000 loops=4)
                                         Heap Fetches: 0
                                   ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                         Index Cond: (n_nationkey = supplier_1.s_nationkey)
                                         Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                         Rows Removed by Filter: 1
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..151.27 rows=81 width=14) (actual time=0.003..0.077 rows=80 loops=4010)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=243093.82..243360.43 rows=106645 width=36) (actual time=567.709..587.013 rows=0 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=193055.72..242560.59 rows=106645 width=36) (actual time=567.701..587.005 rows=0 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $3)
               Rows Removed by Filter: 301833
               ->  Gather Merge  (cost=193055.72..231362.90 rows=319934 width=14) (actual time=171.003..248.430 rows=320800 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=192055.66..192255.62 rows=79984 width=14) (actual time=163.003..167.557 rows=64160 loops=5)
                           Sort Key: partsupp.ps_partkey
                           Sort Method: quicksort  Memory: 7153kB
                           Worker 0:  Sort Method: quicksort  Memory: 6369kB
                           Worker 1:  Sort Method: quicksort  Memory: 4390kB
                           Worker 2:  Sort Method: quicksort  Memory: 3783kB
                           Worker 3:  Sort Method: quicksort  Memory: 4098kB
                           ->  Nested Loop  (cost=0.99..185541.99 rows=79984 width=14) (actual time=0.108..142.378 rows=64160 loops=5)
                                 ->  Nested Loop  (cost=0.55..33462.92 rows=1000 width=4) (actual time=0.094..35.936 rows=802 loops=5)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.42..4514.42 rows=25000 width=8) (actual time=0.030..11.246 rows=20000 loops=5)
                                             Heap Fetches: 0
                                       ->  Index Scan using nation_pkey on nation  (cost=0.14..1.16 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=100000)
                                             Index Cond: (n_nationkey = supplier.s_nationkey)
                                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                             Rows Removed by Filter: 1
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..151.27 rows=81 width=18) (actual time=0.006..0.119 rows=80 loops=4010)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.308 ms
 Execution Time: 587.201 ms
(46 rows)

query 12 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=140895.79..324953.41 rows=1 width=27) (actual time=9761.617..9765.885 rows=1 loops=1)
   ->  GroupAggregate  (cost=140895.79..1429299.14 rows=7 width=27) (actual time=9761.616..9765.883 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=140895.79..1424337.05 rows=283544 width=27) (actual time=611.900..9672.520 rows=155572 loops=1)
               ->  Gather Merge  (cost=140895.36..174845.39 rows=283544 width=15) (actual time=611.211..696.422 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=139895.30..140072.51 rows=70886 width=15) (actual time=600.725..603.660 rows=32128 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 4183kB
                           Worker 0:  Sort Method: quicksort  Memory: 4479kB
                           Worker 1:  Sort Method: quicksort  Memory: 6145kB
                           Worker 2:  Sort Method: quicksort  Memory: 4482kB
                           Worker 3:  Sort Method: quicksort  Memory: 4520kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..134184.29 rows=70886 width=15) (actual time=0.179..588.049 rows=62252 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 155618
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.057..0.057 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 27.640 ms
 Execution Time: 9766.296 ms
(23 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=140895.79..324953.41 rows=1 width=27) (actual time=712.460..718.510 rows=1 loops=1)
   ->  GroupAggregate  (cost=140895.79..1429299.14 rows=7 width=27) (actual time=712.459..718.508 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=140895.79..1424337.05 rows=283544 width=27) (actual time=227.492..677.629 rows=155572 loops=1)
               ->  Gather Merge  (cost=140895.36..174845.39 rows=283544 width=15) (actual time=227.431..271.178 rows=155572 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=139895.30..140072.51 rows=70886 width=15) (actual time=220.794..222.817 rows=32001 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 4474kB
                           Worker 0:  Sort Method: quicksort  Memory: 6258kB
                           Worker 1:  Sort Method: quicksort  Memory: 4466kB
                           Worker 2:  Sort Method: quicksort  Memory: 4004kB
                           Worker 3:  Sort Method: quicksort  Memory: 4606kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.43..134184.29 rows=70886 width=15) (actual time=0.041..209.462 rows=62252 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 155618
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.41 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=155572)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.583 ms
 Execution Time: 718.573 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430398.32..1430398.32 rows=1 width=16) (actual time=17869.331..17869.334 rows=1 loops=1)
   ->  Sort  (cost=1430398.32..1430398.82 rows=200 width=16) (actual time=17869.329..17869.332 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430395.32..1430397.32 rows=200 width=16) (actual time=17869.303..17869.311 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275732.14..1407895.56 rows=1499984 width=12) (actual time=15238.496..17703.941 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 8  Batches: 9  Memory Usage: 32849kB  Disk Usage: 325144kB
                     ->  Hash Right Join  (cost=55341.99..666481.54 rows=14996938 width=8) (actual time=343.922..11371.862 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448748.47 rows=14996938 width=8) (actual time=0.576..5180.467 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30732.19..30732.19 rows=1499984 width=4) (actual time=341.650..341.650 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30732.19 rows=1499984 width=4) (actual time=0.405..156.857 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 17.325 ms
 Execution Time: 17924.494 ms
(21 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1430398.32..1430398.32 rows=1 width=16) (actual time=17282.058..17282.061 rows=1 loops=1)
   ->  Sort  (cost=1430398.32..1430398.82 rows=200 width=16) (actual time=17282.057..17282.059 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=1430395.32..1430397.32 rows=200 width=16) (actual time=17282.030..17282.039 rows=46 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=1275732.14..1407895.56 rows=1499984 width=12) (actual time=14655.193..17114.480 rows=1500000 loops=1)
                     Group Key: customer.c_custkey
                     Planned Partitions: 8  Batches: 9  Memory Usage: 32849kB  Disk Usage: 325144kB
                     ->  Hash Right Join  (cost=55341.99..666481.54 rows=14996938 width=8) (actual time=307.234..10818.757 rows=15337604 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..448748.47 rows=14996938 width=8) (actual time=0.033..4691.223 rows=14837583 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 162417
                           ->  Hash  (cost=30732.19..30732.19 rows=1499984 width=4) (actual time=305.828..305.829 rows=1500000 loops=1)
                                 Buckets: 1048576  Batches: 4  Memory Usage: 21380kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.43..30732.19 rows=1499984 width=4) (actual time=0.019..125.290 rows=1500000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.773 ms
 Execution Time: 17337.325 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=886380.85..886380.87 rows=1 width=32) (actual time=5355.590..5411.626 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=886380.85..886380.87 rows=1 width=32) (actual time=5355.589..5411.624 rows=1 loops=1)
         ->  Gather  (cost=886380.40..886380.81 rows=4 width=64) (actual time=5349.256..5411.599 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=885380.40..885380.41 rows=1 width=64) (actual time=5341.387..5341.391 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=64841.29..882488.80 rows=165234 width=33) (actual time=742.613..5186.927 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12610.14..829796.95 rows=175502 width=16) (actual time=297.671..4570.568 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=82917
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12434.64 rows=702007 width=0) (actual time=192.413..192.413 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.07..45981.07 rows=500007 width=25) (actual time=442.677..442.678 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137280kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.07 rows=500007 width=25) (actual time=0.712..303.962 rows=400000 loops=5)
 Planning Time: 25.382 ms
 Execution Time: 5412.451 ms
(18 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=886380.85..886380.87 rows=1 width=32) (actual time=1687.504..1735.266 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=886380.85..886380.87 rows=1 width=32) (actual time=1687.502..1735.263 rows=1 loops=1)
         ->  Gather  (cost=886380.40..886380.81 rows=4 width=64) (actual time=1682.785..1735.241 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=885380.40..885380.41 rows=1 width=64) (actual time=1677.977..1677.980 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=64841.29..882488.80 rows=165234 width=33) (actual time=556.363..1580.821 rows=154588 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=12610.14..829796.95 rows=175502 width=16) (actual time=279.330..1169.745 rows=154588 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=83037
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..12434.64 rows=702007 width=0) (actual time=174.029..174.029 rows=772942 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=45981.07..45981.07 rows=500007 width=25) (actual time=274.935..274.936 rows=400000 loops=5)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 137344kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..45981.07 rows=500007 width=25) (actual time=0.044..131.476 rows=400000 loops=5)
 Planning Time: 2.166 ms
 Execution Time: 1735.323 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2752704.03..2752816.44 rows=1 width=103) (actual time=13225.505..13283.774 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1394978.78..1394978.79 rows=1 width=32) (actual time=2915.803..2925.563 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1392474.76..1393726.77 rows=100161 width=36) (actual time=2865.213..2919.770 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 5  Memory Usage: 57393kB  Disk Usage: 648kB
                 ->  Gather  (cost=1348153.52..1389469.93 rows=400644 width=36) (actual time=2491.831..2594.112 rows=398552 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1347153.52..1348405.53 rows=100161 width=36) (actual time=2487.452..2540.358 rows=99638 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 31761kB
                             Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 208kB
                             Worker 1:  Batches: 1  Memory Usage: 31761kB
                             Worker 2:  Batches: 1  Memory Usage: 31761kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=41661.87..1341355.15 rows=579837 width=16) (actual time=446.175..2044.421 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109280 lossy=73418
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41082.04 rows=2319347 width=0) (actual time=350.554..350.555 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1357725.23..1414045.09 rows=501 width=103) (actual time=13225.504..13274.012 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1357724.94..1412456.77 rows=501 width=36) (actual time=13224.861..13273.368 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1357724.94..1405695.91 rows=400644 width=36) (actual time=10075.481..10188.884 rows=346259 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1356724.88..1356975.29 rows=100161 width=36) (actual time=10041.865..10049.618 rows=69825 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10806kB
                           Worker 0:  Sort Method: quicksort  Memory: 10797kB
                           Worker 1:  Sort Method: quicksort  Memory: 10804kB
                           Worker 2:  Sort Method: quicksort  Memory: 10801kB
                           Worker 3:  Sort Method: quicksort  Memory: 10796kB
                           ->  Partial HashAggregate  (cost=1347153.52..1348405.53 rows=100161 width=36) (actual time=9945.513..10010.896 rows=98922 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 31761kB
                                 Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 208kB
                                 Worker 1:  Batches: 1  Memory Usage: 31761kB
                                 Worker 2:  Batches: 1  Memory Usage: 31761kB
                                 Worker 3:  Batches: 1  Memory Usage: 31761kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=41661.87..1341355.15 rows=579837 width=16) (actual time=488.134..9444.734 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=81087 lossy=54222
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41082.04 rows=2319347 width=0) (actual time=397.409..397.410 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.16 rows=1 width=71) (actual time=0.636..0.636 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 25.849 ms
 Execution Time: 13285.976 ms
(53 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2752704.03..2752816.44 rows=1 width=103) (actual time=5942.108..5997.291 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Aggregate  (cost=1394978.78..1394978.79 rows=1 width=32) (actual time=2931.481..2940.852 rows=1 loops=1)
           ->  Finalize HashAggregate  (cost=1392474.76..1393726.77 rows=100161 width=36) (actual time=2876.743..2935.049 rows=100000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 5  Memory Usage: 52273kB  Disk Usage: 1656kB
                 ->  Gather  (cost=1348153.52..1389469.93 rows=400644 width=36) (actual time=2505.165..2606.625 rows=398571 loops=1)
                       Workers Planned: 4
                       Workers Launched: 3
                       ->  Partial HashAggregate  (cost=1347153.52..1348405.53 rows=100161 width=36) (actual time=2500.868..2553.615 rows=99643 loops=4)
                             Group Key: lineitem_1.l_suppkey
                             Batches: 1  Memory Usage: 31761kB
                             Worker 0:  Batches: 5  Memory Usage: 34865kB  Disk Usage: 208kB
                             Worker 1:  Batches: 1  Memory Usage: 31761kB
                             Worker 2:  Batches: 1  Memory Usage: 31761kB
                             ->  Parallel Bitmap Heap Scan on lineitem lineitem_1  (cost=41661.87..1341355.15 rows=579837 width=16) (actual time=448.200..2059.404 rows=566428 loops=4)
                                   Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                   Rows Removed by Index Recheck: 3305913
                                   Heap Blocks: exact=109080 lossy=72985
                                   ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41082.04 rows=2319347 width=0) (actual time=352.169..352.169 rows=2265714 loops=1)
                                         Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=1357725.23..1414045.09 rows=501 width=103) (actual time=5942.107..5987.917 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=1357724.94..1412456.77 rows=501 width=36) (actual time=5942.063..5987.872 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $1)
               Rows Removed by Filter: 69997
               ->  Gather Merge  (cost=1357724.94..1405695.91 rows=400644 width=36) (actual time=2776.610..2886.840 rows=346218 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=1356724.88..1356975.29 rows=100161 width=36) (actual time=2747.252..2754.723 rows=69776 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 10805kB
                           Worker 0:  Sort Method: quicksort  Memory: 10797kB
                           Worker 1:  Sort Method: quicksort  Memory: 10824kB
                           Worker 2:  Sort Method: quicksort  Memory: 10796kB
                           Worker 3:  Sort Method: quicksort  Memory: 10779kB
                           ->  Partial HashAggregate  (cost=1347153.52..1348405.53 rows=100161 width=36) (actual time=2651.978..2717.048 rows=98916 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 31761kB
                                 Worker 0:  Batches: 1  Memory Usage: 31761kB
                                 Worker 1:  Batches: 1  Memory Usage: 31761kB
                                 Worker 2:  Batches: 1  Memory Usage: 31761kB
                                 Worker 3:  Batches: 1  Memory Usage: 31761kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=41661.87..1341355.15 rows=579837 width=16) (actual time=456.378..2255.277 rows=453143 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Rows Removed by Index Recheck: 2644730
                                       Heap Blocks: exact=80724 lossy=53428
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..41082.04 rows=2319347 width=0) (actual time=362.025..362.025 rows=2265714 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.16 rows=1 width=71) (actual time=0.039..0.039 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 2.083 ms
 Execution Time: 5999.379 ms
(53 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262108.24..262108.24 rows=1 width=44) (actual time=2457.320..2465.710 rows=1 loops=1)
   ->  Sort  (cost=262108.24..262491.99 rows=153500 width=44) (actual time=2457.319..2465.707 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=183063.42..261340.74 rows=153500 width=44) (actual time=1850.112..2458.834 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=183063.42..253890.41 rows=591533 width=40) (actual time=1850.057..2193.999 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=182063.36..182433.07 rows=147883 width=40) (actual time=1794.425..1814.535 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 24992kB
                           Worker 0:  Sort Method: quicksort  Memory: 24171kB
                           Worker 1:  Sort Method: quicksort  Memory: 24774kB
                           Worker 2:  Sort Method: quicksort  Memory: 25542kB
                           Worker 3:  Sort Method: quicksort  Memory: 23925kB
                           ->  Parallel Hash Join  (cost=57879.60..169364.58 rows=147883 width=40) (actual time=381.490..1039.370 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..112334.48 rows=999792 width=8) (actual time=42.270..506.891 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=1.513..41.367 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.17..53481.17 rows=73958 width=40) (actual time=338.550..338.551 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.17 rows=73958 width=40) (actual time=0.117..312.772 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 19.038 ms
 Execution Time: 2466.766 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=262108.24..262108.24 rows=1 width=44) (actual time=2143.798..2156.761 rows=1 loops=1)
   ->  Sort  (cost=262108.24..262491.99 rows=153500 width=44) (actual time=2143.796..2156.759 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=183063.42..261340.74 rows=153500 width=44) (actual time=1539.023..2149.823 rows=27838 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=183063.42..253890.41 rows=591533 width=40) (actual time=1538.961..1884.469 rows=1186319 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=182063.36..182433.07 rows=147883 width=40) (actual time=1473.461..1493.495 rows=237264 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 24050kB
                           Worker 0:  Sort Method: quicksort  Memory: 25613kB
                           Worker 1:  Sort Method: quicksort  Memory: 25939kB
                           Worker 2:  Sort Method: quicksort  Memory: 23439kB
                           Worker 3:  Sort Method: quicksort  Memory: 24363kB
                           ->  Parallel Hash Join  (cost=57879.60..169364.58 rows=147883 width=40) (actual time=191.481..734.052 rows=237264 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=3473.96..112334.48 rows=999792 width=8) (actual time=27.913..373.137 rows=1599104 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 896
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..3471.00 rows=1010 width=4) (actual time=0.083..27.678 rows=56 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 99944
                                 ->  Parallel Hash  (cost=53481.17..53481.17 rows=73958 width=40) (actual time=162.847..162.848 rows=59347 loops=5)
                                       Buckets: 524288  Batches: 1  Memory Usage: 26368kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..53481.17 rows=73958 width=40) (actual time=0.012..133.181 rows=59347 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 340653
 Planning Time: 1.081 ms
 Execution Time: 2156.836 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1771199.57..1771199.58 rows=1 width=32) (actual time=29962.038..29995.226 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1771199.57..1771199.58 rows=1 width=32) (actual time=29962.036..29995.224 rows=1 loops=1)
         ->  Gather  (cost=1771199.14..1771199.55 rows=4 width=32) (actual time=29955.510..29995.203 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1770199.14..1770199.15 rows=1 width=32) (actual time=29922.510..29922.512 rows=1 loops=5)
                     ->  Nested Loop  (cost=48503.81..1770187.03 rows=4841 width=8) (actual time=600.482..29921.287 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48503.25..1768631.62 rows=514 width=40) (actual time=596.747..28628.036 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48502.68..48503.89 rows=484 width=4) (actual time=295.910..296.146 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 42kB
                                       Worker 0:  Sort Method: quicksort  Memory: 41kB
                                       Worker 1:  Sort Method: quicksort  Memory: 45kB
                                       Worker 2:  Sort Method: quicksort  Memory: 44kB
                                       Worker 3:  Sort Method: quicksort  Memory: 44kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.10 rows=484 width=4) (actual time=0.552..295.598 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1693567.59 rows=2124303 width=36) (actual time=1.856..28188.240 rows=1996998 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361796.92 rows=59981224 width=9) (actual time=0.712..17697.294 rows=59895832 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.91 rows=9 width=17) (actual time=3.120..3.236 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 26.911 ms
 Execution Time: 29995.619 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1771199.57..1771199.58 rows=1 width=32) (actual time=29009.717..29037.306 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=1771199.57..1771199.58 rows=1 width=32) (actual time=29009.715..29037.304 rows=1 loops=1)
         ->  Gather  (cost=1771199.14..1771199.55 rows=4 width=32) (actual time=28390.126..29037.281 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=1770199.14..1770199.15 rows=1 width=32) (actual time=28544.821..28544.823 rows=1 loops=5)
                     ->  Nested Loop  (cost=48503.81..1770187.03 rows=4841 width=8) (actual time=693.741..28544.451 rows=1064 loops=5)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=48503.25..1768631.62 rows=514 width=40) (actual time=693.688..28528.402 rows=399 loops=5)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=48502.68..48503.89 rows=484 width=4) (actual time=137.078..137.266 rows=399 loops=5)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 48kB
                                       Worker 0:  Sort Method: quicksort  Memory: 45kB
                                       Worker 1:  Sort Method: quicksort  Memory: 38kB
                                       Worker 2:  Sort Method: quicksort  Memory: 40kB
                                       Worker 3:  Sort Method: quicksort  Memory: 45kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..48481.10 rows=484 width=4) (actual time=1.161..136.909 rows=399 loops=5)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 399601
                                 ->  GroupAggregate  (cost=0.56..1693567.59 rows=2124303 width=36) (actual time=0.079..28239.965 rows=1975130 loops=5)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.56..1361796.92 rows=59981224 width=9) (actual time=0.038..17579.516 rows=59239824 loops=5)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.56..2.91 rows=9 width=17) (actual time=0.034..0.036 rows=3 loops=1996)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 2.285 ms
 Execution Time: 29037.373 ms
(29 rows)

query 18 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7359369.59..7359369.84 rows=100 width=71) (actual time=30508.070..30508.083 rows=99 loops=1)
   ->  Sort  (cost=7359369.59..7409343.51 rows=19989565 width=71) (actual time=30508.069..30508.076 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994134.16..6595382.79 rows=19989565 width=71) (actual time=30507.539..30507.974 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 256  Batches: 1  Memory Usage: 3121kB
               ->  Hash Join  (cost=78558.94..4741662.98 rows=19989565 width=44) (actual time=3131.680..30507.153 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=73.30..4328619.58 rows=19989565 width=25) (actual time=666.882..29726.352 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2604831.52 rows=4998435 width=24) (actual time=505.179..22051.418 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568508.01 rows=14998438 width=20) (actual time=0.721..3300.358 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886362.63 rows=4998435 width=4) (actual time=395.031..17856.767 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361526.92 rows=59981224 width=9) (actual time=0.521..6435.778 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361526.92 rows=59981224 width=9) (actual time=0.016..5126.902 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.84..50946.84 rows=1499984 width=23) (actual time=673.318..673.318 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50946.84 rows=1499984 width=23) (actual time=0.435..419.289 rows=1500000 loops=1)
 Planning Time: 32.687 ms
 Execution Time: 30508.899 ms
(27 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=7359369.59..7359369.84 rows=100 width=71) (actual time=28857.318..28857.331 rows=99 loops=1)
   ->  Sort  (cost=7359369.59..7409343.51 rows=19989565 width=71) (actual time=28857.317..28857.324 rows=99 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 32kB
         ->  HashAggregate  (cost=5994134.16..6595382.79 rows=19989565 width=71) (actual time=28856.829..28857.238 rows=99 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 256  Batches: 1  Memory Usage: 3121kB
               ->  Hash Join  (cost=78558.94..4741662.98 rows=19989565 width=44) (actual time=2823.895..28856.480 rows=693 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=73.30..4328619.58 rows=19989565 width=25) (actual time=612.244..28205.327 rows=693 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=1.00..2604831.52 rows=4998435 width=24) (actual time=450.226..20520.304 rows=99 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..568508.01 rows=14998438 width=20) (actual time=0.059..2533.510 rows=14982724 loops=1)
                                 ->  GroupAggregate  (cost=0.56..1886362.63 rows=4998435 width=4) (actual time=369.931..17121.377 rows=99 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 14999901
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.56..1361526.92 rows=59981224 width=9) (actual time=0.037..5878.754 rows=59986052 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.56..1361526.92 rows=59981224 width=9) (actual time=0.014..5130.524 rows=59916431 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=50946.84..50946.84 rows=1499984 width=23) (actual time=544.285..544.286 rows=1500000 loops=1)
                           Buckets: 524288  Batches: 4  Memory Usage: 24623kB
                           ->  Seq Scan on customer  (cost=0.00..50946.84 rows=1499984 width=23) (actual time=0.028..296.248 rows=1500000 loops=1)
 Planning Time: 3.073 ms
 Execution Time: 28857.875 ms
(27 rows)

query 19 run 1
SET
SET
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         

 Limit  (cost=67249.64..67249.65 rows=1 width=32) (actual time=869.231..869.377 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67249.64..67249.65 rows=1 width=32) (actual time=869.229..869.375 rows=1 loops=1)
         ->  Gather  (cost=67249.21..67249.62 rows=4 width=32) (actual time=869.200..869.361 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66249.21..66249.22 rows=1 width=32) (actual time=857.799..857.800 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66247.20 rows=268 width=12) (actual time=7.575..857.381 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.29 rows=1197 width=30) (actual time=0.512..225.880 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.34 rows=1 width=21) (actual time=0.636..0.659 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 28.927 ms
 Execution Time: 869.434 ms
(17 rows)

SET
SET
SET


 Limit  (cost=67249.64..67249.65 rows=1 width=32) (actual time=162.115..164.182 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=67249.64..67249.65 rows=1 width=32) (actual time=162.113..164.180 rows=1 loops=1)
         ->  Gather  (cost=67249.21..67249.62 rows=4 width=32) (actual time=156.704..164.157 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=66249.21..66249.22 rows=1 width=32) (actual time=152.488..152.489 rows=1 loops=5)
                     ->  Nested Loop  (cost=0.56..66247.20 rows=268 width=12) (actual time=0.616..152.308 rows=213 loops=5)
                           ->  Parallel Seq Scan on part  (cost=0.00..62231.29 rows=1197 width=30) (actual time=0.086..132.521 rows=956 loops=5)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 399044
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.34 rows=1 width=21) (actual time=0.018..0.019 rows=0 loops=4781)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.930 ms
 Execution Time: 164.228 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2529307.59..2777039.68 rows=1 width=51) (actual time=16380.017..16381.330 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2529307.59..2777039.68 rows=1 width=51) (actual time=16380.016..16381.328 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 12776
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=55) (actual time=24.959..26.208 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=55) (actual time=20.076..20.092 rows=357 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 399kB
                     Worker 0:  Sort Method: quicksort  Memory: 254kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=55) (actual time=0.318..18.791 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=59) (actual time=0.163..13.766 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.103..0.104 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.098..0.100 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2525184.66..2772280.87 rows=3 width=8) (actual time=14934.540..16354.057 rows=12777 loops=1)
               ->  Hash Join  (cost=2525184.66..2772280.86 rows=3 width=8) (actual time=14934.536..16351.427 rows=12777 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 26
                     ->  HashAggregate  (cost=2455321.60..2617494.33 rows=4852763 width=40) (actual time=14380.573..15623.224 rows=1183786 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 64  Batches: 65  Memory Usage: 35345kB  Disk Usage: 388568kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024861.36 rows=9152643 width=13) (actual time=0.495..10404.879 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68651.21..68651.21 rows=80790 width=16) (actual time=553.580..553.641 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68651.21 rows=80790 width=16) (actual time=0.307..532.695 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59572.21 rows=20198 width=16) (actual time=0.373..533.391 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.65 rows=5050 width=4) (actual time=0.334..204.248 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.61 rows=17 width=12) (actual time=0.074..0.075 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 31.946 ms
 Execution Time: 16433.656 ms
(45 rows)

SET
SET
SET
                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=2529307.59..2777039.68 rows=1 width=51) (actual time=13804.308..13805.577 rows=1 loops=1)
   ->  Nested Loop Semi Join  (cost=2529307.59..2777039.68 rows=1 width=51) (actual time=13804.306..13805.575 rows=1 loops=1)
         Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
         Rows Removed by Join Filter: 12776
         ->  Gather Merge  (cost=4122.93..4578.81 rows=4000 width=55) (actual time=12.871..14.081 rows=1 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Sort  (cost=3122.92..3128.80 rows=2353 width=55) (actual time=11.015..11.031 rows=360 loops=2)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 398kB
                     Worker 0:  Sort Method: quicksort  Memory: 254kB
                     ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=55) (actual time=0.075..9.843 rows=2048 loops=2)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=59) (actual time=0.009..3.430 rows=50000 loops=2)
                           ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=2)
                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                 ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=2)
                                       Filter: (n_name = 'IRAQ'::bpchar)
                                       Rows Removed by Filter: 24
         ->  Materialize  (cost=2525184.66..2772280.87 rows=3 width=8) (actual time=12376.497..13790.428 rows=12777 loops=1)
               ->  Hash Join  (cost=2525184.66..2772280.86 rows=3 width=8) (actual time=12376.495..13787.829 rows=12777 loops=1)
                     Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                     Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                     Rows Removed by Join Filter: 26
                     ->  HashAggregate  (cost=2455321.60..2617494.33 rows=4852763 width=40) (actual time=12263.497..13500.429 rows=1183786 loops=1)
                           Group Key: lineitem.l_partkey, lineitem.l_suppkey
                           Planned Partitions: 64  Batches: 65  Memory Usage: 35345kB  Disk Usage: 388568kB
                           ->  Seq Scan on lineitem  (cost=0.00..2024861.36 rows=9152643 width=13) (actual time=0.054..8461.806 rows=9123688 loops=1)
                                 Filter: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 Rows Removed by Filter: 50862364
                     ->  Hash  (cost=68651.21..68651.21 rows=80790 width=16) (actual time=112.631..112.688 rows=86872 loops=1)
                           Buckets: 131072  Batches: 1  Memory Usage: 5097kB
                           ->  Gather  (cost=1000.86..68651.21 rows=80790 width=16) (actual time=0.306..95.358 rows=86872 loops=1)
                                 Workers Planned: 4
                                 Workers Launched: 4
                                 ->  Nested Loop  (cost=0.86..59572.21 rows=20198 width=16) (actual time=0.052..97.275 rows=17374 loops=5)
                                       ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.43..45556.65 rows=5050 width=4) (actual time=0.033..78.569 rows=4344 loops=5)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 395656
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.43..2.61 rows=17 width=12) (actual time=0.003..0.004 rows=4 loops=21718)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 2.438 ms
 Execution Time: 13856.325 ms
(45 rows)

query 21 run 1
SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=648380.97..648380.97 rows=1 width=34) (actual time=18546.349..18776.986 rows=100 loops=1)
   ->  Sort  (cost=648380.97..648380.97 rows=1 width=34) (actual time=18546.347..18776.978 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=648380.94..648380.96 rows=1 width=34) (actual time=18539.376..18775.794 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=648380.94..648380.94 rows=1 width=26) (actual time=18539.367..18771.440 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=345172.19..648380.93 rows=1 width=26) (actual time=4847.906..18587.232 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=345171.62..648378.28 rows=1 width=38) (actual time=4847.113..9257.194 rows=65960 loops=1)
                                 ->  Gather  (cost=345171.19..648375.84 rows=1 width=34) (actual time=4846.881..5142.917 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Anti Join  (cost=344171.19..647375.74 rows=1 width=34) (actual time=4822.324..5499.154 rows=26831 loops=5)
                                             Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 109331
                                             ->  Parallel Hash Join  (cost=3021.13..282082.56 rows=199616 width=34) (actual time=20.157..1738.774 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259143.62 rows=4998435 width=8) (actual time=0.051..1009.189 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=20.050..20.052 rows=798 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 352kB
                                                         ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.739..19.633 rows=798 loops=5)
                                                               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.347..17.183 rows=20000 loops=5)
                                                               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.301..0.302 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.297..0.299 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                             ->  Parallel Hash  (cost=259143.62..259143.62 rows=4998435 width=8) (actual time=2929.125..2929.125 rows=7585870 loops=5)
                                                   Buckets: 1048576  Batches: 64  Memory Usage: 31520kB
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259143.62 rows=4998435 width=8) (actual time=0.244..1787.800 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.030..0.030 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.140..0.141 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 32.052 ms
 Execution Time: 18777.977 ms
(46 rows)

SET
SET
SET
                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=648380.97..648380.97 rows=1 width=34) (actual time=5791.806..6020.587 rows=100 loops=1)
   ->  Sort  (cost=648380.97..648380.97 rows=1 width=34) (actual time=5791.805..6020.579 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 38kB
         ->  GroupAggregate  (cost=648380.94..648380.96 rows=1 width=34) (actual time=5784.818..6019.395 rows=3991 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=648380.94..648380.94 rows=1 width=26) (actual time=5784.806..6015.066 rows=39281 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 4605kB
                     ->  Nested Loop Semi Join  (cost=345172.19..648380.93 rows=1 width=26) (actual time=4099.325..5850.383 rows=39281 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 27756
                           ->  Nested Loop  (cost=345171.62..648378.28 rows=1 width=38) (actual time=4099.120..5591.286 rows=65960 loops=1)
                                 ->  Gather  (cost=345171.19..648375.84 rows=1 width=34) (actual time=4099.084..5140.181 rows=134155 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Parallel Hash Anti Join  (cost=344171.19..647375.74 rows=1 width=34) (actual time=4188.460..5074.164 rows=26831 loops=5)
                                             Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                             Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                             Rows Removed by Join Filter: 109322
                                             ->  Parallel Hash Join  (cost=3021.13..282082.56 rows=199616 width=34) (actual time=6.144..1687.960 rows=302853 loops=5)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.56..259143.62 rows=4998435 width=8) (actual time=0.098..952.018 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                                   ->  Parallel Hash  (cost=2991.15..2991.15 rows=2353 width=30) (actual time=5.994..5.995 rows=798 loops=5)
                                                         Buckets: 4096  Batches: 1  Memory Usage: 320kB
                                                         ->  Hash Join  (cost=1.32..2991.15 rows=2353 width=30) (actual time=0.060..4.670 rows=798 loops=5)
                                                               Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on supplier  (cost=0.00..2809.24 rows=58824 width=34) (actual time=0.010..1.774 rows=20000 loops=5)
                                                               ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.035..0.036 rows=1 loops=5)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.032..0.033 rows=1 loops=5)
                                                                           Filter: (n_name = 'PERU'::bpchar)
                                                                           Rows Removed by Filter: 24
                                             ->  Parallel Hash  (cost=259143.62..259143.62 rows=4998435 width=8) (actual time=2322.712..2322.713 rows=7585870 loops=5)
                                                   Buckets: 1048576  Batches: 64  Memory Usage: 31520kB
                                                   ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.56..259143.62 rows=4998435 width=8) (actual time=0.025..1115.212 rows=7585870 loops=5)
                                                         Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.45 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=134155)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.56..2.63 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=65960)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 3.362 ms
 Execution Time: 6020.899 ms
(46 rows)

query 22 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93876.54..93878.17 rows=1 width=72) (actual time=1888.609..1895.556 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.81..46820.82 rows=1 width=32) (actual time=372.503..372.597 rows=1 loops=1)
           ->  Gather  (cost=46820.38..46820.79 rows=4 width=32) (actual time=372.262..372.584 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.38..45820.39 rows=1 width=32) (actual time=364.048..364.049 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.65 rows=11892 width=6) (actual time=0.089..354.702 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.72..60278.55 rows=8094 width=72) (actual time=1888.608..1895.459 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=47055.72..60076.20 rows=8094 width=38) (actual time=555.782..1888.860 rows=9006 loops=1)
               ->  Gather Merge  (cost=47055.28..49150.64 rows=17500 width=26) (actual time=555.172..580.810 rows=27128 loops=1)
                     Workers Planned: 4
                     Params Evaluated: $1
                     Workers Launched: 3
                     ->  Sort  (cost=46055.22..46066.16 rows=4375 width=26) (actual time=176.317..177.373 rows=7482 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 5443kB
                           Worker 0:  Sort Method: quicksort  Memory: 5146kB
                           Worker 1:  Sort Method: quicksort  Memory: 5230kB
                           Worker 2:  Sort Method: quicksort  Memory: 5258kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45790.65 rows=4375 width=26) (actual time=0.019..159.513 rows=47782 loops=4)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 327218
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.67 rows=19 width=4) (actual time=0.047..0.047 rows=1 loops=27128)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 16.320 ms
 Execution Time: 1896.372 ms
(31 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=93876.54..93878.17 rows=1 width=72) (actual time=476.317..481.814 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=46820.81..46820.82 rows=1 width=32) (actual time=217.959..218.054 rows=1 loops=1)
           ->  Gather  (cost=46820.38..46820.79 rows=4 width=32) (actual time=214.672..218.034 rows=5 loops=1)
                 Workers Planned: 4
                 Workers Launched: 4
                 ->  Partial Aggregate  (cost=45820.38..45820.39 rows=1 width=32) (actual time=209.849..209.850 rows=1 loops=5)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..45790.65 rows=11892 width=6) (actual time=0.017..201.910 rows=76485 loops=5)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 223515
   ->  GroupAggregate  (cost=47055.72..60278.55 rows=8094 width=72) (actual time=476.315..481.717 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=47055.72..60076.20 rows=8094 width=38) (actual time=407.839..479.697 rows=9006 loops=1)
               ->  Gather Merge  (cost=47055.28..49150.64 rows=17500 width=26) (actual time=407.794..420.537 rows=27129 loops=1)
                     Workers Planned: 4
                     Params Evaluated: $1
                     Workers Launched: 3
                     ->  Sort  (cost=46055.22..46066.16 rows=4375 width=26) (actual time=183.672..184.406 rows=7444 loops=4)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 5970kB
                           Worker 0:  Sort Method: quicksort  Memory: 4844kB
                           Worker 1:  Sort Method: quicksort  Memory: 5405kB
                           Worker 2:  Sort Method: quicksort  Memory: 4858kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..45790.65 rows=4375 width=26) (actual time=0.021..167.678 rows=47782 loops=4)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 327218
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.67 rows=19 width=4) (actual time=0.002..0.002 rows=1 loops=27129)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 0.853 ms
 Execution Time: 481.880 ms
(31 rows)

