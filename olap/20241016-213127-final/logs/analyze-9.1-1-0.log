query 1 run 1
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424666.26..424666.26 rows=1 width=25) (actual time=17816.157..17816.157 rows=1 loops=1)
   ->  Sort  (cost=424666.26..424666.27 rows=6 width=25) (actual time=17816.155..17816.155 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424666.12..424666.23 rows=6 width=25) (actual time=17816.125..17816.131 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187574.76 rows=5927284 width=25) (actual time=0.304..1297.868 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 17816.253 ms
(8 rows)

SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424666.26..424666.26 rows=1 width=25) (actual time=17614.389..17614.389 rows=1 loops=1)
   ->  Sort  (cost=424666.26..424666.27 rows=6 width=25) (actual time=17614.387..17614.387 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424666.12..424666.23 rows=6 width=25) (actual time=17614.360..17614.365 rows=4 loops=1)
               ->  Seq Scan on lineitem  (cost=0.00..187574.76 rows=5927284 width=25) (actual time=0.021..1098.434 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
 Total runtime: 17614.479 ms
(8 rows)

query 2 run 1
SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68377.90..68377.90 rows=1 width=192) (actual time=624.820..624.830 rows=100 loops=1)
   ->  Sort  (cost=68377.90..68377.90 rows=1 width=192) (actual time=624.818..624.821 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=45372.20..68377.89 rows=1 width=192) (actual time=447.442..624.203 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..7932.25 rows=754 width=30) (actual time=0.517..48.138 rows=799 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45372.20..45772.20 rows=160000 width=172) (actual time=444.911..472.614 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..31542.03 rows=160000 width=172) (actual time=5.552..311.171 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.002..187.161 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=5.545..5.545 rows=2036 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 403kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.014..5.112 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.001..3.890 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.011..0.011 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.010 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=23.72..23.73 rows=1 width=6) (actual time=0.135..0.135 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=6) (actual time=0.123..0.133 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=10) (actual time=0.114..0.131 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=10) (actual time=0.113..0.126 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=10) (actual time=0.109..0.110 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
 Total runtime: 629.636 ms
(45 rows)

SET
SET
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68377.90..68377.90 rows=1 width=192) (actual time=413.376..413.387 rows=100 loops=1)
   ->  Sort  (cost=68377.90..68377.90 rows=1 width=192) (actual time=413.375..413.380 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         ->  Merge Join  (cost=45372.20..68377.89 rows=1 width=192) (actual time=343.919..412.950 rows=489 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               ->  Index Scan using q2_idx_1 on part  (cost=0.00..7932.25 rows=754 width=30) (actual time=0.022..16.838 rows=799 loops=1)
                     Index Cond: (p_size = 16)
                     Filter: ((p_type)::text ~~ '%NICKEL'::text)
               ->  Sort  (cost=45372.20..45772.20 rows=160000 width=172) (actual time=343.796..369.409 rows=162846 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: external sort  Disk: 30488kB
                     ->  Hash Join  (cost=408.03..31542.03 rows=160000 width=172) (actual time=3.096..215.298 rows=162880 loops=1)
                           Hash Cond: (public.partsupp.ps_suppkey = public.supplier.s_suppkey)
                           ->  Seq Scan on partsupp  (cost=0.00..25534.00 rows=800000 width=14) (actual time=0.001..45.498 rows=800000 loops=1)
                           ->  Hash  (cost=383.03..383.03 rows=2000 width=166) (actual time=3.090..3.090 rows=2036 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 403kB
                                 ->  Hash Join  (cost=2.53..383.03 rows=2000 width=166) (actual time=0.013..2.693 rows=2036 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=144) (actual time=0.000..0.749 rows=10000 loops=1)
                                       ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.012..0.012 rows=5 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                             ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.006..0.011 rows=5 loops=1)
                                                   Hash Cond: (public.nation.n_regionkey = public.region.r_regionkey)
                                                   ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
               SubPlan 1
                 ->  Aggregate  (cost=23.72..23.73 rows=1 width=6) (actual time=0.018..0.019 rows=1 loops=650)
                       ->  Nested Loop  (cost=0.00..23.72 rows=1 width=6) (actual time=0.011..0.017 rows=2 loops=650)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=650)
                                   Filter: (r_name = 'AMERICA'::bpchar)
                             ->  Nested Loop  (cost=0.00..22.61 rows=4 width=10) (actual time=0.007..0.015 rows=4 loops=650)
                                   ->  Nested Loop  (cost=0.00..21.49 rows=4 width=10) (actual time=0.007..0.012 rows=4 loops=650)
                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..4.36 rows=4 width=10) (actual time=0.005..0.005 rows=4 loops=650)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..4.27 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=2600)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                   ->  Index Scan using nation_pkey on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.000..0.001 rows=1 loops=2600)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
 Total runtime: 417.618 ms
(45 rows)

query 3 run 1
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308364.89..308364.92 rows=10 width=24) (actual time=2489.433..2489.434 rows=10 loops=1)
   ->  Sort  (cost=308364.89..309138.27 rows=309352 width=24) (actual time=2489.432..2489.432 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=293172.73..301679.91 rows=309352 width=24) (actual time=2468.799..2487.379 rows=11612 loops=1)
               ->  Sort  (cost=293172.73..293946.11 rows=309352 width=24) (actual time=2468.785..2469.938 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62078.05..264961.54 rows=309352 width=24) (actual time=653.317..2460.475 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187574.76 rows=3257389 width=16) (actual time=0.003..1124.049 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60297.03..60297.03 rows=142482 width=12) (actual time=652.450..652.450 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=5840.75..60297.03 rows=142482 width=12) (actual time=53.522..627.271 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=724485 width=16) (actual time=0.002..352.348 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29500 width=4) (actual time=53.505..53.505 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29500 width=4) (actual time=0.001..49.511 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2489.490 ms
(23 rows)

SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=308364.89..308364.92 rows=10 width=24) (actual time=2043.045..2043.047 rows=10 loops=1)
   ->  Sort  (cost=308364.89..309138.27 rows=309352 width=24) (actual time=2043.044..2043.044 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount)))), orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=293172.73..301679.91 rows=309352 width=24) (actual time=2022.359..2040.973 rows=11612 loops=1)
               ->  Sort  (cost=293172.73..293946.11 rows=309352 width=24) (actual time=2022.346..2023.459 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=62078.05..264961.54 rows=309352 width=24) (actual time=456.660..2014.640 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187574.76 rows=3257389 width=16) (actual time=0.003..924.347 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                           ->  Hash  (cost=60297.03..60297.03 rows=142482 width=12) (actual time=456.431..456.431 rows=146063 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 6277kB
                                 ->  Hash Join  (cost=5840.75..60297.03 rows=142482 width=12) (actual time=34.799..435.089 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=724485 width=16) (actual time=0.001..253.677 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                       ->  Hash  (cost=5472.00..5472.00 rows=29500 width=4) (actual time=34.783..34.783 rows=30142 loops=1)
                                             Buckets: 4096  Batches: 1  Memory Usage: 1060kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=29500 width=4) (actual time=0.002..31.246 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
 Total runtime: 2043.096 ms
(23 rows)

query 4 run 1
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141240.92..141240.93 rows=1 width=16) (actual time=2133.730..2133.730 rows=1 loops=1)
   ->  Sort  (cost=141240.92..141240.93 rows=1 width=16) (actual time=2133.729..2133.729 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=141240.90..141240.91 rows=1 width=16) (actual time=2133.706..2133.707 rows=5 loops=1)
               ->  Merge Semi Join  (cost=32428.71..140954.21 rows=57338 width=16) (actual time=494.941..2117.060 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32426.88..32570.23 rows=57338 width=20) (actual time=494.359..500.472 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=904.05..27895.12 rows=57338 width=20) (actual time=12.887..480.095 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..889.71 rows=57338 width=0) (actual time=9.980..9.980 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..102475.15 rows=2000394 width=4) (actual time=0.531..1368.789 rows=3793256 loops=1)
 Total runtime: 2133.791 ms
(16 rows)

SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141240.92..141240.93 rows=1 width=16) (actual time=1156.805..1156.806 rows=1 loops=1)
   ->  Sort  (cost=141240.92..141240.93 rows=1 width=16) (actual time=1156.804..1156.804 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=141240.90..141240.91 rows=1 width=16) (actual time=1156.782..1156.782 rows=5 loops=1)
               ->  Merge Semi Join  (cost=32428.71..140954.21 rows=57338 width=16) (actual time=90.444..1144.630 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32426.88..32570.23 rows=57338 width=20) (actual time=90.413..95.566 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=904.05..27895.12 rows=57338 width=20) (actual time=9.471..81.978 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..889.71 rows=57338 width=0) (actual time=6.391..6.391 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Scan using q4_idx_1 on lineitem  (cost=0.00..102475.15 rows=2000394 width=4) (actual time=0.018..807.402 rows=3793256 loops=1)
 Total runtime: 1156.857 ms
(16 rows)

query 5 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245461.14..245461.14 rows=1 width=38) (actual time=2431.466..2431.466 rows=1 loops=1)
   ->  Sort  (cost=245461.14..245461.20 rows=25 width=38) (actual time=2431.465..2431.465 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=245460.77..245461.02 rows=25 width=38) (actual time=2431.452..2431.453 rows=5 loops=1)
               ->  Hash Join  (cost=10443.57..245386.91 rows=7386 width=38) (actual time=100.075..2417.739 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9970.57..239301.99 rows=184602 width=50) (actual time=94.105..2307.470 rows=182435 loops=1)
                           ->  Hash Join  (cost=9970.57..41178.11 rows=46150 width=38) (actual time=93.453..788.749 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3633.54..33225.82 rows=230752 width=8) (actual time=33.405..583.815 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3575.85 rows=230752 width=0) (actual time=30.112..30.112 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=60.018..60.018 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.025..55.004 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..38.544 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.013..0.017 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..4.24 rows=4 width=20) (actual time=0.031..0.032 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.924..5.924 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.461 rows=10000 loops=1)
 Total runtime: 2431.549 ms
(34 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245461.14..245461.14 rows=1 width=38) (actual time=546.917..546.918 rows=1 loops=1)
   ->  Sort  (cost=245461.14..245461.20 rows=25 width=38) (actual time=546.915..546.915 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=245460.77..245461.02 rows=25 width=38) (actual time=546.901..546.901 rows=5 loops=1)
               ->  Hash Join  (cost=10443.57..245386.91 rows=7386 width=38) (actual time=69.083..538.832 rows=7540 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                     ->  Nested Loop  (cost=9970.57..239301.99 rows=184602 width=50) (actual time=65.612..498.252 rows=182435 loops=1)
                           ->  Hash Join  (cost=9970.57..41178.11 rows=46150 width=38) (actual time=65.593..253.055 rows=45297 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Bitmap Heap Scan on orders  (cost=3633.54..33225.82 rows=230752 width=8) (actual time=24.499..141.230 rows=226645 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3575.85 rows=230752 width=0) (actual time=21.251..21.251 rows=226645 loops=1)
                                             Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                 ->  Hash  (cost=5962.03..5962.03 rows=30000 width=38) (actual time=41.077..41.077 rows=29952 loops=1)
                                       Buckets: 4096  Batches: 1  Memory Usage: 2106kB
                                       ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=38) (actual time=0.023..36.580 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.714 rows=150000 loops=1)
                                             ->  Hash  (cost=2.47..2.47 rows=5 width=30) (actual time=0.018..0.018 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=30) (actual time=0.012..0.015 rows=5 loops=1)
                                                         Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.001 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.007..0.007 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..4.24 rows=4 width=20) (actual time=0.004..0.005 rows=4 loops=45297)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.451..3.451 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..2.022 rows=10000 loops=1)
 Total runtime: 546.985 ms
(34 rows)

query 6 run 1
SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116157.80..116157.81 rows=1 width=12) (actual time=1267.123..1267.124 rows=1 loops=1)
   ->  Aggregate  (cost=116157.80..116157.81 rows=1 width=12) (actual time=1267.122..1267.122 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22933.02..115576.96 rows=116167 width=12) (actual time=140.207..1176.411 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22903.98 rows=116167 width=0) (actual time=129.061..129.061 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 1267.154 ms
(7 rows)

SET
SET
                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116157.80..116157.81 rows=1 width=12) (actual time=354.041..354.041 rows=1 loops=1)
   ->  Aggregate  (cost=116157.80..116157.81 rows=1 width=12) (actual time=354.039..354.039 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22933.02..115576.96 rows=116167 width=12) (actual time=116.896..298.582 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22903.98 rows=116167 width=0) (actual time=106.095..106.095 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < 25::numeric))
 Total runtime: 354.070 ms
(7 rows)

query 7 run 1
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240830.08..240830.08 rows=1 width=68) (actual time=3636.095..3636.095 rows=1 loops=1)
   ->  Sort  (cost=240830.08..240844.52 rows=5777 width=68) (actual time=3636.094..3636.094 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=240714.54..240801.19 rows=5777 width=68) (actual time=3636.055..3636.066 rows=4 loops=1)
               ->  Hash Join  (cost=88317.85..240627.88 rows=5777 width=68) (actual time=913.098..3622.673 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87844.85..235735.15 rows=144436 width=76) (actual time=906.918..3504.105 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32445.02..172113.77 rows=1807250 width=24) (actual time=298.820..2336.628 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31993.21 rows=1807250 width=0) (actual time=278.665..278.665 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=607.908..607.908 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=54.089..582.239 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..280.993 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=54.078..54.078 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.131..51.707 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..37.424 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.126..0.126 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.084..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.004 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.697..5.697 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..4.276 rows=10000 loops=1)
 Total runtime: 3636.181 ms
(34 rows)

SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=240830.08..240830.08 rows=1 width=68) (actual time=1603.759..1603.759 rows=1 loops=1)
   ->  Sort  (cost=240830.08..240844.52 rows=5777 width=68) (actual time=1603.757..1603.757 rows=1 loops=1)
         Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=240714.54..240801.19 rows=5777 width=68) (actual time=1603.720..1603.728 rows=4 loops=1)
               ->  Hash Join  (cost=88317.85..240627.88 rows=5777 width=68) (actual time=708.650..1596.950 rows=5729 loops=1)
                     Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (n1.n_nationkey = supplier.s_nationkey))
                     ->  Hash Join  (cost=87844.85..235735.15 rows=144436 width=76) (actual time=705.144..1543.659 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32445.02..172113.77 rows=1807250 width=24) (actual time=234.878..717.885 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..31993.21 rows=1807250 width=0) (actual time=214.894..214.894 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53901.03..53901.03 rows=119904 width=60) (actual time=470.229..470.229 rows=118477 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 10645kB
                                 ->  Hash Join  (cost=5946.02..53901.03 rows=119904 width=60) (actual time=35.691..448.471 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..78.504 rows=1500000 loops=1)
                                       ->  Hash  (cost=5796.15..5796.15 rows=11990 width=60) (actual time=35.472..35.472 rows=11896 loops=1)
                                             Buckets: 2048  Batches: 1  Memory Usage: 1069kB
                                             ->  Hash Join  (cost=16.65..5796.15 rows=11990 width=60) (actual time=0.133..33.587 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..8.069 rows=150000 loops=1)
                                                   ->  Hash  (cost=16.62..16.62 rows=2 width=60) (actual time=0.126..0.126 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Nested Loop  (cost=0.00..16.62 rows=2 width=60) (actual time=0.083..0.125 rows=2 loops=1)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=30) (actual time=0.001..0.003 rows=25 loops=1)
                                                               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=25)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
                     ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.380..3.380 rows=10000 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 391kB
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.002..1.992 rows=10000 loops=1)
 Total runtime: 1603.845 ms
(34 rows)

query 8 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=143250.07..143250.07 rows=1 width=42) (actual time=6453.456..6453.456 rows=1 loops=1)
   ->  Sort  (cost=143250.07..143251.91 rows=737 width=42) (actual time=6453.456..6453.456 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=143233.49..143246.38 rows=737 width=42) (actual time=6453.441..6453.444 rows=2 loops=1)
               ->  Hash Join  (cost=51398.66..143184.51 rows=2449 width=42) (actual time=742.460..6443.116 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51397.10..143137.02 rows=2449 width=20) (actual time=742.438..6438.772 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50949.10..142627.80 rows=2449 width=20) (actual time=736.947..6430.188 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..91504.22 rows=39998 width=20) (actual time=2.489..5658.782 rows=39694 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6513.31 rows=1333 width=4) (actual time=1.340..85.220 rows=1320 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..63.35 rows=33 width=24) (actual time=0.310..4.202 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49800.98..49800.98 rows=91849 width=8) (actual time=731.533..731.533 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=13566.61..49800.98 rows=91849 width=8) (actual time=112.176..712.611 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7229.58..40249.24 rows=459244 width=12) (actual time=54.375..490.473 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7114.77 rows=459244 width=0) (actual time=51.080..51.080 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=57.746..57.746 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.036..53.802 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..37.385 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.028..0.028 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.018..0.026 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.489..5.489 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..4.393 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 6453.539 ms
(45 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=143250.07..143250.07 rows=1 width=42) (actual time=449.297..449.297 rows=1 loops=1)
   ->  Sort  (cost=143250.07..143251.91 rows=737 width=42) (actual time=449.297..449.297 rows=1 loops=1)
         Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=143233.49..143246.38 rows=737 width=42) (actual time=449.284..449.285 rows=2 loops=1)
               ->  Hash Join  (cost=51398.66..143184.51 rows=2449 width=42) (actual time=317.489..446.389 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=51397.10..143137.02 rows=2449 width=20) (actual time=317.467..445.217 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=50949.10..142627.80 rows=2449 width=20) (actual time=314.455..440.462 rows=2485 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Nested Loop  (cost=0.00..91504.22 rows=39998 width=20) (actual time=0.055..108.965 rows=39694 loops=1)
                                       ->  Index Scan using q2_idx_1 on part  (cost=0.00..6513.31 rows=1333 width=4) (actual time=0.034..13.096 rows=1320 loops=1)
                                             Index Cond: ((p_type)::text = 'LARGE POLISHED BRASS'::text)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..63.35 rows=33 width=24) (actual time=0.007..0.068 rows=30 loops=1320)
                                             Index Cond: (l_partkey = part.p_partkey)
                                 ->  Hash  (cost=49800.98..49800.98 rows=91849 width=8) (actual time=314.334..314.334 rows=91179 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 3562kB
                                       ->  Hash Join  (cost=13566.61..49800.98 rows=91849 width=8) (actual time=81.612..301.628 rows=91179 loops=1)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Bitmap Heap Scan on orders  (cost=7229.58..40249.24 rows=459244 width=12) (actual time=41.646..165.475 rows=457263 loops=1)
                                                   Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7114.77 rows=459244 width=0) (actual time=38.358..38.358 rows=457263 loops=1)
                                                         Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5962.03..5962.03 rows=30000 width=4) (actual time=39.951..39.951 rows=29952 loops=1)
                                                   Buckets: 4096  Batches: 1  Memory Usage: 1053kB
                                                   ->  Hash Join  (cost=2.53..5962.03 rows=30000 width=4) (actual time=0.019..36.406 rows=29952 loops=1)
                                                         Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                         ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.001..9.116 rows=150000 loops=1)
                                                         ->  Hash  (cost=2.47..2.47 rows=5 width=4) (actual time=0.014..0.014 rows=5 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.009..0.012 rows=5 loops=1)
                                                                     Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                                     ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                                           Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                                           ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.003..0.003 rows=1 loops=1)
                                                                                 Filter: (r_name = 'AMERICA'::bpchar)
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.009..3.009 rows=10000 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 391kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.001..1.927 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 449.392 ms
(45 rows)

query 9 run 1
SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218061.44..218061.45 rows=1 width=53) (actual time=17579.488..17579.488 rows=1 loops=1)
   ->  Sort  (cost=218061.44..218061.75 rows=121 width=53) (actual time=17579.487..17579.487 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=218059.02..218060.84 rows=121 width=53) (actual time=17579.397..17579.423 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..218056.91 rows=121 width=53) (actual time=3.422..16969.749 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..218009.61 rows=121 width=31) (actual time=3.397..15712.028 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..217529.96 rows=121 width=31) (actual time=2.893..11952.918 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..217069.03 rows=121 width=35) (actual time=2.527..11244.278 rows=325928 loops=1)
                                       ->  Merge Join  (cost=0.00..45056.36 rows=40259 width=18) (actual time=1.311..430.928 rows=43520 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..8702.26 rows=10101 width=4) (actual time=0.542..105.406 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..33927.29 rows=800000 width=14) (actual time=0.718..256.079 rows=799985 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.26 rows=1 width=29) (actual time=0.037..0.246 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.80 rows=1 width=8) (actual time=0.001..0.002 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.95 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.008 rows=25 loops=1)
 Total runtime: 17579.586 ms
(24 rows)

SET
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=218061.44..218061.45 rows=1 width=53) (actual time=3742.556..3742.557 rows=1 loops=1)
   ->  Sort  (cost=218061.44..218061.75 rows=121 width=53) (actual time=3742.554..3742.554 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=218059.02..218060.84 rows=121 width=53) (actual time=3742.465..3742.486 rows=175 loops=1)
               ->  Nested Loop  (cost=0.00..218056.91 rows=121 width=53) (actual time=0.134..3305.929 rows=325928 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Nested Loop  (cost=0.00..218009.61 rows=121 width=31) (actual time=0.121..2322.598 rows=325928 loops=1)
                           ->  Nested Loop  (cost=0.00..217529.96 rows=121 width=31) (actual time=0.109..1364.596 rows=325928 loops=1)
                                 ->  Nested Loop  (cost=0.00..217069.03 rows=121 width=35) (actual time=0.096..919.712 rows=325928 loops=1)
                                       ->  Merge Join  (cost=0.00..45056.36 rows=40259 width=18) (actual time=0.074..288.315 rows=43520 loops=1)
                                             Merge Cond: (part.p_partkey = partsupp.ps_partkey)
                                             ->  Index Scan using part_pkey on part  (cost=0.00..8702.26 rows=10101 width=4) (actual time=0.029..70.806 rows=10880 loops=1)
                                                   Filter: ((p_name)::text ~~ '%navy%'::text)
                                             ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..33927.29 rows=800000 width=14) (actual time=0.025..161.895 rows=799985 loops=1)
                                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.00..4.26 rows=1 width=29) (actual time=0.003..0.013 rows=7 loops=43520)
                                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.00..3.80 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=325928)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Index Scan using q21_idx_3 on orders  (cost=0.00..3.95 rows=1 width=8) (actual time=0.002..0.003 rows=1 loops=325928)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
                     ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=25 loops=325928)
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.007 rows=25 loops=1)
 Total runtime: 3742.642 ms
(24 rows)

query 10 run 1
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245646.20..245646.25 rows=20 width=182) (actual time=2344.540..2344.543 rows=20 loops=1)
   ->  Sort  (cost=245646.20..245784.86 rows=55464 width=182) (actual time=2344.540..2344.541 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=243615.69..244170.33 rows=55464 width=182) (actual time=2321.271..2334.552 rows=38076 loops=1)
               ->  Hash Join  (cost=35566.79..242229.09 rows=55464 width=182) (actual time=575.940..2170.792 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35565.23..241464.89 rows=55464 width=160) (actual time=575.927..2148.343 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28593.23..233175.62 rows=55464 width=16) (actual time=491.782..1993.076 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..187574.76 rows=1462488 width=16) (actual time=0.007..1119.903 rows=1478870 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=27882.01..27882.01 rows=56898 width=8) (actual time=490.864..490.864 rows=57111 loops=1)
                                       Buckets: 8192  Batches: 1  Memory Usage: 2231kB
                                       ->  Bitmap Heap Scan on orders  (cost=897.54..27882.01 rows=56898 width=8) (actual time=12.919..476.406 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..883.31 rows=56898 width=0) (actual time=9.938..9.938 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=84.134..84.134 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.001..50.936 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.009..0.009 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.004 rows=25 loops=1)
 Total runtime: 2344.699 ms
(26 rows)

SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=245646.20..245646.25 rows=20 width=182) (actual time=1663.888..1663.891 rows=20 loops=1)
   ->  Sort  (cost=245646.20..245784.86 rows=55464 width=182) (actual time=1663.887..1663.889 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::numeric - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         ->  HashAggregate  (cost=243615.69..244170.33 rows=55464 width=182) (actual time=1640.704..1654.039 rows=38076 loops=1)
               ->  Hash Join  (cost=35566.79..242229.09 rows=55464 width=182) (actual time=152.270..1496.440 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=35565.23..241464.89 rows=55464 width=160) (actual time=152.257..1475.211 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Hash Join  (cost=28593.23..233175.62 rows=55464 width=16) (actual time=87.221..1341.290 rows=114347 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Seq Scan on lineitem  (cost=0.00..187574.76 rows=1462488 width=16) (actual time=0.006..910.751 rows=1478870 loops=1)
                                       Filter: (l_returnflag = 'R'::bpchar)
                                 ->  Hash  (cost=27882.01..27882.01 rows=56898 width=8) (actual time=86.911..86.911 rows=57111 loops=1)
                                       Buckets: 8192  Batches: 1  Memory Usage: 2231kB
                                       ->  Bitmap Heap Scan on orders  (cost=897.54..27882.01 rows=56898 width=8) (actual time=8.718..79.510 rows=57111 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..883.31 rows=56898 width=0) (actual time=5.806..5.806 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=65.027..65.027 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 26813kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.000..32.749 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.010..0.010 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.006 rows=25 loops=1)
 Total runtime: 1664.049 ms
(26 rows)

query 11 run 1
SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29372.24..29372.24 rows=1 width=14) (actual time=734.901..734.902 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14246.11..14246.13 rows=1 width=10) (actual time=31.922..31.922 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14006.11 rows=32000 width=10) (actual time=0.014..17.954 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..432.71 rows=400 width=4) (actual time=0.010..0.200 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.006 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..426.39 rows=400 width=8) (actual time=0.004..0.151 rows=411 loops=1)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..32.93 rows=80 width=14) (actual time=0.003..0.035 rows=80 loops=411)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=15126.11..15206.11 rows=32000 width=14) (actual time=734.901..734.901 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14566.11..14966.11 rows=32000 width=14) (actual time=729.158..734.730 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..14006.11 rows=32000 width=14) (actual time=0.761..667.620 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..432.71 rows=400 width=4) (actual time=0.570..2.728 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.008 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..426.39 rows=400 width=8) (actual time=0.563..2.641 rows=411 loops=1)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..32.93 rows=80 width=18) (actual time=0.096..1.601 rows=80 loops=411)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 735.186 ms
(25 rows)

SET
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29372.24..29372.24 rows=1 width=14) (actual time=110.193..110.193 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14246.11..14246.13 rows=1 width=10) (actual time=31.193..31.193 rows=1 loops=1)
           ->  Nested Loop  (cost=0.00..14006.11 rows=32000 width=10) (actual time=0.014..17.665 rows=32880 loops=1)
                 ->  Nested Loop  (cost=0.00..432.71 rows=400 width=4) (actual time=0.009..0.175 rows=411 loops=1)
                       ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                       ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..426.39 rows=400 width=8) (actual time=0.004..0.129 rows=411 loops=1)
                             Index Cond: (s_nationkey = public.nation.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..32.93 rows=80 width=14) (actual time=0.003..0.034 rows=80 loops=411)
                       Index Cond: (ps_suppkey = public.supplier.s_suppkey)
   ->  Sort  (cost=15126.11..15206.11 rows=32000 width=14) (actual time=110.192..110.192 rows=1 loops=1)
         Sort Key: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14566.11..14966.11 rows=32000 width=14) (actual time=104.570..110.064 rows=839 loops=1)
               Filter: (sum((public.partsupp.ps_supplycost * (public.partsupp.ps_availqty)::numeric)) > $2)
               ->  Nested Loop  (cost=0.00..14006.11 rows=32000 width=14) (actual time=0.036..54.564 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..432.71 rows=400 width=4) (actual time=0.025..0.630 rows=411 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.007 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                           ->  Index Scan using idx_supplier_nation_key on supplier  (cost=0.00..426.39 rows=400 width=8) (actual time=0.017..0.578 rows=411 loops=1)
                                 Index Cond: (s_nationkey = public.nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.00..32.93 rows=80 width=18) (actual time=0.007..0.121 rows=80 loops=411)
                           Index Cond: (ps_suppkey = public.supplier.s_suppkey)
 Total runtime: 110.260 ms
(25 rows)

query 12 run 1
SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132420.32..132420.32 rows=1 width=27) (actual time=996.964..996.964 rows=1 loops=1)
   ->  Sort  (cost=132420.32..132420.32 rows=1 width=27) (actual time=996.964..996.964 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=132420.30..132420.31 rows=1 width=27) (actual time=996.942..996.942 rows=2 loops=1)
               ->  Merge Join  (cost=70936.91..131950.96 rows=26819 width=27) (actual time=492.570..979.564 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.527..384.705 rows=1499957 loops=1)
                     ->  Sort  (cost=70936.91..71003.97 rows=26824 width=15) (actual time=491.978..494.961 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Bitmap Heap Scan on lineitem  (cost=31483.00..68963.84 rows=26824 width=15) (actual time=103.416..482.142 rows=30953 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..31476.30 rows=26824 width=0) (actual time=97.945..97.945 rows=30953 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 997.032 ms
(16 rows)

SET
SET
                                                                                                                       QUERY PLAN                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=132420.32..132420.32 rows=1 width=27) (actual time=514.575..514.575 rows=1 loops=1)
   ->  Sort  (cost=132420.32..132420.32 rows=1 width=27) (actual time=514.574..514.574 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=132420.30..132420.31 rows=1 width=27) (actual time=514.554..514.555 rows=2 loops=1)
               ->  Merge Join  (cost=70936.91..131950.96 rows=26819 width=27) (actual time=154.211..500.121 rows=30953 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.018..248.676 rows=1499957 loops=1)
                     ->  Sort  (cost=70936.91..71003.97 rows=26824 width=15) (actual time=154.173..156.424 rows=30953 loops=1)
                           Sort Key: lineitem.l_orderkey
                           Sort Method: quicksort  Memory: 2219kB
                           ->  Bitmap Heap Scan on lineitem  (cost=31483.00..68963.84 rows=26824 width=15) (actual time=81.084..149.008 rows=30953 loops=1)
                                 Recheck Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate))
                                 ->  Bitmap Index Scan on q12_idx_1  (cost=0.00..31476.30 rows=26824 width=0) (actual time=77.221..77.221 rows=30953 loops=1)
                                       Index Cond: ((l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[])) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
 Total runtime: 514.629 ms
(16 rows)

query 13 run 1
SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=97860.31..97860.31 rows=1 width=8) (actual time=2258.751..2258.751 rows=1 loops=1)
   ->  Sort  (cost=97860.31..97860.81 rows=200 width=8) (actual time=2258.750..2258.750 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=97857.31..97859.31 rows=200 width=8) (actual time=2258.728..2258.732 rows=42 loops=1)
               ->  HashAggregate  (cost=94107.31..95607.31 rows=150000 width=8) (actual time=2211.445..2239.173 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=6972.00..86758.73 rows=1469715 width=8) (actual time=61.590..1740.006 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469715 width=8) (actual time=0.442..646.273 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4) (actual time=61.136..61.136 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4) (actual time=0.002..44.343 rows=150000 loops=1)
 Total runtime: 2259.367 ms
(14 rows)

SET
SET
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=97860.31..97860.31 rows=1 width=8) (actual time=2082.836..2082.836 rows=1 loops=1)
   ->  Sort  (cost=97860.31..97860.81 rows=200 width=8) (actual time=2082.834..2082.834 rows=1 loops=1)
         Sort Key: (count(*)), (count(orders.o_orderkey))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=97857.31..97859.31 rows=200 width=8) (actual time=2082.813..2082.819 rows=42 loops=1)
               ->  HashAggregate  (cost=94107.31..95607.31 rows=150000 width=8) (actual time=2035.839..2063.321 rows=150000 loops=1)
                     ->  Hash Right Join  (cost=6972.00..86758.73 rows=1469715 width=8) (actual time=42.273..1576.446 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1469715 width=8) (actual time=0.007..569.409 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=4) (actual time=42.253..42.253 rows=150000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 5274kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=4) (actual time=0.003..26.367 rows=150000 loops=1)
 Total runtime: 2083.494 ms
(14 rows)

query 14 run 1
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85752.67..85752.68 rows=1 width=33) (actual time=879.912..879.912 rows=1 loops=1)
   ->  Aggregate  (cost=85752.67..85752.68 rows=1 width=33) (actual time=879.910..879.910 rows=1 loops=1)
         ->  Hash Join  (cost=9921.59..84465.56 rows=73549 width=33) (actual time=103.884..794.760 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1322.59..74395.58 rows=73549 width=16) (actual time=20.828..637.359 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1304.20 rows=73549 width=0) (actual time=14.873..14.873 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=82.981..82.981 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.004..55.789 rows=200000 loops=1)
 Total runtime: 879.947 ms
(12 rows)

SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=85752.67..85752.68 rows=1 width=33) (actual time=315.190..315.190 rows=1 loops=1)
   ->  Aggregate  (cost=85752.67..85752.68 rows=1 width=33) (actual time=315.189..315.189 rows=1 loops=1)
         ->  Hash Join  (cost=9921.59..84465.56 rows=73549 width=33) (actual time=77.195..251.333 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1322.59..74395.58 rows=73549 width=16) (actual time=15.935..135.580 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1304.20 rows=73549 width=0) (actual time=10.350..10.350 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=61.210..61.210 rows=200000 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 11552kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.003..36.266 rows=200000 loops=1)
 Total runtime: 315.224 ms
(12 rows)

query 15 run 1
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246343.58..246344.82 rows=1 width=103) (actual time=1529.385..1529.385 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122313.09..122313.10 rows=1 width=32) (actual time=240.041..240.041 rows=1 loops=1)
           ->  HashAggregate  (cost=122304.61..122308.38 rows=377 width=16) (actual time=238.205..239.410 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4073.76..120036.27 rows=226834 width=16) (actual time=32.711..94.500 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.05 rows=226834 width=0) (actual time=23.100..23.100 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124030.48..124495.39 rows=377 width=103) (actual time=1529.384..1529.384 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..434.25 rows=10000 width=71) (actual time=1.005..5.294 rows=8449 loops=1)
         ->  Sort  (cost=124030.48..124031.42 rows=377 width=36) (actual time=1523.525..1523.525 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124005.87..124014.35 rows=377 width=36) (actual time=1523.057..1523.517 rows=1 loops=1)
                     ->  HashAggregate  (cost=124005.87..124010.58 rows=377 width=16) (actual time=1523.055..1523.515 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4073.76..120036.27 rows=226834 width=16) (actual time=47.222..1042.719 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.05 rows=226834 width=0) (actual time=36.969..36.969 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 1529.454 ms
(22 rows)

DROP VIEW
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246343.58..246344.82 rows=1 width=103) (actual time=634.018..634.018 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122313.09..122313.10 rows=1 width=32) (actual time=238.526..238.527 rows=1 loops=1)
           ->  HashAggregate  (cost=122304.61..122308.38 rows=377 width=16) (actual time=236.687..237.874 rows=10000 loops=1)
                 ->  Bitmap Heap Scan on lineitem  (cost=4073.76..120036.27 rows=226834 width=16) (actual time=32.505..94.124 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.05 rows=226834 width=0) (actual time=23.043..23.043 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124030.48..124495.39 rows=377 width=103) (actual time=634.016..634.016 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.00..434.25 rows=10000 width=71) (actual time=0.018..1.537 rows=8449 loops=1)
         ->  Sort  (cost=124030.48..124031.42 rows=377 width=36) (actual time=632.010..632.010 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124005.87..124014.35 rows=377 width=36) (actual time=631.551..632.006 rows=1 loops=1)
                     ->  HashAggregate  (cost=124005.87..124010.58 rows=377 width=16) (actual time=631.551..632.005 rows=1 loops=1)
                           Filter: (sum((public.lineitem.l_extendedprice * (1::numeric - public.lineitem.l_discount))) = $0)
                           ->  Bitmap Heap Scan on lineitem  (cost=4073.76..120036.27 rows=226834 width=16) (actual time=37.128..235.015 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4017.05 rows=226834 width=0) (actual time=27.525..27.525 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Total runtime: 634.084 ms
(22 rows)

DROP VIEW
query 16 run 1
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47383.87..47383.87 rows=1 width=40) (actual time=1295.628..1295.629 rows=1 loops=1)
   ->  Sort  (cost=47383.87..47390.71 rows=2738 width=40) (actual time=1295.626..1295.626 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=46660.87..47370.18 rows=2738 width=40) (actual time=1242.845..1292.644 rows=18220 loops=1)
               ->  Sort  (cost=46660.87..46797.26 rows=54554 width=40) (actual time=1242.824..1250.488 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9789.19..42368.73 rows=54554 width=40) (actual time=97.030..471.813 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8) (actual time=5.616..253.910 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.981..5.602 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=27375 width=40) (actual time=91.387..91.387 rows=29492 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 2137kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=27375 width=40) (actual time=0.007..85.726 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1295.686 ms
(20 rows)

SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=47383.87..47383.87 rows=1 width=40) (actual time=1171.828..1171.829 rows=1 loops=1)
   ->  Sort  (cost=47383.87..47390.71 rows=2738 width=40) (actual time=1171.828..1171.828 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)), part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=46660.87..47370.18 rows=2738 width=40) (actual time=1118.924..1168.846 rows=18220 loops=1)
               ->  Sort  (cost=46660.87..46797.26 rows=54554 width=40) (actual time=1118.905..1126.593 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9789.19..42368.73 rows=54554 width=40) (actual time=72.715..349.859 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=348.00..27882.00 rows=400000 width=8) (actual time=2.829..173.680 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.105..2.819 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                           ->  Hash  (cost=9099.00..9099.00 rows=27375 width=40) (actual time=69.862..69.862 rows=29492 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 2137kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=27375 width=40) (actual time=0.007..64.918 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
 Total runtime: 1171.878 ms
(20 rows)

query 17 run 1
SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219480.97..219480.98 rows=1 width=8) (actual time=5420.834..5420.834 rows=1 loops=1)
   ->  Aggregate  (cost=219480.97..219480.98 rows=1 width=8) (actual time=5420.833..5420.833 rows=1 loops=1)
         ->  Nested Loop  (cost=209679.18..219476.44 rows=1812 width=8) (actual time=5213.498..5420.257 rows=592 loops=1)
               ->  Hash Join  (cost=209679.18..214967.88 rows=181 width=40) (actual time=5212.248..5346.962 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202577.72..205336.10 rows=183892 width=9) (actual time=5157.400..5278.007 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..172571.81 rows=6001181 width=9) (actual time=0.313..738.265 rows=6001215 loops=1)
                     ->  Hash  (cost=7099.00..7099.00 rows=197 width=4) (actual time=54.653..54.653 rows=208 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 8kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=1.080..54.543 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..24.74 rows=11 width=17) (actual time=0.323..0.350 rows=3 loops=208)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 5421.442 ms
(14 rows)

SET
SET
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=219480.97..219480.98 rows=1 width=8) (actual time=5278.732..5278.733 rows=1 loops=1)
   ->  Aggregate  (cost=219480.97..219480.98 rows=1 width=8) (actual time=5278.732..5278.732 rows=1 loops=1)
         ->  Nested Loop  (cost=209679.18..219476.44 rows=1812 width=8) (actual time=5147.135..5278.570 rows=592 loops=1)
               ->  Hash Join  (cost=209679.18..214967.88 rows=181 width=40) (actual time=5147.113..5276.747 rows=208 loops=1)
                     Hash Cond: (public.lineitem.l_partkey = part.p_partkey)
                     ->  HashAggregate  (cost=202577.72..205336.10 rows=183892 width=9) (actual time=5113.535..5229.896 rows=200000 loops=1)
                           ->  Seq Scan on lineitem  (cost=0.00..172571.81 rows=6001181 width=9) (actual time=0.026..549.271 rows=6001215 loops=1)
                     ->  Hash  (cost=7099.00..7099.00 rows=197 width=4) (actual time=33.382..33.382 rows=208 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 8kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=197 width=4) (actual time=0.126..33.326 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
               ->  Index Scan using q17_idx_1 on lineitem  (cost=0.00..24.74 rows=11 width=17) (actual time=0.007..0.008 rows=3 loops=208)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_quantity < ((0.2 * avg(public.lineitem.l_quantity)))))
 Total runtime: 5279.343 ms
(14 rows)

query 18 run 1
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1117071.25..1117074.00 rows=100 width=44) (actual time=4981.756..4981.782 rows=9 loops=1)
   ->  GroupAggregate  (cost=1117071.25..1199571.25 rows=3000000 width=44) (actual time=4981.756..4981.781 rows=9 loops=1)
         ->  Sort  (cost=1117071.25..1124571.25 rows=3000000 width=44) (actual time=4981.743..4981.743 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=423126.09..728403.29 rows=3000000 width=44) (actual time=3919.697..4981.621 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172571.81 rows=6001181 width=9) (actual time=0.001..686.186 rows=6001215 loops=1)
                     ->  Hash  (cost=407159.09..407159.09 rows=750000 width=43) (actual time=3601.940..3601.940 rows=9 loops=1)
                           Buckets: 65536  Batches: 2  Memory Usage: 1kB
                           ->  Hash Join  (cost=6972.00..407159.09 rows=750000 width=43) (actual time=842.972..3601.570 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Semi Join  (cost=0.00..382374.59 rows=750000 width=24) (actual time=780.520..3539.088 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.526..307.499 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.00..303006.57 rows=1500295 width=4) (actual time=677.151..3161.104 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..284252.89 rows=1500295 width=9) (actual time=677.149..3161.085 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..235493.29 rows=6001181 width=9) (actual time=0.808..1597.619 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=62.424..62.424 rows=150000 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..42.691 rows=150000 loops=1)
 Total runtime: 4981.856 ms
(23 rows)

SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1117071.25..1117074.00 rows=100 width=44) (actual time=4265.600..4265.626 rows=9 loops=1)
   ->  GroupAggregate  (cost=1117071.25..1199571.25 rows=3000000 width=44) (actual time=4265.600..4265.625 rows=9 loops=1)
         ->  Sort  (cost=1117071.25..1124571.25 rows=3000000 width=44) (actual time=4265.588..4265.590 rows=63 loops=1)
               Sort Key: orders.o_totalprice, orders.o_orderdate, customer.c_name, customer.c_custkey, orders.o_orderkey
               Sort Method: quicksort  Memory: 29kB
               ->  Hash Join  (cost=423126.09..728403.29 rows=3000000 width=44) (actual time=3198.943..4265.462 rows=63 loops=1)
                     Hash Cond: (public.lineitem.l_orderkey = orders.o_orderkey)
                     ->  Seq Scan on lineitem  (cost=0.00..172571.81 rows=6001181 width=9) (actual time=0.002..686.662 rows=6001215 loops=1)
                     ->  Hash  (cost=407159.09..407159.09 rows=750000 width=43) (actual time=2880.712..2880.712 rows=9 loops=1)
                           Buckets: 65536  Batches: 2  Memory Usage: 1kB
                           ->  Hash Join  (cost=6972.00..407159.09 rows=750000 width=43) (actual time=658.781..2880.634 rows=9 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Semi Join  (cost=0.00..382374.59 rows=750000 width=24) (actual time=614.314..2836.147 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = public.lineitem.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.00..56864.33 rows=1500000 width=20) (actual time=0.020..194.821 rows=1201687 loops=1)
                                       ->  Materialize  (cost=0.00..303006.57 rows=1500295 width=4) (actual time=545.208..2573.374 rows=9 loops=1)
                                             ->  GroupAggregate  (cost=0.00..284252.89 rows=1500295 width=9) (actual time=545.206..2573.365 rows=9 loops=1)
                                                   Filter: (sum(public.lineitem.l_quantity) > 313::numeric)
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.00..235493.29 rows=6001181 width=9) (actual time=0.016..1046.336 rows=6001215 loops=1)
                                 ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=44.446..44.446 rows=150000 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 8204kB
                                       ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.003..25.802 rows=150000 loops=1)
 Total runtime: 4265.693 ms
(23 rows)

query 19 run 1
SET
SET


 Limit  (cost=307641.21..307641.22 rows=1 width=12) (actual time=1719.862..1719.863 rows=1 loops=1)
   ->  Aggregate  (cost=307641.21..307641.22 rows=1 width=12) (actual time=1719.860..1719.860 rows=1 loops=1)
         ->  Hash Join  (cost=10858.39..307640.39 rows=110 width=12) (actual time=89.701..1719.516 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292595.43 rows=111031 width=21) (actual time=0.457..1584.353 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9599.00..9599.00 rows=100751 width=30) (actual time=89.211..89.211 rows=60513 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 3783kB
                     ->  Seq Scan on part  (cost=0.00..9599.00 rows=100751 width=30) (actual time=0.003..78.746 rows=60513 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 1719.912 ms
(12 rows)

SET
SET

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=307641.21..307641.22 rows=1 width=12) (actual time=1466.280..1466.281 rows=1 loops=1)
   ->  Aggregate  (cost=307641.21..307641.22 rows=1 width=12) (actual time=1466.279..1466.279 rows=1 loops=1)
         ->  Hash Join  (cost=10858.39..307640.39 rows=110 width=12) (actual time=67.927..1466.016 rows=111 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               Join Filter: (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= 10::numeric) AND (lineitem.l_quantity <= 20::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= 20::numeric) AND (lineitem.l_quantity <= 30::numeric) AND (part.p_size <= 15)))
               ->  Seq Scan on lineitem  (cost=0.00..292595.43 rows=111031 width=21) (actual time=0.072..1354.884 rows=89766 loops=1)
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 10::numeric) AND (l_quantity <= 20::numeric)) OR ((l_quantity >= 20::numeric) AND (l_quantity <= 30::numeric))))
               ->  Hash  (cost=9599.00..9599.00 rows=100751 width=30) (actual time=67.823..67.823 rows=60513 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 3783kB
                     ->  Seq Scan on part  (cost=0.00..9599.00 rows=100751 width=30) (actual time=0.002..58.041 rows=60513 loops=1)
                           Filter: ((p_size >= 1) AND (((p_size <= 5) AND (p_size >= 1)) OR ((p_size <= 10) AND (p_size >= 1)) OR ((p_size <= 15) AND (p_size >= 1))))
 Total runtime: 1466.335 ms
(12 rows)

query 20 run 1
SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=166517.95..166517.96 rows=1 width=51) (actual time=3645.333..3645.333 rows=1 loops=1)
   ->  Sort  (cost=166517.95..166517.96 rows=1 width=51) (actual time=3645.333..3645.333 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=163526.57..166517.94 rows=1 width=51) (actual time=3455.005..3644.908 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=7.35..234.42 rows=400 width=55) (actual time=1.397..3.588 rows=438 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=7.35..228.11 rows=400 width=59) (actual time=1.385..3.485 rows=438 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=1.040..1.040 rows=438 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=163519.22..166247.52 rows=6 width=8) (actual time=7.226..8.025 rows=4504 loops=438)
                     ->  Hash Join  (cost=163519.22..166247.49 rows=6 width=8) (actual time=3165.026..3451.176 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=149350.09..150486.86 rows=90942 width=13) (actual time=2534.313..2749.248 rows=544869 loops=1)
                                 ->  Bitmap Heap Scan on lineitem  (cost=16328.23..142529.47 rows=909416 width=13) (actual time=163.168..1965.057 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16100.87 rows=909416 width=0) (actual time=143.389..143.389 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=14048.37..14048.37 rows=8051 width=16) (actual time=630.637..630.637 rows=8748 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 411kB
                                 ->  Nested Loop  (cost=6604.05..14048.37 rows=8051 width=16) (actual time=54.622..627.001 rows=8748 loops=1)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4) (actual time=53.555..54.455 rows=2187 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.094..52.781 rows=2187 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.63 rows=4 width=12) (actual time=0.241..0.260 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 3645.768 ms
(31 rows)

SET
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=166517.95..166517.96 rows=1 width=51) (actual time=1487.425..1487.425 rows=1 loops=1)
   ->  Sort  (cost=166517.95..166517.96 rows=1 width=51) (actual time=1487.424..1487.424 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=163526.57..166517.94 rows=1 width=51) (actual time=1298.922..1487.232 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               ->  Nested Loop  (cost=7.35..234.42 rows=400 width=55) (actual time=0.086..0.841 rows=438 loops=1)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=7.35..228.11 rows=400 width=59) (actual time=0.076..0.758 rows=438 loops=1)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.054..0.054 rows=438 loops=1)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Materialize  (cost=163519.22..166247.52 rows=6 width=8) (actual time=2.309..3.106 rows=4504 loops=438)
                     ->  Hash Join  (cost=163519.22..166247.49 rows=6 width=8) (actual time=1011.388..1296.478 rows=5898 loops=1)
                           Hash Cond: ((lineitem.l_partkey = partsupp.ps_partkey) AND (lineitem.l_suppkey = partsupp.ps_suppkey))
                           Join Filter: ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                           ->  HashAggregate  (cost=149350.09..150486.86 rows=90942 width=13) (actual time=961.734..1176.601 rows=544869 loops=1)
                                 ->  Bitmap Heap Scan on lineitem  (cost=16328.23..142529.47 rows=909416 width=13) (actual time=123.029..504.108 rows=913487 loops=1)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16100.87 rows=909416 width=0) (actual time=103.730..103.730 rows=913487 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Hash  (cost=14048.37..14048.37 rows=8051 width=16) (actual time=49.589..49.589 rows=8748 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 411kB
                                 ->  Nested Loop  (cost=6604.05..14048.37 rows=8051 width=16) (actual time=32.905..48.240 rows=8748 loops=1)
                                       ->  HashAggregate  (cost=6604.05..6624.25 rows=2020 width=4) (actual time=32.884..33.244 rows=2187 loops=1)
                                             ->  Seq Scan on part  (cost=0.00..6599.00 rows=2020 width=4) (actual time=0.024..32.298 rows=2187 loops=1)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                       ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.00..3.63 rows=4 width=12) (actual time=0.005..0.006 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
 Total runtime: 1488.098 ms
(31 rows)

query 21 run 1
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=419085.94..419085.95 rows=1 width=26) (actual time=3661.824..3661.834 rows=100 loops=1)
   ->  Sort  (cost=419085.94..419085.95 rows=1 width=26) (actual time=3661.823..3661.828 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=419085.92..419085.93 rows=1 width=26) (actual time=3661.276..3661.330 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=94727.87..419085.92 rows=1 width=26) (actual time=779.058..3657.777 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=94727.87..419077.25 rows=1 width=34) (actual time=778.215..3514.811 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=94727.87..241785.34 rows=39075 width=38) (actual time=777.606..3181.060 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=40688.75..186555.31 rows=80016 width=34) (actual time=298.213..2599.998 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=40449.33..178014.25 rows=2000394 width=8) (actual time=292.266..2228.428 rows=3793296 loops=1)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39949.23 rows=2000394 width=0) (actual time=271.769..271.769 rows=3793296 loops=1)
                                       ->  Hash  (cost=234.42..234.42 rows=400 width=30) (actual time=5.363..5.363 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                             ->  Nested Loop  (cost=7.35..234.42 rows=400 width=30) (actual time=0.967..5.284 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.009 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=7.35..228.11 rows=400 width=34) (actual time=0.959..5.201 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.920..0.920 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=732650 width=4) (actual time=479.276..479.276 rows=729413 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 25644kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=732650 width=4) (actual time=0.006..373.392 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.48 rows=4 width=8) (actual time=0.004..0.004 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using q21_idx_2 on lineitem l3  (cost=0.00..4.33 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
 Total runtime: 3661.974 ms
(34 rows)

SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=419085.94..419085.95 rows=1 width=26) (actual time=1953.150..1953.158 rows=100 loops=1)
   ->  Sort  (cost=419085.94..419085.95 rows=1 width=26) (actual time=1953.149..1953.153 rows=100 loops=1)
         Sort Key: (count(*)), supplier.s_name
         Sort Method: top-N heapsort  Memory: 32kB
         ->  HashAggregate  (cost=419085.92..419085.93 rows=1 width=26) (actual time=1952.623..1952.676 rows=421 loops=1)
               ->  Nested Loop Anti Join  (cost=94727.87..419085.92 rows=1 width=26) (actual time=593.415..1949.989 rows=4227 loops=1)
                     Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                     ->  Nested Loop Semi Join  (cost=94727.87..419077.25 rows=1 width=34) (actual time=593.069..1828.019 rows=73962 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           ->  Hash Join  (cost=94727.87..241785.34 rows=39075 width=38) (actual time=593.048..1640.360 rows=76644 loops=1)
                                 Hash Cond: (l1.l_orderkey = orders.o_orderkey)
                                 ->  Hash Join  (cost=40688.75..186555.31 rows=80016 width=34) (actual time=236.869..1190.792 rows=159165 loops=1)
                                       Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                       ->  Bitmap Heap Scan on lineitem l1  (cost=40449.33..178014.25 rows=2000394 width=8) (actual time=235.696..882.599 rows=3793296 loops=1)
                                             Recheck Cond: (l_receiptdate > l_commitdate)
                                             ->  Bitmap Index Scan on q21_idx_2  (cost=0.00..39949.23 rows=2000394 width=0) (actual time=215.206..215.206 rows=3793296 loops=1)
                                       ->  Hash  (cost=234.42..234.42 rows=400 width=30) (actual time=0.894..0.894 rows=421 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                             ->  Nested Loop  (cost=7.35..234.42 rows=400 width=30) (actual time=0.074..0.832 rows=421 loops=1)
                                                   ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                         Filter: (n_name = 'PERU'::bpchar)
                                                   ->  Bitmap Heap Scan on supplier  (cost=7.35..228.11 rows=400 width=34) (actual time=0.066..0.782 rows=421 loops=1)
                                                         Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                         ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.25 rows=400 width=0) (actual time=0.048..0.048 rows=421 loops=1)
                                                               Index Cond: (s_nationkey = nation.n_nationkey)
                                 ->  Hash  (cost=44881.00..44881.00 rows=732650 width=4) (actual time=355.887..355.887 rows=729413 loops=1)
                                       Buckets: 131072  Batches: 1  Memory Usage: 25644kB
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=732650 width=4) (actual time=0.006..261.627 rows=729413 loops=1)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.00..4.48 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=76644)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                     ->  Index Scan using q21_idx_2 on lineitem l3  (cost=0.00..4.33 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=73962)
                           Index Cond: (l_orderkey = l1.l_orderkey)
 Total runtime: 1953.288 ms
(34 rows)

query 22 run 1
SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18878.60..18878.60 rows=1 width=22) (actual time=843.159..843.160 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.25..7546.26 rows=1 width=6) (actual time=118.176..118.176 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4700 width=6) (actual time=0.007..101.653 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=11332.33..11334.21 rows=750 width=22) (actual time=843.159..843.159 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11317.33..11328.58 rows=750 width=22) (actual time=843.131..843.134 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..11311.71 rows=750 width=22) (actual time=118.221..836.981 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26) (actual time=118.202..201.902 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..25.56 rows=18 width=4) (actual time=0.033..0.033 rows=1 loops=19077)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 843.226 ms
(15 rows)

SET
SET
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=18878.60..18878.60 rows=1 width=22) (actual time=217.751..217.751 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.25..7546.26 rows=1 width=6) (actual time=98.808..98.809 rows=1 loops=1)
           ->  Seq Scan on customer  (cost=0.00..7534.50 rows=4700 width=6) (actual time=0.007..83.382 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
   ->  Sort  (cost=11332.33..11334.21 rows=750 width=22) (actual time=217.751..217.751 rows=1 loops=1)
         Sort Key: ("substring"((public.customer.c_phone)::text, 1, 2))
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=11317.33..11328.58 rows=750 width=22) (actual time=217.726..217.729 rows=7 loops=1)
               ->  Nested Loop Anti Join  (cost=0.00..11311.71 rows=750 width=22) (actual time=98.848..214.351 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1724 width=26) (actual time=98.832..154.172 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                     ->  Index Scan using idx_orders_custkey on orders  (cost=0.00..25.56 rows=18 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = public.customer.c_custkey)
 Total runtime: 217.803 ms
(15 rows)

