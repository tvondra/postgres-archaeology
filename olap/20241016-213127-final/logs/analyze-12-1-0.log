query 1 run 1
SET
SET
SET
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424403.05..424403.05 rows=1 width=236) (actual time=7245.542..7245.543 rows=1 loops=1)
   ->  Sort  (cost=424403.05..424403.06 rows=6 width=236) (actual time=7245.540..7245.541 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424402.85..424403.02 rows=6 width=236) (actual time=7245.511..7245.520 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187569.65 rows=5920830 width=25) (actual time=0.512..1147.497 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 17.542 ms
 Execution Time: 7246.733 ms
(11 rows)

SET
SET
SET
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=424403.05..424403.05 rows=1 width=236) (actual time=7092.799..7092.800 rows=1 loops=1)
   ->  Sort  (cost=424403.05..424403.06 rows=6 width=236) (actual time=7092.798..7092.798 rows=1 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=424402.85..424403.02 rows=6 width=236) (actual time=7092.772..7092.779 rows=4 loops=1)
               Group Key: l_returnflag, l_linestatus
               ->  Seq Scan on lineitem  (cost=0.00..187569.65 rows=5920830 width=25) (actual time=0.025..959.657 rows=5930957 loops=1)
                     Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                     Rows Removed by Filter: 70258
 Planning Time: 1.063 ms
 Execution Time: 7092.870 ms
(11 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19301.55..19301.56 rows=1 width=192) (actual time=172.066..172.079 rows=100 loops=1)
   ->  Sort  (cost=19301.55..19301.56 rows=1 width=192) (actual time=172.065..172.072 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..19301.54 rows=1 width=192) (actual time=4.458..171.491 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.474..0.480 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.201..0.202 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.268..0.270 rows=25 loops=1)
               ->  Materialize  (cost=14.58..19298.84 rows=1 width=170) (actual time=0.314..34.115 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..19298.84 rows=1 width=170) (actual time=1.565..169.911 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..19297.57 rows=1 width=34) (actual time=1.142..127.423 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5443.26 rows=883 width=30) (actual time=0.263..25.816 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.68 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.123..0.123 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.110..0.121 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.092..0.118 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.090..0.111 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.082..0.084 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.086..0.086 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 21.651 ms
 Execution Time: 172.831 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=19301.55..19301.56 rows=1 width=192) (actual time=23.833..23.846 rows=100 loops=1)
   ->  Sort  (cost=19301.55..19301.56 rows=1 width=192) (actual time=23.832..23.839 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..19301.54 rows=1 width=192) (actual time=0.158..23.314 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.008..0.014 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.001..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..19298.84 rows=1 width=170) (actual time=0.012..4.597 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..19298.84 rows=1 width=170) (actual time=0.056..22.632 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..19297.57 rows=1 width=34) (actual time=0.048..21.474 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5443.26 rows=883 width=30) (actual time=0.011..6.434 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.68 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.017..0.017 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.012..0.015 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.006..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.003..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 1.943 ms
 Execution Time: 23.898 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302748.02..302748.05 rows=10 width=44) (actual time=1942.630..1942.633 rows=10 loops=1)
   ->  Sort  (cost=302748.02..303541.54 rows=317408 width=44) (actual time=1942.629..1942.631 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=286366.71..295888.95 rows=317408 width=44) (actual time=1922.199..1940.429 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=286366.71..287160.23 rows=317408 width=24) (actual time=1922.185..1923.393 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=54460.55..257362.00 rows=317408 width=24) (actual time=545.773..1914.568 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187569.65 rows=3242168 width=16) (actual time=0.502..1082.301 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=52624.93..52624.93 rows=146850 width=12) (actual time=544.002..544.003 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5854.56..52624.93 rows=146850 width=12) (actual time=54.639..515.182 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=719736 width=16) (actual time=0.617..345.364 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30605 width=4) (actual time=53.989..53.989 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30605 width=4) (actual time=0.493..48.947 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning Time: 24.137 ms
 Execution Time: 1943.572 ms
(28 rows)

SET
SET
SET
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=302748.02..302748.05 rows=10 width=44) (actual time=1482.022..1482.026 rows=10 loops=1)
   ->  Sort  (cost=302748.02..303541.54 rows=317408 width=44) (actual time=1482.021..1482.024 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=286366.71..295888.95 rows=317408 width=44) (actual time=1461.747..1479.823 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Sort  (cost=286366.71..287160.23 rows=317408 width=24) (actual time=1461.734..1462.938 rows=30533 loops=1)
                     Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     Sort Method: quicksort  Memory: 3154kB
                     ->  Hash Join  (cost=54460.55..257362.00 rows=317408 width=24) (actual time=310.892..1454.651 rows=30533 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Seq Scan on lineitem  (cost=0.00..187569.65 rows=3242168 width=16) (actual time=0.033..865.321 rows=3261873 loops=1)
                                 Filter: (l_shipdate > '1995-03-07'::date)
                                 Rows Removed by Filter: 2739342
                           ->  Hash  (cost=52624.93..52624.93 rows=146850 width=12) (actual time=310.339..310.340 rows=146063 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 8325kB
                                 ->  Hash Join  (cost=5854.56..52624.93 rows=146850 width=12) (actual time=26.379..285.237 rows=146063 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..44881.00 rows=719736 width=16) (actual time=0.005..168.977 rows=722275 loops=1)
                                             Filter: (o_orderdate < '1995-03-07'::date)
                                             Rows Removed by Filter: 777725
                                       ->  Hash  (cost=5472.00..5472.00 rows=30605 width=4) (actual time=26.354..26.354 rows=30142 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1316kB
                                             ->  Seq Scan on customer  (cost=0.00..5472.00 rows=30605 width=4) (actual time=0.003..22.430 rows=30142 loops=1)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119858
 Planning Time: 1.397 ms
 Execution Time: 1482.101 ms
(28 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79707.27..79707.27 rows=1 width=24) (actual time=1063.173..1063.175 rows=1 loops=1)
   ->  Sort  (cost=79707.27..79707.28 rows=5 width=24) (actual time=1063.172..1063.173 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=79707.19..79707.24 rows=5 width=24) (actual time=1063.151..1063.152 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32391.88..79422.01 rows=57037 width=16) (actual time=486.345..1051.995 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32391.42..32534.02 rows=57037 width=20) (actual time=486.138..490.300 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=899.06..27885.61 rows=57037 width=20) (actual time=11.766..470.568 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..884.80 rows=57037 width=0) (actual time=8.523..8.524 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..40984.28 rows=2000257 width=4) (actual time=0.198..384.379 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 21.162 ms
 Execution Time: 1064.027 ms
(20 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=79707.27..79707.27 rows=1 width=24) (actual time=541.071..541.073 rows=1 loops=1)
   ->  Sort  (cost=79707.27..79707.28 rows=5 width=24) (actual time=541.070..541.071 rows=1 loops=1)
         Sort Key: orders.o_orderpriority
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=79707.19..79707.24 rows=5 width=24) (actual time=541.051..541.053 rows=5 loops=1)
               Group Key: orders.o_orderpriority
               ->  Merge Semi Join  (cost=32391.88..79422.01 rows=57037 width=16) (actual time=48.571..532.105 rows=51398 loops=1)
                     Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Sort  (cost=32391.42..32534.02 rows=57037 width=20) (actual time=48.548..51.663 rows=55973 loops=1)
                           Sort Key: orders.o_orderkey
                           Sort Method: quicksort  Memory: 5909kB
                           ->  Bitmap Heap Scan on orders  (cost=899.06..27885.61 rows=57037 width=20) (actual time=7.149..40.596 rows=55973 loops=1)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=23186
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..884.80 rows=57037 width=0) (actual time=4.508..4.508 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                     ->  Index Only Scan using q21_idx_2 on lineitem  (cost=0.43..40984.28 rows=2000257 width=4) (actual time=0.016..305.731 rows=3793256 loops=1)
                           Heap Fetches: 0
 Planning Time: 1.399 ms
 Execution Time: 541.129 ms
(20 rows)

query 5 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=152297.42..152297.43 rows=1 width=58) (actual time=1112.115..1112.120 rows=1 loops=1)
   ->  Sort  (cost=152297.42..152297.49 rows=25 width=58) (actual time=1112.113..1112.118 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=152204.06..152297.30 rows=25 width=58) (actual time=1109.354..1112.091 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=152204.06..152222.65 rows=7434 width=38) (actual time=1108.651..1108.986 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10469.78..151726.06 rows=7434 width=38) (actual time=97.900..1104.146 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9996.78..150277.33 rows=185851 width=50) (actual time=91.847..1065.204 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9996.35..40947.24 rows=46457 width=38) (actual time=91.431..655.315 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3659.34..33274.60 rows=232284 width=8) (actual time=28.731..529.334 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3601.27 rows=232284 width=0) (actual time=25.070..25.070 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=62.645..62.648 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=1.160..56.694 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.498..39.950 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.654..0.656 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.642..0.652 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.340..0.343 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.289..0.289 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.280..0.282 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.008..0.008 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.996..5.997 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.346..4.474 rows=10000 loops=1)
 Planning Time: 29.120 ms
 Execution Time: 1113.039 ms
(42 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=152297.42..152297.43 rows=1 width=58) (actual time=311.082..311.086 rows=1 loops=1)
   ->  Sort  (cost=152297.42..152297.49 rows=25 width=58) (actual time=311.080..311.085 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=152204.06..152297.30 rows=25 width=58) (actual time=308.478..311.069 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Sort  (cost=152204.06..152222.65 rows=7434 width=38) (actual time=307.814..308.130 rows=7540 loops=1)
                     Sort Key: nation.n_name
                     Sort Method: quicksort  Memory: 782kB
                     ->  Hash Join  (cost=10469.78..151726.06 rows=7434 width=38) (actual time=55.499..305.193 rows=7540 loops=1)
                           Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                           ->  Nested Loop  (cost=9996.78..150277.33 rows=185851 width=50) (actual time=52.581..282.267 rows=182435 loops=1)
                                 ->  Hash Join  (cost=9996.35..40947.24 rows=46457 width=38) (actual time=52.565..148.547 rows=45297 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=3659.34..33274.60 rows=232284 width=8) (actual time=18.121..73.111 rows=226645 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                             Heap Blocks: exact=26127
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3601.27 rows=232284 width=0) (actual time=15.194..15.194 rows=226645 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                       ->  Hash  (cost=5962.01..5962.01 rows=30000 width=38) (actual time=34.412..34.414 rows=29952 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 2362kB
                                             ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=38) (actual time=0.032..29.551 rows=29952 loops=1)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.006..8.754 rows=150000 loops=1)
                                                   ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.021..0.023 rows=5 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.015..0.021 rows=5 loops=1)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.006 rows=1 loops=1)
                                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                 ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.002..0.002 rows=4 loops=45297)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Heap Fetches: 0
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.894..2.894 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.005..1.398 rows=10000 loops=1)
 Planning Time: 3.257 ms
 Execution Time: 311.164 ms
(42 rows)

query 6 run 1
SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116594.55..116594.56 rows=1 width=32) (actual time=1250.050..1250.052 rows=1 loops=1)
   ->  Aggregate  (cost=116594.55..116594.56 rows=1 width=32) (actual time=1250.049..1250.050 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22999.76..116008.52 rows=117204 width=12) (actual time=131.390..1183.444 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22970.45 rows=117204 width=0) (actual time=121.869..121.869 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 15.399 ms
 Execution Time: 1251.107 ms
(9 rows)

SET
SET
SET
                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=116594.55..116594.56 rows=1 width=32) (actual time=217.242..217.243 rows=1 loops=1)
   ->  Aggregate  (cost=116594.55..116594.56 rows=1 width=32) (actual time=217.241..217.242 rows=1 loops=1)
         ->  Bitmap Heap Scan on lineitem  (cost=22999.76..116008.52 rows=117204 width=12) (actual time=105.072..184.400 rows=119208 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
               Heap Blocks: exact=66143
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22970.45 rows=117204 width=0) (actual time=96.139..96.140 rows=119208 loops=1)
                     Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.787 ms
 Execution Time: 217.285 ms
(9 rows)

query 7 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237598.68..237598.72 rows=1 width=92) (actual time=3204.804..3204.817 rows=1 loops=1)
   ->  GroupAggregate  (cost=237598.68..237810.89 rows=6063 width=92) (actual time=3204.803..3204.815 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=237598.68..237613.84 rows=6063 width=72) (actual time=3204.105..3204.169 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88242.40..237217.75 rows=6063 width=72) (actual time=775.681..3199.748 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=87877.30..236042.84 rows=145701 width=46) (actual time=769.196..3168.461 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32712.40..172591.37 rows=1821265 width=24) (actual time=216.009..2361.815 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32257.08 rows=1821265 width=0) (actual time=198.115..198.116 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=552.936..552.938 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=57.034..527.672 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.744..298.305 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=56.274..56.275 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.547..54.031 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.525..39.771 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.016..0.016 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.012 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=5.807..5.816 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.555..5.675 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.280..4.403 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.267..0.274 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.258..0.269 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 26.303 ms
 Execution Time: 3206.201 ms
(44 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=237598.68..237598.72 rows=1 width=92) (actual time=988.099..988.104 rows=1 loops=1)
   ->  GroupAggregate  (cost=237598.68..237810.89 rows=6063 width=92) (actual time=988.097..988.102 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
         ->  Sort  (cost=237598.68..237613.84 rows=6063 width=72) (actual time=987.433..987.488 rows=1359 loops=1)
               Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 998kB
               ->  Hash Join  (cost=88242.40..237217.75 rows=6063 width=72) (actual time=461.877..984.601 rows=5729 loops=1)
                     Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                     Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                     Rows Removed by Join Filter: 5827
                     ->  Hash Join  (cost=87877.30..236042.84 rows=145701 width=46) (actual time=459.777..966.897 rows=145103 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Bitmap Heap Scan on lineitem  (cost=32712.40..172591.37 rows=1821265 width=24) (actual time=151.629..448.783 rows=1828450 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                 Heap Blocks: exact=112061
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32257.08 rows=1821265 width=0) (actual time=134.515..134.515 rows=1828450 loops=1)
                                       Index Cond: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=53664.90..53664.90 rows=120000 width=30) (actual time=308.048..308.051 rows=118477 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 8198kB
                                 ->  Hash Join  (cost=5708.90..53664.90 rows=120000 width=30) (actual time=28.615..288.425 rows=118477 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.007..80.848 rows=1500000 loops=1)
                                       ->  Hash  (cost=5558.90..5558.90 rows=12000 width=30) (actual time=28.595..28.596 rows=11896 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 849kB
                                             ->  Hash Join  (cost=1.40..5558.90 rows=12000 width=30) (actual time=0.020..27.037 rows=11896 loops=1)
                                                   Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.002..8.487 rows=150000 loops=1)
                                                   ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.013..0.013 rows=2 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.010 rows=2 loops=1)
                                                               Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                               Rows Removed by Filter: 23
                     ->  Hash  (cost=355.10..355.10 rows=800 width=30) (actual time=2.022..2.023 rows=794 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=1.40..355.10 rows=800 width=30) (actual time=0.019..1.923 rows=794 loops=1)
                                 Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.004..0.624 rows=10000 loops=1)
                                 ->  Hash  (cost=1.38..1.38 rows=2 width=30) (actual time=0.012..0.012 rows=2 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.008..0.009 rows=2 loops=1)
                                             Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                             Rows Removed by Filter: 23
 Planning Time: 2.652 ms
 Execution Time: 988.429 ms
(44 rows)

query 8 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59372.06..59372.10 rows=1 width=40) (actual time=1118.688..1118.695 rows=1 loops=1)
   ->  GroupAggregate  (cost=59372.06..59481.21 rows=2406 width=40) (actual time=1118.687..1118.693 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=59372.06..59378.17 rows=2445 width=46) (actual time=1118.074..1118.131 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=24249.95..59234.46 rows=2445 width=46) (actual time=488.622..1116.654 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=24248.39..59213.16 rows=2445 width=20) (actual time=487.543..1113.390 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=23800.39..58758.74 rows=2445 width=20) (actual time=481.816..1106.517 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=17463.38..52351.45 rows=12224 width=24) (actual time=421.670..1042.441 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7252.81..40291.68 rows=460525 width=12) (actual time=47.179..581.730 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7137.68 rows=460525 width=0) (actual time=43.678..43.678 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9712.89..9712.89 rows=39815 width=20) (actual time=374.344..374.346 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.85..9712.89 rows=39815 width=20) (actual time=2.040..361.963 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5401.69 rows=1327 width=4) (actual time=0.985..30.450 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.196..0.246 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=60.124..60.126 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.646..55.605 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.418..39.583 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.223..0.224 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.213..0.222 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.003..0.006 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.203..0.203 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.199..0.200 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.713..5.713 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.306..4.504 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.285..0.286 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.267..0.273 rows=25 loops=1)
 Planning Time: 29.224 ms
 Execution Time: 1119.800 ms
(51 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=59372.06..59372.10 rows=1 width=40) (actual time=231.073..231.079 rows=1 loops=1)
   ->  GroupAggregate  (cost=59372.06..59481.21 rows=2406 width=40) (actual time=231.072..231.077 rows=1 loops=1)
         Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
         ->  Sort  (cost=59372.06..59378.17 rows=2445 width=46) (actual time=230.519..230.578 rows=1235 loops=1)
               Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               Sort Method: quicksort  Memory: 291kB
               ->  Hash Join  (cost=24249.95..59234.46 rows=2445 width=46) (actual time=94.600..229.911 rows=2485 loops=1)
                     Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                     ->  Hash Join  (cost=24248.39..59213.16 rows=2445 width=20) (actual time=94.570..229.004 rows=2485 loops=1)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           ->  Hash Join  (cost=23800.39..58758.74 rows=2445 width=20) (actual time=92.075..225.671 rows=2485 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Hash Join  (cost=17463.38..52351.45 rows=12224 width=24) (actual time=59.538..190.479 rows=12097 loops=1)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Bitmap Heap Scan on orders  (cost=7252.81..40291.68 rows=460525 width=12) (actual time=32.523..112.464 rows=457263 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Heap Blocks: exact=26131
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..7137.68 rows=460525 width=0) (actual time=29.573..29.574 rows=457263 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       ->  Hash  (cost=9712.89..9712.89 rows=39815 width=20) (actual time=26.963..26.964 rows=39694 loops=1)
                                             Buckets: 65536  Batches: 1  Memory Usage: 2645kB
                                             ->  Nested Loop  (cost=0.85..9712.89 rows=39815 width=20) (actual time=0.034..20.404 rows=39694 loops=1)
                                                   ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5401.69 rows=1327 width=4) (actual time=0.019..8.148 rows=1320 loops=1)
                                                         Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.003..0.007 rows=30 loops=1320)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                 ->  Hash  (cost=5962.01..5962.01 rows=30000 width=4) (actual time=32.520..32.522 rows=29952 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                       ->  Hash Join  (cost=2.51..5962.01 rows=30000 width=4) (actual time=0.021..29.077 rows=29952 loops=1)
                                             Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                             ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=8) (actual time=0.003..8.710 rows=150000 loops=1)
                                             ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.015..0.016 rows=5 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.011..0.015 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.001..0.003 rows=25 loops=1)
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                                     Filter: (r_name = 'AMERICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                           ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.489..2.489 rows=10000 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                 ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.003..1.327 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.014 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.006..0.009 rows=25 loops=1)
 Planning Time: 3.648 ms
 Execution Time: 231.388 ms
(51 rows)

query 9 run 1
SET
SET
SET
                                                                                          QUERY PLAN                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=167699.50..167699.51 rows=1 width=66) (actual time=2263.263..2263.268 rows=1 loops=1)
   ->  Sort  (cost=167699.50..167849.88 rows=60150 width=66) (actual time=2263.262..2263.266 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=166346.13..167398.75 rows=60150 width=66) (actual time=2262.771..2263.183 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=104498.87..158921.14 rows=424285 width=57) (actual time=1246.903..1995.611 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=104497.30..155495.60 rows=424285 width=31) (actual time=1246.565..1894.658 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.494..305.387 rows=1500000 loops=1)
                           ->  Hash  (cost=99193.74..99193.74 rows=424285 width=31) (actual time=1245.357..1245.360 rows=325928 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25391kB
                                 ->  Hash Join  (cost=34514.28..99193.74 rows=424285 width=31) (actual time=261.237..1170.374 rows=325928 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=34066.28..97631.53 rows=424285 width=35) (actual time=255.435..1100.268 rows=325928 loops=1)
                                             Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                             ->  Nested Loop  (cost=0.85..50801.60 rows=424285 width=33) (actual time=2.466..670.193 rows=325928 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=14141 width=4) (actual time=0.018..53.533 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.041..0.053 rows=30 loops=10880)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=18158.42..18158.42 rows=800000 width=14) (actual time=251.637..251.637 rows=800000 loops=1)
                                                   Buckets: 1048576  Batches: 2  Memory Usage: 26936kB
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18158.42 rows=800000 width=14) (actual time=0.428..109.621 rows=800000 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=5.787..5.788 rows=10000 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.325..4.513 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.316..0.316 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.297..0.302 rows=25 loops=1)
 Planning Time: 35.422 ms
 Execution Time: 2264.905 ms
(37 rows)

SET
SET
SET
                                                                                          QUERY PLAN                                                                                          
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=167699.50..167699.51 rows=1 width=66) (actual time=1501.271..1501.275 rows=1 loops=1)
   ->  Sort  (cost=167699.50..167849.88 rows=60150 width=66) (actual time=1501.269..1501.273 rows=1 loops=1)
         Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=166346.13..167398.75 rows=60150 width=66) (actual time=1500.784..1501.188 rows=175 loops=1)
               Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
               ->  Hash Join  (cost=104498.87..158921.14 rows=424285 width=57) (actual time=694.653..1251.626 rows=325928 loops=1)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=104497.30..155495.60 rows=424285 width=31) (actual time=694.621..1150.670 rows=325928 loops=1)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=8) (actual time=0.002..87.191 rows=1500000 loops=1)
                           ->  Hash  (cost=99193.74..99193.74 rows=424285 width=31) (actual time=693.866..693.869 rows=325928 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 25391kB
                                 ->  Hash Join  (cost=34514.28..99193.74 rows=424285 width=31) (actual time=231.378..623.752 rows=325928 loops=1)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Hash Join  (cost=34066.28..97631.53 rows=424285 width=35) (actual time=228.869..559.097 rows=325928 loops=1)
                                             Hash Cond: ((lineitem.l_suppkey = partsupp.ps_suppkey) AND (lineitem.l_partkey = partsupp.ps_partkey))
                                             ->  Nested Loop  (cost=0.85..50801.60 rows=424285 width=33) (actual time=0.029..163.346 rows=325928 loops=1)
                                                   ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=14141 width=4) (actual time=0.017..40.225 rows=10880 loops=1)
                                                         Filter: ((p_name)::text ~~ '%navy%'::text)
                                                         Rows Removed by Filter: 189120
                                                         Heap Fetches: 0
                                                   ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.83 rows=31 width=29) (actual time=0.003..0.008 rows=30 loops=10880)
                                                         Index Cond: (l_partkey = part.p_partkey)
                                                         Heap Fetches: 0
                                             ->  Hash  (cost=18158.42..18158.42 rows=800000 width=14) (actual time=227.420..227.420 rows=800000 loops=1)
                                                   Buckets: 1048576  Batches: 2  Memory Usage: 26936kB
                                                   ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..18158.42 rows=800000 width=14) (actual time=0.025..85.958 rows=800000 loops=1)
                                                         Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.493..2.493 rows=10000 loops=1)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.009..1.357 rows=10000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.018 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.008..0.011 rows=25 loops=1)
 Planning Time: 4.723 ms
 Execution Time: 1502.099 ms
(37 rows)

query 10 run 1
SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=160074.83..160074.88 rows=20 width=202) (actual time=1233.299..1233.306 rows=20 loops=1)
   ->  Sort  (cost=160074.83..160206.68 rows=52740 width=202) (actual time=1233.298..1233.303 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=158012.19..158671.44 rows=52740 width=202) (actual time=1203.039..1222.008 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7820.92..157352.94 rows=52740 width=182) (actual time=103.350..1092.278 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7819.36..157189.46 rows=52740 width=160) (actual time=103.104..1065.414 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=847.36..150079.02 rows=52740 width=16) (actual time=11.607..926.729 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=846.92..27783.53 rows=53707 width=8) (actual time=11.222..468.833 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..833.50 rows=53707 width=0) (actual time=7.979..7.979 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.007..0.007 rows=2 loops=57111)
                                       Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=91.140..91.141 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.418..49.534 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.235..0.236 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.227..0.230 rows=25 loops=1)
 Planning Time: 23.405 ms
 Execution Time: 1234.478 ms
(27 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=160074.83..160074.88 rows=20 width=202) (actual time=459.531..459.537 rows=20 loops=1)
   ->  Sort  (cost=160074.83..160206.68 rows=52740 width=202) (actual time=459.530..459.534 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=158012.19..158671.44 rows=52740 width=202) (actual time=429.754..448.194 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               ->  Hash Join  (cost=7820.92..157352.94 rows=52740 width=182) (actual time=71.900..342.241 rows=114347 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     ->  Hash Join  (cost=7819.36..157189.46 rows=52740 width=160) (actual time=71.882..319.021 rows=114347 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Nested Loop  (cost=847.36..150079.02 rows=52740 width=16) (actual time=7.737..215.446 rows=114347 loops=1)
                                 ->  Bitmap Heap Scan on orders  (cost=846.92..27783.53 rows=53707 width=8) (actual time=7.698..37.918 rows=57111 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       Heap Blocks: exact=23377
                                       ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..833.50 rows=53707 width=0) (actual time=4.955..4.956 rows=57111 loops=1)
                                             Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                 ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.002..0.003 rows=2 loops=57111)
                                       Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=148) (actual time=63.772..63.773 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 28861kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=148) (actual time=0.008..24.565 rows=150000 loops=1)
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.014..0.014 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.005..0.008 rows=25 loops=1)
 Planning Time: 1.673 ms
 Execution Time: 459.950 ms
(27 rows)

query 11 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29202.75..29202.75 rows=1 width=36) (actual time=753.764..753.769 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14027.27..14027.29 rows=1 width=32) (actual time=27.234..27.236 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13787.27 rows=32000 width=10) (actual time=0.923..19.687 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.912..1.146 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.902..1.088 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.884..0.884 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.08 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15175.47..15202.13 rows=10667 width=36) (actual time=753.763..753.765 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14562.13..15122.13 rows=10667 width=36) (actual time=743.037..753.618 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..14002.13 rows=32000 width=14) (actual time=1.302..684.700 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.841..4.497 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.396..0.398 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.348..3.154 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.08 rows=80 width=18) (actual time=0.136..1.637 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 15.054 ms
 Execution Time: 754.975 ms
(34 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29202.75..29202.75 rows=1 width=36) (actual time=85.460..85.464 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14027.27..14027.29 rows=1 width=32) (actual time=26.316..26.318 rows=1 loops=1)
           ->  Nested Loop  (cost=7.81..13787.27 rows=32000 width=10) (actual time=0.056..18.825 rows=32880 loops=1)
                 ->  Nested Loop  (cost=7.38..234.45 rows=400 width=4) (actual time=0.049..0.291 rows=411 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=7.38..229.14 rows=400 width=8) (actual time=0.040..0.234 rows=411 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=183
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.023..0.023 rows=411 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..33.08 rows=80 width=14) (actual time=0.003..0.036 rows=80 loops=411)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=15175.47..15202.13 rows=10667 width=36) (actual time=85.459..85.460 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=14562.13..15122.13 rows=10667 width=36) (actual time=75.031..85.315 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 30007
               ->  Nested Loop  (cost=0.42..14002.13 rows=32000 width=14) (actual time=0.038..30.289 rows=32880 loops=1)
                     ->  Nested Loop  (cost=0.00..449.31 rows=400 width=4) (actual time=0.032..1.826 rows=411 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 9589
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.008..0.010 rows=1 loops=1)
                                 Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.006..0.666 rows=10000 loops=1)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..33.08 rows=80 width=18) (actual time=0.004..0.059 rows=80 loops=411)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.114 ms
 Execution Time: 85.836 ms
(34 rows)

query 12 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68143.60..68143.61 rows=1 width=27) (actual time=587.132..587.135 rows=1 loops=1)
   ->  Sort  (cost=68143.60..68143.62 rows=7 width=27) (actual time=587.131..587.132 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=68143.50..68143.57 rows=7 width=27) (actual time=587.107..587.109 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Hash Join  (cost=14951.92..67627.65 rows=29477 width=27) (actual time=92.013..573.327 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.590..291.631 rows=1500000 loops=1)
                     ->  Hash  (cost=14583.46..14583.46 rows=29477 width=15) (actual time=91.291..91.292 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14583.46 rows=29477 width=15) (actual time=0.347..85.972 rows=30953 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 77481
                                 Heap Fetches: 0
 Planning Time: 19.617 ms
 Execution Time: 588.075 ms
(18 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=68143.60..68143.61 rows=1 width=27) (actual time=340.856..340.858 rows=1 loops=1)
   ->  Sort  (cost=68143.60..68143.62 rows=7 width=27) (actual time=340.854..340.856 rows=1 loops=1)
         Sort Key: lineitem.l_shipmode
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=68143.50..68143.57 rows=7 width=27) (actual time=340.834..340.835 rows=2 loops=1)
               Group Key: lineitem.l_shipmode
               ->  Hash Join  (cost=14951.92..67627.65 rows=29477 width=27) (actual time=63.744..330.994 rows=30953 loops=1)
                     Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                     ->  Seq Scan on orders  (cost=0.00..41131.00 rows=1500000 width=20) (actual time=0.004..80.620 rows=1500000 loops=1)
                     ->  Hash  (cost=14583.46..14583.46 rows=29477 width=15) (actual time=63.703..63.704 rows=30953 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1707kB
                           ->  Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..14583.46 rows=29477 width=15) (actual time=0.020..59.460 rows=30953 loops=1)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 77481
                                 Heap Fetches: 0
 Planning Time: 1.416 ms
 Execution Time: 340.918 ms
(18 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1463.931..1463.934 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1463.930..1463.932 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1463.904..1463.911 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1421.931..1446.358 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=36.672..1069.789 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.771..635.178 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=35.536..35.537 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.261..16.132 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 15.702 ms
 Execution Time: 1465.822 ms
(19 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1264.797..1264.799 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1264.795..1264.797 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1264.771..1264.778 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1222.505..1247.020 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=30.940..885.010 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.011..476.597 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=30.544..30.544 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.014..12.421 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.702 ms
 Execution Time: 1265.937 ms
(19 rows)

query 14 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=86105.77..86105.78 rows=1 width=32) (actual time=808.113..808.115 rows=1 loops=1)
   ->  Aggregate  (cost=86105.77..86105.78 rows=1 width=32) (actual time=808.112..808.113 rows=1 loops=1)
         ->  Hash Join  (cost=9972.03..84769.62 rows=76351 width=33) (actual time=107.423..754.195 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1373.03..75970.20 rows=76351 width=16) (actual time=18.765..623.450 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1353.94 rows=76351 width=0) (actual time=13.120..13.121 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=88.411..88.412 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.587..54.579 rows=200000 loops=1)
 Planning Time: 18.539 ms
 Execution Time: 809.134 ms
(14 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=86105.77..86105.78 rows=1 width=32) (actual time=182.620..182.623 rows=1 loops=1)
   ->  Aggregate  (cost=86105.77..86105.78 rows=1 width=32) (actual time=182.619..182.621 rows=1 loops=1)
         ->  Hash Join  (cost=9972.03..84769.62 rows=76351 width=33) (actual time=70.228..150.905 rows=77317 loops=1)
               Hash Cond: (lineitem.l_partkey = part.p_partkey)
               ->  Bitmap Heap Scan on lineitem  (cost=1373.03..75970.20 rows=76351 width=16) (actual time=12.659..64.574 rows=77317 loops=1)
                     Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                     Heap Blocks: exact=41681
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1353.94 rows=76351 width=0) (actual time=7.593..7.593 rows=77317 loops=1)
                           Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
               ->  Hash  (cost=6099.00..6099.00 rows=200000 width=25) (actual time=57.371..57.371 rows=200000 loops=1)
                     Buckets: 262144  Batches: 1  Memory Usage: 13600kB
                     ->  Seq Scan on part  (cost=0.00..6099.00 rows=200000 width=25) (actual time=0.009..26.604 rows=200000 loops=1)
 Planning Time: 1.395 ms
 Execution Time: 182.684 ms
(14 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246956.21..246965.41 rows=1 width=103) (actual time=1433.047..1433.058 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122655.26..122655.27 rows=1 width=32) (actual time=211.544..211.545 rows=1 loops=1)
           ->  HashAggregate  (cost=122405.26..122530.26 rows=10000 width=36) (actual time=208.020..210.803 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4117.02..120113.96 rows=229130 width=16) (actual time=27.962..96.978 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4059.73 rows=229130 width=0) (actual time=18.962..18.963 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124300.94..124760.69 rows=50 width=103) (actual time=1433.046..1433.047 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.445..4.861 rows=8449 loops=1)
         ->  Sort  (cost=124300.65..124300.78 rows=50 width=36) (actual time=1427.651..1427.652 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124123.74..124299.24 rows=50 width=36) (actual time=1425.258..1427.646 rows=1 loops=1)
                     ->  HashAggregate  (cost=124123.74..124298.74 rows=50 width=36) (actual time=1425.257..1427.645 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4117.02..120113.96 rows=229130 width=16) (actual time=38.942..1032.732 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4059.73 rows=229130 width=0) (actual time=29.460..29.460 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 17.957 ms
 Execution Time: 1433.510 ms
(28 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=246956.21..246965.41 rows=1 width=103) (actual time=458.499..458.502 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122655.26..122655.27 rows=1 width=32) (actual time=211.208..211.209 rows=1 loops=1)
           ->  HashAggregate  (cost=122405.26..122530.26 rows=10000 width=36) (actual time=207.802..210.458 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4117.02..120113.96 rows=229130 width=16) (actual time=27.572..96.952 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4059.73 rows=229130 width=0) (actual time=18.581..18.582 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Merge Join  (cost=124300.94..124760.69 rows=50 width=103) (actual time=458.498..458.499 rows=1 loops=1)
         Merge Cond: (supplier.s_suppkey = revenue0.supplier_no)
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..434.29 rows=10000 width=71) (actual time=0.007..1.320 rows=8449 loops=1)
         ->  Sort  (cost=124300.65..124300.78 rows=50 width=36) (actual time=456.656..456.657 rows=1 loops=1)
               Sort Key: revenue0.supplier_no
               Sort Method: quicksort  Memory: 25kB
               ->  Subquery Scan on revenue0  (cost=124123.74..124299.24 rows=50 width=36) (actual time=454.268..456.653 rows=1 loops=1)
                     ->  HashAggregate  (cost=124123.74..124298.74 rows=50 width=36) (actual time=454.267..456.651 rows=1 loops=1)
                           Group Key: lineitem.l_suppkey
                           Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
                           Rows Removed by Filter: 9999
                           ->  Bitmap Heap Scan on lineitem  (cost=4117.02..120113.96 rows=229130 width=16) (actual time=29.263..127.522 rows=225954 loops=1)
                                 Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                 Heap Blocks: exact=66828
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..4059.73 rows=229130 width=0) (actual time=20.251..20.252 rows=225954 loops=1)
                                       Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
 Planning Time: 1.337 ms
 Execution Time: 458.622 ms
(28 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34871.00..34871.01 rows=1 width=44) (actual time=605.554..605.557 rows=1 loops=1)
   ->  Sort  (cost=34871.00..34910.76 rows=15901 width=44) (actual time=605.552..605.555 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33899.56..34791.50 rows=15901 width=44) (actual time=556.953..602.401 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33899.56..34046.15 rows=58634 width=40) (actual time=556.930..565.015 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9813.89..29255.91 rows=58634 width=40) (actual time=86.182..295.258 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=5.627..141.833 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.911..5.424 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29317 width=40) (actual time=80.513..80.513 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29317 width=40) (actual time=0.726..74.355 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 14.722 ms
 Execution Time: 606.457 ms
(26 rows)

SET
SET
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=34871.00..34871.01 rows=1 width=44) (actual time=553.955..553.958 rows=1 loops=1)
   ->  Sort  (cost=34871.00..34910.76 rows=15901 width=44) (actual time=553.954..553.956 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=33899.56..34791.50 rows=15901 width=44) (actual time=505.901..550.843 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Sort  (cost=33899.56..34046.15 rows=58634 width=40) (actual time=505.879..513.731 rows=117930 loops=1)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     Sort Method: quicksort  Memory: 12286kB
                     ->  Hash Join  (cost=9813.89..29255.91 rows=58634 width=40) (actual time=52.267..244.956 rows=117930 loops=1)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..18740.43 rows=400000 width=8) (actual time=2.144..123.733 rows=799680 loops=1)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 320
                                 Heap Fetches: 0
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.085..2.123 rows=4 loops=1)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Hash  (cost=9099.00..9099.00 rows=29317 width=40) (actual time=50.094..50.094 rows=29492 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2393kB
                                 ->  Seq Scan on part  (cost=0.00..9099.00 rows=29317 width=40) (actual time=0.011..45.035 rows=29492 loops=1)
                                       Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                       Rows Removed by Filter: 170508
 Planning Time: 0.909 ms
 Execution Time: 554.010 ms
(26 rows)

query 17 run 1
SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179245.72..179245.73 rows=1 width=32) (actual time=2300.525..2300.528 rows=1 loops=1)
   ->  Aggregate  (cost=179245.72..179245.73 rows=1 width=32) (actual time=2300.524..2300.526 rows=1 loops=1)
         ->  Nested Loop  (cost=7108.06..179240.59 rows=2049 width=8) (actual time=64.084..2300.209 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.62..178675.70 rows=205 width=40) (actual time=63.573..2188.867 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7107.19..7107.72 rows=212 width=4) (actual time=56.026..56.128 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=212 width=4) (actual time=1.377..55.937 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169149.25 rows=193292 width=36) (actual time=0.776..2115.649 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136246.01 rows=6000772 width=9) (actual time=0.737..1277.395 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.493..0.533 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 20.819 ms
 Execution Time: 2300.843 ms
(21 rows)

SET
SET
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=179245.72..179245.73 rows=1 width=32) (actual time=1936.537..1936.539 rows=1 loops=1)
   ->  Aggregate  (cost=179245.72..179245.73 rows=1 width=32) (actual time=1936.536..1936.537 rows=1 loops=1)
         ->  Nested Loop  (cost=7108.06..179240.59 rows=2049 width=8) (actual time=32.508..1936.442 rows=592 loops=1)
               Join Filter: (part.p_partkey = lineitem.l_partkey)
               ->  Merge Join  (cost=7107.62..178675.70 rows=205 width=40) (actual time=32.491..1934.727 rows=208 loops=1)
                     Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                     ->  Sort  (cost=7107.19..7107.72 rows=212 width=4) (actual time=26.514..26.547 rows=208 loops=1)
                           Sort Key: part.p_partkey
                           Sort Method: quicksort  Memory: 34kB
                           ->  Seq Scan on part  (cost=0.00..7099.00 rows=212 width=4) (actual time=0.098..26.472 rows=208 loops=1)
                                 Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                 Rows Removed by Filter: 199792
                     ->  GroupAggregate  (cost=0.43..169149.25 rows=193292 width=36) (actual time=0.035..1894.847 rows=199275 loops=1)
                           Group Key: lineitem_1.l_partkey
                           ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136246.01 rows=6000772 width=9) (actual time=0.013..1075.631 rows=5979328 loops=1)
                                 Heap Fetches: 0
               ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.006..0.007 rows=3 loops=208)
                     Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                     Heap Fetches: 0
 Planning Time: 1.291 ms
 Execution Time: 1936.593 ms
(21 rows)

query 18 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=820070.32..820070.57 rows=100 width=71) (actual time=2930.260..2930.263 rows=9 loops=1)
   ->  Sort  (cost=820070.32..825071.60 rows=2000513 width=71) (actual time=2930.259..2930.262 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=698600.61..743612.15 rows=2000513 width=71) (actual time=2930.223..2930.240 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=698600.61..703601.89 rows=2000513 width=44) (actual time=2930.215..2930.220 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6999.47..445270.03 rows=2000513 width=44) (actual time=732.819..2930.183 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=27.47..433046.54 rows=2000513 width=25) (actual time=662.932..2860.264 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..260590.64 rows=500064 width=24) (actual time=503.336..2252.110 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=1.204..327.947 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..188724.77 rows=500064 width=4) (actual time=392.534..1852.020 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136218.01 rows=6000772 width=9) (actual time=0.312..702.427 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136218.01 rows=6000772 width=9) (actual time=0.016..398.470 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.547..69.548 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.566..44.037 rows=150000 loops=1)
 Planning Time: 23.276 ms
 Execution Time: 2930.671 ms
(29 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=820070.32..820070.57 rows=100 width=71) (actual time=2527.131..2527.135 rows=9 loops=1)
   ->  Sort  (cost=820070.32..825071.60 rows=2000513 width=71) (actual time=2527.130..2527.133 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  GroupAggregate  (cost=698600.61..743612.15 rows=2000513 width=71) (actual time=2527.098..2527.115 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               ->  Sort  (cost=698600.61..703601.89 rows=2000513 width=44) (actual time=2527.091..2527.095 rows=63 loops=1)
                     Sort Key: customer.c_custkey, orders.o_orderkey
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=6999.47..445270.03 rows=2000513 width=44) (actual time=609.656..2527.062 rows=63 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Merge Join  (cost=27.47..433046.54 rows=2000513 width=25) (actual time=567.577..2484.956 rows=63 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Merge Join  (cost=0.86..260590.64 rows=500064 width=24) (actual time=408.941..1881.467 rows=9 loops=1)
                                       Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.010..160.998 rows=1201687 loops=1)
                                       ->  GroupAggregate  (cost=0.43..188724.77 rows=500064 width=4) (actual time=347.460..1650.115 rows=9 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                             Rows Removed by Filter: 1499991
                                             ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136218.01 rows=6000772 width=9) (actual time=0.008..525.562 rows=6001215 loops=1)
                                                   Heap Fetches: 0
                                 ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136218.01 rows=6000772 width=9) (actual time=0.012..395.729 rows=4807580 loops=1)
                                       Heap Fetches: 0
                           ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=41.750..41.751 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                                 ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..19.021 rows=150000 loops=1)
 Planning Time: 1.814 ms
 Execution Time: 2527.216 ms
(29 rows)

query 19 run 1
SET
SET
SET


 Limit  (cost=14298.93..14298.94 rows=1 width=32) (actual time=340.186..340.187 rows=1 loops=1)
   ->  Aggregate  (cost=14298.93..14298.94 rows=1 width=32) (actual time=340.185..340.185 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14298.09 rows=112 width=12) (actual time=2.344..339.915 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=492 width=30) (actual time=1.533..91.654 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.468..0.488 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 22.479 ms
 Execution Time: 340.947 ms
(13 rows)

SET
SET
SET


 Limit  (cost=14298.93..14298.94 rows=1 width=32) (actual time=51.726..51.727 rows=1 loops=1)
   ->  Aggregate  (cost=14298.93..14298.94 rows=1 width=32) (actual time=51.725..51.726 rows=1 loops=1)
         ->  Nested Loop  (cost=0.56..14298.09 rows=112 width=12) (actual time=0.254..51.647 rows=111 loops=1)
               ->  Seq Scan on part  (cost=0.00..12599.00 rows=492 width=30) (actual time=0.210..47.351 rows=507 loops=1)
                     Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                     Rows Removed by Filter: 199493
               ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.007..0.008 rows=0 loops=507)
                     Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                     Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                     Rows Removed by Filter: 7
                     Heap Fetches: 0
 Planning Time: 2.772 ms
 Execution Time: 51.770 ms
(13 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277614.12..277614.12 rows=1 width=51) (actual time=3405.710..3405.713 rows=1 loops=1)
   ->  Sort  (cost=277614.12..277614.12 rows=1 width=51) (actual time=3405.709..3405.712 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243742.25..277614.11 rows=1 width=51) (actual time=3229.351..3405.509 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.582..3.914 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.260..0.263 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.314..2.890 rows=10000 loops=1)
               ->  Materialize  (cost=243742.25..277158.80 rows=1 width=8) (actual time=5.972..7.523 rows=4371 loops=438)
                     ->  Merge Join  (cost=243742.25..277158.79 rows=1 width=8) (actual time=2615.857..3225.627 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243741.40..260105.11 rows=484217 width=40) (actual time=2615.474..3121.880 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243741.40..246016.52 rows=910045 width=13) (actual time=2615.459..2712.782 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16346.39..142557.07 rows=910045 width=13) (actual time=126.547..2199.779 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16118.88 rows=910045 width=0) (actual time=109.803..109.803 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10583.32 rows=8080 width=16) (actual time=0.059..72.056 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10563.12 rows=8080 width=16) (actual time=0.056..68.890 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.027..31.466 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.015..0.016 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 26.354 ms
 Execution Time: 3408.712 ms
(40 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=277614.12..277614.12 rows=1 width=51) (actual time=1456.933..1456.936 rows=1 loops=1)
   ->  Sort  (cost=277614.12..277614.12 rows=1 width=51) (actual time=1456.932..1456.935 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=243742.25..277614.11 rows=1 width=51) (actual time=1283.231..1456.776 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1914277
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.015..1.702 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.009 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.006..0.606 rows=10000 loops=1)
               ->  Materialize  (cost=243742.25..277158.80 rows=1 width=8) (actual time=1.637..3.080 rows=4371 loops=438)
                     ->  Merge Join  (cost=243742.25..277158.79 rows=1 width=8) (actual time=716.950..1280.312 rows=5898 loops=1)
                           Merge Cond: (lineitem.l_partkey = partsupp.ps_partkey)
                           Join Filter: ((partsupp.ps_suppkey = lineitem.l_suppkey) AND ((partsupp.ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity)))))
                           Rows Removed by Join Filter: 17758
                           ->  GroupAggregate  (cost=243741.40..260105.11 rows=484217 width=40) (actual time=716.588..1218.549 rows=544645 loops=1)
                                 Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                 ->  Sort  (cost=243741.40..246016.52 rows=910045 width=13) (actual time=716.574..812.612 rows=913097 loops=1)
                                       Sort Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Sort Method: external merge  Disk: 20568kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16346.39..142557.07 rows=910045 width=13) (actual time=92.372..343.870 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16118.88 rows=910045 width=0) (actual time=76.217..76.217 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                           ->  Materialize  (cost=0.84..10583.32 rows=8080 width=16) (actual time=0.041..30.521 rows=23762 loops=1)
                                 ->  Nested Loop  (cost=0.84..10563.12 rows=8080 width=16) (actual time=0.038..27.720 rows=8748 loops=1)
                                       ->  Index Only Scan using q20_idx_2 on part  (cost=0.42..6438.42 rows=2020 width=4) (actual time=0.027..20.262 rows=2187 loops=1)
                                             Filter: ((p_name)::text ~~ 'olive%'::text)
                                             Rows Removed by Filter: 197813
                                             Heap Fetches: 0
                                       ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..2.00 rows=4 width=12) (actual time=0.002..0.003 rows=4 loops=2187)
                                             Index Cond: (ps_partkey = part.p_partkey)
                                             Heap Fetches: 0
 Planning Time: 1.930 ms
 Execution Time: 1460.045 ms
(40 rows)

query 21 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103764.09..103764.09 rows=1 width=34) (actual time=1685.011..1685.025 rows=100 loops=1)
   ->  Sort  (cost=103764.09..103764.09 rows=1 width=34) (actual time=1685.010..1685.018 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=103764.06..103764.08 rows=1 width=34) (actual time=1683.981..1684.612 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=103764.06..103764.06 rows=1 width=26) (actual time=1683.972..1684.133 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=56042.06..103764.05 rows=1 width=26) (actual time=680.682..1669.924 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=56041.63..103761.61 rows=1 width=38) (actual time=680.645..1291.071 rows=6909 loops=1)
                                 ->  Merge Anti Join  (cost=56041.20..103759.25 rows=1 width=34) (actual time=680.633..1221.477 rows=14289 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 55738
                                       ->  Sort  (cost=56040.77..56240.80 rows=80010 width=34) (actual time=680.504..689.741 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=239.88..49524.80 rows=80010 width=34) (actual time=5.920..654.595 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..40984.28 rows=2000257 width=8) (actual time=0.267..398.584 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=5.624..5.625 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=1.205..5.503 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.259..0.261 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.940..5.158 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.588..0.588 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..40984.28 rows=2000257 width=8) (actual time=0.016..326.924 rows=3797105 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.054..0.054 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 23.469 ms
 Execution Time: 1686.145 ms
(45 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103764.09..103764.09 rows=1 width=34) (actual time=1151.825..1151.839 rows=100 loops=1)
   ->  Sort  (cost=103764.09..103764.09 rows=1 width=34) (actual time=1151.824..1151.832 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=103764.06..103764.08 rows=1 width=34) (actual time=1150.799..1151.432 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Sort  (cost=103764.06..103764.06 rows=1 width=26) (actual time=1150.792..1150.953 rows=4227 loops=1)
                     Sort Key: supplier.s_name
                     Sort Method: quicksort  Memory: 523kB
                     ->  Nested Loop Semi Join  (cost=56042.06..103764.05 rows=1 width=26) (actual time=582.110..1137.887 rows=4227 loops=1)
                           Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                           Rows Removed by Join Filter: 2768
                           ->  Nested Loop  (cost=56041.63..103761.61 rows=1 width=38) (actual time=582.085..1120.802 rows=6909 loops=1)
                                 ->  Merge Anti Join  (cost=56041.20..103759.25 rows=1 width=34) (actual time=582.075..1091.356 rows=14289 loops=1)
                                       Merge Cond: (l1.l_orderkey = l3.l_orderkey)
                                       Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Join Filter: 55738
                                       ->  Sort  (cost=56040.77..56240.80 rows=80010 width=34) (actual time=581.947..590.944 rows=159165 loops=1)
                                             Sort Key: l1.l_orderkey
                                             Sort Method: quicksort  Memory: 18579kB
                                             ->  Hash Join  (cost=239.88..49524.80 rows=80010 width=34) (actual time=0.468..558.891 rows=159165 loops=1)
                                                   Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                                   ->  Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..40984.28 rows=2000257 width=8) (actual time=0.010..316.076 rows=3793296 loops=1)
                                                         Heap Fetches: 0
                                                   ->  Hash  (cost=234.45..234.45 rows=400 width=30) (actual time=0.443..0.444 rows=421 loops=1)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 35kB
                                                         ->  Nested Loop  (cost=7.38..234.45 rows=400 width=30) (actual time=0.096..0.381 rows=421 loops=1)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.006..0.008 rows=1 loops=1)
                                                                     Filter: (n_name = 'PERU'::bpchar)
                                                                     Rows Removed by Filter: 24
                                                               ->  Bitmap Heap Scan on supplier  (cost=7.38..229.14 rows=400 width=34) (actual time=0.081..0.322 rows=421 loops=1)
                                                                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                                     Heap Blocks: exact=184
                                                                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..7.29 rows=400 width=0) (actual time=0.056..0.056 rows=421 loops=1)
                                                                           Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..40984.28 rows=2000257 width=8) (actual time=0.015..307.502 rows=3797105 loops=1)
                                             Heap Fetches: 0
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=14289)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.002..0.002 rows=1 loops=6909)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Heap Fetches: 0
 Planning Time: 2.828 ms
 Execution Time: 1151.940 ms
(45 rows)

query 22 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16184.08..16184.10 rows=1 width=72) (actual time=233.717..233.719 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.41..7546.42 rows=1 width=32) (actual time=100.140..100.141 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4764 width=6) (actual time=0.016..96.546 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8637.65..8658.22 rows=748 width=72) (actual time=233.716..233.716 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8637.65..8639.52 rows=748 width=38) (actual time=233.519..233.555 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8601.95 rows=748 width=38) (actual time=100.558..230.368 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=100.533..156.532 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.003..0.003 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 15.028 ms
 Execution Time: 234.556 ms
(20 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=16184.08..16184.10 rows=1 width=72) (actual time=165.414..165.416 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=7546.41..7546.42 rows=1 width=32) (actual time=74.300..74.301 rows=1 loops=1)
           ->  Seq Scan on customer customer_1  (cost=0.00..7534.50 rows=4764 width=6) (actual time=0.007..71.018 rows=38017 loops=1)
                 Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                 Rows Removed by Filter: 111983
   ->  GroupAggregate  (cost=8637.65..8658.22 rows=748 width=72) (actual time=165.413..165.413 rows=1 loops=1)
         Group Key: ("substring"((customer.c_phone)::text, 1, 2))
         ->  Sort  (cost=8637.65..8639.52 rows=748 width=38) (actual time=165.220..165.255 rows=952 loops=1)
               Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
               Sort Method: quicksort  Memory: 492kB
               ->  Nested Loop Anti Join  (cost=0.43..8601.95 rows=748 width=38) (actual time=74.340..163.464 rows=6397 loops=1)
                     ->  Seq Scan on customer  (cost=0.00..7534.50 rows=1750 width=26) (actual time=74.323..125.997 rows=19077 loops=1)
                           Filter: ((c_acctbal > $0) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                           Rows Removed by Filter: 130923
                     ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.38 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=19077)
                           Index Cond: (o_custkey = customer.c_custkey)
                           Heap Fetches: 0
 Planning Time: 0.917 ms
 Execution Time: 165.687 ms
(20 rows)

