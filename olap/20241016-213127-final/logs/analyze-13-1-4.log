query 1 run 1
SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191552.73..191553.41 rows=1 width=236) (actual time=2037.267..2037.336 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191552.73..191556.79 rows=6 width=236) (actual time=2037.266..2037.335 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191552.73..191555.60 rows=24 width=236) (actual time=2037.240..2037.311 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190552.67..190552.69 rows=6 width=236) (actual time=2028.611..2028.612 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190552.43..190552.59 rows=6 width=236) (actual time=2028.584..2028.592 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.87 rows=1480964 width=25) (actual time=0.095..432.306 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 16.670 ms
 Execution Time: 2038.066 ms
(25 rows)

SET
SET
SET
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=191552.73..191553.41 rows=1 width=236) (actual time=1868.234..1868.307 rows=1 loops=1)
   ->  Finalize GroupAggregate  (cost=191552.73..191556.79 rows=6 width=236) (actual time=1868.233..1868.305 rows=1 loops=1)
         Group Key: l_returnflag, l_linestatus
         ->  Gather Merge  (cost=191552.73..191555.60 rows=24 width=236) (actual time=1868.195..1868.270 rows=6 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Sort  (cost=190552.67..190552.69 rows=6 width=236) (actual time=1862.473..1862.474 rows=4 loops=5)
                     Sort Key: l_returnflag, l_linestatus
                     Sort Method: quicksort  Memory: 27kB
                     Worker 0:  Sort Method: quicksort  Memory: 27kB
                     Worker 1:  Sort Method: quicksort  Memory: 27kB
                     Worker 2:  Sort Method: quicksort  Memory: 27kB
                     Worker 3:  Sort Method: quicksort  Memory: 27kB
                     ->  Partial HashAggregate  (cost=190552.43..190552.59 rows=6 width=236) (actual time=1862.447..1862.455 rows=4 loops=5)
                           Group Key: l_returnflag, l_linestatus
                           Batches: 1  Memory Usage: 24kB
                           Worker 0:  Batches: 1  Memory Usage: 24kB
                           Worker 1:  Batches: 1  Memory Usage: 24kB
                           Worker 2:  Batches: 1  Memory Usage: 24kB
                           Worker 3:  Batches: 1  Memory Usage: 24kB
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.87 rows=1480964 width=25) (actual time=0.026..270.774 rows=1186191 loops=5)
                                 Filter: (l_shipdate <= '1998-09-10 00:00:00'::timestamp without time zone)
                                 Rows Removed by Filter: 14052
 Planning Time: 1.256 ms
 Execution Time: 1868.399 ms
(25 rows)

query 2 run 1
SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=21586.13..21586.13 rows=1 width=192) (actual time=157.901..157.914 rows=100 loops=1)
   ->  Sort  (cost=21586.13..21586.13 rows=1 width=192) (actual time=157.900..157.907 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..21586.12 rows=1 width=192) (actual time=5.195..157.562 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.331..0.336 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.160..0.161 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.166..0.168 rows=25 loops=1)
               ->  Materialize  (cost=14.58..21583.42 rows=1 width=170) (actual time=0.384..31.356 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..21583.42 rows=1 width=170) (actual time=1.912..156.105 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..21582.14 rows=1 width=34) (actual time=1.516..116.966 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5442.83 rows=1031 width=30) (actual time=0.272..23.788 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.64 rows=1 width=14) (actual time=0.001..0.002 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.113..0.113 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.101..0.111 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.002 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.083..0.108 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.081..0.103 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.077..0.078 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.079..0.079 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 21.413 ms
 Execution Time: 158.550 ms
(47 rows)

SET
SET
SET
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=21586.13..21586.13 rows=1 width=192) (actual time=22.946..22.960 rows=100 loops=1)
   ->  Sort  (cost=21586.13..21586.13 rows=1 width=192) (actual time=22.945..22.952 rows=100 loops=1)
         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 71kB
         ->  Nested Loop  (cost=14.58..21586.12 rows=1 width=192) (actual time=0.163..22.649 rows=489 loops=1)
               Join Filter: (nation.n_nationkey = supplier.s_nationkey)
               Rows Removed by Join Filter: 1956
               ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30) (actual time=0.013..0.018 rows=5 loops=1)
                     Join Filter: (nation.n_regionkey = region.r_regionkey)
                     Rows Removed by Join Filter: 20
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.009..0.010 rows=1 loops=1)
                           Filter: (r_name = 'AMERICA'::bpchar)
                           Rows Removed by Filter: 4
                     ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.002..0.003 rows=25 loops=1)
               ->  Materialize  (cost=14.58..21583.42 rows=1 width=170) (actual time=0.012..4.465 rows=489 loops=5)
                     ->  Nested Loop  (cost=14.58..21583.42 rows=1 width=170) (actual time=0.056..21.958 rows=489 loops=1)
                           ->  Nested Loop  (cost=14.30..21582.14 rows=1 width=34) (actual time=0.051..20.918 rows=489 loops=1)
                                 ->  Index Only Scan using q2_idx_1 on part  (cost=0.42..5442.83 rows=1031 width=30) (actual time=0.011..6.767 rows=799 loops=1)
                                       Index Cond: (p_size = 16)
                                       Filter: ((p_type)::text ~~ '%NICKEL'::text)
                                       Rows Removed by Filter: 3304
                                       Heap Fetches: 0
                                 ->  Index Only Scan using q2_idx_2 on partsupp  (cost=13.88..15.64 rows=1 width=14) (actual time=0.001..0.001 rows=1 loops=799)
                                       Index Cond: ((ps_partkey = part.p_partkey) AND (ps_supplycost = (SubPlan 1)))
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Aggregate  (cost=13.44..13.45 rows=1 width=32) (actual time=0.016..0.016 rows=1 loops=799)
                                               ->  Nested Loop  (cost=0.85..13.44 rows=1 width=6) (actual time=0.011..0.014 rows=1 loops=799)
                                                     Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                                     Rows Removed by Join Filter: 3
                                                     ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.001..0.001 rows=1 loops=799)
                                                           Filter: (r_name = 'AMERICA'::bpchar)
                                                           Rows Removed by Filter: 4
                                                     ->  Nested Loop  (cost=0.85..12.33 rows=4 width=10) (actual time=0.005..0.013 rows=4 loops=799)
                                                           ->  Nested Loop  (cost=0.71..11.71 rows=4 width=10) (actual time=0.004..0.009 rows=4 loops=799)
                                                                 ->  Index Only Scan using q2_idx_2 on partsupp partsupp_1  (cost=0.42..2.49 rows=4 width=10) (actual time=0.002..0.003 rows=4 loops=799)
                                                                       Index Cond: (ps_partkey = part.p_partkey)
                                                                       Heap Fetches: 0
                                                                 ->  Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..2.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                       Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                                                       Heap Fetches: 0
                                                           ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=3196)
                                                                 Index Cond: (n_nationkey = supplier_1.s_nationkey)
                           ->  Index Scan using supplier_pkey on supplier  (cost=0.29..1.27 rows=1 width=144) (actual time=0.002..0.002 rows=1 loops=489)
                                 Index Cond: (s_suppkey = partsupp.ps_suppkey)
 Planning Time: 2.103 ms
 Execution Time: 23.229 ms
(47 rows)

query 3 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233627.11..233627.13 rows=10 width=44) (actual time=1167.387..1169.645 rows=10 loops=1)
   ->  Sort  (cost=233627.11..234420.84 rows=317491 width=44) (actual time=1167.386..1169.642 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180020.57..226766.24 rows=317491 width=44) (actual time=1142.959..1167.160 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180020.57..218035.24 rows=317491 width=24) (actual time=1142.927..1150.127 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179020.51..179218.94 rows=79373 width=24) (actual time=1133.504..1133.788 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 660kB
                           Worker 0:  Sort Method: quicksort  Memory: 644kB
                           Worker 1:  Sort Method: quicksort  Memory: 679kB
                           Worker 2:  Sort Method: quicksort  Memory: 695kB
                           Worker 3:  Sort Method: quicksort  Memory: 670kB
                           ->  Parallel Hash Join  (cost=37910.81..172560.99 rows=79373 width=24) (actual time=244.025..1131.443 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.87 rows=821419 width=16) (actual time=0.434..817.293 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.36..37326.36 rows=46756 width=12) (actual time=240.179..240.181 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8992kB
                                       ->  Parallel Hash Join  (cost=4534.91..37326.36 rows=46756 width=12) (actual time=28.812..230.849 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233158 width=16) (actual time=0.326..171.540 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12533 width=4) (actual time=28.369..28.369 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12533 width=4) (actual time=0.074..26.683 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 24.605 ms
 Execution Time: 1170.058 ms
(35 rows)

SET
SET
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=233627.11..233627.13 rows=10 width=44) (actual time=464.232..468.304 rows=10 loops=1)
   ->  Sort  (cost=233627.11..234420.84 rows=317491 width=44) (actual time=464.231..468.302 rows=10 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
         Sort Method: top-N heapsort  Memory: 26kB
         ->  GroupAggregate  (cost=180020.57..226766.24 rows=317491 width=44) (actual time=440.199..465.854 rows=11612 loops=1)
               Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
               ->  Gather Merge  (cost=180020.57..218035.24 rows=317491 width=24) (actual time=440.185..449.235 rows=30533 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=179020.51..179218.94 rows=79373 width=24) (actual time=434.661..434.947 rows=6107 loops=5)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 609kB
                           Worker 0:  Sort Method: quicksort  Memory: 736kB
                           Worker 1:  Sort Method: quicksort  Memory: 569kB
                           Worker 2:  Sort Method: quicksort  Memory: 766kB
                           Worker 3:  Sort Method: quicksort  Memory: 669kB
                           ->  Parallel Hash Join  (cost=37910.81..172560.99 rows=79373 width=24) (actual time=101.775..432.194 rows=6107 loops=5)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..131313.87 rows=821419 width=16) (actual time=0.052..244.820 rows=652375 loops=5)
                                       Filter: (l_shipdate > '1995-03-07'::date)
                                       Rows Removed by Filter: 547868
                                 ->  Parallel Hash  (cost=37326.36..37326.36 rows=46756 width=12) (actual time=100.973..100.976 rows=29213 loops=5)
                                       Buckets: 262144  Batches: 1  Memory Usage: 8960kB
                                       ->  Parallel Hash Join  (cost=4534.91..37326.36 rows=46756 width=12) (actual time=8.169..91.634 rows=29213 loops=5)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32179.39 rows=233158 width=16) (actual time=0.008..56.559 rows=144455 loops=5)
                                                   Filter: (o_orderdate < '1995-03-07'::date)
                                                   Rows Removed by Filter: 155545
                                             ->  Parallel Hash  (cost=4378.25..4378.25 rows=12533 width=4) (actual time=8.090..8.091 rows=6028 loops=5)
                                                   Buckets: 32768  Batches: 1  Memory Usage: 1568kB
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4378.25 rows=12533 width=4) (actual time=0.013..5.917 rows=6028 loops=5)
                                                         Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                         Rows Removed by Filter: 23972
 Planning Time: 1.899 ms
 Execution Time: 468.371 ms
(35 rows)

query 4 run 1
SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29480.32..54250.36 rows=1 width=24) (actual time=945.997..949.361 rows=1 loops=1)
   ->  GroupAggregate  (cost=29480.32..153330.52 rows=5 width=24) (actual time=945.996..949.359 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29480.32..153035.54 rows=58985 width=16) (actual time=423.896..945.372 rows=10479 loops=1)
               ->  Gather Merge  (cost=29479.89..36458.20 rows=58985 width=20) (actual time=423.370..433.066 rows=11387 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28479.85..28527.42 rows=19027 width=20) (actual time=414.710..415.130 rows=3636 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1512kB
                           Worker 0:  Sort Method: quicksort  Memory: 1476kB
                           Worker 1:  Sort Method: quicksort  Memory: 1437kB
                           Worker 2:  Sort Method: quicksort  Memory: 1486kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=711.02..27127.44 rows=19027 width=20) (actual time=3.114..409.038 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5934
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..696.28 rows=58985 width=0) (actual time=7.085..7.085 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=11387)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 19.845 ms
 Execution Time: 950.247 ms
(23 rows)

SET
SET
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=29480.32..54250.36 rows=1 width=24) (actual time=63.994..69.481 rows=1 loops=1)
   ->  GroupAggregate  (cost=29480.32..153330.52 rows=5 width=24) (actual time=63.993..69.479 rows=1 loops=1)
         Group Key: orders.o_orderpriority
         ->  Nested Loop Semi Join  (cost=29480.32..153035.54 rows=58985 width=16) (actual time=34.181..68.146 rows=10479 loops=1)
               ->  Gather Merge  (cost=29479.89..36458.20 rows=58985 width=20) (actual time=34.136..42.349 rows=11389 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=28479.85..28527.42 rows=19027 width=20) (actual time=30.366..30.640 rows=3574 loops=4)
                           Sort Key: orders.o_orderpriority
                           Sort Method: quicksort  Memory: 1477kB
                           Worker 0:  Sort Method: quicksort  Memory: 1468kB
                           Worker 1:  Sort Method: quicksort  Memory: 1484kB
                           Worker 2:  Sort Method: quicksort  Memory: 1482kB
                           ->  Parallel Bitmap Heap Scan on orders  (cost=711.02..27127.44 rows=19027 width=20) (actual time=6.221..26.689 rows=13993 loops=4)
                                 Recheck Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
                                 Heap Blocks: exact=5846
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..696.28 rows=58985 width=0) (actual time=5.597..5.598 rows=55973 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-12-01'::date) AND (o_orderdate < '1994-03-01'::date))
               ->  Index Only Scan using q4_idx_1 on lineitem  (cost=0.43..2.22 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=11389)
                     Index Cond: (l_orderkey = orders.o_orderkey)
                     Heap Fetches: 0
 Planning Time: 1.373 ms
 Execution Time: 69.536 ms
(23 rows)

query 5 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72009.02..72009.02 rows=1 width=58) (actual time=764.043..771.107 rows=1 loops=1)
   ->  Sort  (cost=72009.02..72009.08 rows=25 width=58) (actual time=764.042..771.106 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71969.18..72008.90 rows=25 width=58) (actual time=763.342..771.093 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71969.18..72008.02 rows=75 width=58) (actual time=763.148..771.071 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70969.14..70999.17 rows=25 width=58) (actual time=754.491..755.188 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70969.14..70975.09 rows=2377 width=38) (actual time=754.307..754.388 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 199kB
                                 Worker 0:  Sort Method: quicksort  Memory: 195kB
                                 Worker 1:  Sort Method: quicksort  Memory: 191kB
                                 Worker 2:  Sort Method: quicksort  Memory: 199kB
                                 ->  Hash Join  (cost=7981.89..70835.85 rows=2377 width=38) (actual time=52.148..753.014 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7508.89..70050.86 rows=59427 width=50) (actual time=48.266..737.811 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7508.46..35093.89 rows=14854 width=38) (actual time=47.792..526.044 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2768.33..30013.36 rows=74269 width=8) (actual time=20.150..474.496 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6720
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2710.77 rows=230234 width=0) (actual time=16.082..16.082 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=27.494..27.497 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2400kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.210..25.192 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.083..20.484 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.120..0.122 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.112..0.119 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.051..0.053 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.054..0.054 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.051..0.052 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.017..0.018 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.726..3.727 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.110..2.308 rows=10000 loops=4)
 Planning Time: 31.921 ms
 Execution Time: 771.209 ms
(50 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=72009.02..72009.02 rows=1 width=58) (actual time=127.067..137.617 rows=1 loops=1)
   ->  Sort  (cost=72009.02..72009.08 rows=25 width=58) (actual time=127.066..137.615 rows=1 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize GroupAggregate  (cost=71969.18..72008.90 rows=25 width=58) (actual time=126.365..137.604 rows=5 loops=1)
               Group Key: nation.n_name
               ->  Gather Merge  (cost=71969.18..72008.02 rows=75 width=58) (actual time=126.172..137.581 rows=20 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Partial GroupAggregate  (cost=70969.14..70999.17 rows=25 width=58) (actual time=122.381..123.078 rows=5 loops=4)
                           Group Key: nation.n_name
                           ->  Sort  (cost=70969.14..70975.09 rows=2377 width=38) (actual time=122.197..122.280 rows=1885 loops=4)
                                 Sort Key: nation.n_name
                                 Sort Method: quicksort  Memory: 199kB
                                 Worker 0:  Sort Method: quicksort  Memory: 191kB
                                 Worker 1:  Sort Method: quicksort  Memory: 195kB
                                 Worker 2:  Sort Method: quicksort  Memory: 198kB
                                 ->  Hash Join  (cost=7981.89..70835.85 rows=2377 width=38) (actual time=31.316..121.451 rows=1885 loops=4)
                                       Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                       ->  Nested Loop  (cost=7508.89..70050.86 rows=59427 width=50) (actual time=28.373..111.018 rows=45609 loops=4)
                                             ->  Parallel Hash Join  (cost=7508.46..35093.89 rows=14854 width=38) (actual time=28.340..66.867 rows=11324 loops=4)
                                                   Hash Cond: (orders.o_custkey = customer.c_custkey)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2768.33..30013.36 rows=74269 width=8) (actual time=16.797..41.853 rows=56661 loops=4)
                                                         Recheck Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                         Heap Blocks: exact=6596
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2710.77 rows=230234 width=0) (actual time=12.689..12.689 rows=226645 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate < '1994-01-01'::date))
                                                   ->  Parallel Hash  (cost=4583.88..4583.88 rows=12500 width=38) (actual time=11.429..11.431 rows=7488 loops=4)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 2464kB
                                                         ->  Hash Join  (cost=2.51..4583.88 rows=12500 width=38) (actual time=0.046..9.456 rows=7488 loops=4)
                                                               Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                               ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=8) (actual time=0.008..3.469 rows=37500 loops=4)
                                                               ->  Hash  (cost=2.45..2.45 rows=5 width=30) (actual time=0.030..0.032 rows=5 loops=4)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=30) (actual time=0.024..0.030 rows=5 loops=4)
                                                                           Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.008..0.010 rows=25 loops=4)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=4)
                                                                                 Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=4)
                                                                                       Filter: (r_name = 'AMERICA'::bpchar)
                                                                                       Rows Removed by Filter: 4
                                             ->  Index Only Scan using q5_idx_1 on lineitem  (cost=0.43..2.31 rows=4 width=20) (actual time=0.003..0.003 rows=4 loops=45297)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Heap Fetches: 0
                                       ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.821..2.821 rows=10000 loops=4)
                                             Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                             ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.032..1.484 rows=10000 loops=4)
 Planning Time: 4.688 ms
 Execution Time: 137.703 ms
(50 rows)

query 6 run 1
SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114921.37..114921.38 rows=1 width=32) (actual time=1077.566..1083.033 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=114921.37..114921.38 rows=1 width=32) (actual time=1077.565..1083.031 rows=1 loops=1)
         ->  Gather  (cost=114920.93..114921.34 rows=4 width=32) (actual time=1074.908..1083.013 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=113920.93..113920.94 rows=1 width=32) (actual time=1066.270..1066.271 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22483.64..113773.45 rows=29496 width=12) (actual time=136.139..1048.337 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=12898
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22454.14 rows=117982 width=0) (actual time=131.880..131.881 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 18.099 ms
 Execution Time: 1084.177 ms
(13 rows)

SET
SET
SET
                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=114921.37..114921.38 rows=1 width=32) (actual time=204.242..208.836 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=114921.37..114921.38 rows=1 width=32) (actual time=204.241..208.834 rows=1 loops=1)
         ->  Gather  (cost=114920.93..114921.34 rows=4 width=32) (actual time=199.960..208.815 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=113920.93..113920.94 rows=1 width=32) (actual time=196.476..196.478 rows=1 loops=5)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=22483.64..113773.45 rows=29496 width=12) (actual time=111.891..186.641 rows=23842 loops=5)
                           Recheck Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
                           Heap Blocks: exact=13240
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..22454.14 rows=117982 width=0) (actual time=103.000..103.000 rows=119208 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate < '1994-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.06) AND (l_discount <= 0.08) AND (l_quantity < '25'::numeric))
 Planning Time: 0.989 ms
 Execution Time: 208.888 ms
(13 rows)

query 7 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141399.44..141558.05 rows=1 width=92) (actual time=2562.083..2563.267 rows=1 loops=1)
   ->  GroupAggregate  (cost=141399.44..1100204.95 rows=6045 width=92) (actual time=2562.082..2563.265 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141399.44..1100008.49 rows=6045 width=72) (actual time=862.509..2561.005 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32675
               ->  Nested Loop  (cost=141399.02..763703.02 rows=151120 width=76) (actual time=851.514..2170.476 rows=34034 loops=1)
                     ->  Gather Merge  (cost=141398.59..159492.89 rows=151120 width=76) (actual time=850.678..875.611 rows=34034 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140398.53..140492.98 rows=37780 width=76) (actual time=840.471..841.412 rows=7177 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 4960kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4789kB
                                 Worker 1:  Sort Method: quicksort  Memory: 4522kB
                                 Worker 2:  Sort Method: quicksort  Memory: 5195kB
                                 Worker 3:  Sort Method: quicksort  Memory: 4728kB
                                 ->  Hash Join  (cost=381.77..137526.25 rows=37780 width=76) (actual time=3.673..819.208 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.64 rows=453913 width=24) (actual time=0.097..763.408 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.292..3.295 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.210..3.103 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.123..1.793 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.071..0.073 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.062..0.068 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.047..0.048 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.006..0.007 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.006..0.009 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.037..0.037 rows=1 loops=34034)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.011..0.011 rows=1 loops=34034)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 30.493 ms
 Execution Time: 2564.300 ms
(46 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=141399.44..141558.05 rows=1 width=92) (actual time=513.982..515.129 rows=1 loops=1)
   ->  GroupAggregate  (cost=141399.44..1100204.95 rows=6045 width=92) (actual time=513.981..515.127 rows=1 loops=1)
         Group Key: n1.n_name, n2.n_name, date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone)
         ->  Nested Loop  (cost=141399.44..1100008.49 rows=6045 width=72) (actual time=345.947..514.021 rows=1359 loops=1)
               Join Filter: (n2.n_nationkey = customer.c_nationkey)
               Rows Removed by Join Filter: 32717
               ->  Nested Loop  (cost=141399.02..763703.02 rows=151120 width=76) (actual time=345.492..445.699 rows=34076 loops=1)
                     ->  Gather Merge  (cost=141398.59..159492.89 rows=151120 width=76) (actual time=345.448..360.329 rows=34076 loops=1)
                           Workers Planned: 4
                           Workers Launched: 4
                           ->  Sort  (cost=140398.53..140492.98 rows=37780 width=76) (actual time=336.314..337.021 rows=7217 loops=5)
                                 Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                                 Sort Method: quicksort  Memory: 4630kB
                                 Worker 0:  Sort Method: quicksort  Memory: 4550kB
                                 Worker 1:  Sort Method: quicksort  Memory: 6473kB
                                 Worker 2:  Sort Method: quicksort  Memory: 5341kB
                                 Worker 3:  Sort Method: quicksort  Memory: 3967kB
                                 ->  Hash Join  (cost=381.77..137526.25 rows=37780 width=76) (actual time=3.242..315.215 rows=28944 loops=5)
                                       Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                       ->  Parallel Seq Scan on lineitem  (cost=0.00..135064.64 rows=453913 width=24) (actual time=0.037..260.060 rows=365690 loops=5)
                                             Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             Rows Removed by Filter: 834553
                                       ->  Hash  (cost=371.37..371.37 rows=832 width=60) (actual time=3.093..3.098 rows=794 loops=5)
                                             Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                             ->  Hash Join  (cost=2.87..371.37 rows=832 width=60) (actual time=0.065..2.912 rows=794 loops=5)
                                                   Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                                   ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..0.696 rows=10000 loops=5)
                                                   ->  Hash  (cost=2.84..2.84 rows=2 width=60) (actual time=0.039..0.041 rows=2 loops=5)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Nested Loop  (cost=0.00..2.84 rows=2 width=60) (actual time=0.027..0.033 rows=2 loops=5)
                                                               Join Filter: (((n1.n_name = 'PERU'::bpchar) AND (n2.n_name = 'MOROCCO'::bpchar)) OR ((n1.n_name = 'MOROCCO'::bpchar) AND (n2.n_name = 'PERU'::bpchar)))
                                                               Rows Removed by Join Filter: 2
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=30) (actual time=0.010..0.011 rows=2 loops=5)
                                                                     Filter: ((n_name = 'PERU'::bpchar) OR (n_name = 'MOROCCO'::bpchar))
                                                                     Rows Removed by Filter: 23
                                                               ->  Materialize  (cost=0.00..1.39 rows=2 width=30) (actual time=0.007..0.008 rows=2 loops=10)
                                                                     ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=30) (actual time=0.005..0.007 rows=2 loops=5)
                                                                           Filter: ((n_name = 'MOROCCO'::bpchar) OR (n_name = 'PERU'::bpchar))
                                                                           Rows Removed by Filter: 23
                     ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34076)
                           Index Cond: (o_orderkey = lineitem.l_orderkey)
               ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.21 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=34076)
                     Index Cond: (c_custkey = orders.o_custkey)
                     Heap Fetches: 0
 Planning Time: 3.799 ms
 Execution Time: 515.262 ms
(46 rows)

query 8 run 1
SET
SET
SET
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41790.02..41804.85 rows=1 width=40) (actual time=635.198..639.330 rows=1 loops=1)
   ->  GroupAggregate  (cost=41790.02..77474.83 rows=2406 width=40) (actual time=635.196..639.328 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=41790.02..77371.61 rows=2454 width=46) (actual time=300.003..637.634 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14791
               ->  Nested Loop  (cost=41790.02..76471.70 rows=2454 width=20) (actual time=299.994..634.579 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41789.73..71389.66 rows=2454 width=20) (actual time=299.973..619.444 rows=1235 loops=1)
                           Join Filter: (n1.n_nationkey = customer.c_nationkey)
                           Rows Removed by Join Filter: 29223
                           ->  Nested Loop  (cost=41788.66..70467.03 rows=12269 width=24) (actual time=298.057..612.152 rows=6092 loops=1)
                                 ->  Gather Merge  (cost=41788.24..43239.74 rows=12269 width=24) (actual time=297.498..304.521 rows=6092 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40788.20..40798.09 rows=3958 width=24) (actual time=290.701..290.893 rows=2123 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 321kB
                                             Worker 0:  Sort Method: quicksort  Memory: 333kB
                                             Worker 1:  Sort Method: quicksort  Memory: 343kB
                                             Worker 2:  Sort Method: quicksort  Memory: 334kB
                                             ->  Parallel Hash Join  (cost=6594.50..40551.70 rows=3958 width=24) (actual time=113.934..289.394 rows=3024 loops=4)
                                                   Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148865 width=12) (actual time=0.296..153.521 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=6469.87..6469.87 rows=9970 width=20) (actual time=113.011..113.012 rows=9924 loops=4)
                                                         Buckets: 65536  Batches: 1  Memory Usage: 2752kB
                                                         ->  Nested Loop  (cost=0.85..6469.87 rows=9970 width=20) (actual time=0.715..109.002 rows=9924 loops=4)
                                                               ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.74 rows=332 width=4) (actual time=0.271..14.835 rows=330 loops=4)
                                                                     Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                     Heap Fetches: 0
                                                               ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.228..0.281 rows=30 loops=1320)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                 ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.050..0.050 rows=1 loops=6092)
                                       Index Cond: (c_custkey = orders.o_custkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=1.07..2.47 rows=5 width=4) (actual time=0.000..0.000 rows=5 loops=6092)
                                 ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.642..0.648 rows=5 loops=1)
                                       Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                       ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.314..0.316 rows=25 loops=1)
                                       ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.317..0.318 rows=1 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.314..0.315 rows=1 loops=1)
                                                   Filter: (r_name = 'AMERICA'::bpchar)
                                                   Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.001 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.009 rows=25 loops=1)
 Planning Time: 33.916 ms
 Execution Time: 639.426 ms
(53 rows)

SET
SET
SET
                                                                                              QUERY PLAN                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41790.02..41804.85 rows=1 width=40) (actual time=115.326..122.230 rows=1 loops=1)
   ->  GroupAggregate  (cost=41790.02..77474.83 rows=2406 width=40) (actual time=115.325..122.228 rows=1 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=41790.02..77371.61 rows=2454 width=46) (actual time=92.086..121.411 rows=1235 loops=1)
               Join Filter: (supplier.s_nationkey = n2.n_nationkey)
               Rows Removed by Join Filter: 14807
               ->  Nested Loop  (cost=41790.02..76471.70 rows=2454 width=20) (actual time=92.074..119.394 rows=1235 loops=1)
                     ->  Nested Loop  (cost=41789.73..71389.66 rows=2454 width=20) (actual time=92.061..117.315 rows=1235 loops=1)
                           Join Filter: (n1.n_nationkey = customer.c_nationkey)
                           Rows Removed by Join Filter: 29239
                           ->  Nested Loop  (cost=41788.66..70467.03 rows=12269 width=24) (actual time=92.003..113.307 rows=6095 loops=1)
                                 ->  Gather Merge  (cost=41788.24..43239.74 rows=12269 width=24) (actual time=91.971..100.414 rows=6095 loops=1)
                                       Workers Planned: 3
                                       Workers Launched: 3
                                       ->  Sort  (cost=40788.20..40798.09 rows=3958 width=24) (actual time=88.972..89.104 rows=2130 loops=4)
                                             Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                                             Sort Method: quicksort  Memory: 334kB
                                             Worker 0:  Sort Method: quicksort  Memory: 335kB
                                             Worker 1:  Sort Method: quicksort  Memory: 336kB
                                             Worker 2:  Sort Method: quicksort  Memory: 326kB
                                             ->  Parallel Hash Join  (cost=6594.50..40551.70 rows=3958 width=24) (actual time=11.658..88.123 rows=3024 loops=4)
                                                   Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..33389.06 rows=148865 width=12) (actual time=0.008..59.561 rows=114316 loops=4)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 260684
                                                   ->  Parallel Hash  (cost=6469.87..6469.87 rows=9970 width=20) (actual time=11.409..11.411 rows=9924 loops=4)
                                                         Buckets: 65536  Batches: 1  Memory Usage: 2720kB
                                                         ->  Nested Loop  (cost=0.85..6469.87 rows=9970 width=20) (actual time=0.150..8.906 rows=9924 loops=4)
                                                               ->  Parallel Index Only Scan using q2_idx_1 on part  (cost=0.42..5391.74 rows=332 width=4) (actual time=0.129..4.892 rows=330 loops=4)
                                                                     Index Cond: (p_type = 'LARGE POLISHED BRASS'::text)
                                                                     Heap Fetches: 0
                                                               ->  Index Only Scan using q8_idx_1 on lineitem  (cost=0.43..2.94 rows=31 width=24) (actual time=0.005..0.009 rows=30 loops=1320)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                                     Heap Fetches: 0
                                 ->  Index Only Scan using q10_idx_1 on customer  (cost=0.42..2.22 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=6095)
                                       Index Cond: (c_custkey = orders.o_custkey)
                                       Heap Fetches: 0
                           ->  Materialize  (cost=1.07..2.47 rows=5 width=4) (actual time=0.000..0.000 rows=5 loops=6095)
                                 ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.024..0.031 rows=5 loops=1)
                                       Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                       ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.010 rows=25 loops=1)
                                       ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.004..0.005 rows=1 loops=1)
                                                   Filter: (r_name = 'AMERICA'::bpchar)
                                                   Rows Removed by Filter: 4
                     ->  Index Only Scan using q2_idx_3 on supplier  (cost=0.29..2.07 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=1235)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Heap Fetches: 0
               ->  Materialize  (cost=0.00..1.38 rows=25 width=30) (actual time=0.000..0.000 rows=13 loops=1235)
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.002..0.005 rows=25 loops=1)
 Planning Time: 4.556 ms
 Execution Time: 122.310 ms
(53 rows)

query 9 run 1
SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55226.95..55236.64 rows=1 width=66) (actual time=1119.111..1124.974 rows=1 loops=1)
   ->  GroupAggregate  (cost=55226.95..637648.60 rows=60150 width=66) (actual time=1119.109..1124.971 rows=1 loops=1)
         Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=55226.95..632352.58 rows=242480 width=57) (actual time=986.153..1122.302 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=55226.53..83913.48 rows=242480 width=63) (actual time=985.357..992.558 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=54226.49..54422.04 rows=78219 width=63) (actual time=974.333..974.438 rows=702 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14718kB
                           Worker 0:  Sort Method: quicksort  Memory: 14571kB
                           Worker 1:  Sort Method: quicksort  Memory: 14353kB
                           Worker 2:  Sort Method: quicksort  Memory: 14482kB
                           ->  Hash Join  (cost=14592.52..47869.15 rows=78219 width=63) (actual time=576.761..871.434 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=14590.96..47627.45 rows=78219 width=41) (actual time=576.578..843.036 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.265..151.498 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=13613.22..13613.22 rows=78219 width=41) (actual time=575.911..575.914 rows=81482 loops=4)
                                             Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 31648kB
                                             ->  Hash Join  (cost=448.85..13613.22 rows=78219 width=41) (actual time=4.130..536.672 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..12959.80 rows=78219 width=33) (actual time=0.607..510.049 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=2607 width=4) (actual time=0.173..21.373 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.84 rows=31 width=29) (actual time=0.151..0.176 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=3.508..3.509 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.099..2.224 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.082..0.083 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.070..0.074 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.105..0.105 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 34.985 ms
 Execution Time: 1125.791 ms
(42 rows)

SET
SET
SET
                                                                                             QUERY PLAN                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=55226.95..55236.64 rows=1 width=66) (actual time=394.690..403.252 rows=1 loops=1)
   ->  GroupAggregate  (cost=55226.95..637648.60 rows=60150 width=66) (actual time=394.688..403.250 rows=1 loops=1)
         Group Key: nation.n_name, date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         ->  Nested Loop  (cost=55226.95..632352.58 rows=242480 width=57) (actual time=389.874..402.277 rows=1210 loops=1)
               Join Filter: (supplier.s_suppkey = partsupp.ps_suppkey)
               ->  Gather Merge  (cost=55226.53..83913.48 rows=242480 width=63) (actual time=389.832..398.837 rows=1210 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Sort  (cost=54226.49..54422.04 rows=78219 width=63) (actual time=385.131..385.248 rows=718 loops=4)
                           Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                           Sort Method: quicksort  Memory: 14569kB
                           Worker 0:  Sort Method: quicksort  Memory: 14507kB
                           Worker 1:  Sort Method: quicksort  Memory: 14528kB
                           Worker 2:  Sort Method: quicksort  Memory: 14520kB
                           ->  Hash Join  (cost=14592.52..47869.15 rows=78219 width=63) (actual time=110.002..285.989 rows=81482 loops=4)
                                 Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=14590.96..47627.45 rows=78219 width=41) (actual time=109.866..259.774 rows=81482 loops=4)
                                       Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..30969.71 rows=483871 width=8) (actual time=0.006..32.369 rows=375000 loops=4)
                                       ->  Parallel Hash  (cost=13613.22..13613.22 rows=78219 width=41) (actual time=109.412..109.415 rows=81482 loops=4)
                                             Buckets: 524288 (originally 262144)  Batches: 1 (originally 1)  Memory Usage: 31648kB
                                             ->  Hash Join  (cost=448.85..13613.22 rows=78219 width=41) (actual time=2.800..70.566 rows=81482 loops=4)
                                                   Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.85..12959.80 rows=78219 width=33) (actual time=0.070..47.881 rows=81482 loops=4)
                                                         ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=2607 width=4) (actual time=0.048..10.934 rows=2720 loops=4)
                                                               Filter: ((p_name)::text ~~ '%navy%'::text)
                                                               Rows Removed by Filter: 47280
                                                               Heap Fetches: 0
                                                         ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.84 rows=31 width=29) (actual time=0.004..0.010 rows=30 loops=10880)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                               Heap Fetches: 0
                                                   ->  Hash  (cost=323.00..323.00 rows=10000 width=8) (actual time=2.717..2.718 rows=10000 loops=4)
                                                         Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                                         ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=8) (actual time=0.011..1.450 rows=10000 loops=4)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.036..0.036 rows=25 loops=4)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.023..0.027 rows=25 loops=4)
               ->  Index Only Scan using q2_idx_2 on partsupp  (cost=0.42..2.24 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=1210)
                     Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                     Heap Fetches: 0
 Planning Time: 5.707 ms
 Execution Time: 403.557 ms
(42 rows)

query 10 run 1
SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83772.57..83772.62 rows=20 width=202) (actual time=735.398..739.754 rows=20 loops=1)
   ->  Sort  (cost=83772.57..83913.11 rows=56214 width=202) (actual time=735.397..739.751 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=81574.07..82276.74 rows=56214 width=202) (actual time=704.445..728.233 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6694.46..80871.39 rows=56214 width=182) (actual time=60.175..604.461 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5694.46..74249.99 rows=18134 width=182) (actual time=52.999..649.901 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5692.90..74192.76 rows=18134 width=160) (actual time=52.856..641.671 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=689.65..69141.91 rows=18134 width=16) (actual time=13.758..584.642 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=689.22..27097.23 rows=18467 width=8) (actual time=12.815..357.402 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=4321
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..674.91 rows=57248 width=0) (actual time=9.085..9.086 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.014..0.015 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=38.655..38.655 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29312kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.071..18.284 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.070..0.071 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.061..0.063 rows=25 loops=4)
 Planning Time: 25.248 ms
 Execution Time: 740.147 ms
(31 rows)

SET
SET
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=83772.57..83772.62 rows=20 width=202) (actual time=204.595..208.802 rows=20 loops=1)
   ->  Sort  (cost=83772.57..83913.11 rows=56214 width=202) (actual time=204.594..208.798 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
         Sort Method: top-N heapsort  Memory: 33kB
         ->  HashAggregate  (cost=81574.07..82276.74 rows=56214 width=202) (actual time=173.269..197.087 rows=38076 loops=1)
               Group Key: customer.c_custkey, nation.n_name
               Batches: 1  Memory Usage: 22033kB
               ->  Gather  (cost=6694.46..80871.39 rows=56214 width=182) (actual time=42.548..92.201 rows=114347 loops=1)
                     Workers Planned: 3
                     Workers Launched: 3
                     ->  Hash Join  (cost=5694.46..74249.99 rows=18134 width=182) (actual time=39.525..129.246 rows=28587 loops=4)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=5692.90..74192.76 rows=18134 width=160) (actual time=39.434..122.914 rows=28587 loops=4)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Nested Loop  (cost=689.65..69141.91 rows=18134 width=16) (actual time=10.858..81.364 rows=28587 loops=4)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=689.22..27097.23 rows=18467 width=8) (actual time=10.791..26.230 rows=14278 loops=4)
                                             Recheck Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                             Heap Blocks: exact=1246
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..674.91 rows=57248 width=0) (actual time=7.271..7.271 rows=57111 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-08-01'::date) AND (o_orderdate < '1994-11-01'::date))
                                       ->  Index Only Scan using q10_idx_2 on lineitem  (cost=0.43..2.27 rows=1 width=16) (actual time=0.003..0.003 rows=2 loops=57111)
                                             Index Cond: ((l_orderkey = orders.o_orderkey) AND (l_returnflag = 'R'::bpchar))
                                             Heap Fetches: 0
                                 ->  Parallel Hash  (cost=4222.00..4222.00 rows=62500 width=148) (actual time=28.127..28.127 rows=37500 loops=4)
                                       Buckets: 262144  Batches: 1  Memory Usage: 29344kB
                                       ->  Parallel Seq Scan on customer  (cost=0.00..4222.00 rows=62500 width=148) (actual time=0.005..7.960 rows=37500 loops=4)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.018..0.019 rows=25 loops=4)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.010..0.013 rows=25 loops=4)
 Planning Time: 2.360 ms
 Execution Time: 209.196 ms
(31 rows)

query 11 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17213.59..17213.60 rows=1 width=36) (actual time=605.822..605.950 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=7100.15..7100.17 rows=1 width=32) (actual time=19.901..19.990 rows=1 loops=1)
           ->  Gather  (cost=7100.04..7100.15 rows=1 width=32) (actual time=19.801..19.982 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6100.04..6100.05 rows=1 width=32) (actual time=17.880..17.883 rows=1 loops=2)
                       ->  Nested Loop  (cost=2.04..5958.85 rows=18824 width=10) (actual time=0.094..13.961 rows=16440 loops=2)
                             ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.082..1.287 rows=206 loops=2)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.021..0.877 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=2)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.053 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10113.43..10140.10 rows=10667 width=36) (actual time=605.821..605.859 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9500.09..10060.09 rows=10667 width=36) (actual time=596.078..605.713 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7147.09..9264.79 rows=18824 width=36) (actual time=548.823..558.980 rows=31890 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6147.09..6382.39 rows=18824 width=36) (actual time=544.470..551.954 rows=15945 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 6929kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=2.04..5958.85 rows=18824 width=14) (actual time=0.889..528.408 rows=16440 loops=2)
                                 ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.222..2.396 rows=206 loops=2)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.080..1.732 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.118..0.119 rows=1 loops=2)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.114..0.115 rows=1 loops=2)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.069..2.540 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 14.474 ms
 Execution Time: 606.856 ms
(48 rows)

SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=17213.59..17213.60 rows=1 width=36) (actual time=85.152..85.281 rows=1 loops=1)
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=7100.15..7100.17 rows=1 width=32) (actual time=19.219..19.309 rows=1 loops=1)
           ->  Gather  (cost=7100.04..7100.15 rows=1 width=32) (actual time=19.053..19.298 rows=2 loops=1)
                 Workers Planned: 1
                 Workers Launched: 1
                 ->  Partial Aggregate  (cost=6100.04..6100.05 rows=1 width=32) (actual time=17.185..17.188 rows=1 loops=2)
                       ->  Nested Loop  (cost=2.04..5958.85 rows=18824 width=10) (actual time=0.096..13.303 rows=16440 loops=2)
                             ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.084..1.246 rows=206 loops=2)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Index Only Scan using q2_idx_3 on supplier supplier_1  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.022..0.843 rows=5000 loops=2)
                                         Heap Fetches: 0
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.016..0.017 rows=1 loops=2)
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=2)
                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                               Rows Removed by Filter: 24
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..22.39 rows=80 width=14) (actual time=0.003..0.050 rows=80 loops=411)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  Sort  (cost=10113.43..10140.10 rows=10667 width=36) (actual time=85.150..85.189 rows=1 loops=1)
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Finalize HashAggregate  (cost=9500.09..10060.09 rows=10667 width=36) (actual time=75.356..85.045 rows=839 loops=1)
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Batches: 1  Memory Usage: 11793kB
               Rows Removed by Filter: 30007
               ->  Gather  (cost=7147.09..9264.79 rows=18824 width=36) (actual time=28.189..38.876 rows=31834 loops=1)
                     Workers Planned: 1
                     Workers Launched: 1
                     ->  Partial HashAggregate  (cost=6147.09..6382.39 rows=18824 width=36) (actual time=26.365..33.687 rows=15917 loops=2)
                           Group Key: partsupp.ps_partkey
                           Batches: 1  Memory Usage: 6929kB
                           Worker 0:  Batches: 1  Memory Usage: 6929kB
                           ->  Nested Loop  (cost=2.04..5958.85 rows=18824 width=14) (actual time=0.055..17.196 rows=16440 loops=2)
                                 ->  Hash Join  (cost=1.61..508.49 rows=235 width=4) (actual time=0.044..1.295 rows=206 loops=2)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Parallel Index Only Scan using q2_idx_3 on supplier  (cost=0.29..489.11 rows=5882 width=8) (actual time=0.013..0.901 rows=5000 loops=2)
                                             Heap Fetches: 0
                                       ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.014..0.015 rows=1 loops=2)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=2)
                                                   Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                   Rows Removed by Filter: 24
                                 ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..22.39 rows=80 width=18) (actual time=0.003..0.068 rows=80 loops=411)
                                       Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 1.194 ms
 Execution Time: 85.709 ms
(48 rows)

query 12 run 1
SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14953.99..31742.88 rows=1 width=27) (actual time=1115.545..1116.867 rows=1 loops=1)
   ->  GroupAggregate  (cost=14953.99..132476.26 rows=7 width=27) (actual time=1115.543..1116.865 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=14953.99..131979.15 rows=28402 width=27) (actual time=67.875..1105.301 rows=15492 loops=1)
               ->  Gather Merge  (cost=14953.56..18354.26 rows=28402 width=15) (actual time=67.246..77.660 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=13953.50..13971.25 rows=7100 width=15) (actual time=57.187..57.569 rows=3981 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 779kB
                           Worker 0:  Sort Method: quicksort  Memory: 459kB
                           Worker 1:  Sort Method: quicksort  Memory: 444kB
                           Worker 2:  Sort Method: quicksort  Memory: 473kB
                           Worker 3:  Sort Method: quicksort  Memory: 451kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13499.33 rows=7100 width=15) (actual time=0.370..55.971 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.065..0.065 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 19.909 ms
 Execution Time: 1116.945 ms
(23 rows)

SET
SET
SET
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=14953.99..31742.88 rows=1 width=27) (actual time=74.074..75.519 rows=1 loops=1)
   ->  GroupAggregate  (cost=14953.99..132476.26 rows=7 width=27) (actual time=74.072..75.517 rows=1 loops=1)
         Group Key: lineitem.l_shipmode
         ->  Nested Loop  (cost=14953.99..131979.15 rows=28402 width=27) (actual time=25.701..71.417 rows=15492 loops=1)
               ->  Gather Merge  (cost=14953.56..18354.26 rows=28402 width=15) (actual time=25.672..30.829 rows=15492 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=13953.50..13971.25 rows=7100 width=15) (actual time=21.941..22.175 rows=4046 loops=5)
                           Sort Key: lineitem.l_shipmode
                           Sort Method: quicksort  Memory: 553kB
                           Worker 0:  Sort Method: quicksort  Memory: 464kB
                           Worker 1:  Sort Method: quicksort  Memory: 467kB
                           Worker 2:  Sort Method: quicksort  Memory: 503kB
                           Worker 3:  Sort Method: quicksort  Memory: 427kB
                           ->  Parallel Index Only Scan using q12_idx_1 on lineitem  (cost=0.42..13499.33 rows=7100 width=15) (actual time=0.161..20.931 rows=6191 loops=5)
                                 Index Cond: ((l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01'::date))
                                 Filter: (l_shipmode = ANY ('{SHIP,"REG AIR"}'::bpchar[]))
                                 Rows Removed by Filter: 15496
                                 Heap Fetches: 0
               ->  Index Scan using q21_idx_3 on orders  (cost=0.43..4.00 rows=1 width=20) (actual time=0.002..0.002 rows=1 loops=15492)
                     Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 1.530 ms
 Execution Time: 75.573 ms
(23 rows)

query 13 run 1
SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1451.396..1451.399 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1451.395..1451.397 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1451.370..1451.377 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1411.535..1434.645 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=35.900..1060.433 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.352..627.914 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=35.186..35.187 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.333..17.136 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 13.677 ms
 Execution Time: 1452.569 ms
(21 rows)

SET
SET
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=65023.89..65023.89 rows=1 width=16) (actual time=1257.546..1257.549 rows=1 loops=1)
   ->  Sort  (cost=65023.89..65024.39 rows=200 width=16) (actual time=1257.545..1257.547 rows=1 loops=1)
         Sort Key: (count(*)) DESC, (count(orders.o_orderkey)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         ->  HashAggregate  (cost=65020.89..65022.89 rows=200 width=16) (actual time=1257.520..1257.527 rows=42 loops=1)
               Group Key: count(orders.o_orderkey)
               Batches: 1  Memory Usage: 40kB
               ->  HashAggregate  (cost=61270.89..62770.89 rows=150000 width=12) (actual time=1217.793..1240.870 rows=150000 loops=1)
                     Group Key: customer.c_custkey
                     Batches: 1  Memory Usage: 18449kB
                     ->  Hash Right Join  (cost=4953.42..53771.64 rows=1499850 width=8) (actual time=30.650..880.609 rows=1533923 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           ->  Seq Scan on orders  (cost=0.00..44881.00 rows=1499850 width=8) (actual time=0.012..475.098 rows=1483918 loops=1)
                                 Filter: ((o_comment)::text !~~ '%special%requests%'::text)
                                 Rows Removed by Filter: 16082
                           ->  Hash  (cost=3078.42..3078.42 rows=150000 width=4) (actual time=30.210..30.211 rows=150000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 7322kB
                                 ->  Index Only Scan using customer_pkey on customer  (cost=0.42..3078.42 rows=150000 width=4) (actual time=0.015..13.445 rows=150000 loops=1)
                                       Heap Fetches: 0
 Planning Time: 0.840 ms
 Execution Time: 1258.685 ms
(21 rows)

query 14 run 1
SET
SET
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87868.77..87868.78 rows=1 width=32) (actual time=533.049..538.537 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=87868.77..87868.78 rows=1 width=32) (actual time=533.048..538.535 rows=1 loops=1)
         ->  Gather  (cost=87868.31..87868.72 rows=4 width=64) (actual time=530.590..538.484 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=86868.31..86868.32 rows=1 width=64) (actual time=522.691..522.694 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7534.46..86488.42 rows=21708 width=33) (actual time=56.791..506.955 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1560.46..80457.44 rows=21708 width=16) (actual time=22.246..456.594 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8320
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1538.75 rows=86832 width=0) (actual time=14.355..14.355 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=34.082..34.082 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14240kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.093..20.660 rows=40000 loops=5)
 Planning Time: 20.797 ms
 Execution Time: 538.597 ms
(18 rows)

SET
SET
SET
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=87868.77..87868.78 rows=1 width=32) (actual time=111.731..117.390 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=87868.77..87868.78 rows=1 width=32) (actual time=111.729..117.387 rows=1 loops=1)
         ->  Gather  (cost=87868.31..87868.72 rows=4 width=64) (actual time=108.365..117.364 rows=5 loops=1)
               Workers Planned: 4
               Workers Launched: 4
               ->  Partial Aggregate  (cost=86868.31..86868.32 rows=1 width=64) (actual time=104.045..104.049 rows=1 loops=5)
                     ->  Parallel Hash Join  (cost=7534.46..86488.42 rows=21708 width=33) (actual time=40.180..95.576 rows=15463 loops=5)
                           Hash Cond: (lineitem.l_partkey = part.p_partkey)
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1560.46..80457.44 rows=21708 width=16) (actual time=15.587..63.405 rows=15463 loops=5)
                                 Recheck Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                                 Heap Blocks: exact=8049
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1538.75 rows=86832 width=0) (actual time=8.673..8.674 rows=77317 loops=1)
                                       Index Cond: ((l_shipdate >= '1994-05-01'::date) AND (l_shipdate < '1994-06-01'::date))
                           ->  Parallel Hash  (cost=4932.33..4932.33 rows=83333 width=25) (actual time=24.179..24.180 rows=40000 loops=5)
                                 Buckets: 262144  Batches: 1  Memory Usage: 14208kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..4932.33 rows=83333 width=25) (actual time=0.009..7.998 rows=40000 loops=5)
 Planning Time: 1.395 ms
 Execution Time: 117.430 ms
(18 rows)

query 15 run 1
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242136.42..242248.27 rows=1 width=103) (actual time=1264.721..1272.406 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122406.48..122406.49 rows=1 width=32) (actual time=227.528..227.529 rows=1 loops=1)
           ->  HashAggregate  (cost=122158.01..122282.25 rows=9939 width=36) (actual time=224.337..226.952 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4037.30..119911.31 rows=224670 width=16) (actual time=27.562..116.346 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3981.13 rows=224670 width=0) (actual time=18.596..18.597 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119729.93..125322.32 rows=50 width=103) (actual time=1264.719..1272.402 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119729.64..125160.69 rows=50 width=36) (actual time=1264.016..1271.697 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119729.64..124489.81 rows=39756 width=36) (actual time=1007.997..1023.532 rows=41767 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118729.58..118754.43 rows=9939 width=36) (actual time=997.914..998.732 rows=8890 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1159kB
                           Worker 0:  Sort Method: quicksort  Memory: 1155kB
                           Worker 1:  Sort Method: quicksort  Memory: 1156kB
                           Worker 2:  Sort Method: quicksort  Memory: 1156kB
                           Worker 3:  Sort Method: quicksort  Memory: 1157kB
                           ->  Partial HashAggregate  (cost=117945.45..118069.69 rows=9939 width=36) (actual time=988.888..994.961 rows=9886 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4037.30..117383.77 rows=56168 width=16) (actual time=43.288..937.677 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=13661
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3981.13 rows=224670 width=0) (actual time=38.097..38.097 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.698..0.698 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 19.631 ms
 Execution Time: 1273.512 ms
(42 rows)

DROP VIEW
SET
SET
SET
CREATE VIEW
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=242136.42..242248.27 rows=1 width=103) (actual time=408.124..417.618 rows=1 loops=1)
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=122406.48..122406.49 rows=1 width=32) (actual time=212.533..212.534 rows=1 loops=1)
           ->  HashAggregate  (cost=122158.01..122282.25 rows=9939 width=36) (actual time=209.384..211.960 rows=10000 loops=1)
                 Group Key: lineitem_1.l_suppkey
                 Batches: 1  Memory Usage: 4497kB
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4037.30..119911.31 rows=224670 width=16) (actual time=27.533..102.687 rows=225954 loops=1)
                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                       Heap Blocks: exact=66828
                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3981.13 rows=224670 width=0) (actual time=18.532..18.532 rows=225954 loops=1)
                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
   ->  Nested Loop  (cost=119729.93..125322.32 rows=50 width=103) (actual time=408.123..417.614 rows=1 loops=1)
         ->  Finalize GroupAggregate  (cost=119729.64..125160.69 rows=50 width=36) (actual time=408.093..417.583 rows=1 loops=1)
               Group Key: lineitem.l_suppkey
               Filter: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount))) = $0)
               Rows Removed by Filter: 8448
               ->  Gather Merge  (cost=119729.64..124489.81 rows=39756 width=36) (actual time=167.683..184.883 rows=41686 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=118729.58..118754.43 rows=9939 width=36) (actual time=158.902..159.705 rows=8869 loops=5)
                           Sort Key: lineitem.l_suppkey
                           Sort Method: quicksort  Memory: 1158kB
                           Worker 0:  Sort Method: quicksort  Memory: 1143kB
                           Worker 1:  Sort Method: quicksort  Memory: 1162kB
                           Worker 2:  Sort Method: quicksort  Memory: 1157kB
                           Worker 3:  Sort Method: quicksort  Memory: 1158kB
                           ->  Partial HashAggregate  (cost=117945.45..118069.69 rows=9939 width=36) (actual time=151.237..156.572 rows=9869 loops=5)
                                 Group Key: lineitem.l_suppkey
                                 Batches: 1  Memory Usage: 4497kB
                                 Worker 0:  Batches: 1  Memory Usage: 4497kB
                                 Worker 1:  Batches: 1  Memory Usage: 4497kB
                                 Worker 2:  Batches: 1  Memory Usage: 4497kB
                                 Worker 3:  Batches: 1  Memory Usage: 4497kB
                                 ->  Parallel Bitmap Heap Scan on lineitem  (cost=4037.30..117383.77 rows=56168 width=16) (actual time=34.125..114.330 rows=45191 loops=5)
                                       Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
                                       Heap Blocks: exact=14229
                                       ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..3981.13 rows=224670 width=0) (actual time=26.647..26.647 rows=225954 loops=1)
                                             Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1996-04-01'::date))
         ->  Index Scan using supplier_pkey on supplier  (cost=0.29..3.22 rows=1 width=71) (actual time=0.025..0.025 rows=1 loops=1)
               Index Cond: (s_suppkey = lineitem.l_suppkey)
 Planning Time: 1.402 ms
 Execution Time: 418.012 ms
(42 rows)

DROP VIEW
query 16 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27650.84..27650.84 rows=1 width=44) (actual time=280.998..281.412 rows=1 loops=1)
   ->  Sort  (cost=27650.84..27690.50 rows=15865 width=44) (actual time=280.997..281.410 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19845.70..27571.51 rows=15865 width=44) (actual time=190.509..276.936 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19845.70..26829.58 rows=58328 width=40) (actual time=190.484..238.622 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18845.64..18882.10 rows=14582 width=40) (actual time=166.143..167.976 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2701kB
                           Worker 0:  Sort Method: quicksort  Memory: 2707kB
                           Worker 1:  Sort Method: quicksort  Memory: 2569kB
                           Worker 2:  Sort Method: quicksort  Memory: 2410kB
                           Worker 3:  Sort Method: quicksort  Memory: 2669kB
                           ->  Parallel Hash Join  (cost=6682.66..17837.16 rows=14582 width=40) (actual time=34.559..104.814 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=6.795..59.500 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.492..5.949 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12152 width=40) (actual time=27.593..27.593 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12152 width=40) (actual time=0.289..24.985 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 16.103 ms
 Execution Time: 281.485 ms
(33 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=27650.84..27650.84 rows=1 width=44) (actual time=241.108..241.493 rows=1 loops=1)
   ->  Sort  (cost=27650.84..27690.50 rows=15865 width=44) (actual time=241.107..241.492 rows=1 loops=1)
         Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
         Sort Method: top-N heapsort  Memory: 25kB
         ->  GroupAggregate  (cost=19845.70..27571.51 rows=15865 width=44) (actual time=151.593..237.078 rows=18220 loops=1)
               Group Key: part.p_brand, part.p_type, part.p_size
               ->  Gather Merge  (cost=19845.70..26829.58 rows=58328 width=40) (actual time=151.570..199.169 rows=117930 loops=1)
                     Workers Planned: 4
                     Workers Launched: 4
                     ->  Sort  (cost=18845.64..18882.10 rows=14582 width=40) (actual time=135.811..137.588 rows=23586 loops=5)
                           Sort Key: part.p_brand, part.p_type, part.p_size
                           Sort Method: quicksort  Memory: 2525kB
                           Worker 0:  Sort Method: quicksort  Memory: 2559kB
                           Worker 1:  Sort Method: quicksort  Memory: 2367kB
                           Worker 2:  Sort Method: quicksort  Memory: 2745kB
                           Worker 3:  Sort Method: quicksort  Memory: 2860kB
                           ->  Parallel Hash Join  (cost=6682.66..17837.16 rows=14582 width=40) (actual time=18.276..74.021 rows=23586 loops=5)
                                 Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                                 ->  Parallel Index Only Scan using partsupp_pkey on partsupp  (cost=348.43..11240.43 rows=100000 width=8) (actual time=2.812..41.543 rows=159936 loops=5)
                                       Filter: (NOT (hashed SubPlan 1))
                                       Rows Removed by Filter: 64
                                       Heap Fetches: 0
                                       SubPlan 1
                                         ->  Seq Scan on supplier  (cost=0.00..348.00 rows=1 width=4) (actual time=0.082..2.762 rows=4 loops=5)
                                               Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                               Rows Removed by Filter: 9996
                                 ->  Parallel Hash  (cost=6182.33..6182.33 rows=12152 width=40) (actual time=15.147..15.148 rows=5898 loops=5)
                                       Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..6182.33 rows=12152 width=40) (actual time=0.011..11.841 rows=5898 loops=5)
                                             Filter: ((p_brand <> 'Brand#12'::bpchar) AND ((p_type)::text !~~ 'SMALL BRUSHED%'::text) AND (p_size = ANY ('{12,32,36,26,40,34,49,9}'::integer[])))
                                             Rows Removed by Filter: 34102
 Planning Time: 1.273 ms
 Execution Time: 241.553 ms
(33 rows)

query 17 run 1
SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178211.54..178211.55 rows=1 width=32) (actual time=2384.187..2387.224 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178211.54..178211.55 rows=1 width=32) (actual time=2384.185..2387.222 rows=1 loops=1)
         ->  Gather  (cost=178211.31..178211.52 rows=2 width=32) (actual time=2384.174..2387.213 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177211.31..177211.32 rows=1 width=32) (actual time=2371.409..2371.411 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.63..177209.22 rows=838 width=8) (actual time=309.709..2371.331 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.20..176977.75 rows=84 width=40) (actual time=309.405..2341.219 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.76..5351.98 rows=86 width=4) (actual time=23.525..23.560 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 28kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 28kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=86 width=4) (actual time=0.374..23.290 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169185.84 rows=195110 width=36) (actual time=0.565..2301.686 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136253.00 rows=6001238 width=9) (actual time=0.519..1438.975 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.399..0.431 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 22.743 ms
 Execution Time: 2387.967 ms
(27 rows)

SET
SET
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=178211.54..178211.55 rows=1 width=32) (actual time=2098.009..2103.124 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=178211.54..178211.55 rows=1 width=32) (actual time=2098.008..2103.121 rows=1 loops=1)
         ->  Gather  (cost=178211.31..178211.52 rows=2 width=32) (actual time=2069.995..2103.106 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=177211.31..177211.32 rows=1 width=32) (actual time=2083.045..2083.047 rows=1 loops=3)
                     ->  Nested Loop  (cost=5352.63..177209.22 rows=838 width=8) (actual time=195.792..2083.004 rows=197 loops=3)
                           Join Filter: (part.p_partkey = lineitem.l_partkey)
                           ->  Merge Join  (cost=5352.20..176977.75 rows=84 width=40) (actual time=195.774..2082.293 rows=69 loops=3)
                                 Merge Cond: (part.p_partkey = lineitem_1.l_partkey)
                                 ->  Sort  (cost=5351.76..5351.98 rows=86 width=4) (actual time=10.881..10.897 rows=69 loops=3)
                                       Sort Key: part.p_partkey
                                       Sort Method: quicksort  Memory: 29kB
                                       Worker 0:  Sort Method: quicksort  Memory: 27kB
                                       Worker 1:  Sort Method: quicksort  Memory: 27kB
                                       ->  Parallel Seq Scan on part  (cost=0.00..5349.00 rows=86 width=4) (actual time=0.082..10.678 rows=69 loops=3)
                                             Filter: ((p_brand = 'Brand#22'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                                             Rows Removed by Filter: 66597
                                 ->  GroupAggregate  (cost=0.43..169185.84 rows=195110 width=36) (actual time=0.070..2057.286 rows=198926 loops=3)
                                       Group Key: lineitem_1.l_partkey
                                       ->  Index Only Scan using q17_idx_1 on lineitem lineitem_1  (cost=0.43..136253.00 rows=6001238 width=9) (actual time=0.036..1237.401 rows=5968847 loops=3)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q9_idx_1 on lineitem  (cost=0.43..2.63 rows=10 width=17) (actual time=0.008..0.009 rows=3 loops=208)
                                 Index Cond: ((l_partkey = lineitem_1.l_partkey) AND (l_quantity < ((0.2 * avg(lineitem_1.l_quantity)))))
                                 Heap Fetches: 0
 Planning Time: 2.125 ms
 Execution Time: 2103.197 ms
(27 rows)

query 18 run 1
SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=707323.85..707324.10 rows=100 width=71) (actual time=2922.007..2922.012 rows=9 loops=1)
   ->  Sort  (cost=707323.85..712325.92 rows=2000825 width=71) (actual time=2922.006..2922.009 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=570672.70..630853.76 rows=2000825 width=71) (actual time=2921.619..2921.981 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=6985.74..445308.51 rows=2000825 width=44) (actual time=731.459..2921.550 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=13.74..433084.20 rows=2000825 width=25) (actual time=661.623..2851.678 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=0.86..260602.59 rows=500103 width=24) (actual time=500.794..2239.336 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.863..326.787 rows=1201687 loops=1)
                                 ->  GroupAggregate  (cost=0.43..188735.84 rows=500103 width=4) (actual time=391.114..1839.318 rows=9 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 1499991
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136225.00 rows=6001238 width=9) (actual time=0.267..702.185 rows=6001215 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136225.00 rows=6001238 width=9) (actual time=0.016..411.507 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=69.529..69.530 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.404..43.622 rows=150000 loops=1)
 Planning Time: 23.918 ms
 Execution Time: 2923.007 ms
(27 rows)

SET
SET
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=707323.85..707324.10 rows=100 width=71) (actual time=2545.446..2545.450 rows=9 loops=1)
   ->  Sort  (cost=707323.85..712325.92 rows=2000825 width=71) (actual time=2545.445..2545.448 rows=9 loops=1)
         Sort Key: orders.o_totalprice DESC, orders.o_orderdate
         Sort Method: quicksort  Memory: 25kB
         ->  HashAggregate  (cost=570672.70..630853.76 rows=2000825 width=71) (actual time=2545.071..2545.420 rows=9 loops=1)
               Group Key: customer.c_custkey, orders.o_orderkey
               Planned Partitions: 32  Batches: 1  Memory Usage: 3097kB
               ->  Hash Join  (cost=6985.74..445308.51 rows=2000825 width=44) (actual time=615.791..2545.009 rows=63 loops=1)
                     Hash Cond: (orders.o_custkey = customer.c_custkey)
                     ->  Merge Join  (cost=13.74..433084.20 rows=2000825 width=25) (actual time=573.403..2502.589 rows=63 loops=1)
                           Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Merge Join  (cost=0.86..260602.59 rows=500103 width=24) (actual time=412.664..1890.732 rows=9 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Index Scan using orders_pkey on orders  (cost=0.43..56864.43 rows=1500000 width=20) (actual time=0.013..165.439 rows=1201687 loops=1)
                                 ->  GroupAggregate  (cost=0.43..188735.84 rows=500103 width=4) (actual time=350.585..1656.545 rows=9 loops=1)
                                       Group Key: lineitem_1.l_orderkey
                                       Filter: (sum(lineitem_1.l_quantity) > '313'::numeric)
                                       Rows Removed by Filter: 1499991
                                       ->  Index Only Scan using q18_idx_1 on lineitem lineitem_1  (cost=0.43..136225.00 rows=6001238 width=9) (actual time=0.009..537.908 rows=6001215 loops=1)
                                             Heap Fetches: 0
                           ->  Index Only Scan using q18_idx_1 on lineitem  (cost=0.43..136225.00 rows=6001238 width=9) (actual time=0.012..410.493 rows=4807580 loops=1)
                                 Heap Fetches: 0
                     ->  Hash  (cost=5097.00..5097.00 rows=150000 width=23) (actual time=42.086..42.087 rows=150000 loops=1)
                           Buckets: 262144  Batches: 1  Memory Usage: 10252kB
                           ->  Seq Scan on customer  (cost=0.00..5097.00 rows=150000 width=23) (actual time=0.009..18.872 rows=150000 loops=1)
 Planning Time: 2.254 ms
 Execution Time: 2545.949 ms
(27 rows)

query 19 run 1
SET
SET
SET

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=9307.69..9307.70 rows=1 width=32) (actual time=127.040..128.479 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9307.69..9307.70 rows=1 width=32) (actual time=127.038..128.477 rows=1 loops=1)
         ->  Gather  (cost=9307.47..9307.68 rows=2 width=32) (actual time=126.995..128.468 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8307.47..8307.48 rows=1 width=32) (actual time=120.573..120.574 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8307.13 rows=45 width=12) (actual time=1.490..120.496 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=193 width=30) (actual time=0.486..29.469 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.518..0.537 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 23.070 ms
 Execution Time: 128.750 ms
(17 rows)

SET
SET
SET


 Limit  (cost=9307.69..9307.70 rows=1 width=32) (actual time=22.251..24.041 rows=1 loops=1)
   ->  Finalize Aggregate  (cost=9307.69..9307.70 rows=1 width=32) (actual time=22.250..24.039 rows=1 loops=1)
         ->  Gather  (cost=9307.47..9307.68 rows=2 width=32) (actual time=22.127..24.030 rows=3 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial Aggregate  (cost=8307.47..8307.48 rows=1 width=32) (actual time=19.601..19.602 rows=1 loops=3)
                     ->  Nested Loop  (cost=0.56..8307.13 rows=45 width=12) (actual time=0.398..19.564 rows=37 loops=3)
                           ->  Parallel Seq Scan on part  (cost=0.00..7640.67 rows=193 width=30) (actual time=0.131..17.538 rows=169 loops=3)
                                 Filter: ((p_size >= 1) AND (((p_brand = 'Brand#24'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#43'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#44'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                                 Rows Removed by Filter: 66498
                           ->  Index Only Scan using q19_idx_1 on lineitem  (cost=0.56..3.44 rows=1 width=21) (actual time=0.011..0.011 rows=0 loops=507)
                                 Index Cond: ((l_partkey = part.p_partkey) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar))
                                 Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#24'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#43'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#44'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                                 Rows Removed by Filter: 7
                                 Heap Fetches: 0
 Planning Time: 2.774 ms
 Execution Time: 24.295 ms
(17 rows)

query 20 run 1
SET
SET
SET
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=220430.44..220430.45 rows=1 width=51) (actual time=3558.264..3558.360 rows=1 loops=1)
   ->  Sort  (cost=220430.44..220430.45 rows=1 width=51) (actual time=3558.263..3558.358 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=191952.54..220430.43 rows=1 width=51) (actual time=3389.365..3558.161 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.543..3.881 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.223..0.226 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.313..2.892 rows=10000 loops=1)
               ->  Materialize  (cost=191952.54..219975.12 rows=1 width=8) (actual time=5.692..7.877 rows=4356 loops=438)
                     ->  Nested Loop  (cost=191952.54..219975.12 rows=1 width=8) (actual time=2493.036..3383.311 rows=5898 loops=1)
                           ->  Hash Join  (cost=191952.11..214334.02 rows=4908 width=44) (actual time=2492.688..3089.292 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=185944.60..202192.00 rows=485900 width=40) (actual time=2460.563..3011.214 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16477.69..142798.56 rows=917391 width=13) (actual time=128.604..1978.181 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16248.34 rows=917391 width=0) (actual time=111.850..111.850 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=32.105..32.197 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=9.037..31.769 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.283..19.714 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.049..0.049 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 27.368 ms
 Execution Time: 3563.569 ms
(42 rows)

SET
SET
SET
                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=220430.44..220430.45 rows=1 width=51) (actual time=1449.555..1449.663 rows=1 loops=1)
   ->  Sort  (cost=220430.44..220430.45 rows=1 width=51) (actual time=1449.554..1449.661 rows=1 loops=1)
         Sort Key: supplier.s_name
         Sort Method: top-N heapsort  Memory: 25kB
         ->  Nested Loop Semi Join  (cost=191952.54..220430.43 rows=1 width=51) (actual time=1283.020..1449.501 rows=196 loops=1)
               Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
               Rows Removed by Join Filter: 1907818
               ->  Nested Loop  (cost=0.00..449.31 rows=400 width=55) (actual time=0.031..1.727 rows=438 loops=1)
                     Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                     Rows Removed by Join Filter: 9562
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.016..0.019 rows=1 loops=1)
                           Filter: (n_name = 'IRAQ'::bpchar)
                           Rows Removed by Filter: 24
                     ->  Seq Scan on supplier  (cost=0.00..323.00 rows=10000 width=59) (actual time=0.011..0.620 rows=10000 loops=1)
               ->  Materialize  (cost=191952.54..219975.12 rows=1 width=8) (actual time=1.623..3.070 rows=4356 loops=438)
                     ->  Nested Loop  (cost=191952.54..219975.12 rows=1 width=8) (actual time=710.725..1279.888 rows=5898 loops=1)
                           ->  Hash Join  (cost=191952.11..214334.02 rows=4908 width=44) (actual time=710.703..1261.138 rows=5914 loops=1)
                                 Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                 ->  HashAggregate  (cost=185944.60..202192.00 rows=485900 width=40) (actual time=695.509..1207.924 rows=544869 loops=1)
                                       Group Key: lineitem.l_partkey, lineitem.l_suppkey
                                       Planned Partitions: 8  Batches: 9  Memory Usage: 34897kB  Disk Usage: 31704kB
                                       ->  Bitmap Heap Scan on lineitem  (cost=16477.69..142798.56 rows=917391 width=13) (actual time=92.570..300.211 rows=913487 loops=1)
                                             Recheck Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                             Heap Blocks: exact=104951
                                             ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..16248.34 rows=917391 width=0) (actual time=76.448..76.448 rows=913487 loops=1)
                                                   Index Cond: ((l_shipdate >= '1996-01-01'::date) AND (l_shipdate < '1997-01-01'::date))
                                 ->  Hash  (cost=5982.26..5982.26 rows=2020 width=4) (actual time=15.178..15.282 rows=2187 loops=1)
                                       Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 109kB
                                       ->  Gather Merge  (cost=1000.46..5982.26 rows=2020 width=4) (actual time=3.717..14.992 rows=2187 loops=1)
                                             Workers Planned: 3
                                             Workers Launched: 3
                                             ->  Parallel Index Only Scan using q20_idx_2 on part  (cost=0.42..4744.87 rows=652 width=4) (actual time=0.057..7.606 rows=547 loops=4)
                                                   Filter: ((p_name)::text ~~ 'olive%'::text)
                                                   Rows Removed by Filter: 49453
                                                   Heap Fetches: 0
                           ->  Index Only Scan using q20_idx_1 on partsupp  (cost=0.42..1.14 rows=1 width=12) (actual time=0.003..0.003 rows=1 loops=5914)
                                 Index Cond: ((ps_partkey = lineitem.l_partkey) AND (ps_suppkey = lineitem.l_suppkey))
                                 Filter: ((ps_availqty)::numeric > ((0.5 * sum(lineitem.l_quantity))))
                                 Rows Removed by Filter: 0
                                 Heap Fetches: 0
 Planning Time: 2.348 ms
 Execution Time: 1455.181 ms
(42 rows)

query 21 run 1
SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60976.14..60976.14 rows=1 width=34) (actual time=4761.183..4821.322 rows=100 loops=1)
   ->  Sort  (cost=60976.14..60976.14 rows=1 width=34) (actual time=4761.182..4821.314 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=60970.73..60976.13 rows=1 width=34) (actual time=1744.668..4820.134 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Semi Join  (cost=60970.73..60976.11 rows=1 width=26) (actual time=1691.833..4815.416 rows=4227 loops=1)
                     Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                     Rows Removed by Join Filter: 2768
                     ->  Nested Loop  (cost=60970.30..60973.68 rows=1 width=38) (actual time=1689.446..3695.851 rows=6909 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 158582
                           ->  Nested Loop  (cost=60970.30..60972.35 rows=1 width=42) (actual time=1689.118..3140.803 rows=165491 loops=1)
                                 ->  Gather Merge  (cost=60969.87..60969.99 rows=1 width=38) (actual time=1688.507..1880.318 rows=337680 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=59969.81..59969.82 rows=1 width=38) (actual time=1660.697..1670.134 rows=67536 loops=5)
                                             Sort Key: supplier.s_name
                                             Sort Method: quicksort  Memory: 8581kB
                                             Worker 0:  Sort Method: quicksort  Memory: 6518kB
                                             Worker 1:  Sort Method: quicksort  Memory: 8254kB
                                             Worker 2:  Sort Method: quicksort  Memory: 6488kB
                                             Worker 3:  Sort Method: quicksort  Memory: 8831kB
                                             ->  Nested Loop  (cost=32171.53..59969.80 rows=1 width=38) (actual time=724.662..1195.969 rows=67536 loops=5)
                                                   ->  Parallel Hash Anti Join  (cost=32171.25..59965.73 rows=1 width=8) (actual time=723.899..1039.933 rows=67536 loops=5)
                                                         Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                         Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                         Rows Removed by Join Filter: 275171
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25919.53 rows=500103 width=8) (actual time=0.060..108.577 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=25919.53..25919.53 rows=500103 width=8) (actual time=479.345..479.346 rows=758659 loops=5)
                                                               Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13472kB
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25919.53 rows=500103 width=8) (actual time=0.787..178.066 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                         Index Cond: (s_suppkey = l1.l_suppkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.003..0.003 rows=0 loops=337680)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.003 rows=1 loops=165491)
                                 Filter: (n_name = 'PERU'::bpchar)
                                 Rows Removed by Filter: 24
                     ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.161..0.161 rows=1 loops=6909)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Heap Fetches: 0
 Planning Time: 25.765 ms
 Execution Time: 4822.036 ms
(47 rows)

SET
SET
SET
                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=60976.14..60976.14 rows=1 width=34) (actual time=3109.657..3168.594 rows=100 loops=1)
   ->  Sort  (cost=60976.14..60976.14 rows=1 width=34) (actual time=3109.655..3168.587 rows=100 loops=1)
         Sort Key: (count(*)) DESC, supplier.s_name
         Sort Method: top-N heapsort  Memory: 37kB
         ->  GroupAggregate  (cost=60970.73..60976.13 rows=1 width=34) (actual time=1658.515..3167.952 rows=421 loops=1)
               Group Key: supplier.s_name
               ->  Nested Loop Semi Join  (cost=60970.73..60976.11 rows=1 width=26) (actual time=1657.091..3166.641 rows=4227 loops=1)
                     Join Filter: (l2.l_suppkey <> l1.l_suppkey)
                     Rows Removed by Join Filter: 2768
                     ->  Nested Loop  (cost=60970.30..60973.68 rows=1 width=38) (actual time=1657.082..3142.289 rows=6909 loops=1)
                           Join Filter: (supplier.s_nationkey = nation.n_nationkey)
                           Rows Removed by Join Filter: 158582
                           ->  Nested Loop  (cost=60970.30..60972.35 rows=1 width=42) (actual time=1657.070..2627.910 rows=165491 loops=1)
                                 ->  Gather Merge  (cost=60969.87..60969.99 rows=1 width=38) (actual time=1657.031..1834.018 rows=337680 loops=1)
                                       Workers Planned: 4
                                       Workers Launched: 4
                                       ->  Sort  (cost=59969.81..59969.82 rows=1 width=38) (actual time=1561.706..1570.751 rows=67536 loops=5)
                                             Sort Key: supplier.s_name
                                             Sort Method: quicksort  Memory: 9317kB
                                             Worker 0:  Sort Method: quicksort  Memory: 8273kB
                                             Worker 1:  Sort Method: quicksort  Memory: 5753kB
                                             Worker 2:  Sort Method: quicksort  Memory: 6615kB
                                             Worker 3:  Sort Method: quicksort  Memory: 8714kB
                                             ->  Nested Loop  (cost=32171.53..59969.80 rows=1 width=38) (actual time=656.640..1121.356 rows=67536 loops=5)
                                                   ->  Parallel Hash Anti Join  (cost=32171.25..59965.73 rows=1 width=8) (actual time=656.608..983.939 rows=67536 loops=5)
                                                         Hash Cond: (l1.l_orderkey = l3.l_orderkey)
                                                         Join Filter: (l3.l_suppkey <> l1.l_suppkey)
                                                         Rows Removed by Join Filter: 275171
                                                         ->  Parallel Index Only Scan using q21_idx_2 on lineitem l1  (cost=0.43..25919.53 rows=500103 width=8) (actual time=0.023..107.992 rows=758659 loops=5)
                                                               Heap Fetches: 0
                                                         ->  Parallel Hash  (cost=25919.53..25919.53 rows=500103 width=8) (actual time=406.220..406.221 rows=758659 loops=5)
                                                               Buckets: 524288 (originally 2097152)  Batches: 16 (originally 1)  Memory Usage: 13472kB
                                                               ->  Parallel Index Only Scan using q21_idx_2 on lineitem l3  (cost=0.43..25919.53 rows=500103 width=8) (actual time=0.485..102.053 rows=758659 loops=5)
                                                                     Heap Fetches: 0
                                                   ->  Index Scan using supplier_pkey on supplier  (cost=0.29..4.07 rows=1 width=34) (actual time=0.002..0.002 rows=1 loops=337680)
                                                         Index Cond: (s_suppkey = l1.l_suppkey)
                                 ->  Index Only Scan using q21_idx_3 on orders  (cost=0.43..2.36 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=337680)
                                       Index Cond: ((o_orderkey = l1.l_orderkey) AND (o_orderstatus = 'F'::bpchar))
                                       Heap Fetches: 0
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=165491)
                                 Filter: (n_name = 'PERU'::bpchar)
                                 Rows Removed by Filter: 24
                     ->  Index Only Scan using q21_idx_1 on lineitem l2  (cost=0.43..2.42 rows=4 width=8) (actual time=0.003..0.003 rows=1 loops=6909)
                           Index Cond: (l_orderkey = orders.o_orderkey)
                           Heap Fetches: 0
 Planning Time: 2.991 ms
 Execution Time: 3168.680 ms
(47 rows)

query 22 run 1
SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.30 rows=1 width=72) (actual time=165.392..167.137 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=44.710..44.786 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=44.595..44.770 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=37.631..37.632 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1988 width=6) (actual time=0.099..36.351 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7513.59 rows=717 width=72) (actual time=165.391..167.063 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7495.66 rows=717 width=38) (actual time=70.884..166.577 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=70.172..73.294 rows=2734 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.478..22.630 rows=1544 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 765kB
                           Worker 0:  Sort Method: quicksort  Memory: 651kB
                           Worker 1:  Sort Method: quicksort  Memory: 651kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.020..20.219 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.033..0.033 rows=1 loops=2734)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 14.210 ms
 Execution Time: 167.885 ms
(30 rows)

SET
SET
SET
                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=12515.57..12517.30 rows=1 width=72) (actual time=59.922..61.510 rows=1 loops=1)
   InitPlan 1 (returns $1)
     ->  Finalize Aggregate  (cost=6242.82..6242.83 rows=1 width=32) (actual time=28.873..28.952 rows=1 loops=1)
           ->  Gather  (cost=6242.60..6242.81 rows=2 width=32) (actual time=28.785..28.934 rows=3 loops=1)
                 Workers Planned: 2
                 Workers Launched: 2
                 ->  Partial Aggregate  (cost=5242.60..5242.61 rows=1 width=32) (actual time=26.440..26.441 rows=1 loops=3)
                       ->  Parallel Seq Scan on customer customer_1  (cost=0.00..5237.62 rows=1988 width=6) (actual time=0.017..25.278 rows=12672 loops=3)
                             Filter: ((c_acctbal > 0.00) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                             Rows Removed by Filter: 37328
   ->  GroupAggregate  (cost=6272.74..7513.59 rows=717 width=72) (actual time=59.921..61.429 rows=1 loops=1)
         Group Key: "substring"((customer.c_phone)::text, 1, 2)
         ->  Nested Loop Anti Join  (cost=6272.74..7495.66 rows=717 width=38) (actual time=53.627..61.220 rows=952 loops=1)
               ->  Gather Merge  (cost=6272.31..6476.13 rows=1750 width=26) (actual time=53.591..55.779 rows=2738 loops=1)
                     Workers Planned: 2
                     Params Evaluated: $1
                     Workers Launched: 2
                     ->  Sort  (cost=5272.29..5274.11 rows=729 width=26) (actual time=22.078..22.158 rows=1550 loops=3)
                           Sort Key: ("substring"((customer.c_phone)::text, 1, 2))
                           Sort Method: quicksort  Memory: 770kB
                           Worker 0:  Sort Method: quicksort  Memory: 646kB
                           Worker 1:  Sort Method: quicksort  Memory: 651kB
                           ->  Parallel Seq Scan on customer  (cost=0.00..5237.62 rows=729 width=26) (actual time=0.016..19.819 rows=6359 loops=3)
                                 Filter: ((c_acctbal > $1) AND ("substring"((c_phone)::text, 1, 2) = ANY ('{21,29,26,34,14,15,17}'::text[])))
                                 Rows Removed by Filter: 43641
               ->  Index Only Scan using idx_orders_custkey on orders  (cost=0.43..2.00 rows=17 width=4) (actual time=0.002..0.002 rows=1 loops=2738)
                     Index Cond: (o_custkey = customer.c_custkey)
                     Heap Fetches: 0
 Planning Time: 1.215 ms
 Execution Time: 61.577 ms
(30 rows)

